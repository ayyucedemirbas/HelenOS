
usbflbk:     file format elf32-i386


Disassembly of section .init:

000010f4 <__entry>:
    10f4:	66 8c d0             	mov    %ss,%ax
    10f7:	8e d8                	mov    %eax,%ds
    10f9:	8e c0                	mov    %eax,%es
    10fb:	8e e0                	mov    %eax,%fs
    10fd:	b8 01 00 00 00       	mov    $0x1,%eax
    1102:	0f a2                	cpuid  
    1104:	0f ba e2 0b          	bt     $0xb,%edx
    1108:	73 0c                	jae    1116 <__entry+0x22>
    110a:	8d 05 40 19 01 00    	lea    0x11940,%eax
    1110:	c7 00 70 f9 00 00    	movl   $0xf970,(%eax)
    1116:	6a 00                	push   $0x0
    1118:	6a 00                	push   $0x0
    111a:	89 e5                	mov    %esp,%ebp
    111c:	57                   	push   %edi
    111d:	e8 de e3 00 00       	call   f500 <__main@plt>

Disassembly of section .text:

00001140 <usbfallback_device_add>:
    1140:	55                   	push   %ebp
    1141:	89 e5                	mov    %esp,%ebp
    1143:	56                   	push   %esi
    1144:	53                   	push   %ebx
    1145:	83 ec 0c             	sub    $0xc,%esp
    1148:	8b 5d 08             	mov    0x8(%ebp),%ebx
    114b:	53                   	push   %ebx
    114c:	e8 ff 10 00 00       	call   2250 <usb_device_get_name>
    1151:	89 1c 24             	mov    %ebx,(%esp)
    1154:	89 c6                	mov    %eax,%esi
    1156:	e8 f5 07 00 00       	call   1950 <usb_device_get_iface_number>
    115b:	83 c4 10             	add    $0x10,%esp
    115e:	85 c0                	test   %eax,%eax
    1160:	78 26                	js     1188 <usbfallback_device_add+0x48>
    1162:	b8 b5 d4 00 00       	mov    $0xd4b5,%eax
    1167:	83 ec 0c             	sub    $0xc,%esp
    116a:	56                   	push   %esi
    116b:	50                   	push   %eax
    116c:	68 d0 d4 00 00       	push   $0xd4d0
    1171:	6a 03                	push   $0x3
    1173:	6a ff                	push   $0xffffffff
    1175:	e8 06 e5 00 00       	call   f680 <log_msg@plt>
    117a:	8d 65 f8             	lea    -0x8(%ebp),%esp
    117d:	31 c0                	xor    %eax,%eax
    117f:	5b                   	pop    %ebx
    1180:	5e                   	pop    %esi
    1181:	5d                   	pop    %ebp
    1182:	c3                   	ret    
    1183:	90                   	nop
    1184:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1188:	b8 ae d4 00 00       	mov    $0xd4ae,%eax
    118d:	eb d8                	jmp    1167 <usbfallback_device_add+0x27>
    118f:	90                   	nop

00001190 <usbfallback_device_gone>:
    1190:	55                   	push   %ebp
    1191:	89 e5                	mov    %esp,%ebp
    1193:	83 ec 08             	sub    $0x8,%esp
    1196:	8b 4d 08             	mov    0x8(%ebp),%ecx
    1199:	85 c9                	test   %ecx,%ecx
    119b:	74 04                	je     11a1 <usbfallback_device_gone+0x11>
    119d:	31 c0                	xor    %eax,%eax
    119f:	c9                   	leave  
    11a0:	c3                   	ret    
    11a1:	50                   	push   %eax
    11a2:	6a 3f                	push   $0x3f
    11a4:	68 bf d4 00 00       	push   $0xd4bf
    11a9:	68 84 d5 00 00       	push   $0xd584
    11ae:	e8 1d e5 00 00       	call   f6d0 <assert_abort@plt>
    11b3:	66 90                	xchg   %ax,%ax
    11b5:	66 90                	xchg   %ax,%ax
    11b7:	66 90                	xchg   %ax,%ax
    11b9:	66 90                	xchg   %ax,%ax
    11bb:	66 90                	xchg   %ax,%ax
    11bd:	66 90                	xchg   %ax,%ax
    11bf:	90                   	nop

000011c0 <main>:
    11c0:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    11c4:	83 e4 f0             	and    $0xfffffff0,%esp
    11c7:	ff 71 fc             	pushl  -0x4(%ecx)
    11ca:	55                   	push   %ebp
    11cb:	89 e5                	mov    %esp,%ebp
    11cd:	51                   	push   %ecx
    11ce:	83 ec 10             	sub    $0x10,%esp
    11d1:	68 c6 d4 00 00       	push   $0xd4c6
    11d6:	e8 d5 e3 00 00       	call   f5b0 <log_init@plt>
    11db:	c7 04 24 f0 d4 00 00 	movl   $0xd4f0,(%esp)
    11e2:	e8 29 02 00 00       	call   1410 <usb_driver_main>
    11e7:	8b 4d fc             	mov    -0x4(%ebp),%ecx
    11ea:	c9                   	leave  
    11eb:	8d 61 fc             	lea    -0x4(%ecx),%esp
    11ee:	c3                   	ret    
    11ef:	90                   	nop

000011f0 <generic_device_add>:
    11f0:	55                   	push   %ebp
    11f1:	89 e5                	mov    %esp,%ebp
    11f3:	57                   	push   %edi
    11f4:	56                   	push   %esi
    11f5:	53                   	push   %ebx
    11f6:	83 ec 2c             	sub    $0x2c,%esp
    11f9:	a1 50 19 01 00       	mov    0x11950,%eax
    11fe:	8b 75 08             	mov    0x8(%ebp),%esi
    1201:	85 c0                	test   %eax,%eax
    1203:	0f 84 d5 00 00 00    	je     12de <generic_device_add+0xee>
    1209:	8b 50 08             	mov    0x8(%eax),%edx
    120c:	85 d2                	test   %edx,%edx
    120e:	0f 84 b8 00 00 00    	je     12cc <generic_device_add+0xdc>
    1214:	8b 12                	mov    (%edx),%edx
    1216:	85 d2                	test   %edx,%edx
    1218:	0f 84 9c 00 00 00    	je     12ba <generic_device_add+0xca>
    121e:	53                   	push   %ebx
    121f:	8d 55 e4             	lea    -0x1c(%ebp),%edx
    1222:	8b 78 04             	mov    0x4(%eax),%edi
    1225:	52                   	push   %edx
    1226:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    122d:	57                   	push   %edi
    122e:	56                   	push   %esi
    122f:	e8 dc 07 00 00       	call   1a10 <usb_device_create_ddf>
    1234:	83 c4 10             	add    $0x10,%esp
    1237:	89 c3                	mov    %eax,%ebx
    1239:	85 c0                	test   %eax,%eax
    123b:	75 43                	jne    1280 <generic_device_add+0x90>
    123d:	a1 50 19 01 00       	mov    0x11950,%eax
    1242:	83 ec 0c             	sub    $0xc,%esp
    1245:	8b 40 08             	mov    0x8(%eax),%eax
    1248:	8b 18                	mov    (%eax),%ebx
    124a:	56                   	push   %esi
    124b:	e8 90 3a 00 00       	call   4ce0 <ddf_dev_data_get>
    1250:	89 04 24             	mov    %eax,(%esp)
    1253:	ff d3                	call   *%ebx
    1255:	83 c4 10             	add    $0x10,%esp
    1258:	89 c3                	mov    %eax,%ebx
    125a:	85 c0                	test   %eax,%eax
    125c:	75 0a                	jne    1268 <generic_device_add+0x78>
    125e:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1261:	89 d8                	mov    %ebx,%eax
    1263:	5b                   	pop    %ebx
    1264:	5e                   	pop    %esi
    1265:	5f                   	pop    %edi
    1266:	5d                   	pop    %ebp
    1267:	c3                   	ret    
    1268:	83 ec 0c             	sub    $0xc,%esp
    126b:	56                   	push   %esi
    126c:	e8 6f 0b 00 00       	call   1de0 <usb_device_destroy_ddf>
    1271:	83 c4 10             	add    $0x10,%esp
    1274:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1277:	89 d8                	mov    %ebx,%eax
    1279:	5b                   	pop    %ebx
    127a:	5e                   	pop    %esi
    127b:	5f                   	pop    %edi
    127c:	5d                   	pop    %ebp
    127d:	c3                   	ret    
    127e:	66 90                	xchg   %ax,%ax
    1280:	83 ec 0c             	sub    $0xc,%esp
    1283:	50                   	push   %eax
    1284:	e8 37 e6 00 00       	call   f8c0 <str_error@plt>
    1289:	89 34 24             	mov    %esi,(%esp)
    128c:	8b 7d e4             	mov    -0x1c(%ebp),%edi
    128f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    1292:	e8 69 3a 00 00       	call   4d00 <ddf_dev_get_name>
    1297:	5a                   	pop    %edx
    1298:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    129b:	59                   	pop    %ecx
    129c:	52                   	push   %edx
    129d:	57                   	push   %edi
    129e:	50                   	push   %eax
    129f:	68 4c d5 00 00       	push   $0xd54c
    12a4:	6a 01                	push   $0x1
    12a6:	6a ff                	push   $0xffffffff
    12a8:	e8 d3 e3 00 00       	call   f680 <log_msg@plt>
    12ad:	83 c4 20             	add    $0x20,%esp
    12b0:	8d 65 f4             	lea    -0xc(%ebp),%esp
    12b3:	89 d8                	mov    %ebx,%eax
    12b5:	5b                   	pop    %ebx
    12b6:	5e                   	pop    %esi
    12b7:	5f                   	pop    %edi
    12b8:	5d                   	pop    %ebp
    12b9:	c3                   	ret    
    12ba:	50                   	push   %eax
    12bb:	6a 3a                	push   $0x3a
    12bd:	68 08 d5 00 00       	push   $0xd508
    12c2:	68 28 d5 00 00       	push   $0xd528
    12c7:	e8 04 e4 00 00       	call   f6d0 <assert_abort@plt>
    12cc:	51                   	push   %ecx
    12cd:	6a 39                	push   $0x39
    12cf:	68 08 d5 00 00       	push   $0xd508
    12d4:	68 1c d5 00 00       	push   $0xd51c
    12d9:	e8 f2 e3 00 00       	call   f6d0 <assert_abort@plt>
    12de:	53                   	push   %ebx
    12df:	6a 38                	push   $0x38
    12e1:	68 08 d5 00 00       	push   $0xd508
    12e6:	68 15 d5 00 00       	push   $0xd515
    12eb:	e8 e0 e3 00 00       	call   f6d0 <assert_abort@plt>

000012f0 <generic_device_gone>:
    12f0:	55                   	push   %ebp
    12f1:	89 e5                	mov    %esp,%ebp
    12f3:	53                   	push   %ebx
    12f4:	83 ec 14             	sub    $0x14,%esp
    12f7:	a1 50 19 01 00       	mov    0x11950,%eax
    12fc:	8b 5d 08             	mov    0x8(%ebp),%ebx
    12ff:	85 c0                	test   %eax,%eax
    1301:	74 5e                	je     1361 <generic_device_gone+0x71>
    1303:	8b 40 08             	mov    0x8(%eax),%eax
    1306:	85 c0                	test   %eax,%eax
    1308:	74 45                	je     134f <generic_device_gone+0x5f>
    130a:	8b 40 08             	mov    0x8(%eax),%eax
    130d:	85 c0                	test   %eax,%eax
    130f:	74 37                	je     1348 <generic_device_gone+0x58>
    1311:	83 ec 0c             	sub    $0xc,%esp
    1314:	53                   	push   %ebx
    1315:	e8 c6 39 00 00       	call   4ce0 <ddf_dev_data_get>
    131a:	8b 15 50 19 01 00    	mov    0x11950,%edx
    1320:	8b 52 08             	mov    0x8(%edx),%edx
    1323:	89 04 24             	mov    %eax,(%esp)
    1326:	ff 52 08             	call   *0x8(%edx)
    1329:	83 c4 10             	add    $0x10,%esp
    132c:	85 c0                	test   %eax,%eax
    132e:	75 12                	jne    1342 <generic_device_gone+0x52>
    1330:	83 ec 0c             	sub    $0xc,%esp
    1333:	89 45 f4             	mov    %eax,-0xc(%ebp)
    1336:	53                   	push   %ebx
    1337:	e8 a4 0a 00 00       	call   1de0 <usb_device_destroy_ddf>
    133c:	83 c4 10             	add    $0x10,%esp
    133f:	8b 45 f4             	mov    -0xc(%ebp),%eax
    1342:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1345:	c9                   	leave  
    1346:	c3                   	ret    
    1347:	90                   	nop
    1348:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    134d:	eb f3                	jmp    1342 <generic_device_gone+0x52>
    134f:	52                   	push   %edx
    1350:	6a 6c                	push   $0x6c
    1352:	68 08 d5 00 00       	push   $0xd508
    1357:	68 1c d5 00 00       	push   $0xd51c
    135c:	e8 6f e3 00 00       	call   f6d0 <assert_abort@plt>
    1361:	51                   	push   %ecx
    1362:	6a 6b                	push   $0x6b
    1364:	68 08 d5 00 00       	push   $0xd508
    1369:	68 15 d5 00 00       	push   $0xd515
    136e:	e8 5d e3 00 00       	call   f6d0 <assert_abort@plt>
    1373:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1379:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00001380 <generic_device_remove>:
    1380:	55                   	push   %ebp
    1381:	89 e5                	mov    %esp,%ebp
    1383:	53                   	push   %ebx
    1384:	83 ec 14             	sub    $0x14,%esp
    1387:	a1 50 19 01 00       	mov    0x11950,%eax
    138c:	8b 5d 08             	mov    0x8(%ebp),%ebx
    138f:	85 c0                	test   %eax,%eax
    1391:	74 5e                	je     13f1 <generic_device_remove+0x71>
    1393:	8b 40 08             	mov    0x8(%eax),%eax
    1396:	85 c0                	test   %eax,%eax
    1398:	74 45                	je     13df <generic_device_remove+0x5f>
    139a:	8b 40 04             	mov    0x4(%eax),%eax
    139d:	85 c0                	test   %eax,%eax
    139f:	74 37                	je     13d8 <generic_device_remove+0x58>
    13a1:	83 ec 0c             	sub    $0xc,%esp
    13a4:	53                   	push   %ebx
    13a5:	e8 36 39 00 00       	call   4ce0 <ddf_dev_data_get>
    13aa:	8b 15 50 19 01 00    	mov    0x11950,%edx
    13b0:	8b 52 08             	mov    0x8(%edx),%edx
    13b3:	89 04 24             	mov    %eax,(%esp)
    13b6:	ff 52 04             	call   *0x4(%edx)
    13b9:	83 c4 10             	add    $0x10,%esp
    13bc:	85 c0                	test   %eax,%eax
    13be:	75 12                	jne    13d2 <generic_device_remove+0x52>
    13c0:	83 ec 0c             	sub    $0xc,%esp
    13c3:	89 45 f4             	mov    %eax,-0xc(%ebp)
    13c6:	53                   	push   %ebx
    13c7:	e8 14 0a 00 00       	call   1de0 <usb_device_destroy_ddf>
    13cc:	83 c4 10             	add    $0x10,%esp
    13cf:	8b 45 f4             	mov    -0xc(%ebp),%eax
    13d2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    13d5:	c9                   	leave  
    13d6:	c3                   	ret    
    13d7:	90                   	nop
    13d8:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    13dd:	eb f3                	jmp    13d2 <generic_device_remove+0x52>
    13df:	52                   	push   %edx
    13e0:	6a 56                	push   $0x56
    13e2:	68 08 d5 00 00       	push   $0xd508
    13e7:	68 1c d5 00 00       	push   $0xd51c
    13ec:	e8 df e2 00 00       	call   f6d0 <assert_abort@plt>
    13f1:	51                   	push   %ecx
    13f2:	6a 55                	push   $0x55
    13f4:	68 08 d5 00 00       	push   $0xd508
    13f9:	68 15 d5 00 00       	push   $0xd515
    13fe:	e8 cd e2 00 00       	call   f6d0 <assert_abort@plt>
    1403:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1409:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00001410 <usb_driver_main>:
    1410:	55                   	push   %ebp
    1411:	89 e5                	mov    %esp,%ebp
    1413:	83 ec 08             	sub    $0x8,%esp
    1416:	8b 45 08             	mov    0x8(%ebp),%eax
    1419:	85 c0                	test   %eax,%eax
    141b:	74 1a                	je     1437 <usb_driver_main+0x27>
    141d:	8b 10                	mov    (%eax),%edx
    141f:	a3 50 19 01 00       	mov    %eax,0x11950
    1424:	89 15 b4 17 01 00    	mov    %edx,0x117b4
    142a:	c7 45 08 b4 17 01 00 	movl   $0x117b4,0x8(%ebp)
    1431:	c9                   	leave  
    1432:	e9 f9 3f 00 00       	jmp    5430 <ddf_driver_main>
    1437:	50                   	push   %eax
    1438:	68 8a 00 00 00       	push   $0x8a
    143d:	68 08 d5 00 00       	push   $0xd508
    1442:	68 40 d5 00 00       	push   $0xd540
    1447:	e8 84 e2 00 00       	call   f6d0 <assert_abort@plt>
    144c:	66 90                	xchg   %ax,%ax
    144e:	66 90                	xchg   %ax,%ax

00001450 <usb_device_create_pipes>:
    1450:	55                   	push   %ebp
    1451:	89 e5                	mov    %esp,%ebp
    1453:	57                   	push   %edi
    1454:	56                   	push   %esi
    1455:	53                   	push   %ebx
    1456:	83 ec 1c             	sub    $0x1c,%esp
    1459:	8b 45 08             	mov    0x8(%ebp),%eax
    145c:	8b 55 0c             	mov    0xc(%ebp),%edx
    145f:	85 c0                	test   %eax,%eax
    1461:	0f 84 92 01 00 00    	je     15f9 <usb_device_create_pipes+0x1a9>
    1467:	8b 45 08             	mov    0x8(%ebp),%eax
    146a:	8b 70 50             	mov    0x50(%eax),%esi
    146d:	85 f6                	test   %esi,%esi
    146f:	0f 84 6f 01 00 00    	je     15e4 <usb_device_create_pipes+0x194>
    1475:	8b 48 24             	mov    0x24(%eax),%ecx
    1478:	85 c9                	test   %ecx,%ecx
    147a:	0f 85 a3 01 00 00    	jne    1623 <usb_device_create_pipes+0x1d3>
    1480:	8b 58 28             	mov    0x28(%eax),%ebx
    1483:	85 db                	test   %ebx,%ebx
    1485:	0f 85 83 01 00 00    	jne    160e <usb_device_create_pipes+0x1be>
    148b:	85 d2                	test   %edx,%edx
    148d:	0f 84 0c 01 00 00    	je     159f <usb_device_create_pipes+0x14f>
    1493:	8b 02                	mov    (%edx),%eax
    1495:	85 c0                	test   %eax,%eax
    1497:	0f 84 02 01 00 00    	je     159f <usb_device_create_pipes+0x14f>
    149d:	8d 76 00             	lea    0x0(%esi),%esi
    14a0:	43                   	inc    %ebx
    14a1:	8b 04 9a             	mov    (%edx,%ebx,4),%eax
    14a4:	85 c0                	test   %eax,%eax
    14a6:	75 f8                	jne    14a0 <usb_device_create_pipes+0x50>
    14a8:	89 55 e0             	mov    %edx,-0x20(%ebp)
    14ab:	50                   	push   %eax
    14ac:	50                   	push   %eax
    14ad:	6a 34                	push   $0x34
    14af:	53                   	push   %ebx
    14b0:	e8 3b e2 00 00       	call   f6f0 <calloc@plt>
    14b5:	83 c4 10             	add    $0x10,%esp
    14b8:	89 c1                	mov    %eax,%ecx
    14ba:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    14bd:	85 c0                	test   %eax,%eax
    14bf:	0f 84 13 01 00 00    	je     15d8 <usb_device_create_pipes+0x188>
    14c5:	8b 45 08             	mov    0x8(%ebp),%eax
    14c8:	8b 55 e0             	mov    -0x20(%ebp),%edx
    14cb:	89 5d e0             	mov    %ebx,-0x20(%ebp)
    14ce:	8b 78 2c             	mov    0x2c(%eax),%edi
    14d1:	8b 70 38             	mov    0x38(%eax),%esi
    14d4:	89 d0                	mov    %edx,%eax
    14d6:	8d 51 1c             	lea    0x1c(%ecx),%edx
    14d9:	8d 0c 98             	lea    (%eax,%ebx,4),%ecx
    14dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    14e0:	8b 18                	mov    (%eax),%ebx
    14e2:	83 c0 04             	add    $0x4,%eax
    14e5:	89 1a                	mov    %ebx,(%edx)
    14e7:	89 7a 04             	mov    %edi,0x4(%edx)
    14ea:	89 72 08             	mov    %esi,0x8(%edx)
    14ed:	83 c2 34             	add    $0x34,%edx
    14f0:	39 c1                	cmp    %eax,%ecx
    14f2:	75 ec                	jne    14e0 <usb_device_create_pipes+0x90>
    14f4:	8b 45 08             	mov    0x8(%ebp),%eax
    14f7:	83 ec 0c             	sub    $0xc,%esp
    14fa:	8b 5d e0             	mov    -0x20(%ebp),%ebx
    14fd:	8b 30                	mov    (%eax),%esi
    14ff:	8b 78 54             	mov    0x54(%eax),%edi
    1502:	56                   	push   %esi
    1503:	57                   	push   %edi
    1504:	8b 40 50             	mov    0x50(%eax),%eax
    1507:	50                   	push   %eax
    1508:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    150b:	53                   	push   %ebx
    150c:	50                   	push   %eax
    150d:	e8 4e 14 00 00       	call   2960 <usb_pipe_initialize_from_configuration>
    1512:	83 c4 20             	add    $0x20,%esp
    1515:	89 45 e0             	mov    %eax,-0x20(%ebp)
    1518:	85 c0                	test   %eax,%eax
    151a:	0f 85 8b 00 00 00    	jne    15ab <usb_device_create_pipes+0x15b>
    1520:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    1523:	8b 7d e4             	mov    -0x1c(%ebp),%edi
    1526:	89 7d dc             	mov    %edi,-0x24(%ebp)
    1529:	8d 04 83             	lea    (%ebx,%eax,4),%eax
    152c:	8d 34 87             	lea    (%edi,%eax,4),%esi
    152f:	eb 0e                	jmp    153f <usb_device_create_pipes+0xef>
    1531:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1538:	83 c7 34             	add    $0x34,%edi
    153b:	39 fe                	cmp    %edi,%esi
    153d:	74 49                	je     1588 <usb_device_create_pipes+0x138>
    153f:	80 7f 30 00          	cmpb   $0x0,0x30(%edi)
    1543:	74 f3                	je     1538 <usb_device_create_pipes+0xe8>
    1545:	52                   	push   %edx
    1546:	52                   	push   %edx
    1547:	8b 47 28             	mov    0x28(%edi),%eax
    154a:	8a 48 06             	mov    0x6(%eax),%cl
    154d:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    1553:	51                   	push   %ecx
    1554:	57                   	push   %edi
    1555:	e8 d6 12 00 00       	call   2830 <usb_pipe_register>
    155a:	83 c4 10             	add    $0x10,%esp
    155d:	85 c0                	test   %eax,%eax
    155f:	74 d7                	je     1538 <usb_device_create_pipes+0xe8>
    1561:	89 c7                	mov    %eax,%edi
    1563:	8b 5d dc             	mov    -0x24(%ebp),%ebx
    1566:	eb 07                	jmp    156f <usb_device_create_pipes+0x11f>
    1568:	83 c3 34             	add    $0x34,%ebx
    156b:	39 de                	cmp    %ebx,%esi
    156d:	74 50                	je     15bf <usb_device_create_pipes+0x16f>
    156f:	80 7b 30 00          	cmpb   $0x0,0x30(%ebx)
    1573:	74 f3                	je     1568 <usb_device_create_pipes+0x118>
    1575:	83 ec 0c             	sub    $0xc,%esp
    1578:	53                   	push   %ebx
    1579:	e8 52 13 00 00       	call   28d0 <usb_pipe_unregister>
    157e:	83 c4 10             	add    $0x10,%esp
    1581:	eb e5                	jmp    1568 <usb_device_create_pipes+0x118>
    1583:	90                   	nop
    1584:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1588:	8b 45 08             	mov    0x8(%ebp),%eax
    158b:	8b 75 e4             	mov    -0x1c(%ebp),%esi
    158e:	89 70 24             	mov    %esi,0x24(%eax)
    1591:	89 58 28             	mov    %ebx,0x28(%eax)
    1594:	8b 45 e0             	mov    -0x20(%ebp),%eax
    1597:	8d 65 f4             	lea    -0xc(%ebp),%esp
    159a:	5b                   	pop    %ebx
    159b:	5e                   	pop    %esi
    159c:	5f                   	pop    %edi
    159d:	5d                   	pop    %ebp
    159e:	c3                   	ret    
    159f:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    15a6:	8b 45 e0             	mov    -0x20(%ebp),%eax
    15a9:	eb ec                	jmp    1597 <usb_device_create_pipes+0x147>
    15ab:	83 ec 0c             	sub    $0xc,%esp
    15ae:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    15b1:	51                   	push   %ecx
    15b2:	e8 e9 e3 00 00       	call   f9a0 <free@plt>
    15b7:	83 c4 10             	add    $0x10,%esp
    15ba:	8b 45 e0             	mov    -0x20(%ebp),%eax
    15bd:	eb d8                	jmp    1597 <usb_device_create_pipes+0x147>
    15bf:	83 ec 0c             	sub    $0xc,%esp
    15c2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    15c5:	89 7d e0             	mov    %edi,-0x20(%ebp)
    15c8:	50                   	push   %eax
    15c9:	e8 d2 e3 00 00       	call   f9a0 <free@plt>
    15ce:	8b 55 e0             	mov    -0x20(%ebp),%edx
    15d1:	83 c4 10             	add    $0x10,%esp
    15d4:	89 d0                	mov    %edx,%eax
    15d6:	eb bf                	jmp    1597 <usb_device_create_pipes+0x147>
    15d8:	c7 45 e0 fe ff ff ff 	movl   $0xfffffffe,-0x20(%ebp)
    15df:	8b 45 e0             	mov    -0x20(%ebp),%eax
    15e2:	eb b3                	jmp    1597 <usb_device_create_pipes+0x147>
    15e4:	53                   	push   %ebx
    15e5:	68 df 00 00 00       	push   $0xdf
    15ea:	68 73 d5 00 00       	push   $0xd573
    15ef:	68 3c d6 00 00       	push   $0xd63c
    15f4:	e8 d7 e0 00 00       	call   f6d0 <assert_abort@plt>
    15f9:	57                   	push   %edi
    15fa:	68 de 00 00 00       	push   $0xde
    15ff:	68 73 d5 00 00       	push   $0xd573
    1604:	68 80 d5 00 00       	push   $0xd580
    1609:	e8 c2 e0 00 00       	call   f6d0 <assert_abort@plt>
    160e:	50                   	push   %eax
    160f:	68 e1 00 00 00       	push   $0xe1
    1614:	68 73 d5 00 00       	push   $0xd573
    1619:	68 9f d5 00 00       	push   $0xd59f
    161e:	e8 ad e0 00 00       	call   f6d0 <assert_abort@plt>
    1623:	52                   	push   %edx
    1624:	68 e0 00 00 00       	push   $0xe0
    1629:	68 73 d5 00 00       	push   $0xd573
    162e:	68 88 d5 00 00       	push   $0xd588
    1633:	e8 98 e0 00 00       	call   f6d0 <assert_abort@plt>
    1638:	90                   	nop
    1639:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001640 <usb_device_select_interface>:
    1640:	55                   	push   %ebp
    1641:	89 e5                	mov    %esp,%ebp
    1643:	57                   	push   %edi
    1644:	56                   	push   %esi
    1645:	53                   	push   %ebx
    1646:	83 ec 1c             	sub    $0x1c,%esp
    1649:	8b 75 08             	mov    0x8(%ebp),%esi
    164c:	8b 45 10             	mov    0x10(%ebp),%eax
    164f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    1652:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    1655:	85 f6                	test   %esi,%esi
    1657:	0f 84 05 01 00 00    	je     1762 <usb_device_select_interface+0x122>
    165d:	8b 46 2c             	mov    0x2c(%esi),%eax
    1660:	85 c0                	test   %eax,%eax
    1662:	0f 88 f0 00 00 00    	js     1758 <usb_device_select_interface+0x118>
    1668:	25 ff 00 00 00       	and    $0xff,%eax
    166d:	81 e3 ff 00 00 00    	and    $0xff,%ebx
    1673:	57                   	push   %edi
    1674:	53                   	push   %ebx
    1675:	50                   	push   %eax
    1676:	8d 46 08             	lea    0x8(%esi),%eax
    1679:	50                   	push   %eax
    167a:	e8 81 1f 00 00       	call   3600 <usb_request_set_interface>
    167f:	83 c4 10             	add    $0x10,%esp
    1682:	85 c0                	test   %eax,%eax
    1684:	74 0a                	je     1690 <usb_device_select_interface+0x50>
    1686:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1689:	5b                   	pop    %ebx
    168a:	5e                   	pop    %esi
    168b:	5f                   	pop    %edi
    168c:	5d                   	pop    %ebp
    168d:	c3                   	ret    
    168e:	66 90                	xchg   %ax,%ax
    1690:	8b 46 24             	mov    0x24(%esi),%eax
    1693:	89 5e 38             	mov    %ebx,0x38(%esi)
    1696:	85 c0                	test   %eax,%eax
    1698:	0f 84 9a 00 00 00    	je     1738 <usb_device_select_interface+0xf8>
    169e:	8b 4e 28             	mov    0x28(%esi),%ecx
    16a1:	85 c9                	test   %ecx,%ecx
    16a3:	74 61                	je     1706 <usb_device_select_interface+0xc6>
    16a5:	31 ff                	xor    %edi,%edi
    16a7:	eb 0d                	jmp    16b6 <usb_device_select_interface+0x76>
    16a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    16b0:	47                   	inc    %edi
    16b1:	3b 7e 28             	cmp    0x28(%esi),%edi
    16b4:	73 50                	jae    1706 <usb_device_select_interface+0xc6>
    16b6:	8d 0c 7f             	lea    (%edi,%edi,2),%ecx
    16b9:	8d 1c 8f             	lea    (%edi,%ecx,4),%ebx
    16bc:	b9 b9 d5 00 00       	mov    $0xd5b9,%ecx
    16c1:	c1 e3 02             	shl    $0x2,%ebx
    16c4:	80 7c 18 30 00       	cmpb   $0x0,0x30(%eax,%ebx,1)
    16c9:	74 05                	je     16d0 <usb_device_select_interface+0x90>
    16cb:	b9 06 f2 00 00       	mov    $0xf206,%ecx
    16d0:	83 ec 0c             	sub    $0xc,%esp
    16d3:	51                   	push   %ecx
    16d4:	57                   	push   %edi
    16d5:	68 8c d6 00 00       	push   $0xd68c
    16da:	6a 05                	push   $0x5
    16dc:	6a ff                	push   $0xffffffff
    16de:	e8 9d df 00 00       	call   f680 <log_msg@plt>
    16e3:	8b 46 24             	mov    0x24(%esi),%eax
    16e6:	83 c4 20             	add    $0x20,%esp
    16e9:	01 c3                	add    %eax,%ebx
    16eb:	80 7b 30 00          	cmpb   $0x0,0x30(%ebx)
    16ef:	74 bf                	je     16b0 <usb_device_select_interface+0x70>
    16f1:	83 ec 0c             	sub    $0xc,%esp
    16f4:	47                   	inc    %edi
    16f5:	53                   	push   %ebx
    16f6:	e8 d5 11 00 00       	call   28d0 <usb_pipe_unregister>
    16fb:	83 c4 10             	add    $0x10,%esp
    16fe:	8b 46 24             	mov    0x24(%esi),%eax
    1701:	3b 7e 28             	cmp    0x28(%esi),%edi
    1704:	72 b0                	jb     16b6 <usb_device_select_interface+0x76>
    1706:	83 ec 0c             	sub    $0xc,%esp
    1709:	50                   	push   %eax
    170a:	e8 91 e2 00 00       	call   f9a0 <free@plt>
    170f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    1712:	c7 46 24 00 00 00 00 	movl   $0x0,0x24(%esi)
    1719:	c7 46 28 00 00 00 00 	movl   $0x0,0x28(%esi)
    1720:	83 c4 10             	add    $0x10,%esp
    1723:	89 75 08             	mov    %esi,0x8(%ebp)
    1726:	89 45 0c             	mov    %eax,0xc(%ebp)
    1729:	8d 65 f4             	lea    -0xc(%ebp),%esp
    172c:	5b                   	pop    %ebx
    172d:	5e                   	pop    %esi
    172e:	5f                   	pop    %edi
    172f:	5d                   	pop    %ebp
    1730:	e9 1b fd ff ff       	jmp    1450 <usb_device_create_pipes>
    1735:	8d 76 00             	lea    0x0(%esi),%esi
    1738:	8b 56 28             	mov    0x28(%esi),%edx
    173b:	85 d2                	test   %edx,%edx
    173d:	74 c7                	je     1706 <usb_device_select_interface+0xc6>
    173f:	50                   	push   %eax
    1740:	68 29 01 00 00       	push   $0x129
    1745:	68 73 d5 00 00       	push   $0xd573
    174a:	68 60 d6 00 00       	push   $0xd660
    174f:	e8 7c df 00 00       	call   f6d0 <assert_abort@plt>
    1754:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1758:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    175d:	e9 24 ff ff ff       	jmp    1686 <usb_device_select_interface+0x46>
    1762:	50                   	push   %eax
    1763:	68 88 00 00 00       	push   $0x88
    1768:	68 73 d5 00 00       	push   $0xd573
    176d:	68 80 d5 00 00       	push   $0xd580
    1772:	e8 59 df 00 00       	call   f6d0 <assert_abort@plt>
    1777:	89 f6                	mov    %esi,%esi
    1779:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00001780 <usb_device_destroy_pipes>:
    1780:	55                   	push   %ebp
    1781:	89 e5                	mov    %esp,%ebp
    1783:	57                   	push   %edi
    1784:	56                   	push   %esi
    1785:	53                   	push   %ebx
    1786:	83 ec 0c             	sub    $0xc,%esp
    1789:	8b 75 08             	mov    0x8(%ebp),%esi
    178c:	85 f6                	test   %esi,%esi
    178e:	0f 84 b0 00 00 00    	je     1844 <usb_device_destroy_pipes+0xc4>
    1794:	8b 46 24             	mov    0x24(%esi),%eax
    1797:	85 c0                	test   %eax,%eax
    1799:	0f 84 89 00 00 00    	je     1828 <usb_device_destroy_pipes+0xa8>
    179f:	8b 56 28             	mov    0x28(%esi),%edx
    17a2:	85 d2                	test   %edx,%edx
    17a4:	74 60                	je     1806 <usb_device_destroy_pipes+0x86>
    17a6:	31 ff                	xor    %edi,%edi
    17a8:	eb 0c                	jmp    17b6 <usb_device_destroy_pipes+0x36>
    17aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    17b0:	47                   	inc    %edi
    17b1:	39 7e 28             	cmp    %edi,0x28(%esi)
    17b4:	76 50                	jbe    1806 <usb_device_destroy_pipes+0x86>
    17b6:	8d 14 7f             	lea    (%edi,%edi,2),%edx
    17b9:	8d 1c 97             	lea    (%edi,%edx,4),%ebx
    17bc:	ba b9 d5 00 00       	mov    $0xd5b9,%edx
    17c1:	c1 e3 02             	shl    $0x2,%ebx
    17c4:	80 7c 18 30 00       	cmpb   $0x0,0x30(%eax,%ebx,1)
    17c9:	74 05                	je     17d0 <usb_device_destroy_pipes+0x50>
    17cb:	ba 06 f2 00 00       	mov    $0xf206,%edx
    17d0:	83 ec 0c             	sub    $0xc,%esp
    17d3:	52                   	push   %edx
    17d4:	57                   	push   %edi
    17d5:	68 8c d6 00 00       	push   $0xd68c
    17da:	6a 05                	push   $0x5
    17dc:	6a ff                	push   $0xffffffff
    17de:	e8 9d de 00 00       	call   f680 <log_msg@plt>
    17e3:	8b 46 24             	mov    0x24(%esi),%eax
    17e6:	83 c4 20             	add    $0x20,%esp
    17e9:	01 c3                	add    %eax,%ebx
    17eb:	80 7b 30 00          	cmpb   $0x0,0x30(%ebx)
    17ef:	74 bf                	je     17b0 <usb_device_destroy_pipes+0x30>
    17f1:	83 ec 0c             	sub    $0xc,%esp
    17f4:	47                   	inc    %edi
    17f5:	53                   	push   %ebx
    17f6:	e8 d5 10 00 00       	call   28d0 <usb_pipe_unregister>
    17fb:	83 c4 10             	add    $0x10,%esp
    17fe:	8b 46 24             	mov    0x24(%esi),%eax
    1801:	39 7e 28             	cmp    %edi,0x28(%esi)
    1804:	77 b0                	ja     17b6 <usb_device_destroy_pipes+0x36>
    1806:	83 ec 0c             	sub    $0xc,%esp
    1809:	50                   	push   %eax
    180a:	e8 91 e1 00 00       	call   f9a0 <free@plt>
    180f:	c7 46 24 00 00 00 00 	movl   $0x0,0x24(%esi)
    1816:	c7 46 28 00 00 00 00 	movl   $0x0,0x28(%esi)
    181d:	83 c4 10             	add    $0x10,%esp
    1820:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1823:	5b                   	pop    %ebx
    1824:	5e                   	pop    %esi
    1825:	5f                   	pop    %edi
    1826:	5d                   	pop    %ebp
    1827:	c3                   	ret    
    1828:	8b 4e 28             	mov    0x28(%esi),%ecx
    182b:	85 c9                	test   %ecx,%ecx
    182d:	74 d7                	je     1806 <usb_device_destroy_pipes+0x86>
    182f:	50                   	push   %eax
    1830:	68 29 01 00 00       	push   $0x129
    1835:	68 73 d5 00 00       	push   $0xd573
    183a:	68 60 d6 00 00       	push   $0xd660
    183f:	e8 8c de 00 00       	call   f6d0 <assert_abort@plt>
    1844:	53                   	push   %ebx
    1845:	68 28 01 00 00       	push   $0x128
    184a:	68 73 d5 00 00       	push   $0xd573
    184f:	68 80 d5 00 00       	push   $0xd580
    1854:	e8 77 de 00 00       	call   f6d0 <assert_abort@plt>
    1859:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001860 <usb_device_get_default_pipe>:
    1860:	55                   	push   %ebp
    1861:	89 e5                	mov    %esp,%ebp
    1863:	83 ec 08             	sub    $0x8,%esp
    1866:	8b 45 08             	mov    0x8(%ebp),%eax
    1869:	85 c0                	test   %eax,%eax
    186b:	74 05                	je     1872 <usb_device_get_default_pipe+0x12>
    186d:	83 c0 08             	add    $0x8,%eax
    1870:	c9                   	leave  
    1871:	c3                   	ret    
    1872:	50                   	push   %eax
    1873:	68 3a 01 00 00       	push   $0x13a
    1878:	68 73 d5 00 00       	push   $0xd573
    187d:	68 80 d5 00 00       	push   $0xd580
    1882:	e8 49 de 00 00       	call   f6d0 <assert_abort@plt>
    1887:	89 f6                	mov    %esi,%esi
    1889:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00001890 <usb_device_get_mapped_ep_desc>:
    1890:	55                   	push   %ebp
    1891:	89 e5                	mov    %esp,%ebp
    1893:	56                   	push   %esi
    1894:	53                   	push   %ebx
    1895:	8b 45 08             	mov    0x8(%ebp),%eax
    1898:	8b 75 0c             	mov    0xc(%ebp),%esi
    189b:	85 c0                	test   %eax,%eax
    189d:	74 31                	je     18d0 <usb_device_get_mapped_ep_desc+0x40>
    189f:	8b 58 28             	mov    0x28(%eax),%ebx
    18a2:	85 db                	test   %ebx,%ebx
    18a4:	74 21                	je     18c7 <usb_device_get_mapped_ep_desc+0x37>
    18a6:	8b 40 24             	mov    0x24(%eax),%eax
    18a9:	3b 70 1c             	cmp    0x1c(%eax),%esi
    18ac:	74 1b                	je     18c9 <usb_device_get_mapped_ep_desc+0x39>
    18ae:	8d 50 34             	lea    0x34(%eax),%edx
    18b1:	31 c9                	xor    %ecx,%ecx
    18b3:	eb 0d                	jmp    18c2 <usb_device_get_mapped_ep_desc+0x32>
    18b5:	8d 76 00             	lea    0x0(%esi),%esi
    18b8:	89 d0                	mov    %edx,%eax
    18ba:	83 c2 34             	add    $0x34,%edx
    18bd:	39 72 e8             	cmp    %esi,-0x18(%edx)
    18c0:	74 07                	je     18c9 <usb_device_get_mapped_ep_desc+0x39>
    18c2:	41                   	inc    %ecx
    18c3:	39 d9                	cmp    %ebx,%ecx
    18c5:	75 f1                	jne    18b8 <usb_device_get_mapped_ep_desc+0x28>
    18c7:	31 c0                	xor    %eax,%eax
    18c9:	8d 65 f8             	lea    -0x8(%ebp),%esp
    18cc:	5b                   	pop    %ebx
    18cd:	5e                   	pop    %esi
    18ce:	5d                   	pop    %ebp
    18cf:	c3                   	ret    
    18d0:	50                   	push   %eax
    18d1:	68 41 01 00 00       	push   $0x141
    18d6:	68 73 d5 00 00       	push   $0xd573
    18db:	68 80 d5 00 00       	push   $0xd580
    18e0:	e8 eb dd 00 00       	call   f6d0 <assert_abort@plt>
    18e5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    18e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000018f0 <usb_device_get_mapped_ep>:
    18f0:	55                   	push   %ebp
    18f1:	89 e5                	mov    %esp,%ebp
    18f3:	56                   	push   %esi
    18f4:	53                   	push   %ebx
    18f5:	8b 45 08             	mov    0x8(%ebp),%eax
    18f8:	8b 55 0c             	mov    0xc(%ebp),%edx
    18fb:	85 c0                	test   %eax,%eax
    18fd:	74 32                	je     1931 <usb_device_get_mapped_ep+0x41>
    18ff:	8b 58 28             	mov    0x28(%eax),%ebx
    1902:	85 db                	test   %ebx,%ebx
    1904:	74 22                	je     1928 <usb_device_get_mapped_ep+0x38>
    1906:	8b 40 24             	mov    0x24(%eax),%eax
    1909:	66 3b 10             	cmp    (%eax),%dx
    190c:	74 1c                	je     192a <usb_device_get_mapped_ep+0x3a>
    190e:	89 d6                	mov    %edx,%esi
    1910:	31 c9                	xor    %ecx,%ecx
    1912:	8d 50 34             	lea    0x34(%eax),%edx
    1915:	eb 0c                	jmp    1923 <usb_device_get_mapped_ep+0x33>
    1917:	90                   	nop
    1918:	89 d0                	mov    %edx,%eax
    191a:	83 c2 34             	add    $0x34,%edx
    191d:	66 39 72 cc          	cmp    %si,-0x34(%edx)
    1921:	74 07                	je     192a <usb_device_get_mapped_ep+0x3a>
    1923:	41                   	inc    %ecx
    1924:	39 d9                	cmp    %ebx,%ecx
    1926:	75 f0                	jne    1918 <usb_device_get_mapped_ep+0x28>
    1928:	31 c0                	xor    %eax,%eax
    192a:	8d 65 f8             	lea    -0x8(%ebp),%esp
    192d:	5b                   	pop    %ebx
    192e:	5e                   	pop    %esi
    192f:	5d                   	pop    %ebp
    1930:	c3                   	ret    
    1931:	50                   	push   %eax
    1932:	68 4c 01 00 00       	push   $0x14c
    1937:	68 73 d5 00 00       	push   $0xd573
    193c:	68 80 d5 00 00       	push   $0xd580
    1941:	e8 8a dd 00 00       	call   f6d0 <assert_abort@plt>
    1946:	8d 76 00             	lea    0x0(%esi),%esi
    1949:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00001950 <usb_device_get_iface_number>:
    1950:	55                   	push   %ebp
    1951:	89 e5                	mov    %esp,%ebp
    1953:	83 ec 08             	sub    $0x8,%esp
    1956:	8b 45 08             	mov    0x8(%ebp),%eax
    1959:	85 c0                	test   %eax,%eax
    195b:	74 05                	je     1962 <usb_device_get_iface_number+0x12>
    195d:	8b 40 2c             	mov    0x2c(%eax),%eax
    1960:	c9                   	leave  
    1961:	c3                   	ret    
    1962:	50                   	push   %eax
    1963:	68 56 01 00 00       	push   $0x156
    1968:	68 73 d5 00 00       	push   $0xd573
    196d:	68 80 d5 00 00       	push   $0xd580
    1972:	e8 59 dd 00 00       	call   f6d0 <assert_abort@plt>
    1977:	89 f6                	mov    %esi,%esi
    1979:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00001980 <usb_device_get_devman_handle>:
    1980:	55                   	push   %ebp
    1981:	89 e5                	mov    %esp,%ebp
    1983:	83 ec 08             	sub    $0x8,%esp
    1986:	8b 45 08             	mov    0x8(%ebp),%eax
    1989:	85 c0                	test   %eax,%eax
    198b:	74 05                	je     1992 <usb_device_get_devman_handle+0x12>
    198d:	8b 40 04             	mov    0x4(%eax),%eax
    1990:	c9                   	leave  
    1991:	c3                   	ret    
    1992:	50                   	push   %eax
    1993:	68 5c 01 00 00       	push   $0x15c
    1998:	68 73 d5 00 00       	push   $0xd573
    199d:	68 80 d5 00 00       	push   $0xd580
    19a2:	e8 29 dd 00 00       	call   f6d0 <assert_abort@plt>
    19a7:	89 f6                	mov    %esi,%esi
    19a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000019b0 <usb_device_descriptors>:
    19b0:	55                   	push   %ebp
    19b1:	89 e5                	mov    %esp,%ebp
    19b3:	83 ec 08             	sub    $0x8,%esp
    19b6:	8b 45 08             	mov    0x8(%ebp),%eax
    19b9:	85 c0                	test   %eax,%eax
    19bb:	74 05                	je     19c2 <usb_device_descriptors+0x12>
    19bd:	83 c0 3c             	add    $0x3c,%eax
    19c0:	c9                   	leave  
    19c1:	c3                   	ret    
    19c2:	50                   	push   %eax
    19c3:	68 62 01 00 00       	push   $0x162
    19c8:	68 73 d5 00 00       	push   $0xd573
    19cd:	68 80 d5 00 00       	push   $0xd580
    19d2:	e8 f9 dc 00 00       	call   f6d0 <assert_abort@plt>
    19d7:	89 f6                	mov    %esi,%esi
    19d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000019e0 <usb_device_get_alternative_ifaces>:
    19e0:	55                   	push   %ebp
    19e1:	89 e5                	mov    %esp,%ebp
    19e3:	83 ec 08             	sub    $0x8,%esp
    19e6:	8b 45 08             	mov    0x8(%ebp),%eax
    19e9:	85 c0                	test   %eax,%eax
    19eb:	74 05                	je     19f2 <usb_device_get_alternative_ifaces+0x12>
    19ed:	83 c0 30             	add    $0x30,%eax
    19f0:	c9                   	leave  
    19f1:	c3                   	ret    
    19f2:	50                   	push   %eax
    19f3:	68 69 01 00 00       	push   $0x169
    19f8:	68 73 d5 00 00       	push   $0xd573
    19fd:	68 80 d5 00 00       	push   $0xd580
    1a02:	e8 c9 dc 00 00       	call   f6d0 <assert_abort@plt>
    1a07:	89 f6                	mov    %esi,%esi
    1a09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00001a10 <usb_device_create_ddf>:
    1a10:	55                   	push   %ebp
    1a11:	89 e5                	mov    %esp,%ebp
    1a13:	57                   	push   %edi
    1a14:	56                   	push   %esi
    1a15:	53                   	push   %ebx
    1a16:	83 ec 2c             	sub    $0x2c,%esp
    1a19:	8b 45 08             	mov    0x8(%ebp),%eax
    1a1c:	85 c0                	test   %eax,%eax
    1a1e:	0f 84 78 03 00 00    	je     1d9c <usb_device_create_ddf+0x38c>
    1a24:	8b 75 10             	mov    0x10(%ebp),%esi
    1a27:	85 f6                	test   %esi,%esi
    1a29:	0f 84 82 03 00 00    	je     1db1 <usb_device_create_ddf+0x3a1>
    1a2f:	83 ec 0c             	sub    $0xc,%esp
    1a32:	8b 45 08             	mov    0x8(%ebp),%eax
    1a35:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    1a3c:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
    1a43:	50                   	push   %eax
    1a44:	e8 a7 32 00 00       	call   4cf0 <ddf_dev_get_handle>
    1a49:	5a                   	pop    %edx
    1a4a:	59                   	pop    %ecx
    1a4b:	6a 01                	push   $0x1
    1a4d:	50                   	push   %eax
    1a4e:	e8 4d db 00 00       	call   f5a0 <devman_parent_device_connect@plt>
    1a53:	83 c4 10             	add    $0x10,%esp
    1a56:	89 c3                	mov    %eax,%ebx
    1a58:	85 c0                	test   %eax,%eax
    1a5a:	0f 84 d0 02 00 00    	je     1d30 <usb_device_create_ddf+0x320>
    1a60:	83 ec 0c             	sub    $0xc,%esp
    1a63:	50                   	push   %eax
    1a64:	e8 47 de 00 00       	call   f8b0 <async_exchange_begin@plt>
    1a69:	83 c4 10             	add    $0x10,%esp
    1a6c:	89 c7                	mov    %eax,%edi
    1a6e:	85 c0                	test   %eax,%eax
    1a70:	0f 84 ca 02 00 00    	je     1d40 <usb_device_create_ddf+0x330>
    1a76:	50                   	push   %eax
    1a77:	50                   	push   %eax
    1a78:	8d 45 e0             	lea    -0x20(%ebp),%eax
    1a7b:	50                   	push   %eax
    1a7c:	57                   	push   %edi
    1a7d:	e8 1e 9b 00 00       	call   b5a0 <usb_get_my_device_handle>
    1a82:	83 c4 10             	add    $0x10,%esp
    1a85:	89 c6                	mov    %eax,%esi
    1a87:	85 c0                	test   %eax,%eax
    1a89:	74 25                	je     1ab0 <usb_device_create_ddf+0xa0>
    1a8b:	83 ec 0c             	sub    $0xc,%esp
    1a8e:	57                   	push   %edi
    1a8f:	e8 2c dc 00 00       	call   f6c0 <async_exchange_end@plt>
    1a94:	89 1c 24             	mov    %ebx,(%esp)
    1a97:	e8 d4 da 00 00       	call   f570 <async_hangup@plt>
    1a9c:	83 c4 10             	add    $0x10,%esp
    1a9f:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1aa2:	89 f0                	mov    %esi,%eax
    1aa4:	5b                   	pop    %ebx
    1aa5:	5e                   	pop    %esi
    1aa6:	5f                   	pop    %edi
    1aa7:	5d                   	pop    %ebp
    1aa8:	c3                   	ret    
    1aa9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1ab0:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    1ab3:	56                   	push   %esi
    1ab4:	56                   	push   %esi
    1ab5:	50                   	push   %eax
    1ab6:	57                   	push   %edi
    1ab7:	e8 94 9a 00 00       	call   b550 <usb_get_my_interface>
    1abc:	83 c4 10             	add    $0x10,%esp
    1abf:	89 c6                	mov    %eax,%esi
    1ac1:	83 f8 f5             	cmp    $0xfffffff5,%eax
    1ac4:	0f 84 d6 01 00 00    	je     1ca0 <usb_device_create_ddf+0x290>
    1aca:	83 ec 0c             	sub    $0xc,%esp
    1acd:	57                   	push   %edi
    1ace:	e8 ed db 00 00       	call   f6c0 <async_exchange_end@plt>
    1ad3:	89 1c 24             	mov    %ebx,(%esp)
    1ad6:	e8 95 da 00 00       	call   f570 <async_hangup@plt>
    1adb:	83 c4 10             	add    $0x10,%esp
    1ade:	85 f6                	test   %esi,%esi
    1ae0:	75 bd                	jne    1a9f <usb_device_create_ddf+0x8f>
    1ae2:	8b 5d 08             	mov    0x8(%ebp),%ebx
    1ae5:	51                   	push   %ecx
    1ae6:	51                   	push   %ecx
    1ae7:	6a 60                	push   $0x60
    1ae9:	53                   	push   %ebx
    1aea:	e8 b1 31 00 00       	call   4ca0 <ddf_dev_data_alloc>
    1aef:	83 c4 10             	add    $0x10,%esp
    1af2:	89 c3                	mov    %eax,%ebx
    1af4:	85 c0                	test   %eax,%eax
    1af6:	0f 84 5a 02 00 00    	je     1d56 <usb_device_create_ddf+0x346>
    1afc:	8b 4d 10             	mov    0x10(%ebp),%ecx
    1aff:	83 ec 0c             	sub    $0xc,%esp
    1b02:	8b 45 e0             	mov    -0x20(%ebp),%eax
    1b05:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    1b08:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)
    1b0e:	8b 4d 08             	mov    0x8(%ebp),%ecx
    1b11:	89 4b 58             	mov    %ecx,0x58(%ebx)
    1b14:	89 43 04             	mov    %eax,0x4(%ebx)
    1b17:	89 53 2c             	mov    %edx,0x2c(%ebx)
    1b1a:	c7 43 5c 00 00 00 00 	movl   $0x0,0x5c(%ebx)
    1b21:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)
    1b28:	c7 43 54 00 00 00 00 	movl   $0x0,0x54(%ebx)
    1b2f:	c7 43 28 00 00 00 00 	movl   $0x0,0x28(%ebx)
    1b36:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
    1b3d:	50                   	push   %eax
    1b3e:	e8 ad 99 00 00       	call   b4f0 <usb_dev_connect>
    1b43:	83 c4 10             	add    $0x10,%esp
    1b46:	89 03                	mov    %eax,(%ebx)
    1b48:	85 c0                	test   %eax,%eax
    1b4a:	0f 84 19 02 00 00    	je     1d69 <usb_device_create_ddf+0x359>
    1b50:	8d 7b 08             	lea    0x8(%ebx),%edi
    1b53:	52                   	push   %edx
    1b54:	52                   	push   %edx
    1b55:	50                   	push   %eax
    1b56:	57                   	push   %edi
    1b57:	e8 74 0c 00 00       	call   27d0 <usb_pipe_initialize_default_control>
    1b5c:	83 c4 10             	add    $0x10,%esp
    1b5f:	89 c6                	mov    %eax,%esi
    1b61:	85 c0                	test   %eax,%eax
    1b63:	0f 85 0f 01 00 00    	jne    1c78 <usb_device_create_ddf+0x268>
    1b69:	8b 43 50             	mov    0x50(%ebx),%eax
    1b6c:	85 c0                	test   %eax,%eax
    1b6e:	0f 85 52 02 00 00    	jne    1dc6 <usb_device_create_ddf+0x3b6>
    1b74:	50                   	push   %eax
    1b75:	50                   	push   %eax
    1b76:	8d 43 3c             	lea    0x3c(%ebx),%eax
    1b79:	50                   	push   %eax
    1b7a:	57                   	push   %edi
    1b7b:	e8 70 15 00 00       	call   30f0 <usb_request_get_device_descriptor>
    1b80:	83 c4 10             	add    $0x10,%esp
    1b83:	89 c6                	mov    %eax,%esi
    1b85:	85 c0                	test   %eax,%eax
    1b87:	74 1f                	je     1ba8 <usb_device_create_ddf+0x198>
    1b89:	8b 45 10             	mov    0x10(%ebp),%eax
    1b8c:	83 ec 0c             	sub    $0xc,%esp
    1b8f:	c7 00 f3 d5 00 00    	movl   $0xd5f3,(%eax)
    1b95:	8b 03                	mov    (%ebx),%eax
    1b97:	50                   	push   %eax
    1b98:	e8 93 99 00 00       	call   b530 <usb_dev_disconnect>
    1b9d:	83 c4 10             	add    $0x10,%esp
    1ba0:	e9 fa fe ff ff       	jmp    1a9f <usb_device_create_ddf+0x8f>
    1ba5:	8d 76 00             	lea    0x0(%esi),%esi
    1ba8:	8d 43 54             	lea    0x54(%ebx),%eax
    1bab:	50                   	push   %eax
    1bac:	8d 43 50             	lea    0x50(%ebx),%eax
    1baf:	50                   	push   %eax
    1bb0:	6a 00                	push   $0x0
    1bb2:	57                   	push   %edi
    1bb3:	e8 e8 16 00 00       	call   32a0 <usb_request_get_full_configuration_descriptor_alloc>
    1bb8:	83 c4 10             	add    $0x10,%esp
    1bbb:	89 c6                	mov    %eax,%esi
    1bbd:	85 c0                	test   %eax,%eax
    1bbf:	75 c8                	jne    1b89 <usb_device_create_ddf+0x179>
    1bc1:	8b 53 2c             	mov    0x2c(%ebx),%edx
    1bc4:	8d 43 30             	lea    0x30(%ebx),%eax
    1bc7:	52                   	push   %edx
    1bc8:	8b 7b 50             	mov    0x50(%ebx),%edi
    1bcb:	8b 4b 54             	mov    0x54(%ebx),%ecx
    1bce:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    1bd1:	51                   	push   %ecx
    1bd2:	57                   	push   %edi
    1bd3:	50                   	push   %eax
    1bd4:	e8 e7 20 00 00       	call   3cc0 <usb_alternate_interfaces_init>
    1bd9:	8b 45 0c             	mov    0xc(%ebp),%eax
    1bdc:	83 c4 10             	add    $0x10,%esp
    1bdf:	85 c0                	test   %eax,%eax
    1be1:	0f 84 b8 fe ff ff    	je     1a9f <usb_device_create_ddf+0x8f>
    1be7:	8b 45 0c             	mov    0xc(%ebp),%eax
    1bea:	57                   	push   %edi
    1beb:	57                   	push   %edi
    1bec:	50                   	push   %eax
    1bed:	53                   	push   %ebx
    1bee:	e8 5d f8 ff ff       	call   1450 <usb_device_create_pipes>
    1bf3:	83 c4 10             	add    $0x10,%esp
    1bf6:	89 45 d0             	mov    %eax,-0x30(%ebp)
    1bf9:	85 c0                	test   %eax,%eax
    1bfb:	0f 84 9e fe ff ff    	je     1a9f <usb_device_create_ddf+0x8f>
    1c01:	8b 43 24             	mov    0x24(%ebx),%eax
    1c04:	85 c0                	test   %eax,%eax
    1c06:	0f 84 70 01 00 00    	je     1d7c <usb_device_create_ddf+0x36c>
    1c0c:	8b 4b 28             	mov    0x28(%ebx),%ecx
    1c0f:	85 c9                	test   %ecx,%ecx
    1c11:	0f 84 a9 00 00 00    	je     1cc0 <usb_device_create_ddf+0x2b0>
    1c17:	31 f6                	xor    %esi,%esi
    1c19:	eb 0f                	jmp    1c2a <usb_device_create_ddf+0x21a>
    1c1b:	90                   	nop
    1c1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1c20:	46                   	inc    %esi
    1c21:	3b 73 28             	cmp    0x28(%ebx),%esi
    1c24:	0f 83 96 00 00 00    	jae    1cc0 <usb_device_create_ddf+0x2b0>
    1c2a:	8d 14 76             	lea    (%esi,%esi,2),%edx
    1c2d:	8d 3c 96             	lea    (%esi,%edx,4),%edi
    1c30:	ba b9 d5 00 00       	mov    $0xd5b9,%edx
    1c35:	c1 e7 02             	shl    $0x2,%edi
    1c38:	80 7c 38 30 00       	cmpb   $0x0,0x30(%eax,%edi,1)
    1c3d:	74 05                	je     1c44 <usb_device_create_ddf+0x234>
    1c3f:	ba 06 f2 00 00       	mov    $0xf206,%edx
    1c44:	83 ec 0c             	sub    $0xc,%esp
    1c47:	52                   	push   %edx
    1c48:	56                   	push   %esi
    1c49:	68 8c d6 00 00       	push   $0xd68c
    1c4e:	6a 05                	push   $0x5
    1c50:	6a ff                	push   $0xffffffff
    1c52:	e8 29 da 00 00       	call   f680 <log_msg@plt>
    1c57:	8b 43 24             	mov    0x24(%ebx),%eax
    1c5a:	83 c4 20             	add    $0x20,%esp
    1c5d:	01 c7                	add    %eax,%edi
    1c5f:	80 7f 30 00          	cmpb   $0x0,0x30(%edi)
    1c63:	74 bb                	je     1c20 <usb_device_create_ddf+0x210>
    1c65:	83 ec 0c             	sub    $0xc,%esp
    1c68:	57                   	push   %edi
    1c69:	e8 62 0c 00 00       	call   28d0 <usb_pipe_unregister>
    1c6e:	8b 43 24             	mov    0x24(%ebx),%eax
    1c71:	83 c4 10             	add    $0x10,%esp
    1c74:	eb aa                	jmp    1c20 <usb_device_create_ddf+0x210>
    1c76:	66 90                	xchg   %ax,%ax
    1c78:	83 ec 0c             	sub    $0xc,%esp
    1c7b:	8b 03                	mov    (%ebx),%eax
    1c7d:	50                   	push   %eax
    1c7e:	e8 ad 98 00 00       	call   b530 <usb_dev_disconnect>
    1c83:	8b 45 10             	mov    0x10(%ebp),%eax
    1c86:	83 c4 10             	add    $0x10,%esp
    1c89:	c7 00 b0 d6 00 00    	movl   $0xd6b0,(%eax)
    1c8f:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1c92:	89 f0                	mov    %esi,%eax
    1c94:	5b                   	pop    %ebx
    1c95:	5e                   	pop    %esi
    1c96:	5f                   	pop    %edi
    1c97:	5d                   	pop    %ebp
    1c98:	c3                   	ret    
    1c99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1ca0:	83 ec 0c             	sub    $0xc,%esp
    1ca3:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
    1caa:	57                   	push   %edi
    1cab:	e8 10 da 00 00       	call   f6c0 <async_exchange_end@plt>
    1cb0:	89 1c 24             	mov    %ebx,(%esp)
    1cb3:	e8 b8 d8 00 00       	call   f570 <async_hangup@plt>
    1cb8:	83 c4 10             	add    $0x10,%esp
    1cbb:	e9 22 fe ff ff       	jmp    1ae2 <usb_device_create_ddf+0xd2>
    1cc0:	83 ec 0c             	sub    $0xc,%esp
    1cc3:	50                   	push   %eax
    1cc4:	e8 d7 dc 00 00       	call   f9a0 <free@plt>
    1cc9:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    1ccc:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
    1cd3:	c7 43 28 00 00 00 00 	movl   $0x0,0x28(%ebx)
    1cda:	58                   	pop    %eax
    1cdb:	52                   	push   %edx
    1cdc:	e8 df 21 00 00       	call   3ec0 <usb_alternate_interfaces_deinit>
    1ce1:	8b 73 50             	mov    0x50(%ebx),%esi
    1ce4:	59                   	pop    %ecx
    1ce5:	56                   	push   %esi
    1ce6:	e8 b5 dc 00 00       	call   f9a0 <free@plt>
    1ceb:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)
    1cf2:	c7 43 54 00 00 00 00 	movl   $0x0,0x54(%ebx)
    1cf9:	8b 43 5c             	mov    0x5c(%ebx),%eax
    1cfc:	5f                   	pop    %edi
    1cfd:	50                   	push   %eax
    1cfe:	e8 9d dc 00 00       	call   f9a0 <free@plt>
    1d03:	c7 43 5c 00 00 00 00 	movl   $0x0,0x5c(%ebx)
    1d0a:	58                   	pop    %eax
    1d0b:	8b 03                	mov    (%ebx),%eax
    1d0d:	50                   	push   %eax
    1d0e:	e8 1d 98 00 00       	call   b530 <usb_dev_disconnect>
    1d13:	8b 45 10             	mov    0x10(%ebp),%eax
    1d16:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
    1d1c:	83 c4 10             	add    $0x10,%esp
    1d1f:	8b 75 d0             	mov    -0x30(%ebp),%esi
    1d22:	c7 00 08 d6 00 00    	movl   $0xd608,(%eax)
    1d28:	e9 72 fd ff ff       	jmp    1a9f <usb_device_create_ddf+0x8f>
    1d2d:	8d 76 00             	lea    0x0(%esi),%esi
    1d30:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    1d35:	e9 65 fd ff ff       	jmp    1a9f <usb_device_create_ddf+0x8f>
    1d3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1d40:	83 ec 0c             	sub    $0xc,%esp
    1d43:	be f8 ff ff ff       	mov    $0xfffffff8,%esi
    1d48:	53                   	push   %ebx
    1d49:	e8 22 d8 00 00       	call   f570 <async_hangup@plt>
    1d4e:	83 c4 10             	add    $0x10,%esp
    1d51:	e9 49 fd ff ff       	jmp    1a9f <usb_device_create_ddf+0x8f>
    1d56:	8b 45 10             	mov    0x10(%ebp),%eax
    1d59:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    1d5e:	c7 00 ca d5 00 00    	movl   $0xd5ca,(%eax)
    1d64:	e9 36 fd ff ff       	jmp    1a9f <usb_device_create_ddf+0x8f>
    1d69:	8b 45 10             	mov    0x10(%ebp),%eax
    1d6c:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    1d71:	c7 00 d9 d5 00 00    	movl   $0xd5d9,(%eax)
    1d77:	e9 23 fd ff ff       	jmp    1a9f <usb_device_create_ddf+0x8f>
    1d7c:	8b 53 28             	mov    0x28(%ebx),%edx
    1d7f:	85 d2                	test   %edx,%edx
    1d81:	0f 84 39 ff ff ff    	je     1cc0 <usb_device_create_ddf+0x2b0>
    1d87:	50                   	push   %eax
    1d88:	68 29 01 00 00       	push   $0x129
    1d8d:	68 73 d5 00 00       	push   $0xd573
    1d92:	68 60 d6 00 00       	push   $0xd660
    1d97:	e8 34 d9 00 00       	call   f6d0 <assert_abort@plt>
    1d9c:	57                   	push   %edi
    1d9d:	68 e5 01 00 00       	push   $0x1e5
    1da2:	68 73 d5 00 00       	push   $0xd573
    1da7:	68 be d5 00 00       	push   $0xd5be
    1dac:	e8 1f d9 00 00       	call   f6d0 <assert_abort@plt>
    1db1:	53                   	push   %ebx
    1db2:	68 e6 01 00 00       	push   $0x1e6
    1db7:	68 73 d5 00 00       	push   $0xd573
    1dbc:	68 c6 d5 00 00       	push   $0xd5c6
    1dc1:	e8 0a d9 00 00       	call   f6d0 <assert_abort@plt>
    1dc6:	50                   	push   %eax
    1dc7:	68 aa 00 00 00       	push   $0xaa
    1dcc:	68 73 d5 00 00       	push   $0xd573
    1dd1:	68 d4 d6 00 00       	push   $0xd6d4
    1dd6:	e8 f5 d8 00 00       	call   f6d0 <assert_abort@plt>
    1ddb:	90                   	nop
    1ddc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00001de0 <usb_device_destroy_ddf>:
    1de0:	55                   	push   %ebp
    1de1:	89 e5                	mov    %esp,%ebp
    1de3:	57                   	push   %edi
    1de4:	56                   	push   %esi
    1de5:	53                   	push   %ebx
    1de6:	83 ec 0c             	sub    $0xc,%esp
    1de9:	8b 45 08             	mov    0x8(%ebp),%eax
    1dec:	85 c0                	test   %eax,%eax
    1dee:	0f 84 1d 01 00 00    	je     1f11 <usb_device_destroy_ddf+0x131>
    1df4:	83 ec 0c             	sub    $0xc,%esp
    1df7:	50                   	push   %eax
    1df8:	e8 e3 2e 00 00       	call   4ce0 <ddf_dev_data_get>
    1dfd:	83 c4 10             	add    $0x10,%esp
    1e00:	89 c7                	mov    %eax,%edi
    1e02:	85 c0                	test   %eax,%eax
    1e04:	0f 84 f2 00 00 00    	je     1efc <usb_device_destroy_ddf+0x11c>
    1e0a:	8b 40 24             	mov    0x24(%eax),%eax
    1e0d:	85 c0                	test   %eax,%eax
    1e0f:	0f 84 cb 00 00 00    	je     1ee0 <usb_device_destroy_ddf+0x100>
    1e15:	8b 4f 28             	mov    0x28(%edi),%ecx
    1e18:	85 c9                	test   %ecx,%ecx
    1e1a:	74 5a                	je     1e76 <usb_device_destroy_ddf+0x96>
    1e1c:	31 f6                	xor    %esi,%esi
    1e1e:	eb 06                	jmp    1e26 <usb_device_destroy_ddf+0x46>
    1e20:	46                   	inc    %esi
    1e21:	3b 77 28             	cmp    0x28(%edi),%esi
    1e24:	73 50                	jae    1e76 <usb_device_destroy_ddf+0x96>
    1e26:	8d 14 76             	lea    (%esi,%esi,2),%edx
    1e29:	8d 1c 96             	lea    (%esi,%edx,4),%ebx
    1e2c:	ba b9 d5 00 00       	mov    $0xd5b9,%edx
    1e31:	c1 e3 02             	shl    $0x2,%ebx
    1e34:	80 7c 18 30 00       	cmpb   $0x0,0x30(%eax,%ebx,1)
    1e39:	74 05                	je     1e40 <usb_device_destroy_ddf+0x60>
    1e3b:	ba 06 f2 00 00       	mov    $0xf206,%edx
    1e40:	83 ec 0c             	sub    $0xc,%esp
    1e43:	52                   	push   %edx
    1e44:	56                   	push   %esi
    1e45:	68 8c d6 00 00       	push   $0xd68c
    1e4a:	6a 05                	push   $0x5
    1e4c:	6a ff                	push   $0xffffffff
    1e4e:	e8 2d d8 00 00       	call   f680 <log_msg@plt>
    1e53:	8b 47 24             	mov    0x24(%edi),%eax
    1e56:	83 c4 20             	add    $0x20,%esp
    1e59:	01 c3                	add    %eax,%ebx
    1e5b:	80 7b 30 00          	cmpb   $0x0,0x30(%ebx)
    1e5f:	74 bf                	je     1e20 <usb_device_destroy_ddf+0x40>
    1e61:	83 ec 0c             	sub    $0xc,%esp
    1e64:	46                   	inc    %esi
    1e65:	53                   	push   %ebx
    1e66:	e8 65 0a 00 00       	call   28d0 <usb_pipe_unregister>
    1e6b:	83 c4 10             	add    $0x10,%esp
    1e6e:	8b 47 24             	mov    0x24(%edi),%eax
    1e71:	3b 77 28             	cmp    0x28(%edi),%esi
    1e74:	72 b0                	jb     1e26 <usb_device_destroy_ddf+0x46>
    1e76:	83 ec 0c             	sub    $0xc,%esp
    1e79:	50                   	push   %eax
    1e7a:	e8 21 db 00 00       	call   f9a0 <free@plt>
    1e7f:	8d 47 30             	lea    0x30(%edi),%eax
    1e82:	c7 47 24 00 00 00 00 	movl   $0x0,0x24(%edi)
    1e89:	c7 47 28 00 00 00 00 	movl   $0x0,0x28(%edi)
    1e90:	89 04 24             	mov    %eax,(%esp)
    1e93:	e8 28 20 00 00       	call   3ec0 <usb_alternate_interfaces_deinit>
    1e98:	8b 57 50             	mov    0x50(%edi),%edx
    1e9b:	58                   	pop    %eax
    1e9c:	52                   	push   %edx
    1e9d:	e8 fe da 00 00       	call   f9a0 <free@plt>
    1ea2:	c7 47 50 00 00 00 00 	movl   $0x0,0x50(%edi)
    1ea9:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)
    1eb0:	8b 5f 5c             	mov    0x5c(%edi),%ebx
    1eb3:	59                   	pop    %ecx
    1eb4:	53                   	push   %ebx
    1eb5:	e8 e6 da 00 00       	call   f9a0 <free@plt>
    1eba:	c7 47 5c 00 00 00 00 	movl   $0x0,0x5c(%edi)
    1ec1:	8b 07                	mov    (%edi),%eax
    1ec3:	5e                   	pop    %esi
    1ec4:	50                   	push   %eax
    1ec5:	e8 66 96 00 00       	call   b530 <usb_dev_disconnect>
    1eca:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
    1ed0:	83 c4 10             	add    $0x10,%esp
    1ed3:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1ed6:	5b                   	pop    %ebx
    1ed7:	5e                   	pop    %esi
    1ed8:	5f                   	pop    %edi
    1ed9:	5d                   	pop    %ebp
    1eda:	c3                   	ret    
    1edb:	90                   	nop
    1edc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1ee0:	8b 57 28             	mov    0x28(%edi),%edx
    1ee3:	85 d2                	test   %edx,%edx
    1ee5:	74 8f                	je     1e76 <usb_device_destroy_ddf+0x96>
    1ee7:	50                   	push   %eax
    1ee8:	68 29 01 00 00       	push   $0x129
    1eed:	68 73 d5 00 00       	push   $0xd573
    1ef2:	68 60 d6 00 00       	push   $0xd660
    1ef7:	e8 d4 d7 00 00       	call   f6d0 <assert_abort@plt>
    1efc:	53                   	push   %ebx
    1efd:	68 02 02 00 00       	push   $0x202
    1f02:	68 73 d5 00 00       	push   $0xd573
    1f07:	68 80 d5 00 00       	push   $0xd580
    1f0c:	e8 bf d7 00 00       	call   f6d0 <assert_abort@plt>
    1f11:	56                   	push   %esi
    1f12:	68 00 02 00 00       	push   $0x200
    1f17:	68 73 d5 00 00       	push   $0xd573
    1f1c:	68 be d5 00 00       	push   $0xd5be
    1f21:	e8 aa d7 00 00       	call   f6d0 <assert_abort@plt>
    1f26:	8d 76 00             	lea    0x0(%esi),%esi
    1f29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00001f30 <usb_device_create>:
    1f30:	55                   	push   %ebp
    1f31:	89 e5                	mov    %esp,%ebp
    1f33:	57                   	push   %edi
    1f34:	56                   	push   %esi
    1f35:	53                   	push   %ebx
    1f36:	83 ec 34             	sub    $0x34,%esp
    1f39:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    1f40:	8b 45 08             	mov    0x8(%ebp),%eax
    1f43:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
    1f4a:	6a 01                	push   $0x1
    1f4c:	50                   	push   %eax
    1f4d:	e8 ce d5 00 00       	call   f520 <devman_device_connect@plt>
    1f52:	89 04 24             	mov    %eax,(%esp)
    1f55:	89 c3                	mov    %eax,%ebx
    1f57:	e8 54 d9 00 00       	call   f8b0 <async_exchange_begin@plt>
    1f5c:	83 c4 10             	add    $0x10,%esp
    1f5f:	85 c0                	test   %eax,%eax
    1f61:	0f 84 99 01 00 00    	je     2100 <usb_device_create+0x1d0>
    1f67:	89 c6                	mov    %eax,%esi
    1f69:	50                   	push   %eax
    1f6a:	50                   	push   %eax
    1f6b:	8d 45 e0             	lea    -0x20(%ebp),%eax
    1f6e:	50                   	push   %eax
    1f6f:	56                   	push   %esi
    1f70:	e8 2b 96 00 00       	call   b5a0 <usb_get_my_device_handle>
    1f75:	83 c4 10             	add    $0x10,%esp
    1f78:	89 c7                	mov    %eax,%edi
    1f7a:	85 c0                	test   %eax,%eax
    1f7c:	0f 84 e6 00 00 00    	je     2068 <usb_device_create+0x138>
    1f82:	83 ec 0c             	sub    $0xc,%esp
    1f85:	56                   	push   %esi
    1f86:	e8 35 d7 00 00       	call   f6c0 <async_exchange_end@plt>
    1f8b:	83 c4 10             	add    $0x10,%esp
    1f8e:	85 db                	test   %ebx,%ebx
    1f90:	0f 84 c1 00 00 00    	je     2057 <usb_device_create+0x127>
    1f96:	83 ec 0c             	sub    $0xc,%esp
    1f99:	53                   	push   %ebx
    1f9a:	e8 d1 d5 00 00       	call   f570 <async_hangup@plt>
    1f9f:	83 c4 10             	add    $0x10,%esp
    1fa2:	85 ff                	test   %edi,%edi
    1fa4:	0f 85 ad 00 00 00    	jne    2057 <usb_device_create+0x127>
    1faa:	83 ec 0c             	sub    $0xc,%esp
    1fad:	6a 60                	push   $0x60
    1faf:	e8 6c d6 00 00       	call   f620 <malloc@plt>
    1fb4:	83 c4 10             	add    $0x10,%esp
    1fb7:	89 c3                	mov    %eax,%ebx
    1fb9:	85 c0                	test   %eax,%eax
    1fbb:	0f 84 96 00 00 00    	je     2057 <usb_device_create+0x127>
    1fc1:	c7 40 58 00 00 00 00 	movl   $0x0,0x58(%eax)
    1fc8:	8b 45 08             	mov    0x8(%ebp),%eax
    1fcb:	83 ec 0c             	sub    $0xc,%esp
    1fce:	89 43 04             	mov    %eax,0x4(%ebx)
    1fd1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    1fd4:	c7 43 5c 00 00 00 00 	movl   $0x0,0x5c(%ebx)
    1fdb:	89 43 2c             	mov    %eax,0x2c(%ebx)
    1fde:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)
    1fe5:	c7 43 54 00 00 00 00 	movl   $0x0,0x54(%ebx)
    1fec:	c7 43 28 00 00 00 00 	movl   $0x0,0x28(%ebx)
    1ff3:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
    1ffa:	8b 4d 08             	mov    0x8(%ebp),%ecx
    1ffd:	51                   	push   %ecx
    1ffe:	e8 ed 94 00 00       	call   b4f0 <usb_dev_connect>
    2003:	83 c4 10             	add    $0x10,%esp
    2006:	89 03                	mov    %eax,(%ebx)
    2008:	85 c0                	test   %eax,%eax
    200a:	74 3f                	je     204b <usb_device_create+0x11b>
    200c:	8d 73 08             	lea    0x8(%ebx),%esi
    200f:	52                   	push   %edx
    2010:	52                   	push   %edx
    2011:	50                   	push   %eax
    2012:	56                   	push   %esi
    2013:	e8 b8 07 00 00       	call   27d0 <usb_pipe_initialize_default_control>
    2018:	83 c4 10             	add    $0x10,%esp
    201b:	85 c0                	test   %eax,%eax
    201d:	75 1e                	jne    203d <usb_device_create+0x10d>
    201f:	8b 43 50             	mov    0x50(%ebx),%eax
    2022:	85 c0                	test   %eax,%eax
    2024:	0f 85 e8 00 00 00    	jne    2112 <usb_device_create+0x1e2>
    202a:	8d 43 3c             	lea    0x3c(%ebx),%eax
    202d:	57                   	push   %edi
    202e:	57                   	push   %edi
    202f:	50                   	push   %eax
    2030:	56                   	push   %esi
    2031:	e8 ba 10 00 00       	call   30f0 <usb_request_get_device_descriptor>
    2036:	83 c4 10             	add    $0x10,%esp
    2039:	85 c0                	test   %eax,%eax
    203b:	74 63                	je     20a0 <usb_device_create+0x170>
    203d:	83 ec 0c             	sub    $0xc,%esp
    2040:	8b 33                	mov    (%ebx),%esi
    2042:	56                   	push   %esi
    2043:	e8 e8 94 00 00       	call   b530 <usb_dev_disconnect>
    2048:	83 c4 10             	add    $0x10,%esp
    204b:	83 ec 0c             	sub    $0xc,%esp
    204e:	53                   	push   %ebx
    204f:	e8 4c d9 00 00       	call   f9a0 <free@plt>
    2054:	83 c4 10             	add    $0x10,%esp
    2057:	8d 65 f4             	lea    -0xc(%ebp),%esp
    205a:	31 db                	xor    %ebx,%ebx
    205c:	89 d8                	mov    %ebx,%eax
    205e:	5b                   	pop    %ebx
    205f:	5e                   	pop    %esi
    2060:	5f                   	pop    %edi
    2061:	5d                   	pop    %ebp
    2062:	c3                   	ret    
    2063:	90                   	nop
    2064:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2068:	50                   	push   %eax
    2069:	50                   	push   %eax
    206a:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    206d:	50                   	push   %eax
    206e:	56                   	push   %esi
    206f:	e8 dc 94 00 00       	call   b550 <usb_get_my_interface>
    2074:	83 c4 10             	add    $0x10,%esp
    2077:	83 f8 f5             	cmp    $0xfffffff5,%eax
    207a:	74 64                	je     20e0 <usb_device_create+0x1b0>
    207c:	83 ec 0c             	sub    $0xc,%esp
    207f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    2082:	56                   	push   %esi
    2083:	e8 38 d6 00 00       	call   f6c0 <async_exchange_end@plt>
    2088:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    208b:	83 c4 10             	add    $0x10,%esp
    208e:	89 c7                	mov    %eax,%edi
    2090:	85 db                	test   %ebx,%ebx
    2092:	0f 85 fe fe ff ff    	jne    1f96 <usb_device_create+0x66>
    2098:	e9 05 ff ff ff       	jmp    1fa2 <usb_device_create+0x72>
    209d:	8d 76 00             	lea    0x0(%esi),%esi
    20a0:	8d 43 54             	lea    0x54(%ebx),%eax
    20a3:	50                   	push   %eax
    20a4:	8d 43 50             	lea    0x50(%ebx),%eax
    20a7:	50                   	push   %eax
    20a8:	6a 00                	push   $0x0
    20aa:	56                   	push   %esi
    20ab:	e8 f0 11 00 00       	call   32a0 <usb_request_get_full_configuration_descriptor_alloc>
    20b0:	83 c4 10             	add    $0x10,%esp
    20b3:	85 c0                	test   %eax,%eax
    20b5:	75 86                	jne    203d <usb_device_create+0x10d>
    20b7:	8b 43 2c             	mov    0x2c(%ebx),%eax
    20ba:	8b 4b 50             	mov    0x50(%ebx),%ecx
    20bd:	50                   	push   %eax
    20be:	8d 43 30             	lea    0x30(%ebx),%eax
    20c1:	8b 53 54             	mov    0x54(%ebx),%edx
    20c4:	52                   	push   %edx
    20c5:	51                   	push   %ecx
    20c6:	50                   	push   %eax
    20c7:	e8 f4 1b 00 00       	call   3cc0 <usb_alternate_interfaces_init>
    20cc:	83 c4 10             	add    $0x10,%esp
    20cf:	8d 65 f4             	lea    -0xc(%ebp),%esp
    20d2:	89 d8                	mov    %ebx,%eax
    20d4:	5b                   	pop    %ebx
    20d5:	5e                   	pop    %esi
    20d6:	5f                   	pop    %edi
    20d7:	5d                   	pop    %ebp
    20d8:	c3                   	ret    
    20d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    20e0:	83 ec 0c             	sub    $0xc,%esp
    20e3:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
    20ea:	56                   	push   %esi
    20eb:	e8 d0 d5 00 00       	call   f6c0 <async_exchange_end@plt>
    20f0:	83 c4 10             	add    $0x10,%esp
    20f3:	85 db                	test   %ebx,%ebx
    20f5:	0f 84 af fe ff ff    	je     1faa <usb_device_create+0x7a>
    20fb:	e9 96 fe ff ff       	jmp    1f96 <usb_device_create+0x66>
    2100:	bf f8 ff ff ff       	mov    $0xfffffff8,%edi
    2105:	85 db                	test   %ebx,%ebx
    2107:	0f 85 89 fe ff ff    	jne    1f96 <usb_device_create+0x66>
    210d:	e9 45 ff ff ff       	jmp    2057 <usb_device_create+0x127>
    2112:	50                   	push   %eax
    2113:	68 aa 00 00 00       	push   $0xaa
    2118:	68 73 d5 00 00       	push   $0xd573
    211d:	68 d4 d6 00 00       	push   $0xd6d4
    2122:	e8 a9 d5 00 00       	call   f6d0 <assert_abort@plt>
    2127:	89 f6                	mov    %esi,%esi
    2129:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00002130 <usb_device_destroy>:
    2130:	55                   	push   %ebp
    2131:	89 e5                	mov    %esp,%ebp
    2133:	57                   	push   %edi
    2134:	56                   	push   %esi
    2135:	53                   	push   %ebx
    2136:	83 ec 0c             	sub    $0xc,%esp
    2139:	8b 7d 08             	mov    0x8(%ebp),%edi
    213c:	85 ff                	test   %edi,%edi
    213e:	0f 84 e4 00 00 00    	je     2228 <usb_device_destroy+0xf8>
    2144:	8b 47 24             	mov    0x24(%edi),%eax
    2147:	85 c0                	test   %eax,%eax
    2149:	0f 84 e1 00 00 00    	je     2230 <usb_device_destroy+0x100>
    214f:	8b 4f 28             	mov    0x28(%edi),%ecx
    2152:	85 c9                	test   %ecx,%ecx
    2154:	74 60                	je     21b6 <usb_device_destroy+0x86>
    2156:	31 f6                	xor    %esi,%esi
    2158:	eb 0c                	jmp    2166 <usb_device_destroy+0x36>
    215a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2160:	46                   	inc    %esi
    2161:	3b 77 28             	cmp    0x28(%edi),%esi
    2164:	73 50                	jae    21b6 <usb_device_destroy+0x86>
    2166:	8d 14 76             	lea    (%esi,%esi,2),%edx
    2169:	8d 1c 96             	lea    (%esi,%edx,4),%ebx
    216c:	ba b9 d5 00 00       	mov    $0xd5b9,%edx
    2171:	c1 e3 02             	shl    $0x2,%ebx
    2174:	80 7c 18 30 00       	cmpb   $0x0,0x30(%eax,%ebx,1)
    2179:	74 05                	je     2180 <usb_device_destroy+0x50>
    217b:	ba 06 f2 00 00       	mov    $0xf206,%edx
    2180:	83 ec 0c             	sub    $0xc,%esp
    2183:	52                   	push   %edx
    2184:	56                   	push   %esi
    2185:	68 8c d6 00 00       	push   $0xd68c
    218a:	6a 05                	push   $0x5
    218c:	6a ff                	push   $0xffffffff
    218e:	e8 ed d4 00 00       	call   f680 <log_msg@plt>
    2193:	8b 47 24             	mov    0x24(%edi),%eax
    2196:	83 c4 20             	add    $0x20,%esp
    2199:	01 c3                	add    %eax,%ebx
    219b:	80 7b 30 00          	cmpb   $0x0,0x30(%ebx)
    219f:	74 bf                	je     2160 <usb_device_destroy+0x30>
    21a1:	83 ec 0c             	sub    $0xc,%esp
    21a4:	46                   	inc    %esi
    21a5:	53                   	push   %ebx
    21a6:	e8 25 07 00 00       	call   28d0 <usb_pipe_unregister>
    21ab:	83 c4 10             	add    $0x10,%esp
    21ae:	8b 47 24             	mov    0x24(%edi),%eax
    21b1:	3b 77 28             	cmp    0x28(%edi),%esi
    21b4:	72 b0                	jb     2166 <usb_device_destroy+0x36>
    21b6:	83 ec 0c             	sub    $0xc,%esp
    21b9:	50                   	push   %eax
    21ba:	e8 e1 d7 00 00       	call   f9a0 <free@plt>
    21bf:	8d 47 30             	lea    0x30(%edi),%eax
    21c2:	c7 47 24 00 00 00 00 	movl   $0x0,0x24(%edi)
    21c9:	c7 47 28 00 00 00 00 	movl   $0x0,0x28(%edi)
    21d0:	89 04 24             	mov    %eax,(%esp)
    21d3:	e8 e8 1c 00 00       	call   3ec0 <usb_alternate_interfaces_deinit>
    21d8:	8b 57 50             	mov    0x50(%edi),%edx
    21db:	58                   	pop    %eax
    21dc:	52                   	push   %edx
    21dd:	e8 be d7 00 00       	call   f9a0 <free@plt>
    21e2:	c7 47 50 00 00 00 00 	movl   $0x0,0x50(%edi)
    21e9:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)
    21f0:	8b 5f 5c             	mov    0x5c(%edi),%ebx
    21f3:	59                   	pop    %ecx
    21f4:	53                   	push   %ebx
    21f5:	e8 a6 d7 00 00       	call   f9a0 <free@plt>
    21fa:	c7 47 5c 00 00 00 00 	movl   $0x0,0x5c(%edi)
    2201:	8b 07                	mov    (%edi),%eax
    2203:	5e                   	pop    %esi
    2204:	50                   	push   %eax
    2205:	e8 26 93 00 00       	call   b530 <usb_dev_disconnect>
    220a:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
    2210:	83 c4 10             	add    $0x10,%esp
    2213:	89 7d 08             	mov    %edi,0x8(%ebp)
    2216:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2219:	5b                   	pop    %ebx
    221a:	5e                   	pop    %esi
    221b:	5f                   	pop    %edi
    221c:	5d                   	pop    %ebp
    221d:	e9 7e d7 00 00       	jmp    f9a0 <free@plt>
    2222:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2228:	8d 65 f4             	lea    -0xc(%ebp),%esp
    222b:	5b                   	pop    %ebx
    222c:	5e                   	pop    %esi
    222d:	5f                   	pop    %edi
    222e:	5d                   	pop    %ebp
    222f:	c3                   	ret    
    2230:	8b 57 28             	mov    0x28(%edi),%edx
    2233:	85 d2                	test   %edx,%edx
    2235:	0f 84 7b ff ff ff    	je     21b6 <usb_device_destroy+0x86>
    223b:	50                   	push   %eax
    223c:	68 29 01 00 00       	push   $0x129
    2241:	68 73 d5 00 00       	push   $0xd573
    2246:	68 60 d6 00 00       	push   $0xd660
    224b:	e8 80 d4 00 00       	call   f6d0 <assert_abort@plt>

00002250 <usb_device_get_name>:
    2250:	55                   	push   %ebp
    2251:	89 e5                	mov    %esp,%ebp
    2253:	83 ec 08             	sub    $0x8,%esp
    2256:	8b 45 08             	mov    0x8(%ebp),%eax
    2259:	85 c0                	test   %eax,%eax
    225b:	74 17                	je     2274 <usb_device_get_name+0x24>
    225d:	8b 40 58             	mov    0x58(%eax),%eax
    2260:	85 c0                	test   %eax,%eax
    2262:	74 0c                	je     2270 <usb_device_get_name+0x20>
    2264:	89 45 08             	mov    %eax,0x8(%ebp)
    2267:	c9                   	leave  
    2268:	e9 93 2a 00 00       	jmp    4d00 <ddf_dev_get_name>
    226d:	8d 76 00             	lea    0x0(%esi),%esi
    2270:	31 c0                	xor    %eax,%eax
    2272:	c9                   	leave  
    2273:	c3                   	ret    
    2274:	50                   	push   %eax
    2275:	68 2a 02 00 00       	push   $0x22a
    227a:	68 73 d5 00 00       	push   $0xd573
    227f:	68 80 d5 00 00       	push   $0xd580
    2284:	e8 47 d4 00 00       	call   f6d0 <assert_abort@plt>
    2289:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00002290 <usb_device_ddf_fun_create>:
    2290:	55                   	push   %ebp
    2291:	89 e5                	mov    %esp,%ebp
    2293:	83 ec 08             	sub    $0x8,%esp
    2296:	8b 45 08             	mov    0x8(%ebp),%eax
    2299:	8b 55 0c             	mov    0xc(%ebp),%edx
    229c:	8b 4d 10             	mov    0x10(%ebp),%ecx
    229f:	85 c0                	test   %eax,%eax
    22a1:	74 21                	je     22c4 <usb_device_ddf_fun_create+0x34>
    22a3:	8b 40 58             	mov    0x58(%eax),%eax
    22a6:	85 c0                	test   %eax,%eax
    22a8:	74 16                	je     22c0 <usb_device_ddf_fun_create+0x30>
    22aa:	89 4d 10             	mov    %ecx,0x10(%ebp)
    22ad:	89 55 0c             	mov    %edx,0xc(%ebp)
    22b0:	89 45 08             	mov    %eax,0x8(%ebp)
    22b3:	c9                   	leave  
    22b4:	e9 17 2b 00 00       	jmp    4dd0 <ddf_fun_create>
    22b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    22c0:	31 c0                	xor    %eax,%eax
    22c2:	c9                   	leave  
    22c3:	c3                   	ret    
    22c4:	50                   	push   %eax
    22c5:	68 33 02 00 00       	push   $0x233
    22ca:	68 73 d5 00 00       	push   $0xd573
    22cf:	68 80 d5 00 00       	push   $0xd580
    22d4:	e8 f7 d3 00 00       	call   f6d0 <assert_abort@plt>
    22d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000022e0 <usb_device_bus_exchange_begin>:
    22e0:	55                   	push   %ebp
    22e1:	89 e5                	mov    %esp,%ebp
    22e3:	83 ec 08             	sub    $0x8,%esp
    22e6:	8b 45 08             	mov    0x8(%ebp),%eax
    22e9:	85 c0                	test   %eax,%eax
    22eb:	74 0b                	je     22f8 <usb_device_bus_exchange_begin+0x18>
    22ed:	8b 00                	mov    (%eax),%eax
    22ef:	89 45 08             	mov    %eax,0x8(%ebp)
    22f2:	c9                   	leave  
    22f3:	e9 b8 d5 00 00       	jmp    f8b0 <async_exchange_begin@plt>
    22f8:	50                   	push   %eax
    22f9:	68 3b 02 00 00       	push   $0x23b
    22fe:	68 73 d5 00 00       	push   $0xd573
    2303:	68 80 d5 00 00       	push   $0xd580
    2308:	e8 c3 d3 00 00       	call   f6d0 <assert_abort@plt>
    230d:	8d 76 00             	lea    0x0(%esi),%esi

00002310 <usb_device_bus_exchange_end>:
    2310:	55                   	push   %ebp
    2311:	89 e5                	mov    %esp,%ebp
    2313:	5d                   	pop    %ebp
    2314:	e9 a7 d3 00 00       	jmp    f6c0 <async_exchange_end@plt>
    2319:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00002320 <usb_device_data_alloc>:
    2320:	55                   	push   %ebp
    2321:	89 e5                	mov    %esp,%ebp
    2323:	53                   	push   %ebx
    2324:	50                   	push   %eax
    2325:	8b 5d 08             	mov    0x8(%ebp),%ebx
    2328:	85 db                	test   %ebx,%ebx
    232a:	74 1c                	je     2348 <usb_device_data_alloc+0x28>
    232c:	8b 43 5c             	mov    0x5c(%ebx),%eax
    232f:	85 c0                	test   %eax,%eax
    2331:	75 2a                	jne    235d <usb_device_data_alloc+0x3d>
    2333:	8b 55 0c             	mov    0xc(%ebp),%edx
    2336:	50                   	push   %eax
    2337:	50                   	push   %eax
    2338:	52                   	push   %edx
    2339:	6a 01                	push   $0x1
    233b:	e8 b0 d3 00 00       	call   f6f0 <calloc@plt>
    2340:	89 43 5c             	mov    %eax,0x5c(%ebx)
    2343:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    2346:	c9                   	leave  
    2347:	c3                   	ret    
    2348:	50                   	push   %eax
    2349:	68 4b 02 00 00       	push   $0x24b
    234e:	68 73 d5 00 00       	push   $0xd573
    2353:	68 80 d5 00 00       	push   $0xd580
    2358:	e8 73 d3 00 00       	call   f6d0 <assert_abort@plt>
    235d:	51                   	push   %ecx
    235e:	68 4c 02 00 00       	push   $0x24c
    2363:	68 73 d5 00 00       	push   $0xd573
    2368:	68 1d d6 00 00       	push   $0xd61d
    236d:	e8 5e d3 00 00       	call   f6d0 <assert_abort@plt>
    2372:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    2379:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00002380 <usb_device_data_get>:
    2380:	55                   	push   %ebp
    2381:	89 e5                	mov    %esp,%ebp
    2383:	83 ec 08             	sub    $0x8,%esp
    2386:	8b 45 08             	mov    0x8(%ebp),%eax
    2389:	85 c0                	test   %eax,%eax
    238b:	74 05                	je     2392 <usb_device_data_get+0x12>
    238d:	8b 40 5c             	mov    0x5c(%eax),%eax
    2390:	c9                   	leave  
    2391:	c3                   	ret    
    2392:	50                   	push   %eax
    2393:	68 53 02 00 00       	push   $0x253
    2398:	68 73 d5 00 00       	push   $0xd573
    239d:	68 80 d5 00 00       	push   $0xd580
    23a2:	e8 29 d3 00 00       	call   f6d0 <assert_abort@plt>
    23a7:	66 90                	xchg   %ax,%ax
    23a9:	66 90                	xchg   %ax,%ax
    23ab:	66 90                	xchg   %ax,%ax
    23ad:	66 90                	xchg   %ax,%ax
    23af:	90                   	nop

000023b0 <usb_pipe_control_read>:
    23b0:	55                   	push   %ebp
    23b1:	89 e5                	mov    %esp,%ebp
    23b3:	57                   	push   %edi
    23b4:	56                   	push   %esi
    23b5:	53                   	push   %ebx
    23b6:	83 ec 2c             	sub    $0x2c,%esp
    23b9:	8b 5d 08             	mov    0x8(%ebp),%ebx
    23bc:	8b 45 0c             	mov    0xc(%ebp),%eax
    23bf:	8b 75 14             	mov    0x14(%ebp),%esi
    23c2:	85 db                	test   %ebx,%ebx
    23c4:	0f 84 f5 00 00 00    	je     24bf <usb_pipe_control_read+0x10f>
    23ca:	85 c0                	test   %eax,%eax
    23cc:	0f 84 ce 00 00 00    	je     24a0 <usb_pipe_control_read+0xf0>
    23d2:	83 7d 10 08          	cmpl   $0x8,0x10(%ebp)
    23d6:	0f 85 c4 00 00 00    	jne    24a0 <usb_pipe_control_read+0xf0>
    23dc:	85 f6                	test   %esi,%esi
    23de:	0f 84 bc 00 00 00    	je     24a0 <usb_pipe_control_read+0xf0>
    23e4:	8b 4d 18             	mov    0x18(%ebp),%ecx
    23e7:	85 c9                	test   %ecx,%ecx
    23e9:	0f 84 b1 00 00 00    	je     24a0 <usb_pipe_control_read+0xf0>
    23ef:	83 7b 08 02          	cmpl   $0x2,0x8(%ebx)
    23f3:	75 7b                	jne    2470 <usb_pipe_control_read+0xc0>
    23f5:	8b 53 04             	mov    0x4(%ebx),%edx
    23f8:	85 d2                	test   %edx,%edx
    23fa:	75 74                	jne    2470 <usb_pipe_control_read+0xc0>
    23fc:	57                   	push   %edi
    23fd:	6a 08                	push   $0x8
    23ff:	50                   	push   %eax
    2400:	8d 45 e0             	lea    -0x20(%ebp),%eax
    2403:	50                   	push   %eax
    2404:	e8 07 d2 00 00       	call   f610 <memcpy@plt>
    2409:	58                   	pop    %eax
    240a:	8b 43 18             	mov    0x18(%ebx),%eax
    240d:	50                   	push   %eax
    240e:	e8 9d d4 00 00       	call   f8b0 <async_exchange_begin@plt>
    2413:	83 c4 0c             	add    $0xc,%esp
    2416:	89 c7                	mov    %eax,%edi
    2418:	8d 45 dc             	lea    -0x24(%ebp),%eax
    241b:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    2422:	50                   	push   %eax
    2423:	8b 45 18             	mov    0x18(%ebp),%eax
    2426:	50                   	push   %eax
    2427:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    242a:	56                   	push   %esi
    242b:	50                   	push   %eax
    242c:	8b 45 e0             	mov    -0x20(%ebp),%eax
    242f:	50                   	push   %eax
    2430:	0f bf 03             	movswl (%ebx),%eax
    2433:	50                   	push   %eax
    2434:	57                   	push   %edi
    2435:	e8 66 93 00 00       	call   b7a0 <usb_read>
    243a:	83 c4 14             	add    $0x14,%esp
    243d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    2440:	57                   	push   %edi
    2441:	e8 7a d2 00 00       	call   f6c0 <async_exchange_end@plt>
    2446:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    2449:	83 c4 10             	add    $0x10,%esp
    244c:	3d d3 fe ff ff       	cmp    $0xfffffed3,%eax
    2451:	74 2d                	je     2480 <usb_pipe_control_read+0xd0>
    2453:	85 c0                	test   %eax,%eax
    2455:	75 0f                	jne    2466 <usb_pipe_control_read+0xb6>
    2457:	8b 55 1c             	mov    0x1c(%ebp),%edx
    245a:	85 d2                	test   %edx,%edx
    245c:	74 08                	je     2466 <usb_pipe_control_read+0xb6>
    245e:	8b 4d 1c             	mov    0x1c(%ebp),%ecx
    2461:	8b 55 dc             	mov    -0x24(%ebp),%edx
    2464:	89 11                	mov    %edx,(%ecx)
    2466:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2469:	5b                   	pop    %ebx
    246a:	5e                   	pop    %esi
    246b:	5f                   	pop    %edi
    246c:	5d                   	pop    %ebp
    246d:	c3                   	ret    
    246e:	66 90                	xchg   %ax,%ax
    2470:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2473:	b8 fa fe ff ff       	mov    $0xfffffefa,%eax
    2478:	5b                   	pop    %ebx
    2479:	5e                   	pop    %esi
    247a:	5f                   	pop    %edi
    247b:	5d                   	pop    %ebp
    247c:	c3                   	ret    
    247d:	8d 76 00             	lea    0x0(%esi),%esi
    2480:	80 7b 14 00          	cmpb   $0x0,0x14(%ebx)
    2484:	74 06                	je     248c <usb_pipe_control_read+0xdc>
    2486:	66 83 3b 00          	cmpw   $0x0,(%ebx)
    248a:	74 1c                	je     24a8 <usb_pipe_control_read+0xf8>
    248c:	8d 65 f4             	lea    -0xc(%ebp),%esp
    248f:	b8 d3 fe ff ff       	mov    $0xfffffed3,%eax
    2494:	5b                   	pop    %ebx
    2495:	5e                   	pop    %esi
    2496:	5f                   	pop    %edi
    2497:	5d                   	pop    %ebp
    2498:	c3                   	ret    
    2499:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    24a0:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    24a5:	eb bf                	jmp    2466 <usb_pipe_control_read+0xb6>
    24a7:	90                   	nop
    24a8:	c6 43 14 00          	movb   $0x0,0x14(%ebx)
    24ac:	51                   	push   %ecx
    24ad:	51                   	push   %ecx
    24ae:	6a 00                	push   $0x0
    24b0:	53                   	push   %ebx
    24b1:	e8 2a 16 00 00       	call   3ae0 <usb_request_clear_endpoint_halt>
    24b6:	c6 43 14 01          	movb   $0x1,0x14(%ebx)
    24ba:	83 c4 10             	add    $0x10,%esp
    24bd:	eb cd                	jmp    248c <usb_pipe_control_read+0xdc>
    24bf:	53                   	push   %ebx
    24c0:	6a 50                	push   $0x50
    24c2:	68 fd d6 00 00       	push   $0xd6fd
    24c7:	68 09 d7 00 00       	push   $0xd709
    24cc:	e8 ff d1 00 00       	call   f6d0 <assert_abort@plt>
    24d1:	eb 0d                	jmp    24e0 <usb_pipe_control_write>
    24d3:	90                   	nop
    24d4:	90                   	nop
    24d5:	90                   	nop
    24d6:	90                   	nop
    24d7:	90                   	nop
    24d8:	90                   	nop
    24d9:	90                   	nop
    24da:	90                   	nop
    24db:	90                   	nop
    24dc:	90                   	nop
    24dd:	90                   	nop
    24de:	90                   	nop
    24df:	90                   	nop

000024e0 <usb_pipe_control_write>:
    24e0:	55                   	push   %ebp
    24e1:	89 e5                	mov    %esp,%ebp
    24e3:	57                   	push   %edi
    24e4:	56                   	push   %esi
    24e5:	53                   	push   %ebx
    24e6:	83 ec 1c             	sub    $0x1c,%esp
    24e9:	8b 5d 08             	mov    0x8(%ebp),%ebx
    24ec:	8b 45 0c             	mov    0xc(%ebp),%eax
    24ef:	8b 75 14             	mov    0x14(%ebp),%esi
    24f2:	85 db                	test   %ebx,%ebx
    24f4:	0f 84 c9 00 00 00    	je     25c3 <usb_pipe_control_write+0xe3>
    24fa:	85 c0                	test   %eax,%eax
    24fc:	0f 84 7e 00 00 00    	je     2580 <usb_pipe_control_write+0xa0>
    2502:	83 7d 10 08          	cmpl   $0x8,0x10(%ebp)
    2506:	75 78                	jne    2580 <usb_pipe_control_write+0xa0>
    2508:	85 f6                	test   %esi,%esi
    250a:	75 07                	jne    2513 <usb_pipe_control_write+0x33>
    250c:	8b 7d 18             	mov    0x18(%ebp),%edi
    250f:	85 ff                	test   %edi,%edi
    2511:	75 6d                	jne    2580 <usb_pipe_control_write+0xa0>
    2513:	85 f6                	test   %esi,%esi
    2515:	74 07                	je     251e <usb_pipe_control_write+0x3e>
    2517:	8b 4d 18             	mov    0x18(%ebp),%ecx
    251a:	85 c9                	test   %ecx,%ecx
    251c:	74 62                	je     2580 <usb_pipe_control_write+0xa0>
    251e:	83 7b 08 02          	cmpl   $0x2,0x8(%ebx)
    2522:	75 6c                	jne    2590 <usb_pipe_control_write+0xb0>
    2524:	8b 53 04             	mov    0x4(%ebx),%edx
    2527:	85 d2                	test   %edx,%edx
    2529:	75 65                	jne    2590 <usb_pipe_control_write+0xb0>
    252b:	52                   	push   %edx
    252c:	6a 08                	push   $0x8
    252e:	50                   	push   %eax
    252f:	8d 45 e0             	lea    -0x20(%ebp),%eax
    2532:	50                   	push   %eax
    2533:	e8 d8 d0 00 00       	call   f610 <memcpy@plt>
    2538:	8b 7b 18             	mov    0x18(%ebx),%edi
    253b:	59                   	pop    %ecx
    253c:	57                   	push   %edi
    253d:	e8 6e d3 00 00       	call   f8b0 <async_exchange_begin@plt>
    2542:	8b 4d 18             	mov    0x18(%ebp),%ecx
    2545:	89 c7                	mov    %eax,%edi
    2547:	58                   	pop    %eax
    2548:	8b 45 e0             	mov    -0x20(%ebp),%eax
    254b:	5a                   	pop    %edx
    254c:	51                   	push   %ecx
    254d:	56                   	push   %esi
    254e:	8b 75 e4             	mov    -0x1c(%ebp),%esi
    2551:	56                   	push   %esi
    2552:	50                   	push   %eax
    2553:	0f bf 03             	movswl (%ebx),%eax
    2556:	50                   	push   %eax
    2557:	57                   	push   %edi
    2558:	e8 33 93 00 00       	call   b890 <usb_write>
    255d:	83 c4 14             	add    $0x14,%esp
    2560:	89 c6                	mov    %eax,%esi
    2562:	57                   	push   %edi
    2563:	e8 58 d1 00 00       	call   f6c0 <async_exchange_end@plt>
    2568:	83 c4 10             	add    $0x10,%esp
    256b:	81 fe d3 fe ff ff    	cmp    $0xfffffed3,%esi
    2571:	74 2d                	je     25a0 <usb_pipe_control_write+0xc0>
    2573:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2576:	89 f0                	mov    %esi,%eax
    2578:	5b                   	pop    %ebx
    2579:	5e                   	pop    %esi
    257a:	5f                   	pop    %edi
    257b:	5d                   	pop    %ebp
    257c:	c3                   	ret    
    257d:	8d 76 00             	lea    0x0(%esi),%esi
    2580:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2583:	be f2 ff ff ff       	mov    $0xfffffff2,%esi
    2588:	89 f0                	mov    %esi,%eax
    258a:	5b                   	pop    %ebx
    258b:	5e                   	pop    %esi
    258c:	5f                   	pop    %edi
    258d:	5d                   	pop    %ebp
    258e:	c3                   	ret    
    258f:	90                   	nop
    2590:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2593:	be fa fe ff ff       	mov    $0xfffffefa,%esi
    2598:	89 f0                	mov    %esi,%eax
    259a:	5b                   	pop    %ebx
    259b:	5e                   	pop    %esi
    259c:	5f                   	pop    %edi
    259d:	5d                   	pop    %ebp
    259e:	c3                   	ret    
    259f:	90                   	nop
    25a0:	80 7b 14 00          	cmpb   $0x0,0x14(%ebx)
    25a4:	74 cd                	je     2573 <usb_pipe_control_write+0x93>
    25a6:	66 83 3b 00          	cmpw   $0x0,(%ebx)
    25aa:	75 c7                	jne    2573 <usb_pipe_control_write+0x93>
    25ac:	c6 43 14 00          	movb   $0x0,0x14(%ebx)
    25b0:	50                   	push   %eax
    25b1:	50                   	push   %eax
    25b2:	6a 00                	push   $0x0
    25b4:	53                   	push   %ebx
    25b5:	e8 26 15 00 00       	call   3ae0 <usb_request_clear_endpoint_halt>
    25ba:	c6 43 14 01          	movb   $0x1,0x14(%ebx)
    25be:	83 c4 10             	add    $0x10,%esp
    25c1:	eb b0                	jmp    2573 <usb_pipe_control_write+0x93>
    25c3:	50                   	push   %eax
    25c4:	68 82 00 00 00       	push   $0x82
    25c9:	68 fd d6 00 00       	push   $0xd6fd
    25ce:	68 09 d7 00 00       	push   $0xd709
    25d3:	e8 f8 d0 00 00       	call   f6d0 <assert_abort@plt>
    25d8:	90                   	nop
    25d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000025e0 <usb_pipe_read>:
    25e0:	55                   	push   %ebp
    25e1:	89 e5                	mov    %esp,%ebp
    25e3:	57                   	push   %edi
    25e4:	56                   	push   %esi
    25e5:	53                   	push   %ebx
    25e6:	83 ec 2c             	sub    $0x2c,%esp
    25e9:	8b 5d 08             	mov    0x8(%ebp),%ebx
    25ec:	8b 75 0c             	mov    0xc(%ebp),%esi
    25ef:	85 db                	test   %ebx,%ebx
    25f1:	0f 84 a8 00 00 00    	je     269f <usb_pipe_read+0xbf>
    25f7:	85 f6                	test   %esi,%esi
    25f9:	0f 84 99 00 00 00    	je     2698 <usb_pipe_read+0xb8>
    25ff:	8b 45 10             	mov    0x10(%ebp),%eax
    2602:	85 c0                	test   %eax,%eax
    2604:	0f 84 8e 00 00 00    	je     2698 <usb_pipe_read+0xb8>
    260a:	8b 43 08             	mov    0x8(%ebx),%eax
    260d:	85 c0                	test   %eax,%eax
    260f:	75 7f                	jne    2690 <usb_pipe_read+0xb0>
    2611:	8b 43 04             	mov    0x4(%ebx),%eax
    2614:	85 c0                	test   %eax,%eax
    2616:	74 78                	je     2690 <usb_pipe_read+0xb0>
    2618:	83 e8 02             	sub    $0x2,%eax
    261b:	83 f8 01             	cmp    $0x1,%eax
    261e:	77 60                	ja     2680 <usb_pipe_read+0xa0>
    2620:	83 ec 0c             	sub    $0xc,%esp
    2623:	8b 4b 18             	mov    0x18(%ebx),%ecx
    2626:	51                   	push   %ecx
    2627:	e8 84 d2 00 00       	call   f8b0 <async_exchange_begin@plt>
    262c:	83 c4 0c             	add    $0xc,%esp
    262f:	89 c7                	mov    %eax,%edi
    2631:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    2634:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    263b:	50                   	push   %eax
    263c:	8b 45 10             	mov    0x10(%ebp),%eax
    263f:	50                   	push   %eax
    2640:	56                   	push   %esi
    2641:	0f bf 03             	movswl (%ebx),%eax
    2644:	6a 00                	push   $0x0
    2646:	6a 00                	push   $0x0
    2648:	50                   	push   %eax
    2649:	57                   	push   %edi
    264a:	e8 51 91 00 00       	call   b7a0 <usb_read>
    264f:	83 c4 14             	add    $0x14,%esp
    2652:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    2655:	57                   	push   %edi
    2656:	e8 65 d0 00 00       	call   f6c0 <async_exchange_end@plt>
    265b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    265e:	83 c4 10             	add    $0x10,%esp
    2661:	85 c0                	test   %eax,%eax
    2663:	75 0f                	jne    2674 <usb_pipe_read+0x94>
    2665:	8b 55 14             	mov    0x14(%ebp),%edx
    2668:	85 d2                	test   %edx,%edx
    266a:	74 08                	je     2674 <usb_pipe_read+0x94>
    266c:	8b 4d 14             	mov    0x14(%ebp),%ecx
    266f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    2672:	89 11                	mov    %edx,(%ecx)
    2674:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2677:	5b                   	pop    %ebx
    2678:	5e                   	pop    %esi
    2679:	5f                   	pop    %edi
    267a:	5d                   	pop    %ebp
    267b:	c3                   	ret    
    267c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2680:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2683:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    2688:	5b                   	pop    %ebx
    2689:	5e                   	pop    %esi
    268a:	5f                   	pop    %edi
    268b:	5d                   	pop    %ebp
    268c:	c3                   	ret    
    268d:	8d 76 00             	lea    0x0(%esi),%esi
    2690:	b8 fa fe ff ff       	mov    $0xfffffefa,%eax
    2695:	eb dd                	jmp    2674 <usb_pipe_read+0x94>
    2697:	90                   	nop
    2698:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    269d:	eb d5                	jmp    2674 <usb_pipe_read+0x94>
    269f:	50                   	push   %eax
    26a0:	68 af 00 00 00       	push   $0xaf
    26a5:	68 fd d6 00 00       	push   $0xd6fd
    26aa:	68 09 d7 00 00       	push   $0xd709
    26af:	e8 1c d0 00 00       	call   f6d0 <assert_abort@plt>
    26b4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    26ba:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000026c0 <usb_pipe_write>:
    26c0:	55                   	push   %ebp
    26c1:	89 e5                	mov    %esp,%ebp
    26c3:	57                   	push   %edi
    26c4:	56                   	push   %esi
    26c5:	53                   	push   %ebx
    26c6:	83 ec 1c             	sub    $0x1c,%esp
    26c9:	8b 5d 08             	mov    0x8(%ebp),%ebx
    26cc:	8b 75 0c             	mov    0xc(%ebp),%esi
    26cf:	85 db                	test   %ebx,%ebx
    26d1:	0f 84 88 00 00 00    	je     275f <usb_pipe_write+0x9f>
    26d7:	85 f6                	test   %esi,%esi
    26d9:	74 7d                	je     2758 <usb_pipe_write+0x98>
    26db:	8b 45 10             	mov    0x10(%ebp),%eax
    26de:	85 c0                	test   %eax,%eax
    26e0:	74 76                	je     2758 <usb_pipe_write+0x98>
    26e2:	83 7b 08 01          	cmpl   $0x1,0x8(%ebx)
    26e6:	75 60                	jne    2748 <usb_pipe_write+0x88>
    26e8:	8b 43 04             	mov    0x4(%ebx),%eax
    26eb:	85 c0                	test   %eax,%eax
    26ed:	74 59                	je     2748 <usb_pipe_write+0x88>
    26ef:	83 e8 02             	sub    $0x2,%eax
    26f2:	83 f8 01             	cmp    $0x1,%eax
    26f5:	77 41                	ja     2738 <usb_pipe_write+0x78>
    26f7:	83 ec 0c             	sub    $0xc,%esp
    26fa:	8b 43 18             	mov    0x18(%ebx),%eax
    26fd:	50                   	push   %eax
    26fe:	e8 ad d1 00 00       	call   f8b0 <async_exchange_begin@plt>
    2703:	89 c7                	mov    %eax,%edi
    2705:	8b 45 10             	mov    0x10(%ebp),%eax
    2708:	5a                   	pop    %edx
    2709:	59                   	pop    %ecx
    270a:	50                   	push   %eax
    270b:	56                   	push   %esi
    270c:	0f bf 03             	movswl (%ebx),%eax
    270f:	6a 00                	push   $0x0
    2711:	6a 00                	push   $0x0
    2713:	50                   	push   %eax
    2714:	57                   	push   %edi
    2715:	e8 76 91 00 00       	call   b890 <usb_write>
    271a:	83 c4 14             	add    $0x14,%esp
    271d:	57                   	push   %edi
    271e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    2721:	e8 9a cf 00 00       	call   f6c0 <async_exchange_end@plt>
    2726:	83 c4 10             	add    $0x10,%esp
    2729:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    272c:	8d 65 f4             	lea    -0xc(%ebp),%esp
    272f:	5b                   	pop    %ebx
    2730:	5e                   	pop    %esi
    2731:	5f                   	pop    %edi
    2732:	5d                   	pop    %ebp
    2733:	c3                   	ret    
    2734:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2738:	8d 65 f4             	lea    -0xc(%ebp),%esp
    273b:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    2740:	5b                   	pop    %ebx
    2741:	5e                   	pop    %esi
    2742:	5f                   	pop    %edi
    2743:	5d                   	pop    %ebp
    2744:	c3                   	ret    
    2745:	8d 76 00             	lea    0x0(%esi),%esi
    2748:	8d 65 f4             	lea    -0xc(%ebp),%esp
    274b:	b8 fa fe ff ff       	mov    $0xfffffefa,%eax
    2750:	5b                   	pop    %ebx
    2751:	5e                   	pop    %esi
    2752:	5f                   	pop    %edi
    2753:	5d                   	pop    %ebp
    2754:	c3                   	ret    
    2755:	8d 76 00             	lea    0x0(%esi),%esi
    2758:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    275d:	eb cd                	jmp    272c <usb_pipe_write+0x6c>
    275f:	50                   	push   %eax
    2760:	68 dc 00 00 00       	push   $0xdc
    2765:	68 fd d6 00 00       	push   $0xd6fd
    276a:	68 09 d7 00 00       	push   $0xd709
    276f:	e8 5c cf 00 00       	call   f6d0 <assert_abort@plt>
    2774:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    277a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00002780 <usb_pipe_initialize>:
    2780:	55                   	push   %ebp
    2781:	89 e5                	mov    %esp,%ebp
    2783:	83 ec 08             	sub    $0x8,%esp
    2786:	8b 45 08             	mov    0x8(%ebp),%eax
    2789:	8b 55 0c             	mov    0xc(%ebp),%edx
    278c:	85 c0                	test   %eax,%eax
    278e:	74 29                	je     27b9 <usb_pipe_initialize+0x39>
    2790:	66 89 10             	mov    %dx,(%eax)
    2793:	8b 55 10             	mov    0x10(%ebp),%edx
    2796:	89 50 04             	mov    %edx,0x4(%eax)
    2799:	8b 55 1c             	mov    0x1c(%ebp),%edx
    279c:	89 50 10             	mov    %edx,0x10(%eax)
    279f:	8b 55 14             	mov    0x14(%ebp),%edx
    27a2:	89 50 0c             	mov    %edx,0xc(%eax)
    27a5:	8b 55 18             	mov    0x18(%ebp),%edx
    27a8:	89 50 08             	mov    %edx,0x8(%eax)
    27ab:	8b 55 20             	mov    0x20(%ebp),%edx
    27ae:	c6 40 14 00          	movb   $0x0,0x14(%eax)
    27b2:	89 50 18             	mov    %edx,0x18(%eax)
    27b5:	c9                   	leave  
    27b6:	31 c0                	xor    %eax,%eax
    27b8:	c3                   	ret    
    27b9:	50                   	push   %eax
    27ba:	68 02 01 00 00       	push   $0x102
    27bf:	68 fd d6 00 00       	push   $0xd6fd
    27c4:	68 09 d7 00 00       	push   $0xd709
    27c9:	e8 02 cf 00 00       	call   f6d0 <assert_abort@plt>
    27ce:	66 90                	xchg   %ax,%ax

000027d0 <usb_pipe_initialize_default_control>:
    27d0:	55                   	push   %ebp
    27d1:	89 e5                	mov    %esp,%ebp
    27d3:	83 ec 08             	sub    $0x8,%esp
    27d6:	8b 45 08             	mov    0x8(%ebp),%eax
    27d9:	85 c0                	test   %eax,%eax
    27db:	74 2f                	je     280c <usb_pipe_initialize_default_control+0x3c>
    27dd:	8b 55 0c             	mov    0xc(%ebp),%edx
    27e0:	66 c7 00 00 00       	movw   $0x0,(%eax)
    27e5:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
    27ec:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
    27f3:	c7 40 0c 08 00 00 00 	movl   $0x8,0xc(%eax)
    27fa:	c7 40 08 02 00 00 00 	movl   $0x2,0x8(%eax)
    2801:	89 50 18             	mov    %edx,0x18(%eax)
    2804:	c6 40 14 01          	movb   $0x1,0x14(%eax)
    2808:	c9                   	leave  
    2809:	31 c0                	xor    %eax,%eax
    280b:	c3                   	ret    
    280c:	50                   	push   %eax
    280d:	68 17 01 00 00       	push   $0x117
    2812:	68 fd d6 00 00       	push   $0xd6fd
    2817:	68 09 d7 00 00       	push   $0xd709
    281c:	e8 af ce 00 00       	call   f6d0 <assert_abort@plt>
    2821:	eb 0d                	jmp    2830 <usb_pipe_register>
    2823:	90                   	nop
    2824:	90                   	nop
    2825:	90                   	nop
    2826:	90                   	nop
    2827:	90                   	nop
    2828:	90                   	nop
    2829:	90                   	nop
    282a:	90                   	nop
    282b:	90                   	nop
    282c:	90                   	nop
    282d:	90                   	nop
    282e:	90                   	nop
    282f:	90                   	nop

00002830 <usb_pipe_register>:
    2830:	55                   	push   %ebp
    2831:	89 e5                	mov    %esp,%ebp
    2833:	56                   	push   %esi
    2834:	53                   	push   %ebx
    2835:	83 ec 10             	sub    $0x10,%esp
    2838:	8b 5d 08             	mov    0x8(%ebp),%ebx
    283b:	85 db                	test   %ebx,%ebx
    283d:	74 6d                	je     28ac <usb_pipe_register+0x7c>
    283f:	8b 43 18             	mov    0x18(%ebx),%eax
    2842:	85 c0                	test   %eax,%eax
    2844:	74 51                	je     2897 <usb_pipe_register+0x67>
    2846:	83 ec 0c             	sub    $0xc,%esp
    2849:	50                   	push   %eax
    284a:	e8 61 d0 00 00       	call   f8b0 <async_exchange_begin@plt>
    284f:	83 c4 10             	add    $0x10,%esp
    2852:	89 c6                	mov    %eax,%esi
    2854:	85 c0                	test   %eax,%eax
    2856:	74 38                	je     2890 <usb_pipe_register+0x60>
    2858:	8b 55 0c             	mov    0xc(%ebp),%edx
    285b:	50                   	push   %eax
    285c:	52                   	push   %edx
    285d:	8b 4b 10             	mov    0x10(%ebx),%ecx
    2860:	51                   	push   %ecx
    2861:	8b 43 0c             	mov    0xc(%ebx),%eax
    2864:	50                   	push   %eax
    2865:	8b 43 08             	mov    0x8(%ebx),%eax
    2868:	50                   	push   %eax
    2869:	8b 43 04             	mov    0x4(%ebx),%eax
    286c:	50                   	push   %eax
    286d:	0f bf 03             	movswl (%ebx),%eax
    2870:	50                   	push   %eax
    2871:	56                   	push   %esi
    2872:	e8 79 8e 00 00       	call   b6f0 <usb_register_endpoint>
    2877:	83 c4 14             	add    $0x14,%esp
    287a:	56                   	push   %esi
    287b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    287e:	e8 3d ce 00 00       	call   f6c0 <async_exchange_end@plt>
    2883:	83 c4 10             	add    $0x10,%esp
    2886:	8b 45 f4             	mov    -0xc(%ebp),%eax
    2889:	8d 65 f8             	lea    -0x8(%ebp),%esp
    288c:	5b                   	pop    %ebx
    288d:	5e                   	pop    %esi
    288e:	5d                   	pop    %ebp
    288f:	c3                   	ret    
    2890:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    2895:	eb f2                	jmp    2889 <usb_pipe_register+0x59>
    2897:	50                   	push   %eax
    2898:	68 2a 01 00 00       	push   $0x12a
    289d:	68 fd d6 00 00       	push   $0xd6fd
    28a2:	68 0e d7 00 00       	push   $0xd70e
    28a7:	e8 24 ce 00 00       	call   f6d0 <assert_abort@plt>
    28ac:	50                   	push   %eax
    28ad:	68 29 01 00 00       	push   $0x129
    28b2:	68 fd d6 00 00       	push   $0xd6fd
    28b7:	68 09 d7 00 00       	push   $0xd709
    28bc:	e8 0f ce 00 00       	call   f6d0 <assert_abort@plt>
    28c1:	eb 0d                	jmp    28d0 <usb_pipe_unregister>
    28c3:	90                   	nop
    28c4:	90                   	nop
    28c5:	90                   	nop
    28c6:	90                   	nop
    28c7:	90                   	nop
    28c8:	90                   	nop
    28c9:	90                   	nop
    28ca:	90                   	nop
    28cb:	90                   	nop
    28cc:	90                   	nop
    28cd:	90                   	nop
    28ce:	90                   	nop
    28cf:	90                   	nop

000028d0 <usb_pipe_unregister>:
    28d0:	55                   	push   %ebp
    28d1:	89 e5                	mov    %esp,%ebp
    28d3:	56                   	push   %esi
    28d4:	53                   	push   %ebx
    28d5:	83 ec 10             	sub    $0x10,%esp
    28d8:	8b 5d 08             	mov    0x8(%ebp),%ebx
    28db:	85 db                	test   %ebx,%ebx
    28dd:	74 5d                	je     293c <usb_pipe_unregister+0x6c>
    28df:	8b 43 18             	mov    0x18(%ebx),%eax
    28e2:	85 c0                	test   %eax,%eax
    28e4:	74 41                	je     2927 <usb_pipe_unregister+0x57>
    28e6:	83 ec 0c             	sub    $0xc,%esp
    28e9:	50                   	push   %eax
    28ea:	e8 c1 cf 00 00       	call   f8b0 <async_exchange_begin@plt>
    28ef:	83 c4 10             	add    $0x10,%esp
    28f2:	89 c6                	mov    %eax,%esi
    28f4:	85 c0                	test   %eax,%eax
    28f6:	74 28                	je     2920 <usb_pipe_unregister+0x50>
    28f8:	50                   	push   %eax
    28f9:	0f bf 03             	movswl (%ebx),%eax
    28fc:	8b 53 08             	mov    0x8(%ebx),%edx
    28ff:	52                   	push   %edx
    2900:	50                   	push   %eax
    2901:	56                   	push   %esi
    2902:	e8 59 8e 00 00       	call   b760 <usb_unregister_endpoint>
    2907:	89 34 24             	mov    %esi,(%esp)
    290a:	89 45 f4             	mov    %eax,-0xc(%ebp)
    290d:	e8 ae cd 00 00       	call   f6c0 <async_exchange_end@plt>
    2912:	83 c4 10             	add    $0x10,%esp
    2915:	8b 45 f4             	mov    -0xc(%ebp),%eax
    2918:	8d 65 f8             	lea    -0x8(%ebp),%esp
    291b:	5b                   	pop    %ebx
    291c:	5e                   	pop    %esi
    291d:	5d                   	pop    %ebp
    291e:	c3                   	ret    
    291f:	90                   	nop
    2920:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    2925:	eb f1                	jmp    2918 <usb_pipe_unregister+0x48>
    2927:	51                   	push   %ecx
    2928:	68 3d 01 00 00       	push   $0x13d
    292d:	68 fd d6 00 00       	push   $0xd6fd
    2932:	68 0e d7 00 00       	push   $0xd70e
    2937:	e8 94 cd 00 00       	call   f6d0 <assert_abort@plt>
    293c:	53                   	push   %ebx
    293d:	68 3c 01 00 00       	push   $0x13c
    2942:	68 fd d6 00 00       	push   $0xd6fd
    2947:	68 09 d7 00 00       	push   $0xd709
    294c:	e8 7f cd 00 00       	call   f6d0 <assert_abort@plt>
    2951:	66 90                	xchg   %ax,%ax
    2953:	66 90                	xchg   %ax,%ax
    2955:	66 90                	xchg   %ax,%ax
    2957:	66 90                	xchg   %ax,%ax
    2959:	66 90                	xchg   %ax,%ax
    295b:	66 90                	xchg   %ax,%ax
    295d:	66 90                	xchg   %ax,%ax
    295f:	90                   	nop

00002960 <usb_pipe_initialize_from_configuration>:
    2960:	55                   	push   %ebp
    2961:	89 e5                	mov    %esp,%ebp
    2963:	57                   	push   %edi
    2964:	56                   	push   %esi
    2965:	53                   	push   %ebx
    2966:	83 ec 4c             	sub    $0x4c,%esp
    2969:	8b 75 10             	mov    0x10(%ebp),%esi
    296c:	8b 4d 14             	mov    0x14(%ebp),%ecx
    296f:	85 f6                	test   %esi,%esi
    2971:	0f 84 25 02 00 00    	je     2b9c <usb_pipe_initialize_from_configuration+0x23c>
    2977:	83 f9 08             	cmp    $0x8,%ecx
    297a:	0f 86 10 02 00 00    	jbe    2b90 <usb_pipe_initialize_from_configuration+0x230>
    2980:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    2983:	85 db                	test   %ebx,%ebx
    2985:	74 31                	je     29b8 <usb_pipe_initialize_from_configuration+0x58>
    2987:	8b 7d 0c             	mov    0xc(%ebp),%edi
    298a:	8b 45 08             	mov    0x8(%ebp),%eax
    298d:	83 c0 28             	add    $0x28,%eax
    2990:	8d 14 7f             	lea    (%edi,%edi,2),%edx
    2993:	8d 14 97             	lea    (%edi,%edx,4),%edx
    2996:	8b 7d 08             	mov    0x8(%ebp),%edi
    2999:	8d 54 97 28          	lea    0x28(%edi,%edx,4),%edx
    299d:	8d 76 00             	lea    0x0(%esi),%esi
    29a0:	c6 40 08 00          	movb   $0x0,0x8(%eax)
    29a4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    29aa:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
    29b1:	83 c0 34             	add    $0x34,%eax
    29b4:	39 d0                	cmp    %edx,%eax
    29b6:	75 e8                	jne    29a0 <usb_pipe_initialize_from_configuration+0x40>
    29b8:	8b 45 10             	mov    0x10(%ebp),%eax
    29bb:	52                   	push   %edx
    29bc:	89 45 dc             	mov    %eax,-0x24(%ebp)
    29bf:	50                   	push   %eax
    29c0:	8d 45 dc             	lea    -0x24(%ebp),%eax
    29c3:	c7 45 d8 40 d7 00 00 	movl   $0xd740,-0x28(%ebp)
    29ca:	50                   	push   %eax
    29cb:	8d 45 d8             	lea    -0x28(%ebp),%eax
    29ce:	50                   	push   %eax
    29cf:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    29d6:	89 4d e0             	mov    %ecx,-0x20(%ebp)
    29d9:	e8 12 15 00 00       	call   3ef0 <usb_dp_get_nested_descriptor>
    29de:	83 c4 10             	add    $0x10,%esp
    29e1:	89 45 c8             	mov    %eax,-0x38(%ebp)
    29e4:	85 c0                	test   %eax,%eax
    29e6:	0f 84 ab 01 00 00    	je     2b97 <usb_pipe_initialize_from_configuration+0x237>
    29ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    29f0:	50                   	push   %eax
    29f1:	8b 45 c8             	mov    -0x38(%ebp),%eax
    29f4:	50                   	push   %eax
    29f5:	8d 45 dc             	lea    -0x24(%ebp),%eax
    29f8:	50                   	push   %eax
    29f9:	8d 45 d8             	lea    -0x28(%ebp),%eax
    29fc:	50                   	push   %eax
    29fd:	e8 ee 14 00 00       	call   3ef0 <usb_dp_get_nested_descriptor>
    2a02:	83 c4 10             	add    $0x10,%esp
    2a05:	89 c6                	mov    %eax,%esi
    2a07:	85 c0                	test   %eax,%eax
    2a09:	75 24                	jne    2a2f <usb_pipe_initialize_from_configuration+0xcf>
    2a0b:	e9 48 01 00 00       	jmp    2b58 <usb_pipe_initialize_from_configuration+0x1f8>
    2a10:	8b 45 c8             	mov    -0x38(%ebp),%eax
    2a13:	56                   	push   %esi
    2a14:	50                   	push   %eax
    2a15:	8d 45 dc             	lea    -0x24(%ebp),%eax
    2a18:	50                   	push   %eax
    2a19:	8d 45 d8             	lea    -0x28(%ebp),%eax
    2a1c:	50                   	push   %eax
    2a1d:	e8 2e 18 00 00       	call   4250 <usb_dp_get_sibling_descriptor>
    2a22:	83 c4 10             	add    $0x10,%esp
    2a25:	89 c6                	mov    %eax,%esi
    2a27:	85 c0                	test   %eax,%eax
    2a29:	0f 84 29 01 00 00    	je     2b58 <usb_pipe_initialize_from_configuration+0x1f8>
    2a2f:	80 7e 01 05          	cmpb   $0x5,0x1(%esi)
    2a33:	75 db                	jne    2a10 <usb_pipe_initialize_from_configuration+0xb0>
    2a35:	8a 46 02             	mov    0x2(%esi),%al
    2a38:	8b 5d c8             	mov    -0x38(%ebp),%ebx
    2a3b:	83 e0 0f             	and    $0xf,%eax
    2a3e:	88 45 ce             	mov    %al,-0x32(%ebp)
    2a41:	8a 46 03             	mov    0x3(%esi),%al
    2a44:	83 e0 03             	and    $0x3,%eax
    2a47:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    2a4a:	0f be 46 02          	movsbl 0x2(%esi),%eax
    2a4e:	83 f0 ff             	xor    $0xffffffff,%eax
    2a51:	c1 e8 1f             	shr    $0x1f,%eax
    2a54:	89 c7                	mov    %eax,%edi
    2a56:	31 c0                	xor    %eax,%eax
    2a58:	8a 43 05             	mov    0x5(%ebx),%al
    2a5b:	89 45 c0             	mov    %eax,-0x40(%ebp)
    2a5e:	31 c0                	xor    %eax,%eax
    2a60:	8a 43 06             	mov    0x6(%ebx),%al
    2a63:	89 45 b4             	mov    %eax,-0x4c(%ebp)
    2a66:	31 c0                	xor    %eax,%eax
    2a68:	8a 43 07             	mov    0x7(%ebx),%al
    2a6b:	89 45 b0             	mov    %eax,-0x50(%ebp)
    2a6e:	31 c0                	xor    %eax,%eax
    2a70:	8a 43 03             	mov    0x3(%ebx),%al
    2a73:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    2a76:	31 c0                	xor    %eax,%eax
    2a78:	8a 43 02             	mov    0x2(%ebx),%al
    2a7b:	8b 5d 08             	mov    0x8(%ebp),%ebx
    2a7e:	89 45 d0             	mov    %eax,-0x30(%ebp)
    2a81:	8b 45 0c             	mov    0xc(%ebp),%eax
    2a84:	85 c0                	test   %eax,%eax
    2a86:	74 88                	je     2a10 <usb_pipe_initialize_from_configuration+0xb0>
    2a88:	89 75 bc             	mov    %esi,-0x44(%ebp)
    2a8b:	89 c6                	mov    %eax,%esi
    2a8d:	eb 0b                	jmp    2a9a <usb_pipe_initialize_from_configuration+0x13a>
    2a8f:	90                   	nop
    2a90:	83 c3 34             	add    $0x34,%ebx
    2a93:	4e                   	dec    %esi
    2a94:	0f 84 ee 00 00 00    	je     2b88 <usb_pipe_initialize_from_configuration+0x228>
    2a9a:	8b 53 20             	mov    0x20(%ebx),%edx
    2a9d:	89 d0                	mov    %edx,%eax
    2a9f:	c1 e8 1f             	shr    $0x1f,%eax
    2aa2:	39 55 d0             	cmp    %edx,-0x30(%ebp)
    2aa5:	0f 94 c2             	sete   %dl
    2aa8:	09 c2                	or     %eax,%edx
    2aaa:	8b 43 24             	mov    0x24(%ebx),%eax
    2aad:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
    2ab0:	88 55 cf             	mov    %dl,-0x31(%ebp)
    2ab3:	0f 94 c1             	sete   %cl
    2ab6:	c1 e8 1f             	shr    $0x1f,%eax
    2ab9:	09 c8                	or     %ecx,%eax
    2abb:	8b 4b 1c             	mov    0x1c(%ebx),%ecx
    2abe:	3b 79 04             	cmp    0x4(%ecx),%edi
    2ac1:	75 cd                	jne    2a90 <usb_pipe_initialize_from_configuration+0x130>
    2ac3:	8b 55 c4             	mov    -0x3c(%ebp),%edx
    2ac6:	3b 11                	cmp    (%ecx),%edx
    2ac8:	75 c6                	jne    2a90 <usb_pipe_initialize_from_configuration+0x130>
    2aca:	8b 51 08             	mov    0x8(%ecx),%edx
    2acd:	39 55 c0             	cmp    %edx,-0x40(%ebp)
    2ad0:	74 05                	je     2ad7 <usb_pipe_initialize_from_configuration+0x177>
    2ad2:	83 ea 00             	sub    $0x0,%edx
    2ad5:	79 b9                	jns    2a90 <usb_pipe_initialize_from_configuration+0x130>
    2ad7:	8b 51 0c             	mov    0xc(%ecx),%edx
    2ada:	89 55 b8             	mov    %edx,-0x48(%ebp)
    2add:	83 ea 00             	sub    $0x0,%edx
    2ae0:	78 08                	js     2aea <usb_pipe_initialize_from_configuration+0x18a>
    2ae2:	8b 55 b8             	mov    -0x48(%ebp),%edx
    2ae5:	39 55 b4             	cmp    %edx,-0x4c(%ebp)
    2ae8:	75 a6                	jne    2a90 <usb_pipe_initialize_from_configuration+0x130>
    2aea:	8b 49 10             	mov    0x10(%ecx),%ecx
    2aed:	39 4d b0             	cmp    %ecx,-0x50(%ebp)
    2af0:	74 05                	je     2af7 <usb_pipe_initialize_from_configuration+0x197>
    2af2:	83 e9 00             	sub    $0x0,%ecx
    2af5:	79 99                	jns    2a90 <usb_pipe_initialize_from_configuration+0x130>
    2af7:	84 c0                	test   %al,%al
    2af9:	74 95                	je     2a90 <usb_pipe_initialize_from_configuration+0x130>
    2afb:	80 7d cf 00          	cmpb   $0x0,-0x31(%ebp)
    2aff:	74 8f                	je     2a90 <usb_pipe_initialize_from_configuration+0x130>
    2b01:	8b 75 bc             	mov    -0x44(%ebp),%esi
    2b04:	80 7b 30 00          	cmpb   $0x0,0x30(%ebx)
    2b08:	0f 85 02 ff ff ff    	jne    2a10 <usb_pipe_initialize_from_configuration+0xb0>
    2b0e:	66 8b 56 04          	mov    0x4(%esi),%dx
    2b12:	8b 45 18             	mov    0x18(%ebp),%eax
    2b15:	51                   	push   %ecx
    2b16:	50                   	push   %eax
    2b17:	89 d0                	mov    %edx,%eax
    2b19:	81 e2 ff 03 00 00    	and    $0x3ff,%edx
    2b1f:	66 c1 e8 0a          	shr    $0xa,%ax
    2b23:	83 e0 03             	and    $0x3,%eax
    2b26:	40                   	inc    %eax
    2b27:	50                   	push   %eax
    2b28:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    2b2b:	57                   	push   %edi
    2b2c:	52                   	push   %edx
    2b2d:	50                   	push   %eax
    2b2e:	31 c0                	xor    %eax,%eax
    2b30:	8a 45 ce             	mov    -0x32(%ebp),%al
    2b33:	50                   	push   %eax
    2b34:	53                   	push   %ebx
    2b35:	e8 46 fc ff ff       	call   2780 <usb_pipe_initialize>
    2b3a:	83 c4 20             	add    $0x20,%esp
    2b3d:	85 c0                	test   %eax,%eax
    2b3f:	0f 85 cb fe ff ff    	jne    2a10 <usb_pipe_initialize_from_configuration+0xb0>
    2b45:	8b 45 c8             	mov    -0x38(%ebp),%eax
    2b48:	c6 43 30 01          	movb   $0x1,0x30(%ebx)
    2b4c:	89 73 28             	mov    %esi,0x28(%ebx)
    2b4f:	89 43 2c             	mov    %eax,0x2c(%ebx)
    2b52:	e9 b9 fe ff ff       	jmp    2a10 <usb_pipe_initialize_from_configuration+0xb0>
    2b57:	90                   	nop
    2b58:	8b 45 c8             	mov    -0x38(%ebp),%eax
    2b5b:	50                   	push   %eax
    2b5c:	8b 45 10             	mov    0x10(%ebp),%eax
    2b5f:	50                   	push   %eax
    2b60:	8d 45 dc             	lea    -0x24(%ebp),%eax
    2b63:	50                   	push   %eax
    2b64:	8d 45 d8             	lea    -0x28(%ebp),%eax
    2b67:	50                   	push   %eax
    2b68:	e8 e3 16 00 00       	call   4250 <usb_dp_get_sibling_descriptor>
    2b6d:	83 c4 10             	add    $0x10,%esp
    2b70:	89 45 c8             	mov    %eax,-0x38(%ebp)
    2b73:	85 c0                	test   %eax,%eax
    2b75:	0f 85 75 fe ff ff    	jne    29f0 <usb_pipe_initialize_from_configuration+0x90>
    2b7b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2b7e:	5b                   	pop    %ebx
    2b7f:	5e                   	pop    %esi
    2b80:	5f                   	pop    %edi
    2b81:	5d                   	pop    %ebp
    2b82:	c3                   	ret    
    2b83:	90                   	nop
    2b84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2b88:	8b 75 bc             	mov    -0x44(%ebp),%esi
    2b8b:	e9 80 fe ff ff       	jmp    2a10 <usb_pipe_initialize_from_configuration+0xb0>
    2b90:	b8 f8 fe ff ff       	mov    $0xfffffef8,%eax
    2b95:	eb e4                	jmp    2b7b <usb_pipe_initialize_from_configuration+0x21b>
    2b97:	83 c8 ff             	or     $0xffffffff,%eax
    2b9a:	eb df                	jmp    2b7b <usb_pipe_initialize_from_configuration+0x21b>
    2b9c:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    2ba1:	eb d8                	jmp    2b7b <usb_pipe_initialize_from_configuration+0x21b>
    2ba3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2ba9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00002bb0 <usb_pipe_probe_default_control>:
    2bb0:	55                   	push   %ebp
    2bb1:	89 e5                	mov    %esp,%ebp
    2bb3:	57                   	push   %edi
    2bb4:	56                   	push   %esi
    2bb5:	53                   	push   %ebx
    2bb6:	83 ec 2c             	sub    $0x2c,%esp
    2bb9:	8b 5d 08             	mov    0x8(%ebp),%ebx
    2bbc:	85 db                	test   %ebx,%ebx
    2bbe:	74 75                	je     2c35 <usb_pipe_probe_default_control+0x85>
    2bc0:	83 7b 08 02          	cmpl   $0x2,0x8(%ebx)
    2bc4:	75 62                	jne    2c28 <usb_pipe_probe_default_control+0x78>
    2bc6:	8b 43 04             	mov    0x4(%ebx),%eax
    2bc9:	85 c0                	test   %eax,%eax
    2bcb:	75 5b                	jne    2c28 <usb_pipe_probe_default_control+0x78>
    2bcd:	66 83 3b 00          	cmpw   $0x0,(%ebx)
    2bd1:	75 55                	jne    2c28 <usb_pipe_probe_default_control+0x78>
    2bd3:	c7 45 d4 03 00 00 00 	movl   $0x3,-0x2c(%ebp)
    2bda:	8d 7d dc             	lea    -0x24(%ebp),%edi
    2bdd:	8d 75 e0             	lea    -0x20(%ebp),%esi
    2be0:	83 ec 0c             	sub    $0xc,%esp
    2be3:	57                   	push   %edi
    2be4:	6a 08                	push   $0x8
    2be6:	56                   	push   %esi
    2be7:	6a 00                	push   $0x0
    2be9:	6a 00                	push   $0x0
    2beb:	6a 01                	push   $0x1
    2bed:	6a 00                	push   $0x0
    2bef:	6a 00                	push   $0x0
    2bf1:	53                   	push   %ebx
    2bf2:	e8 f9 02 00 00       	call   2ef0 <usb_request_get_descriptor>
    2bf7:	83 c4 30             	add    $0x30,%esp
    2bfa:	85 c0                	test   %eax,%eax
    2bfc:	75 0b                	jne    2c09 <usb_pipe_probe_default_control+0x59>
    2bfe:	83 7d dc 08          	cmpl   $0x8,-0x24(%ebp)
    2c02:	74 14                	je     2c18 <usb_pipe_probe_default_control+0x68>
    2c04:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    2c09:	ff 4d d4             	decl   -0x2c(%ebp)
    2c0c:	75 d2                	jne    2be0 <usb_pipe_probe_default_control+0x30>
    2c0e:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2c11:	5b                   	pop    %ebx
    2c12:	5e                   	pop    %esi
    2c13:	5f                   	pop    %edi
    2c14:	5d                   	pop    %ebp
    2c15:	c3                   	ret    
    2c16:	66 90                	xchg   %ax,%ax
    2c18:	31 c9                	xor    %ecx,%ecx
    2c1a:	8a 4d e7             	mov    -0x19(%ebp),%cl
    2c1d:	89 4b 0c             	mov    %ecx,0xc(%ebx)
    2c20:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2c23:	5b                   	pop    %ebx
    2c24:	5e                   	pop    %esi
    2c25:	5f                   	pop    %edi
    2c26:	5d                   	pop    %ebp
    2c27:	c3                   	ret    
    2c28:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2c2b:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    2c30:	5b                   	pop    %ebx
    2c31:	5e                   	pop    %esi
    2c32:	5f                   	pop    %edi
    2c33:	5d                   	pop    %ebp
    2c34:	c3                   	ret    
    2c35:	52                   	push   %edx
    2c36:	68 56 01 00 00       	push   $0x156
    2c3b:	68 20 d7 00 00       	push   $0xd720
    2c40:	68 09 d7 00 00       	push   $0xd709
    2c45:	e8 86 ca 00 00       	call   f6d0 <assert_abort@plt>
    2c4a:	66 90                	xchg   %ax,%ax
    2c4c:	66 90                	xchg   %ax,%ax
    2c4e:	66 90                	xchg   %ax,%ax

00002c50 <usb_control_request_set>:
    2c50:	55                   	push   %ebp
    2c51:	89 e5                	mov    %esp,%ebp
    2c53:	57                   	push   %edi
    2c54:	56                   	push   %esi
    2c55:	53                   	push   %ebx
    2c56:	83 ec 1c             	sub    $0x1c,%esp
    2c59:	8b 4d 08             	mov    0x8(%ebp),%ecx
    2c5c:	8b 7d 14             	mov    0x14(%ebp),%edi
    2c5f:	8b 75 18             	mov    0x18(%ebp),%esi
    2c62:	8b 5d 1c             	mov    0x1c(%ebp),%ebx
    2c65:	8b 55 24             	mov    0x24(%ebp),%edx
    2c68:	85 c9                	test   %ecx,%ecx
    2c6a:	74 54                	je     2cc0 <usb_control_request_set+0x70>
    2c6c:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
    2c72:	77 54                	ja     2cc8 <usb_control_request_set+0x78>
    2c74:	85 d2                	test   %edx,%edx
    2c76:	74 07                	je     2c7f <usb_control_request_set+0x2f>
    2c78:	8b 45 20             	mov    0x20(%ebp),%eax
    2c7b:	85 c0                	test   %eax,%eax
    2c7d:	74 41                	je     2cc0 <usb_control_request_set+0x70>
    2c7f:	8a 45 0c             	mov    0xc(%ebp),%al
    2c82:	83 ec 0c             	sub    $0xc,%esp
    2c85:	c1 e0 05             	shl    $0x5,%eax
    2c88:	66 89 75 e2          	mov    %si,-0x1e(%ebp)
    2c8c:	0b 45 10             	or     0x10(%ebp),%eax
    2c8f:	52                   	push   %edx
    2c90:	88 45 e0             	mov    %al,-0x20(%ebp)
    2c93:	89 f8                	mov    %edi,%eax
    2c95:	88 45 e1             	mov    %al,-0x1f(%ebp)
    2c98:	8b 45 20             	mov    0x20(%ebp),%eax
    2c9b:	50                   	push   %eax
    2c9c:	8d 45 e0             	lea    -0x20(%ebp),%eax
    2c9f:	6a 08                	push   $0x8
    2ca1:	50                   	push   %eax
    2ca2:	51                   	push   %ecx
    2ca3:	66 89 5d e4          	mov    %bx,-0x1c(%ebp)
    2ca7:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)
    2cab:	e8 30 f8 ff ff       	call   24e0 <usb_pipe_control_write>
    2cb0:	83 c4 20             	add    $0x20,%esp
    2cb3:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2cb6:	5b                   	pop    %ebx
    2cb7:	5e                   	pop    %esi
    2cb8:	5f                   	pop    %edi
    2cb9:	5d                   	pop    %ebp
    2cba:	c3                   	ret    
    2cbb:	90                   	nop
    2cbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2cc0:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    2cc5:	eb ec                	jmp    2cb3 <usb_control_request_set+0x63>
    2cc7:	90                   	nop
    2cc8:	b8 f8 fe ff ff       	mov    $0xfffffef8,%eax
    2ccd:	eb e4                	jmp    2cb3 <usb_control_request_set+0x63>
    2ccf:	90                   	nop

00002cd0 <usb_control_request_get>:
    2cd0:	55                   	push   %ebp
    2cd1:	89 e5                	mov    %esp,%ebp
    2cd3:	57                   	push   %edi
    2cd4:	56                   	push   %esi
    2cd5:	53                   	push   %ebx
    2cd6:	83 ec 2c             	sub    $0x2c,%esp
    2cd9:	8b 4d 08             	mov    0x8(%ebp),%ecx
    2cdc:	8b 7d 14             	mov    0x14(%ebp),%edi
    2cdf:	8b 75 18             	mov    0x18(%ebp),%esi
    2ce2:	8b 5d 1c             	mov    0x1c(%ebp),%ebx
    2ce5:	8b 55 24             	mov    0x24(%ebp),%edx
    2ce8:	85 c9                	test   %ecx,%ecx
    2cea:	74 5c                	je     2d48 <usb_control_request_get+0x78>
    2cec:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
    2cf2:	77 5c                	ja     2d50 <usb_control_request_get+0x80>
    2cf4:	85 d2                	test   %edx,%edx
    2cf6:	74 07                	je     2cff <usb_control_request_get+0x2f>
    2cf8:	8b 45 20             	mov    0x20(%ebp),%eax
    2cfb:	85 c0                	test   %eax,%eax
    2cfd:	74 49                	je     2d48 <usb_control_request_get+0x78>
    2cff:	8a 45 0c             	mov    0xc(%ebp),%al
    2d02:	66 89 75 e2          	mov    %si,-0x1e(%ebp)
    2d06:	c1 e0 05             	shl    $0x5,%eax
    2d09:	66 89 5d e4          	mov    %bx,-0x1c(%ebp)
    2d0d:	88 45 d7             	mov    %al,-0x29(%ebp)
    2d10:	8a 45 10             	mov    0x10(%ebp),%al
    2d13:	83 c8 80             	or     $0xffffff80,%eax
    2d16:	8b 5d 28             	mov    0x28(%ebp),%ebx
    2d19:	0a 45 d7             	or     -0x29(%ebp),%al
    2d1c:	8b 75 20             	mov    0x20(%ebp),%esi
    2d1f:	88 45 e0             	mov    %al,-0x20(%ebp)
    2d22:	89 f8                	mov    %edi,%eax
    2d24:	88 45 e1             	mov    %al,-0x1f(%ebp)
    2d27:	50                   	push   %eax
    2d28:	50                   	push   %eax
    2d29:	8d 45 e0             	lea    -0x20(%ebp),%eax
    2d2c:	53                   	push   %ebx
    2d2d:	52                   	push   %edx
    2d2e:	56                   	push   %esi
    2d2f:	6a 08                	push   $0x8
    2d31:	50                   	push   %eax
    2d32:	51                   	push   %ecx
    2d33:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)
    2d37:	e8 74 f6 ff ff       	call   23b0 <usb_pipe_control_read>
    2d3c:	83 c4 20             	add    $0x20,%esp
    2d3f:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2d42:	5b                   	pop    %ebx
    2d43:	5e                   	pop    %esi
    2d44:	5f                   	pop    %edi
    2d45:	5d                   	pop    %ebp
    2d46:	c3                   	ret    
    2d47:	90                   	nop
    2d48:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    2d4d:	eb f0                	jmp    2d3f <usb_control_request_get+0x6f>
    2d4f:	90                   	nop
    2d50:	b8 f8 fe ff ff       	mov    $0xfffffef8,%eax
    2d55:	eb e8                	jmp    2d3f <usb_control_request_get+0x6f>
    2d57:	89 f6                	mov    %esi,%esi
    2d59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00002d60 <usb_request_get_status>:
    2d60:	55                   	push   %ebp
    2d61:	89 e5                	mov    %esp,%ebp
    2d63:	53                   	push   %ebx
    2d64:	83 ec 14             	sub    $0x14,%esp
    2d67:	8b 45 0c             	mov    0xc(%ebp),%eax
    2d6a:	8b 55 08             	mov    0x8(%ebp),%edx
    2d6d:	8b 4d 10             	mov    0x10(%ebp),%ecx
    2d70:	8b 5d 14             	mov    0x14(%ebp),%ebx
    2d73:	85 c0                	test   %eax,%eax
    2d75:	75 05                	jne    2d7c <usb_request_get_status+0x1c>
    2d77:	66 85 c9             	test   %cx,%cx
    2d7a:	75 6c                	jne    2de8 <usb_request_get_status+0x88>
    2d7c:	85 db                	test   %ebx,%ebx
    2d7e:	74 50                	je     2dd0 <usb_request_get_status+0x70>
    2d80:	85 d2                	test   %edx,%edx
    2d82:	74 4c                	je     2dd0 <usb_request_get_status+0x70>
    2d84:	83 c8 80             	or     $0xffffff80,%eax
    2d87:	c6 45 f1 00          	movb   $0x0,-0xf(%ebp)
    2d8b:	88 45 f0             	mov    %al,-0x10(%ebp)
    2d8e:	50                   	push   %eax
    2d8f:	50                   	push   %eax
    2d90:	8d 45 ec             	lea    -0x14(%ebp),%eax
    2d93:	50                   	push   %eax
    2d94:	8d 45 ea             	lea    -0x16(%ebp),%eax
    2d97:	6a 02                	push   $0x2
    2d99:	50                   	push   %eax
    2d9a:	8d 45 f0             	lea    -0x10(%ebp),%eax
    2d9d:	6a 08                	push   $0x8
    2d9f:	66 c7 45 f2 00 00    	movw   $0x0,-0xe(%ebp)
    2da5:	50                   	push   %eax
    2da6:	66 89 4d f4          	mov    %cx,-0xc(%ebp)
    2daa:	52                   	push   %edx
    2dab:	66 c7 45 f6 02 00    	movw   $0x2,-0xa(%ebp)
    2db1:	e8 fa f5 ff ff       	call   23b0 <usb_pipe_control_read>
    2db6:	83 c4 20             	add    $0x20,%esp
    2db9:	85 c0                	test   %eax,%eax
    2dbb:	75 0d                	jne    2dca <usb_request_get_status+0x6a>
    2dbd:	83 7d ec 02          	cmpl   $0x2,-0x14(%ebp)
    2dc1:	75 1d                	jne    2de0 <usb_request_get_status+0x80>
    2dc3:	66 8b 55 ea          	mov    -0x16(%ebp),%dx
    2dc7:	66 89 13             	mov    %dx,(%ebx)
    2dca:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    2dcd:	c9                   	leave  
    2dce:	c3                   	ret    
    2dcf:	90                   	nop
    2dd0:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    2dd5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    2dd8:	c9                   	leave  
    2dd9:	c3                   	ret    
    2dda:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2de0:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    2de5:	eb e3                	jmp    2dca <usb_request_get_status+0x6a>
    2de7:	90                   	nop
    2de8:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    2ded:	eb db                	jmp    2dca <usb_request_get_status+0x6a>
    2def:	90                   	nop

00002df0 <usb_request_clear_feature>:
    2df0:	55                   	push   %ebp
    2df1:	89 e5                	mov    %esp,%ebp
    2df3:	53                   	push   %ebx
    2df4:	83 ec 14             	sub    $0x14,%esp
    2df7:	8b 45 0c             	mov    0xc(%ebp),%eax
    2dfa:	8b 55 08             	mov    0x8(%ebp),%edx
    2dfd:	8b 5d 14             	mov    0x14(%ebp),%ebx
    2e00:	8b 4d 18             	mov    0x18(%ebp),%ecx
    2e03:	85 c0                	test   %eax,%eax
    2e05:	75 0b                	jne    2e12 <usb_request_clear_feature+0x22>
    2e07:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
    2e0b:	75 05                	jne    2e12 <usb_request_clear_feature+0x22>
    2e0d:	66 85 c9             	test   %cx,%cx
    2e10:	75 4e                	jne    2e60 <usb_request_clear_feature+0x70>
    2e12:	85 d2                	test   %edx,%edx
    2e14:	74 3a                	je     2e50 <usb_request_clear_feature+0x60>
    2e16:	c1 e0 05             	shl    $0x5,%eax
    2e19:	83 ec 0c             	sub    $0xc,%esp
    2e1c:	0b 45 10             	or     0x10(%ebp),%eax
    2e1f:	c6 45 f1 01          	movb   $0x1,-0xf(%ebp)
    2e23:	88 45 f0             	mov    %al,-0x10(%ebp)
    2e26:	8d 45 f0             	lea    -0x10(%ebp),%eax
    2e29:	6a 00                	push   $0x0
    2e2b:	6a 00                	push   $0x0
    2e2d:	6a 08                	push   $0x8
    2e2f:	50                   	push   %eax
    2e30:	52                   	push   %edx
    2e31:	66 89 5d f2          	mov    %bx,-0xe(%ebp)
    2e35:	66 89 4d f4          	mov    %cx,-0xc(%ebp)
    2e39:	66 c7 45 f6 00 00    	movw   $0x0,-0xa(%ebp)
    2e3f:	e8 9c f6 ff ff       	call   24e0 <usb_pipe_control_write>
    2e44:	83 c4 20             	add    $0x20,%esp
    2e47:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    2e4a:	c9                   	leave  
    2e4b:	c3                   	ret    
    2e4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2e50:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    2e55:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    2e58:	c9                   	leave  
    2e59:	c3                   	ret    
    2e5a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2e60:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    2e65:	eb e0                	jmp    2e47 <usb_request_clear_feature+0x57>
    2e67:	89 f6                	mov    %esi,%esi
    2e69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00002e70 <usb_request_set_feature>:
    2e70:	55                   	push   %ebp
    2e71:	89 e5                	mov    %esp,%ebp
    2e73:	53                   	push   %ebx
    2e74:	83 ec 14             	sub    $0x14,%esp
    2e77:	8b 45 0c             	mov    0xc(%ebp),%eax
    2e7a:	8b 55 08             	mov    0x8(%ebp),%edx
    2e7d:	8b 5d 14             	mov    0x14(%ebp),%ebx
    2e80:	8b 4d 18             	mov    0x18(%ebp),%ecx
    2e83:	85 c0                	test   %eax,%eax
    2e85:	75 0b                	jne    2e92 <usb_request_set_feature+0x22>
    2e87:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
    2e8b:	75 05                	jne    2e92 <usb_request_set_feature+0x22>
    2e8d:	66 85 c9             	test   %cx,%cx
    2e90:	75 4e                	jne    2ee0 <usb_request_set_feature+0x70>
    2e92:	85 d2                	test   %edx,%edx
    2e94:	74 3a                	je     2ed0 <usb_request_set_feature+0x60>
    2e96:	c1 e0 05             	shl    $0x5,%eax
    2e99:	83 ec 0c             	sub    $0xc,%esp
    2e9c:	0b 45 10             	or     0x10(%ebp),%eax
    2e9f:	c6 45 f1 03          	movb   $0x3,-0xf(%ebp)
    2ea3:	88 45 f0             	mov    %al,-0x10(%ebp)
    2ea6:	8d 45 f0             	lea    -0x10(%ebp),%eax
    2ea9:	6a 00                	push   $0x0
    2eab:	6a 00                	push   $0x0
    2ead:	6a 08                	push   $0x8
    2eaf:	50                   	push   %eax
    2eb0:	52                   	push   %edx
    2eb1:	66 89 5d f2          	mov    %bx,-0xe(%ebp)
    2eb5:	66 89 4d f4          	mov    %cx,-0xc(%ebp)
    2eb9:	66 c7 45 f6 00 00    	movw   $0x0,-0xa(%ebp)
    2ebf:	e8 1c f6 ff ff       	call   24e0 <usb_pipe_control_write>
    2ec4:	83 c4 20             	add    $0x20,%esp
    2ec7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    2eca:	c9                   	leave  
    2ecb:	c3                   	ret    
    2ecc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2ed0:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    2ed5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    2ed8:	c9                   	leave  
    2ed9:	c3                   	ret    
    2eda:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2ee0:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    2ee5:	eb e0                	jmp    2ec7 <usb_request_set_feature+0x57>
    2ee7:	89 f6                	mov    %esi,%esi
    2ee9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00002ef0 <usb_request_get_descriptor>:
    2ef0:	55                   	push   %ebp
    2ef1:	89 e5                	mov    %esp,%ebp
    2ef3:	57                   	push   %edi
    2ef4:	56                   	push   %esi
    2ef5:	53                   	push   %ebx
    2ef6:	83 ec 2c             	sub    $0x2c,%esp
    2ef9:	8b 5d 20             	mov    0x20(%ebp),%ebx
    2efc:	8b 75 08             	mov    0x8(%ebp),%esi
    2eff:	8b 45 14             	mov    0x14(%ebp),%eax
    2f02:	8b 55 18             	mov    0x18(%ebp),%edx
    2f05:	8b 7d 1c             	mov    0x1c(%ebp),%edi
    2f08:	8b 4d 24             	mov    0x24(%ebp),%ecx
    2f0b:	85 db                	test   %ebx,%ebx
    2f0d:	74 71                	je     2f80 <usb_request_get_descriptor+0x90>
    2f0f:	85 c9                	test   %ecx,%ecx
    2f11:	74 5d                	je     2f70 <usb_request_get_descriptor+0x80>
    2f13:	c1 e0 08             	shl    $0x8,%eax
    2f16:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2f1c:	09 d0                	or     %edx,%eax
    2f1e:	85 f6                	test   %esi,%esi
    2f20:	74 5e                	je     2f80 <usb_request_get_descriptor+0x90>
    2f22:	81 f9 ff ff 00 00    	cmp    $0xffff,%ecx
    2f28:	77 4e                	ja     2f78 <usb_request_get_descriptor+0x88>
    2f2a:	8a 55 10             	mov    0x10(%ebp),%dl
    2f2d:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)
    2f31:	83 ca 80             	or     $0xffffff80,%edx
    2f34:	50                   	push   %eax
    2f35:	88 55 d7             	mov    %dl,-0x29(%ebp)
    2f38:	8a 55 0c             	mov    0xc(%ebp),%dl
    2f3b:	c1 e2 05             	shl    $0x5,%edx
    2f3e:	50                   	push   %eax
    2f3f:	0a 55 d7             	or     -0x29(%ebp),%dl
    2f42:	8d 45 e0             	lea    -0x20(%ebp),%eax
    2f45:	88 55 e0             	mov    %dl,-0x20(%ebp)
    2f48:	8b 55 28             	mov    0x28(%ebp),%edx
    2f4b:	52                   	push   %edx
    2f4c:	51                   	push   %ecx
    2f4d:	53                   	push   %ebx
    2f4e:	6a 08                	push   $0x8
    2f50:	50                   	push   %eax
    2f51:	56                   	push   %esi
    2f52:	c6 45 e1 06          	movb   $0x6,-0x1f(%ebp)
    2f56:	66 89 7d e4          	mov    %di,-0x1c(%ebp)
    2f5a:	66 89 4d e6          	mov    %cx,-0x1a(%ebp)
    2f5e:	e8 4d f4 ff ff       	call   23b0 <usb_pipe_control_read>
    2f63:	83 c4 20             	add    $0x20,%esp
    2f66:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2f69:	5b                   	pop    %ebx
    2f6a:	5e                   	pop    %esi
    2f6b:	5f                   	pop    %edi
    2f6c:	5d                   	pop    %ebp
    2f6d:	c3                   	ret    
    2f6e:	66 90                	xchg   %ax,%ax
    2f70:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    2f75:	eb ef                	jmp    2f66 <usb_request_get_descriptor+0x76>
    2f77:	90                   	nop
    2f78:	b8 f8 fe ff ff       	mov    $0xfffffef8,%eax
    2f7d:	eb e7                	jmp    2f66 <usb_request_get_descriptor+0x76>
    2f7f:	90                   	nop
    2f80:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    2f85:	eb df                	jmp    2f66 <usb_request_get_descriptor+0x76>
    2f87:	89 f6                	mov    %esi,%esi
    2f89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00002f90 <usb_request_get_descriptor_alloc>:
    2f90:	55                   	push   %ebp
    2f91:	89 e5                	mov    %esp,%ebp
    2f93:	57                   	push   %edi
    2f94:	56                   	push   %esi
    2f95:	53                   	push   %ebx
    2f96:	83 ec 2c             	sub    $0x2c,%esp
    2f99:	8b 55 20             	mov    0x20(%ebp),%edx
    2f9c:	8b 5d 14             	mov    0x14(%ebp),%ebx
    2f9f:	8b 45 18             	mov    0x18(%ebp),%eax
    2fa2:	8b 75 1c             	mov    0x1c(%ebp),%esi
    2fa5:	85 d2                	test   %edx,%edx
    2fa7:	0f 84 1b 01 00 00    	je     30c8 <usb_request_get_descriptor_alloc+0x138>
    2fad:	c1 e3 08             	shl    $0x8,%ebx
    2fb0:	25 ff 00 00 00       	and    $0xff,%eax
    2fb5:	09 c3                	or     %eax,%ebx
    2fb7:	8b 45 08             	mov    0x8(%ebp),%eax
    2fba:	85 c0                	test   %eax,%eax
    2fbc:	0f 84 06 01 00 00    	je     30c8 <usb_request_get_descriptor_alloc+0x138>
    2fc2:	8a 55 0c             	mov    0xc(%ebp),%dl
    2fc5:	8a 45 10             	mov    0x10(%ebp),%al
    2fc8:	83 c8 80             	or     $0xffffff80,%eax
    2fcb:	57                   	push   %edi
    2fcc:	c1 e2 05             	shl    $0x5,%edx
    2fcf:	57                   	push   %edi
    2fd0:	09 c2                	or     %eax,%edx
    2fd2:	8d 45 dc             	lea    -0x24(%ebp),%eax
    2fd5:	50                   	push   %eax
    2fd6:	8d 45 db             	lea    -0x25(%ebp),%eax
    2fd9:	6a 01                	push   $0x1
    2fdb:	50                   	push   %eax
    2fdc:	8d 45 e0             	lea    -0x20(%ebp),%eax
    2fdf:	6a 08                	push   $0x8
    2fe1:	50                   	push   %eax
    2fe2:	8b 45 08             	mov    0x8(%ebp),%eax
    2fe5:	50                   	push   %eax
    2fe6:	88 55 d4             	mov    %dl,-0x2c(%ebp)
    2fe9:	88 55 e0             	mov    %dl,-0x20(%ebp)
    2fec:	c6 45 e1 06          	movb   $0x6,-0x1f(%ebp)
    2ff0:	66 89 5d e2          	mov    %bx,-0x1e(%ebp)
    2ff4:	66 89 75 e4          	mov    %si,-0x1c(%ebp)
    2ff8:	66 c7 45 e6 01 00    	movw   $0x1,-0x1a(%ebp)
    2ffe:	e8 ad f3 ff ff       	call   23b0 <usb_pipe_control_read>
    3003:	83 c4 20             	add    $0x20,%esp
    3006:	85 c0                	test   %eax,%eax
    3008:	0f 85 87 00 00 00    	jne    3095 <usb_request_get_descriptor_alloc+0x105>
    300e:	83 7d dc 01          	cmpl   $0x1,-0x24(%ebp)
    3012:	0f 85 88 00 00 00    	jne    30a0 <usb_request_get_descriptor_alloc+0x110>
    3018:	8a 45 db             	mov    -0x25(%ebp),%al
    301b:	89 c7                	mov    %eax,%edi
    301d:	88 45 d3             	mov    %al,-0x2d(%ebp)
    3020:	81 e7 ff 00 00 00    	and    $0xff,%edi
    3026:	85 ff                	test   %edi,%edi
    3028:	74 76                	je     30a0 <usb_request_get_descriptor_alloc+0x110>
    302a:	83 ec 0c             	sub    $0xc,%esp
    302d:	57                   	push   %edi
    302e:	e8 ed c5 00 00       	call   f620 <malloc@plt>
    3033:	83 c4 10             	add    $0x10,%esp
    3036:	89 c1                	mov    %eax,%ecx
    3038:	85 c0                	test   %eax,%eax
    303a:	0f 84 a3 00 00 00    	je     30e3 <usb_request_get_descriptor_alloc+0x153>
    3040:	31 c0                	xor    %eax,%eax
    3042:	8a 55 d4             	mov    -0x2c(%ebp),%dl
    3045:	8a 45 d3             	mov    -0x2d(%ebp),%al
    3048:	66 89 5d e2          	mov    %bx,-0x1e(%ebp)
    304c:	66 89 45 e6          	mov    %ax,-0x1a(%ebp)
    3050:	8d 45 dc             	lea    -0x24(%ebp),%eax
    3053:	66 89 75 e4          	mov    %si,-0x1c(%ebp)
    3057:	8b 75 08             	mov    0x8(%ebp),%esi
    305a:	53                   	push   %ebx
    305b:	53                   	push   %ebx
    305c:	50                   	push   %eax
    305d:	8d 45 e0             	lea    -0x20(%ebp),%eax
    3060:	57                   	push   %edi
    3061:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    3064:	51                   	push   %ecx
    3065:	88 55 e0             	mov    %dl,-0x20(%ebp)
    3068:	6a 08                	push   $0x8
    306a:	c6 45 e1 06          	movb   $0x6,-0x1f(%ebp)
    306e:	50                   	push   %eax
    306f:	56                   	push   %esi
    3070:	e8 3b f3 ff ff       	call   23b0 <usb_pipe_control_read>
    3075:	83 c4 20             	add    $0x20,%esp
    3078:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    307b:	85 c0                	test   %eax,%eax
    307d:	75 31                	jne    30b0 <usb_request_get_descriptor_alloc+0x120>
    307f:	3b 7d dc             	cmp    -0x24(%ebp),%edi
    3082:	75 4c                	jne    30d0 <usb_request_get_descriptor_alloc+0x140>
    3084:	8b 75 20             	mov    0x20(%ebp),%esi
    3087:	8b 55 24             	mov    0x24(%ebp),%edx
    308a:	85 d2                	test   %edx,%edx
    308c:	89 0e                	mov    %ecx,(%esi)
    308e:	74 05                	je     3095 <usb_request_get_descriptor_alloc+0x105>
    3090:	8b 4d 24             	mov    0x24(%ebp),%ecx
    3093:	89 39                	mov    %edi,(%ecx)
    3095:	8d 65 f4             	lea    -0xc(%ebp),%esp
    3098:	5b                   	pop    %ebx
    3099:	5e                   	pop    %esi
    309a:	5f                   	pop    %edi
    309b:	5d                   	pop    %ebp
    309c:	c3                   	ret    
    309d:	8d 76 00             	lea    0x0(%esi),%esi
    30a0:	8d 65 f4             	lea    -0xc(%ebp),%esp
    30a3:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    30a8:	5b                   	pop    %ebx
    30a9:	5e                   	pop    %esi
    30aa:	5f                   	pop    %edi
    30ab:	5d                   	pop    %ebp
    30ac:	c3                   	ret    
    30ad:	8d 76 00             	lea    0x0(%esi),%esi
    30b0:	83 ec 0c             	sub    $0xc,%esp
    30b3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    30b6:	51                   	push   %ecx
    30b7:	e8 e4 c8 00 00       	call   f9a0 <free@plt>
    30bc:	83 c4 10             	add    $0x10,%esp
    30bf:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    30c2:	eb d1                	jmp    3095 <usb_request_get_descriptor_alloc+0x105>
    30c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    30c8:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    30cd:	eb c6                	jmp    3095 <usb_request_get_descriptor_alloc+0x105>
    30cf:	90                   	nop
    30d0:	83 ec 0c             	sub    $0xc,%esp
    30d3:	51                   	push   %ecx
    30d4:	e8 c7 c8 00 00       	call   f9a0 <free@plt>
    30d9:	83 c4 10             	add    $0x10,%esp
    30dc:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    30e1:	eb b2                	jmp    3095 <usb_request_get_descriptor_alloc+0x105>
    30e3:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    30e8:	eb ab                	jmp    3095 <usb_request_get_descriptor_alloc+0x105>
    30ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000030f0 <usb_request_get_device_descriptor>:
    30f0:	55                   	push   %ebp
    30f1:	89 e5                	mov    %esp,%ebp
    30f3:	57                   	push   %edi
    30f4:	56                   	push   %esi
    30f5:	53                   	push   %ebx
    30f6:	83 ec 2c             	sub    $0x2c,%esp
    30f9:	8b 75 0c             	mov    0xc(%ebp),%esi
    30fc:	8b 45 08             	mov    0x8(%ebp),%eax
    30ff:	85 f6                	test   %esi,%esi
    3101:	74 6d                	je     3170 <usb_request_get_device_descriptor+0x80>
    3103:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
    310a:	85 c0                	test   %eax,%eax
    310c:	74 62                	je     3170 <usb_request_get_device_descriptor+0x80>
    310e:	52                   	push   %edx
    310f:	52                   	push   %edx
    3110:	8d 55 c8             	lea    -0x38(%ebp),%edx
    3113:	8d 7d d6             	lea    -0x2a(%ebp),%edi
    3116:	52                   	push   %edx
    3117:	8d 55 ce             	lea    -0x32(%ebp),%edx
    311a:	6a 12                	push   $0x12
    311c:	c6 45 ce 80          	movb   $0x80,-0x32(%ebp)
    3120:	57                   	push   %edi
    3121:	c6 45 cf 06          	movb   $0x6,-0x31(%ebp)
    3125:	6a 08                	push   $0x8
    3127:	66 c7 45 d0 00 01    	movw   $0x100,-0x30(%ebp)
    312d:	52                   	push   %edx
    312e:	66 c7 45 d2 00 00    	movw   $0x0,-0x2e(%ebp)
    3134:	50                   	push   %eax
    3135:	66 c7 45 d4 12 00    	movw   $0x12,-0x2c(%ebp)
    313b:	e8 70 f2 ff ff       	call   23b0 <usb_pipe_control_read>
    3140:	83 c4 20             	add    $0x20,%esp
    3143:	89 c3                	mov    %eax,%ebx
    3145:	85 c0                	test   %eax,%eax
    3147:	75 13                	jne    315c <usb_request_get_device_descriptor+0x6c>
    3149:	83 7d c8 11          	cmpl   $0x11,-0x38(%ebp)
    314d:	76 19                	jbe    3168 <usb_request_get_device_descriptor+0x78>
    314f:	50                   	push   %eax
    3150:	6a 12                	push   $0x12
    3152:	57                   	push   %edi
    3153:	56                   	push   %esi
    3154:	e8 b7 c4 00 00       	call   f610 <memcpy@plt>
    3159:	83 c4 10             	add    $0x10,%esp
    315c:	8d 65 f4             	lea    -0xc(%ebp),%esp
    315f:	89 d8                	mov    %ebx,%eax
    3161:	5b                   	pop    %ebx
    3162:	5e                   	pop    %esi
    3163:	5f                   	pop    %edi
    3164:	5d                   	pop    %ebp
    3165:	c3                   	ret    
    3166:	66 90                	xchg   %ax,%ax
    3168:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx
    316d:	eb ed                	jmp    315c <usb_request_get_device_descriptor+0x6c>
    316f:	90                   	nop
    3170:	bb f6 ff ff ff       	mov    $0xfffffff6,%ebx
    3175:	eb e5                	jmp    315c <usb_request_get_device_descriptor+0x6c>
    3177:	89 f6                	mov    %esi,%esi
    3179:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00003180 <usb_request_get_bare_configuration_descriptor>:
    3180:	55                   	push   %ebp
    3181:	89 e5                	mov    %esp,%ebp
    3183:	57                   	push   %edi
    3184:	56                   	push   %esi
    3185:	53                   	push   %ebx
    3186:	83 ec 2c             	sub    $0x2c,%esp
    3189:	8b 5d 10             	mov    0x10(%ebp),%ebx
    318c:	8b 55 08             	mov    0x8(%ebp),%edx
    318f:	8b 45 0c             	mov    0xc(%ebp),%eax
    3192:	85 db                	test   %ebx,%ebx
    3194:	0f 84 7e 00 00 00    	je     3218 <usb_request_get_bare_configuration_descriptor+0x98>
    319a:	3d ff 00 00 00       	cmp    $0xff,%eax
    319f:	77 6f                	ja     3210 <usb_request_get_bare_configuration_descriptor+0x90>
    31a1:	80 cc 02             	or     $0x2,%ah
    31a4:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
    31ab:	85 d2                	test   %edx,%edx
    31ad:	74 69                	je     3218 <usb_request_get_bare_configuration_descriptor+0x98>
    31af:	66 89 45 d9          	mov    %ax,-0x27(%ebp)
    31b3:	8d 45 d0             	lea    -0x30(%ebp),%eax
    31b6:	8d 7d df             	lea    -0x21(%ebp),%edi
    31b9:	51                   	push   %ecx
    31ba:	51                   	push   %ecx
    31bb:	50                   	push   %eax
    31bc:	8d 45 d7             	lea    -0x29(%ebp),%eax
    31bf:	6a 09                	push   $0x9
    31c1:	c6 45 d7 80          	movb   $0x80,-0x29(%ebp)
    31c5:	57                   	push   %edi
    31c6:	c6 45 d8 06          	movb   $0x6,-0x28(%ebp)
    31ca:	6a 08                	push   $0x8
    31cc:	66 c7 45 db 00 00    	movw   $0x0,-0x25(%ebp)
    31d2:	50                   	push   %eax
    31d3:	66 c7 45 dd 09 00    	movw   $0x9,-0x23(%ebp)
    31d9:	52                   	push   %edx
    31da:	e8 d1 f1 ff ff       	call   23b0 <usb_pipe_control_read>
    31df:	83 c4 20             	add    $0x20,%esp
    31e2:	89 c6                	mov    %eax,%esi
    31e4:	85 c0                	test   %eax,%eax
    31e6:	75 13                	jne    31fb <usb_request_get_bare_configuration_descriptor+0x7b>
    31e8:	83 7d d0 08          	cmpl   $0x8,-0x30(%ebp)
    31ec:	76 1a                	jbe    3208 <usb_request_get_bare_configuration_descriptor+0x88>
    31ee:	50                   	push   %eax
    31ef:	6a 09                	push   $0x9
    31f1:	57                   	push   %edi
    31f2:	53                   	push   %ebx
    31f3:	e8 18 c4 00 00       	call   f610 <memcpy@plt>
    31f8:	83 c4 10             	add    $0x10,%esp
    31fb:	8d 65 f4             	lea    -0xc(%ebp),%esp
    31fe:	89 f0                	mov    %esi,%eax
    3200:	5b                   	pop    %ebx
    3201:	5e                   	pop    %esi
    3202:	5f                   	pop    %edi
    3203:	5d                   	pop    %ebp
    3204:	c3                   	ret    
    3205:	8d 76 00             	lea    0x0(%esi),%esi
    3208:	be fd ff ff ff       	mov    $0xfffffffd,%esi
    320d:	eb ec                	jmp    31fb <usb_request_get_bare_configuration_descriptor+0x7b>
    320f:	90                   	nop
    3210:	be f8 fe ff ff       	mov    $0xfffffef8,%esi
    3215:	eb e4                	jmp    31fb <usb_request_get_bare_configuration_descriptor+0x7b>
    3217:	90                   	nop
    3218:	be f6 ff ff ff       	mov    $0xfffffff6,%esi
    321d:	eb dc                	jmp    31fb <usb_request_get_bare_configuration_descriptor+0x7b>
    321f:	90                   	nop

00003220 <usb_request_get_full_configuration_descriptor>:
    3220:	55                   	push   %ebp
    3221:	89 e5                	mov    %esp,%ebp
    3223:	53                   	push   %ebx
    3224:	83 ec 14             	sub    $0x14,%esp
    3227:	8b 45 0c             	mov    0xc(%ebp),%eax
    322a:	8b 5d 08             	mov    0x8(%ebp),%ebx
    322d:	8b 4d 10             	mov    0x10(%ebp),%ecx
    3230:	8b 55 14             	mov    0x14(%ebp),%edx
    3233:	3d ff 00 00 00       	cmp    $0xff,%eax
    3238:	77 56                	ja     3290 <usb_request_get_full_configuration_descriptor+0x70>
    323a:	85 c9                	test   %ecx,%ecx
    323c:	74 5a                	je     3298 <usb_request_get_full_configuration_descriptor+0x78>
    323e:	85 d2                	test   %edx,%edx
    3240:	74 46                	je     3288 <usb_request_get_full_configuration_descriptor+0x68>
    3242:	80 cc 02             	or     $0x2,%ah
    3245:	85 db                	test   %ebx,%ebx
    3247:	74 4f                	je     3298 <usb_request_get_full_configuration_descriptor+0x78>
    3249:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
    324f:	77 3f                	ja     3290 <usb_request_get_full_configuration_descriptor+0x70>
    3251:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
    3255:	50                   	push   %eax
    3256:	50                   	push   %eax
    3257:	8b 45 18             	mov    0x18(%ebp),%eax
    325a:	50                   	push   %eax
    325b:	8d 45 f0             	lea    -0x10(%ebp),%eax
    325e:	52                   	push   %edx
    325f:	51                   	push   %ecx
    3260:	6a 08                	push   $0x8
    3262:	50                   	push   %eax
    3263:	53                   	push   %ebx
    3264:	c6 45 f0 80          	movb   $0x80,-0x10(%ebp)
    3268:	c6 45 f1 06          	movb   $0x6,-0xf(%ebp)
    326c:	66 c7 45 f4 00 00    	movw   $0x0,-0xc(%ebp)
    3272:	66 89 55 f6          	mov    %dx,-0xa(%ebp)
    3276:	e8 35 f1 ff ff       	call   23b0 <usb_pipe_control_read>
    327b:	83 c4 20             	add    $0x20,%esp
    327e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    3281:	c9                   	leave  
    3282:	c3                   	ret    
    3283:	90                   	nop
    3284:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3288:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    328d:	eb ef                	jmp    327e <usb_request_get_full_configuration_descriptor+0x5e>
    328f:	90                   	nop
    3290:	b8 f8 fe ff ff       	mov    $0xfffffef8,%eax
    3295:	eb e7                	jmp    327e <usb_request_get_full_configuration_descriptor+0x5e>
    3297:	90                   	nop
    3298:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    329d:	eb df                	jmp    327e <usb_request_get_full_configuration_descriptor+0x5e>
    329f:	90                   	nop

000032a0 <usb_request_get_full_configuration_descriptor_alloc>:
    32a0:	55                   	push   %ebp
    32a1:	89 e5                	mov    %esp,%ebp
    32a3:	57                   	push   %edi
    32a4:	56                   	push   %esi
    32a5:	53                   	push   %ebx
    32a6:	83 ec 3c             	sub    $0x3c,%esp
    32a9:	8b 45 10             	mov    0x10(%ebp),%eax
    32ac:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    32af:	85 c0                	test   %eax,%eax
    32b1:	0f 84 41 01 00 00    	je     33f8 <usb_request_get_full_configuration_descriptor_alloc+0x158>
    32b7:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    32bd:	0f 87 25 01 00 00    	ja     33e8 <usb_request_get_full_configuration_descriptor_alloc+0x148>
    32c3:	8b 45 08             	mov    0x8(%ebp),%eax
    32c6:	80 cf 02             	or     $0x2,%bh
    32c9:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
    32d0:	85 c0                	test   %eax,%eax
    32d2:	0f 84 20 01 00 00    	je     33f8 <usb_request_get_full_configuration_descriptor_alloc+0x158>
    32d8:	50                   	push   %eax
    32d9:	50                   	push   %eax
    32da:	8d 45 d0             	lea    -0x30(%ebp),%eax
    32dd:	8d 75 df             	lea    -0x21(%ebp),%esi
    32e0:	50                   	push   %eax
    32e1:	8d 7d d6             	lea    -0x2a(%ebp),%edi
    32e4:	8b 45 08             	mov    0x8(%ebp),%eax
    32e7:	6a 09                	push   $0x9
    32e9:	c6 45 d6 80          	movb   $0x80,-0x2a(%ebp)
    32ed:	56                   	push   %esi
    32ee:	c6 45 d7 06          	movb   $0x6,-0x29(%ebp)
    32f2:	6a 08                	push   $0x8
    32f4:	66 89 5d d8          	mov    %bx,-0x28(%ebp)
    32f8:	57                   	push   %edi
    32f9:	66 c7 45 da 00 00    	movw   $0x0,-0x26(%ebp)
    32ff:	50                   	push   %eax
    3300:	66 c7 45 dc 09 00    	movw   $0x9,-0x24(%ebp)
    3306:	e8 a5 f0 ff ff       	call   23b0 <usb_pipe_control_read>
    330b:	83 c4 20             	add    $0x20,%esp
    330e:	85 c0                	test   %eax,%eax
    3310:	0f 85 9e 00 00 00    	jne    33b4 <usb_request_get_full_configuration_descriptor_alloc+0x114>
    3316:	83 7d d0 08          	cmpl   $0x8,-0x30(%ebp)
    331a:	0f 86 a0 00 00 00    	jbe    33c0 <usb_request_get_full_configuration_descriptor_alloc+0x120>
    3320:	50                   	push   %eax
    3321:	6a 09                	push   $0x9
    3323:	56                   	push   %esi
    3324:	57                   	push   %edi
    3325:	e8 e6 c2 00 00       	call   f610 <memcpy@plt>
    332a:	83 c4 10             	add    $0x10,%esp
    332d:	80 7d d7 02          	cmpb   $0x2,-0x29(%ebp)
    3331:	0f 85 b9 00 00 00    	jne    33f0 <usb_request_get_full_configuration_descriptor_alloc+0x150>
    3337:	8b 4d d8             	mov    -0x28(%ebp),%ecx
    333a:	31 ff                	xor    %edi,%edi
    333c:	66 89 cf             	mov    %cx,%di
    333f:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
    3342:	83 ff 08             	cmp    $0x8,%edi
    3345:	76 79                	jbe    33c0 <usb_request_get_full_configuration_descriptor_alloc+0x120>
    3347:	83 ec 0c             	sub    $0xc,%esp
    334a:	57                   	push   %edi
    334b:	e8 d0 c2 00 00       	call   f620 <malloc@plt>
    3350:	83 c4 10             	add    $0x10,%esp
    3353:	89 c2                	mov    %eax,%edx
    3355:	85 c0                	test   %eax,%eax
    3357:	0f 84 b6 00 00 00    	je     3413 <usb_request_get_full_configuration_descriptor_alloc+0x173>
    335d:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
    3360:	66 89 5d e1          	mov    %bx,-0x1f(%ebp)
    3364:	8d 45 d0             	lea    -0x30(%ebp),%eax
    3367:	8b 5d 08             	mov    0x8(%ebp),%ebx
    336a:	66 89 4d e5          	mov    %cx,-0x1b(%ebp)
    336e:	89 55 c4             	mov    %edx,-0x3c(%ebp)
    3371:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
    3378:	51                   	push   %ecx
    3379:	c6 45 df 80          	movb   $0x80,-0x21(%ebp)
    337d:	51                   	push   %ecx
    337e:	c6 45 e0 06          	movb   $0x6,-0x20(%ebp)
    3382:	50                   	push   %eax
    3383:	66 c7 45 e3 00 00    	movw   $0x0,-0x1d(%ebp)
    3389:	57                   	push   %edi
    338a:	52                   	push   %edx
    338b:	6a 08                	push   $0x8
    338d:	56                   	push   %esi
    338e:	53                   	push   %ebx
    338f:	e8 1c f0 ff ff       	call   23b0 <usb_pipe_control_read>
    3394:	83 c4 20             	add    $0x20,%esp
    3397:	8b 55 c4             	mov    -0x3c(%ebp),%edx
    339a:	85 c0                	test   %eax,%eax
    339c:	75 32                	jne    33d0 <usb_request_get_full_configuration_descriptor_alloc+0x130>
    339e:	3b 7d d0             	cmp    -0x30(%ebp),%edi
    33a1:	75 5d                	jne    3400 <usb_request_get_full_configuration_descriptor_alloc+0x160>
    33a3:	8b 4d 10             	mov    0x10(%ebp),%ecx
    33a6:	89 11                	mov    %edx,(%ecx)
    33a8:	8b 55 14             	mov    0x14(%ebp),%edx
    33ab:	85 d2                	test   %edx,%edx
    33ad:	74 05                	je     33b4 <usb_request_get_full_configuration_descriptor_alloc+0x114>
    33af:	8b 75 14             	mov    0x14(%ebp),%esi
    33b2:	89 3e                	mov    %edi,(%esi)
    33b4:	8d 65 f4             	lea    -0xc(%ebp),%esp
    33b7:	5b                   	pop    %ebx
    33b8:	5e                   	pop    %esi
    33b9:	5f                   	pop    %edi
    33ba:	5d                   	pop    %ebp
    33bb:	c3                   	ret    
    33bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    33c0:	8d 65 f4             	lea    -0xc(%ebp),%esp
    33c3:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    33c8:	5b                   	pop    %ebx
    33c9:	5e                   	pop    %esi
    33ca:	5f                   	pop    %edi
    33cb:	5d                   	pop    %ebp
    33cc:	c3                   	ret    
    33cd:	8d 76 00             	lea    0x0(%esi),%esi
    33d0:	83 ec 0c             	sub    $0xc,%esp
    33d3:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    33d6:	52                   	push   %edx
    33d7:	e8 c4 c5 00 00       	call   f9a0 <free@plt>
    33dc:	83 c4 10             	add    $0x10,%esp
    33df:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    33e2:	eb d0                	jmp    33b4 <usb_request_get_full_configuration_descriptor_alloc+0x114>
    33e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    33e8:	b8 f8 fe ff ff       	mov    $0xfffffef8,%eax
    33ed:	eb c5                	jmp    33b4 <usb_request_get_full_configuration_descriptor_alloc+0x114>
    33ef:	90                   	nop
    33f0:	83 c8 ff             	or     $0xffffffff,%eax
    33f3:	eb bf                	jmp    33b4 <usb_request_get_full_configuration_descriptor_alloc+0x114>
    33f5:	8d 76 00             	lea    0x0(%esi),%esi
    33f8:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    33fd:	eb b5                	jmp    33b4 <usb_request_get_full_configuration_descriptor_alloc+0x114>
    33ff:	90                   	nop
    3400:	83 ec 0c             	sub    $0xc,%esp
    3403:	52                   	push   %edx
    3404:	e8 97 c5 00 00       	call   f9a0 <free@plt>
    3409:	83 c4 10             	add    $0x10,%esp
    340c:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    3411:	eb a1                	jmp    33b4 <usb_request_get_full_configuration_descriptor_alloc+0x114>
    3413:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    3418:	eb 9a                	jmp    33b4 <usb_request_get_full_configuration_descriptor_alloc+0x114>
    341a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00003420 <usb_request_set_descriptor>:
    3420:	55                   	push   %ebp
    3421:	89 e5                	mov    %esp,%ebp
    3423:	57                   	push   %edi
    3424:	56                   	push   %esi
    3425:	53                   	push   %ebx
    3426:	83 ec 1c             	sub    $0x1c,%esp
    3429:	8b 5d 20             	mov    0x20(%ebp),%ebx
    342c:	8b 75 08             	mov    0x8(%ebp),%esi
    342f:	8b 55 14             	mov    0x14(%ebp),%edx
    3432:	8b 45 18             	mov    0x18(%ebp),%eax
    3435:	8b 7d 1c             	mov    0x1c(%ebp),%edi
    3438:	8b 4d 24             	mov    0x24(%ebp),%ecx
    343b:	85 db                	test   %ebx,%ebx
    343d:	74 69                	je     34a8 <usb_request_set_descriptor+0x88>
    343f:	85 c9                	test   %ecx,%ecx
    3441:	74 55                	je     3498 <usb_request_set_descriptor+0x78>
    3443:	c1 e2 08             	shl    $0x8,%edx
    3446:	25 ff 00 00 00       	and    $0xff,%eax
    344b:	09 d0                	or     %edx,%eax
    344d:	85 f6                	test   %esi,%esi
    344f:	74 57                	je     34a8 <usb_request_set_descriptor+0x88>
    3451:	81 f9 ff ff 00 00    	cmp    $0xffff,%ecx
    3457:	77 47                	ja     34a0 <usb_request_set_descriptor+0x80>
    3459:	8a 55 0c             	mov    0xc(%ebp),%dl
    345c:	83 ec 0c             	sub    $0xc,%esp
    345f:	c1 e2 05             	shl    $0x5,%edx
    3462:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)
    3466:	0b 55 10             	or     0x10(%ebp),%edx
    3469:	8d 45 e0             	lea    -0x20(%ebp),%eax
    346c:	51                   	push   %ecx
    346d:	53                   	push   %ebx
    346e:	6a 08                	push   $0x8
    3470:	50                   	push   %eax
    3471:	56                   	push   %esi
    3472:	88 55 e0             	mov    %dl,-0x20(%ebp)
    3475:	c6 45 e1 07          	movb   $0x7,-0x1f(%ebp)
    3479:	66 89 7d e4          	mov    %di,-0x1c(%ebp)
    347d:	66 89 4d e6          	mov    %cx,-0x1a(%ebp)
    3481:	e8 5a f0 ff ff       	call   24e0 <usb_pipe_control_write>
    3486:	83 c4 20             	add    $0x20,%esp
    3489:	8d 65 f4             	lea    -0xc(%ebp),%esp
    348c:	5b                   	pop    %ebx
    348d:	5e                   	pop    %esi
    348e:	5f                   	pop    %edi
    348f:	5d                   	pop    %ebp
    3490:	c3                   	ret    
    3491:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3498:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    349d:	eb ea                	jmp    3489 <usb_request_set_descriptor+0x69>
    349f:	90                   	nop
    34a0:	b8 f8 fe ff ff       	mov    $0xfffffef8,%eax
    34a5:	eb e2                	jmp    3489 <usb_request_set_descriptor+0x69>
    34a7:	90                   	nop
    34a8:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    34ad:	eb da                	jmp    3489 <usb_request_set_descriptor+0x69>
    34af:	90                   	nop

000034b0 <usb_request_get_configuration>:
    34b0:	55                   	push   %ebp
    34b1:	89 e5                	mov    %esp,%ebp
    34b3:	53                   	push   %ebx
    34b4:	83 ec 14             	sub    $0x14,%esp
    34b7:	8b 45 08             	mov    0x8(%ebp),%eax
    34ba:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    34bd:	85 c0                	test   %eax,%eax
    34bf:	74 4f                	je     3510 <usb_request_get_configuration+0x60>
    34c1:	52                   	push   %edx
    34c2:	52                   	push   %edx
    34c3:	8d 55 ec             	lea    -0x14(%ebp),%edx
    34c6:	c6 45 f0 80          	movb   $0x80,-0x10(%ebp)
    34ca:	52                   	push   %edx
    34cb:	8d 55 eb             	lea    -0x15(%ebp),%edx
    34ce:	6a 01                	push   $0x1
    34d0:	52                   	push   %edx
    34d1:	8d 55 f0             	lea    -0x10(%ebp),%edx
    34d4:	6a 08                	push   $0x8
    34d6:	c6 45 f1 08          	movb   $0x8,-0xf(%ebp)
    34da:	52                   	push   %edx
    34db:	66 c7 45 f2 00 00    	movw   $0x0,-0xe(%ebp)
    34e1:	50                   	push   %eax
    34e2:	66 c7 45 f4 00 00    	movw   $0x0,-0xc(%ebp)
    34e8:	66 c7 45 f6 01 00    	movw   $0x1,-0xa(%ebp)
    34ee:	e8 bd ee ff ff       	call   23b0 <usb_pipe_control_read>
    34f3:	83 c4 20             	add    $0x20,%esp
    34f6:	85 c0                	test   %eax,%eax
    34f8:	75 0f                	jne    3509 <usb_request_get_configuration+0x59>
    34fa:	83 7d ec 01          	cmpl   $0x1,-0x14(%ebp)
    34fe:	75 20                	jne    3520 <usb_request_get_configuration+0x70>
    3500:	85 db                	test   %ebx,%ebx
    3502:	74 05                	je     3509 <usb_request_get_configuration+0x59>
    3504:	8a 4d eb             	mov    -0x15(%ebp),%cl
    3507:	88 0b                	mov    %cl,(%ebx)
    3509:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    350c:	c9                   	leave  
    350d:	c3                   	ret    
    350e:	66 90                	xchg   %ax,%ax
    3510:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    3515:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    3518:	c9                   	leave  
    3519:	c3                   	ret    
    351a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3520:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    3525:	eb e2                	jmp    3509 <usb_request_get_configuration+0x59>
    3527:	89 f6                	mov    %esi,%esi
    3529:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00003530 <usb_request_set_configuration>:
    3530:	55                   	push   %ebp
    3531:	31 d2                	xor    %edx,%edx
    3533:	89 e5                	mov    %esp,%ebp
    3535:	83 ec 18             	sub    $0x18,%esp
    3538:	8b 45 08             	mov    0x8(%ebp),%eax
    353b:	8a 55 0c             	mov    0xc(%ebp),%dl
    353e:	85 c0                	test   %eax,%eax
    3540:	74 36                	je     3578 <usb_request_set_configuration+0x48>
    3542:	83 ec 0c             	sub    $0xc,%esp
    3545:	66 89 55 f2          	mov    %dx,-0xe(%ebp)
    3549:	8d 55 f0             	lea    -0x10(%ebp),%edx
    354c:	c6 45 f0 00          	movb   $0x0,-0x10(%ebp)
    3550:	6a 00                	push   $0x0
    3552:	6a 00                	push   $0x0
    3554:	6a 08                	push   $0x8
    3556:	52                   	push   %edx
    3557:	50                   	push   %eax
    3558:	c6 45 f1 09          	movb   $0x9,-0xf(%ebp)
    355c:	66 c7 45 f4 00 00    	movw   $0x0,-0xc(%ebp)
    3562:	66 c7 45 f6 00 00    	movw   $0x0,-0xa(%ebp)
    3568:	e8 73 ef ff ff       	call   24e0 <usb_pipe_control_write>
    356d:	83 c4 20             	add    $0x20,%esp
    3570:	c9                   	leave  
    3571:	c3                   	ret    
    3572:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3578:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    357d:	c9                   	leave  
    357e:	c3                   	ret    
    357f:	90                   	nop

00003580 <usb_request_get_interface>:
    3580:	55                   	push   %ebp
    3581:	89 e5                	mov    %esp,%ebp
    3583:	53                   	push   %ebx
    3584:	83 ec 14             	sub    $0x14,%esp
    3587:	8b 55 08             	mov    0x8(%ebp),%edx
    358a:	8b 45 0c             	mov    0xc(%ebp),%eax
    358d:	8b 5d 10             	mov    0x10(%ebp),%ebx
    3590:	85 d2                	test   %edx,%edx
    3592:	74 54                	je     35e8 <usb_request_get_interface+0x68>
    3594:	25 ff 00 00 00       	and    $0xff,%eax
    3599:	c6 45 f0 81          	movb   $0x81,-0x10(%ebp)
    359d:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
    35a1:	50                   	push   %eax
    35a2:	50                   	push   %eax
    35a3:	8d 45 ec             	lea    -0x14(%ebp),%eax
    35a6:	50                   	push   %eax
    35a7:	8d 45 eb             	lea    -0x15(%ebp),%eax
    35aa:	6a 01                	push   $0x1
    35ac:	50                   	push   %eax
    35ad:	8d 45 f0             	lea    -0x10(%ebp),%eax
    35b0:	6a 08                	push   $0x8
    35b2:	c6 45 f1 0a          	movb   $0xa,-0xf(%ebp)
    35b6:	50                   	push   %eax
    35b7:	66 c7 45 f2 00 00    	movw   $0x0,-0xe(%ebp)
    35bd:	52                   	push   %edx
    35be:	66 c7 45 f6 01 00    	movw   $0x1,-0xa(%ebp)
    35c4:	e8 e7 ed ff ff       	call   23b0 <usb_pipe_control_read>
    35c9:	83 c4 20             	add    $0x20,%esp
    35cc:	85 c0                	test   %eax,%eax
    35ce:	75 0f                	jne    35df <usb_request_get_interface+0x5f>
    35d0:	83 7d ec 01          	cmpl   $0x1,-0x14(%ebp)
    35d4:	75 22                	jne    35f8 <usb_request_get_interface+0x78>
    35d6:	85 db                	test   %ebx,%ebx
    35d8:	74 05                	je     35df <usb_request_get_interface+0x5f>
    35da:	8a 4d eb             	mov    -0x15(%ebp),%cl
    35dd:	88 0b                	mov    %cl,(%ebx)
    35df:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    35e2:	c9                   	leave  
    35e3:	c3                   	ret    
    35e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    35e8:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    35ed:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    35f0:	c9                   	leave  
    35f1:	c3                   	ret    
    35f2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    35f8:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    35fd:	eb e0                	jmp    35df <usb_request_get_interface+0x5f>
    35ff:	90                   	nop

00003600 <usb_request_set_interface>:
    3600:	55                   	push   %ebp
    3601:	31 c9                	xor    %ecx,%ecx
    3603:	89 e5                	mov    %esp,%ebp
    3605:	83 ec 18             	sub    $0x18,%esp
    3608:	31 d2                	xor    %edx,%edx
    360a:	8b 45 08             	mov    0x8(%ebp),%eax
    360d:	8a 4d 10             	mov    0x10(%ebp),%cl
    3610:	8a 55 0c             	mov    0xc(%ebp),%dl
    3613:	85 c0                	test   %eax,%eax
    3615:	74 31                	je     3648 <usb_request_set_interface+0x48>
    3617:	83 ec 0c             	sub    $0xc,%esp
    361a:	66 89 55 f4          	mov    %dx,-0xc(%ebp)
    361e:	8d 55 f0             	lea    -0x10(%ebp),%edx
    3621:	c6 45 f0 01          	movb   $0x1,-0x10(%ebp)
    3625:	6a 00                	push   $0x0
    3627:	6a 00                	push   $0x0
    3629:	6a 08                	push   $0x8
    362b:	52                   	push   %edx
    362c:	50                   	push   %eax
    362d:	c6 45 f1 0b          	movb   $0xb,-0xf(%ebp)
    3631:	66 89 4d f2          	mov    %cx,-0xe(%ebp)
    3635:	66 c7 45 f6 00 00    	movw   $0x0,-0xa(%ebp)
    363b:	e8 a0 ee ff ff       	call   24e0 <usb_pipe_control_write>
    3640:	83 c4 20             	add    $0x20,%esp
    3643:	c9                   	leave  
    3644:	c3                   	ret    
    3645:	8d 76 00             	lea    0x0(%esi),%esi
    3648:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    364d:	c9                   	leave  
    364e:	c3                   	ret    
    364f:	90                   	nop

00003650 <usb_request_get_supported_languages>:
    3650:	55                   	push   %ebp
    3651:	89 e5                	mov    %esp,%ebp
    3653:	57                   	push   %edi
    3654:	56                   	push   %esi
    3655:	53                   	push   %ebx
    3656:	83 ec 2c             	sub    $0x2c,%esp
    3659:	8b 45 0c             	mov    0xc(%ebp),%eax
    365c:	85 c0                	test   %eax,%eax
    365e:	0f 84 84 01 00 00    	je     37e8 <usb_request_get_supported_languages+0x198>
    3664:	8b 45 10             	mov    0x10(%ebp),%eax
    3667:	85 c0                	test   %eax,%eax
    3669:	0f 84 79 01 00 00    	je     37e8 <usb_request_get_supported_languages+0x198>
    366f:	8b 7d 08             	mov    0x8(%ebp),%edi
    3672:	85 ff                	test   %edi,%edi
    3674:	0f 84 6e 01 00 00    	je     37e8 <usb_request_get_supported_languages+0x198>
    367a:	8b 75 08             	mov    0x8(%ebp),%esi
    367d:	53                   	push   %ebx
    367e:	8d 45 db             	lea    -0x25(%ebp),%eax
    3681:	53                   	push   %ebx
    3682:	8d 7d dc             	lea    -0x24(%ebp),%edi
    3685:	8d 5d e0             	lea    -0x20(%ebp),%ebx
    3688:	57                   	push   %edi
    3689:	c6 45 e0 80          	movb   $0x80,-0x20(%ebp)
    368d:	6a 01                	push   $0x1
    368f:	c6 45 e1 06          	movb   $0x6,-0x1f(%ebp)
    3693:	50                   	push   %eax
    3694:	66 c7 45 e2 00 03    	movw   $0x300,-0x1e(%ebp)
    369a:	6a 08                	push   $0x8
    369c:	66 c7 45 e4 00 00    	movw   $0x0,-0x1c(%ebp)
    36a2:	53                   	push   %ebx
    36a3:	66 c7 45 e6 01 00    	movw   $0x1,-0x1a(%ebp)
    36a9:	56                   	push   %esi
    36aa:	e8 01 ed ff ff       	call   23b0 <usb_pipe_control_read>
    36af:	83 c4 20             	add    $0x20,%esp
    36b2:	89 c6                	mov    %eax,%esi
    36b4:	85 c0                	test   %eax,%eax
    36b6:	0f 85 0b 01 00 00    	jne    37c7 <usb_request_get_supported_languages+0x177>
    36bc:	83 7d dc 01          	cmpl   $0x1,-0x24(%ebp)
    36c0:	0f 85 12 01 00 00    	jne    37d8 <usb_request_get_supported_languages+0x188>
    36c6:	0f b6 75 db          	movzbl -0x25(%ebp),%esi
    36ca:	89 f2                	mov    %esi,%edx
    36cc:	81 e2 ff 00 00 00    	and    $0xff,%edx
    36d2:	85 d2                	test   %edx,%edx
    36d4:	0f 84 fe 00 00 00    	je     37d8 <usb_request_get_supported_languages+0x188>
    36da:	83 ec 0c             	sub    $0xc,%esp
    36dd:	89 55 d0             	mov    %edx,-0x30(%ebp)
    36e0:	52                   	push   %edx
    36e1:	e8 3a bf 00 00       	call   f620 <malloc@plt>
    36e6:	83 c4 10             	add    $0x10,%esp
    36e9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    36ec:	85 c0                	test   %eax,%eax
    36ee:	0f 84 4f 01 00 00    	je     3843 <usb_request_get_supported_languages+0x1f3>
    36f4:	81 e6 ff 00 00 00    	and    $0xff,%esi
    36fa:	8b 4d 08             	mov    0x8(%ebp),%ecx
    36fd:	52                   	push   %edx
    36fe:	52                   	push   %edx
    36ff:	8b 55 d0             	mov    -0x30(%ebp),%edx
    3702:	57                   	push   %edi
    3703:	66 89 75 e6          	mov    %si,-0x1a(%ebp)
    3707:	52                   	push   %edx
    3708:	c6 45 e0 80          	movb   $0x80,-0x20(%ebp)
    370c:	50                   	push   %eax
    370d:	c6 45 e1 06          	movb   $0x6,-0x1f(%ebp)
    3711:	6a 08                	push   $0x8
    3713:	66 c7 45 e2 00 03    	movw   $0x300,-0x1e(%ebp)
    3719:	53                   	push   %ebx
    371a:	66 c7 45 e4 00 00    	movw   $0x0,-0x1c(%ebp)
    3720:	51                   	push   %ecx
    3721:	e8 8a ec ff ff       	call   23b0 <usb_pipe_control_read>
    3726:	83 c4 20             	add    $0x20,%esp
    3729:	89 c6                	mov    %eax,%esi
    372b:	85 c0                	test   %eax,%eax
    372d:	8b 55 d0             	mov    -0x30(%ebp),%edx
    3730:	0f 85 ba 00 00 00    	jne    37f0 <usb_request_get_supported_languages+0x1a0>
    3736:	3b 55 dc             	cmp    -0x24(%ebp),%edx
    3739:	0f 85 d8 00 00 00    	jne    3817 <usb_request_get_supported_languages+0x1c7>
    373f:	83 fa 02             	cmp    $0x2,%edx
    3742:	0f 86 e5 00 00 00    	jbe    382d <usb_request_get_supported_languages+0x1dd>
    3748:	83 ea 02             	sub    $0x2,%edx
    374b:	f6 c2 01             	test   $0x1,%dl
    374e:	0f 85 ad 00 00 00    	jne    3801 <usb_request_get_supported_languages+0x1b1>
    3754:	d1 ea                	shr    %edx
    3756:	51                   	push   %ecx
    3757:	89 d7                	mov    %edx,%edi
    3759:	51                   	push   %ecx
    375a:	89 55 d0             	mov    %edx,-0x30(%ebp)
    375d:	6a 04                	push   $0x4
    375f:	52                   	push   %edx
    3760:	e8 8b bf 00 00       	call   f6f0 <calloc@plt>
    3765:	83 c4 10             	add    $0x10,%esp
    3768:	89 45 cc             	mov    %eax,-0x34(%ebp)
    376b:	85 c0                	test   %eax,%eax
    376d:	0f 84 da 00 00 00    	je     384d <usb_request_get_supported_languages+0x1fd>
    3773:	85 ff                	test   %edi,%edi
    3775:	74 31                	je     37a8 <usb_request_get_supported_languages+0x158>
    3777:	8b 7d d4             	mov    -0x2c(%ebp),%edi
    377a:	89 c3                	mov    %eax,%ebx
    377c:	8d 4f 03             	lea    0x3(%edi),%ecx
    377f:	8b 7d d0             	mov    -0x30(%ebp),%edi
    3782:	8d 3c b8             	lea    (%eax,%edi,4),%edi
    3785:	8d 76 00             	lea    0x0(%esi),%esi
    3788:	31 c0                	xor    %eax,%eax
    378a:	31 d2                	xor    %edx,%edx
    378c:	8a 01                	mov    (%ecx),%al
    378e:	8a 51 ff             	mov    -0x1(%ecx),%dl
    3791:	c1 e0 08             	shl    $0x8,%eax
    3794:	83 c3 04             	add    $0x4,%ebx
    3797:	01 d0                	add    %edx,%eax
    3799:	83 c1 02             	add    $0x2,%ecx
    379c:	25 ff ff 00 00       	and    $0xffff,%eax
    37a1:	89 43 fc             	mov    %eax,-0x4(%ebx)
    37a4:	39 df                	cmp    %ebx,%edi
    37a6:	75 e0                	jne    3788 <usb_request_get_supported_languages+0x138>
    37a8:	83 ec 0c             	sub    $0xc,%esp
    37ab:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    37ae:	52                   	push   %edx
    37af:	e8 ec c1 00 00       	call   f9a0 <free@plt>
    37b4:	8b 45 0c             	mov    0xc(%ebp),%eax
    37b7:	8b 7d cc             	mov    -0x34(%ebp),%edi
    37ba:	83 c4 10             	add    $0x10,%esp
    37bd:	89 38                	mov    %edi,(%eax)
    37bf:	8b 45 10             	mov    0x10(%ebp),%eax
    37c2:	8b 7d d0             	mov    -0x30(%ebp),%edi
    37c5:	89 38                	mov    %edi,(%eax)
    37c7:	8d 65 f4             	lea    -0xc(%ebp),%esp
    37ca:	89 f0                	mov    %esi,%eax
    37cc:	5b                   	pop    %ebx
    37cd:	5e                   	pop    %esi
    37ce:	5f                   	pop    %edi
    37cf:	5d                   	pop    %ebp
    37d0:	c3                   	ret    
    37d1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    37d8:	8d 65 f4             	lea    -0xc(%ebp),%esp
    37db:	be fd ff ff ff       	mov    $0xfffffffd,%esi
    37e0:	89 f0                	mov    %esi,%eax
    37e2:	5b                   	pop    %ebx
    37e3:	5e                   	pop    %esi
    37e4:	5f                   	pop    %edi
    37e5:	5d                   	pop    %ebp
    37e6:	c3                   	ret    
    37e7:	90                   	nop
    37e8:	be f6 ff ff ff       	mov    $0xfffffff6,%esi
    37ed:	eb d8                	jmp    37c7 <usb_request_get_supported_languages+0x177>
    37ef:	90                   	nop
    37f0:	83 ec 0c             	sub    $0xc,%esp
    37f3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    37f6:	50                   	push   %eax
    37f7:	e8 a4 c1 00 00       	call   f9a0 <free@plt>
    37fc:	83 c4 10             	add    $0x10,%esp
    37ff:	eb c6                	jmp    37c7 <usb_request_get_supported_languages+0x177>
    3801:	83 ec 0c             	sub    $0xc,%esp
    3804:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
    3807:	be d3 fe ff ff       	mov    $0xfffffed3,%esi
    380c:	53                   	push   %ebx
    380d:	e8 8e c1 00 00       	call   f9a0 <free@plt>
    3812:	83 c4 10             	add    $0x10,%esp
    3815:	eb b0                	jmp    37c7 <usb_request_get_supported_languages+0x177>
    3817:	83 ec 0c             	sub    $0xc,%esp
    381a:	8b 7d d4             	mov    -0x2c(%ebp),%edi
    381d:	be fd ff ff ff       	mov    $0xfffffffd,%esi
    3822:	57                   	push   %edi
    3823:	e8 78 c1 00 00       	call   f9a0 <free@plt>
    3828:	83 c4 10             	add    $0x10,%esp
    382b:	eb 9a                	jmp    37c7 <usb_request_get_supported_languages+0x177>
    382d:	83 ec 0c             	sub    $0xc,%esp
    3830:	8b 75 d4             	mov    -0x2c(%ebp),%esi
    3833:	56                   	push   %esi
    3834:	be d2 fe ff ff       	mov    $0xfffffed2,%esi
    3839:	e8 62 c1 00 00       	call   f9a0 <free@plt>
    383e:	83 c4 10             	add    $0x10,%esp
    3841:	eb 84                	jmp    37c7 <usb_request_get_supported_languages+0x177>
    3843:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    3848:	e9 7a ff ff ff       	jmp    37c7 <usb_request_get_supported_languages+0x177>
    384d:	83 ec 0c             	sub    $0xc,%esp
    3850:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3853:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    3858:	50                   	push   %eax
    3859:	e8 42 c1 00 00       	call   f9a0 <free@plt>
    385e:	83 c4 10             	add    $0x10,%esp
    3861:	e9 61 ff ff ff       	jmp    37c7 <usb_request_get_supported_languages+0x177>
    3866:	8d 76 00             	lea    0x0(%esi),%esi
    3869:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00003870 <usb_request_get_string>:
    3870:	55                   	push   %ebp
    3871:	89 e5                	mov    %esp,%ebp
    3873:	57                   	push   %edi
    3874:	56                   	push   %esi
    3875:	53                   	push   %ebx
    3876:	83 ec 2c             	sub    $0x2c,%esp
    3879:	8b 45 14             	mov    0x14(%ebp),%eax
    387c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    387f:	85 c0                	test   %eax,%eax
    3881:	0f 84 44 02 00 00    	je     3acb <usb_request_get_string+0x25b>
    3887:	8d 43 ff             	lea    -0x1(%ebx),%eax
    388a:	3d fe 00 00 00       	cmp    $0xfe,%eax
    388f:	0f 87 f3 01 00 00    	ja     3a88 <usb_request_get_string+0x218>
    3895:	81 7d 10 ff ff 00 00 	cmpl   $0xffff,0x10(%ebp)
    389c:	0f 87 e6 01 00 00    	ja     3a88 <usb_request_get_string+0x218>
    38a2:	8b 45 08             	mov    0x8(%ebp),%eax
    38a5:	80 cf 03             	or     $0x3,%bh
    38a8:	85 c0                	test   %eax,%eax
    38aa:	0f 84 25 02 00 00    	je     3ad5 <usb_request_get_string+0x265>
    38b0:	8b 45 10             	mov    0x10(%ebp),%eax
    38b3:	8d 7d dc             	lea    -0x24(%ebp),%edi
    38b6:	66 89 45 e4          	mov    %ax,-0x1c(%ebp)
    38ba:	8d 45 db             	lea    -0x25(%ebp),%eax
    38bd:	56                   	push   %esi
    38be:	56                   	push   %esi
    38bf:	8d 75 e0             	lea    -0x20(%ebp),%esi
    38c2:	57                   	push   %edi
    38c3:	6a 01                	push   $0x1
    38c5:	50                   	push   %eax
    38c6:	8b 45 08             	mov    0x8(%ebp),%eax
    38c9:	6a 08                	push   $0x8
    38cb:	c6 45 e0 80          	movb   $0x80,-0x20(%ebp)
    38cf:	56                   	push   %esi
    38d0:	c6 45 e1 06          	movb   $0x6,-0x1f(%ebp)
    38d4:	50                   	push   %eax
    38d5:	66 89 5d e2          	mov    %bx,-0x1e(%ebp)
    38d9:	66 c7 45 e6 01 00    	movw   $0x1,-0x1a(%ebp)
    38df:	e8 cc ea ff ff       	call   23b0 <usb_pipe_control_read>
    38e4:	83 c4 20             	add    $0x20,%esp
    38e7:	89 c2                	mov    %eax,%edx
    38e9:	85 c0                	test   %eax,%eax
    38eb:	0f 85 af 00 00 00    	jne    39a0 <usb_request_get_string+0x130>
    38f1:	83 7d dc 01          	cmpl   $0x1,-0x24(%ebp)
    38f5:	0f 85 7d 01 00 00    	jne    3a78 <usb_request_get_string+0x208>
    38fb:	8a 55 db             	mov    -0x25(%ebp),%dl
    38fe:	31 c9                	xor    %ecx,%ecx
    3900:	88 d1                	mov    %dl,%cl
    3902:	88 55 d0             	mov    %dl,-0x30(%ebp)
    3905:	85 c9                	test   %ecx,%ecx
    3907:	0f 84 6b 01 00 00    	je     3a78 <usb_request_get_string+0x208>
    390d:	83 ec 0c             	sub    $0xc,%esp
    3910:	89 4d cc             	mov    %ecx,-0x34(%ebp)
    3913:	51                   	push   %ecx
    3914:	e8 07 bd 00 00       	call   f620 <malloc@plt>
    3919:	83 c4 10             	add    $0x10,%esp
    391c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    391f:	85 c0                	test   %eax,%eax
    3921:	0f 84 9a 01 00 00    	je     3ac1 <usb_request_get_string+0x251>
    3927:	8b 4d 10             	mov    0x10(%ebp),%ecx
    392a:	8a 55 d0             	mov    -0x30(%ebp),%dl
    392d:	81 e2 ff 00 00 00    	and    $0xff,%edx
    3933:	66 89 4d e4          	mov    %cx,-0x1c(%ebp)
    3937:	66 89 5d e2          	mov    %bx,-0x1e(%ebp)
    393b:	8b 5d 08             	mov    0x8(%ebp),%ebx
    393e:	51                   	push   %ecx
    393f:	51                   	push   %ecx
    3940:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    3943:	57                   	push   %edi
    3944:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)
    3948:	51                   	push   %ecx
    3949:	89 4d d0             	mov    %ecx,-0x30(%ebp)
    394c:	50                   	push   %eax
    394d:	c6 45 e0 80          	movb   $0x80,-0x20(%ebp)
    3951:	6a 08                	push   $0x8
    3953:	c6 45 e1 06          	movb   $0x6,-0x1f(%ebp)
    3957:	56                   	push   %esi
    3958:	53                   	push   %ebx
    3959:	e8 52 ea ff ff       	call   23b0 <usb_pipe_control_read>
    395e:	83 c4 20             	add    $0x20,%esp
    3961:	89 c2                	mov    %eax,%edx
    3963:	85 c0                	test   %eax,%eax
    3965:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    3968:	75 1e                	jne    3988 <usb_request_get_string+0x118>
    396a:	3b 4d dc             	cmp    -0x24(%ebp),%ecx
    396d:	0f 85 35 01 00 00    	jne    3aa8 <usb_request_get_string+0x238>
    3973:	83 f9 02             	cmp    $0x2,%ecx
    3976:	77 50                	ja     39c8 <usb_request_get_string+0x158>
    3978:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    397b:	31 f6                	xor    %esi,%esi
    397d:	ba d2 fe ff ff       	mov    $0xfffffed2,%edx
    3982:	eb 20                	jmp    39a4 <usb_request_get_string+0x134>
    3984:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3988:	83 ec 0c             	sub    $0xc,%esp
    398b:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    398e:	89 45 d0             	mov    %eax,-0x30(%ebp)
    3991:	52                   	push   %edx
    3992:	e8 09 c0 00 00       	call   f9a0 <free@plt>
    3997:	83 c4 10             	add    $0x10,%esp
    399a:	8b 55 d0             	mov    -0x30(%ebp),%edx
    399d:	8d 76 00             	lea    0x0(%esi),%esi
    39a0:	31 c0                	xor    %eax,%eax
    39a2:	31 f6                	xor    %esi,%esi
    39a4:	83 ec 0c             	sub    $0xc,%esp
    39a7:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    39aa:	50                   	push   %eax
    39ab:	e8 f0 bf 00 00       	call   f9a0 <free@plt>
    39b0:	89 34 24             	mov    %esi,(%esp)
    39b3:	e8 e8 bf 00 00       	call   f9a0 <free@plt>
    39b8:	83 c4 10             	add    $0x10,%esp
    39bb:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    39be:	8d 65 f4             	lea    -0xc(%ebp),%esp
    39c1:	89 d0                	mov    %edx,%eax
    39c3:	5b                   	pop    %ebx
    39c4:	5e                   	pop    %esi
    39c5:	5f                   	pop    %edi
    39c6:	5d                   	pop    %ebp
    39c7:	c3                   	ret    
    39c8:	8d 59 fe             	lea    -0x2(%ecx),%ebx
    39cb:	f6 c3 01             	test   $0x1,%bl
    39ce:	74 10                	je     39e0 <usb_request_get_string+0x170>
    39d0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    39d3:	31 f6                	xor    %esi,%esi
    39d5:	ba d3 fe ff ff       	mov    $0xfffffed3,%edx
    39da:	eb c8                	jmp    39a4 <usb_request_get_string+0x134>
    39dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    39e0:	d1 eb                	shr    %ebx
    39e2:	83 ec 0c             	sub    $0xc,%esp
    39e5:	89 55 cc             	mov    %edx,-0x34(%ebp)
    39e8:	8d 04 9d 04 00 00 00 	lea    0x4(,%ebx,4),%eax
    39ef:	50                   	push   %eax
    39f0:	89 45 d0             	mov    %eax,-0x30(%ebp)
    39f3:	e8 28 bc 00 00       	call   f620 <malloc@plt>
    39f8:	83 c4 10             	add    $0x10,%esp
    39fb:	89 c6                	mov    %eax,%esi
    39fd:	85 c0                	test   %eax,%eax
    39ff:	0f 84 93 00 00 00    	je     3a98 <usb_request_get_string+0x228>
    3a05:	85 db                	test   %ebx,%ebx
    3a07:	8b 55 cc             	mov    -0x34(%ebp),%edx
    3a0a:	74 37                	je     3a43 <usb_request_get_string+0x1d3>
    3a0c:	89 c7                	mov    %eax,%edi
    3a0e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3a11:	89 55 cc             	mov    %edx,-0x34(%ebp)
    3a14:	8d 58 03             	lea    0x3(%eax),%ebx
    3a17:	8b 45 d0             	mov    -0x30(%ebp),%eax
    3a1a:	8d 44 06 fc          	lea    -0x4(%esi,%eax,1),%eax
    3a1e:	89 c2                	mov    %eax,%edx
    3a20:	31 c0                	xor    %eax,%eax
    3a22:	31 c9                	xor    %ecx,%ecx
    3a24:	8a 03                	mov    (%ebx),%al
    3a26:	8a 4b ff             	mov    -0x1(%ebx),%cl
    3a29:	c1 e0 08             	shl    $0x8,%eax
    3a2c:	83 c7 04             	add    $0x4,%edi
    3a2f:	01 c8                	add    %ecx,%eax
    3a31:	83 c3 02             	add    $0x2,%ebx
    3a34:	25 ff ff 00 00       	and    $0xffff,%eax
    3a39:	89 47 fc             	mov    %eax,-0x4(%edi)
    3a3c:	39 fa                	cmp    %edi,%edx
    3a3e:	75 e0                	jne    3a20 <usb_request_get_string+0x1b0>
    3a40:	8b 55 cc             	mov    -0x34(%ebp),%edx
    3a43:	8b 45 d0             	mov    -0x30(%ebp),%eax
    3a46:	83 ec 0c             	sub    $0xc,%esp
    3a49:	89 55 cc             	mov    %edx,-0x34(%ebp)
    3a4c:	c7 44 06 fc 00 00 00 	movl   $0x0,-0x4(%esi,%eax,1)
    3a53:	00 
    3a54:	56                   	push   %esi
    3a55:	e8 d6 bd 00 00       	call   f830 <wstr_to_astr@plt>
    3a5a:	83 c4 10             	add    $0x10,%esp
    3a5d:	8b 55 cc             	mov    -0x34(%ebp),%edx
    3a60:	85 c0                	test   %eax,%eax
    3a62:	74 34                	je     3a98 <usb_request_get_string+0x228>
    3a64:	8b 7d 14             	mov    0x14(%ebp),%edi
    3a67:	89 07                	mov    %eax,(%edi)
    3a69:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3a6c:	e9 33 ff ff ff       	jmp    39a4 <usb_request_get_string+0x134>
    3a71:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3a78:	ba fd ff ff ff       	mov    $0xfffffffd,%edx
    3a7d:	e9 1e ff ff ff       	jmp    39a0 <usb_request_get_string+0x130>
    3a82:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3a88:	ba f8 fe ff ff       	mov    $0xfffffef8,%edx
    3a8d:	e9 2c ff ff ff       	jmp    39be <usb_request_get_string+0x14e>
    3a92:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3a98:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3a9b:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
    3aa0:	e9 ff fe ff ff       	jmp    39a4 <usb_request_get_string+0x134>
    3aa5:	8d 76 00             	lea    0x0(%esi),%esi
    3aa8:	83 ec 0c             	sub    $0xc,%esp
    3aab:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3aae:	50                   	push   %eax
    3aaf:	e8 ec be 00 00       	call   f9a0 <free@plt>
    3ab4:	83 c4 10             	add    $0x10,%esp
    3ab7:	ba fd ff ff ff       	mov    $0xfffffffd,%edx
    3abc:	e9 df fe ff ff       	jmp    39a0 <usb_request_get_string+0x130>
    3ac1:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
    3ac6:	e9 d5 fe ff ff       	jmp    39a0 <usb_request_get_string+0x130>
    3acb:	ba f6 ff ff ff       	mov    $0xfffffff6,%edx
    3ad0:	e9 e9 fe ff ff       	jmp    39be <usb_request_get_string+0x14e>
    3ad5:	ba f6 ff ff ff       	mov    $0xfffffff6,%edx
    3ada:	e9 c1 fe ff ff       	jmp    39a0 <usb_request_get_string+0x130>
    3adf:	90                   	nop

00003ae0 <usb_request_clear_endpoint_halt>:
    3ae0:	55                   	push   %ebp
    3ae1:	89 e5                	mov    %esp,%ebp
    3ae3:	83 ec 18             	sub    $0x18,%esp
    3ae6:	8b 45 08             	mov    0x8(%ebp),%eax
    3ae9:	8b 55 0c             	mov    0xc(%ebp),%edx
    3aec:	85 c0                	test   %eax,%eax
    3aee:	74 30                	je     3b20 <usb_request_clear_endpoint_halt+0x40>
    3af0:	83 ec 0c             	sub    $0xc,%esp
    3af3:	66 89 55 f4          	mov    %dx,-0xc(%ebp)
    3af7:	8d 55 f0             	lea    -0x10(%ebp),%edx
    3afa:	c6 45 f0 02          	movb   $0x2,-0x10(%ebp)
    3afe:	6a 00                	push   $0x0
    3b00:	6a 00                	push   $0x0
    3b02:	6a 08                	push   $0x8
    3b04:	52                   	push   %edx
    3b05:	50                   	push   %eax
    3b06:	c6 45 f1 01          	movb   $0x1,-0xf(%ebp)
    3b0a:	66 c7 45 f2 00 00    	movw   $0x0,-0xe(%ebp)
    3b10:	66 c7 45 f6 00 00    	movw   $0x0,-0xa(%ebp)
    3b16:	e8 c5 e9 ff ff       	call   24e0 <usb_pipe_control_write>
    3b1b:	83 c4 20             	add    $0x20,%esp
    3b1e:	c9                   	leave  
    3b1f:	c3                   	ret    
    3b20:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    3b25:	c9                   	leave  
    3b26:	c3                   	ret    
    3b27:	89 f6                	mov    %esi,%esi
    3b29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00003b30 <usb_pipe_clear_halt>:
    3b30:	55                   	push   %ebp
    3b31:	89 e5                	mov    %esp,%ebp
    3b33:	83 ec 18             	sub    $0x18,%esp
    3b36:	8b 45 08             	mov    0x8(%ebp),%eax
    3b39:	8b 55 0c             	mov    0xc(%ebp),%edx
    3b3c:	85 c0                	test   %eax,%eax
    3b3e:	74 38                	je     3b78 <usb_pipe_clear_halt+0x48>
    3b40:	85 d2                	test   %edx,%edx
    3b42:	74 34                	je     3b78 <usb_pipe_clear_halt+0x48>
    3b44:	8b 12                	mov    (%edx),%edx
    3b46:	83 ec 0c             	sub    $0xc,%esp
    3b49:	66 89 55 f4          	mov    %dx,-0xc(%ebp)
    3b4d:	8d 55 f0             	lea    -0x10(%ebp),%edx
    3b50:	6a 00                	push   $0x0
    3b52:	6a 00                	push   $0x0
    3b54:	6a 08                	push   $0x8
    3b56:	52                   	push   %edx
    3b57:	50                   	push   %eax
    3b58:	c6 45 f0 02          	movb   $0x2,-0x10(%ebp)
    3b5c:	c6 45 f1 01          	movb   $0x1,-0xf(%ebp)
    3b60:	66 c7 45 f2 00 00    	movw   $0x0,-0xe(%ebp)
    3b66:	66 c7 45 f6 00 00    	movw   $0x0,-0xa(%ebp)
    3b6c:	e8 6f e9 ff ff       	call   24e0 <usb_pipe_control_write>
    3b71:	83 c4 20             	add    $0x20,%esp
    3b74:	c9                   	leave  
    3b75:	c3                   	ret    
    3b76:	66 90                	xchg   %ax,%ax
    3b78:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    3b7d:	c9                   	leave  
    3b7e:	c3                   	ret    
    3b7f:	90                   	nop

00003b80 <usb_request_get_endpoint_status>:
    3b80:	55                   	push   %ebp
    3b81:	89 e5                	mov    %esp,%ebp
    3b83:	53                   	push   %ebx
    3b84:	83 ec 14             	sub    $0x14,%esp
    3b87:	8b 45 08             	mov    0x8(%ebp),%eax
    3b8a:	8b 5d 10             	mov    0x10(%ebp),%ebx
    3b8d:	85 c0                	test   %eax,%eax
    3b8f:	74 57                	je     3be8 <usb_request_get_endpoint_status+0x68>
    3b91:	8b 55 0c             	mov    0xc(%ebp),%edx
    3b94:	c6 45 f0 82          	movb   $0x82,-0x10(%ebp)
    3b98:	c6 45 f1 00          	movb   $0x0,-0xf(%ebp)
    3b9c:	66 c7 45 f2 00 00    	movw   $0x0,-0xe(%ebp)
    3ba2:	8b 12                	mov    (%edx),%edx
    3ba4:	66 c7 45 f6 02 00    	movw   $0x2,-0xa(%ebp)
    3baa:	66 89 55 f4          	mov    %dx,-0xc(%ebp)
    3bae:	52                   	push   %edx
    3baf:	52                   	push   %edx
    3bb0:	8d 55 ec             	lea    -0x14(%ebp),%edx
    3bb3:	52                   	push   %edx
    3bb4:	8d 55 ea             	lea    -0x16(%ebp),%edx
    3bb7:	6a 02                	push   $0x2
    3bb9:	52                   	push   %edx
    3bba:	8d 55 f0             	lea    -0x10(%ebp),%edx
    3bbd:	6a 08                	push   $0x8
    3bbf:	52                   	push   %edx
    3bc0:	50                   	push   %eax
    3bc1:	e8 ea e7 ff ff       	call   23b0 <usb_pipe_control_read>
    3bc6:	83 c4 20             	add    $0x20,%esp
    3bc9:	85 c0                	test   %eax,%eax
    3bcb:	75 11                	jne    3bde <usb_request_get_endpoint_status+0x5e>
    3bcd:	83 7d ec 02          	cmpl   $0x2,-0x14(%ebp)
    3bd1:	75 25                	jne    3bf8 <usb_request_get_endpoint_status+0x78>
    3bd3:	66 8b 55 ea          	mov    -0x16(%ebp),%dx
    3bd7:	85 db                	test   %ebx,%ebx
    3bd9:	74 03                	je     3bde <usb_request_get_endpoint_status+0x5e>
    3bdb:	66 89 13             	mov    %dx,(%ebx)
    3bde:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    3be1:	c9                   	leave  
    3be2:	c3                   	ret    
    3be3:	90                   	nop
    3be4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3be8:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    3bed:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    3bf0:	c9                   	leave  
    3bf1:	c3                   	ret    
    3bf2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3bf8:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    3bfd:	eb df                	jmp    3bde <usb_request_get_endpoint_status+0x5e>
    3bff:	90                   	nop

00003c00 <usb_interface_count_alternates>:
    3c00:	55                   	push   %ebp
    3c01:	89 e5                	mov    %esp,%ebp
    3c03:	57                   	push   %edi
    3c04:	56                   	push   %esi
    3c05:	53                   	push   %ebx
    3c06:	83 ec 2c             	sub    $0x2c,%esp
    3c09:	8b 5d 08             	mov    0x8(%ebp),%ebx
    3c0c:	8a 55 10             	mov    0x10(%ebp),%dl
    3c0f:	8b 45 0c             	mov    0xc(%ebp),%eax
    3c12:	88 55 d3             	mov    %dl,-0x2d(%ebp)
    3c15:	85 db                	test   %ebx,%ebx
    3c17:	0f 84 7f 00 00 00    	je     3c9c <usb_interface_count_alternates+0x9c>
    3c1d:	85 c0                	test   %eax,%eax
    3c1f:	0f 84 89 00 00 00    	je     3cae <usb_interface_count_alternates+0xae>
    3c25:	8d 7d dc             	lea    -0x24(%ebp),%edi
    3c28:	56                   	push   %esi
    3c29:	8d 75 d8             	lea    -0x28(%ebp),%esi
    3c2c:	53                   	push   %ebx
    3c2d:	c7 45 d8 00 d8 00 00 	movl   $0xd800,-0x28(%ebp)
    3c34:	57                   	push   %edi
    3c35:	89 5d dc             	mov    %ebx,-0x24(%ebp)
    3c38:	56                   	push   %esi
    3c39:	89 45 e0             	mov    %eax,-0x20(%ebp)
    3c3c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    3c43:	e8 a8 02 00 00       	call   3ef0 <usb_dp_get_nested_descriptor>
    3c48:	83 c4 10             	add    $0x10,%esp
    3c4b:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
    3c52:	85 c0                	test   %eax,%eax
    3c54:	75 12                	jne    3c68 <usb_interface_count_alternates+0x68>
    3c56:	eb 39                	jmp    3c91 <usb_interface_count_alternates+0x91>
    3c58:	50                   	push   %eax
    3c59:	53                   	push   %ebx
    3c5a:	57                   	push   %edi
    3c5b:	56                   	push   %esi
    3c5c:	e8 ef 05 00 00       	call   4250 <usb_dp_get_sibling_descriptor>
    3c61:	83 c4 10             	add    $0x10,%esp
    3c64:	85 c0                	test   %eax,%eax
    3c66:	74 29                	je     3c91 <usb_interface_count_alternates+0x91>
    3c68:	80 78 01 04          	cmpb   $0x4,0x1(%eax)
    3c6c:	75 ea                	jne    3c58 <usb_interface_count_alternates+0x58>
    3c6e:	8a 4d d3             	mov    -0x2d(%ebp),%cl
    3c71:	31 d2                	xor    %edx,%edx
    3c73:	38 48 02             	cmp    %cl,0x2(%eax)
    3c76:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    3c79:	0f 94 c2             	sete   %dl
    3c7c:	01 d1                	add    %edx,%ecx
    3c7e:	50                   	push   %eax
    3c7f:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    3c82:	53                   	push   %ebx
    3c83:	57                   	push   %edi
    3c84:	56                   	push   %esi
    3c85:	e8 c6 05 00 00       	call   4250 <usb_dp_get_sibling_descriptor>
    3c8a:	83 c4 10             	add    $0x10,%esp
    3c8d:	85 c0                	test   %eax,%eax
    3c8f:	75 d7                	jne    3c68 <usb_interface_count_alternates+0x68>
    3c91:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3c94:	8d 65 f4             	lea    -0xc(%ebp),%esp
    3c97:	5b                   	pop    %ebx
    3c98:	5e                   	pop    %esi
    3c99:	5f                   	pop    %edi
    3c9a:	5d                   	pop    %ebp
    3c9b:	c3                   	ret    
    3c9c:	50                   	push   %eax
    3c9d:	6a 34                	push   $0x34
    3c9f:	68 70 d7 00 00       	push   $0xd770
    3ca4:	68 7f d7 00 00       	push   $0xd77f
    3ca9:	e8 22 ba 00 00       	call   f6d0 <assert_abort@plt>
    3cae:	57                   	push   %edi
    3caf:	6a 35                	push   $0x35
    3cb1:	68 70 d7 00 00       	push   $0xd770
    3cb6:	68 94 d7 00 00       	push   $0xd794
    3cbb:	e8 10 ba 00 00       	call   f6d0 <assert_abort@plt>

00003cc0 <usb_alternate_interfaces_init>:
    3cc0:	55                   	push   %ebp
    3cc1:	89 e5                	mov    %esp,%ebp
    3cc3:	57                   	push   %edi
    3cc4:	56                   	push   %esi
    3cc5:	53                   	push   %ebx
    3cc6:	83 ec 2c             	sub    $0x2c,%esp
    3cc9:	8b 45 08             	mov    0x8(%ebp),%eax
    3ccc:	8b 7d 0c             	mov    0xc(%ebp),%edi
    3ccf:	85 c0                	test   %eax,%eax
    3cd1:	0f 84 cd 01 00 00    	je     3ea4 <usb_alternate_interfaces_init+0x1e4>
    3cd7:	85 ff                	test   %edi,%edi
    3cd9:	0f 84 b3 01 00 00    	je     3e92 <usb_alternate_interfaces_init+0x1d2>
    3cdf:	8b 45 10             	mov    0x10(%ebp),%eax
    3ce2:	85 c0                	test   %eax,%eax
    3ce4:	0f 84 96 01 00 00    	je     3e80 <usb_alternate_interfaces_init+0x1c0>
    3cea:	8b 45 08             	mov    0x8(%ebp),%eax
    3ced:	8b 75 14             	mov    0x14(%ebp),%esi
    3cf0:	85 f6                	test   %esi,%esi
    3cf2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    3cf8:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
    3cff:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
    3d06:	0f 88 54 01 00 00    	js     3e60 <usb_alternate_interfaces_init+0x1a0>
    3d0c:	8a 45 14             	mov    0x14(%ebp),%al
    3d0f:	8d 75 dc             	lea    -0x24(%ebp),%esi
    3d12:	53                   	push   %ebx
    3d13:	88 45 d4             	mov    %al,-0x2c(%ebp)
    3d16:	8d 5d d8             	lea    -0x28(%ebp),%ebx
    3d19:	8b 45 10             	mov    0x10(%ebp),%eax
    3d1c:	57                   	push   %edi
    3d1d:	c7 45 d8 00 d8 00 00 	movl   $0xd800,-0x28(%ebp)
    3d24:	56                   	push   %esi
    3d25:	89 7d dc             	mov    %edi,-0x24(%ebp)
    3d28:	53                   	push   %ebx
    3d29:	89 45 e0             	mov    %eax,-0x20(%ebp)
    3d2c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    3d33:	e8 b8 01 00 00       	call   3ef0 <usb_dp_get_nested_descriptor>
    3d38:	83 c4 10             	add    $0x10,%esp
    3d3b:	85 c0                	test   %eax,%eax
    3d3d:	0f 84 31 01 00 00    	je     3e74 <usb_alternate_interfaces_init+0x1b4>
    3d43:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
    3d4a:	eb 14                	jmp    3d60 <usb_alternate_interfaces_init+0xa0>
    3d4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3d50:	50                   	push   %eax
    3d51:	57                   	push   %edi
    3d52:	56                   	push   %esi
    3d53:	53                   	push   %ebx
    3d54:	e8 f7 04 00 00       	call   4250 <usb_dp_get_sibling_descriptor>
    3d59:	83 c4 10             	add    $0x10,%esp
    3d5c:	85 c0                	test   %eax,%eax
    3d5e:	74 29                	je     3d89 <usb_alternate_interfaces_init+0xc9>
    3d60:	80 78 01 04          	cmpb   $0x4,0x1(%eax)
    3d64:	75 ea                	jne    3d50 <usb_alternate_interfaces_init+0x90>
    3d66:	8a 4d d4             	mov    -0x2c(%ebp),%cl
    3d69:	31 d2                	xor    %edx,%edx
    3d6b:	3a 48 02             	cmp    0x2(%eax),%cl
    3d6e:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    3d71:	0f 94 c2             	sete   %dl
    3d74:	01 d1                	add    %edx,%ecx
    3d76:	50                   	push   %eax
    3d77:	89 4d d0             	mov    %ecx,-0x30(%ebp)
    3d7a:	57                   	push   %edi
    3d7b:	56                   	push   %esi
    3d7c:	53                   	push   %ebx
    3d7d:	e8 ce 04 00 00       	call   4250 <usb_dp_get_sibling_descriptor>
    3d82:	83 c4 10             	add    $0x10,%esp
    3d85:	85 c0                	test   %eax,%eax
    3d87:	75 d7                	jne    3d60 <usb_alternate_interfaces_init+0xa0>
    3d89:	8b 45 d0             	mov    -0x30(%ebp),%eax
    3d8c:	85 c0                	test   %eax,%eax
    3d8e:	0f 84 e0 00 00 00    	je     3e74 <usb_alternate_interfaces_init+0x1b4>
    3d94:	52                   	push   %edx
    3d95:	52                   	push   %edx
    3d96:	6a 0c                	push   $0xc
    3d98:	50                   	push   %eax
    3d99:	e8 52 b9 00 00       	call   f6f0 <calloc@plt>
    3d9e:	83 c4 10             	add    $0x10,%esp
    3da1:	89 45 cc             	mov    %eax,-0x34(%ebp)
    3da4:	85 c0                	test   %eax,%eax
    3da6:	0f 84 cd 00 00 00    	je     3e79 <usb_alternate_interfaces_init+0x1b9>
    3dac:	8b 45 10             	mov    0x10(%ebp),%eax
    3daf:	c7 45 d8 00 d8 00 00 	movl   $0xd800,-0x28(%ebp)
    3db6:	89 45 e0             	mov    %eax,-0x20(%ebp)
    3db9:	89 7d dc             	mov    %edi,-0x24(%ebp)
    3dbc:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    3dc3:	50                   	push   %eax
    3dc4:	57                   	push   %edi
    3dc5:	56                   	push   %esi
    3dc6:	53                   	push   %ebx
    3dc7:	e8 24 01 00 00       	call   3ef0 <usb_dp_get_nested_descriptor>
    3dcc:	83 c4 10             	add    $0x10,%esp
    3dcf:	85 c0                	test   %eax,%eax
    3dd1:	74 75                	je     3e48 <usb_alternate_interfaces_init+0x188>
    3dd3:	8b 55 d0             	mov    -0x30(%ebp),%edx
    3dd6:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    3dd9:	8d 14 52             	lea    (%edx,%edx,2),%edx
    3ddc:	8d 14 91             	lea    (%ecx,%edx,4),%edx
    3ddf:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    3de2:	39 d1                	cmp    %edx,%ecx
    3de4:	73 62                	jae    3e48 <usb_alternate_interfaces_init+0x188>
    3de6:	89 cf                	mov    %ecx,%edi
    3de8:	eb 21                	jmp    3e0b <usb_alternate_interfaces_init+0x14b>
    3dea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3df0:	50                   	push   %eax
    3df1:	8b 45 dc             	mov    -0x24(%ebp),%eax
    3df4:	50                   	push   %eax
    3df5:	56                   	push   %esi
    3df6:	53                   	push   %ebx
    3df7:	e8 54 04 00 00       	call   4250 <usb_dp_get_sibling_descriptor>
    3dfc:	83 c7 0c             	add    $0xc,%edi
    3dff:	83 c4 10             	add    $0x10,%esp
    3e02:	85 c0                	test   %eax,%eax
    3e04:	74 42                	je     3e48 <usb_alternate_interfaces_init+0x188>
    3e06:	3b 7d d4             	cmp    -0x2c(%ebp),%edi
    3e09:	73 3d                	jae    3e48 <usb_alternate_interfaces_init+0x188>
    3e0b:	80 78 01 04          	cmpb   $0x4,0x1(%eax)
    3e0f:	75 df                	jne    3df0 <usb_alternate_interfaces_init+0x130>
    3e11:	31 d2                	xor    %edx,%edx
    3e13:	8a 50 02             	mov    0x2(%eax),%dl
    3e16:	39 55 14             	cmp    %edx,0x14(%ebp)
    3e19:	75 d5                	jne    3df0 <usb_alternate_interfaces_init+0x130>
    3e1b:	8d 50 09             	lea    0x9(%eax),%edx
    3e1e:	89 07                	mov    %eax,(%edi)
    3e20:	89 57 04             	mov    %edx,0x4(%edi)
    3e23:	50                   	push   %eax
    3e24:	8b 45 dc             	mov    -0x24(%ebp),%eax
    3e27:	50                   	push   %eax
    3e28:	56                   	push   %esi
    3e29:	53                   	push   %ebx
    3e2a:	e8 21 04 00 00       	call   4250 <usb_dp_get_sibling_descriptor>
    3e2f:	83 c4 10             	add    $0x10,%esp
    3e32:	89 c2                	mov    %eax,%edx
    3e34:	85 c0                	test   %eax,%eax
    3e36:	74 32                	je     3e6a <usb_alternate_interfaces_init+0x1aa>
    3e38:	8b 4f 04             	mov    0x4(%edi),%ecx
    3e3b:	83 c7 0c             	add    $0xc,%edi
    3e3e:	29 ca                	sub    %ecx,%edx
    3e40:	89 57 fc             	mov    %edx,-0x4(%edi)
    3e43:	85 c0                	test   %eax,%eax
    3e45:	75 bf                	jne    3e06 <usb_alternate_interfaces_init+0x146>
    3e47:	90                   	nop
    3e48:	8b 45 08             	mov    0x8(%ebp),%eax
    3e4b:	8b 5d cc             	mov    -0x34(%ebp),%ebx
    3e4e:	8b 75 d0             	mov    -0x30(%ebp),%esi
    3e51:	89 18                	mov    %ebx,(%eax)
    3e53:	89 70 04             	mov    %esi,0x4(%eax)
    3e56:	31 c0                	xor    %eax,%eax
    3e58:	8d 65 f4             	lea    -0xc(%ebp),%esp
    3e5b:	5b                   	pop    %ebx
    3e5c:	5e                   	pop    %esi
    3e5d:	5f                   	pop    %edi
    3e5e:	5d                   	pop    %ebp
    3e5f:	c3                   	ret    
    3e60:	8d 65 f4             	lea    -0xc(%ebp),%esp
    3e63:	31 c0                	xor    %eax,%eax
    3e65:	5b                   	pop    %ebx
    3e66:	5e                   	pop    %esi
    3e67:	5f                   	pop    %edi
    3e68:	5d                   	pop    %ebp
    3e69:	c3                   	ret    
    3e6a:	8b 55 e0             	mov    -0x20(%ebp),%edx
    3e6d:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    3e70:	01 ca                	add    %ecx,%edx
    3e72:	eb c4                	jmp    3e38 <usb_alternate_interfaces_init+0x178>
    3e74:	83 c8 ff             	or     $0xffffffff,%eax
    3e77:	eb df                	jmp    3e58 <usb_alternate_interfaces_init+0x198>
    3e79:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    3e7e:	eb d8                	jmp    3e58 <usb_alternate_interfaces_init+0x198>
    3e80:	57                   	push   %edi
    3e81:	6a 5e                	push   $0x5e
    3e83:	68 70 d7 00 00       	push   $0xd770
    3e88:	68 94 d7 00 00       	push   $0xd794
    3e8d:	e8 3e b8 00 00       	call   f6d0 <assert_abort@plt>
    3e92:	50                   	push   %eax
    3e93:	6a 5d                	push   $0x5d
    3e95:	68 70 d7 00 00       	push   $0xd770
    3e9a:	68 7f d7 00 00       	push   $0xd77f
    3e9f:	e8 2c b8 00 00       	call   f6d0 <assert_abort@plt>
    3ea4:	50                   	push   %eax
    3ea5:	6a 5c                	push   $0x5c
    3ea7:	68 70 d7 00 00       	push   $0xd770
    3eac:	68 aa d7 00 00       	push   $0xd7aa
    3eb1:	e8 1a b8 00 00       	call   f6d0 <assert_abort@plt>
    3eb6:	8d 76 00             	lea    0x0(%esi),%esi
    3eb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00003ec0 <usb_alternate_interfaces_deinit>:
    3ec0:	55                   	push   %ebp
    3ec1:	89 e5                	mov    %esp,%ebp
    3ec3:	53                   	push   %ebx
    3ec4:	52                   	push   %edx
    3ec5:	8b 5d 08             	mov    0x8(%ebp),%ebx
    3ec8:	85 db                	test   %ebx,%ebx
    3eca:	74 14                	je     3ee0 <usb_alternate_interfaces_deinit+0x20>
    3ecc:	83 ec 0c             	sub    $0xc,%esp
    3ecf:	8b 03                	mov    (%ebx),%eax
    3ed1:	50                   	push   %eax
    3ed2:	e8 c9 ba 00 00       	call   f9a0 <free@plt>
    3ed7:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
    3edd:	83 c4 10             	add    $0x10,%esp
    3ee0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    3ee3:	c9                   	leave  
    3ee4:	c3                   	ret    
    3ee5:	66 90                	xchg   %ax,%ax
    3ee7:	66 90                	xchg   %ax,%ax
    3ee9:	66 90                	xchg   %ax,%ax
    3eeb:	66 90                	xchg   %ax,%ax
    3eed:	66 90                	xchg   %ax,%ax
    3eef:	90                   	nop

00003ef0 <usb_dp_get_nested_descriptor>:
    3ef0:	55                   	push   %ebp
    3ef1:	89 e5                	mov    %esp,%ebp
    3ef3:	57                   	push   %edi
    3ef4:	56                   	push   %esi
    3ef5:	53                   	push   %ebx
    3ef6:	8b 55 10             	mov    0x10(%ebp),%edx
    3ef9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    3efc:	85 d2                	test   %edx,%edx
    3efe:	0f 84 9c 00 00 00    	je     3fa0 <usb_dp_get_nested_descriptor+0xb0>
    3f04:	8b 0b                	mov    (%ebx),%ecx
    3f06:	31 c0                	xor    %eax,%eax
    3f08:	39 ca                	cmp    %ecx,%edx
    3f0a:	0f 82 88 00 00 00    	jb     3f98 <usb_dp_get_nested_descriptor+0xa8>
    3f10:	89 d6                	mov    %edx,%esi
    3f12:	8b 5b 04             	mov    0x4(%ebx),%ebx
    3f15:	29 ce                	sub    %ecx,%esi
    3f17:	39 de                	cmp    %ebx,%esi
    3f19:	73 7d                	jae    3f98 <usb_dp_get_nested_descriptor+0xa8>
    3f1b:	31 c0                	xor    %eax,%eax
    3f1d:	8a 02                	mov    (%edx),%al
    3f1f:	01 d0                	add    %edx,%eax
    3f21:	74 75                	je     3f98 <usb_dp_get_nested_descriptor+0xa8>
    3f23:	39 c1                	cmp    %eax,%ecx
    3f25:	77 79                	ja     3fa0 <usb_dp_get_nested_descriptor+0xb0>
    3f27:	89 c6                	mov    %eax,%esi
    3f29:	29 ce                	sub    %ecx,%esi
    3f2b:	39 f3                	cmp    %esi,%ebx
    3f2d:	76 71                	jbe    3fa0 <usb_dp_get_nested_descriptor+0xb0>
    3f2f:	89 d7                	mov    %edx,%edi
    3f31:	47                   	inc    %edi
    3f32:	0f 84 8c 00 00 00    	je     3fc4 <usb_dp_get_nested_descriptor+0xd4>
    3f38:	83 ce ff             	or     $0xffffffff,%esi
    3f3b:	39 f9                	cmp    %edi,%ecx
    3f3d:	77 09                	ja     3f48 <usb_dp_get_nested_descriptor+0x58>
    3f3f:	29 cf                	sub    %ecx,%edi
    3f41:	39 fb                	cmp    %edi,%ebx
    3f43:	77 63                	ja     3fa8 <usb_dp_get_nested_descriptor+0xb8>
    3f45:	8d 76 00             	lea    0x0(%esi),%esi
    3f48:	89 c2                	mov    %eax,%edx
    3f4a:	83 cf ff             	or     $0xffffffff,%edi
    3f4d:	42                   	inc    %edx
    3f4e:	74 10                	je     3f60 <usb_dp_get_nested_descriptor+0x70>
    3f50:	39 d1                	cmp    %edx,%ecx
    3f52:	77 0c                	ja     3f60 <usb_dp_get_nested_descriptor+0x70>
    3f54:	29 ca                	sub    %ecx,%edx
    3f56:	39 d3                	cmp    %edx,%ebx
    3f58:	77 5e                	ja     3fb8 <usb_dp_get_nested_descriptor+0xc8>
    3f5a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3f60:	8b 55 08             	mov    0x8(%ebp),%edx
    3f63:	8b 12                	mov    (%edx),%edx
    3f65:	8b 0a                	mov    (%edx),%ecx
    3f67:	85 c9                	test   %ecx,%ecx
    3f69:	7e 35                	jle    3fa0 <usb_dp_get_nested_descriptor+0xb0>
    3f6b:	8b 5a 04             	mov    0x4(%edx),%ebx
    3f6e:	85 db                	test   %ebx,%ebx
    3f70:	7e 2e                	jle    3fa0 <usb_dp_get_nested_descriptor+0xb0>
    3f72:	39 cf                	cmp    %ecx,%edi
    3f74:	75 0a                	jne    3f80 <usb_dp_get_nested_descriptor+0x90>
    3f76:	39 de                	cmp    %ebx,%esi
    3f78:	74 1e                	je     3f98 <usb_dp_get_nested_descriptor+0xa8>
    3f7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3f80:	83 c2 08             	add    $0x8,%edx
    3f83:	8b 0a                	mov    (%edx),%ecx
    3f85:	85 c9                	test   %ecx,%ecx
    3f87:	7e 17                	jle    3fa0 <usb_dp_get_nested_descriptor+0xb0>
    3f89:	8b 5a 04             	mov    0x4(%edx),%ebx
    3f8c:	85 db                	test   %ebx,%ebx
    3f8e:	7e 10                	jle    3fa0 <usb_dp_get_nested_descriptor+0xb0>
    3f90:	39 f9                	cmp    %edi,%ecx
    3f92:	75 ec                	jne    3f80 <usb_dp_get_nested_descriptor+0x90>
    3f94:	39 f3                	cmp    %esi,%ebx
    3f96:	75 e8                	jne    3f80 <usb_dp_get_nested_descriptor+0x90>
    3f98:	5b                   	pop    %ebx
    3f99:	5e                   	pop    %esi
    3f9a:	5f                   	pop    %edi
    3f9b:	5d                   	pop    %ebp
    3f9c:	c3                   	ret    
    3f9d:	8d 76 00             	lea    0x0(%esi),%esi
    3fa0:	5b                   	pop    %ebx
    3fa1:	31 c0                	xor    %eax,%eax
    3fa3:	5e                   	pop    %esi
    3fa4:	5f                   	pop    %edi
    3fa5:	5d                   	pop    %ebp
    3fa6:	c3                   	ret    
    3fa7:	90                   	nop
    3fa8:	0f b6 72 01          	movzbl 0x1(%edx),%esi
    3fac:	81 e6 ff 00 00 00    	and    $0xff,%esi
    3fb2:	eb 94                	jmp    3f48 <usb_dp_get_nested_descriptor+0x58>
    3fb4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3fb8:	0f b6 78 01          	movzbl 0x1(%eax),%edi
    3fbc:	81 e7 ff 00 00 00    	and    $0xff,%edi
    3fc2:	eb 9c                	jmp    3f60 <usb_dp_get_nested_descriptor+0x70>
    3fc4:	83 ce ff             	or     $0xffffffff,%esi
    3fc7:	e9 7c ff ff ff       	jmp    3f48 <usb_dp_get_nested_descriptor+0x58>
    3fcc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00003fd0 <skip_nested_descriptors>:
    3fd0:	55                   	push   %ebp
    3fd1:	89 e5                	mov    %esp,%ebp
    3fd3:	57                   	push   %edi
    3fd4:	56                   	push   %esi
    3fd5:	53                   	push   %ebx
    3fd6:	83 ec 2c             	sub    $0x2c,%esp
    3fd9:	89 d7                	mov    %edx,%edi
    3fdb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    3fde:	89 4d e0             	mov    %ecx,-0x20(%ebp)
    3fe1:	51                   	push   %ecx
    3fe2:	52                   	push   %edx
    3fe3:	50                   	push   %eax
    3fe4:	e8 07 ff ff ff       	call   3ef0 <usb_dp_get_nested_descriptor>
    3fe9:	83 c4 0c             	add    $0xc,%esp
    3fec:	85 c0                	test   %eax,%eax
    3fee:	0f 84 e6 00 00 00    	je     40da <skip_nested_descriptors+0x10a>
    3ff4:	8b 75 d4             	mov    -0x2c(%ebp),%esi
    3ff7:	89 c1                	mov    %eax,%ecx
    3ff9:	89 fa                	mov    %edi,%edx
    3ffb:	89 f0                	mov    %esi,%eax
    3ffd:	e8 ce ff ff ff       	call   3fd0 <skip_nested_descriptors>
    4002:	8b 0e                	mov    (%esi),%ecx
    4004:	89 4d dc             	mov    %ecx,-0x24(%ebp)
    4007:	8b 09                	mov    (%ecx),%ecx
    4009:	89 4d d8             	mov    %ecx,-0x28(%ebp)
    400c:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    400f:	41                   	inc    %ecx
    4010:	8b 55 e0             	mov    -0x20(%ebp),%edx
    4013:	89 4d d0             	mov    %ecx,-0x30(%ebp)
    4016:	85 d2                	test   %edx,%edx
    4018:	0f 84 9a 00 00 00    	je     40b8 <skip_nested_descriptors+0xe8>
    401e:	66 90                	xchg   %ax,%ax
    4020:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    4023:	85 c9                	test   %ecx,%ecx
    4025:	0f 84 8d 00 00 00    	je     40b8 <skip_nested_descriptors+0xe8>
    402b:	8b 17                	mov    (%edi),%edx
    402d:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
    4034:	39 d1                	cmp    %edx,%ecx
    4036:	72 12                	jb     404a <skip_nested_descriptors+0x7a>
    4038:	29 d1                	sub    %edx,%ecx
    403a:	3b 4f 04             	cmp    0x4(%edi),%ecx
    403d:	73 0b                	jae    404a <skip_nested_descriptors+0x7a>
    403f:	8b 75 e0             	mov    -0x20(%ebp),%esi
    4042:	31 c9                	xor    %ecx,%ecx
    4044:	8a 4e 01             	mov    0x1(%esi),%cl
    4047:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
    404a:	85 c0                	test   %eax,%eax
    404c:	74 7a                	je     40c8 <skip_nested_descriptors+0xf8>
    404e:	89 c2                	mov    %eax,%edx
    4050:	42                   	inc    %edx
    4051:	74 75                	je     40c8 <skip_nested_descriptors+0xf8>
    4053:	8b 1f                	mov    (%edi),%ebx
    4055:	83 c9 ff             	or     $0xffffffff,%ecx
    4058:	39 da                	cmp    %ebx,%edx
    405a:	72 0c                	jb     4068 <skip_nested_descriptors+0x98>
    405c:	29 da                	sub    %ebx,%edx
    405e:	3b 57 04             	cmp    0x4(%edi),%edx
    4061:	73 05                	jae    4068 <skip_nested_descriptors+0x98>
    4063:	31 c9                	xor    %ecx,%ecx
    4065:	8a 48 01             	mov    0x1(%eax),%cl
    4068:	8b 75 d8             	mov    -0x28(%ebp),%esi
    406b:	85 f6                	test   %esi,%esi
    406d:	7e 63                	jle    40d2 <skip_nested_descriptors+0x102>
    406f:	8b 5d dc             	mov    -0x24(%ebp),%ebx
    4072:	8b 53 04             	mov    0x4(%ebx),%edx
    4075:	85 d2                	test   %edx,%edx
    4077:	7e 59                	jle    40d2 <skip_nested_descriptors+0x102>
    4079:	39 ce                	cmp    %ecx,%esi
    407b:	75 05                	jne    4082 <skip_nested_descriptors+0xb2>
    407d:	39 55 e4             	cmp    %edx,-0x1c(%ebp)
    4080:	74 1f                	je     40a1 <skip_nested_descriptors+0xd1>
    4082:	8b 55 dc             	mov    -0x24(%ebp),%edx
    4085:	8d 76 00             	lea    0x0(%esi),%esi
    4088:	83 c2 08             	add    $0x8,%edx
    408b:	8b 1a                	mov    (%edx),%ebx
    408d:	85 db                	test   %ebx,%ebx
    408f:	7e 41                	jle    40d2 <skip_nested_descriptors+0x102>
    4091:	8b 72 04             	mov    0x4(%edx),%esi
    4094:	85 f6                	test   %esi,%esi
    4096:	7e 3a                	jle    40d2 <skip_nested_descriptors+0x102>
    4098:	39 cb                	cmp    %ecx,%ebx
    409a:	75 ec                	jne    4088 <skip_nested_descriptors+0xb8>
    409c:	3b 75 e4             	cmp    -0x1c(%ebp),%esi
    409f:	75 e7                	jne    4088 <skip_nested_descriptors+0xb8>
    40a1:	89 c1                	mov    %eax,%ecx
    40a3:	89 fa                	mov    %edi,%edx
    40a5:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    40a8:	e8 23 ff ff ff       	call   3fd0 <skip_nested_descriptors>
    40ad:	8b 55 e0             	mov    -0x20(%ebp),%edx
    40b0:	85 d2                	test   %edx,%edx
    40b2:	0f 85 68 ff ff ff    	jne    4020 <skip_nested_descriptors+0x50>
    40b8:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
    40bf:	85 c0                	test   %eax,%eax
    40c1:	75 8b                	jne    404e <skip_nested_descriptors+0x7e>
    40c3:	90                   	nop
    40c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    40c8:	8b 75 d8             	mov    -0x28(%ebp),%esi
    40cb:	83 c9 ff             	or     $0xffffffff,%ecx
    40ce:	85 f6                	test   %esi,%esi
    40d0:	7f 9d                	jg     406f <skip_nested_descriptors+0x9f>
    40d2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    40d5:	5b                   	pop    %ebx
    40d6:	5e                   	pop    %esi
    40d7:	5f                   	pop    %edi
    40d8:	5d                   	pop    %ebp
    40d9:	c3                   	ret    
    40da:	8b 75 e0             	mov    -0x20(%ebp),%esi
    40dd:	85 f6                	test   %esi,%esi
    40df:	74 29                	je     410a <skip_nested_descriptors+0x13a>
    40e1:	8b 0f                	mov    (%edi),%ecx
    40e3:	39 ce                	cmp    %ecx,%esi
    40e5:	72 23                	jb     410a <skip_nested_descriptors+0x13a>
    40e7:	89 f2                	mov    %esi,%edx
    40e9:	8b 5f 04             	mov    0x4(%edi),%ebx
    40ec:	29 ca                	sub    %ecx,%edx
    40ee:	39 da                	cmp    %ebx,%edx
    40f0:	73 18                	jae    410a <skip_nested_descriptors+0x13a>
    40f2:	31 d2                	xor    %edx,%edx
    40f4:	8a 16                	mov    (%esi),%dl
    40f6:	01 f2                	add    %esi,%edx
    40f8:	74 d8                	je     40d2 <skip_nested_descriptors+0x102>
    40fa:	39 d1                	cmp    %edx,%ecx
    40fc:	77 d4                	ja     40d2 <skip_nested_descriptors+0x102>
    40fe:	89 d7                	mov    %edx,%edi
    4100:	29 cf                	sub    %ecx,%edi
    4102:	39 fb                	cmp    %edi,%ebx
    4104:	76 cc                	jbe    40d2 <skip_nested_descriptors+0x102>
    4106:	89 d0                	mov    %edx,%eax
    4108:	eb c8                	jmp    40d2 <skip_nested_descriptors+0x102>
    410a:	50                   	push   %eax
    410b:	6a 6a                	push   $0x6a
    410d:	68 bd d7 00 00       	push   $0xd7bd
    4112:	68 c8 d7 00 00       	push   $0xd7c8
    4117:	e8 b4 b5 00 00       	call   f6d0 <assert_abort@plt>
    411c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004120 <usb_dp_browse_simple_internal>:
    4120:	55                   	push   %ebp
    4121:	89 e5                	mov    %esp,%ebp
    4123:	57                   	push   %edi
    4124:	56                   	push   %esi
    4125:	53                   	push   %ebx
    4126:	83 ec 2c             	sub    $0x2c,%esp
    4129:	85 c9                	test   %ecx,%ecx
    412b:	8b 75 08             	mov    0x8(%ebp),%esi
    412e:	74 5e                	je     418e <usb_dp_browse_simple_internal+0x6e>
    4130:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    4133:	50                   	push   %eax
    4134:	8b 45 10             	mov    0x10(%ebp),%eax
    4137:	89 cf                	mov    %ecx,%edi
    4139:	50                   	push   %eax
    413a:	56                   	push   %esi
    413b:	51                   	push   %ecx
    413c:	89 d3                	mov    %edx,%ebx
    413e:	89 4d d8             	mov    %ecx,-0x28(%ebp)
    4141:	ff 55 0c             	call   *0xc(%ebp)
    4144:	83 c4 0c             	add    $0xc,%esp
    4147:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    414a:	89 5d e0             	mov    %ebx,-0x20(%ebp)
    414d:	57                   	push   %edi
    414e:	53                   	push   %ebx
    414f:	50                   	push   %eax
    4150:	e8 9b fd ff ff       	call   3ef0 <usb_dp_get_nested_descriptor>
    4155:	89 c3                	mov    %eax,%ebx
    4157:	8d 46 01             	lea    0x1(%esi),%eax
    415a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    415d:	89 f8                	mov    %edi,%eax
    415f:	40                   	inc    %eax
    4160:	83 c4 10             	add    $0x10,%esp
    4163:	89 45 d0             	mov    %eax,-0x30(%ebp)
    4166:	8b 7d e0             	mov    -0x20(%ebp),%edi
    4169:	8b 55 10             	mov    0x10(%ebp),%edx
    416c:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    416f:	8b 75 d4             	mov    -0x2c(%ebp),%esi
    4172:	50                   	push   %eax
    4173:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4176:	52                   	push   %edx
    4177:	89 fa                	mov    %edi,%edx
    4179:	51                   	push   %ecx
    417a:	89 d9                	mov    %ebx,%ecx
    417c:	56                   	push   %esi
    417d:	e8 9e ff ff ff       	call   4120 <usb_dp_browse_simple_internal>
    4182:	8b 37                	mov    (%edi),%esi
    4184:	8b 45 d8             	mov    -0x28(%ebp),%eax
    4187:	83 c4 10             	add    $0x10,%esp
    418a:	39 f0                	cmp    %esi,%eax
    418c:	73 0a                	jae    4198 <usb_dp_browse_simple_internal+0x78>
    418e:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4191:	5b                   	pop    %ebx
    4192:	5e                   	pop    %esi
    4193:	5f                   	pop    %edi
    4194:	5d                   	pop    %ebp
    4195:	c3                   	ret    
    4196:	66 90                	xchg   %ax,%ax
    4198:	8b 4f 04             	mov    0x4(%edi),%ecx
    419b:	29 f0                	sub    %esi,%eax
    419d:	89 4d dc             	mov    %ecx,-0x24(%ebp)
    41a0:	39 c8                	cmp    %ecx,%eax
    41a2:	73 ea                	jae    418e <usb_dp_browse_simple_internal+0x6e>
    41a4:	85 db                	test   %ebx,%ebx
    41a6:	74 e6                	je     418e <usb_dp_browse_simple_internal+0x6e>
    41a8:	39 f3                	cmp    %esi,%ebx
    41aa:	72 e2                	jb     418e <usb_dp_browse_simple_internal+0x6e>
    41ac:	89 d8                	mov    %ebx,%eax
    41ae:	29 f0                	sub    %esi,%eax
    41b0:	39 c1                	cmp    %eax,%ecx
    41b2:	76 da                	jbe    418e <usb_dp_browse_simple_internal+0x6e>
    41b4:	89 d9                	mov    %ebx,%ecx
    41b6:	89 fa                	mov    %edi,%edx
    41b8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    41bb:	e8 10 fe ff ff       	call   3fd0 <skip_nested_descriptors>
    41c0:	89 c3                	mov    %eax,%ebx
    41c2:	85 c0                	test   %eax,%eax
    41c4:	74 c8                	je     418e <usb_dp_browse_simple_internal+0x6e>
    41c6:	8b 45 d0             	mov    -0x30(%ebp),%eax
    41c9:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
    41d0:	85 c0                	test   %eax,%eax
    41d2:	74 16                	je     41ea <usb_dp_browse_simple_internal+0xca>
    41d4:	39 c6                	cmp    %eax,%esi
    41d6:	77 12                	ja     41ea <usb_dp_browse_simple_internal+0xca>
    41d8:	29 f0                	sub    %esi,%eax
    41da:	39 45 dc             	cmp    %eax,-0x24(%ebp)
    41dd:	76 0b                	jbe    41ea <usb_dp_browse_simple_internal+0xca>
    41df:	8b 4d d8             	mov    -0x28(%ebp),%ecx
    41e2:	31 c0                	xor    %eax,%eax
    41e4:	8a 41 01             	mov    0x1(%ecx),%al
    41e7:	89 45 e0             	mov    %eax,-0x20(%ebp)
    41ea:	89 d8                	mov    %ebx,%eax
    41ec:	83 c9 ff             	or     $0xffffffff,%ecx
    41ef:	40                   	inc    %eax
    41f0:	74 10                	je     4202 <usb_dp_browse_simple_internal+0xe2>
    41f2:	39 c6                	cmp    %eax,%esi
    41f4:	77 0c                	ja     4202 <usb_dp_browse_simple_internal+0xe2>
    41f6:	29 f0                	sub    %esi,%eax
    41f8:	39 45 dc             	cmp    %eax,-0x24(%ebp)
    41fb:	76 05                	jbe    4202 <usb_dp_browse_simple_internal+0xe2>
    41fd:	31 c9                	xor    %ecx,%ecx
    41ff:	8a 4b 01             	mov    0x1(%ebx),%cl
    4202:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4205:	8b 00                	mov    (%eax),%eax
    4207:	8b 10                	mov    (%eax),%edx
    4209:	85 d2                	test   %edx,%edx
    420b:	7e 81                	jle    418e <usb_dp_browse_simple_internal+0x6e>
    420d:	8b 70 04             	mov    0x4(%eax),%esi
    4210:	85 f6                	test   %esi,%esi
    4212:	0f 8e 76 ff ff ff    	jle    418e <usb_dp_browse_simple_internal+0x6e>
    4218:	39 ca                	cmp    %ecx,%edx
    421a:	75 0c                	jne    4228 <usb_dp_browse_simple_internal+0x108>
    421c:	39 75 e0             	cmp    %esi,-0x20(%ebp)
    421f:	0f 84 44 ff ff ff    	je     4169 <usb_dp_browse_simple_internal+0x49>
    4225:	8d 76 00             	lea    0x0(%esi),%esi
    4228:	83 c0 08             	add    $0x8,%eax
    422b:	8b 10                	mov    (%eax),%edx
    422d:	85 d2                	test   %edx,%edx
    422f:	0f 8e 59 ff ff ff    	jle    418e <usb_dp_browse_simple_internal+0x6e>
    4235:	8b 70 04             	mov    0x4(%eax),%esi
    4238:	85 f6                	test   %esi,%esi
    423a:	0f 8e 4e ff ff ff    	jle    418e <usb_dp_browse_simple_internal+0x6e>
    4240:	39 ca                	cmp    %ecx,%edx
    4242:	75 e4                	jne    4228 <usb_dp_browse_simple_internal+0x108>
    4244:	3b 75 e0             	cmp    -0x20(%ebp),%esi
    4247:	75 df                	jne    4228 <usb_dp_browse_simple_internal+0x108>
    4249:	e9 1b ff ff ff       	jmp    4169 <usb_dp_browse_simple_internal+0x49>
    424e:	66 90                	xchg   %ax,%ax

00004250 <usb_dp_get_sibling_descriptor>:
    4250:	55                   	push   %ebp
    4251:	89 e5                	mov    %esp,%ebp
    4253:	57                   	push   %edi
    4254:	56                   	push   %esi
    4255:	53                   	push   %ebx
    4256:	83 ec 0c             	sub    $0xc,%esp
    4259:	8b 7d 10             	mov    0x10(%ebp),%edi
    425c:	8b 4d 14             	mov    0x14(%ebp),%ecx
    425f:	85 ff                	test   %edi,%edi
    4261:	74 2d                	je     4290 <usb_dp_get_sibling_descriptor+0x40>
    4263:	8b 45 0c             	mov    0xc(%ebp),%eax
    4266:	8b 18                	mov    (%eax),%ebx
    4268:	31 c0                	xor    %eax,%eax
    426a:	39 df                	cmp    %ebx,%edi
    426c:	72 16                	jb     4284 <usb_dp_get_sibling_descriptor+0x34>
    426e:	8b 55 0c             	mov    0xc(%ebp),%edx
    4271:	8b 72 04             	mov    0x4(%edx),%esi
    4274:	89 fa                	mov    %edi,%edx
    4276:	29 da                	sub    %ebx,%edx
    4278:	39 d6                	cmp    %edx,%esi
    427a:	76 14                	jbe    4290 <usb_dp_get_sibling_descriptor+0x40>
    427c:	85 c9                	test   %ecx,%ecx
    427e:	74 10                	je     4290 <usb_dp_get_sibling_descriptor+0x40>
    4280:	39 d9                	cmp    %ebx,%ecx
    4282:	73 1c                	jae    42a0 <usb_dp_get_sibling_descriptor+0x50>
    4284:	83 c4 0c             	add    $0xc,%esp
    4287:	5b                   	pop    %ebx
    4288:	5e                   	pop    %esi
    4289:	5f                   	pop    %edi
    428a:	5d                   	pop    %ebp
    428b:	c3                   	ret    
    428c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4290:	83 c4 0c             	add    $0xc,%esp
    4293:	31 c0                	xor    %eax,%eax
    4295:	5b                   	pop    %ebx
    4296:	5e                   	pop    %esi
    4297:	5f                   	pop    %edi
    4298:	5d                   	pop    %ebp
    4299:	c3                   	ret    
    429a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    42a0:	89 ca                	mov    %ecx,%edx
    42a2:	29 da                	sub    %ebx,%edx
    42a4:	39 d6                	cmp    %edx,%esi
    42a6:	76 dc                	jbe    4284 <usb_dp_get_sibling_descriptor+0x34>
    42a8:	8b 55 0c             	mov    0xc(%ebp),%edx
    42ab:	8b 45 08             	mov    0x8(%ebp),%eax
    42ae:	e8 1d fd ff ff       	call   3fd0 <skip_nested_descriptors>
    42b3:	85 c0                	test   %eax,%eax
    42b5:	74 cd                	je     4284 <usb_dp_get_sibling_descriptor+0x34>
    42b7:	89 fa                	mov    %edi,%edx
    42b9:	83 c9 ff             	or     $0xffffffff,%ecx
    42bc:	42                   	inc    %edx
    42bd:	74 11                	je     42d0 <usb_dp_get_sibling_descriptor+0x80>
    42bf:	39 d3                	cmp    %edx,%ebx
    42c1:	77 0d                	ja     42d0 <usb_dp_get_sibling_descriptor+0x80>
    42c3:	29 da                	sub    %ebx,%edx
    42c5:	39 d6                	cmp    %edx,%esi
    42c7:	77 6f                	ja     4338 <usb_dp_get_sibling_descriptor+0xe8>
    42c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    42d0:	89 c7                	mov    %eax,%edi
    42d2:	83 ca ff             	or     $0xffffffff,%edx
    42d5:	47                   	inc    %edi
    42d6:	74 10                	je     42e8 <usb_dp_get_sibling_descriptor+0x98>
    42d8:	39 fb                	cmp    %edi,%ebx
    42da:	77 0c                	ja     42e8 <usb_dp_get_sibling_descriptor+0x98>
    42dc:	29 df                	sub    %ebx,%edi
    42de:	39 fe                	cmp    %edi,%esi
    42e0:	77 4e                	ja     4330 <usb_dp_get_sibling_descriptor+0xe0>
    42e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    42e8:	8b 75 08             	mov    0x8(%ebp),%esi
    42eb:	8b 1e                	mov    (%esi),%ebx
    42ed:	8b 33                	mov    (%ebx),%esi
    42ef:	85 f6                	test   %esi,%esi
    42f1:	7e 9d                	jle    4290 <usb_dp_get_sibling_descriptor+0x40>
    42f3:	8b 7b 04             	mov    0x4(%ebx),%edi
    42f6:	85 ff                	test   %edi,%edi
    42f8:	7e 96                	jle    4290 <usb_dp_get_sibling_descriptor+0x40>
    42fa:	39 f2                	cmp    %esi,%edx
    42fc:	75 0a                	jne    4308 <usb_dp_get_sibling_descriptor+0xb8>
    42fe:	39 f9                	cmp    %edi,%ecx
    4300:	74 82                	je     4284 <usb_dp_get_sibling_descriptor+0x34>
    4302:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4308:	83 c3 08             	add    $0x8,%ebx
    430b:	8b 33                	mov    (%ebx),%esi
    430d:	85 f6                	test   %esi,%esi
    430f:	0f 8e 7b ff ff ff    	jle    4290 <usb_dp_get_sibling_descriptor+0x40>
    4315:	8b 7b 04             	mov    0x4(%ebx),%edi
    4318:	85 ff                	test   %edi,%edi
    431a:	0f 8e 70 ff ff ff    	jle    4290 <usb_dp_get_sibling_descriptor+0x40>
    4320:	39 d6                	cmp    %edx,%esi
    4322:	75 e4                	jne    4308 <usb_dp_get_sibling_descriptor+0xb8>
    4324:	39 cf                	cmp    %ecx,%edi
    4326:	75 e0                	jne    4308 <usb_dp_get_sibling_descriptor+0xb8>
    4328:	e9 57 ff ff ff       	jmp    4284 <usb_dp_get_sibling_descriptor+0x34>
    432d:	8d 76 00             	lea    0x0(%esi),%esi
    4330:	31 d2                	xor    %edx,%edx
    4332:	8a 50 01             	mov    0x1(%eax),%dl
    4335:	eb b1                	jmp    42e8 <usb_dp_get_sibling_descriptor+0x98>
    4337:	90                   	nop
    4338:	31 c9                	xor    %ecx,%ecx
    433a:	8a 4f 01             	mov    0x1(%edi),%cl
    433d:	eb 91                	jmp    42d0 <usb_dp_get_sibling_descriptor+0x80>
    433f:	90                   	nop

00004340 <usb_dp_walk_simple>:
    4340:	55                   	push   %ebp
    4341:	89 e5                	mov    %esp,%ebp
    4343:	83 ec 18             	sub    $0x18,%esp
    4346:	8b 4d 08             	mov    0x8(%ebp),%ecx
    4349:	85 c9                	test   %ecx,%ecx
    434b:	74 15                	je     4362 <usb_dp_walk_simple+0x22>
    434d:	8b 45 0c             	mov    0xc(%ebp),%eax
    4350:	85 c0                	test   %eax,%eax
    4352:	74 0e                	je     4362 <usb_dp_walk_simple+0x22>
    4354:	8b 45 10             	mov    0x10(%ebp),%eax
    4357:	85 c0                	test   %eax,%eax
    4359:	74 07                	je     4362 <usb_dp_walk_simple+0x22>
    435b:	8b 45 14             	mov    0x14(%ebp),%eax
    435e:	85 c0                	test   %eax,%eax
    4360:	75 06                	jne    4368 <usb_dp_walk_simple+0x28>
    4362:	c9                   	leave  
    4363:	c3                   	ret    
    4364:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4368:	8b 45 0c             	mov    0xc(%ebp),%eax
    436b:	8b 55 18             	mov    0x18(%ebp),%edx
    436e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    4371:	8b 45 10             	mov    0x10(%ebp),%eax
    4374:	89 45 e8             	mov    %eax,-0x18(%ebp)
    4377:	50                   	push   %eax
    4378:	8b 45 14             	mov    0x14(%ebp),%eax
    437b:	52                   	push   %edx
    437c:	8d 55 ec             	lea    -0x14(%ebp),%edx
    437f:	50                   	push   %eax
    4380:	8d 45 e8             	lea    -0x18(%ebp),%eax
    4383:	6a 00                	push   $0x0
    4385:	89 4d ec             	mov    %ecx,-0x14(%ebp)
    4388:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    438f:	e8 8c fd ff ff       	call   4120 <usb_dp_browse_simple_internal>
    4394:	83 c4 10             	add    $0x10,%esp
    4397:	c9                   	leave  
    4398:	c3                   	ret    
    4399:	66 90                	xchg   %ax,%ax
    439b:	66 90                	xchg   %ax,%ax
    439d:	66 90                	xchg   %ax,%ax
    439f:	90                   	nop

000043a0 <fun_del_ref>:
    43a0:	55                   	push   %ebp
    43a1:	83 ca ff             	or     $0xffffffff,%edx
    43a4:	89 e5                	mov    %esp,%ebp
    43a6:	57                   	push   %edi
    43a7:	56                   	push   %esi
    43a8:	53                   	push   %ebx
    43a9:	83 ec 1c             	sub    $0x1c,%esp
    43ac:	8b 70 0c             	mov    0xc(%eax),%esi
    43af:	f0 0f c1 50 08       	lock xadd %edx,0x8(%eax)
    43b4:	4a                   	dec    %edx
    43b5:	74 69                	je     4420 <fun_del_ref+0x80>
    43b7:	83 c8 ff             	or     $0xffffffff,%eax
    43ba:	f0 0f c1 46 04       	lock xadd %eax,0x4(%esi)
    43bf:	48                   	dec    %eax
    43c0:	74 0e                	je     43d0 <fun_del_ref+0x30>
    43c2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    43c5:	5b                   	pop    %ebx
    43c6:	5e                   	pop    %esi
    43c7:	5f                   	pop    %edi
    43c8:	5d                   	pop    %ebp
    43c9:	c3                   	ret    
    43ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    43d0:	8b 46 08             	mov    0x8(%esi),%eax
    43d3:	85 c0                	test   %eax,%eax
    43d5:	74 0c                	je     43e3 <fun_del_ref+0x43>
    43d7:	83 ec 0c             	sub    $0xc,%esp
    43da:	50                   	push   %eax
    43db:	e8 90 b1 00 00       	call   f570 <async_hangup@plt>
    43e0:	83 c4 10             	add    $0x10,%esp
    43e3:	8b 46 10             	mov    0x10(%esi),%eax
    43e6:	85 c0                	test   %eax,%eax
    43e8:	74 0c                	je     43f6 <fun_del_ref+0x56>
    43ea:	83 ec 0c             	sub    $0xc,%esp
    43ed:	50                   	push   %eax
    43ee:	e8 ad b5 00 00       	call   f9a0 <free@plt>
    43f3:	83 c4 10             	add    $0x10,%esp
    43f6:	8b 46 0c             	mov    0xc(%esi),%eax
    43f9:	85 c0                	test   %eax,%eax
    43fb:	74 0c                	je     4409 <fun_del_ref+0x69>
    43fd:	83 ec 0c             	sub    $0xc,%esp
    4400:	50                   	push   %eax
    4401:	e8 9a b5 00 00       	call   f9a0 <free@plt>
    4406:	83 c4 10             	add    $0x10,%esp
    4409:	83 ec 0c             	sub    $0xc,%esp
    440c:	56                   	push   %esi
    440d:	e8 8e b5 00 00       	call   f9a0 <free@plt>
    4412:	83 c4 10             	add    $0x10,%esp
    4415:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4418:	5b                   	pop    %ebx
    4419:	5e                   	pop    %esi
    441a:	5f                   	pop    %edi
    441b:	5d                   	pop    %ebp
    441c:	c3                   	ret    
    441d:	8d 76 00             	lea    0x0(%esi),%esi
    4420:	8b 58 1c             	mov    0x1c(%eax),%ebx
    4423:	89 c7                	mov    %eax,%edi
    4425:	8d 40 18             	lea    0x18(%eax),%eax
    4428:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    442b:	39 d8                	cmp    %ebx,%eax
    442d:	74 49                	je     4478 <fun_del_ref+0xd8>
    442f:	90                   	nop
    4430:	8b 0b                	mov    (%ebx),%ecx
    4432:	85 c9                	test   %ecx,%ecx
    4434:	74 0e                	je     4444 <fun_del_ref+0xa4>
    4436:	8b 53 04             	mov    0x4(%ebx),%edx
    4439:	85 d2                	test   %edx,%edx
    443b:	74 07                	je     4444 <fun_del_ref+0xa4>
    443d:	89 0a                	mov    %ecx,(%edx)
    443f:	8b 0b                	mov    (%ebx),%ecx
    4441:	89 51 04             	mov    %edx,0x4(%ecx)
    4444:	8b 53 08             	mov    0x8(%ebx),%edx
    4447:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
    444d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
    4454:	85 d2                	test   %edx,%edx
    4456:	74 0c                	je     4464 <fun_del_ref+0xc4>
    4458:	83 ec 0c             	sub    $0xc,%esp
    445b:	52                   	push   %edx
    445c:	e8 3f b5 00 00       	call   f9a0 <free@plt>
    4461:	83 c4 10             	add    $0x10,%esp
    4464:	83 ec 0c             	sub    $0xc,%esp
    4467:	53                   	push   %ebx
    4468:	e8 33 b5 00 00       	call   f9a0 <free@plt>
    446d:	8b 5f 1c             	mov    0x1c(%edi),%ebx
    4470:	83 c4 10             	add    $0x10,%esp
    4473:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx
    4476:	75 b8                	jne    4430 <fun_del_ref+0x90>
    4478:	8b 57 20             	mov    0x20(%edi),%edx
    447b:	85 d2                	test   %edx,%edx
    447d:	74 0c                	je     448b <fun_del_ref+0xeb>
    447f:	83 ec 0c             	sub    $0xc,%esp
    4482:	52                   	push   %edx
    4483:	e8 18 b5 00 00       	call   f9a0 <free@plt>
    4488:	83 c4 10             	add    $0x10,%esp
    448b:	8b 57 14             	mov    0x14(%edi),%edx
    448e:	85 d2                	test   %edx,%edx
    4490:	74 0c                	je     449e <fun_del_ref+0xfe>
    4492:	83 ec 0c             	sub    $0xc,%esp
    4495:	52                   	push   %edx
    4496:	e8 05 b5 00 00       	call   f9a0 <free@plt>
    449b:	83 c4 10             	add    $0x10,%esp
    449e:	83 ec 0c             	sub    $0xc,%esp
    44a1:	57                   	push   %edi
    44a2:	e8 f9 b4 00 00       	call   f9a0 <free@plt>
    44a7:	83 c4 10             	add    $0x10,%esp
    44aa:	e9 08 ff ff ff       	jmp    43b7 <fun_del_ref+0x17>
    44af:	90                   	nop

000044b0 <driver_connection_gen.constprop.7>:
    44b0:	55                   	push   %ebp
    44b1:	89 e5                	mov    %esp,%ebp
    44b3:	57                   	push   %edi
    44b4:	56                   	push   %esi
    44b5:	53                   	push   %ebx
    44b6:	83 ec 58             	sub    $0x58,%esp
    44b9:	89 d3                	mov    %edx,%ebx
    44bb:	8b 72 08             	mov    0x8(%edx),%esi
    44be:	89 45 b4             	mov    %eax,-0x4c(%ebp)
    44c1:	68 d0 17 01 00       	push   $0x117d0
    44c6:	e8 f5 b4 00 00       	call   f9c0 <fibril_mutex_lock@plt>
    44cb:	c7 04 24 d0 17 01 00 	movl   $0x117d0,(%esp)
    44d2:	e8 f9 b0 00 00       	call   f5d0 <fibril_mutex_is_locked@plt>
    44d7:	83 c4 10             	add    $0x10,%esp
    44da:	84 c0                	test   %al,%al
    44dc:	0f 84 71 02 00 00    	je     4753 <driver_connection_gen.constprop.7+0x2a3>
    44e2:	a1 e4 17 01 00       	mov    0x117e4,%eax
    44e7:	3d e0 17 01 00       	cmp    $0x117e0,%eax
    44ec:	8d 78 d4             	lea    -0x2c(%eax),%edi
    44ef:	75 18                	jne    4509 <driver_connection_gen.constprop.7+0x59>
    44f1:	e9 22 02 00 00       	jmp    4718 <driver_connection_gen.constprop.7+0x268>
    44f6:	66 90                	xchg   %ax,%ax
    44f8:	8b 40 04             	mov    0x4(%eax),%eax
    44fb:	3d e0 17 01 00       	cmp    $0x117e0,%eax
    4500:	8d 78 d4             	lea    -0x2c(%eax),%edi
    4503:	0f 84 0f 02 00 00    	je     4718 <driver_connection_gen.constprop.7+0x268>
    4509:	3b 77 04             	cmp    0x4(%edi),%esi
    450c:	75 ea                	jne    44f8 <driver_connection_gen.constprop.7+0x48>
    450e:	8b 47 0c             	mov    0xc(%edi),%eax
    4511:	f0 ff 40 04          	lock incl 0x4(%eax)
    4515:	f0 ff 47 08          	lock incl 0x8(%edi)
    4519:	83 ec 0c             	sub    $0xc,%esp
    451c:	68 d0 17 01 00       	push   $0x117d0
    4521:	e8 2a b2 00 00       	call   f750 <fibril_mutex_unlock@plt>
    4526:	8b 47 28             	mov    0x28(%edi),%eax
    4529:	83 c4 10             	add    $0x10,%esp
    452c:	85 c0                	test   %eax,%eax
    452e:	74 20                	je     4550 <driver_connection_gen.constprop.7+0xa0>
    4530:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    4533:	56                   	push   %esi
    4534:	57                   	push   %edi
    4535:	53                   	push   %ebx
    4536:	52                   	push   %edx
    4537:	ff d0                	call   *%eax
    4539:	89 f8                	mov    %edi,%eax
    453b:	e8 60 fe ff ff       	call   43a0 <fun_del_ref>
    4540:	83 c4 10             	add    $0x10,%esp
    4543:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4546:	5b                   	pop    %ebx
    4547:	5e                   	pop    %esi
    4548:	5f                   	pop    %edi
    4549:	5d                   	pop    %ebp
    454a:	c3                   	ret    
    454b:	90                   	nop
    454c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4550:	8b 47 24             	mov    0x24(%edi),%eax
    4553:	85 c0                	test   %eax,%eax
    4555:	0f 84 a5 01 00 00    	je     4700 <driver_connection_gen.constprop.7+0x250>
    455b:	8b 00                	mov    (%eax),%eax
    455d:	85 c0                	test   %eax,%eax
    455f:	0f 84 9b 01 00 00    	je     4700 <driver_connection_gen.constprop.7+0x250>
    4565:	83 ec 0c             	sub    $0xc,%esp
    4568:	57                   	push   %edi
    4569:	ff d0                	call   *%eax
    456b:	8b 4d b4             	mov    -0x4c(%ebp),%ecx
    456e:	89 c3                	mov    %eax,%ebx
    4570:	58                   	pop    %eax
    4571:	5a                   	pop    %edx
    4572:	53                   	push   %ebx
    4573:	51                   	push   %ecx
    4574:	e8 e7 b0 00 00       	call   f660 <async_answer_0@plt>
    4579:	83 c4 10             	add    $0x10,%esp
    457c:	85 db                	test   %ebx,%ebx
    457e:	0f 85 70 01 00 00    	jne    46f4 <driver_connection_gen.constprop.7+0x244>
    4584:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4588:	50                   	push   %eax
    4589:	50                   	push   %eax
    458a:	8d 45 c4             	lea    -0x3c(%ebp),%eax
    458d:	6a 00                	push   $0x0
    458f:	50                   	push   %eax
    4590:	e8 db b2 00 00       	call   f870 <async_get_call_timeout@plt>
    4595:	8b 5d c4             	mov    -0x3c(%ebp),%ebx
    4598:	83 c4 10             	add    $0x10,%esp
    459b:	89 45 b4             	mov    %eax,-0x4c(%ebp)
    459e:	85 db                	test   %ebx,%ebx
    45a0:	0f 84 e2 00 00 00    	je     4688 <driver_connection_gen.constprop.7+0x1d8>
    45a6:	83 ec 0c             	sub    $0xc,%esp
    45a9:	81 eb 00 04 00 00    	sub    $0x400,%ebx
    45af:	53                   	push   %ebx
    45b0:	e8 cb 0f 00 00       	call   5580 <is_valid_iface_idx>
    45b5:	83 c4 10             	add    $0x10,%esp
    45b8:	84 c0                	test   %al,%al
    45ba:	75 2c                	jne    45e8 <driver_connection_gen.constprop.7+0x138>
    45bc:	8b 47 24             	mov    0x24(%edi),%eax
    45bf:	85 c0                	test   %eax,%eax
    45c1:	0f 84 91 00 00 00    	je     4658 <driver_connection_gen.constprop.7+0x1a8>
    45c7:	8b 40 44             	mov    0x44(%eax),%eax
    45ca:	85 c0                	test   %eax,%eax
    45cc:	0f 84 86 00 00 00    	je     4658 <driver_connection_gen.constprop.7+0x1a8>
    45d2:	8d 4d c4             	lea    -0x3c(%ebp),%ecx
    45d5:	52                   	push   %edx
    45d6:	51                   	push   %ecx
    45d7:	8b 4d b4             	mov    -0x4c(%ebp),%ecx
    45da:	51                   	push   %ecx
    45db:	57                   	push   %edi
    45dc:	ff d0                	call   *%eax
    45de:	83 c4 10             	add    $0x10,%esp
    45e1:	eb a5                	jmp    4588 <driver_connection_gen.constprop.7+0xd8>
    45e3:	90                   	nop
    45e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    45e8:	83 ec 0c             	sub    $0xc,%esp
    45eb:	53                   	push   %ebx
    45ec:	e8 8f 0f 00 00       	call   5580 <is_valid_iface_idx>
    45f1:	83 c4 10             	add    $0x10,%esp
    45f4:	84 c0                	test   %al,%al
    45f6:	0f 84 69 01 00 00    	je     4765 <driver_connection_gen.constprop.7+0x2b5>
    45fc:	8b 47 24             	mov    0x24(%edi),%eax
    45ff:	85 c0                	test   %eax,%eax
    4601:	0f 84 b9 00 00 00    	je     46c0 <driver_connection_gen.constprop.7+0x210>
    4607:	8b 44 98 08          	mov    0x8(%eax,%ebx,4),%eax
    460b:	89 45 b0             	mov    %eax,-0x50(%ebp)
    460e:	85 c0                	test   %eax,%eax
    4610:	0f 84 aa 00 00 00    	je     46c0 <driver_connection_gen.constprop.7+0x210>
    4616:	83 ec 0c             	sub    $0xc,%esp
    4619:	53                   	push   %ebx
    461a:	e8 11 0f 00 00       	call   5530 <get_remote_iface>
    461f:	83 c4 10             	add    $0x10,%esp
    4622:	85 c0                	test   %eax,%eax
    4624:	0f 84 50 01 00 00    	je     477a <driver_connection_gen.constprop.7+0x2ca>
    462a:	8b 4d c8             	mov    -0x38(%ebp),%ecx
    462d:	52                   	push   %edx
    462e:	52                   	push   %edx
    462f:	51                   	push   %ecx
    4630:	50                   	push   %eax
    4631:	e8 2a 0f 00 00       	call   5560 <get_remote_method>
    4636:	83 c4 10             	add    $0x10,%esp
    4639:	85 c0                	test   %eax,%eax
    463b:	0f 84 9f 00 00 00    	je     46e0 <driver_connection_gen.constprop.7+0x230>
    4641:	8d 55 c4             	lea    -0x3c(%ebp),%edx
    4644:	8b 4d b0             	mov    -0x50(%ebp),%ecx
    4647:	52                   	push   %edx
    4648:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    464b:	52                   	push   %edx
    464c:	51                   	push   %ecx
    464d:	57                   	push   %edi
    464e:	ff d0                	call   *%eax
    4650:	83 c4 10             	add    $0x10,%esp
    4653:	e9 30 ff ff ff       	jmp    4588 <driver_connection_gen.constprop.7+0xd8>
    4658:	50                   	push   %eax
    4659:	a1 54 19 01 00       	mov    0x11954,%eax
    465e:	53                   	push   %ebx
    465f:	8b 00                	mov    (%eax),%eax
    4661:	50                   	push   %eax
    4662:	68 9c d9 00 00       	push   $0xd99c
    4667:	e8 f4 ae 00 00       	call   f560 <printf@plt>
    466c:	5b                   	pop    %ebx
    466d:	58                   	pop    %eax
    466e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
    4671:	6a f5                	push   $0xfffffff5
    4673:	50                   	push   %eax
    4674:	e8 e7 af 00 00       	call   f660 <async_answer_0@plt>
    4679:	83 c4 10             	add    $0x10,%esp
    467c:	e9 07 ff ff ff       	jmp    4588 <driver_connection_gen.constprop.7+0xd8>
    4681:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4688:	8b 47 24             	mov    0x24(%edi),%eax
    468b:	85 c0                	test   %eax,%eax
    468d:	74 10                	je     469f <driver_connection_gen.constprop.7+0x1ef>
    468f:	8b 40 04             	mov    0x4(%eax),%eax
    4692:	85 c0                	test   %eax,%eax
    4694:	74 09                	je     469f <driver_connection_gen.constprop.7+0x1ef>
    4696:	83 ec 0c             	sub    $0xc,%esp
    4699:	57                   	push   %edi
    469a:	ff d0                	call   *%eax
    469c:	83 c4 10             	add    $0x10,%esp
    469f:	8b 75 b4             	mov    -0x4c(%ebp),%esi
    46a2:	53                   	push   %ebx
    46a3:	53                   	push   %ebx
    46a4:	6a 00                	push   $0x0
    46a6:	56                   	push   %esi
    46a7:	e8 b4 af 00 00       	call   f660 <async_answer_0@plt>
    46ac:	89 f8                	mov    %edi,%eax
    46ae:	e8 ed fc ff ff       	call   43a0 <fun_del_ref>
    46b3:	83 c4 10             	add    $0x10,%esp
    46b6:	8d 65 f4             	lea    -0xc(%ebp),%esp
    46b9:	5b                   	pop    %ebx
    46ba:	5e                   	pop    %esi
    46bb:	5f                   	pop    %edi
    46bc:	5d                   	pop    %ebp
    46bd:	c3                   	ret    
    46be:	66 90                	xchg   %ax,%ax
    46c0:	50                   	push   %eax
    46c1:	50                   	push   %eax
    46c2:	a1 54 19 01 00       	mov    0x11954,%eax
    46c7:	8b 00                	mov    (%eax),%eax
    46c9:	50                   	push   %eax
    46ca:	68 d8 d9 00 00       	push   $0xd9d8
    46cf:	e8 8c ae 00 00       	call   f560 <printf@plt>
    46d4:	83 c4 0c             	add    $0xc,%esp
    46d7:	53                   	push   %ebx
    46d8:	56                   	push   %esi
    46d9:	68 fc d9 00 00       	push   $0xd9fc
    46de:	eb 87                	jmp    4667 <driver_connection_gen.constprop.7+0x1b7>
    46e0:	50                   	push   %eax
    46e1:	50                   	push   %eax
    46e2:	a1 54 19 01 00       	mov    0x11954,%eax
    46e7:	8b 00                	mov    (%eax),%eax
    46e9:	50                   	push   %eax
    46ea:	68 34 da 00 00       	push   $0xda34
    46ef:	e9 73 ff ff ff       	jmp    4667 <driver_connection_gen.constprop.7+0x1b7>
    46f4:	89 f8                	mov    %edi,%eax
    46f6:	e8 a5 fc ff ff       	call   43a0 <fun_del_ref>
    46fb:	e9 43 fe ff ff       	jmp    4543 <driver_connection_gen.constprop.7+0x93>
    4700:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    4703:	50                   	push   %eax
    4704:	50                   	push   %eax
    4705:	6a 00                	push   $0x0
    4707:	52                   	push   %edx
    4708:	e8 53 af 00 00       	call   f660 <async_answer_0@plt>
    470d:	83 c4 10             	add    $0x10,%esp
    4710:	e9 73 fe ff ff       	jmp    4588 <driver_connection_gen.constprop.7+0xd8>
    4715:	8d 76 00             	lea    0x0(%esi),%esi
    4718:	83 ec 0c             	sub    $0xc,%esp
    471b:	68 d0 17 01 00       	push   $0x117d0
    4720:	e8 2b b0 00 00       	call   f750 <fibril_mutex_unlock@plt>
    4725:	a1 54 19 01 00       	mov    0x11954,%eax
    472a:	83 c4 0c             	add    $0xc,%esp
    472d:	8b 08                	mov    (%eax),%ecx
    472f:	56                   	push   %esi
    4730:	51                   	push   %ecx
    4731:	68 70 da 00 00       	push   $0xda70
    4736:	e8 25 ae 00 00       	call   f560 <printf@plt>
    473b:	8b 7d b4             	mov    -0x4c(%ebp),%edi
    473e:	5b                   	pop    %ebx
    473f:	5e                   	pop    %esi
    4740:	6a ff                	push   $0xffffffff
    4742:	57                   	push   %edi
    4743:	e8 18 af 00 00       	call   f660 <async_answer_0@plt>
    4748:	83 c4 10             	add    $0x10,%esp
    474b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    474e:	5b                   	pop    %ebx
    474f:	5e                   	pop    %esi
    4750:	5f                   	pop    %edi
    4751:	5d                   	pop    %ebp
    4752:	c3                   	ret    
    4753:	51                   	push   %ecx
    4754:	6a 6b                	push   $0x6b
    4756:	68 30 d8 00 00       	push   $0xd830
    475b:	68 70 d9 00 00       	push   $0xd970
    4760:	e8 6b af 00 00       	call   f6d0 <assert_abort@plt>
    4765:	50                   	push   %eax
    4766:	68 fb 02 00 00       	push   $0x2fb
    476b:	68 30 d8 00 00       	push   $0xd830
    4770:	68 41 d8 00 00       	push   $0xd841
    4775:	e8 56 af 00 00       	call   f6d0 <assert_abort@plt>
    477a:	53                   	push   %ebx
    477b:	68 aa 01 00 00       	push   $0x1aa
    4780:	68 30 d8 00 00       	push   $0xd830
    4785:	68 59 d8 00 00       	push   $0xd859
    478a:	e8 41 af 00 00       	call   f6d0 <assert_abort@plt>
    478f:	90                   	nop

00004790 <driver_connection_driver>:
    4790:	55                   	push   %ebp
    4791:	89 e5                	mov    %esp,%ebp
    4793:	8b 55 0c             	mov    0xc(%ebp),%edx
    4796:	8b 45 08             	mov    0x8(%ebp),%eax
    4799:	5d                   	pop    %ebp
    479a:	e9 11 fd ff ff       	jmp    44b0 <driver_connection_gen.constprop.7>
    479f:	90                   	nop

000047a0 <driver_connection_client>:
    47a0:	55                   	push   %ebp
    47a1:	89 e5                	mov    %esp,%ebp
    47a3:	8b 55 0c             	mov    0xc(%ebp),%edx
    47a6:	8b 45 08             	mov    0x8(%ebp),%eax
    47a9:	5d                   	pop    %ebp
    47aa:	e9 01 fd ff ff       	jmp    44b0 <driver_connection_gen.constprop.7>
    47af:	90                   	nop

000047b0 <driver_connection_devman>:
    47b0:	55                   	push   %ebp
    47b1:	89 e5                	mov    %esp,%ebp
    47b3:	57                   	push   %edi
    47b4:	56                   	push   %esi
    47b5:	53                   	push   %ebx
    47b6:	83 ec 54             	sub    $0x54,%esp
    47b9:	8d 75 c4             	lea    -0x3c(%ebp),%esi
    47bc:	8b 45 08             	mov    0x8(%ebp),%eax
    47bf:	6a 00                	push   $0x0
    47c1:	50                   	push   %eax
    47c2:	e8 99 ae 00 00       	call   f660 <async_answer_0@plt>
    47c7:	83 c4 10             	add    $0x10,%esp
    47ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    47d0:	50                   	push   %eax
    47d1:	50                   	push   %eax
    47d2:	6a 00                	push   $0x0
    47d4:	56                   	push   %esi
    47d5:	e8 96 b0 00 00       	call   f870 <async_get_call_timeout@plt>
    47da:	83 c4 10             	add    $0x10,%esp
    47dd:	89 c3                	mov    %eax,%ebx
    47df:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    47e2:	85 c0                	test   %eax,%eax
    47e4:	0f 84 de 03 00 00    	je     4bc8 <driver_connection_devman+0x418>
    47ea:	2d 00 04 00 00       	sub    $0x400,%eax
    47ef:	83 f8 04             	cmp    $0x4,%eax
    47f2:	0f 87 b8 03 00 00    	ja     4bb0 <driver_connection_devman+0x400>
    47f8:	8b 7d c8             	mov    -0x38(%ebp),%edi
    47fb:	ff 24 85 20 db 00 00 	jmp    *0xdb20(,%eax,4)
    4802:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4808:	83 ec 0c             	sub    $0xc,%esp
    480b:	68 d0 17 01 00       	push   $0x117d0
    4810:	e8 ab b1 00 00       	call   f9c0 <fibril_mutex_lock@plt>
    4815:	c7 04 24 d0 17 01 00 	movl   $0x117d0,(%esp)
    481c:	e8 af ad 00 00       	call   f5d0 <fibril_mutex_is_locked@plt>
    4821:	83 c4 10             	add    $0x10,%esp
    4824:	84 c0                	test   %al,%al
    4826:	0f 84 5a 04 00 00    	je     4c86 <driver_connection_devman+0x4d6>
    482c:	a1 e4 17 01 00       	mov    0x117e4,%eax
    4831:	3d e0 17 01 00       	cmp    $0x117e0,%eax
    4836:	8d 50 d4             	lea    -0x2c(%eax),%edx
    4839:	75 16                	jne    4851 <driver_connection_devman+0xa1>
    483b:	e9 90 03 00 00       	jmp    4bd0 <driver_connection_devman+0x420>
    4840:	8b 40 04             	mov    0x4(%eax),%eax
    4843:	3d e0 17 01 00       	cmp    $0x117e0,%eax
    4848:	8d 50 d4             	lea    -0x2c(%eax),%edx
    484b:	0f 84 7f 03 00 00    	je     4bd0 <driver_connection_devman+0x420>
    4851:	3b 7a 04             	cmp    0x4(%edx),%edi
    4854:	75 ea                	jne    4840 <driver_connection_devman+0x90>
    4856:	8b 42 0c             	mov    0xc(%edx),%eax
    4859:	f0 ff 40 04          	lock incl 0x4(%eax)
    485d:	f0 ff 42 08          	lock incl 0x8(%edx)
    4861:	83 ec 0c             	sub    $0xc,%esp
    4864:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    4867:	68 d0 17 01 00       	push   $0x117d0
    486c:	e8 df ae 00 00       	call   f750 <fibril_mutex_unlock@plt>
    4871:	a1 54 19 01 00       	mov    0x11954,%eax
    4876:	83 c4 10             	add    $0x10,%esp
    4879:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    487c:	8b 40 04             	mov    0x4(%eax),%eax
    487f:	8b 40 0c             	mov    0xc(%eax),%eax
    4882:	85 c0                	test   %eax,%eax
    4884:	0f 84 76 03 00 00    	je     4c00 <driver_connection_devman+0x450>
    488a:	83 ec 0c             	sub    $0xc,%esp
    488d:	52                   	push   %edx
    488e:	ff d0                	call   *%eax
    4890:	83 c4 10             	add    $0x10,%esp
    4893:	89 c7                	mov    %eax,%edi
    4895:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    4898:	89 d0                	mov    %edx,%eax
    489a:	e8 01 fb ff ff       	call   43a0 <fun_del_ref>
    489f:	51                   	push   %ecx
    48a0:	51                   	push   %ecx
    48a1:	57                   	push   %edi
    48a2:	53                   	push   %ebx
    48a3:	e8 b8 ad 00 00       	call   f660 <async_answer_0@plt>
    48a8:	83 c4 10             	add    $0x10,%esp
    48ab:	e9 20 ff ff ff       	jmp    47d0 <driver_connection_devman+0x20>
    48b0:	83 ec 0c             	sub    $0xc,%esp
    48b3:	68 e8 17 01 00       	push   $0x117e8
    48b8:	e8 03 b1 00 00       	call   f9c0 <fibril_mutex_lock@plt>
    48bd:	c7 04 24 e8 17 01 00 	movl   $0x117e8,(%esp)
    48c4:	e8 07 ad 00 00       	call   f5d0 <fibril_mutex_is_locked@plt>
    48c9:	83 c4 10             	add    $0x10,%esp
    48cc:	84 c0                	test   %al,%al
    48ce:	0f 84 a0 03 00 00    	je     4c74 <driver_connection_devman+0x4c4>
    48d4:	a1 fc 17 01 00       	mov    0x117fc,%eax
    48d9:	3d f8 17 01 00       	cmp    $0x117f8,%eax
    48de:	8d 50 ec             	lea    -0x14(%eax),%edx
    48e1:	75 16                	jne    48f9 <driver_connection_devman+0x149>
    48e3:	e9 08 03 00 00       	jmp    4bf0 <driver_connection_devman+0x440>
    48e8:	8b 40 04             	mov    0x4(%eax),%eax
    48eb:	3d f8 17 01 00       	cmp    $0x117f8,%eax
    48f0:	8d 50 ec             	lea    -0x14(%eax),%edx
    48f3:	0f 84 f7 02 00 00    	je     4bf0 <driver_connection_devman+0x440>
    48f9:	3b 78 ec             	cmp    -0x14(%eax),%edi
    48fc:	75 ea                	jne    48e8 <driver_connection_devman+0x138>
    48fe:	8d 7a 04             	lea    0x4(%edx),%edi
    4901:	f0 ff 42 04          	lock incl 0x4(%edx)
    4905:	83 ec 0c             	sub    $0xc,%esp
    4908:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    490b:	68 e8 17 01 00       	push   $0x117e8
    4910:	e8 3b ae 00 00       	call   f750 <fibril_mutex_unlock@plt>
    4915:	a1 54 19 01 00       	mov    0x11954,%eax
    491a:	83 c4 10             	add    $0x10,%esp
    491d:	8b 40 04             	mov    0x4(%eax),%eax
    4920:	8b 40 08             	mov    0x8(%eax),%eax
    4923:	85 c0                	test   %eax,%eax
    4925:	0f 85 88 00 00 00    	jne    49b3 <driver_connection_devman+0x203>
    492b:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    4930:	e9 63 02 00 00       	jmp    4b98 <driver_connection_devman+0x3e8>
    4935:	8d 76 00             	lea    0x0(%esi),%esi
    4938:	83 ec 0c             	sub    $0xc,%esp
    493b:	68 e8 17 01 00       	push   $0x117e8
    4940:	e8 7b b0 00 00       	call   f9c0 <fibril_mutex_lock@plt>
    4945:	c7 04 24 e8 17 01 00 	movl   $0x117e8,(%esp)
    494c:	e8 7f ac 00 00       	call   f5d0 <fibril_mutex_is_locked@plt>
    4951:	83 c4 10             	add    $0x10,%esp
    4954:	84 c0                	test   %al,%al
    4956:	0f 84 18 03 00 00    	je     4c74 <driver_connection_devman+0x4c4>
    495c:	a1 fc 17 01 00       	mov    0x117fc,%eax
    4961:	3d f8 17 01 00       	cmp    $0x117f8,%eax
    4966:	8d 50 ec             	lea    -0x14(%eax),%edx
    4969:	75 16                	jne    4981 <driver_connection_devman+0x1d1>
    496b:	e9 80 02 00 00       	jmp    4bf0 <driver_connection_devman+0x440>
    4970:	8b 40 04             	mov    0x4(%eax),%eax
    4973:	3d f8 17 01 00       	cmp    $0x117f8,%eax
    4978:	8d 50 ec             	lea    -0x14(%eax),%edx
    497b:	0f 84 6f 02 00 00    	je     4bf0 <driver_connection_devman+0x440>
    4981:	3b 78 ec             	cmp    -0x14(%eax),%edi
    4984:	75 ea                	jne    4970 <driver_connection_devman+0x1c0>
    4986:	8d 7a 04             	lea    0x4(%edx),%edi
    4989:	f0 ff 42 04          	lock incl 0x4(%edx)
    498d:	83 ec 0c             	sub    $0xc,%esp
    4990:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    4993:	68 e8 17 01 00       	push   $0x117e8
    4998:	e8 b3 ad 00 00       	call   f750 <fibril_mutex_unlock@plt>
    499d:	a1 54 19 01 00       	mov    0x11954,%eax
    49a2:	83 c4 10             	add    $0x10,%esp
    49a5:	8b 40 04             	mov    0x4(%eax),%eax
    49a8:	8b 40 04             	mov    0x4(%eax),%eax
    49ab:	85 c0                	test   %eax,%eax
    49ad:	0f 84 78 ff ff ff    	je     492b <driver_connection_devman+0x17b>
    49b3:	83 ec 0c             	sub    $0xc,%esp
    49b6:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    49b9:	52                   	push   %edx
    49ba:	ff d0                	call   *%eax
    49bc:	83 c4 10             	add    $0x10,%esp
    49bf:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    49c2:	85 c0                	test   %eax,%eax
    49c4:	0f 85 ce 01 00 00    	jne    4b98 <driver_connection_devman+0x3e8>
    49ca:	83 c9 ff             	or     $0xffffffff,%ecx
    49cd:	f0 0f c1 0f          	lock xadd %ecx,(%edi)
    49d1:	49                   	dec    %ecx
    49d2:	0f 85 c0 01 00 00    	jne    4b98 <driver_connection_devman+0x3e8>
    49d8:	8b 42 08             	mov    0x8(%edx),%eax
    49db:	85 c0                	test   %eax,%eax
    49dd:	74 0f                	je     49ee <driver_connection_devman+0x23e>
    49df:	83 ec 0c             	sub    $0xc,%esp
    49e2:	50                   	push   %eax
    49e3:	e8 88 ab 00 00       	call   f570 <async_hangup@plt>
    49e8:	83 c4 10             	add    $0x10,%esp
    49eb:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    49ee:	8b 42 10             	mov    0x10(%edx),%eax
    49f1:	85 c0                	test   %eax,%eax
    49f3:	74 12                	je     4a07 <driver_connection_devman+0x257>
    49f5:	83 ec 0c             	sub    $0xc,%esp
    49f8:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    49fb:	50                   	push   %eax
    49fc:	e8 9f af 00 00       	call   f9a0 <free@plt>
    4a01:	83 c4 10             	add    $0x10,%esp
    4a04:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    4a07:	8b 42 0c             	mov    0xc(%edx),%eax
    4a0a:	85 c0                	test   %eax,%eax
    4a0c:	74 12                	je     4a20 <driver_connection_devman+0x270>
    4a0e:	83 ec 0c             	sub    $0xc,%esp
    4a11:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    4a14:	50                   	push   %eax
    4a15:	e8 86 af 00 00       	call   f9a0 <free@plt>
    4a1a:	83 c4 10             	add    $0x10,%esp
    4a1d:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    4a20:	83 ec 0c             	sub    $0xc,%esp
    4a23:	52                   	push   %edx
    4a24:	e8 77 af 00 00       	call   f9a0 <free@plt>
    4a29:	83 c4 10             	add    $0x10,%esp
    4a2c:	31 c0                	xor    %eax,%eax
    4a2e:	e9 65 01 00 00       	jmp    4b98 <driver_connection_devman+0x3e8>
    4a33:	90                   	nop
    4a34:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4a38:	50                   	push   %eax
    4a39:	50                   	push   %eax
    4a3a:	8d 45 c0             	lea    -0x40(%ebp),%eax
    4a3d:	6a 00                	push   $0x0
    4a3f:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
    4a46:	6a 00                	push   $0x0
    4a48:	6a 00                	push   $0x0
    4a4a:	6a 00                	push   $0x0
    4a4c:	6a 01                	push   $0x1
    4a4e:	50                   	push   %eax
    4a4f:	e8 dc ae 00 00       	call   f930 <async_data_write_accept@plt>
    4a54:	83 c4 20             	add    $0x20,%esp
    4a57:	85 c0                	test   %eax,%eax
    4a59:	0f 85 39 01 00 00    	jne    4b98 <driver_connection_devman+0x3e8>
    4a5f:	50                   	push   %eax
    4a60:	50                   	push   %eax
    4a61:	6a 1c                	push   $0x1c
    4a63:	6a 01                	push   $0x1
    4a65:	e8 86 ac 00 00       	call   f6f0 <calloc@plt>
    4a6a:	83 c4 10             	add    $0x10,%esp
    4a6d:	89 c2                	mov    %eax,%edx
    4a6f:	85 c0                	test   %eax,%eax
    4a71:	0f 84 df 01 00 00    	je     4c56 <driver_connection_devman+0x4a6>
    4a77:	f0 ff 40 04          	lock incl 0x4(%eax)
    4a7b:	89 38                	mov    %edi,(%eax)
    4a7d:	8b 45 c0             	mov    -0x40(%ebp),%eax
    4a80:	89 42 0c             	mov    %eax,0xc(%edx)
    4a83:	a1 54 19 01 00       	mov    0x11954,%eax
    4a88:	83 ec 0c             	sub    $0xc,%esp
    4a8b:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    4a8e:	8b 40 04             	mov    0x4(%eax),%eax
    4a91:	52                   	push   %edx
    4a92:	ff 10                	call   *(%eax)
    4a94:	83 c4 10             	add    $0x10,%esp
    4a97:	89 c7                	mov    %eax,%edi
    4a99:	85 c0                	test   %eax,%eax
    4a9b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    4a9e:	0f 84 66 01 00 00    	je     4c0a <driver_connection_devman+0x45a>
    4aa4:	83 c8 ff             	or     $0xffffffff,%eax
    4aa7:	f0 0f c1 42 04       	lock xadd %eax,0x4(%edx)
    4aac:	48                   	dec    %eax
    4aad:	0f 85 ec fd ff ff    	jne    489f <driver_connection_devman+0xef>
    4ab3:	8b 42 08             	mov    0x8(%edx),%eax
    4ab6:	85 c0                	test   %eax,%eax
    4ab8:	74 12                	je     4acc <driver_connection_devman+0x31c>
    4aba:	83 ec 0c             	sub    $0xc,%esp
    4abd:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    4ac0:	50                   	push   %eax
    4ac1:	e8 aa aa 00 00       	call   f570 <async_hangup@plt>
    4ac6:	83 c4 10             	add    $0x10,%esp
    4ac9:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    4acc:	8b 42 10             	mov    0x10(%edx),%eax
    4acf:	85 c0                	test   %eax,%eax
    4ad1:	74 12                	je     4ae5 <driver_connection_devman+0x335>
    4ad3:	83 ec 0c             	sub    $0xc,%esp
    4ad6:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    4ad9:	50                   	push   %eax
    4ada:	e8 c1 ae 00 00       	call   f9a0 <free@plt>
    4adf:	83 c4 10             	add    $0x10,%esp
    4ae2:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    4ae5:	8b 42 0c             	mov    0xc(%edx),%eax
    4ae8:	85 c0                	test   %eax,%eax
    4aea:	74 12                	je     4afe <driver_connection_devman+0x34e>
    4aec:	83 ec 0c             	sub    $0xc,%esp
    4aef:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    4af2:	50                   	push   %eax
    4af3:	e8 a8 ae 00 00       	call   f9a0 <free@plt>
    4af8:	83 c4 10             	add    $0x10,%esp
    4afb:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    4afe:	83 ec 0c             	sub    $0xc,%esp
    4b01:	52                   	push   %edx
    4b02:	e8 99 ae 00 00       	call   f9a0 <free@plt>
    4b07:	83 c4 10             	add    $0x10,%esp
    4b0a:	e9 90 fd ff ff       	jmp    489f <driver_connection_devman+0xef>
    4b0f:	90                   	nop
    4b10:	83 ec 0c             	sub    $0xc,%esp
    4b13:	68 d0 17 01 00       	push   $0x117d0
    4b18:	e8 a3 ae 00 00       	call   f9c0 <fibril_mutex_lock@plt>
    4b1d:	c7 04 24 d0 17 01 00 	movl   $0x117d0,(%esp)
    4b24:	e8 a7 aa 00 00       	call   f5d0 <fibril_mutex_is_locked@plt>
    4b29:	83 c4 10             	add    $0x10,%esp
    4b2c:	84 c0                	test   %al,%al
    4b2e:	0f 84 52 01 00 00    	je     4c86 <driver_connection_devman+0x4d6>
    4b34:	a1 e4 17 01 00       	mov    0x117e4,%eax
    4b39:	3d e0 17 01 00       	cmp    $0x117e0,%eax
    4b3e:	8d 50 d4             	lea    -0x2c(%eax),%edx
    4b41:	75 12                	jne    4b55 <driver_connection_devman+0x3a5>
    4b43:	e9 88 00 00 00       	jmp    4bd0 <driver_connection_devman+0x420>
    4b48:	8b 40 04             	mov    0x4(%eax),%eax
    4b4b:	3d e0 17 01 00       	cmp    $0x117e0,%eax
    4b50:	8d 50 d4             	lea    -0x2c(%eax),%edx
    4b53:	74 7b                	je     4bd0 <driver_connection_devman+0x420>
    4b55:	3b 7a 04             	cmp    0x4(%edx),%edi
    4b58:	75 ee                	jne    4b48 <driver_connection_devman+0x398>
    4b5a:	8b 42 0c             	mov    0xc(%edx),%eax
    4b5d:	f0 ff 40 04          	lock incl 0x4(%eax)
    4b61:	f0 ff 42 08          	lock incl 0x8(%edx)
    4b65:	83 ec 0c             	sub    $0xc,%esp
    4b68:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    4b6b:	68 d0 17 01 00       	push   $0x117d0
    4b70:	e8 db ab 00 00       	call   f750 <fibril_mutex_unlock@plt>
    4b75:	a1 54 19 01 00       	mov    0x11954,%eax
    4b7a:	83 c4 10             	add    $0x10,%esp
    4b7d:	8b 40 04             	mov    0x4(%eax),%eax
    4b80:	8b 40 10             	mov    0x10(%eax),%eax
    4b83:	85 c0                	test   %eax,%eax
    4b85:	0f 84 a0 fd ff ff    	je     492b <driver_connection_devman+0x17b>
    4b8b:	83 ec 0c             	sub    $0xc,%esp
    4b8e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    4b91:	52                   	push   %edx
    4b92:	ff d0                	call   *%eax
    4b94:	83 c4 10             	add    $0x10,%esp
    4b97:	90                   	nop
    4b98:	52                   	push   %edx
    4b99:	52                   	push   %edx
    4b9a:	50                   	push   %eax
    4b9b:	53                   	push   %ebx
    4b9c:	e8 bf aa 00 00       	call   f660 <async_answer_0@plt>
    4ba1:	83 c4 10             	add    $0x10,%esp
    4ba4:	e9 27 fc ff ff       	jmp    47d0 <driver_connection_devman+0x20>
    4ba9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4bb0:	50                   	push   %eax
    4bb1:	50                   	push   %eax
    4bb2:	6a f5                	push   $0xfffffff5
    4bb4:	53                   	push   %ebx
    4bb5:	e8 a6 aa 00 00       	call   f660 <async_answer_0@plt>
    4bba:	83 c4 10             	add    $0x10,%esp
    4bbd:	e9 0e fc ff ff       	jmp    47d0 <driver_connection_devman+0x20>
    4bc2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4bc8:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4bcb:	5b                   	pop    %ebx
    4bcc:	5e                   	pop    %esi
    4bcd:	5f                   	pop    %edi
    4bce:	5d                   	pop    %ebp
    4bcf:	c3                   	ret    
    4bd0:	83 ec 0c             	sub    $0xc,%esp
    4bd3:	68 d0 17 01 00       	push   $0x117d0
    4bd8:	e8 73 ab 00 00       	call   f750 <fibril_mutex_unlock@plt>
    4bdd:	58                   	pop    %eax
    4bde:	5a                   	pop    %edx
    4bdf:	6a ff                	push   $0xffffffff
    4be1:	53                   	push   %ebx
    4be2:	e8 79 aa 00 00       	call   f660 <async_answer_0@plt>
    4be7:	83 c4 10             	add    $0x10,%esp
    4bea:	e9 e1 fb ff ff       	jmp    47d0 <driver_connection_devman+0x20>
    4bef:	90                   	nop
    4bf0:	83 ec 0c             	sub    $0xc,%esp
    4bf3:	68 e8 17 01 00       	push   $0x117e8
    4bf8:	eb de                	jmp    4bd8 <driver_connection_devman+0x428>
    4bfa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4c00:	bf f5 ff ff ff       	mov    $0xfffffff5,%edi
    4c05:	e9 8e fc ff ff       	jmp    4898 <driver_connection_devman+0xe8>
    4c0a:	83 ec 0c             	sub    $0xc,%esp
    4c0d:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    4c10:	68 e8 17 01 00       	push   $0x117e8
    4c15:	e8 a6 ad 00 00       	call   f9c0 <fibril_mutex_lock@plt>
    4c1a:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    4c1d:	8b 0d f8 17 01 00    	mov    0x117f8,%ecx
    4c23:	8d 42 14             	lea    0x14(%edx),%eax
    4c26:	c7 42 18 f8 17 01 00 	movl   $0x117f8,0x18(%edx)
    4c2d:	89 4a 14             	mov    %ecx,0x14(%edx)
    4c30:	89 41 04             	mov    %eax,0x4(%ecx)
    4c33:	a3 f8 17 01 00       	mov    %eax,0x117f8
    4c38:	c7 04 24 e8 17 01 00 	movl   $0x117e8,(%esp)
    4c3f:	e8 0c ab 00 00       	call   f750 <fibril_mutex_unlock@plt>
    4c44:	5f                   	pop    %edi
    4c45:	58                   	pop    %eax
    4c46:	6a 00                	push   $0x0
    4c48:	53                   	push   %ebx
    4c49:	e8 12 aa 00 00       	call   f660 <async_answer_0@plt>
    4c4e:	83 c4 10             	add    $0x10,%esp
    4c51:	e9 7a fb ff ff       	jmp    47d0 <driver_connection_devman+0x20>
    4c56:	83 ec 0c             	sub    $0xc,%esp
    4c59:	8b 4d c0             	mov    -0x40(%ebp),%ecx
    4c5c:	51                   	push   %ecx
    4c5d:	e8 3e ad 00 00       	call   f9a0 <free@plt>
    4c62:	5f                   	pop    %edi
    4c63:	58                   	pop    %eax
    4c64:	6a fe                	push   $0xfffffffe
    4c66:	53                   	push   %ebx
    4c67:	e8 f4 a9 00 00       	call   f660 <async_answer_0@plt>
    4c6c:	83 c4 10             	add    $0x10,%esp
    4c6f:	e9 5c fb ff ff       	jmp    47d0 <driver_connection_devman+0x20>
    4c74:	56                   	push   %esi
    4c75:	6a 5f                	push   $0x5f
    4c77:	68 30 d8 00 00       	push   $0xd830
    4c7c:	68 bc da 00 00       	push   $0xdabc
    4c81:	e8 4a aa 00 00       	call   f6d0 <assert_abort@plt>
    4c86:	53                   	push   %ebx
    4c87:	6a 6b                	push   $0x6b
    4c89:	68 30 d8 00 00       	push   $0xd830
    4c8e:	68 70 d9 00 00       	push   $0xd970
    4c93:	e8 38 aa 00 00       	call   f6d0 <assert_abort@plt>
    4c98:	90                   	nop
    4c99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00004ca0 <ddf_dev_data_alloc>:
    4ca0:	55                   	push   %ebp
    4ca1:	89 e5                	mov    %esp,%ebp
    4ca3:	53                   	push   %ebx
    4ca4:	53                   	push   %ebx
    4ca5:	8b 5d 08             	mov    0x8(%ebp),%ebx
    4ca8:	8b 43 10             	mov    0x10(%ebx),%eax
    4cab:	85 c0                	test   %eax,%eax
    4cad:	75 1c                	jne    4ccb <ddf_dev_data_alloc+0x2b>
    4caf:	8b 55 0c             	mov    0xc(%ebp),%edx
    4cb2:	50                   	push   %eax
    4cb3:	50                   	push   %eax
    4cb4:	52                   	push   %edx
    4cb5:	6a 01                	push   $0x1
    4cb7:	e8 34 aa 00 00       	call   f6f0 <calloc@plt>
    4cbc:	83 c4 10             	add    $0x10,%esp
    4cbf:	85 c0                	test   %eax,%eax
    4cc1:	74 03                	je     4cc6 <ddf_dev_data_alloc+0x26>
    4cc3:	89 43 10             	mov    %eax,0x10(%ebx)
    4cc6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    4cc9:	c9                   	leave  
    4cca:	c3                   	ret    
    4ccb:	51                   	push   %ecx
    4ccc:	68 39 02 00 00       	push   $0x239
    4cd1:	68 30 d8 00 00       	push   $0xd830
    4cd6:	68 21 d6 00 00       	push   $0xd621
    4cdb:	e8 f0 a9 00 00       	call   f6d0 <assert_abort@plt>

00004ce0 <ddf_dev_data_get>:
    4ce0:	55                   	push   %ebp
    4ce1:	89 e5                	mov    %esp,%ebp
    4ce3:	8b 45 08             	mov    0x8(%ebp),%eax
    4ce6:	5d                   	pop    %ebp
    4ce7:	8b 40 10             	mov    0x10(%eax),%eax
    4cea:	c3                   	ret    
    4ceb:	90                   	nop
    4cec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004cf0 <ddf_dev_get_handle>:
    4cf0:	55                   	push   %ebp
    4cf1:	89 e5                	mov    %esp,%ebp
    4cf3:	8b 45 08             	mov    0x8(%ebp),%eax
    4cf6:	5d                   	pop    %ebp
    4cf7:	8b 00                	mov    (%eax),%eax
    4cf9:	c3                   	ret    
    4cfa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00004d00 <ddf_dev_get_name>:
    4d00:	55                   	push   %ebp
    4d01:	89 e5                	mov    %esp,%ebp
    4d03:	8b 45 08             	mov    0x8(%ebp),%eax
    4d06:	5d                   	pop    %ebp
    4d07:	8b 40 0c             	mov    0xc(%eax),%eax
    4d0a:	c3                   	ret    
    4d0b:	90                   	nop
    4d0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004d10 <ddf_dev_parent_sess_create>:
    4d10:	55                   	push   %ebp
    4d11:	89 e5                	mov    %esp,%ebp
    4d13:	53                   	push   %ebx
    4d14:	53                   	push   %ebx
    4d15:	8b 5d 08             	mov    0x8(%ebp),%ebx
    4d18:	8b 43 08             	mov    0x8(%ebx),%eax
    4d1b:	85 c0                	test   %eax,%eax
    4d1d:	75 14                	jne    4d33 <ddf_dev_parent_sess_create+0x23>
    4d1f:	50                   	push   %eax
    4d20:	50                   	push   %eax
    4d21:	6a 01                	push   $0x1
    4d23:	8b 13                	mov    (%ebx),%edx
    4d25:	52                   	push   %edx
    4d26:	e8 75 a8 00 00       	call   f5a0 <devman_parent_device_connect@plt>
    4d2b:	89 43 08             	mov    %eax,0x8(%ebx)
    4d2e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    4d31:	c9                   	leave  
    4d32:	c3                   	ret    
    4d33:	51                   	push   %ecx
    4d34:	68 64 02 00 00       	push   $0x264
    4d39:	68 30 d8 00 00       	push   $0xd830
    4d3e:	68 6b d8 00 00       	push   $0xd86b
    4d43:	e8 88 a9 00 00       	call   f6d0 <assert_abort@plt>
    4d48:	90                   	nop
    4d49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00004d50 <ddf_dev_parent_sess_get>:
    4d50:	55                   	push   %ebp
    4d51:	89 e5                	mov    %esp,%ebp
    4d53:	8b 45 08             	mov    0x8(%ebp),%eax
    4d56:	5d                   	pop    %ebp
    4d57:	8b 40 08             	mov    0x8(%eax),%eax
    4d5a:	c3                   	ret    
    4d5b:	90                   	nop
    4d5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004d60 <ddf_fun_set_name>:
    4d60:	55                   	push   %ebp
    4d61:	89 e5                	mov    %esp,%ebp
    4d63:	53                   	push   %ebx
    4d64:	51                   	push   %ecx
    4d65:	8b 5d 08             	mov    0x8(%ebp),%ebx
    4d68:	8b 43 14             	mov    0x14(%ebx),%eax
    4d6b:	85 c0                	test   %eax,%eax
    4d6d:	75 23                	jne    4d92 <ddf_fun_set_name+0x32>
    4d6f:	83 ec 0c             	sub    $0xc,%esp
    4d72:	8b 45 0c             	mov    0xc(%ebp),%eax
    4d75:	50                   	push   %eax
    4d76:	e8 f5 a9 00 00       	call   f770 <str_dup@plt>
    4d7b:	83 c4 10             	add    $0x10,%esp
    4d7e:	89 43 14             	mov    %eax,0x14(%ebx)
    4d81:	85 c0                	test   %eax,%eax
    4d83:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    4d86:	0f 94 c0             	sete   %al
    4d89:	25 ff 00 00 00       	and    $0xff,%eax
    4d8e:	c9                   	leave  
    4d8f:	f7 d8                	neg    %eax
    4d91:	c3                   	ret    
    4d92:	52                   	push   %edx
    4d93:	68 7d 02 00 00       	push   $0x27d
    4d98:	68 30 d8 00 00       	push   $0xd830
    4d9d:	68 84 d8 00 00       	push   $0xd884
    4da2:	e8 29 a9 00 00       	call   f6d0 <assert_abort@plt>
    4da7:	89 f6                	mov    %esi,%esi
    4da9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00004db0 <ddf_fun_get_dev>:
    4db0:	55                   	push   %ebp
    4db1:	89 e5                	mov    %esp,%ebp
    4db3:	8b 45 08             	mov    0x8(%ebp),%eax
    4db6:	5d                   	pop    %ebp
    4db7:	8b 40 0c             	mov    0xc(%eax),%eax
    4dba:	c3                   	ret    
    4dbb:	90                   	nop
    4dbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004dc0 <ddf_fun_get_handle>:
    4dc0:	55                   	push   %ebp
    4dc1:	89 e5                	mov    %esp,%ebp
    4dc3:	8b 45 08             	mov    0x8(%ebp),%eax
    4dc6:	5d                   	pop    %ebp
    4dc7:	8b 40 04             	mov    0x4(%eax),%eax
    4dca:	c3                   	ret    
    4dcb:	90                   	nop
    4dcc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004dd0 <ddf_fun_create>:
    4dd0:	55                   	push   %ebp
    4dd1:	89 e5                	mov    %esp,%ebp
    4dd3:	57                   	push   %edi
    4dd4:	56                   	push   %esi
    4dd5:	53                   	push   %ebx
    4dd6:	83 ec 14             	sub    $0x14,%esp
    4dd9:	8b 75 08             	mov    0x8(%ebp),%esi
    4ddc:	6a 34                	push   $0x34
    4dde:	6a 01                	push   $0x1
    4de0:	e8 0b a9 00 00       	call   f6f0 <calloc@plt>
    4de5:	83 c4 10             	add    $0x10,%esp
    4de8:	89 c3                	mov    %eax,%ebx
    4dea:	85 c0                	test   %eax,%eax
    4dec:	74 48                	je     4e36 <ddf_fun_create+0x66>
    4dee:	8d 78 18             	lea    0x18(%eax),%edi
    4df1:	c7 40 2c 00 00 00 00 	movl   $0x0,0x2c(%eax)
    4df8:	89 78 18             	mov    %edi,0x18(%eax)
    4dfb:	89 78 1c             	mov    %edi,0x1c(%eax)
    4dfe:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
    4e05:	89 70 0c             	mov    %esi,0xc(%eax)
    4e08:	f0 ff 46 04          	lock incl 0x4(%esi)
    4e0c:	f0 ff 40 08          	lock incl 0x8(%eax)
    4e10:	c6 00 00             	movb   $0x0,(%eax)
    4e13:	8b 55 10             	mov    0x10(%ebp),%edx
    4e16:	8b 45 0c             	mov    0xc(%ebp),%eax
    4e19:	85 d2                	test   %edx,%edx
    4e1b:	89 43 10             	mov    %eax,0x10(%ebx)
    4e1e:	74 16                	je     4e36 <ddf_fun_create+0x66>
    4e20:	83 ec 0c             	sub    $0xc,%esp
    4e23:	8b 45 10             	mov    0x10(%ebp),%eax
    4e26:	50                   	push   %eax
    4e27:	e8 44 a9 00 00       	call   f770 <str_dup@plt>
    4e2c:	83 c4 10             	add    $0x10,%esp
    4e2f:	89 43 14             	mov    %eax,0x14(%ebx)
    4e32:	85 c0                	test   %eax,%eax
    4e34:	74 0a                	je     4e40 <ddf_fun_create+0x70>
    4e36:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4e39:	89 d8                	mov    %ebx,%eax
    4e3b:	5b                   	pop    %ebx
    4e3c:	5e                   	pop    %esi
    4e3d:	5f                   	pop    %edi
    4e3e:	5d                   	pop    %ebp
    4e3f:	c3                   	ret    
    4e40:	8b 73 1c             	mov    0x1c(%ebx),%esi
    4e43:	39 f7                	cmp    %esi,%edi
    4e45:	0f 84 85 00 00 00    	je     4ed0 <ddf_fun_create+0x100>
    4e4b:	90                   	nop
    4e4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4e50:	8b 0e                	mov    (%esi),%ecx
    4e52:	85 c9                	test   %ecx,%ecx
    4e54:	74 0e                	je     4e64 <ddf_fun_create+0x94>
    4e56:	8b 46 04             	mov    0x4(%esi),%eax
    4e59:	85 c0                	test   %eax,%eax
    4e5b:	74 07                	je     4e64 <ddf_fun_create+0x94>
    4e5d:	89 08                	mov    %ecx,(%eax)
    4e5f:	8b 0e                	mov    (%esi),%ecx
    4e61:	89 41 04             	mov    %eax,0x4(%ecx)
    4e64:	8b 46 08             	mov    0x8(%esi),%eax
    4e67:	c7 06 00 00 00 00    	movl   $0x0,(%esi)
    4e6d:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)
    4e74:	85 c0                	test   %eax,%eax
    4e76:	74 0c                	je     4e84 <ddf_fun_create+0xb4>
    4e78:	83 ec 0c             	sub    $0xc,%esp
    4e7b:	50                   	push   %eax
    4e7c:	e8 1f ab 00 00       	call   f9a0 <free@plt>
    4e81:	83 c4 10             	add    $0x10,%esp
    4e84:	83 ec 0c             	sub    $0xc,%esp
    4e87:	56                   	push   %esi
    4e88:	e8 13 ab 00 00       	call   f9a0 <free@plt>
    4e8d:	8b 73 1c             	mov    0x1c(%ebx),%esi
    4e90:	83 c4 10             	add    $0x10,%esp
    4e93:	39 f7                	cmp    %esi,%edi
    4e95:	75 b9                	jne    4e50 <ddf_fun_create+0x80>
    4e97:	8b 43 20             	mov    0x20(%ebx),%eax
    4e9a:	85 c0                	test   %eax,%eax
    4e9c:	74 0c                	je     4eaa <ddf_fun_create+0xda>
    4e9e:	83 ec 0c             	sub    $0xc,%esp
    4ea1:	50                   	push   %eax
    4ea2:	e8 f9 aa 00 00       	call   f9a0 <free@plt>
    4ea7:	83 c4 10             	add    $0x10,%esp
    4eaa:	8b 43 14             	mov    0x14(%ebx),%eax
    4ead:	85 c0                	test   %eax,%eax
    4eaf:	74 0c                	je     4ebd <ddf_fun_create+0xed>
    4eb1:	83 ec 0c             	sub    $0xc,%esp
    4eb4:	50                   	push   %eax
    4eb5:	e8 e6 aa 00 00       	call   f9a0 <free@plt>
    4eba:	83 c4 10             	add    $0x10,%esp
    4ebd:	83 ec 0c             	sub    $0xc,%esp
    4ec0:	53                   	push   %ebx
    4ec1:	31 db                	xor    %ebx,%ebx
    4ec3:	e8 d8 aa 00 00       	call   f9a0 <free@plt>
    4ec8:	83 c4 10             	add    $0x10,%esp
    4ecb:	e9 66 ff ff ff       	jmp    4e36 <ddf_fun_create+0x66>
    4ed0:	8b 43 20             	mov    0x20(%ebx),%eax
    4ed3:	85 c0                	test   %eax,%eax
    4ed5:	75 c7                	jne    4e9e <ddf_fun_create+0xce>
    4ed7:	eb e4                	jmp    4ebd <ddf_fun_create+0xed>
    4ed9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00004ee0 <ddf_fun_data_alloc>:
    4ee0:	55                   	push   %ebp
    4ee1:	89 e5                	mov    %esp,%ebp
    4ee3:	53                   	push   %ebx
    4ee4:	50                   	push   %eax
    4ee5:	8b 5d 08             	mov    0x8(%ebp),%ebx
    4ee8:	80 3b 00             	cmpb   $0x0,(%ebx)
    4eeb:	75 23                	jne    4f10 <ddf_fun_data_alloc+0x30>
    4eed:	8b 43 20             	mov    0x20(%ebx),%eax
    4ef0:	85 c0                	test   %eax,%eax
    4ef2:	75 31                	jne    4f25 <ddf_fun_data_alloc+0x45>
    4ef4:	8b 55 0c             	mov    0xc(%ebp),%edx
    4ef7:	50                   	push   %eax
    4ef8:	50                   	push   %eax
    4ef9:	52                   	push   %edx
    4efa:	6a 01                	push   $0x1
    4efc:	e8 ef a7 00 00       	call   f6f0 <calloc@plt>
    4f01:	83 c4 10             	add    $0x10,%esp
    4f04:	85 c0                	test   %eax,%eax
    4f06:	74 03                	je     4f0b <ddf_fun_data_alloc+0x2b>
    4f08:	89 43 20             	mov    %eax,0x20(%ebx)
    4f0b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    4f0e:	c9                   	leave  
    4f0f:	c3                   	ret    
    4f10:	50                   	push   %eax
    4f11:	68 c9 02 00 00       	push   $0x2c9
    4f16:	68 30 d8 00 00       	push   $0xd830
    4f1b:	68 96 d8 00 00       	push   $0xd896
    4f20:	e8 ab a7 00 00       	call   f6d0 <assert_abort@plt>
    4f25:	51                   	push   %ecx
    4f26:	68 ca 02 00 00       	push   $0x2ca
    4f2b:	68 30 d8 00 00       	push   $0xd830
    4f30:	68 aa d8 00 00       	push   $0xd8aa
    4f35:	e8 96 a7 00 00       	call   f6d0 <assert_abort@plt>
    4f3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00004f40 <ddf_fun_data_get>:
    4f40:	55                   	push   %ebp
    4f41:	89 e5                	mov    %esp,%ebp
    4f43:	8b 45 08             	mov    0x8(%ebp),%eax
    4f46:	5d                   	pop    %ebp
    4f47:	8b 40 20             	mov    0x20(%eax),%eax
    4f4a:	c3                   	ret    
    4f4b:	90                   	nop
    4f4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004f50 <ddf_fun_get_name>:
    4f50:	55                   	push   %ebp
    4f51:	89 e5                	mov    %esp,%ebp
    4f53:	8b 45 08             	mov    0x8(%ebp),%eax
    4f56:	5d                   	pop    %ebp
    4f57:	8b 40 14             	mov    0x14(%eax),%eax
    4f5a:	c3                   	ret    
    4f5b:	90                   	nop
    4f5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004f60 <ddf_fun_destroy>:
    4f60:	55                   	push   %ebp
    4f61:	89 e5                	mov    %esp,%ebp
    4f63:	57                   	push   %edi
    4f64:	56                   	push   %esi
    4f65:	53                   	push   %ebx
    4f66:	83 ec 1c             	sub    $0x1c,%esp
    4f69:	8b 7d 08             	mov    0x8(%ebp),%edi
    4f6c:	80 3f 00             	cmpb   $0x0,(%edi)
    4f6f:	0f 85 fa 00 00 00    	jne    506f <ddf_fun_destroy+0x10f>
    4f75:	8b 77 0c             	mov    0xc(%edi),%esi
    4f78:	83 ca ff             	or     $0xffffffff,%edx
    4f7b:	f0 0f c1 57 08       	lock xadd %edx,0x8(%edi)
    4f80:	4a                   	dec    %edx
    4f81:	74 5d                	je     4fe0 <ddf_fun_destroy+0x80>
    4f83:	83 c8 ff             	or     $0xffffffff,%eax
    4f86:	f0 0f c1 46 04       	lock xadd %eax,0x4(%esi)
    4f8b:	48                   	dec    %eax
    4f8c:	74 0a                	je     4f98 <ddf_fun_destroy+0x38>
    4f8e:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4f91:	5b                   	pop    %ebx
    4f92:	5e                   	pop    %esi
    4f93:	5f                   	pop    %edi
    4f94:	5d                   	pop    %ebp
    4f95:	c3                   	ret    
    4f96:	66 90                	xchg   %ax,%ax
    4f98:	8b 46 08             	mov    0x8(%esi),%eax
    4f9b:	85 c0                	test   %eax,%eax
    4f9d:	74 0c                	je     4fab <ddf_fun_destroy+0x4b>
    4f9f:	83 ec 0c             	sub    $0xc,%esp
    4fa2:	50                   	push   %eax
    4fa3:	e8 c8 a5 00 00       	call   f570 <async_hangup@plt>
    4fa8:	83 c4 10             	add    $0x10,%esp
    4fab:	8b 46 10             	mov    0x10(%esi),%eax
    4fae:	85 c0                	test   %eax,%eax
    4fb0:	74 0c                	je     4fbe <ddf_fun_destroy+0x5e>
    4fb2:	83 ec 0c             	sub    $0xc,%esp
    4fb5:	50                   	push   %eax
    4fb6:	e8 e5 a9 00 00       	call   f9a0 <free@plt>
    4fbb:	83 c4 10             	add    $0x10,%esp
    4fbe:	8b 46 0c             	mov    0xc(%esi),%eax
    4fc1:	85 c0                	test   %eax,%eax
    4fc3:	74 0c                	je     4fd1 <ddf_fun_destroy+0x71>
    4fc5:	83 ec 0c             	sub    $0xc,%esp
    4fc8:	50                   	push   %eax
    4fc9:	e8 d2 a9 00 00       	call   f9a0 <free@plt>
    4fce:	83 c4 10             	add    $0x10,%esp
    4fd1:	89 75 08             	mov    %esi,0x8(%ebp)
    4fd4:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4fd7:	5b                   	pop    %ebx
    4fd8:	5e                   	pop    %esi
    4fd9:	5f                   	pop    %edi
    4fda:	5d                   	pop    %ebp
    4fdb:	e9 c0 a9 00 00       	jmp    f9a0 <free@plt>
    4fe0:	8d 47 18             	lea    0x18(%edi),%eax
    4fe3:	8b 5f 1c             	mov    0x1c(%edi),%ebx
    4fe6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    4fe9:	39 d8                	cmp    %ebx,%eax
    4feb:	74 4b                	je     5038 <ddf_fun_destroy+0xd8>
    4fed:	8d 76 00             	lea    0x0(%esi),%esi
    4ff0:	8b 0b                	mov    (%ebx),%ecx
    4ff2:	85 c9                	test   %ecx,%ecx
    4ff4:	74 0e                	je     5004 <ddf_fun_destroy+0xa4>
    4ff6:	8b 53 04             	mov    0x4(%ebx),%edx
    4ff9:	85 d2                	test   %edx,%edx
    4ffb:	74 07                	je     5004 <ddf_fun_destroy+0xa4>
    4ffd:	89 0a                	mov    %ecx,(%edx)
    4fff:	8b 0b                	mov    (%ebx),%ecx
    5001:	89 51 04             	mov    %edx,0x4(%ecx)
    5004:	8b 53 08             	mov    0x8(%ebx),%edx
    5007:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
    500d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
    5014:	85 d2                	test   %edx,%edx
    5016:	74 0c                	je     5024 <ddf_fun_destroy+0xc4>
    5018:	83 ec 0c             	sub    $0xc,%esp
    501b:	52                   	push   %edx
    501c:	e8 7f a9 00 00       	call   f9a0 <free@plt>
    5021:	83 c4 10             	add    $0x10,%esp
    5024:	83 ec 0c             	sub    $0xc,%esp
    5027:	53                   	push   %ebx
    5028:	e8 73 a9 00 00       	call   f9a0 <free@plt>
    502d:	8b 5f 1c             	mov    0x1c(%edi),%ebx
    5030:	83 c4 10             	add    $0x10,%esp
    5033:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx
    5036:	75 b8                	jne    4ff0 <ddf_fun_destroy+0x90>
    5038:	8b 57 20             	mov    0x20(%edi),%edx
    503b:	85 d2                	test   %edx,%edx
    503d:	74 0c                	je     504b <ddf_fun_destroy+0xeb>
    503f:	83 ec 0c             	sub    $0xc,%esp
    5042:	52                   	push   %edx
    5043:	e8 58 a9 00 00       	call   f9a0 <free@plt>
    5048:	83 c4 10             	add    $0x10,%esp
    504b:	8b 57 14             	mov    0x14(%edi),%edx
    504e:	85 d2                	test   %edx,%edx
    5050:	74 0c                	je     505e <ddf_fun_destroy+0xfe>
    5052:	83 ec 0c             	sub    $0xc,%esp
    5055:	52                   	push   %edx
    5056:	e8 45 a9 00 00       	call   f9a0 <free@plt>
    505b:	83 c4 10             	add    $0x10,%esp
    505e:	83 ec 0c             	sub    $0xc,%esp
    5061:	57                   	push   %edi
    5062:	e8 39 a9 00 00       	call   f9a0 <free@plt>
    5067:	83 c4 10             	add    $0x10,%esp
    506a:	e9 14 ff ff ff       	jmp    4f83 <ddf_fun_destroy+0x23>
    506f:	50                   	push   %eax
    5070:	68 ee 02 00 00       	push   $0x2ee
    5075:	68 30 d8 00 00       	push   $0xd830
    507a:	68 96 d8 00 00       	push   $0xd896
    507f:	e8 4c a6 00 00       	call   f6d0 <assert_abort@plt>
    5084:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    508a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00005090 <ddf_fun_bind>:
    5090:	55                   	push   %ebp
    5091:	89 e5                	mov    %esp,%ebp
    5093:	53                   	push   %ebx
    5094:	83 ec 14             	sub    $0x14,%esp
    5097:	8b 5d 08             	mov    0x8(%ebp),%ebx
    509a:	80 3b 00             	cmpb   $0x0,(%ebx)
    509d:	0f 85 d2 00 00 00    	jne    5175 <ddf_fun_bind+0xe5>
    50a3:	8b 43 14             	mov    0x14(%ebx),%eax
    50a6:	85 c0                	test   %eax,%eax
    50a8:	0f 84 f1 00 00 00    	je     519f <ddf_fun_bind+0x10f>
    50ae:	8b 43 0c             	mov    0xc(%ebx),%eax
    50b1:	85 c0                	test   %eax,%eax
    50b3:	0f 84 d1 00 00 00    	je     518a <ddf_fun_bind+0xfa>
    50b9:	83 ec 0c             	sub    $0xc,%esp
    50bc:	68 d0 17 01 00       	push   $0x117d0
    50c1:	e8 fa a8 00 00       	call   f9c0 <fibril_mutex_lock@plt>
    50c6:	8b 15 e0 17 01 00    	mov    0x117e0,%edx
    50cc:	8d 43 2c             	lea    0x2c(%ebx),%eax
    50cf:	89 53 2c             	mov    %edx,0x2c(%ebx)
    50d2:	c7 43 30 e0 17 01 00 	movl   $0x117e0,0x30(%ebx)
    50d9:	89 42 04             	mov    %eax,0x4(%edx)
    50dc:	a3 e0 17 01 00       	mov    %eax,0x117e0
    50e1:	c7 04 24 d0 17 01 00 	movl   $0x117d0,(%esp)
    50e8:	e8 63 a6 00 00       	call   f750 <fibril_mutex_unlock@plt>
    50ed:	8d 43 04             	lea    0x4(%ebx),%eax
    50f0:	8b 53 10             	mov    0x10(%ebx),%edx
    50f3:	89 04 24             	mov    %eax,(%esp)
    50f6:	8b 43 0c             	mov    0xc(%ebx),%eax
    50f9:	8b 4b 14             	mov    0x14(%ebx),%ecx
    50fc:	8b 00                	mov    (%eax),%eax
    50fe:	50                   	push   %eax
    50ff:	8d 43 18             	lea    0x18(%ebx),%eax
    5102:	50                   	push   %eax
    5103:	52                   	push   %edx
    5104:	51                   	push   %ecx
    5105:	e8 a6 a5 00 00       	call   f6b0 <devman_add_function@plt>
    510a:	83 c4 20             	add    $0x20,%esp
    510d:	85 c0                	test   %eax,%eax
    510f:	75 0f                	jne    5120 <ddf_fun_bind+0x90>
    5111:	c6 03 01             	movb   $0x1,(%ebx)
    5114:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5117:	c9                   	leave  
    5118:	c3                   	ret    
    5119:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5120:	83 ec 0c             	sub    $0xc,%esp
    5123:	89 45 f4             	mov    %eax,-0xc(%ebp)
    5126:	68 d0 17 01 00       	push   $0x117d0
    512b:	e8 90 a8 00 00       	call   f9c0 <fibril_mutex_lock@plt>
    5130:	8b 4b 2c             	mov    0x2c(%ebx),%ecx
    5133:	83 c4 10             	add    $0x10,%esp
    5136:	8b 45 f4             	mov    -0xc(%ebp),%eax
    5139:	85 c9                	test   %ecx,%ecx
    513b:	74 0f                	je     514c <ddf_fun_bind+0xbc>
    513d:	8b 53 30             	mov    0x30(%ebx),%edx
    5140:	85 d2                	test   %edx,%edx
    5142:	74 08                	je     514c <ddf_fun_bind+0xbc>
    5144:	89 0a                	mov    %ecx,(%edx)
    5146:	8b 4b 2c             	mov    0x2c(%ebx),%ecx
    5149:	89 51 04             	mov    %edx,0x4(%ecx)
    514c:	83 ec 0c             	sub    $0xc,%esp
    514f:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
    5156:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
    515d:	89 45 f4             	mov    %eax,-0xc(%ebp)
    5160:	68 d0 17 01 00       	push   $0x117d0
    5165:	e8 e6 a5 00 00       	call   f750 <fibril_mutex_unlock@plt>
    516a:	8b 45 f4             	mov    -0xc(%ebp),%eax
    516d:	83 c4 10             	add    $0x10,%esp
    5170:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5173:	c9                   	leave  
    5174:	c3                   	ret    
    5175:	50                   	push   %eax
    5176:	68 12 03 00 00       	push   $0x312
    517b:	68 30 d8 00 00       	push   $0xd830
    5180:	68 96 d8 00 00       	push   $0xd896
    5185:	e8 46 a5 00 00       	call   f6d0 <assert_abort@plt>
    518a:	53                   	push   %ebx
    518b:	68 14 03 00 00       	push   $0x314
    5190:	68 30 d8 00 00       	push   $0xd830
    5195:	68 d5 d8 00 00       	push   $0xd8d5
    519a:	e8 31 a5 00 00       	call   f6d0 <assert_abort@plt>
    519f:	50                   	push   %eax
    51a0:	68 13 03 00 00       	push   $0x313
    51a5:	68 30 d8 00 00       	push   $0xd830
    51aa:	68 c3 d8 00 00       	push   $0xd8c3
    51af:	e8 1c a5 00 00       	call   f6d0 <assert_abort@plt>
    51b4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    51ba:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000051c0 <ddf_fun_unbind>:
    51c0:	55                   	push   %ebp
    51c1:	89 e5                	mov    %esp,%ebp
    51c3:	53                   	push   %ebx
    51c4:	83 ec 14             	sub    $0x14,%esp
    51c7:	8b 5d 08             	mov    0x8(%ebp),%ebx
    51ca:	80 3b 00             	cmpb   $0x0,(%ebx)
    51cd:	74 71                	je     5240 <ddf_fun_unbind+0x80>
    51cf:	83 ec 0c             	sub    $0xc,%esp
    51d2:	8b 43 04             	mov    0x4(%ebx),%eax
    51d5:	50                   	push   %eax
    51d6:	e8 35 a5 00 00       	call   f710 <devman_remove_function@plt>
    51db:	83 c4 10             	add    $0x10,%esp
    51de:	85 c0                	test   %eax,%eax
    51e0:	74 06                	je     51e8 <ddf_fun_unbind+0x28>
    51e2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    51e5:	c9                   	leave  
    51e6:	c3                   	ret    
    51e7:	90                   	nop
    51e8:	83 ec 0c             	sub    $0xc,%esp
    51eb:	89 45 f4             	mov    %eax,-0xc(%ebp)
    51ee:	68 d0 17 01 00       	push   $0x117d0
    51f3:	e8 c8 a7 00 00       	call   f9c0 <fibril_mutex_lock@plt>
    51f8:	8b 4b 2c             	mov    0x2c(%ebx),%ecx
    51fb:	83 c4 10             	add    $0x10,%esp
    51fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
    5201:	85 c9                	test   %ecx,%ecx
    5203:	74 0f                	je     5214 <ddf_fun_unbind+0x54>
    5205:	8b 53 30             	mov    0x30(%ebx),%edx
    5208:	85 d2                	test   %edx,%edx
    520a:	74 08                	je     5214 <ddf_fun_unbind+0x54>
    520c:	89 0a                	mov    %ecx,(%edx)
    520e:	8b 4b 2c             	mov    0x2c(%ebx),%ecx
    5211:	89 51 04             	mov    %edx,0x4(%ecx)
    5214:	83 ec 0c             	sub    $0xc,%esp
    5217:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
    521e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
    5225:	89 45 f4             	mov    %eax,-0xc(%ebp)
    5228:	68 d0 17 01 00       	push   $0x117d0
    522d:	e8 1e a5 00 00       	call   f750 <fibril_mutex_unlock@plt>
    5232:	c6 03 00             	movb   $0x0,(%ebx)
    5235:	8b 45 f4             	mov    -0xc(%ebp),%eax
    5238:	83 c4 10             	add    $0x10,%esp
    523b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    523e:	c9                   	leave  
    523f:	c3                   	ret    
    5240:	52                   	push   %edx
    5241:	68 2e 03 00 00       	push   $0x32e
    5246:	68 30 d8 00 00       	push   $0xd830
    524b:	68 e6 d8 00 00       	push   $0xd8e6
    5250:	e8 7b a4 00 00       	call   f6d0 <assert_abort@plt>
    5255:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5259:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00005260 <ddf_fun_online>:
    5260:	55                   	push   %ebp
    5261:	89 e5                	mov    %esp,%ebp
    5263:	83 ec 08             	sub    $0x8,%esp
    5266:	8b 45 08             	mov    0x8(%ebp),%eax
    5269:	80 38 00             	cmpb   $0x0,(%eax)
    526c:	74 0c                	je     527a <ddf_fun_online+0x1a>
    526e:	8b 40 04             	mov    0x4(%eax),%eax
    5271:	89 45 08             	mov    %eax,0x8(%ebp)
    5274:	c9                   	leave  
    5275:	e9 66 a3 00 00       	jmp    f5e0 <devman_drv_fun_online@plt>
    527a:	50                   	push   %eax
    527b:	68 43 03 00 00       	push   $0x343
    5280:	68 30 d8 00 00       	push   $0xd830
    5285:	68 e6 d8 00 00       	push   $0xd8e6
    528a:	e8 41 a4 00 00       	call   f6d0 <assert_abort@plt>
    528f:	90                   	nop

00005290 <ddf_fun_offline>:
    5290:	55                   	push   %ebp
    5291:	89 e5                	mov    %esp,%ebp
    5293:	83 ec 08             	sub    $0x8,%esp
    5296:	8b 45 08             	mov    0x8(%ebp),%eax
    5299:	80 38 00             	cmpb   $0x0,(%eax)
    529c:	74 0c                	je     52aa <ddf_fun_offline+0x1a>
    529e:	8b 40 04             	mov    0x4(%eax),%eax
    52a1:	89 45 08             	mov    %eax,0x8(%ebp)
    52a4:	c9                   	leave  
    52a5:	e9 16 a5 00 00       	jmp    f7c0 <devman_drv_fun_offline@plt>
    52aa:	50                   	push   %eax
    52ab:	68 55 03 00 00       	push   $0x355
    52b0:	68 30 d8 00 00       	push   $0xd830
    52b5:	68 e6 d8 00 00       	push   $0xd8e6
    52ba:	e8 11 a4 00 00       	call   f6d0 <assert_abort@plt>
    52bf:	90                   	nop

000052c0 <ddf_fun_add_match_id>:
    52c0:	55                   	push   %ebp
    52c1:	89 e5                	mov    %esp,%ebp
    52c3:	57                   	push   %edi
    52c4:	56                   	push   %esi
    52c5:	53                   	push   %ebx
    52c6:	83 ec 0c             	sub    $0xc,%esp
    52c9:	8b 5d 08             	mov    0x8(%ebp),%ebx
    52cc:	8b 75 10             	mov    0x10(%ebp),%esi
    52cf:	80 3b 00             	cmpb   $0x0,(%ebx)
    52d2:	0f 85 89 00 00 00    	jne    5361 <ddf_fun_add_match_id+0xa1>
    52d8:	83 7b 10 01          	cmpl   $0x1,0x10(%ebx)
    52dc:	75 6e                	jne    534c <ddf_fun_add_match_id+0x8c>
    52de:	83 ec 0c             	sub    $0xc,%esp
    52e1:	6a 10                	push   $0x10
    52e3:	e8 38 a3 00 00       	call   f620 <malloc@plt>
    52e8:	83 c4 0c             	add    $0xc,%esp
    52eb:	89 c7                	mov    %eax,%edi
    52ed:	6a 10                	push   $0x10
    52ef:	6a 00                	push   $0x0
    52f1:	50                   	push   %eax
    52f2:	e8 09 a5 00 00       	call   f800 <memset@plt>
    52f7:	8b 55 0c             	mov    0xc(%ebp),%edx
    52fa:	58                   	pop    %eax
    52fb:	52                   	push   %edx
    52fc:	e8 6f a4 00 00       	call   f770 <str_dup@plt>
    5301:	8d 53 18             	lea    0x18(%ebx),%edx
    5304:	89 47 08             	mov    %eax,0x8(%edi)
    5307:	8b 43 1c             	mov    0x1c(%ebx),%eax
    530a:	83 c4 10             	add    $0x10,%esp
    530d:	89 77 0c             	mov    %esi,0xc(%edi)
    5310:	39 c2                	cmp    %eax,%edx
    5312:	74 18                	je     532c <ddf_fun_add_match_id+0x6c>
    5314:	39 70 0c             	cmp    %esi,0xc(%eax)
    5317:	73 0c                	jae    5325 <ddf_fun_add_match_id+0x65>
    5319:	eb 2d                	jmp    5348 <ddf_fun_add_match_id+0x88>
    531b:	90                   	nop
    531c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5320:	3b 70 0c             	cmp    0xc(%eax),%esi
    5323:	77 23                	ja     5348 <ddf_fun_add_match_id+0x88>
    5325:	8b 40 04             	mov    0x4(%eax),%eax
    5328:	39 c2                	cmp    %eax,%edx
    532a:	75 f4                	jne    5320 <ddf_fun_add_match_id+0x60>
    532c:	8b 02                	mov    (%edx),%eax
    532e:	89 57 04             	mov    %edx,0x4(%edi)
    5331:	89 07                	mov    %eax,(%edi)
    5333:	8b 02                	mov    (%edx),%eax
    5335:	89 78 04             	mov    %edi,0x4(%eax)
    5338:	89 3a                	mov    %edi,(%edx)
    533a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    533d:	31 c0                	xor    %eax,%eax
    533f:	5b                   	pop    %ebx
    5340:	5e                   	pop    %esi
    5341:	5f                   	pop    %edi
    5342:	5d                   	pop    %ebp
    5343:	c3                   	ret    
    5344:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5348:	89 c2                	mov    %eax,%edx
    534a:	eb e0                	jmp    532c <ddf_fun_add_match_id+0x6c>
    534c:	51                   	push   %ecx
    534d:	68 6f 03 00 00       	push   $0x36f
    5352:	68 30 d8 00 00       	push   $0xd830
    5357:	68 f9 d8 00 00       	push   $0xd8f9
    535c:	e8 6f a3 00 00       	call   f6d0 <assert_abort@plt>
    5361:	53                   	push   %ebx
    5362:	68 6e 03 00 00       	push   $0x36e
    5367:	68 30 d8 00 00       	push   $0xd830
    536c:	68 96 d8 00 00       	push   $0xd896
    5371:	e8 5a a3 00 00       	call   f6d0 <assert_abort@plt>
    5376:	8d 76 00             	lea    0x0(%esi),%esi
    5379:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00005380 <ddf_fun_set_ops>:
    5380:	55                   	push   %ebp
    5381:	89 e5                	mov    %esp,%ebp
    5383:	83 ec 08             	sub    $0x8,%esp
    5386:	8b 45 08             	mov    0x8(%ebp),%eax
    5389:	8b 48 28             	mov    0x28(%eax),%ecx
    538c:	85 c9                	test   %ecx,%ecx
    538e:	75 08                	jne    5398 <ddf_fun_set_ops+0x18>
    5390:	8b 55 0c             	mov    0xc(%ebp),%edx
    5393:	89 50 24             	mov    %edx,0x24(%eax)
    5396:	c9                   	leave  
    5397:	c3                   	ret    
    5398:	50                   	push   %eax
    5399:	68 7f 03 00 00       	push   $0x37f
    539e:	68 30 d8 00 00       	push   $0xd830
    53a3:	68 11 d9 00 00       	push   $0xd911
    53a8:	e8 23 a3 00 00       	call   f6d0 <assert_abort@plt>
    53ad:	8d 76 00             	lea    0x0(%esi),%esi

000053b0 <ddf_fun_set_conn_handler>:
    53b0:	55                   	push   %ebp
    53b1:	89 e5                	mov    %esp,%ebp
    53b3:	83 ec 08             	sub    $0x8,%esp
    53b6:	8b 45 08             	mov    0x8(%ebp),%eax
    53b9:	8b 48 24             	mov    0x24(%eax),%ecx
    53bc:	85 c9                	test   %ecx,%ecx
    53be:	75 08                	jne    53c8 <ddf_fun_set_conn_handler+0x18>
    53c0:	8b 55 0c             	mov    0xc(%ebp),%edx
    53c3:	89 50 28             	mov    %edx,0x28(%eax)
    53c6:	c9                   	leave  
    53c7:	c3                   	ret    
    53c8:	50                   	push   %eax
    53c9:	68 89 03 00 00       	push   $0x389
    53ce:	68 30 d8 00 00       	push   $0xd830
    53d3:	68 2b d9 00 00       	push   $0xd92b
    53d8:	e8 f3 a2 00 00       	call   f6d0 <assert_abort@plt>
    53dd:	8d 76 00             	lea    0x0(%esi),%esi

000053e0 <ddf_fun_add_to_category>:
    53e0:	55                   	push   %ebp
    53e1:	89 e5                	mov    %esp,%ebp
    53e3:	83 ec 08             	sub    $0x8,%esp
    53e6:	8b 45 08             	mov    0x8(%ebp),%eax
    53e9:	8b 55 0c             	mov    0xc(%ebp),%edx
    53ec:	80 38 00             	cmpb   $0x0,(%eax)
    53ef:	74 15                	je     5406 <ddf_fun_add_to_category+0x26>
    53f1:	83 78 10 02          	cmpl   $0x2,0x10(%eax)
    53f5:	75 24                	jne    541b <ddf_fun_add_to_category+0x3b>
    53f7:	89 55 0c             	mov    %edx,0xc(%ebp)
    53fa:	8b 40 04             	mov    0x4(%eax),%eax
    53fd:	89 45 08             	mov    %eax,0x8(%ebp)
    5400:	c9                   	leave  
    5401:	e9 2a a2 00 00       	jmp    f630 <devman_add_device_to_category@plt>
    5406:	52                   	push   %edx
    5407:	68 9c 03 00 00       	push   $0x39c
    540c:	68 30 d8 00 00       	push   $0xd830
    5411:	68 e6 d8 00 00       	push   $0xd8e6
    5416:	e8 b5 a2 00 00       	call   f6d0 <assert_abort@plt>
    541b:	50                   	push   %eax
    541c:	68 9d 03 00 00       	push   $0x39d
    5421:	68 30 d8 00 00       	push   $0xd830
    5426:	68 3c d9 00 00       	push   $0xd93c
    542b:	e8 a0 a2 00 00       	call   f6d0 <assert_abort@plt>

00005430 <ddf_driver_main>:
    5430:	55                   	push   %ebp
    5431:	89 e5                	mov    %esp,%ebp
    5433:	56                   	push   %esi
    5434:	53                   	push   %ebx
    5435:	83 ec 10             	sub    $0x10,%esp
    5438:	8d 75 f4             	lea    -0xc(%ebp),%esi
    543b:	8b 45 08             	mov    0x8(%ebp),%eax
    543e:	56                   	push   %esi
    543f:	a3 54 19 01 00       	mov    %eax,0x11954
    5444:	6a 00                	push   $0x0
    5446:	68 90 47 00 00       	push   $0x4790
    544b:	68 41 26 9b c9       	push   $0xc99b2641
    5450:	e8 bb a4 00 00       	call   f910 <async_create_port@plt>
    5455:	83 c4 10             	add    $0x10,%esp
    5458:	89 c3                	mov    %eax,%ebx
    545a:	85 c0                	test   %eax,%eax
    545c:	74 0a                	je     5468 <ddf_driver_main+0x38>
    545e:	8d 65 f8             	lea    -0x8(%ebp),%esp
    5461:	89 d8                	mov    %ebx,%eax
    5463:	5b                   	pop    %ebx
    5464:	5e                   	pop    %esi
    5465:	5d                   	pop    %ebp
    5466:	c3                   	ret    
    5467:	90                   	nop
    5468:	56                   	push   %esi
    5469:	6a 00                	push   $0x0
    546b:	68 b0 47 00 00       	push   $0x47b0
    5470:	68 41 26 9b db       	push   $0xdb9b2641
    5475:	e8 96 a4 00 00       	call   f910 <async_create_port@plt>
    547a:	83 c4 10             	add    $0x10,%esp
    547d:	89 c3                	mov    %eax,%ebx
    547f:	85 c0                	test   %eax,%eax
    5481:	75 db                	jne    545e <ddf_driver_main+0x2e>
    5483:	51                   	push   %ecx
    5484:	51                   	push   %ecx
    5485:	6a 00                	push   $0x0
    5487:	68 a0 47 00 00       	push   $0x47a0
    548c:	e8 ef a4 00 00       	call   f980 <async_set_fallback_port_handler@plt>
    5491:	a1 54 19 01 00       	mov    0x11954,%eax
    5496:	8b 30                	mov    (%eax),%esi
    5498:	5b                   	pop    %ebx
    5499:	56                   	push   %esi
    549a:	e8 51 a3 00 00       	call   f7f0 <devman_driver_register@plt>
    549f:	83 c4 10             	add    $0x10,%esp
    54a2:	89 c3                	mov    %eax,%ebx
    54a4:	85 c0                	test   %eax,%eax
    54a6:	74 30                	je     54d8 <ddf_driver_main+0xa8>
    54a8:	b8 56 d9 00 00       	mov    $0xd956,%eax
    54ad:	83 fb f7             	cmp    $0xfffffff7,%ebx
    54b0:	74 0c                	je     54be <ddf_driver_main+0x8e>
    54b2:	83 ec 0c             	sub    $0xc,%esp
    54b5:	53                   	push   %ebx
    54b6:	e8 05 a4 00 00       	call   f8c0 <str_error@plt>
    54bb:	83 c4 10             	add    $0x10,%esp
    54be:	52                   	push   %edx
    54bf:	52                   	push   %edx
    54c0:	50                   	push   %eax
    54c1:	68 e4 da 00 00       	push   $0xdae4
    54c6:	e8 95 a0 00 00       	call   f560 <printf@plt>
    54cb:	83 c4 10             	add    $0x10,%esp
    54ce:	8d 65 f8             	lea    -0x8(%ebp),%esp
    54d1:	89 d8                	mov    %ebx,%eax
    54d3:	5b                   	pop    %ebx
    54d4:	5e                   	pop    %esi
    54d5:	5d                   	pop    %ebp
    54d6:	c3                   	ret    
    54d7:	90                   	nop
    54d8:	83 ec 0c             	sub    $0xc,%esp
    54db:	6a 00                	push   $0x0
    54dd:	e8 4e a0 00 00       	call   f530 <task_retval@plt>
    54e2:	83 c4 10             	add    $0x10,%esp
    54e5:	89 c3                	mov    %eax,%ebx
    54e7:	85 c0                	test   %eax,%eax
    54e9:	0f 85 6f ff ff ff    	jne    545e <ddf_driver_main+0x2e>
    54ef:	83 c8 ff             	or     $0xffffffff,%eax
    54f2:	f0 0f c1 05 44 19 01 	lock xadd %eax,0x11944
    54f9:	00 
    54fa:	48                   	dec    %eax
    54fb:	78 12                	js     550f <ddf_driver_main+0xdf>
    54fd:	83 ec 0c             	sub    $0xc,%esp
    5500:	6a 03                	push   $0x3
    5502:	e8 49 a4 00 00       	call   f950 <fibril_switch@plt>
    5507:	83 c4 10             	add    $0x10,%esp
    550a:	e9 4f ff ff ff       	jmp    545e <ddf_driver_main+0x2e>
    550f:	50                   	push   %eax
    5510:	6a 0b                	push   $0xb
    5512:	6a 00                	push   $0x0
    5514:	6a 00                	push   $0x0
    5516:	6a 00                	push   $0x0
    5518:	6a 00                	push   $0x0
    551a:	6a 00                	push   $0x0
    551c:	68 44 19 01 00       	push   $0x11944
    5521:	ff 15 40 19 01 00    	call   *0x11940
    5527:	83 c4 20             	add    $0x20,%esp
    552a:	eb d1                	jmp    54fd <ddf_driver_main+0xcd>
    552c:	66 90                	xchg   %ax,%ax
    552e:	66 90                	xchg   %ax,%ax

00005530 <get_remote_iface>:
    5530:	55                   	push   %ebp
    5531:	89 e5                	mov    %esp,%ebp
    5533:	83 ec 08             	sub    $0x8,%esp
    5536:	8b 45 08             	mov    0x8(%ebp),%eax
    5539:	83 f8 0e             	cmp    $0xe,%eax
    553c:	77 09                	ja     5547 <get_remote_iface+0x17>
    553e:	8b 04 85 60 db 00 00 	mov    0xdb60(,%eax,4),%eax
    5545:	c9                   	leave  
    5546:	c3                   	ret    
    5547:	50                   	push   %eax
    5548:	6a 4f                	push   $0x4f
    554a:	68 34 db 00 00       	push   $0xdb34
    554f:	68 41 d8 00 00       	push   $0xd841
    5554:	e8 77 a1 00 00       	call   f6d0 <assert_abort@plt>
    5559:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00005560 <get_remote_method>:
    5560:	55                   	push   %ebp
    5561:	89 e5                	mov    %esp,%ebp
    5563:	8b 55 08             	mov    0x8(%ebp),%edx
    5566:	8b 45 0c             	mov    0xc(%ebp),%eax
    5569:	39 02                	cmp    %eax,(%edx)
    556b:	76 0b                	jbe    5578 <get_remote_method+0x18>
    556d:	8b 52 04             	mov    0x4(%edx),%edx
    5570:	5d                   	pop    %ebp
    5571:	8b 04 82             	mov    (%edx,%eax,4),%eax
    5574:	c3                   	ret    
    5575:	8d 76 00             	lea    0x0(%esi),%esi
    5578:	31 c0                	xor    %eax,%eax
    557a:	5d                   	pop    %ebp
    557b:	c3                   	ret    
    557c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00005580 <is_valid_iface_idx>:
    5580:	55                   	push   %ebp
    5581:	89 e5                	mov    %esp,%ebp
    5583:	83 7d 08 0e          	cmpl   $0xe,0x8(%ebp)
    5587:	5d                   	pop    %ebp
    5588:	0f 96 c0             	setbe  %al
    558b:	c3                   	ret    
    558c:	66 90                	xchg   %ax,%ax
    558e:	66 90                	xchg   %ax,%ax

00005590 <remote_audio_mixer_set_item_level>:
    5590:	55                   	push   %ebp
    5591:	89 e5                	mov    %esp,%ebp
    5593:	53                   	push   %ebx
    5594:	51                   	push   %ecx
    5595:	8b 45 0c             	mov    0xc(%ebp),%eax
    5598:	8b 4d 08             	mov    0x8(%ebp),%ecx
    559b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    559e:	8b 55 14             	mov    0x14(%ebp),%edx
    55a1:	8b 40 0c             	mov    0xc(%eax),%eax
    55a4:	85 c0                	test   %eax,%eax
    55a6:	74 20                	je     55c8 <remote_audio_mixer_set_item_level+0x38>
    55a8:	83 ec 04             	sub    $0x4,%esp
    55ab:	ff 72 0c             	pushl  0xc(%edx)
    55ae:	8b 52 08             	mov    0x8(%edx),%edx
    55b1:	52                   	push   %edx
    55b2:	51                   	push   %ecx
    55b3:	ff d0                	call   *%eax
    55b5:	89 5d 08             	mov    %ebx,0x8(%ebp)
    55b8:	83 c4 10             	add    $0x10,%esp
    55bb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    55be:	89 45 0c             	mov    %eax,0xc(%ebp)
    55c1:	c9                   	leave  
    55c2:	e9 99 a0 00 00       	jmp    f660 <async_answer_0@plt>
    55c7:	90                   	nop
    55c8:	89 5d 08             	mov    %ebx,0x8(%ebp)
    55cb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    55ce:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    55d5:	c9                   	leave  
    55d6:	e9 85 a0 00 00       	jmp    f660 <async_answer_0@plt>
    55db:	90                   	nop
    55dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000055e0 <remote_audio_mixer_get_item_level>:
    55e0:	55                   	push   %ebp
    55e1:	89 e5                	mov    %esp,%ebp
    55e3:	83 ec 18             	sub    $0x18,%esp
    55e6:	8b 45 0c             	mov    0xc(%ebp),%eax
    55e9:	8b 40 08             	mov    0x8(%eax),%eax
    55ec:	85 c0                	test   %eax,%eax
    55ee:	74 30                	je     5620 <remote_audio_mixer_get_item_level+0x40>
    55f0:	8b 55 14             	mov    0x14(%ebp),%edx
    55f3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    55fa:	8b 52 08             	mov    0x8(%edx),%edx
    55fd:	51                   	push   %ecx
    55fe:	8d 4d f4             	lea    -0xc(%ebp),%ecx
    5601:	51                   	push   %ecx
    5602:	52                   	push   %edx
    5603:	8b 55 08             	mov    0x8(%ebp),%edx
    5606:	52                   	push   %edx
    5607:	ff d0                	call   *%eax
    5609:	83 c4 0c             	add    $0xc,%esp
    560c:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    560f:	51                   	push   %ecx
    5610:	50                   	push   %eax
    5611:	8b 45 10             	mov    0x10(%ebp),%eax
    5614:	50                   	push   %eax
    5615:	e8 86 a2 00 00       	call   f8a0 <async_answer_1@plt>
    561a:	83 c4 10             	add    $0x10,%esp
    561d:	c9                   	leave  
    561e:	c3                   	ret    
    561f:	90                   	nop
    5620:	50                   	push   %eax
    5621:	50                   	push   %eax
    5622:	8b 45 10             	mov    0x10(%ebp),%eax
    5625:	6a f5                	push   $0xfffffff5
    5627:	50                   	push   %eax
    5628:	e8 33 a0 00 00       	call   f660 <async_answer_0@plt>
    562d:	83 c4 10             	add    $0x10,%esp
    5630:	c9                   	leave  
    5631:	c3                   	ret    
    5632:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5639:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00005640 <remote_audio_mixer_get_item_info>:
    5640:	55                   	push   %ebp
    5641:	89 e5                	mov    %esp,%ebp
    5643:	56                   	push   %esi
    5644:	53                   	push   %ebx
    5645:	83 ec 10             	sub    $0x10,%esp
    5648:	8b 45 0c             	mov    0xc(%ebp),%eax
    564b:	8b 40 04             	mov    0x4(%eax),%eax
    564e:	85 c0                	test   %eax,%eax
    5650:	0f 84 c2 00 00 00    	je     5718 <remote_audio_mixer_get_item_info+0xd8>
    5656:	8b 55 14             	mov    0x14(%ebp),%edx
    5659:	8d 4d ec             	lea    -0x14(%ebp),%ecx
    565c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
    5663:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    566a:	8b 52 08             	mov    0x8(%edx),%edx
    566d:	51                   	push   %ecx
    566e:	8d 4d e8             	lea    -0x18(%ebp),%ecx
    5671:	51                   	push   %ecx
    5672:	8b 4d 08             	mov    0x8(%ebp),%ecx
    5675:	52                   	push   %edx
    5676:	51                   	push   %ecx
    5677:	ff d0                	call   *%eax
    5679:	83 c4 10             	add    $0x10,%esp
    567c:	89 c6                	mov    %eax,%esi
    567e:	8b 45 e8             	mov    -0x18(%ebp),%eax
    5681:	85 c0                	test   %eax,%eax
    5683:	74 5b                	je     56e0 <remote_audio_mixer_get_item_info+0xa0>
    5685:	83 ec 0c             	sub    $0xc,%esp
    5688:	50                   	push   %eax
    5689:	e8 f2 a1 00 00       	call   f880 <str_size@plt>
    568e:	8b 55 10             	mov    0x10(%ebp),%edx
    5691:	8d 58 01             	lea    0x1(%eax),%ebx
    5694:	8b 45 ec             	mov    -0x14(%ebp),%eax
    5697:	50                   	push   %eax
    5698:	53                   	push   %ebx
    5699:	56                   	push   %esi
    569a:	52                   	push   %edx
    569b:	e8 a0 a0 00 00       	call   f740 <async_answer_2@plt>
    56a0:	83 c4 20             	add    $0x20,%esp
    56a3:	85 f6                	test   %esi,%esi
    56a5:	75 2f                	jne    56d6 <remote_audio_mixer_get_item_info+0x96>
    56a7:	85 db                	test   %ebx,%ebx
    56a9:	74 2b                	je     56d6 <remote_audio_mixer_get_item_info+0x96>
    56ab:	50                   	push   %eax
    56ac:	50                   	push   %eax
    56ad:	8d 45 f0             	lea    -0x10(%ebp),%eax
    56b0:	50                   	push   %eax
    56b1:	8d 45 f4             	lea    -0xc(%ebp),%eax
    56b4:	50                   	push   %eax
    56b5:	e8 56 a1 00 00       	call   f810 <async_data_read_receive@plt>
    56ba:	83 c4 10             	add    $0x10,%esp
    56bd:	84 c0                	test   %al,%al
    56bf:	74 6f                	je     5730 <remote_audio_mixer_get_item_info+0xf0>
    56c1:	3b 5d f0             	cmp    -0x10(%ebp),%ebx
    56c4:	74 3a                	je     5700 <remote_audio_mixer_get_item_info+0xc0>
    56c6:	50                   	push   %eax
    56c7:	50                   	push   %eax
    56c8:	8b 45 f4             	mov    -0xc(%ebp),%eax
    56cb:	6a fd                	push   $0xfffffffd
    56cd:	50                   	push   %eax
    56ce:	e8 8d 9f 00 00       	call   f660 <async_answer_0@plt>
    56d3:	83 c4 10             	add    $0x10,%esp
    56d6:	8d 65 f8             	lea    -0x8(%ebp),%esp
    56d9:	5b                   	pop    %ebx
    56da:	5e                   	pop    %esi
    56db:	5d                   	pop    %ebp
    56dc:	c3                   	ret    
    56dd:	8d 76 00             	lea    0x0(%esi),%esi
    56e0:	8b 45 ec             	mov    -0x14(%ebp),%eax
    56e3:	8b 55 10             	mov    0x10(%ebp),%edx
    56e6:	50                   	push   %eax
    56e7:	6a 00                	push   $0x0
    56e9:	56                   	push   %esi
    56ea:	52                   	push   %edx
    56eb:	e8 50 a0 00 00       	call   f740 <async_answer_2@plt>
    56f0:	83 c4 10             	add    $0x10,%esp
    56f3:	8d 65 f8             	lea    -0x8(%ebp),%esp
    56f6:	5b                   	pop    %ebx
    56f7:	5e                   	pop    %esi
    56f8:	5d                   	pop    %ebp
    56f9:	c3                   	ret    
    56fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5700:	8b 75 f4             	mov    -0xc(%ebp),%esi
    5703:	51                   	push   %ecx
    5704:	53                   	push   %ebx
    5705:	8b 5d e8             	mov    -0x18(%ebp),%ebx
    5708:	53                   	push   %ebx
    5709:	56                   	push   %esi
    570a:	e8 e1 9e 00 00       	call   f5f0 <async_data_read_finalize@plt>
    570f:	83 c4 10             	add    $0x10,%esp
    5712:	eb c2                	jmp    56d6 <remote_audio_mixer_get_item_info+0x96>
    5714:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5718:	8b 75 10             	mov    0x10(%ebp),%esi
    571b:	53                   	push   %ebx
    571c:	53                   	push   %ebx
    571d:	6a f5                	push   $0xfffffff5
    571f:	56                   	push   %esi
    5720:	e8 3b 9f 00 00       	call   f660 <async_answer_0@plt>
    5725:	83 c4 10             	add    $0x10,%esp
    5728:	8d 65 f8             	lea    -0x8(%ebp),%esp
    572b:	5b                   	pop    %ebx
    572c:	5e                   	pop    %esi
    572d:	5d                   	pop    %ebp
    572e:	c3                   	ret    
    572f:	90                   	nop
    5730:	50                   	push   %eax
    5731:	50                   	push   %eax
    5732:	8b 45 f4             	mov    -0xc(%ebp),%eax
    5735:	6a f8                	push   $0xfffffff8
    5737:	50                   	push   %eax
    5738:	e8 23 9f 00 00       	call   f660 <async_answer_0@plt>
    573d:	83 c4 10             	add    $0x10,%esp
    5740:	eb 94                	jmp    56d6 <remote_audio_mixer_get_item_info+0x96>
    5742:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5749:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00005750 <remote_audio_mixer_get_info>:
    5750:	55                   	push   %ebp
    5751:	89 e5                	mov    %esp,%ebp
    5753:	56                   	push   %esi
    5754:	53                   	push   %ebx
    5755:	83 ec 10             	sub    $0x10,%esp
    5758:	8b 45 0c             	mov    0xc(%ebp),%eax
    575b:	8b 00                	mov    (%eax),%eax
    575d:	85 c0                	test   %eax,%eax
    575f:	0f 84 bb 00 00 00    	je     5820 <remote_audio_mixer_get_info+0xd0>
    5765:	8d 55 ec             	lea    -0x14(%ebp),%edx
    5768:	8b 5d 08             	mov    0x8(%ebp),%ebx
    576b:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
    5772:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    5779:	51                   	push   %ecx
    577a:	52                   	push   %edx
    577b:	8d 55 e8             	lea    -0x18(%ebp),%edx
    577e:	52                   	push   %edx
    577f:	53                   	push   %ebx
    5780:	ff d0                	call   *%eax
    5782:	83 c4 10             	add    $0x10,%esp
    5785:	89 c6                	mov    %eax,%esi
    5787:	8b 45 e8             	mov    -0x18(%ebp),%eax
    578a:	85 c0                	test   %eax,%eax
    578c:	74 5a                	je     57e8 <remote_audio_mixer_get_info+0x98>
    578e:	83 ec 0c             	sub    $0xc,%esp
    5791:	50                   	push   %eax
    5792:	e8 e9 a0 00 00       	call   f880 <str_size@plt>
    5797:	8b 55 10             	mov    0x10(%ebp),%edx
    579a:	8d 58 01             	lea    0x1(%eax),%ebx
    579d:	8b 45 ec             	mov    -0x14(%ebp),%eax
    57a0:	50                   	push   %eax
    57a1:	53                   	push   %ebx
    57a2:	56                   	push   %esi
    57a3:	52                   	push   %edx
    57a4:	e8 97 9f 00 00       	call   f740 <async_answer_2@plt>
    57a9:	83 c4 20             	add    $0x20,%esp
    57ac:	85 f6                	test   %esi,%esi
    57ae:	75 2f                	jne    57df <remote_audio_mixer_get_info+0x8f>
    57b0:	85 db                	test   %ebx,%ebx
    57b2:	74 2b                	je     57df <remote_audio_mixer_get_info+0x8f>
    57b4:	50                   	push   %eax
    57b5:	50                   	push   %eax
    57b6:	8d 45 f0             	lea    -0x10(%ebp),%eax
    57b9:	50                   	push   %eax
    57ba:	8d 45 f4             	lea    -0xc(%ebp),%eax
    57bd:	50                   	push   %eax
    57be:	e8 4d a0 00 00       	call   f810 <async_data_read_receive@plt>
    57c3:	83 c4 10             	add    $0x10,%esp
    57c6:	84 c0                	test   %al,%al
    57c8:	74 6e                	je     5838 <remote_audio_mixer_get_info+0xe8>
    57ca:	3b 5d f0             	cmp    -0x10(%ebp),%ebx
    57cd:	74 39                	je     5808 <remote_audio_mixer_get_info+0xb8>
    57cf:	50                   	push   %eax
    57d0:	50                   	push   %eax
    57d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
    57d4:	6a fd                	push   $0xfffffffd
    57d6:	50                   	push   %eax
    57d7:	e8 84 9e 00 00       	call   f660 <async_answer_0@plt>
    57dc:	83 c4 10             	add    $0x10,%esp
    57df:	8d 65 f8             	lea    -0x8(%ebp),%esp
    57e2:	5b                   	pop    %ebx
    57e3:	5e                   	pop    %esi
    57e4:	5d                   	pop    %ebp
    57e5:	c3                   	ret    
    57e6:	66 90                	xchg   %ax,%ax
    57e8:	8b 45 ec             	mov    -0x14(%ebp),%eax
    57eb:	8b 55 10             	mov    0x10(%ebp),%edx
    57ee:	50                   	push   %eax
    57ef:	6a 00                	push   $0x0
    57f1:	56                   	push   %esi
    57f2:	52                   	push   %edx
    57f3:	e8 48 9f 00 00       	call   f740 <async_answer_2@plt>
    57f8:	83 c4 10             	add    $0x10,%esp
    57fb:	8d 65 f8             	lea    -0x8(%ebp),%esp
    57fe:	5b                   	pop    %ebx
    57ff:	5e                   	pop    %esi
    5800:	5d                   	pop    %ebp
    5801:	c3                   	ret    
    5802:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5808:	8b 75 f4             	mov    -0xc(%ebp),%esi
    580b:	51                   	push   %ecx
    580c:	53                   	push   %ebx
    580d:	8b 5d e8             	mov    -0x18(%ebp),%ebx
    5810:	53                   	push   %ebx
    5811:	56                   	push   %esi
    5812:	e8 d9 9d 00 00       	call   f5f0 <async_data_read_finalize@plt>
    5817:	83 c4 10             	add    $0x10,%esp
    581a:	eb c3                	jmp    57df <remote_audio_mixer_get_info+0x8f>
    581c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5820:	8b 45 10             	mov    0x10(%ebp),%eax
    5823:	56                   	push   %esi
    5824:	56                   	push   %esi
    5825:	6a f5                	push   $0xfffffff5
    5827:	50                   	push   %eax
    5828:	e8 33 9e 00 00       	call   f660 <async_answer_0@plt>
    582d:	83 c4 10             	add    $0x10,%esp
    5830:	8d 65 f8             	lea    -0x8(%ebp),%esp
    5833:	5b                   	pop    %ebx
    5834:	5e                   	pop    %esi
    5835:	5d                   	pop    %ebp
    5836:	c3                   	ret    
    5837:	90                   	nop
    5838:	50                   	push   %eax
    5839:	50                   	push   %eax
    583a:	8b 45 f4             	mov    -0xc(%ebp),%eax
    583d:	6a f8                	push   $0xfffffff8
    583f:	50                   	push   %eax
    5840:	e8 1b 9e 00 00       	call   f660 <async_answer_0@plt>
    5845:	83 c4 10             	add    $0x10,%esp
    5848:	eb 95                	jmp    57df <remote_audio_mixer_get_info+0x8f>
    584a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00005850 <audio_mixer_get_info>:
    5850:	55                   	push   %ebp
    5851:	89 e5                	mov    %esp,%ebp
    5853:	57                   	push   %edi
    5854:	56                   	push   %esi
    5855:	53                   	push   %ebx
    5856:	83 ec 2c             	sub    $0x2c,%esp
    5859:	8b 75 08             	mov    0x8(%ebp),%esi
    585c:	85 f6                	test   %esi,%esi
    585e:	0f 84 bc 00 00 00    	je     5920 <audio_mixer_get_info+0xd0>
    5864:	50                   	push   %eax
    5865:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    5868:	6a 00                	push   $0x0
    586a:	6a 00                	push   $0x0
    586c:	6a 00                	push   $0x0
    586e:	50                   	push   %eax
    586f:	8d 45 e0             	lea    -0x20(%ebp),%eax
    5872:	50                   	push   %eax
    5873:	6a 00                	push   $0x0
    5875:	6a 00                	push   $0x0
    5877:	6a 00                	push   $0x0
    5879:	6a 00                	push   $0x0
    587b:	68 03 04 00 00       	push   $0x403
    5880:	56                   	push   %esi
    5881:	e8 ca 9d 00 00       	call   f650 <async_req_fast@plt>
    5886:	83 c4 30             	add    $0x30,%esp
    5889:	89 c3                	mov    %eax,%ebx
    588b:	85 c0                	test   %eax,%eax
    588d:	8b 45 0c             	mov    0xc(%ebp),%eax
    5890:	0f 94 c2             	sete   %dl
    5893:	85 c0                	test   %eax,%eax
    5895:	74 04                	je     589b <audio_mixer_get_info+0x4b>
    5897:	84 d2                	test   %dl,%dl
    5899:	75 1d                	jne    58b8 <audio_mixer_get_info+0x68>
    589b:	8b 45 10             	mov    0x10(%ebp),%eax
    589e:	85 c0                	test   %eax,%eax
    58a0:	74 57                	je     58f9 <audio_mixer_get_info+0xa9>
    58a2:	84 d2                	test   %dl,%dl
    58a4:	74 53                	je     58f9 <audio_mixer_get_info+0xa9>
    58a6:	8b 4d 10             	mov    0x10(%ebp),%ecx
    58a9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    58ac:	89 01                	mov    %eax,(%ecx)
    58ae:	89 d8                	mov    %ebx,%eax
    58b0:	8d 65 f4             	lea    -0xc(%ebp),%esp
    58b3:	5b                   	pop    %ebx
    58b4:	5e                   	pop    %esi
    58b5:	5f                   	pop    %edi
    58b6:	5d                   	pop    %ebp
    58b7:	c3                   	ret    
    58b8:	8b 45 e0             	mov    -0x20(%ebp),%eax
    58bb:	88 55 d4             	mov    %dl,-0x2c(%ebp)
    58be:	57                   	push   %edi
    58bf:	57                   	push   %edi
    58c0:	50                   	push   %eax
    58c1:	6a 01                	push   $0x1
    58c3:	e8 28 9e 00 00       	call   f6f0 <calloc@plt>
    58c8:	83 c4 10             	add    $0x10,%esp
    58cb:	89 c7                	mov    %eax,%edi
    58cd:	85 c0                	test   %eax,%eax
    58cf:	8a 55 d4             	mov    -0x2c(%ebp),%dl
    58d2:	74 53                	je     5927 <audio_mixer_get_info+0xd7>
    58d4:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    58d7:	88 55 d4             	mov    %dl,-0x2c(%ebp)
    58da:	52                   	push   %edx
    58db:	51                   	push   %ecx
    58dc:	50                   	push   %eax
    58dd:	56                   	push   %esi
    58de:	e8 3d 9f 00 00       	call   f820 <async_data_read_start@plt>
    58e3:	83 c4 10             	add    $0x10,%esp
    58e6:	8a 55 d4             	mov    -0x2c(%ebp),%dl
    58e9:	85 c0                	test   %eax,%eax
    58eb:	75 1b                	jne    5908 <audio_mixer_get_info+0xb8>
    58ed:	8b 45 0c             	mov    0xc(%ebp),%eax
    58f0:	89 38                	mov    %edi,(%eax)
    58f2:	8b 45 10             	mov    0x10(%ebp),%eax
    58f5:	85 c0                	test   %eax,%eax
    58f7:	75 a9                	jne    58a2 <audio_mixer_get_info+0x52>
    58f9:	8d 65 f4             	lea    -0xc(%ebp),%esp
    58fc:	89 d8                	mov    %ebx,%eax
    58fe:	5b                   	pop    %ebx
    58ff:	5e                   	pop    %esi
    5900:	5f                   	pop    %edi
    5901:	5d                   	pop    %ebp
    5902:	c3                   	ret    
    5903:	90                   	nop
    5904:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5908:	83 ec 0c             	sub    $0xc,%esp
    590b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    590e:	57                   	push   %edi
    590f:	e8 8c a0 00 00       	call   f9a0 <free@plt>
    5914:	83 c4 10             	add    $0x10,%esp
    5917:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    591a:	eb 94                	jmp    58b0 <audio_mixer_get_info+0x60>
    591c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5920:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    5925:	eb 89                	jmp    58b0 <audio_mixer_get_info+0x60>
    5927:	53                   	push   %ebx
    5928:	6a 00                	push   $0x0
    592a:	6a ff                	push   $0xffffffff
    592c:	56                   	push   %esi
    592d:	e8 ee 9e 00 00       	call   f820 <async_data_read_start@plt>
    5932:	83 c4 10             	add    $0x10,%esp
    5935:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    593a:	e9 71 ff ff ff       	jmp    58b0 <audio_mixer_get_info+0x60>
    593f:	90                   	nop

00005940 <audio_mixer_get_item_info>:
    5940:	55                   	push   %ebp
    5941:	89 e5                	mov    %esp,%ebp
    5943:	57                   	push   %edi
    5944:	56                   	push   %esi
    5945:	53                   	push   %ebx
    5946:	83 ec 2c             	sub    $0x2c,%esp
    5949:	8b 75 08             	mov    0x8(%ebp),%esi
    594c:	85 f6                	test   %esi,%esi
    594e:	0f 84 c4 00 00 00    	je     5a18 <audio_mixer_get_item_info+0xd8>
    5954:	50                   	push   %eax
    5955:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    5958:	6a 00                	push   $0x0
    595a:	6a 00                	push   $0x0
    595c:	6a 00                	push   $0x0
    595e:	50                   	push   %eax
    595f:	8d 45 e0             	lea    -0x20(%ebp),%eax
    5962:	50                   	push   %eax
    5963:	8b 45 0c             	mov    0xc(%ebp),%eax
    5966:	6a 00                	push   $0x0
    5968:	6a 00                	push   $0x0
    596a:	50                   	push   %eax
    596b:	6a 01                	push   $0x1
    596d:	68 03 04 00 00       	push   $0x403
    5972:	56                   	push   %esi
    5973:	e8 d8 9c 00 00       	call   f650 <async_req_fast@plt>
    5978:	83 c4 30             	add    $0x30,%esp
    597b:	89 c3                	mov    %eax,%ebx
    597d:	85 c0                	test   %eax,%eax
    597f:	8b 45 10             	mov    0x10(%ebp),%eax
    5982:	0f 94 c2             	sete   %dl
    5985:	85 c0                	test   %eax,%eax
    5987:	74 04                	je     598d <audio_mixer_get_item_info+0x4d>
    5989:	84 d2                	test   %dl,%dl
    598b:	75 23                	jne    59b0 <audio_mixer_get_item_info+0x70>
    598d:	8b 45 14             	mov    0x14(%ebp),%eax
    5990:	85 c0                	test   %eax,%eax
    5992:	74 5d                	je     59f1 <audio_mixer_get_item_info+0xb1>
    5994:	84 d2                	test   %dl,%dl
    5996:	74 59                	je     59f1 <audio_mixer_get_item_info+0xb1>
    5998:	8b 4d 14             	mov    0x14(%ebp),%ecx
    599b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    599e:	89 01                	mov    %eax,(%ecx)
    59a0:	89 d8                	mov    %ebx,%eax
    59a2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    59a5:	5b                   	pop    %ebx
    59a6:	5e                   	pop    %esi
    59a7:	5f                   	pop    %edi
    59a8:	5d                   	pop    %ebp
    59a9:	c3                   	ret    
    59aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    59b0:	8b 45 e0             	mov    -0x20(%ebp),%eax
    59b3:	88 55 d4             	mov    %dl,-0x2c(%ebp)
    59b6:	57                   	push   %edi
    59b7:	57                   	push   %edi
    59b8:	50                   	push   %eax
    59b9:	6a 01                	push   $0x1
    59bb:	e8 30 9d 00 00       	call   f6f0 <calloc@plt>
    59c0:	83 c4 10             	add    $0x10,%esp
    59c3:	89 c7                	mov    %eax,%edi
    59c5:	85 c0                	test   %eax,%eax
    59c7:	8a 55 d4             	mov    -0x2c(%ebp),%dl
    59ca:	74 53                	je     5a1f <audio_mixer_get_item_info+0xdf>
    59cc:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    59cf:	88 55 d4             	mov    %dl,-0x2c(%ebp)
    59d2:	52                   	push   %edx
    59d3:	51                   	push   %ecx
    59d4:	50                   	push   %eax
    59d5:	56                   	push   %esi
    59d6:	e8 45 9e 00 00       	call   f820 <async_data_read_start@plt>
    59db:	83 c4 10             	add    $0x10,%esp
    59de:	8a 55 d4             	mov    -0x2c(%ebp),%dl
    59e1:	85 c0                	test   %eax,%eax
    59e3:	75 1b                	jne    5a00 <audio_mixer_get_item_info+0xc0>
    59e5:	8b 45 10             	mov    0x10(%ebp),%eax
    59e8:	89 38                	mov    %edi,(%eax)
    59ea:	8b 45 14             	mov    0x14(%ebp),%eax
    59ed:	85 c0                	test   %eax,%eax
    59ef:	75 a3                	jne    5994 <audio_mixer_get_item_info+0x54>
    59f1:	8d 65 f4             	lea    -0xc(%ebp),%esp
    59f4:	89 d8                	mov    %ebx,%eax
    59f6:	5b                   	pop    %ebx
    59f7:	5e                   	pop    %esi
    59f8:	5f                   	pop    %edi
    59f9:	5d                   	pop    %ebp
    59fa:	c3                   	ret    
    59fb:	90                   	nop
    59fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5a00:	83 ec 0c             	sub    $0xc,%esp
    5a03:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    5a06:	57                   	push   %edi
    5a07:	e8 94 9f 00 00       	call   f9a0 <free@plt>
    5a0c:	83 c4 10             	add    $0x10,%esp
    5a0f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    5a12:	eb 8e                	jmp    59a2 <audio_mixer_get_item_info+0x62>
    5a14:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5a18:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    5a1d:	eb 83                	jmp    59a2 <audio_mixer_get_item_info+0x62>
    5a1f:	53                   	push   %ebx
    5a20:	6a 00                	push   $0x0
    5a22:	6a ff                	push   $0xffffffff
    5a24:	56                   	push   %esi
    5a25:	e8 f6 9d 00 00       	call   f820 <async_data_read_start@plt>
    5a2a:	83 c4 10             	add    $0x10,%esp
    5a2d:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    5a32:	e9 6b ff ff ff       	jmp    59a2 <audio_mixer_get_item_info+0x62>
    5a37:	89 f6                	mov    %esi,%esi
    5a39:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00005a40 <audio_mixer_set_item_level>:
    5a40:	55                   	push   %ebp
    5a41:	89 e5                	mov    %esp,%ebp
    5a43:	83 ec 08             	sub    $0x8,%esp
    5a46:	8b 45 08             	mov    0x8(%ebp),%eax
    5a49:	85 c0                	test   %eax,%eax
    5a4b:	74 2b                	je     5a78 <audio_mixer_set_item_level+0x38>
    5a4d:	8b 4d 10             	mov    0x10(%ebp),%ecx
    5a50:	52                   	push   %edx
    5a51:	8b 55 0c             	mov    0xc(%ebp),%edx
    5a54:	6a 00                	push   $0x0
    5a56:	6a 00                	push   $0x0
    5a58:	6a 00                	push   $0x0
    5a5a:	6a 00                	push   $0x0
    5a5c:	6a 00                	push   $0x0
    5a5e:	6a 00                	push   $0x0
    5a60:	51                   	push   %ecx
    5a61:	52                   	push   %edx
    5a62:	6a 02                	push   $0x2
    5a64:	68 03 04 00 00       	push   $0x403
    5a69:	50                   	push   %eax
    5a6a:	e8 e1 9b 00 00       	call   f650 <async_req_fast@plt>
    5a6f:	83 c4 30             	add    $0x30,%esp
    5a72:	c9                   	leave  
    5a73:	c3                   	ret    
    5a74:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5a78:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    5a7d:	c9                   	leave  
    5a7e:	c3                   	ret    
    5a7f:	90                   	nop

00005a80 <audio_mixer_get_item_level>:
    5a80:	55                   	push   %ebp
    5a81:	89 e5                	mov    %esp,%ebp
    5a83:	53                   	push   %ebx
    5a84:	83 ec 14             	sub    $0x14,%esp
    5a87:	8b 45 08             	mov    0x8(%ebp),%eax
    5a8a:	8b 5d 10             	mov    0x10(%ebp),%ebx
    5a8d:	85 c0                	test   %eax,%eax
    5a8f:	74 37                	je     5ac8 <audio_mixer_get_item_level+0x48>
    5a91:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    5a94:	52                   	push   %edx
    5a95:	8d 55 f4             	lea    -0xc(%ebp),%edx
    5a98:	6a 00                	push   $0x0
    5a9a:	6a 00                	push   $0x0
    5a9c:	6a 00                	push   $0x0
    5a9e:	6a 00                	push   $0x0
    5aa0:	52                   	push   %edx
    5aa1:	6a 00                	push   $0x0
    5aa3:	6a 00                	push   $0x0
    5aa5:	51                   	push   %ecx
    5aa6:	6a 03                	push   $0x3
    5aa8:	68 03 04 00 00       	push   $0x403
    5aad:	50                   	push   %eax
    5aae:	e8 9d 9b 00 00       	call   f650 <async_req_fast@plt>
    5ab3:	83 c4 30             	add    $0x30,%esp
    5ab6:	85 c0                	test   %eax,%eax
    5ab8:	75 09                	jne    5ac3 <audio_mixer_get_item_level+0x43>
    5aba:	85 db                	test   %ebx,%ebx
    5abc:	74 05                	je     5ac3 <audio_mixer_get_item_level+0x43>
    5abe:	8b 55 f4             	mov    -0xc(%ebp),%edx
    5ac1:	89 13                	mov    %edx,(%ebx)
    5ac3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5ac6:	c9                   	leave  
    5ac7:	c3                   	ret    
    5ac8:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    5acd:	eb f4                	jmp    5ac3 <audio_mixer_get_item_level+0x43>
    5acf:	90                   	nop

00005ad0 <remote_audio_pcm_stop_capture>:
    5ad0:	55                   	push   %ebp
    5ad1:	89 e5                	mov    %esp,%ebp
    5ad3:	53                   	push   %ebx
    5ad4:	50                   	push   %eax
    5ad5:	8b 45 14             	mov    0x14(%ebp),%eax
    5ad8:	8b 4d 08             	mov    0x8(%ebp),%ecx
    5adb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    5ade:	8b 50 08             	mov    0x8(%eax),%edx
    5ae1:	85 d2                	test   %edx,%edx
    5ae3:	8b 55 0c             	mov    0xc(%ebp),%edx
    5ae6:	0f 95 c0             	setne  %al
    5ae9:	8b 52 2c             	mov    0x2c(%edx),%edx
    5aec:	85 d2                	test   %edx,%edx
    5aee:	74 20                	je     5b10 <remote_audio_pcm_stop_capture+0x40>
    5af0:	83 ec 08             	sub    $0x8,%esp
    5af3:	25 ff 00 00 00       	and    $0xff,%eax
    5af8:	50                   	push   %eax
    5af9:	51                   	push   %ecx
    5afa:	ff d2                	call   *%edx
    5afc:	89 5d 08             	mov    %ebx,0x8(%ebp)
    5aff:	83 c4 10             	add    $0x10,%esp
    5b02:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5b05:	89 45 0c             	mov    %eax,0xc(%ebp)
    5b08:	c9                   	leave  
    5b09:	e9 52 9b 00 00       	jmp    f660 <async_answer_0@plt>
    5b0e:	66 90                	xchg   %ax,%ax
    5b10:	89 5d 08             	mov    %ebx,0x8(%ebp)
    5b13:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    5b18:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5b1b:	89 45 0c             	mov    %eax,0xc(%ebp)
    5b1e:	c9                   	leave  
    5b1f:	e9 3c 9b 00 00       	jmp    f660 <async_answer_0@plt>
    5b24:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5b2a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00005b30 <remote_audio_pcm_start_capture>:
    5b30:	55                   	push   %ebp
    5b31:	89 e5                	mov    %esp,%ebp
    5b33:	57                   	push   %edi
    5b34:	56                   	push   %esi
    5b35:	53                   	push   %ebx
    5b36:	83 ec 0c             	sub    $0xc,%esp
    5b39:	8b 55 14             	mov    0x14(%ebp),%edx
    5b3c:	8b 7d 0c             	mov    0xc(%ebp),%edi
    5b3f:	8b 4d 08             	mov    0x8(%ebp),%ecx
    5b42:	8b 5d 10             	mov    0x10(%ebp),%ebx
    5b45:	8b 42 10             	mov    0x10(%edx),%eax
    5b48:	8b 7f 28             	mov    0x28(%edi),%edi
    5b4b:	89 c6                	mov    %eax,%esi
    5b4d:	25 ff ff 00 00       	and    $0xffff,%eax
    5b52:	c1 ee 10             	shr    $0x10,%esi
    5b55:	85 ff                	test   %edi,%edi
    5b57:	74 27                	je     5b80 <remote_audio_pcm_start_capture+0x50>
    5b59:	83 ec 0c             	sub    $0xc,%esp
    5b5c:	50                   	push   %eax
    5b5d:	8b 42 0c             	mov    0xc(%edx),%eax
    5b60:	50                   	push   %eax
    5b61:	56                   	push   %esi
    5b62:	8b 52 08             	mov    0x8(%edx),%edx
    5b65:	52                   	push   %edx
    5b66:	51                   	push   %ecx
    5b67:	ff d7                	call   *%edi
    5b69:	83 c4 20             	add    $0x20,%esp
    5b6c:	89 5d 08             	mov    %ebx,0x8(%ebp)
    5b6f:	89 45 0c             	mov    %eax,0xc(%ebp)
    5b72:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5b75:	5b                   	pop    %ebx
    5b76:	5e                   	pop    %esi
    5b77:	5f                   	pop    %edi
    5b78:	5d                   	pop    %ebp
    5b79:	e9 e2 9a 00 00       	jmp    f660 <async_answer_0@plt>
    5b7e:	66 90                	xchg   %ax,%ax
    5b80:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    5b85:	eb e5                	jmp    5b6c <remote_audio_pcm_start_capture+0x3c>
    5b87:	89 f6                	mov    %esi,%esi
    5b89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00005b90 <remote_audio_pcm_stop_playback>:
    5b90:	55                   	push   %ebp
    5b91:	89 e5                	mov    %esp,%ebp
    5b93:	53                   	push   %ebx
    5b94:	50                   	push   %eax
    5b95:	8b 45 14             	mov    0x14(%ebp),%eax
    5b98:	8b 4d 08             	mov    0x8(%ebp),%ecx
    5b9b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    5b9e:	8b 50 08             	mov    0x8(%eax),%edx
    5ba1:	85 d2                	test   %edx,%edx
    5ba3:	8b 55 0c             	mov    0xc(%ebp),%edx
    5ba6:	0f 95 c0             	setne  %al
    5ba9:	8b 52 24             	mov    0x24(%edx),%edx
    5bac:	85 d2                	test   %edx,%edx
    5bae:	74 20                	je     5bd0 <remote_audio_pcm_stop_playback+0x40>
    5bb0:	83 ec 08             	sub    $0x8,%esp
    5bb3:	25 ff 00 00 00       	and    $0xff,%eax
    5bb8:	50                   	push   %eax
    5bb9:	51                   	push   %ecx
    5bba:	ff d2                	call   *%edx
    5bbc:	89 5d 08             	mov    %ebx,0x8(%ebp)
    5bbf:	83 c4 10             	add    $0x10,%esp
    5bc2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5bc5:	89 45 0c             	mov    %eax,0xc(%ebp)
    5bc8:	c9                   	leave  
    5bc9:	e9 92 9a 00 00       	jmp    f660 <async_answer_0@plt>
    5bce:	66 90                	xchg   %ax,%ax
    5bd0:	89 5d 08             	mov    %ebx,0x8(%ebp)
    5bd3:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    5bd8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5bdb:	89 45 0c             	mov    %eax,0xc(%ebp)
    5bde:	c9                   	leave  
    5bdf:	e9 7c 9a 00 00       	jmp    f660 <async_answer_0@plt>
    5be4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5bea:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00005bf0 <remote_audio_pcm_start_playback>:
    5bf0:	55                   	push   %ebp
    5bf1:	89 e5                	mov    %esp,%ebp
    5bf3:	57                   	push   %edi
    5bf4:	56                   	push   %esi
    5bf5:	53                   	push   %ebx
    5bf6:	83 ec 0c             	sub    $0xc,%esp
    5bf9:	8b 4d 14             	mov    0x14(%ebp),%ecx
    5bfc:	8b 7d 0c             	mov    0xc(%ebp),%edi
    5bff:	8b 75 08             	mov    0x8(%ebp),%esi
    5c02:	8b 5d 10             	mov    0x10(%ebp),%ebx
    5c05:	8b 41 10             	mov    0x10(%ecx),%eax
    5c08:	8b 7f 20             	mov    0x20(%edi),%edi
    5c0b:	89 c2                	mov    %eax,%edx
    5c0d:	25 ff ff 00 00       	and    $0xffff,%eax
    5c12:	c1 ea 10             	shr    $0x10,%edx
    5c15:	81 e2 ff 00 00 00    	and    $0xff,%edx
    5c1b:	85 ff                	test   %edi,%edi
    5c1d:	74 29                	je     5c48 <remote_audio_pcm_start_playback+0x58>
    5c1f:	83 ec 0c             	sub    $0xc,%esp
    5c22:	50                   	push   %eax
    5c23:	8b 41 0c             	mov    0xc(%ecx),%eax
    5c26:	50                   	push   %eax
    5c27:	52                   	push   %edx
    5c28:	8b 51 08             	mov    0x8(%ecx),%edx
    5c2b:	52                   	push   %edx
    5c2c:	56                   	push   %esi
    5c2d:	ff d7                	call   *%edi
    5c2f:	83 c4 20             	add    $0x20,%esp
    5c32:	89 5d 08             	mov    %ebx,0x8(%ebp)
    5c35:	89 45 0c             	mov    %eax,0xc(%ebp)
    5c38:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5c3b:	5b                   	pop    %ebx
    5c3c:	5e                   	pop    %esi
    5c3d:	5f                   	pop    %edi
    5c3e:	5d                   	pop    %ebp
    5c3f:	e9 1c 9a 00 00       	jmp    f660 <async_answer_0@plt>
    5c44:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5c48:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    5c4d:	eb e3                	jmp    5c32 <remote_audio_pcm_start_playback+0x42>
    5c4f:	90                   	nop

00005c50 <remote_audio_pcm_release_buffer>:
    5c50:	55                   	push   %ebp
    5c51:	89 e5                	mov    %esp,%ebp
    5c53:	53                   	push   %ebx
    5c54:	50                   	push   %eax
    5c55:	8b 45 0c             	mov    0xc(%ebp),%eax
    5c58:	8b 55 08             	mov    0x8(%ebp),%edx
    5c5b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    5c5e:	8b 40 14             	mov    0x14(%eax),%eax
    5c61:	85 c0                	test   %eax,%eax
    5c63:	74 1b                	je     5c80 <remote_audio_pcm_release_buffer+0x30>
    5c65:	83 ec 0c             	sub    $0xc,%esp
    5c68:	52                   	push   %edx
    5c69:	ff d0                	call   *%eax
    5c6b:	89 5d 08             	mov    %ebx,0x8(%ebp)
    5c6e:	83 c4 10             	add    $0x10,%esp
    5c71:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5c74:	89 45 0c             	mov    %eax,0xc(%ebp)
    5c77:	c9                   	leave  
    5c78:	e9 e3 99 00 00       	jmp    f660 <async_answer_0@plt>
    5c7d:	8d 76 00             	lea    0x0(%esi),%esi
    5c80:	89 5d 08             	mov    %ebx,0x8(%ebp)
    5c83:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    5c88:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5c8b:	89 45 0c             	mov    %eax,0xc(%ebp)
    5c8e:	c9                   	leave  
    5c8f:	e9 cc 99 00 00       	jmp    f660 <async_answer_0@plt>
    5c94:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5c9a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00005ca0 <remote_audio_pcm_events_unregister>:
    5ca0:	55                   	push   %ebp
    5ca1:	89 e5                	mov    %esp,%ebp
    5ca3:	57                   	push   %edi
    5ca4:	56                   	push   %esi
    5ca5:	53                   	push   %ebx
    5ca6:	83 ec 0c             	sub    $0xc,%esp
    5ca9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    5cac:	8b 75 08             	mov    0x8(%ebp),%esi
    5caf:	8b 7d 10             	mov    0x10(%ebp),%edi
    5cb2:	8b 43 1c             	mov    0x1c(%ebx),%eax
    5cb5:	85 c0                	test   %eax,%eax
    5cb7:	74 3f                	je     5cf8 <remote_audio_pcm_events_unregister+0x58>
    5cb9:	8b 4b 18             	mov    0x18(%ebx),%ecx
    5cbc:	85 c9                	test   %ecx,%ecx
    5cbe:	74 38                	je     5cf8 <remote_audio_pcm_events_unregister+0x58>
    5cc0:	83 ec 0c             	sub    $0xc,%esp
    5cc3:	56                   	push   %esi
    5cc4:	ff d0                	call   *%eax
    5cc6:	83 c4 10             	add    $0x10,%esp
    5cc9:	85 c0                	test   %eax,%eax
    5ccb:	74 14                	je     5ce1 <remote_audio_pcm_events_unregister+0x41>
    5ccd:	83 ec 0c             	sub    $0xc,%esp
    5cd0:	50                   	push   %eax
    5cd1:	e8 9a 98 00 00       	call   f570 <async_hangup@plt>
    5cd6:	58                   	pop    %eax
    5cd7:	5a                   	pop    %edx
    5cd8:	6a 00                	push   $0x0
    5cda:	56                   	push   %esi
    5cdb:	ff 53 18             	call   *0x18(%ebx)
    5cde:	83 c4 10             	add    $0x10,%esp
    5ce1:	89 7d 08             	mov    %edi,0x8(%ebp)
    5ce4:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
    5ceb:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5cee:	5b                   	pop    %ebx
    5cef:	5e                   	pop    %esi
    5cf0:	5f                   	pop    %edi
    5cf1:	5d                   	pop    %ebp
    5cf2:	e9 69 99 00 00       	jmp    f660 <async_answer_0@plt>
    5cf7:	90                   	nop
    5cf8:	89 7d 08             	mov    %edi,0x8(%ebp)
    5cfb:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    5d02:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5d05:	5b                   	pop    %ebx
    5d06:	5e                   	pop    %esi
    5d07:	5f                   	pop    %edi
    5d08:	5d                   	pop    %ebp
    5d09:	e9 52 99 00 00       	jmp    f660 <async_answer_0@plt>
    5d0e:	66 90                	xchg   %ax,%ax

00005d10 <remote_audio_pcm_get_buffer_pos>:
    5d10:	55                   	push   %ebp
    5d11:	89 e5                	mov    %esp,%ebp
    5d13:	83 ec 18             	sub    $0x18,%esp
    5d16:	8b 45 0c             	mov    0xc(%ebp),%eax
    5d19:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    5d20:	8b 40 0c             	mov    0xc(%eax),%eax
    5d23:	85 c0                	test   %eax,%eax
    5d25:	74 29                	je     5d50 <remote_audio_pcm_get_buffer_pos+0x40>
    5d27:	8b 4d 08             	mov    0x8(%ebp),%ecx
    5d2a:	52                   	push   %edx
    5d2b:	52                   	push   %edx
    5d2c:	8d 55 f4             	lea    -0xc(%ebp),%edx
    5d2f:	52                   	push   %edx
    5d30:	51                   	push   %ecx
    5d31:	ff d0                	call   *%eax
    5d33:	8b 55 f4             	mov    -0xc(%ebp),%edx
    5d36:	83 c4 10             	add    $0x10,%esp
    5d39:	51                   	push   %ecx
    5d3a:	52                   	push   %edx
    5d3b:	50                   	push   %eax
    5d3c:	8b 45 10             	mov    0x10(%ebp),%eax
    5d3f:	50                   	push   %eax
    5d40:	e8 5b 9b 00 00       	call   f8a0 <async_answer_1@plt>
    5d45:	83 c4 10             	add    $0x10,%esp
    5d48:	c9                   	leave  
    5d49:	c3                   	ret    
    5d4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5d50:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    5d55:	31 d2                	xor    %edx,%edx
    5d57:	eb e0                	jmp    5d39 <remote_audio_pcm_get_buffer_pos+0x29>
    5d59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00005d60 <remote_audio_pcm_query_caps>:
    5d60:	55                   	push   %ebp
    5d61:	89 e5                	mov    %esp,%ebp
    5d63:	53                   	push   %ebx
    5d64:	53                   	push   %ebx
    5d65:	8b 45 0c             	mov    0xc(%ebp),%eax
    5d68:	8b 55 08             	mov    0x8(%ebp),%edx
    5d6b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    5d6e:	8b 4d 14             	mov    0x14(%ebp),%ecx
    5d71:	8b 40 08             	mov    0x8(%eax),%eax
    5d74:	85 c0                	test   %eax,%eax
    5d76:	74 28                	je     5da0 <remote_audio_pcm_query_caps+0x40>
    5d78:	83 ec 08             	sub    $0x8,%esp
    5d7b:	8b 49 08             	mov    0x8(%ecx),%ecx
    5d7e:	51                   	push   %ecx
    5d7f:	52                   	push   %edx
    5d80:	ff d0                	call   *%eax
    5d82:	89 5d 08             	mov    %ebx,0x8(%ebp)
    5d85:	83 c4 10             	add    $0x10,%esp
    5d88:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5d8b:	89 45 10             	mov    %eax,0x10(%ebp)
    5d8e:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
    5d95:	c9                   	leave  
    5d96:	e9 05 9b 00 00       	jmp    f8a0 <async_answer_1@plt>
    5d9b:	90                   	nop
    5d9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5da0:	89 5d 08             	mov    %ebx,0x8(%ebp)
    5da3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5da6:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    5dad:	c9                   	leave  
    5dae:	e9 ad 98 00 00       	jmp    f660 <async_answer_0@plt>
    5db3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5db9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00005dc0 <remote_audio_pcm_get_buffer>:
    5dc0:	55                   	push   %ebp
    5dc1:	89 e5                	mov    %esp,%ebp
    5dc3:	56                   	push   %esi
    5dc4:	53                   	push   %ebx
    5dc5:	83 ec 10             	sub    $0x10,%esp
    5dc8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    5dcb:	8b 43 10             	mov    0x10(%ebx),%eax
    5dce:	85 c0                	test   %eax,%eax
    5dd0:	0f 84 d2 00 00 00    	je     5ea8 <remote_audio_pcm_get_buffer+0xe8>
    5dd6:	8b 53 14             	mov    0x14(%ebx),%edx
    5dd9:	85 d2                	test   %edx,%edx
    5ddb:	0f 84 c7 00 00 00    	je     5ea8 <remote_audio_pcm_get_buffer+0xe8>
    5de1:	8b 55 14             	mov    0x14(%ebp),%edx
    5de4:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
    5deb:	8b 52 08             	mov    0x8(%edx),%edx
    5dee:	56                   	push   %esi
    5def:	89 55 ec             	mov    %edx,-0x14(%ebp)
    5df2:	8d 55 ec             	lea    -0x14(%ebp),%edx
    5df5:	52                   	push   %edx
    5df6:	8d 55 e8             	lea    -0x18(%ebp),%edx
    5df9:	52                   	push   %edx
    5dfa:	8b 55 08             	mov    0x8(%ebp),%edx
    5dfd:	52                   	push   %edx
    5dfe:	ff d0                	call   *%eax
    5e00:	83 c4 0c             	add    $0xc,%esp
    5e03:	8b 4d ec             	mov    -0x14(%ebp),%ecx
    5e06:	89 c6                	mov    %eax,%esi
    5e08:	51                   	push   %ecx
    5e09:	50                   	push   %eax
    5e0a:	8b 45 10             	mov    0x10(%ebp),%eax
    5e0d:	50                   	push   %eax
    5e0e:	e8 8d 9a 00 00       	call   f8a0 <async_answer_1@plt>
    5e13:	83 c4 10             	add    $0x10,%esp
    5e16:	85 f6                	test   %esi,%esi
    5e18:	74 0e                	je     5e28 <remote_audio_pcm_get_buffer+0x68>
    5e1a:	8d 65 f8             	lea    -0x8(%ebp),%esp
    5e1d:	5b                   	pop    %ebx
    5e1e:	5e                   	pop    %esi
    5e1f:	5d                   	pop    %ebp
    5e20:	c3                   	ret    
    5e21:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5e28:	8b 4d ec             	mov    -0x14(%ebp),%ecx
    5e2b:	85 c9                	test   %ecx,%ecx
    5e2d:	74 eb                	je     5e1a <remote_audio_pcm_get_buffer+0x5a>
    5e2f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
    5e36:	56                   	push   %esi
    5e37:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    5e3e:	56                   	push   %esi
    5e3f:	68 b4 db 00 00       	push   $0xdbb4
    5e44:	6a 05                	push   $0x5
    5e46:	e8 45 76 00 00       	call   d490 <ddf_msg>
    5e4b:	58                   	pop    %eax
    5e4c:	8d 45 f0             	lea    -0x10(%ebp),%eax
    5e4f:	5a                   	pop    %edx
    5e50:	50                   	push   %eax
    5e51:	8d 45 f4             	lea    -0xc(%ebp),%eax
    5e54:	50                   	push   %eax
    5e55:	e8 e6 99 00 00       	call   f840 <async_share_in_receive@plt>
    5e5a:	83 c4 10             	add    $0x10,%esp
    5e5d:	84 c0                	test   %al,%al
    5e5f:	74 5f                	je     5ec0 <remote_audio_pcm_get_buffer+0x100>
    5e61:	50                   	push   %eax
    5e62:	50                   	push   %eax
    5e63:	68 78 dd 00 00       	push   $0xdd78
    5e68:	6a 05                	push   $0x5
    5e6a:	e8 21 76 00 00       	call   d490 <ddf_msg>
    5e6f:	8b 45 ec             	mov    -0x14(%ebp),%eax
    5e72:	83 c4 10             	add    $0x10,%esp
    5e75:	39 45 f0             	cmp    %eax,-0x10(%ebp)
    5e78:	74 76                	je     5ef0 <remote_audio_pcm_get_buffer+0x130>
    5e7a:	50                   	push   %eax
    5e7b:	50                   	push   %eax
    5e7c:	68 98 dd 00 00       	push   $0xdd98
    5e81:	6a 04                	push   $0x4
    5e83:	e8 08 76 00 00       	call   d490 <ddf_msg>
    5e88:	8b 55 08             	mov    0x8(%ebp),%edx
    5e8b:	58                   	pop    %eax
    5e8c:	52                   	push   %edx
    5e8d:	ff 53 14             	call   *0x14(%ebx)
    5e90:	8b 75 f4             	mov    -0xc(%ebp),%esi
    5e93:	59                   	pop    %ecx
    5e94:	5b                   	pop    %ebx
    5e95:	6a fd                	push   $0xfffffffd
    5e97:	56                   	push   %esi
    5e98:	e8 c3 97 00 00       	call   f660 <async_answer_0@plt>
    5e9d:	83 c4 10             	add    $0x10,%esp
    5ea0:	e9 75 ff ff ff       	jmp    5e1a <remote_audio_pcm_get_buffer+0x5a>
    5ea5:	8d 76 00             	lea    0x0(%esi),%esi
    5ea8:	50                   	push   %eax
    5ea9:	50                   	push   %eax
    5eaa:	8b 45 10             	mov    0x10(%ebp),%eax
    5ead:	6a f5                	push   $0xfffffff5
    5eaf:	50                   	push   %eax
    5eb0:	e8 ab 97 00 00       	call   f660 <async_answer_0@plt>
    5eb5:	83 c4 10             	add    $0x10,%esp
    5eb8:	8d 65 f8             	lea    -0x8(%ebp),%esp
    5ebb:	5b                   	pop    %ebx
    5ebc:	5e                   	pop    %esi
    5ebd:	5d                   	pop    %ebp
    5ebe:	c3                   	ret    
    5ebf:	90                   	nop
    5ec0:	50                   	push   %eax
    5ec1:	50                   	push   %eax
    5ec2:	68 cd db 00 00       	push   $0xdbcd
    5ec7:	6a 04                	push   $0x4
    5ec9:	e8 c2 75 00 00       	call   d490 <ddf_msg>
    5ece:	58                   	pop    %eax
    5ecf:	8b 45 08             	mov    0x8(%ebp),%eax
    5ed2:	50                   	push   %eax
    5ed3:	ff 53 14             	call   *0x14(%ebx)
    5ed6:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    5ed9:	58                   	pop    %eax
    5eda:	5a                   	pop    %edx
    5edb:	6a f8                	push   $0xfffffff8
    5edd:	51                   	push   %ecx
    5ede:	e8 7d 97 00 00       	call   f660 <async_answer_0@plt>
    5ee3:	83 c4 10             	add    $0x10,%esp
    5ee6:	e9 2f ff ff ff       	jmp    5e1a <remote_audio_pcm_get_buffer+0x5a>
    5eeb:	90                   	nop
    5eec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5ef0:	50                   	push   %eax
    5ef1:	50                   	push   %eax
    5ef2:	68 e9 db 00 00       	push   $0xdbe9
    5ef7:	6a 05                	push   $0x5
    5ef9:	e8 92 75 00 00       	call   d490 <ddf_msg>
    5efe:	83 c4 0c             	add    $0xc,%esp
    5f01:	8b 45 e8             	mov    -0x18(%ebp),%eax
    5f04:	6a 03                	push   $0x3
    5f06:	50                   	push   %eax
    5f07:	8b 45 f4             	mov    -0xc(%ebp),%eax
    5f0a:	50                   	push   %eax
    5f0b:	e8 d0 99 00 00       	call   f8e0 <async_share_in_finalize@plt>
    5f10:	83 c4 10             	add    $0x10,%esp
    5f13:	85 c0                	test   %eax,%eax
    5f15:	74 1e                	je     5f35 <remote_audio_pcm_get_buffer+0x175>
    5f17:	51                   	push   %ecx
    5f18:	51                   	push   %ecx
    5f19:	68 01 dc 00 00       	push   $0xdc01
    5f1e:	6a 04                	push   $0x4
    5f20:	e8 6b 75 00 00       	call   d490 <ddf_msg>
    5f25:	8b 45 08             	mov    0x8(%ebp),%eax
    5f28:	5e                   	pop    %esi
    5f29:	50                   	push   %eax
    5f2a:	ff 53 14             	call   *0x14(%ebx)
    5f2d:	83 c4 10             	add    $0x10,%esp
    5f30:	e9 e5 fe ff ff       	jmp    5e1a <remote_audio_pcm_get_buffer+0x5a>
    5f35:	8b 55 f0             	mov    -0x10(%ebp),%edx
    5f38:	50                   	push   %eax
    5f39:	52                   	push   %edx
    5f3a:	68 19 dc 00 00       	push   $0xdc19
    5f3f:	6a 05                	push   $0x5
    5f41:	e8 4a 75 00 00       	call   d490 <ddf_msg>
    5f46:	83 c4 10             	add    $0x10,%esp
    5f49:	e9 cc fe ff ff       	jmp    5e1a <remote_audio_pcm_get_buffer+0x5a>
    5f4e:	66 90                	xchg   %ax,%ax

00005f50 <remote_audio_pcm_test_format>:
    5f50:	55                   	push   %ebp
    5f51:	89 e5                	mov    %esp,%ebp
    5f53:	53                   	push   %ebx
    5f54:	83 ec 14             	sub    $0x14,%esp
    5f57:	8b 45 14             	mov    0x14(%ebp),%eax
    5f5a:	8b 55 0c             	mov    0xc(%ebp),%edx
    5f5d:	8b 48 08             	mov    0x8(%eax),%ecx
    5f60:	8b 58 0c             	mov    0xc(%eax),%ebx
    5f63:	8b 52 04             	mov    0x4(%edx),%edx
    5f66:	8b 40 10             	mov    0x10(%eax),%eax
    5f69:	89 4d ec             	mov    %ecx,-0x14(%ebp)
    5f6c:	89 5d f0             	mov    %ebx,-0x10(%ebp)
    5f6f:	89 45 f4             	mov    %eax,-0xc(%ebp)
    5f72:	85 d2                	test   %edx,%edx
    5f74:	74 3a                	je     5fb0 <remote_audio_pcm_test_format+0x60>
    5f76:	8d 45 f4             	lea    -0xc(%ebp),%eax
    5f79:	8b 4d 08             	mov    0x8(%ebp),%ecx
    5f7c:	50                   	push   %eax
    5f7d:	8d 45 f0             	lea    -0x10(%ebp),%eax
    5f80:	50                   	push   %eax
    5f81:	8d 45 ec             	lea    -0x14(%ebp),%eax
    5f84:	50                   	push   %eax
    5f85:	51                   	push   %ecx
    5f86:	ff d2                	call   *%edx
    5f88:	8b 55 f4             	mov    -0xc(%ebp),%edx
    5f8b:	8b 5d f0             	mov    -0x10(%ebp),%ebx
    5f8e:	8b 4d ec             	mov    -0x14(%ebp),%ecx
    5f91:	83 c4 10             	add    $0x10,%esp
    5f94:	83 ec 0c             	sub    $0xc,%esp
    5f97:	52                   	push   %edx
    5f98:	53                   	push   %ebx
    5f99:	51                   	push   %ecx
    5f9a:	50                   	push   %eax
    5f9b:	8b 45 10             	mov    0x10(%ebp),%eax
    5f9e:	50                   	push   %eax
    5f9f:	e8 4c 99 00 00       	call   f8f0 <async_answer_3@plt>
    5fa4:	83 c4 20             	add    $0x20,%esp
    5fa7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5faa:	c9                   	leave  
    5fab:	c3                   	ret    
    5fac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5fb0:	89 c2                	mov    %eax,%edx
    5fb2:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    5fb7:	eb db                	jmp    5f94 <remote_audio_pcm_test_format+0x44>
    5fb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00005fc0 <remote_audio_pcm_events_register>:
    5fc0:	55                   	push   %ebp
    5fc1:	89 e5                	mov    %esp,%ebp
    5fc3:	57                   	push   %edi
    5fc4:	56                   	push   %esi
    5fc5:	53                   	push   %ebx
    5fc6:	83 ec 3c             	sub    $0x3c,%esp
    5fc9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    5fcc:	8b 7b 1c             	mov    0x1c(%ebx),%edi
    5fcf:	85 ff                	test   %edi,%edi
    5fd1:	0f 84 91 00 00 00    	je     6068 <remote_audio_pcm_events_register+0xa8>
    5fd7:	8b 73 18             	mov    0x18(%ebx),%esi
    5fda:	85 f6                	test   %esi,%esi
    5fdc:	0f 84 86 00 00 00    	je     6068 <remote_audio_pcm_events_register+0xa8>
    5fe2:	8b 75 10             	mov    0x10(%ebp),%esi
    5fe5:	51                   	push   %ecx
    5fe6:	51                   	push   %ecx
    5fe7:	6a 00                	push   $0x0
    5fe9:	56                   	push   %esi
    5fea:	8d 75 c4             	lea    -0x3c(%ebp),%esi
    5fed:	e8 6e 96 00 00       	call   f660 <async_answer_0@plt>
    5ff2:	5f                   	pop    %edi
    5ff3:	58                   	pop    %eax
    5ff4:	6a 00                	push   $0x0
    5ff6:	56                   	push   %esi
    5ff7:	e8 74 98 00 00       	call   f870 <async_get_call_timeout@plt>
    5ffc:	89 c7                	mov    %eax,%edi
    5ffe:	58                   	pop    %eax
    5fff:	5a                   	pop    %edx
    6000:	56                   	push   %esi
    6001:	6a 00                	push   $0x0
    6003:	e8 58 97 00 00       	call   f760 <async_callback_receive_start@plt>
    6008:	83 c4 10             	add    $0x10,%esp
    600b:	89 c6                	mov    %eax,%esi
    600d:	85 c0                	test   %eax,%eax
    600f:	74 6f                	je     6080 <remote_audio_pcm_events_register+0xc0>
    6011:	50                   	push   %eax
    6012:	50                   	push   %eax
    6013:	8b 45 08             	mov    0x8(%ebp),%eax
    6016:	56                   	push   %esi
    6017:	50                   	push   %eax
    6018:	ff 53 18             	call   *0x18(%ebx)
    601b:	83 c4 10             	add    $0x10,%esp
    601e:	89 c3                	mov    %eax,%ebx
    6020:	85 c0                	test   %eax,%eax
    6022:	74 2c                	je     6050 <remote_audio_pcm_events_register+0x90>
    6024:	52                   	push   %edx
    6025:	52                   	push   %edx
    6026:	68 36 dc 00 00       	push   $0xdc36
    602b:	6a 04                	push   $0x4
    602d:	e8 5e 74 00 00       	call   d490 <ddf_msg>
    6032:	89 34 24             	mov    %esi,(%esp)
    6035:	e8 36 95 00 00       	call   f570 <async_hangup@plt>
    603a:	59                   	pop    %ecx
    603b:	5e                   	pop    %esi
    603c:	53                   	push   %ebx
    603d:	57                   	push   %edi
    603e:	e8 1d 96 00 00       	call   f660 <async_answer_0@plt>
    6043:	83 c4 10             	add    $0x10,%esp
    6046:	8d 65 f4             	lea    -0xc(%ebp),%esp
    6049:	5b                   	pop    %ebx
    604a:	5e                   	pop    %esi
    604b:	5f                   	pop    %edi
    604c:	5d                   	pop    %ebp
    604d:	c3                   	ret    
    604e:	66 90                	xchg   %ax,%ax
    6050:	50                   	push   %eax
    6051:	50                   	push   %eax
    6052:	6a 00                	push   $0x0
    6054:	57                   	push   %edi
    6055:	e8 06 96 00 00       	call   f660 <async_answer_0@plt>
    605a:	83 c4 10             	add    $0x10,%esp
    605d:	8d 65 f4             	lea    -0xc(%ebp),%esp
    6060:	5b                   	pop    %ebx
    6061:	5e                   	pop    %esi
    6062:	5f                   	pop    %edi
    6063:	5d                   	pop    %ebp
    6064:	c3                   	ret    
    6065:	8d 76 00             	lea    0x0(%esi),%esi
    6068:	8b 5d 10             	mov    0x10(%ebp),%ebx
    606b:	51                   	push   %ecx
    606c:	51                   	push   %ecx
    606d:	6a f5                	push   $0xfffffff5
    606f:	53                   	push   %ebx
    6070:	e8 eb 95 00 00       	call   f660 <async_answer_0@plt>
    6075:	83 c4 10             	add    $0x10,%esp
    6078:	8d 65 f4             	lea    -0xc(%ebp),%esp
    607b:	5b                   	pop    %ebx
    607c:	5e                   	pop    %esi
    607d:	5f                   	pop    %edi
    607e:	5d                   	pop    %ebp
    607f:	c3                   	ret    
    6080:	50                   	push   %eax
    6081:	50                   	push   %eax
    6082:	68 c0 dd 00 00       	push   $0xddc0
    6087:	6a 04                	push   $0x4
    6089:	e8 02 74 00 00       	call   d490 <ddf_msg>
    608e:	58                   	pop    %eax
    608f:	5a                   	pop    %edx
    6090:	68 06 d5 ff ff       	push   $0xffffd506
    6095:	57                   	push   %edi
    6096:	e8 c5 95 00 00       	call   f660 <async_answer_0@plt>
    609b:	83 c4 10             	add    $0x10,%esp
    609e:	eb a6                	jmp    6046 <remote_audio_pcm_events_register+0x86>

000060a0 <remote_audio_pcm_get_info_str>:
    60a0:	55                   	push   %ebp
    60a1:	89 e5                	mov    %esp,%ebp
    60a3:	56                   	push   %esi
    60a4:	53                   	push   %ebx
    60a5:	83 ec 10             	sub    $0x10,%esp
    60a8:	8b 45 0c             	mov    0xc(%ebp),%eax
    60ab:	8b 00                	mov    (%eax),%eax
    60ad:	85 c0                	test   %eax,%eax
    60af:	0f 84 ab 00 00 00    	je     6160 <remote_audio_pcm_get_info_str+0xc0>
    60b5:	8b 4d 08             	mov    0x8(%ebp),%ecx
    60b8:	52                   	push   %edx
    60b9:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    60c0:	52                   	push   %edx
    60c1:	8d 55 ec             	lea    -0x14(%ebp),%edx
    60c4:	52                   	push   %edx
    60c5:	51                   	push   %ecx
    60c6:	ff d0                	call   *%eax
    60c8:	83 c4 10             	add    $0x10,%esp
    60cb:	89 c6                	mov    %eax,%esi
    60cd:	8b 45 ec             	mov    -0x14(%ebp),%eax
    60d0:	85 c0                	test   %eax,%eax
    60d2:	74 5c                	je     6130 <remote_audio_pcm_get_info_str+0x90>
    60d4:	83 ec 0c             	sub    $0xc,%esp
    60d7:	50                   	push   %eax
    60d8:	e8 a3 97 00 00       	call   f880 <str_size@plt>
    60dd:	83 c4 0c             	add    $0xc,%esp
    60e0:	8d 58 01             	lea    0x1(%eax),%ebx
    60e3:	8b 45 10             	mov    0x10(%ebp),%eax
    60e6:	53                   	push   %ebx
    60e7:	56                   	push   %esi
    60e8:	50                   	push   %eax
    60e9:	e8 b2 97 00 00       	call   f8a0 <async_answer_1@plt>
    60ee:	83 c4 10             	add    $0x10,%esp
    60f1:	85 f6                	test   %esi,%esi
    60f3:	75 2f                	jne    6124 <remote_audio_pcm_get_info_str+0x84>
    60f5:	85 db                	test   %ebx,%ebx
    60f7:	74 2b                	je     6124 <remote_audio_pcm_get_info_str+0x84>
    60f9:	50                   	push   %eax
    60fa:	50                   	push   %eax
    60fb:	8d 45 f0             	lea    -0x10(%ebp),%eax
    60fe:	50                   	push   %eax
    60ff:	8d 45 f4             	lea    -0xc(%ebp),%eax
    6102:	50                   	push   %eax
    6103:	e8 08 97 00 00       	call   f810 <async_data_read_receive@plt>
    6108:	83 c4 10             	add    $0x10,%esp
    610b:	84 c0                	test   %al,%al
    610d:	74 69                	je     6178 <remote_audio_pcm_get_info_str+0xd8>
    610f:	3b 5d f0             	cmp    -0x10(%ebp),%ebx
    6112:	74 34                	je     6148 <remote_audio_pcm_get_info_str+0xa8>
    6114:	50                   	push   %eax
    6115:	50                   	push   %eax
    6116:	8b 45 f4             	mov    -0xc(%ebp),%eax
    6119:	6a fd                	push   $0xfffffffd
    611b:	50                   	push   %eax
    611c:	e8 3f 95 00 00       	call   f660 <async_answer_0@plt>
    6121:	83 c4 10             	add    $0x10,%esp
    6124:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6127:	5b                   	pop    %ebx
    6128:	5e                   	pop    %esi
    6129:	5d                   	pop    %ebp
    612a:	c3                   	ret    
    612b:	90                   	nop
    612c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6130:	8b 55 10             	mov    0x10(%ebp),%edx
    6133:	50                   	push   %eax
    6134:	6a 00                	push   $0x0
    6136:	56                   	push   %esi
    6137:	52                   	push   %edx
    6138:	e8 63 97 00 00       	call   f8a0 <async_answer_1@plt>
    613d:	83 c4 10             	add    $0x10,%esp
    6140:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6143:	5b                   	pop    %ebx
    6144:	5e                   	pop    %esi
    6145:	5d                   	pop    %ebp
    6146:	c3                   	ret    
    6147:	90                   	nop
    6148:	8b 75 f4             	mov    -0xc(%ebp),%esi
    614b:	51                   	push   %ecx
    614c:	53                   	push   %ebx
    614d:	8b 5d ec             	mov    -0x14(%ebp),%ebx
    6150:	53                   	push   %ebx
    6151:	56                   	push   %esi
    6152:	e8 99 94 00 00       	call   f5f0 <async_data_read_finalize@plt>
    6157:	83 c4 10             	add    $0x10,%esp
    615a:	eb c8                	jmp    6124 <remote_audio_pcm_get_info_str+0x84>
    615c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6160:	8b 75 10             	mov    0x10(%ebp),%esi
    6163:	53                   	push   %ebx
    6164:	53                   	push   %ebx
    6165:	6a f5                	push   $0xfffffff5
    6167:	56                   	push   %esi
    6168:	e8 f3 94 00 00       	call   f660 <async_answer_0@plt>
    616d:	83 c4 10             	add    $0x10,%esp
    6170:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6173:	5b                   	pop    %ebx
    6174:	5e                   	pop    %esi
    6175:	5d                   	pop    %ebp
    6176:	c3                   	ret    
    6177:	90                   	nop
    6178:	50                   	push   %eax
    6179:	50                   	push   %eax
    617a:	8b 45 f4             	mov    -0xc(%ebp),%eax
    617d:	6a f8                	push   $0xfffffff8
    617f:	50                   	push   %eax
    6180:	e8 db 94 00 00       	call   f660 <async_answer_0@plt>
    6185:	83 c4 10             	add    $0x10,%esp
    6188:	eb 9a                	jmp    6124 <remote_audio_pcm_get_info_str+0x84>
    618a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00006190 <audio_pcm_cap_str>:
    6190:	55                   	push   %ebp
    6191:	b8 54 dc 00 00       	mov    $0xdc54,%eax
    6196:	89 e5                	mov    %esp,%ebp
    6198:	8b 55 08             	mov    0x8(%ebp),%edx
    619b:	83 fa 06             	cmp    $0x6,%edx
    619e:	77 07                	ja     61a7 <audio_pcm_cap_str+0x17>
    61a0:	8b 04 95 18 ee 00 00 	mov    0xee18(,%edx,4),%eax
    61a7:	5d                   	pop    %ebp
    61a8:	c3                   	ret    
    61a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000061b0 <audio_pcm_event_str>:
    61b0:	55                   	push   %ebp
    61b1:	b8 60 dc 00 00       	mov    $0xdc60,%eax
    61b6:	89 e5                	mov    %esp,%ebp
    61b8:	8b 55 08             	mov    0x8(%ebp),%edx
    61bb:	81 fa 05 04 00 00    	cmp    $0x405,%edx
    61c1:	77 07                	ja     61ca <audio_pcm_event_str+0x1a>
    61c3:	8b 04 95 00 de 00 00 	mov    0xde00(,%edx,4),%eax
    61ca:	5d                   	pop    %ebp
    61cb:	c3                   	ret    
    61cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000061d0 <audio_pcm_open_default>:
    61d0:	55                   	push   %ebp
    61d1:	89 e5                	mov    %esp,%ebp
    61d3:	83 ec 28             	sub    $0x28,%esp
    61d6:	80 3d 5c 19 01 00 00 	cmpb   $0x0,0x1195c
    61dd:	75 20                	jne    61ff <audio_pcm_open_default+0x2f>
    61df:	50                   	push   %eax
    61e0:	6a 01                	push   $0x1
    61e2:	68 58 19 01 00       	push   $0x11958
    61e7:	68 6e dc 00 00       	push   $0xdc6e
    61ec:	e8 1f 93 00 00       	call   f510 <loc_category_get_id@plt>
    61f1:	83 c4 10             	add    $0x10,%esp
    61f4:	85 c0                	test   %eax,%eax
    61f6:	75 68                	jne    6260 <audio_pcm_open_default+0x90>
    61f8:	c6 05 5c 19 01 00 01 	movb   $0x1,0x1195c
    61ff:	8d 45 f4             	lea    -0xc(%ebp),%eax
    6202:	51                   	push   %ecx
    6203:	50                   	push   %eax
    6204:	8d 45 f0             	lea    -0x10(%ebp),%eax
    6207:	50                   	push   %eax
    6208:	a1 58 19 01 00       	mov    0x11958,%eax
    620d:	50                   	push   %eax
    620e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
    6215:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    621c:	e8 3f 96 00 00       	call   f860 <loc_category_get_svcs@plt>
    6221:	83 c4 10             	add    $0x10,%esp
    6224:	85 c0                	test   %eax,%eax
    6226:	75 38                	jne    6260 <audio_pcm_open_default+0x90>
    6228:	8b 55 f4             	mov    -0xc(%ebp),%edx
    622b:	85 d2                	test   %edx,%edx
    622d:	75 19                	jne    6248 <audio_pcm_open_default+0x78>
    622f:	83 ec 0c             	sub    $0xc,%esp
    6232:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    6235:	8b 45 f0             	mov    -0x10(%ebp),%eax
    6238:	50                   	push   %eax
    6239:	e8 62 97 00 00       	call   f9a0 <free@plt>
    623e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    6241:	83 c4 10             	add    $0x10,%esp
    6244:	c9                   	leave  
    6245:	c3                   	ret    
    6246:	66 90                	xchg   %ax,%ax
    6248:	8b 45 f0             	mov    -0x10(%ebp),%eax
    624b:	52                   	push   %edx
    624c:	6a 01                	push   $0x1
    624e:	68 41 26 9b 41       	push   $0x419b2641
    6253:	8b 08                	mov    (%eax),%ecx
    6255:	51                   	push   %ecx
    6256:	e8 e5 92 00 00       	call   f540 <loc_service_connect@plt>
    625b:	83 c4 10             	add    $0x10,%esp
    625e:	eb cf                	jmp    622f <audio_pcm_open_default+0x5f>
    6260:	31 c0                	xor    %eax,%eax
    6262:	c9                   	leave  
    6263:	c3                   	ret    
    6264:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    626a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00006270 <audio_pcm_open>:
    6270:	55                   	push   %ebp
    6271:	89 e5                	mov    %esp,%ebp
    6273:	83 ec 1c             	sub    $0x1c,%esp
    6276:	8d 45 f4             	lea    -0xc(%ebp),%eax
    6279:	8b 4d 08             	mov    0x8(%ebp),%ecx
    627c:	6a 00                	push   $0x0
    627e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    6285:	50                   	push   %eax
    6286:	51                   	push   %ecx
    6287:	e8 44 96 00 00       	call   f8d0 <devman_fun_get_handle@plt>
    628c:	83 c4 10             	add    $0x10,%esp
    628f:	85 c0                	test   %eax,%eax
    6291:	75 15                	jne    62a8 <audio_pcm_open+0x38>
    6293:	8b 55 f4             	mov    -0xc(%ebp),%edx
    6296:	50                   	push   %eax
    6297:	50                   	push   %eax
    6298:	6a 01                	push   $0x1
    629a:	52                   	push   %edx
    629b:	e8 80 92 00 00       	call   f520 <devman_device_connect@plt>
    62a0:	83 c4 10             	add    $0x10,%esp
    62a3:	c9                   	leave  
    62a4:	c3                   	ret    
    62a5:	8d 76 00             	lea    0x0(%esi),%esi
    62a8:	31 c0                	xor    %eax,%eax
    62aa:	c9                   	leave  
    62ab:	c3                   	ret    
    62ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000062b0 <audio_pcm_open_service>:
    62b0:	55                   	push   %ebp
    62b1:	89 e5                	mov    %esp,%ebp
    62b3:	83 ec 0c             	sub    $0xc,%esp
    62b6:	8b 45 08             	mov    0x8(%ebp),%eax
    62b9:	6a 01                	push   $0x1
    62bb:	68 41 26 9b 41       	push   $0x419b2641
    62c0:	50                   	push   %eax
    62c1:	e8 7a 92 00 00       	call   f540 <loc_service_connect@plt>
    62c6:	c9                   	leave  
    62c7:	c3                   	ret    
    62c8:	90                   	nop
    62c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000062d0 <audio_pcm_close>:
    62d0:	55                   	push   %ebp
    62d1:	89 e5                	mov    %esp,%ebp
    62d3:	8b 45 08             	mov    0x8(%ebp),%eax
    62d6:	85 c0                	test   %eax,%eax
    62d8:	74 06                	je     62e0 <audio_pcm_close+0x10>
    62da:	5d                   	pop    %ebp
    62db:	e9 90 92 00 00       	jmp    f570 <async_hangup@plt>
    62e0:	5d                   	pop    %ebp
    62e1:	c3                   	ret    
    62e2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    62e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000062f0 <audio_pcm_get_info_str>:
    62f0:	55                   	push   %ebp
    62f1:	89 e5                	mov    %esp,%ebp
    62f3:	57                   	push   %edi
    62f4:	56                   	push   %esi
    62f5:	53                   	push   %ebx
    62f6:	83 ec 2c             	sub    $0x2c,%esp
    62f9:	8b 45 0c             	mov    0xc(%ebp),%eax
    62fc:	85 c0                	test   %eax,%eax
    62fe:	0f 84 ac 00 00 00    	je     63b0 <audio_pcm_get_info_str+0xc0>
    6304:	83 ec 0c             	sub    $0xc,%esp
    6307:	8b 45 08             	mov    0x8(%ebp),%eax
    630a:	50                   	push   %eax
    630b:	e8 a0 95 00 00       	call   f8b0 <async_exchange_begin@plt>
    6310:	83 c4 0c             	add    $0xc,%esp
    6313:	89 c6                	mov    %eax,%esi
    6315:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    6318:	6a 00                	push   $0x0
    631a:	6a 00                	push   $0x0
    631c:	6a 00                	push   $0x0
    631e:	6a 00                	push   $0x0
    6320:	50                   	push   %eax
    6321:	6a 00                	push   $0x0
    6323:	6a 00                	push   $0x0
    6325:	6a 00                	push   $0x0
    6327:	6a 00                	push   $0x0
    6329:	68 04 04 00 00       	push   $0x404
    632e:	56                   	push   %esi
    632f:	e8 1c 93 00 00       	call   f650 <async_req_fast@plt>
    6334:	83 c4 30             	add    $0x30,%esp
    6337:	89 c3                	mov    %eax,%ebx
    6339:	85 c0                	test   %eax,%eax
    633b:	75 2e                	jne    636b <audio_pcm_get_info_str+0x7b>
    633d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    6340:	57                   	push   %edi
    6341:	57                   	push   %edi
    6342:	50                   	push   %eax
    6343:	6a 01                	push   $0x1
    6345:	e8 a6 93 00 00       	call   f6f0 <calloc@plt>
    634a:	83 c4 10             	add    $0x10,%esp
    634d:	89 c7                	mov    %eax,%edi
    634f:	85 c0                	test   %eax,%eax
    6351:	74 64                	je     63b7 <audio_pcm_get_info_str+0xc7>
    6353:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    6356:	50                   	push   %eax
    6357:	52                   	push   %edx
    6358:	57                   	push   %edi
    6359:	56                   	push   %esi
    635a:	e8 c1 94 00 00       	call   f820 <async_data_read_start@plt>
    635f:	83 c4 10             	add    $0x10,%esp
    6362:	85 c0                	test   %eax,%eax
    6364:	75 22                	jne    6388 <audio_pcm_get_info_str+0x98>
    6366:	8b 45 0c             	mov    0xc(%ebp),%eax
    6369:	89 38                	mov    %edi,(%eax)
    636b:	83 ec 0c             	sub    $0xc,%esp
    636e:	56                   	push   %esi
    636f:	e8 4c 93 00 00       	call   f6c0 <async_exchange_end@plt>
    6374:	83 c4 10             	add    $0x10,%esp
    6377:	89 d8                	mov    %ebx,%eax
    6379:	8d 65 f4             	lea    -0xc(%ebp),%esp
    637c:	5b                   	pop    %ebx
    637d:	5e                   	pop    %esi
    637e:	5f                   	pop    %edi
    637f:	5d                   	pop    %ebp
    6380:	c3                   	ret    
    6381:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6388:	83 ec 0c             	sub    $0xc,%esp
    638b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    638e:	57                   	push   %edi
    638f:	e8 0c 96 00 00       	call   f9a0 <free@plt>
    6394:	89 34 24             	mov    %esi,(%esp)
    6397:	e8 24 93 00 00       	call   f6c0 <async_exchange_end@plt>
    639c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    639f:	83 c4 10             	add    $0x10,%esp
    63a2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    63a5:	5b                   	pop    %ebx
    63a6:	5e                   	pop    %esi
    63a7:	5f                   	pop    %edi
    63a8:	5d                   	pop    %ebp
    63a9:	c3                   	ret    
    63aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    63b0:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    63b5:	eb c2                	jmp    6379 <audio_pcm_get_info_str+0x89>
    63b7:	51                   	push   %ecx
    63b8:	6a 00                	push   $0x0
    63ba:	6a ff                	push   $0xffffffff
    63bc:	56                   	push   %esi
    63bd:	e8 5e 94 00 00       	call   f820 <async_data_read_start@plt>
    63c2:	89 34 24             	mov    %esi,(%esp)
    63c5:	e8 f6 92 00 00       	call   f6c0 <async_exchange_end@plt>
    63ca:	83 c4 10             	add    $0x10,%esp
    63cd:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    63d2:	eb a5                	jmp    6379 <audio_pcm_get_info_str+0x89>
    63d4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    63da:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000063e0 <audio_pcm_query_cap>:
    63e0:	55                   	push   %ebp
    63e1:	89 e5                	mov    %esp,%ebp
    63e3:	53                   	push   %ebx
    63e4:	83 ec 30             	sub    $0x30,%esp
    63e7:	8b 45 08             	mov    0x8(%ebp),%eax
    63ea:	50                   	push   %eax
    63eb:	e8 c0 94 00 00       	call   f8b0 <async_exchange_begin@plt>
    63f0:	83 c4 0c             	add    $0xc,%esp
    63f3:	89 c3                	mov    %eax,%ebx
    63f5:	8b 55 0c             	mov    0xc(%ebp),%edx
    63f8:	8d 45 f4             	lea    -0xc(%ebp),%eax
    63fb:	6a 00                	push   $0x0
    63fd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    6404:	6a 00                	push   $0x0
    6406:	6a 00                	push   $0x0
    6408:	6a 00                	push   $0x0
    640a:	50                   	push   %eax
    640b:	6a 00                	push   $0x0
    640d:	6a 00                	push   $0x0
    640f:	52                   	push   %edx
    6410:	6a 01                	push   $0x1
    6412:	68 04 04 00 00       	push   $0x404
    6417:	53                   	push   %ebx
    6418:	e8 33 92 00 00       	call   f650 <async_req_fast@plt>
    641d:	83 c4 24             	add    $0x24,%esp
    6420:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    6423:	53                   	push   %ebx
    6424:	e8 97 92 00 00       	call   f6c0 <async_exchange_end@plt>
    6429:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    642c:	83 c4 10             	add    $0x10,%esp
    642f:	85 c0                	test   %eax,%eax
    6431:	75 03                	jne    6436 <audio_pcm_query_cap+0x56>
    6433:	8b 45 f4             	mov    -0xc(%ebp),%eax
    6436:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6439:	c9                   	leave  
    643a:	c3                   	ret    
    643b:	90                   	nop
    643c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00006440 <audio_pcm_get_buffer_pos>:
    6440:	55                   	push   %ebp
    6441:	89 e5                	mov    %esp,%ebp
    6443:	56                   	push   %esi
    6444:	53                   	push   %ebx
    6445:	83 ec 20             	sub    $0x20,%esp
    6448:	8b 75 0c             	mov    0xc(%ebp),%esi
    644b:	85 f6                	test   %esi,%esi
    644d:	74 61                	je     64b0 <audio_pcm_get_buffer_pos+0x70>
    644f:	83 ec 0c             	sub    $0xc,%esp
    6452:	8b 45 08             	mov    0x8(%ebp),%eax
    6455:	50                   	push   %eax
    6456:	e8 55 94 00 00       	call   f8b0 <async_exchange_begin@plt>
    645b:	83 c4 0c             	add    $0xc,%esp
    645e:	89 c3                	mov    %eax,%ebx
    6460:	8d 45 f4             	lea    -0xc(%ebp),%eax
    6463:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    646a:	6a 00                	push   $0x0
    646c:	6a 00                	push   $0x0
    646e:	6a 00                	push   $0x0
    6470:	6a 00                	push   $0x0
    6472:	50                   	push   %eax
    6473:	6a 00                	push   $0x0
    6475:	6a 00                	push   $0x0
    6477:	6a 00                	push   $0x0
    6479:	6a 07                	push   $0x7
    647b:	68 04 04 00 00       	push   $0x404
    6480:	53                   	push   %ebx
    6481:	e8 ca 91 00 00       	call   f650 <async_req_fast@plt>
    6486:	83 c4 30             	add    $0x30,%esp
    6489:	85 c0                	test   %eax,%eax
    648b:	74 1b                	je     64a8 <audio_pcm_get_buffer_pos+0x68>
    648d:	83 ec 0c             	sub    $0xc,%esp
    6490:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    6493:	53                   	push   %ebx
    6494:	e8 27 92 00 00       	call   f6c0 <async_exchange_end@plt>
    6499:	83 c4 10             	add    $0x10,%esp
    649c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    649f:	8d 65 f8             	lea    -0x8(%ebp),%esp
    64a2:	5b                   	pop    %ebx
    64a3:	5e                   	pop    %esi
    64a4:	5d                   	pop    %ebp
    64a5:	c3                   	ret    
    64a6:	66 90                	xchg   %ax,%ax
    64a8:	8b 55 f4             	mov    -0xc(%ebp),%edx
    64ab:	89 16                	mov    %edx,(%esi)
    64ad:	eb de                	jmp    648d <audio_pcm_get_buffer_pos+0x4d>
    64af:	90                   	nop
    64b0:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    64b5:	eb e8                	jmp    649f <audio_pcm_get_buffer_pos+0x5f>
    64b7:	89 f6                	mov    %esi,%esi
    64b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000064c0 <audio_pcm_test_format>:
    64c0:	55                   	push   %ebp
    64c1:	89 e5                	mov    %esp,%ebp
    64c3:	57                   	push   %edi
    64c4:	56                   	push   %esi
    64c5:	53                   	push   %ebx
    64c6:	83 ec 38             	sub    $0x38,%esp
    64c9:	8b 45 08             	mov    0x8(%ebp),%eax
    64cc:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    64cf:	50                   	push   %eax
    64d0:	e8 db 93 00 00       	call   f8b0 <async_exchange_begin@plt>
    64d5:	83 c4 10             	add    $0x10,%esp
    64d8:	89 c6                	mov    %eax,%esi
    64da:	85 db                	test   %ebx,%ebx
    64dc:	0f 84 be 00 00 00    	je     65a0 <audio_pcm_test_format+0xe0>
    64e2:	8b 03                	mov    (%ebx),%eax
    64e4:	8b 7d 10             	mov    0x10(%ebp),%edi
    64e7:	89 45 dc             	mov    %eax,-0x24(%ebp)
    64ea:	85 ff                	test   %edi,%edi
    64ec:	0f 84 be 00 00 00    	je     65b0 <audio_pcm_test_format+0xf0>
    64f2:	8b 4d 10             	mov    0x10(%ebp),%ecx
    64f5:	8b 11                	mov    (%ecx),%edx
    64f7:	8b 4d 14             	mov    0x14(%ebp),%ecx
    64fa:	89 55 e0             	mov    %edx,-0x20(%ebp)
    64fd:	85 c9                	test   %ecx,%ecx
    64ff:	0f 84 bb 00 00 00    	je     65c0 <audio_pcm_test_format+0x100>
    6505:	8b 7d 14             	mov    0x14(%ebp),%edi
    6508:	8b 0f                	mov    (%edi),%ecx
    650a:	57                   	push   %edi
    650b:	8d 7d e4             	lea    -0x1c(%ebp),%edi
    650e:	6a 00                	push   $0x0
    6510:	6a 00                	push   $0x0
    6512:	57                   	push   %edi
    6513:	8d 7d e0             	lea    -0x20(%ebp),%edi
    6516:	57                   	push   %edi
    6517:	8d 7d dc             	lea    -0x24(%ebp),%edi
    651a:	57                   	push   %edi
    651b:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
    651e:	51                   	push   %ecx
    651f:	52                   	push   %edx
    6520:	50                   	push   %eax
    6521:	6a 04                	push   $0x4
    6523:	68 04 04 00 00       	push   $0x404
    6528:	56                   	push   %esi
    6529:	e8 22 91 00 00       	call   f650 <async_req_fast@plt>
    652e:	83 c4 24             	add    $0x24,%esp
    6531:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    6534:	56                   	push   %esi
    6535:	e8 86 91 00 00       	call   f6c0 <async_exchange_end@plt>
    653a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    653d:	83 c4 10             	add    $0x10,%esp
    6540:	85 c0                	test   %eax,%eax
    6542:	74 34                	je     6578 <audio_pcm_test_format+0xb8>
    6544:	83 f8 fd             	cmp    $0xfffffffd,%eax
    6547:	74 2f                	je     6578 <audio_pcm_test_format+0xb8>
    6549:	85 db                	test   %ebx,%ebx
    654b:	74 05                	je     6552 <audio_pcm_test_format+0x92>
    654d:	8b 55 dc             	mov    -0x24(%ebp),%edx
    6550:	89 13                	mov    %edx,(%ebx)
    6552:	8b 4d 10             	mov    0x10(%ebp),%ecx
    6555:	85 c9                	test   %ecx,%ecx
    6557:	74 08                	je     6561 <audio_pcm_test_format+0xa1>
    6559:	8b 55 e0             	mov    -0x20(%ebp),%edx
    655c:	8b 75 10             	mov    0x10(%ebp),%esi
    655f:	89 16                	mov    %edx,(%esi)
    6561:	8b 55 14             	mov    0x14(%ebp),%edx
    6564:	85 d2                	test   %edx,%edx
    6566:	74 08                	je     6570 <audio_pcm_test_format+0xb0>
    6568:	8b 4d 14             	mov    0x14(%ebp),%ecx
    656b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    656e:	89 11                	mov    %edx,(%ecx)
    6570:	8d 65 f4             	lea    -0xc(%ebp),%esp
    6573:	5b                   	pop    %ebx
    6574:	5e                   	pop    %esi
    6575:	5f                   	pop    %edi
    6576:	5d                   	pop    %ebp
    6577:	c3                   	ret    
    6578:	85 db                	test   %ebx,%ebx
    657a:	74 07                	je     6583 <audio_pcm_test_format+0xc3>
    657c:	8b 55 dc             	mov    -0x24(%ebp),%edx
    657f:	39 13                	cmp    %edx,(%ebx)
    6581:	75 cd                	jne    6550 <audio_pcm_test_format+0x90>
    6583:	8b 7d 10             	mov    0x10(%ebp),%edi
    6586:	85 ff                	test   %edi,%edi
    6588:	74 3e                	je     65c8 <audio_pcm_test_format+0x108>
    658a:	8b 75 10             	mov    0x10(%ebp),%esi
    658d:	8b 55 e0             	mov    -0x20(%ebp),%edx
    6590:	39 16                	cmp    %edx,(%esi)
    6592:	74 34                	je     65c8 <audio_pcm_test_format+0x108>
    6594:	85 db                	test   %ebx,%ebx
    6596:	75 b5                	jne    654d <audio_pcm_test_format+0x8d>
    6598:	eb c5                	jmp    655f <audio_pcm_test_format+0x9f>
    659a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    65a0:	31 c0                	xor    %eax,%eax
    65a2:	8b 7d 10             	mov    0x10(%ebp),%edi
    65a5:	89 45 dc             	mov    %eax,-0x24(%ebp)
    65a8:	85 ff                	test   %edi,%edi
    65aa:	0f 85 42 ff ff ff    	jne    64f2 <audio_pcm_test_format+0x32>
    65b0:	31 d2                	xor    %edx,%edx
    65b2:	8b 4d 14             	mov    0x14(%ebp),%ecx
    65b5:	89 55 e0             	mov    %edx,-0x20(%ebp)
    65b8:	85 c9                	test   %ecx,%ecx
    65ba:	0f 85 45 ff ff ff    	jne    6505 <audio_pcm_test_format+0x45>
    65c0:	31 c9                	xor    %ecx,%ecx
    65c2:	e9 43 ff ff ff       	jmp    650a <audio_pcm_test_format+0x4a>
    65c7:	90                   	nop
    65c8:	8b 75 14             	mov    0x14(%ebp),%esi
    65cb:	85 f6                	test   %esi,%esi
    65cd:	74 0e                	je     65dd <audio_pcm_test_format+0x11d>
    65cf:	8b 75 14             	mov    0x14(%ebp),%esi
    65d2:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    65d5:	39 0e                	cmp    %ecx,(%esi)
    65d7:	0f 85 6c ff ff ff    	jne    6549 <audio_pcm_test_format+0x89>
    65dd:	31 c0                	xor    %eax,%eax
    65df:	eb 8f                	jmp    6570 <audio_pcm_test_format+0xb0>
    65e1:	eb 0d                	jmp    65f0 <audio_pcm_register_event_callback>
    65e3:	90                   	nop
    65e4:	90                   	nop
    65e5:	90                   	nop
    65e6:	90                   	nop
    65e7:	90                   	nop
    65e8:	90                   	nop
    65e9:	90                   	nop
    65ea:	90                   	nop
    65eb:	90                   	nop
    65ec:	90                   	nop
    65ed:	90                   	nop
    65ee:	90                   	nop
    65ef:	90                   	nop

000065f0 <audio_pcm_register_event_callback>:
    65f0:	55                   	push   %ebp
    65f1:	89 e5                	mov    %esp,%ebp
    65f3:	56                   	push   %esi
    65f4:	53                   	push   %ebx
    65f5:	83 ec 20             	sub    $0x20,%esp
    65f8:	8b 75 0c             	mov    0xc(%ebp),%esi
    65fb:	85 f6                	test   %esi,%esi
    65fd:	74 71                	je     6670 <audio_pcm_register_event_callback+0x80>
    65ff:	83 ec 0c             	sub    $0xc,%esp
    6602:	8b 4d 08             	mov    0x8(%ebp),%ecx
    6605:	51                   	push   %ecx
    6606:	e8 a5 92 00 00       	call   f8b0 <async_exchange_begin@plt>
    660b:	83 c4 0c             	add    $0xc,%esp
    660e:	89 c3                	mov    %eax,%ebx
    6610:	6a 00                	push   $0x0
    6612:	6a 00                	push   $0x0
    6614:	6a 00                	push   $0x0
    6616:	6a 00                	push   $0x0
    6618:	6a 00                	push   $0x0
    661a:	6a 00                	push   $0x0
    661c:	6a 00                	push   $0x0
    661e:	6a 00                	push   $0x0
    6620:	6a 02                	push   $0x2
    6622:	68 04 04 00 00       	push   $0x404
    6627:	50                   	push   %eax
    6628:	e8 23 90 00 00       	call   f650 <async_req_fast@plt>
    662d:	83 c4 30             	add    $0x30,%esp
    6630:	85 c0                	test   %eax,%eax
    6632:	74 1c                	je     6650 <audio_pcm_register_event_callback+0x60>
    6634:	83 ec 0c             	sub    $0xc,%esp
    6637:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    663a:	53                   	push   %ebx
    663b:	e8 80 90 00 00       	call   f6c0 <async_exchange_end@plt>
    6640:	83 c4 10             	add    $0x10,%esp
    6643:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    6646:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6649:	5b                   	pop    %ebx
    664a:	5e                   	pop    %esi
    664b:	5d                   	pop    %ebp
    664c:	c3                   	ret    
    664d:	8d 76 00             	lea    0x0(%esi),%esi
    6650:	8b 55 10             	mov    0x10(%ebp),%edx
    6653:	50                   	push   %eax
    6654:	8d 45 f4             	lea    -0xc(%ebp),%eax
    6657:	50                   	push   %eax
    6658:	52                   	push   %edx
    6659:	56                   	push   %esi
    665a:	6a 00                	push   $0x0
    665c:	6a 00                	push   $0x0
    665e:	68 16 86 8f db       	push   $0xdb8f8616
    6663:	53                   	push   %ebx
    6664:	e8 67 91 00 00       	call   f7d0 <async_create_callback_port@plt>
    6669:	83 c4 20             	add    $0x20,%esp
    666c:	eb c6                	jmp    6634 <audio_pcm_register_event_callback+0x44>
    666e:	66 90                	xchg   %ax,%ax
    6670:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    6675:	eb cf                	jmp    6646 <audio_pcm_register_event_callback+0x56>
    6677:	89 f6                	mov    %esi,%esi
    6679:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006680 <audio_pcm_unregister_event_callback>:
    6680:	55                   	push   %ebp
    6681:	89 e5                	mov    %esp,%ebp
    6683:	53                   	push   %ebx
    6684:	83 ec 20             	sub    $0x20,%esp
    6687:	8b 45 08             	mov    0x8(%ebp),%eax
    668a:	50                   	push   %eax
    668b:	e8 20 92 00 00       	call   f8b0 <async_exchange_begin@plt>
    6690:	83 c4 0c             	add    $0xc,%esp
    6693:	89 c3                	mov    %eax,%ebx
    6695:	6a 00                	push   $0x0
    6697:	6a 00                	push   $0x0
    6699:	6a 00                	push   $0x0
    669b:	6a 00                	push   $0x0
    669d:	6a 00                	push   $0x0
    669f:	6a 00                	push   $0x0
    66a1:	6a 00                	push   $0x0
    66a3:	6a 00                	push   $0x0
    66a5:	6a 03                	push   $0x3
    66a7:	68 04 04 00 00       	push   $0x404
    66ac:	50                   	push   %eax
    66ad:	e8 9e 8f 00 00       	call   f650 <async_req_fast@plt>
    66b2:	83 c4 24             	add    $0x24,%esp
    66b5:	89 45 f4             	mov    %eax,-0xc(%ebp)
    66b8:	53                   	push   %ebx
    66b9:	e8 02 90 00 00       	call   f6c0 <async_exchange_end@plt>
    66be:	8b 45 f4             	mov    -0xc(%ebp),%eax
    66c1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    66c4:	c9                   	leave  
    66c5:	c3                   	ret    
    66c6:	8d 76 00             	lea    0x0(%esi),%esi
    66c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000066d0 <audio_pcm_get_buffer>:
    66d0:	55                   	push   %ebp
    66d1:	89 e5                	mov    %esp,%ebp
    66d3:	57                   	push   %edi
    66d4:	56                   	push   %esi
    66d5:	53                   	push   %ebx
    66d6:	83 ec 2c             	sub    $0x2c,%esp
    66d9:	8b 75 0c             	mov    0xc(%ebp),%esi
    66dc:	8b 5d 10             	mov    0x10(%ebp),%ebx
    66df:	85 f6                	test   %esi,%esi
    66e1:	0f 84 91 00 00 00    	je     6778 <audio_pcm_get_buffer+0xa8>
    66e7:	85 db                	test   %ebx,%ebx
    66e9:	0f 84 89 00 00 00    	je     6778 <audio_pcm_get_buffer+0xa8>
    66ef:	83 ec 0c             	sub    $0xc,%esp
    66f2:	8b 55 08             	mov    0x8(%ebp),%edx
    66f5:	52                   	push   %edx
    66f6:	e8 b5 91 00 00       	call   f8b0 <async_exchange_begin@plt>
    66fb:	83 c4 0c             	add    $0xc,%esp
    66fe:	89 c7                	mov    %eax,%edi
    6700:	8d 55 e0             	lea    -0x20(%ebp),%edx
    6703:	8b 03                	mov    (%ebx),%eax
    6705:	89 45 e0             	mov    %eax,-0x20(%ebp)
    6708:	6a 00                	push   $0x0
    670a:	6a 00                	push   $0x0
    670c:	6a 00                	push   $0x0
    670e:	6a 00                	push   $0x0
    6710:	52                   	push   %edx
    6711:	6a 00                	push   $0x0
    6713:	6a 00                	push   $0x0
    6715:	50                   	push   %eax
    6716:	6a 05                	push   $0x5
    6718:	68 04 04 00 00       	push   $0x404
    671d:	57                   	push   %edi
    671e:	e8 2d 8f 00 00       	call   f650 <async_req_fast@plt>
    6723:	83 c4 30             	add    $0x30,%esp
    6726:	85 c0                	test   %eax,%eax
    6728:	75 2d                	jne    6757 <audio_pcm_get_buffer+0x87>
    672a:	83 ec 0c             	sub    $0xc,%esp
    672d:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    6730:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    6737:	50                   	push   %eax
    6738:	8b 45 e0             	mov    -0x20(%ebp),%eax
    673b:	6a 00                	push   $0x0
    673d:	6a 00                	push   $0x0
    673f:	50                   	push   %eax
    6740:	57                   	push   %edi
    6741:	e8 ba 8e 00 00       	call   f600 <async_share_in_start@plt>
    6746:	83 c4 20             	add    $0x20,%esp
    6749:	85 c0                	test   %eax,%eax
    674b:	75 0a                	jne    6757 <audio_pcm_get_buffer+0x87>
    674d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    6750:	89 16                	mov    %edx,(%esi)
    6752:	8b 55 e0             	mov    -0x20(%ebp),%edx
    6755:	89 13                	mov    %edx,(%ebx)
    6757:	83 ec 0c             	sub    $0xc,%esp
    675a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    675d:	57                   	push   %edi
    675e:	e8 5d 8f 00 00       	call   f6c0 <async_exchange_end@plt>
    6763:	83 c4 10             	add    $0x10,%esp
    6766:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    6769:	8d 65 f4             	lea    -0xc(%ebp),%esp
    676c:	5b                   	pop    %ebx
    676d:	5e                   	pop    %esi
    676e:	5f                   	pop    %edi
    676f:	5d                   	pop    %ebp
    6770:	c3                   	ret    
    6771:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6778:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    677d:	eb ea                	jmp    6769 <audio_pcm_get_buffer+0x99>
    677f:	90                   	nop

00006780 <audio_pcm_release_buffer>:
    6780:	55                   	push   %ebp
    6781:	89 e5                	mov    %esp,%ebp
    6783:	53                   	push   %ebx
    6784:	83 ec 20             	sub    $0x20,%esp
    6787:	8b 45 08             	mov    0x8(%ebp),%eax
    678a:	50                   	push   %eax
    678b:	e8 20 91 00 00       	call   f8b0 <async_exchange_begin@plt>
    6790:	83 c4 0c             	add    $0xc,%esp
    6793:	89 c3                	mov    %eax,%ebx
    6795:	6a 00                	push   $0x0
    6797:	6a 00                	push   $0x0
    6799:	6a 00                	push   $0x0
    679b:	6a 00                	push   $0x0
    679d:	6a 00                	push   $0x0
    679f:	6a 00                	push   $0x0
    67a1:	6a 00                	push   $0x0
    67a3:	6a 00                	push   $0x0
    67a5:	6a 06                	push   $0x6
    67a7:	68 04 04 00 00       	push   $0x404
    67ac:	50                   	push   %eax
    67ad:	e8 9e 8e 00 00       	call   f650 <async_req_fast@plt>
    67b2:	83 c4 24             	add    $0x24,%esp
    67b5:	89 45 f4             	mov    %eax,-0xc(%ebp)
    67b8:	53                   	push   %ebx
    67b9:	e8 02 8f 00 00       	call   f6c0 <async_exchange_end@plt>
    67be:	8b 45 f4             	mov    -0xc(%ebp),%eax
    67c1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    67c4:	c9                   	leave  
    67c5:	c3                   	ret    
    67c6:	8d 76 00             	lea    0x0(%esi),%esi
    67c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000067d0 <audio_pcm_start_playback_fragment>:
    67d0:	55                   	push   %ebp
    67d1:	89 e5                	mov    %esp,%ebp
    67d3:	56                   	push   %esi
    67d4:	53                   	push   %ebx
    67d5:	83 ec 10             	sub    $0x10,%esp
    67d8:	81 7d 10 ff ff 00 00 	cmpl   $0xffff,0x10(%ebp)
    67df:	77 5f                	ja     6840 <audio_pcm_start_playback_fragment+0x70>
    67e1:	f7 45 18 00 00 ff ff 	testl  $0xffff0000,0x18(%ebp)
    67e8:	75 5d                	jne    6847 <audio_pcm_start_playback_fragment+0x77>
    67ea:	83 ec 0c             	sub    $0xc,%esp
    67ed:	8b 5d 10             	mov    0x10(%ebp),%ebx
    67f0:	8b 55 08             	mov    0x8(%ebp),%edx
    67f3:	8b 45 18             	mov    0x18(%ebp),%eax
    67f6:	c1 e3 10             	shl    $0x10,%ebx
    67f9:	52                   	push   %edx
    67fa:	09 c3                	or     %eax,%ebx
    67fc:	e8 af 90 00 00       	call   f8b0 <async_exchange_begin@plt>
    6801:	83 c4 0c             	add    $0xc,%esp
    6804:	8b 4d 14             	mov    0x14(%ebp),%ecx
    6807:	89 c6                	mov    %eax,%esi
    6809:	6a 00                	push   $0x0
    680b:	6a 00                	push   $0x0
    680d:	6a 00                	push   $0x0
    680f:	6a 00                	push   $0x0
    6811:	6a 00                	push   $0x0
    6813:	53                   	push   %ebx
    6814:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    6817:	51                   	push   %ecx
    6818:	53                   	push   %ebx
    6819:	6a 08                	push   $0x8
    681b:	68 04 04 00 00       	push   $0x404
    6820:	50                   	push   %eax
    6821:	e8 2a 8e 00 00       	call   f650 <async_req_fast@plt>
    6826:	83 c4 24             	add    $0x24,%esp
    6829:	56                   	push   %esi
    682a:	89 45 f4             	mov    %eax,-0xc(%ebp)
    682d:	e8 8e 8e 00 00       	call   f6c0 <async_exchange_end@plt>
    6832:	83 c4 10             	add    $0x10,%esp
    6835:	8b 45 f4             	mov    -0xc(%ebp),%eax
    6838:	8d 65 f8             	lea    -0x8(%ebp),%esp
    683b:	5b                   	pop    %ebx
    683c:	5e                   	pop    %esi
    683d:	5d                   	pop    %ebp
    683e:	c3                   	ret    
    683f:	90                   	nop
    6840:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    6845:	eb f1                	jmp    6838 <audio_pcm_start_playback_fragment+0x68>
    6847:	56                   	push   %esi
    6848:	68 a6 01 00 00       	push   $0x1a6
    684d:	68 78 dc 00 00       	push   $0xdc78
    6852:	68 e0 dd 00 00       	push   $0xdde0
    6857:	e8 74 8e 00 00       	call   f6d0 <assert_abort@plt>
    685c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00006860 <audio_pcm_last_playback_fragment>:
    6860:	55                   	push   %ebp
    6861:	89 e5                	mov    %esp,%ebp
    6863:	53                   	push   %ebx
    6864:	83 ec 20             	sub    $0x20,%esp
    6867:	8b 45 08             	mov    0x8(%ebp),%eax
    686a:	50                   	push   %eax
    686b:	e8 40 90 00 00       	call   f8b0 <async_exchange_begin@plt>
    6870:	83 c4 0c             	add    $0xc,%esp
    6873:	89 c3                	mov    %eax,%ebx
    6875:	6a 00                	push   $0x0
    6877:	6a 00                	push   $0x0
    6879:	6a 00                	push   $0x0
    687b:	6a 00                	push   $0x0
    687d:	6a 00                	push   $0x0
    687f:	6a 00                	push   $0x0
    6881:	6a 00                	push   $0x0
    6883:	6a 00                	push   $0x0
    6885:	6a 09                	push   $0x9
    6887:	68 04 04 00 00       	push   $0x404
    688c:	50                   	push   %eax
    688d:	e8 be 8d 00 00       	call   f650 <async_req_fast@plt>
    6892:	83 c4 24             	add    $0x24,%esp
    6895:	89 45 f4             	mov    %eax,-0xc(%ebp)
    6898:	53                   	push   %ebx
    6899:	e8 22 8e 00 00       	call   f6c0 <async_exchange_end@plt>
    689e:	8b 45 f4             	mov    -0xc(%ebp),%eax
    68a1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    68a4:	c9                   	leave  
    68a5:	c3                   	ret    
    68a6:	8d 76 00             	lea    0x0(%esi),%esi
    68a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000068b0 <audio_pcm_start_playback>:
    68b0:	55                   	push   %ebp
    68b1:	89 e5                	mov    %esp,%ebp
    68b3:	56                   	push   %esi
    68b4:	53                   	push   %ebx
    68b5:	83 ec 10             	sub    $0x10,%esp
    68b8:	81 7d 0c ff ff 00 00 	cmpl   $0xffff,0xc(%ebp)
    68bf:	77 5f                	ja     6920 <audio_pcm_start_playback+0x70>
    68c1:	f7 45 14 00 00 ff ff 	testl  $0xffff0000,0x14(%ebp)
    68c8:	75 5d                	jne    6927 <audio_pcm_start_playback+0x77>
    68ca:	83 ec 0c             	sub    $0xc,%esp
    68cd:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    68d0:	8b 55 08             	mov    0x8(%ebp),%edx
    68d3:	8b 45 14             	mov    0x14(%ebp),%eax
    68d6:	c1 e3 10             	shl    $0x10,%ebx
    68d9:	52                   	push   %edx
    68da:	09 c3                	or     %eax,%ebx
    68dc:	e8 cf 8f 00 00       	call   f8b0 <async_exchange_begin@plt>
    68e1:	83 c4 0c             	add    $0xc,%esp
    68e4:	8b 4d 10             	mov    0x10(%ebp),%ecx
    68e7:	89 c6                	mov    %eax,%esi
    68e9:	6a 00                	push   $0x0
    68eb:	6a 00                	push   $0x0
    68ed:	6a 00                	push   $0x0
    68ef:	6a 00                	push   $0x0
    68f1:	6a 00                	push   $0x0
    68f3:	53                   	push   %ebx
    68f4:	51                   	push   %ecx
    68f5:	6a 00                	push   $0x0
    68f7:	6a 08                	push   $0x8
    68f9:	68 04 04 00 00       	push   $0x404
    68fe:	50                   	push   %eax
    68ff:	e8 4c 8d 00 00       	call   f650 <async_req_fast@plt>
    6904:	83 c4 24             	add    $0x24,%esp
    6907:	89 45 f4             	mov    %eax,-0xc(%ebp)
    690a:	56                   	push   %esi
    690b:	e8 b0 8d 00 00       	call   f6c0 <async_exchange_end@plt>
    6910:	83 c4 10             	add    $0x10,%esp
    6913:	8b 45 f4             	mov    -0xc(%ebp),%eax
    6916:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6919:	5b                   	pop    %ebx
    691a:	5e                   	pop    %esi
    691b:	5d                   	pop    %ebp
    691c:	c3                   	ret    
    691d:	8d 76 00             	lea    0x0(%esi),%esi
    6920:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    6925:	eb ef                	jmp    6916 <audio_pcm_start_playback+0x66>
    6927:	53                   	push   %ebx
    6928:	68 a6 01 00 00       	push   $0x1a6
    692d:	68 78 dc 00 00       	push   $0xdc78
    6932:	68 e0 dd 00 00       	push   $0xdde0
    6937:	e8 94 8d 00 00       	call   f6d0 <assert_abort@plt>
    693c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00006940 <audio_pcm_stop_playback_immediate>:
    6940:	55                   	push   %ebp
    6941:	89 e5                	mov    %esp,%ebp
    6943:	53                   	push   %ebx
    6944:	83 ec 20             	sub    $0x20,%esp
    6947:	8b 45 08             	mov    0x8(%ebp),%eax
    694a:	50                   	push   %eax
    694b:	e8 60 8f 00 00       	call   f8b0 <async_exchange_begin@plt>
    6950:	83 c4 0c             	add    $0xc,%esp
    6953:	89 c3                	mov    %eax,%ebx
    6955:	6a 00                	push   $0x0
    6957:	6a 00                	push   $0x0
    6959:	6a 00                	push   $0x0
    695b:	6a 00                	push   $0x0
    695d:	6a 00                	push   $0x0
    695f:	6a 00                	push   $0x0
    6961:	6a 00                	push   $0x0
    6963:	6a 01                	push   $0x1
    6965:	6a 09                	push   $0x9
    6967:	68 04 04 00 00       	push   $0x404
    696c:	50                   	push   %eax
    696d:	e8 de 8c 00 00       	call   f650 <async_req_fast@plt>
    6972:	83 c4 24             	add    $0x24,%esp
    6975:	89 45 f4             	mov    %eax,-0xc(%ebp)
    6978:	53                   	push   %ebx
    6979:	e8 42 8d 00 00       	call   f6c0 <async_exchange_end@plt>
    697e:	8b 45 f4             	mov    -0xc(%ebp),%eax
    6981:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6984:	c9                   	leave  
    6985:	c3                   	ret    
    6986:	8d 76 00             	lea    0x0(%esi),%esi
    6989:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006990 <audio_pcm_stop_playback>:
    6990:	55                   	push   %ebp
    6991:	89 e5                	mov    %esp,%ebp
    6993:	53                   	push   %ebx
    6994:	83 ec 20             	sub    $0x20,%esp
    6997:	8b 45 08             	mov    0x8(%ebp),%eax
    699a:	50                   	push   %eax
    699b:	e8 10 8f 00 00       	call   f8b0 <async_exchange_begin@plt>
    69a0:	83 c4 0c             	add    $0xc,%esp
    69a3:	89 c3                	mov    %eax,%ebx
    69a5:	6a 00                	push   $0x0
    69a7:	6a 00                	push   $0x0
    69a9:	6a 00                	push   $0x0
    69ab:	6a 00                	push   $0x0
    69ad:	6a 00                	push   $0x0
    69af:	6a 00                	push   $0x0
    69b1:	6a 00                	push   $0x0
    69b3:	6a 00                	push   $0x0
    69b5:	6a 09                	push   $0x9
    69b7:	68 04 04 00 00       	push   $0x404
    69bc:	50                   	push   %eax
    69bd:	e8 8e 8c 00 00       	call   f650 <async_req_fast@plt>
    69c2:	83 c4 24             	add    $0x24,%esp
    69c5:	89 45 f4             	mov    %eax,-0xc(%ebp)
    69c8:	53                   	push   %ebx
    69c9:	e8 f2 8c 00 00       	call   f6c0 <async_exchange_end@plt>
    69ce:	8b 45 f4             	mov    -0xc(%ebp),%eax
    69d1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    69d4:	c9                   	leave  
    69d5:	c3                   	ret    
    69d6:	8d 76 00             	lea    0x0(%esi),%esi
    69d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000069e0 <audio_pcm_start_capture_fragment>:
    69e0:	55                   	push   %ebp
    69e1:	89 e5                	mov    %esp,%ebp
    69e3:	56                   	push   %esi
    69e4:	53                   	push   %ebx
    69e5:	83 ec 10             	sub    $0x10,%esp
    69e8:	81 7d 10 ff ff 00 00 	cmpl   $0xffff,0x10(%ebp)
    69ef:	77 5f                	ja     6a50 <audio_pcm_start_capture_fragment+0x70>
    69f1:	f7 45 18 00 00 ff ff 	testl  $0xffff0000,0x18(%ebp)
    69f8:	75 5d                	jne    6a57 <audio_pcm_start_capture_fragment+0x77>
    69fa:	83 ec 0c             	sub    $0xc,%esp
    69fd:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6a00:	8b 55 08             	mov    0x8(%ebp),%edx
    6a03:	8b 45 18             	mov    0x18(%ebp),%eax
    6a06:	c1 e3 10             	shl    $0x10,%ebx
    6a09:	52                   	push   %edx
    6a0a:	09 c3                	or     %eax,%ebx
    6a0c:	e8 9f 8e 00 00       	call   f8b0 <async_exchange_begin@plt>
    6a11:	83 c4 0c             	add    $0xc,%esp
    6a14:	8b 4d 14             	mov    0x14(%ebp),%ecx
    6a17:	89 c6                	mov    %eax,%esi
    6a19:	6a 00                	push   $0x0
    6a1b:	6a 00                	push   $0x0
    6a1d:	6a 00                	push   $0x0
    6a1f:	6a 00                	push   $0x0
    6a21:	6a 00                	push   $0x0
    6a23:	53                   	push   %ebx
    6a24:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    6a27:	51                   	push   %ecx
    6a28:	53                   	push   %ebx
    6a29:	6a 0a                	push   $0xa
    6a2b:	68 04 04 00 00       	push   $0x404
    6a30:	50                   	push   %eax
    6a31:	e8 1a 8c 00 00       	call   f650 <async_req_fast@plt>
    6a36:	83 c4 24             	add    $0x24,%esp
    6a39:	56                   	push   %esi
    6a3a:	89 45 f4             	mov    %eax,-0xc(%ebp)
    6a3d:	e8 7e 8c 00 00       	call   f6c0 <async_exchange_end@plt>
    6a42:	83 c4 10             	add    $0x10,%esp
    6a45:	8b 45 f4             	mov    -0xc(%ebp),%eax
    6a48:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6a4b:	5b                   	pop    %ebx
    6a4c:	5e                   	pop    %esi
    6a4d:	5d                   	pop    %ebp
    6a4e:	c3                   	ret    
    6a4f:	90                   	nop
    6a50:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    6a55:	eb f1                	jmp    6a48 <audio_pcm_start_capture_fragment+0x68>
    6a57:	56                   	push   %esi
    6a58:	68 07 02 00 00       	push   $0x207
    6a5d:	68 78 dc 00 00       	push   $0xdc78
    6a62:	68 e0 dd 00 00       	push   $0xdde0
    6a67:	e8 64 8c 00 00       	call   f6d0 <assert_abort@plt>
    6a6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00006a70 <audio_pcm_start_capture>:
    6a70:	55                   	push   %ebp
    6a71:	89 e5                	mov    %esp,%ebp
    6a73:	56                   	push   %esi
    6a74:	53                   	push   %ebx
    6a75:	83 ec 10             	sub    $0x10,%esp
    6a78:	81 7d 0c ff ff 00 00 	cmpl   $0xffff,0xc(%ebp)
    6a7f:	77 5f                	ja     6ae0 <audio_pcm_start_capture+0x70>
    6a81:	f7 45 14 00 00 ff ff 	testl  $0xffff0000,0x14(%ebp)
    6a88:	75 5d                	jne    6ae7 <audio_pcm_start_capture+0x77>
    6a8a:	83 ec 0c             	sub    $0xc,%esp
    6a8d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    6a90:	8b 55 08             	mov    0x8(%ebp),%edx
    6a93:	8b 45 14             	mov    0x14(%ebp),%eax
    6a96:	c1 e3 10             	shl    $0x10,%ebx
    6a99:	52                   	push   %edx
    6a9a:	09 c3                	or     %eax,%ebx
    6a9c:	e8 0f 8e 00 00       	call   f8b0 <async_exchange_begin@plt>
    6aa1:	83 c4 0c             	add    $0xc,%esp
    6aa4:	8b 4d 10             	mov    0x10(%ebp),%ecx
    6aa7:	89 c6                	mov    %eax,%esi
    6aa9:	6a 00                	push   $0x0
    6aab:	6a 00                	push   $0x0
    6aad:	6a 00                	push   $0x0
    6aaf:	6a 00                	push   $0x0
    6ab1:	6a 00                	push   $0x0
    6ab3:	53                   	push   %ebx
    6ab4:	51                   	push   %ecx
    6ab5:	6a 00                	push   $0x0
    6ab7:	6a 0a                	push   $0xa
    6ab9:	68 04 04 00 00       	push   $0x404
    6abe:	50                   	push   %eax
    6abf:	e8 8c 8b 00 00       	call   f650 <async_req_fast@plt>
    6ac4:	83 c4 24             	add    $0x24,%esp
    6ac7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    6aca:	56                   	push   %esi
    6acb:	e8 f0 8b 00 00       	call   f6c0 <async_exchange_end@plt>
    6ad0:	83 c4 10             	add    $0x10,%esp
    6ad3:	8b 45 f4             	mov    -0xc(%ebp),%eax
    6ad6:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6ad9:	5b                   	pop    %ebx
    6ada:	5e                   	pop    %esi
    6adb:	5d                   	pop    %ebp
    6adc:	c3                   	ret    
    6add:	8d 76 00             	lea    0x0(%esi),%esi
    6ae0:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    6ae5:	eb ef                	jmp    6ad6 <audio_pcm_start_capture+0x66>
    6ae7:	53                   	push   %ebx
    6ae8:	68 07 02 00 00       	push   $0x207
    6aed:	68 78 dc 00 00       	push   $0xdc78
    6af2:	68 e0 dd 00 00       	push   $0xdde0
    6af7:	e8 d4 8b 00 00       	call   f6d0 <assert_abort@plt>
    6afc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00006b00 <audio_pcm_last_capture_fragment>:
    6b00:	55                   	push   %ebp
    6b01:	89 e5                	mov    %esp,%ebp
    6b03:	53                   	push   %ebx
    6b04:	83 ec 20             	sub    $0x20,%esp
    6b07:	8b 45 08             	mov    0x8(%ebp),%eax
    6b0a:	50                   	push   %eax
    6b0b:	e8 a0 8d 00 00       	call   f8b0 <async_exchange_begin@plt>
    6b10:	83 c4 0c             	add    $0xc,%esp
    6b13:	89 c3                	mov    %eax,%ebx
    6b15:	6a 00                	push   $0x0
    6b17:	6a 00                	push   $0x0
    6b19:	6a 00                	push   $0x0
    6b1b:	6a 00                	push   $0x0
    6b1d:	6a 00                	push   $0x0
    6b1f:	6a 00                	push   $0x0
    6b21:	6a 00                	push   $0x0
    6b23:	6a 00                	push   $0x0
    6b25:	6a 0b                	push   $0xb
    6b27:	68 04 04 00 00       	push   $0x404
    6b2c:	50                   	push   %eax
    6b2d:	e8 1e 8b 00 00       	call   f650 <async_req_fast@plt>
    6b32:	83 c4 24             	add    $0x24,%esp
    6b35:	89 45 f4             	mov    %eax,-0xc(%ebp)
    6b38:	53                   	push   %ebx
    6b39:	e8 82 8b 00 00       	call   f6c0 <async_exchange_end@plt>
    6b3e:	8b 45 f4             	mov    -0xc(%ebp),%eax
    6b41:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6b44:	c9                   	leave  
    6b45:	c3                   	ret    
    6b46:	8d 76 00             	lea    0x0(%esi),%esi
    6b49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006b50 <audio_pcm_stop_capture_immediate>:
    6b50:	55                   	push   %ebp
    6b51:	89 e5                	mov    %esp,%ebp
    6b53:	53                   	push   %ebx
    6b54:	83 ec 20             	sub    $0x20,%esp
    6b57:	8b 45 08             	mov    0x8(%ebp),%eax
    6b5a:	50                   	push   %eax
    6b5b:	e8 50 8d 00 00       	call   f8b0 <async_exchange_begin@plt>
    6b60:	83 c4 0c             	add    $0xc,%esp
    6b63:	89 c3                	mov    %eax,%ebx
    6b65:	6a 00                	push   $0x0
    6b67:	6a 00                	push   $0x0
    6b69:	6a 00                	push   $0x0
    6b6b:	6a 00                	push   $0x0
    6b6d:	6a 00                	push   $0x0
    6b6f:	6a 00                	push   $0x0
    6b71:	6a 00                	push   $0x0
    6b73:	6a 01                	push   $0x1
    6b75:	6a 0b                	push   $0xb
    6b77:	68 04 04 00 00       	push   $0x404
    6b7c:	50                   	push   %eax
    6b7d:	e8 ce 8a 00 00       	call   f650 <async_req_fast@plt>
    6b82:	83 c4 24             	add    $0x24,%esp
    6b85:	89 45 f4             	mov    %eax,-0xc(%ebp)
    6b88:	53                   	push   %ebx
    6b89:	e8 32 8b 00 00       	call   f6c0 <async_exchange_end@plt>
    6b8e:	8b 45 f4             	mov    -0xc(%ebp),%eax
    6b91:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6b94:	c9                   	leave  
    6b95:	c3                   	ret    
    6b96:	8d 76 00             	lea    0x0(%esi),%esi
    6b99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006ba0 <audio_pcm_stop_capture>:
    6ba0:	55                   	push   %ebp
    6ba1:	89 e5                	mov    %esp,%ebp
    6ba3:	53                   	push   %ebx
    6ba4:	83 ec 20             	sub    $0x20,%esp
    6ba7:	8b 45 08             	mov    0x8(%ebp),%eax
    6baa:	50                   	push   %eax
    6bab:	e8 00 8d 00 00       	call   f8b0 <async_exchange_begin@plt>
    6bb0:	83 c4 0c             	add    $0xc,%esp
    6bb3:	89 c3                	mov    %eax,%ebx
    6bb5:	6a 00                	push   $0x0
    6bb7:	6a 00                	push   $0x0
    6bb9:	6a 00                	push   $0x0
    6bbb:	6a 00                	push   $0x0
    6bbd:	6a 00                	push   $0x0
    6bbf:	6a 00                	push   $0x0
    6bc1:	6a 00                	push   $0x0
    6bc3:	6a 00                	push   $0x0
    6bc5:	6a 0b                	push   $0xb
    6bc7:	68 04 04 00 00       	push   $0x404
    6bcc:	50                   	push   %eax
    6bcd:	e8 7e 8a 00 00       	call   f650 <async_req_fast@plt>
    6bd2:	83 c4 24             	add    $0x24,%esp
    6bd5:	89 45 f4             	mov    %eax,-0xc(%ebp)
    6bd8:	53                   	push   %ebx
    6bd9:	e8 e2 8a 00 00       	call   f6c0 <async_exchange_end@plt>
    6bde:	8b 45 f4             	mov    -0xc(%ebp),%eax
    6be1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6be4:	c9                   	leave  
    6be5:	c3                   	ret    
    6be6:	66 90                	xchg   %ax,%ax
    6be8:	66 90                	xchg   %ax,%ax
    6bea:	66 90                	xchg   %ax,%ax
    6bec:	66 90                	xchg   %ax,%ax
    6bee:	66 90                	xchg   %ax,%ax

00006bf0 <remote_hw_res_dma_channel_setup>:
    6bf0:	55                   	push   %ebp
    6bf1:	89 e5                	mov    %esp,%ebp
    6bf3:	57                   	push   %edi
    6bf4:	56                   	push   %esi
    6bf5:	53                   	push   %ebx
    6bf6:	83 ec 0c             	sub    $0xc,%esp
    6bf9:	8b 45 0c             	mov    0xc(%ebp),%eax
    6bfc:	8b 75 08             	mov    0x8(%ebp),%esi
    6bff:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6c02:	8b 55 14             	mov    0x14(%ebp),%edx
    6c05:	8b 48 08             	mov    0x8(%eax),%ecx
    6c08:	85 c9                	test   %ecx,%ecx
    6c0a:	74 3c                	je     6c48 <remote_hw_res_dma_channel_setup+0x58>
    6c0c:	8b 42 08             	mov    0x8(%edx),%eax
    6c0f:	83 ec 0c             	sub    $0xc,%esp
    6c12:	89 c7                	mov    %eax,%edi
    6c14:	25 ff ff 00 00       	and    $0xffff,%eax
    6c19:	c1 ef 10             	shr    $0x10,%edi
    6c1c:	81 e7 ff 00 00 00    	and    $0xff,%edi
    6c22:	57                   	push   %edi
    6c23:	8b 7a 10             	mov    0x10(%edx),%edi
    6c26:	57                   	push   %edi
    6c27:	8b 52 0c             	mov    0xc(%edx),%edx
    6c2a:	52                   	push   %edx
    6c2b:	50                   	push   %eax
    6c2c:	56                   	push   %esi
    6c2d:	ff d1                	call   *%ecx
    6c2f:	89 5d 08             	mov    %ebx,0x8(%ebp)
    6c32:	89 45 0c             	mov    %eax,0xc(%ebp)
    6c35:	83 c4 20             	add    $0x20,%esp
    6c38:	8d 65 f4             	lea    -0xc(%ebp),%esp
    6c3b:	5b                   	pop    %ebx
    6c3c:	5e                   	pop    %esi
    6c3d:	5f                   	pop    %edi
    6c3e:	5d                   	pop    %ebp
    6c3f:	e9 1c 8a 00 00       	jmp    f660 <async_answer_0@plt>
    6c44:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6c48:	89 5d 08             	mov    %ebx,0x8(%ebp)
    6c4b:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    6c52:	8d 65 f4             	lea    -0xc(%ebp),%esp
    6c55:	5b                   	pop    %ebx
    6c56:	5e                   	pop    %esi
    6c57:	5f                   	pop    %edi
    6c58:	5d                   	pop    %ebp
    6c59:	e9 02 8a 00 00       	jmp    f660 <async_answer_0@plt>
    6c5e:	66 90                	xchg   %ax,%ax

00006c60 <remote_hw_res_enable_interrupt>:
    6c60:	55                   	push   %ebp
    6c61:	89 e5                	mov    %esp,%ebp
    6c63:	53                   	push   %ebx
    6c64:	50                   	push   %eax
    6c65:	8b 45 0c             	mov    0xc(%ebp),%eax
    6c68:	8b 55 08             	mov    0x8(%ebp),%edx
    6c6b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6c6e:	8b 40 04             	mov    0x4(%eax),%eax
    6c71:	85 c0                	test   %eax,%eax
    6c73:	74 3b                	je     6cb0 <remote_hw_res_enable_interrupt+0x50>
    6c75:	83 ec 0c             	sub    $0xc,%esp
    6c78:	52                   	push   %edx
    6c79:	ff d0                	call   *%eax
    6c7b:	83 c4 10             	add    $0x10,%esp
    6c7e:	84 c0                	test   %al,%al
    6c80:	75 16                	jne    6c98 <remote_hw_res_enable_interrupt+0x38>
    6c82:	89 5d 08             	mov    %ebx,0x8(%ebp)
    6c85:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6c88:	c7 45 0c fc ff ff ff 	movl   $0xfffffffc,0xc(%ebp)
    6c8f:	c9                   	leave  
    6c90:	e9 cb 89 00 00       	jmp    f660 <async_answer_0@plt>
    6c95:	8d 76 00             	lea    0x0(%esi),%esi
    6c98:	89 5d 08             	mov    %ebx,0x8(%ebp)
    6c9b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6c9e:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
    6ca5:	c9                   	leave  
    6ca6:	e9 b5 89 00 00       	jmp    f660 <async_answer_0@plt>
    6cab:	90                   	nop
    6cac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6cb0:	89 5d 08             	mov    %ebx,0x8(%ebp)
    6cb3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6cb6:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    6cbd:	c9                   	leave  
    6cbe:	e9 9d 89 00 00       	jmp    f660 <async_answer_0@plt>
    6cc3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6cc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006cd0 <remote_hw_res_dma_channel_remain>:
    6cd0:	55                   	push   %ebp
    6cd1:	89 e5                	mov    %esp,%ebp
    6cd3:	83 ec 18             	sub    $0x18,%esp
    6cd6:	8b 45 0c             	mov    0xc(%ebp),%eax
    6cd9:	8b 50 08             	mov    0x8(%eax),%edx
    6cdc:	85 d2                	test   %edx,%edx
    6cde:	74 30                	je     6d10 <remote_hw_res_dma_channel_remain+0x40>
    6ce0:	8b 55 14             	mov    0x14(%ebp),%edx
    6ce3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    6cea:	8b 52 08             	mov    0x8(%edx),%edx
    6ced:	51                   	push   %ecx
    6cee:	8d 4d f4             	lea    -0xc(%ebp),%ecx
    6cf1:	51                   	push   %ecx
    6cf2:	52                   	push   %edx
    6cf3:	8b 55 08             	mov    0x8(%ebp),%edx
    6cf6:	52                   	push   %edx
    6cf7:	ff 50 0c             	call   *0xc(%eax)
    6cfa:	83 c4 0c             	add    $0xc,%esp
    6cfd:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    6d00:	51                   	push   %ecx
    6d01:	50                   	push   %eax
    6d02:	8b 45 10             	mov    0x10(%ebp),%eax
    6d05:	50                   	push   %eax
    6d06:	e8 95 8b 00 00       	call   f8a0 <async_answer_1@plt>
    6d0b:	83 c4 10             	add    $0x10,%esp
    6d0e:	c9                   	leave  
    6d0f:	c3                   	ret    
    6d10:	50                   	push   %eax
    6d11:	50                   	push   %eax
    6d12:	8b 45 10             	mov    0x10(%ebp),%eax
    6d15:	6a f5                	push   $0xfffffff5
    6d17:	50                   	push   %eax
    6d18:	e8 43 89 00 00       	call   f660 <async_answer_0@plt>
    6d1d:	83 c4 10             	add    $0x10,%esp
    6d20:	c9                   	leave  
    6d21:	c3                   	ret    
    6d22:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6d29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006d30 <remote_hw_res_get_resource_list>:
    6d30:	55                   	push   %ebp
    6d31:	89 e5                	mov    %esp,%ebp
    6d33:	53                   	push   %ebx
    6d34:	83 ec 14             	sub    $0x14,%esp
    6d37:	8b 45 0c             	mov    0xc(%ebp),%eax
    6d3a:	8b 00                	mov    (%eax),%eax
    6d3c:	85 c0                	test   %eax,%eax
    6d3e:	74 40                	je     6d80 <remote_hw_res_get_resource_list+0x50>
    6d40:	83 ec 0c             	sub    $0xc,%esp
    6d43:	8b 55 08             	mov    0x8(%ebp),%edx
    6d46:	52                   	push   %edx
    6d47:	ff d0                	call   *%eax
    6d49:	83 c4 10             	add    $0x10,%esp
    6d4c:	89 c3                	mov    %eax,%ebx
    6d4e:	85 c0                	test   %eax,%eax
    6d50:	74 66                	je     6db8 <remote_hw_res_get_resource_list+0x88>
    6d52:	50                   	push   %eax
    6d53:	8b 03                	mov    (%ebx),%eax
    6d55:	50                   	push   %eax
    6d56:	8b 45 10             	mov    0x10(%ebp),%eax
    6d59:	6a 00                	push   $0x0
    6d5b:	50                   	push   %eax
    6d5c:	e8 3f 8b 00 00       	call   f8a0 <async_answer_1@plt>
    6d61:	58                   	pop    %eax
    6d62:	8d 45 f4             	lea    -0xc(%ebp),%eax
    6d65:	5a                   	pop    %edx
    6d66:	50                   	push   %eax
    6d67:	8d 45 10             	lea    0x10(%ebp),%eax
    6d6a:	50                   	push   %eax
    6d6b:	e8 a0 8a 00 00       	call   f810 <async_data_read_receive@plt>
    6d70:	83 c4 10             	add    $0x10,%esp
    6d73:	84 c0                	test   %al,%al
    6d75:	75 21                	jne    6d98 <remote_hw_res_get_resource_list+0x68>
    6d77:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6d7a:	c9                   	leave  
    6d7b:	c3                   	ret    
    6d7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6d80:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6d83:	51                   	push   %ecx
    6d84:	51                   	push   %ecx
    6d85:	6a f5                	push   $0xfffffff5
    6d87:	53                   	push   %ebx
    6d88:	e8 d3 88 00 00       	call   f660 <async_answer_0@plt>
    6d8d:	83 c4 10             	add    $0x10,%esp
    6d90:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6d93:	c9                   	leave  
    6d94:	c3                   	ret    
    6d95:	8d 76 00             	lea    0x0(%esi),%esi
    6d98:	50                   	push   %eax
    6d99:	8b 55 f4             	mov    -0xc(%ebp),%edx
    6d9c:	8b 4b 04             	mov    0x4(%ebx),%ecx
    6d9f:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6da2:	52                   	push   %edx
    6da3:	51                   	push   %ecx
    6da4:	53                   	push   %ebx
    6da5:	e8 46 88 00 00       	call   f5f0 <async_data_read_finalize@plt>
    6daa:	83 c4 10             	add    $0x10,%esp
    6dad:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6db0:	c9                   	leave  
    6db1:	c3                   	ret    
    6db2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6db8:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6dbb:	51                   	push   %ecx
    6dbc:	51                   	push   %ecx
    6dbd:	6a ff                	push   $0xffffffff
    6dbf:	53                   	push   %ebx
    6dc0:	e8 9b 88 00 00       	call   f660 <async_answer_0@plt>
    6dc5:	83 c4 10             	add    $0x10,%esp
    6dc8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6dcb:	c9                   	leave  
    6dcc:	c3                   	ret    
    6dcd:	66 90                	xchg   %ax,%ax
    6dcf:	90                   	nop

00006dd0 <remote_pio_window_get>:
    6dd0:	55                   	push   %ebp
    6dd1:	89 e5                	mov    %esp,%ebp
    6dd3:	53                   	push   %ebx
    6dd4:	83 ec 14             	sub    $0x14,%esp
    6dd7:	8b 45 0c             	mov    0xc(%ebp),%eax
    6dda:	8b 00                	mov    (%eax),%eax
    6ddc:	85 c0                	test   %eax,%eax
    6dde:	74 40                	je     6e20 <remote_pio_window_get+0x50>
    6de0:	83 ec 0c             	sub    $0xc,%esp
    6de3:	8b 55 08             	mov    0x8(%ebp),%edx
    6de6:	52                   	push   %edx
    6de7:	ff d0                	call   *%eax
    6de9:	83 c4 10             	add    $0x10,%esp
    6dec:	89 c3                	mov    %eax,%ebx
    6dee:	85 c0                	test   %eax,%eax
    6df0:	74 5e                	je     6e50 <remote_pio_window_get+0x80>
    6df2:	50                   	push   %eax
    6df3:	50                   	push   %eax
    6df4:	8b 45 10             	mov    0x10(%ebp),%eax
    6df7:	6a 00                	push   $0x0
    6df9:	50                   	push   %eax
    6dfa:	e8 61 88 00 00       	call   f660 <async_answer_0@plt>
    6dff:	58                   	pop    %eax
    6e00:	8d 45 f4             	lea    -0xc(%ebp),%eax
    6e03:	5a                   	pop    %edx
    6e04:	50                   	push   %eax
    6e05:	8d 45 10             	lea    0x10(%ebp),%eax
    6e08:	50                   	push   %eax
    6e09:	e8 02 8a 00 00       	call   f810 <async_data_read_receive@plt>
    6e0e:	83 c4 10             	add    $0x10,%esp
    6e11:	84 c0                	test   %al,%al
    6e13:	75 23                	jne    6e38 <remote_pio_window_get+0x68>
    6e15:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6e18:	c9                   	leave  
    6e19:	c3                   	ret    
    6e1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6e20:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6e23:	51                   	push   %ecx
    6e24:	51                   	push   %ecx
    6e25:	6a f5                	push   $0xfffffff5
    6e27:	53                   	push   %ebx
    6e28:	e8 33 88 00 00       	call   f660 <async_answer_0@plt>
    6e2d:	83 c4 10             	add    $0x10,%esp
    6e30:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6e33:	c9                   	leave  
    6e34:	c3                   	ret    
    6e35:	8d 76 00             	lea    0x0(%esi),%esi
    6e38:	8b 55 f4             	mov    -0xc(%ebp),%edx
    6e3b:	8b 4d 10             	mov    0x10(%ebp),%ecx
    6e3e:	50                   	push   %eax
    6e3f:	52                   	push   %edx
    6e40:	53                   	push   %ebx
    6e41:	51                   	push   %ecx
    6e42:	e8 a9 87 00 00       	call   f5f0 <async_data_read_finalize@plt>
    6e47:	83 c4 10             	add    $0x10,%esp
    6e4a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6e4d:	c9                   	leave  
    6e4e:	c3                   	ret    
    6e4f:	90                   	nop
    6e50:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6e53:	51                   	push   %ecx
    6e54:	51                   	push   %ecx
    6e55:	6a ff                	push   $0xffffffff
    6e57:	53                   	push   %ebx
    6e58:	e8 03 88 00 00       	call   f660 <async_answer_0@plt>
    6e5d:	83 c4 10             	add    $0x10,%esp
    6e60:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6e63:	c9                   	leave  
    6e64:	c3                   	ret    
    6e65:	66 90                	xchg   %ax,%ax
    6e67:	66 90                	xchg   %ax,%ax
    6e69:	66 90                	xchg   %ax,%ax
    6e6b:	66 90                	xchg   %ax,%ax
    6e6d:	66 90                	xchg   %ax,%ax
    6e6f:	90                   	nop

00006e70 <remote_char_write>:
    6e70:	55                   	push   %ebp
    6e71:	89 e5                	mov    %esp,%ebp
    6e73:	56                   	push   %esi
    6e74:	53                   	push   %ebx
    6e75:	81 ec 18 01 00 00    	sub    $0x118,%esp
    6e7b:	8d 85 f4 fe ff ff    	lea    -0x10c(%ebp),%eax
    6e81:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    6e84:	50                   	push   %eax
    6e85:	8d 85 f0 fe ff ff    	lea    -0x110(%ebp),%eax
    6e8b:	50                   	push   %eax
    6e8c:	e8 ff 8a 00 00       	call   f990 <async_data_write_receive@plt>
    6e91:	83 c4 10             	add    $0x10,%esp
    6e94:	84 c0                	test   %al,%al
    6e96:	74 70                	je     6f08 <remote_char_write+0x98>
    6e98:	8b 73 04             	mov    0x4(%ebx),%esi
    6e9b:	85 f6                	test   %esi,%esi
    6e9d:	0f 84 95 00 00 00    	je     6f38 <remote_char_write+0xc8>
    6ea3:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
    6ea9:	3d 00 01 00 00       	cmp    $0x100,%eax
    6eae:	76 0f                	jbe    6ebf <remote_char_write+0x4f>
    6eb0:	c7 85 f4 fe ff ff 00 	movl   $0x100,-0x10c(%ebp)
    6eb7:	01 00 00 
    6eba:	b8 00 01 00 00       	mov    $0x100,%eax
    6ebf:	8b 8d f0 fe ff ff    	mov    -0x110(%ebp),%ecx
    6ec5:	8d b5 f8 fe ff ff    	lea    -0x108(%ebp),%esi
    6ecb:	52                   	push   %edx
    6ecc:	50                   	push   %eax
    6ecd:	56                   	push   %esi
    6ece:	51                   	push   %ecx
    6ecf:	e8 4c 8a 00 00       	call   f920 <async_data_write_finalize@plt>
    6ed4:	83 c4 0c             	add    $0xc,%esp
    6ed7:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
    6edd:	50                   	push   %eax
    6ede:	8b 45 08             	mov    0x8(%ebp),%eax
    6ee1:	56                   	push   %esi
    6ee2:	50                   	push   %eax
    6ee3:	ff 53 04             	call   *0x4(%ebx)
    6ee6:	83 c4 10             	add    $0x10,%esp
    6ee9:	85 c0                	test   %eax,%eax
    6eeb:	78 33                	js     6f20 <remote_char_write+0xb0>
    6eed:	8b 4d 10             	mov    0x10(%ebp),%ecx
    6ef0:	52                   	push   %edx
    6ef1:	50                   	push   %eax
    6ef2:	6a 00                	push   $0x0
    6ef4:	51                   	push   %ecx
    6ef5:	e8 a6 89 00 00       	call   f8a0 <async_answer_1@plt>
    6efa:	83 c4 10             	add    $0x10,%esp
    6efd:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6f00:	5b                   	pop    %ebx
    6f01:	5e                   	pop    %esi
    6f02:	5d                   	pop    %ebp
    6f03:	c3                   	ret    
    6f04:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6f08:	50                   	push   %eax
    6f09:	50                   	push   %eax
    6f0a:	8b 45 10             	mov    0x10(%ebp),%eax
    6f0d:	6a f2                	push   $0xfffffff2
    6f0f:	50                   	push   %eax
    6f10:	e8 4b 87 00 00       	call   f660 <async_answer_0@plt>
    6f15:	83 c4 10             	add    $0x10,%esp
    6f18:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6f1b:	5b                   	pop    %ebx
    6f1c:	5e                   	pop    %esi
    6f1d:	5d                   	pop    %ebp
    6f1e:	c3                   	ret    
    6f1f:	90                   	nop
    6f20:	8b 75 10             	mov    0x10(%ebp),%esi
    6f23:	53                   	push   %ebx
    6f24:	53                   	push   %ebx
    6f25:	50                   	push   %eax
    6f26:	56                   	push   %esi
    6f27:	e8 34 87 00 00       	call   f660 <async_answer_0@plt>
    6f2c:	83 c4 10             	add    $0x10,%esp
    6f2f:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6f32:	5b                   	pop    %ebx
    6f33:	5e                   	pop    %esi
    6f34:	5d                   	pop    %ebp
    6f35:	c3                   	ret    
    6f36:	66 90                	xchg   %ax,%ax
    6f38:	50                   	push   %eax
    6f39:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
    6f3f:	6a 00                	push   $0x0
    6f41:	6a 00                	push   $0x0
    6f43:	50                   	push   %eax
    6f44:	e8 d7 89 00 00       	call   f920 <async_data_write_finalize@plt>
    6f49:	8b 4d 10             	mov    0x10(%ebp),%ecx
    6f4c:	58                   	pop    %eax
    6f4d:	5a                   	pop    %edx
    6f4e:	6a f5                	push   $0xfffffff5
    6f50:	51                   	push   %ecx
    6f51:	e8 0a 87 00 00       	call   f660 <async_answer_0@plt>
    6f56:	83 c4 10             	add    $0x10,%esp
    6f59:	eb a2                	jmp    6efd <remote_char_write+0x8d>
    6f5b:	90                   	nop
    6f5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00006f60 <remote_char_read>:
    6f60:	55                   	push   %ebp
    6f61:	89 e5                	mov    %esp,%ebp
    6f63:	56                   	push   %esi
    6f64:	53                   	push   %ebx
    6f65:	81 ec 18 01 00 00    	sub    $0x118,%esp
    6f6b:	8d 85 f4 fe ff ff    	lea    -0x10c(%ebp),%eax
    6f71:	50                   	push   %eax
    6f72:	8d 85 f0 fe ff ff    	lea    -0x110(%ebp),%eax
    6f78:	50                   	push   %eax
    6f79:	e8 92 88 00 00       	call   f810 <async_data_read_receive@plt>
    6f7e:	83 c4 10             	add    $0x10,%esp
    6f81:	84 c0                	test   %al,%al
    6f83:	0f 84 97 00 00 00    	je     7020 <remote_char_read+0xc0>
    6f89:	8b 45 0c             	mov    0xc(%ebp),%eax
    6f8c:	8b 10                	mov    (%eax),%edx
    6f8e:	85 d2                	test   %edx,%edx
    6f90:	0f 84 a2 00 00 00    	je     7038 <remote_char_read+0xd8>
    6f96:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
    6f9c:	3d 00 01 00 00       	cmp    $0x100,%eax
    6fa1:	76 0f                	jbe    6fb2 <remote_char_read+0x52>
    6fa3:	c7 85 f4 fe ff ff 00 	movl   $0x100,-0x10c(%ebp)
    6faa:	01 00 00 
    6fad:	b8 00 01 00 00       	mov    $0x100,%eax
    6fb2:	8d b5 f8 fe ff ff    	lea    -0x108(%ebp),%esi
    6fb8:	53                   	push   %ebx
    6fb9:	50                   	push   %eax
    6fba:	8b 45 08             	mov    0x8(%ebp),%eax
    6fbd:	56                   	push   %esi
    6fbe:	50                   	push   %eax
    6fbf:	ff d2                	call   *%edx
    6fc1:	83 c4 10             	add    $0x10,%esp
    6fc4:	89 c3                	mov    %eax,%ebx
    6fc6:	85 c0                	test   %eax,%eax
    6fc8:	78 2e                	js     6ff8 <remote_char_read+0x98>
    6fca:	8b 95 f0 fe ff ff    	mov    -0x110(%ebp),%edx
    6fd0:	50                   	push   %eax
    6fd1:	53                   	push   %ebx
    6fd2:	56                   	push   %esi
    6fd3:	52                   	push   %edx
    6fd4:	e8 17 86 00 00       	call   f5f0 <async_data_read_finalize@plt>
    6fd9:	83 c4 0c             	add    $0xc,%esp
    6fdc:	8b 4d 10             	mov    0x10(%ebp),%ecx
    6fdf:	53                   	push   %ebx
    6fe0:	6a 00                	push   $0x0
    6fe2:	51                   	push   %ecx
    6fe3:	e8 b8 88 00 00       	call   f8a0 <async_answer_1@plt>
    6fe8:	83 c4 10             	add    $0x10,%esp
    6feb:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6fee:	5b                   	pop    %ebx
    6fef:	5e                   	pop    %esi
    6ff0:	5d                   	pop    %ebp
    6ff1:	c3                   	ret    
    6ff2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6ff8:	50                   	push   %eax
    6ff9:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
    6fff:	6a 00                	push   $0x0
    7001:	56                   	push   %esi
    7002:	50                   	push   %eax
    7003:	e8 e8 85 00 00       	call   f5f0 <async_data_read_finalize@plt>
    7008:	8b 4d 10             	mov    0x10(%ebp),%ecx
    700b:	58                   	pop    %eax
    700c:	5a                   	pop    %edx
    700d:	53                   	push   %ebx
    700e:	51                   	push   %ecx
    700f:	e8 4c 86 00 00       	call   f660 <async_answer_0@plt>
    7014:	83 c4 10             	add    $0x10,%esp
    7017:	8d 65 f8             	lea    -0x8(%ebp),%esp
    701a:	5b                   	pop    %ebx
    701b:	5e                   	pop    %esi
    701c:	5d                   	pop    %ebp
    701d:	c3                   	ret    
    701e:	66 90                	xchg   %ax,%ax
    7020:	8b 75 10             	mov    0x10(%ebp),%esi
    7023:	53                   	push   %ebx
    7024:	53                   	push   %ebx
    7025:	6a f2                	push   $0xfffffff2
    7027:	56                   	push   %esi
    7028:	e8 33 86 00 00       	call   f660 <async_answer_0@plt>
    702d:	83 c4 10             	add    $0x10,%esp
    7030:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7033:	5b                   	pop    %ebx
    7034:	5e                   	pop    %esi
    7035:	5d                   	pop    %ebp
    7036:	c3                   	ret    
    7037:	90                   	nop
    7038:	50                   	push   %eax
    7039:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
    703f:	6a 00                	push   $0x0
    7041:	6a 00                	push   $0x0
    7043:	50                   	push   %eax
    7044:	e8 a7 85 00 00       	call   f5f0 <async_data_read_finalize@plt>
    7049:	8b 4d 10             	mov    0x10(%ebp),%ecx
    704c:	58                   	pop    %eax
    704d:	5a                   	pop    %edx
    704e:	6a f5                	push   $0xfffffff5
    7050:	51                   	push   %ecx
    7051:	e8 0a 86 00 00       	call   f660 <async_answer_0@plt>
    7056:	83 c4 10             	add    $0x10,%esp
    7059:	eb 90                	jmp    6feb <remote_char_read+0x8b>
    705b:	90                   	nop
    705c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00007060 <char_dev_read>:
    7060:	55                   	push   %ebp
    7061:	89 e5                	mov    %esp,%ebp
    7063:	56                   	push   %esi
    7064:	53                   	push   %ebx
    7065:	83 ec 4c             	sub    $0x4c,%esp
    7068:	8b 4d 08             	mov    0x8(%ebp),%ecx
    706b:	51                   	push   %ecx
    706c:	e8 3f 88 00 00       	call   f8b0 <async_exchange_begin@plt>
    7071:	83 c4 0c             	add    $0xc,%esp
    7074:	89 c3                	mov    %eax,%ebx
    7076:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    7079:	50                   	push   %eax
    707a:	6a 00                	push   $0x0
    707c:	6a 00                	push   $0x0
    707e:	6a 00                	push   $0x0
    7080:	6a 00                	push   $0x0
    7082:	68 02 04 00 00       	push   $0x402
    7087:	53                   	push   %ebx
    7088:	e8 e3 85 00 00       	call   f670 <async_send_fast@plt>
    708d:	83 c4 1c             	add    $0x1c,%esp
    7090:	89 c6                	mov    %eax,%esi
    7092:	8b 45 10             	mov    0x10(%ebp),%eax
    7095:	50                   	push   %eax
    7096:	8b 45 0c             	mov    0xc(%ebp),%eax
    7099:	50                   	push   %eax
    709a:	53                   	push   %ebx
    709b:	e8 80 87 00 00       	call   f820 <async_data_read_start@plt>
    70a0:	89 1c 24             	mov    %ebx,(%esp)
    70a3:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    70a6:	e8 15 86 00 00       	call   f6c0 <async_exchange_end@plt>
    70ab:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    70ae:	83 c4 10             	add    $0x10,%esp
    70b1:	85 c0                	test   %eax,%eax
    70b3:	74 23                	je     70d8 <char_dev_read+0x78>
    70b5:	52                   	push   %edx
    70b6:	52                   	push   %edx
    70b7:	8d 55 d0             	lea    -0x30(%ebp),%edx
    70ba:	52                   	push   %edx
    70bb:	56                   	push   %esi
    70bc:	e8 bf 84 00 00       	call   f580 <async_wait_for@plt>
    70c1:	8b 55 d0             	mov    -0x30(%ebp),%edx
    70c4:	83 c4 10             	add    $0x10,%esp
    70c7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    70ca:	85 d2                	test   %edx,%edx
    70cc:	75 2a                	jne    70f8 <char_dev_read+0x98>
    70ce:	8d 65 f8             	lea    -0x8(%ebp),%esp
    70d1:	5b                   	pop    %ebx
    70d2:	5e                   	pop    %esi
    70d3:	5d                   	pop    %ebp
    70d4:	c3                   	ret    
    70d5:	8d 76 00             	lea    0x0(%esi),%esi
    70d8:	50                   	push   %eax
    70d9:	50                   	push   %eax
    70da:	8d 45 d0             	lea    -0x30(%ebp),%eax
    70dd:	50                   	push   %eax
    70de:	56                   	push   %esi
    70df:	e8 9c 84 00 00       	call   f580 <async_wait_for@plt>
    70e4:	8b 45 d0             	mov    -0x30(%ebp),%eax
    70e7:	83 c4 10             	add    $0x10,%esp
    70ea:	85 c0                	test   %eax,%eax
    70ec:	75 e0                	jne    70ce <char_dev_read+0x6e>
    70ee:	8b 45 d8             	mov    -0x28(%ebp),%eax
    70f1:	8d 65 f8             	lea    -0x8(%ebp),%esp
    70f4:	5b                   	pop    %ebx
    70f5:	5e                   	pop    %esi
    70f6:	5d                   	pop    %ebp
    70f7:	c3                   	ret    
    70f8:	8d 65 f8             	lea    -0x8(%ebp),%esp
    70fb:	89 d0                	mov    %edx,%eax
    70fd:	5b                   	pop    %ebx
    70fe:	5e                   	pop    %esi
    70ff:	5d                   	pop    %ebp
    7100:	c3                   	ret    
    7101:	eb 0d                	jmp    7110 <char_dev_write>
    7103:	90                   	nop
    7104:	90                   	nop
    7105:	90                   	nop
    7106:	90                   	nop
    7107:	90                   	nop
    7108:	90                   	nop
    7109:	90                   	nop
    710a:	90                   	nop
    710b:	90                   	nop
    710c:	90                   	nop
    710d:	90                   	nop
    710e:	90                   	nop
    710f:	90                   	nop

00007110 <char_dev_write>:
    7110:	55                   	push   %ebp
    7111:	89 e5                	mov    %esp,%ebp
    7113:	56                   	push   %esi
    7114:	53                   	push   %ebx
    7115:	83 ec 4c             	sub    $0x4c,%esp
    7118:	8b 4d 08             	mov    0x8(%ebp),%ecx
    711b:	51                   	push   %ecx
    711c:	e8 8f 87 00 00       	call   f8b0 <async_exchange_begin@plt>
    7121:	83 c4 0c             	add    $0xc,%esp
    7124:	89 c3                	mov    %eax,%ebx
    7126:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    7129:	50                   	push   %eax
    712a:	6a 00                	push   $0x0
    712c:	6a 00                	push   $0x0
    712e:	6a 00                	push   $0x0
    7130:	6a 01                	push   $0x1
    7132:	68 02 04 00 00       	push   $0x402
    7137:	53                   	push   %ebx
    7138:	e8 33 85 00 00       	call   f670 <async_send_fast@plt>
    713d:	83 c4 1c             	add    $0x1c,%esp
    7140:	89 c6                	mov    %eax,%esi
    7142:	8b 45 10             	mov    0x10(%ebp),%eax
    7145:	50                   	push   %eax
    7146:	8b 45 0c             	mov    0xc(%ebp),%eax
    7149:	50                   	push   %eax
    714a:	53                   	push   %ebx
    714b:	e8 70 84 00 00       	call   f5c0 <async_data_write_start@plt>
    7150:	89 1c 24             	mov    %ebx,(%esp)
    7153:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    7156:	e8 65 85 00 00       	call   f6c0 <async_exchange_end@plt>
    715b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    715e:	83 c4 10             	add    $0x10,%esp
    7161:	85 c0                	test   %eax,%eax
    7163:	74 23                	je     7188 <char_dev_write+0x78>
    7165:	52                   	push   %edx
    7166:	52                   	push   %edx
    7167:	8d 55 d0             	lea    -0x30(%ebp),%edx
    716a:	52                   	push   %edx
    716b:	56                   	push   %esi
    716c:	e8 0f 84 00 00       	call   f580 <async_wait_for@plt>
    7171:	8b 55 d0             	mov    -0x30(%ebp),%edx
    7174:	83 c4 10             	add    $0x10,%esp
    7177:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    717a:	85 d2                	test   %edx,%edx
    717c:	75 2a                	jne    71a8 <char_dev_write+0x98>
    717e:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7181:	5b                   	pop    %ebx
    7182:	5e                   	pop    %esi
    7183:	5d                   	pop    %ebp
    7184:	c3                   	ret    
    7185:	8d 76 00             	lea    0x0(%esi),%esi
    7188:	50                   	push   %eax
    7189:	50                   	push   %eax
    718a:	8d 45 d0             	lea    -0x30(%ebp),%eax
    718d:	50                   	push   %eax
    718e:	56                   	push   %esi
    718f:	e8 ec 83 00 00       	call   f580 <async_wait_for@plt>
    7194:	8b 45 d0             	mov    -0x30(%ebp),%eax
    7197:	83 c4 10             	add    $0x10,%esp
    719a:	85 c0                	test   %eax,%eax
    719c:	75 e0                	jne    717e <char_dev_write+0x6e>
    719e:	8b 45 d8             	mov    -0x28(%ebp),%eax
    71a1:	8d 65 f8             	lea    -0x8(%ebp),%esp
    71a4:	5b                   	pop    %ebx
    71a5:	5e                   	pop    %esi
    71a6:	5d                   	pop    %ebp
    71a7:	c3                   	ret    
    71a8:	8d 65 f8             	lea    -0x8(%ebp),%esp
    71ab:	89 d0                	mov    %edx,%eax
    71ad:	5b                   	pop    %ebx
    71ae:	5e                   	pop    %esi
    71af:	5d                   	pop    %ebp
    71b0:	c3                   	ret    
    71b1:	66 90                	xchg   %ax,%ax
    71b3:	66 90                	xchg   %ax,%ax
    71b5:	66 90                	xchg   %ax,%ax
    71b7:	66 90                	xchg   %ax,%ax
    71b9:	66 90                	xchg   %ax,%ax
    71bb:	66 90                	xchg   %ax,%ax
    71bd:	66 90                	xchg   %ax,%ax
    71bf:	90                   	nop

000071c0 <remote_nic_poll_now>:
    71c0:	55                   	push   %ebp
    71c1:	89 e5                	mov    %esp,%ebp
    71c3:	53                   	push   %ebx
    71c4:	50                   	push   %eax
    71c5:	8b 45 0c             	mov    0xc(%ebp),%eax
    71c8:	8b 55 08             	mov    0x8(%ebp),%edx
    71cb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    71ce:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
    71d4:	85 c0                	test   %eax,%eax
    71d6:	74 18                	je     71f0 <remote_nic_poll_now+0x30>
    71d8:	83 ec 0c             	sub    $0xc,%esp
    71db:	52                   	push   %edx
    71dc:	ff d0                	call   *%eax
    71de:	89 5d 08             	mov    %ebx,0x8(%ebp)
    71e1:	83 c4 10             	add    $0x10,%esp
    71e4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    71e7:	89 45 0c             	mov    %eax,0xc(%ebp)
    71ea:	c9                   	leave  
    71eb:	e9 70 84 00 00       	jmp    f660 <async_answer_0@plt>
    71f0:	89 5d 08             	mov    %ebx,0x8(%ebp)
    71f3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    71f6:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    71fd:	c9                   	leave  
    71fe:	e9 5d 84 00 00       	jmp    f660 <async_answer_0@plt>
    7203:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7209:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007210 <remote_nic_offload_set>:
    7210:	55                   	push   %ebp
    7211:	89 e5                	mov    %esp,%ebp
    7213:	53                   	push   %ebx
    7214:	51                   	push   %ecx
    7215:	8b 45 0c             	mov    0xc(%ebp),%eax
    7218:	8b 4d 08             	mov    0x8(%ebp),%ecx
    721b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    721e:	8b 55 14             	mov    0x14(%ebp),%edx
    7221:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax
    7227:	85 c0                	test   %eax,%eax
    7229:	74 25                	je     7250 <remote_nic_offload_set+0x40>
    722b:	83 ec 04             	sub    $0x4,%esp
    722e:	ff 72 0c             	pushl  0xc(%edx)
    7231:	8b 52 08             	mov    0x8(%edx),%edx
    7234:	52                   	push   %edx
    7235:	51                   	push   %ecx
    7236:	ff d0                	call   *%eax
    7238:	89 5d 08             	mov    %ebx,0x8(%ebp)
    723b:	83 c4 10             	add    $0x10,%esp
    723e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    7241:	89 45 0c             	mov    %eax,0xc(%ebp)
    7244:	c9                   	leave  
    7245:	e9 16 84 00 00       	jmp    f660 <async_answer_0@plt>
    724a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7250:	89 5d 08             	mov    %ebx,0x8(%ebp)
    7253:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    7256:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    725d:	c9                   	leave  
    725e:	e9 fd 83 00 00       	jmp    f660 <async_answer_0@plt>
    7263:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7269:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007270 <remote_nic_wol_virtue_remove>:
    7270:	55                   	push   %ebp
    7271:	89 e5                	mov    %esp,%ebp
    7273:	53                   	push   %ebx
    7274:	53                   	push   %ebx
    7275:	8b 45 0c             	mov    0xc(%ebp),%eax
    7278:	8b 55 08             	mov    0x8(%ebp),%edx
    727b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    727e:	8b 4d 14             	mov    0x14(%ebp),%ecx
    7281:	8b 40 7c             	mov    0x7c(%eax),%eax
    7284:	85 c0                	test   %eax,%eax
    7286:	74 20                	je     72a8 <remote_nic_wol_virtue_remove+0x38>
    7288:	83 ec 08             	sub    $0x8,%esp
    728b:	8b 49 08             	mov    0x8(%ecx),%ecx
    728e:	51                   	push   %ecx
    728f:	52                   	push   %edx
    7290:	ff d0                	call   *%eax
    7292:	89 5d 08             	mov    %ebx,0x8(%ebp)
    7295:	83 c4 10             	add    $0x10,%esp
    7298:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    729b:	89 45 0c             	mov    %eax,0xc(%ebp)
    729e:	c9                   	leave  
    729f:	e9 bc 83 00 00       	jmp    f660 <async_answer_0@plt>
    72a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    72a8:	89 5d 08             	mov    %ebx,0x8(%ebp)
    72ab:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    72ae:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    72b5:	c9                   	leave  
    72b6:	e9 a5 83 00 00       	jmp    f660 <async_answer_0@plt>
    72bb:	90                   	nop
    72bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000072c0 <remote_nic_vlan_set_tag>:
    72c0:	55                   	push   %ebp
    72c1:	89 e5                	mov    %esp,%ebp
    72c3:	57                   	push   %edi
    72c4:	56                   	push   %esi
    72c5:	53                   	push   %ebx
    72c6:	83 ec 0c             	sub    $0xc,%esp
    72c9:	8b 55 0c             	mov    0xc(%ebp),%edx
    72cc:	8b 7d 08             	mov    0x8(%ebp),%edi
    72cf:	8b 5d 10             	mov    0x10(%ebp),%ebx
    72d2:	8b 45 14             	mov    0x14(%ebp),%eax
    72d5:	8b 52 74             	mov    0x74(%edx),%edx
    72d8:	85 d2                	test   %edx,%edx
    72da:	74 3c                	je     7318 <remote_nic_vlan_set_tag+0x58>
    72dc:	8b 70 10             	mov    0x10(%eax),%esi
    72df:	31 c9                	xor    %ecx,%ecx
    72e1:	85 f6                	test   %esi,%esi
    72e3:	0f 95 c1             	setne  %cl
    72e6:	89 ce                	mov    %ecx,%esi
    72e8:	31 c9                	xor    %ecx,%ecx
    72ea:	56                   	push   %esi
    72eb:	8b 70 0c             	mov    0xc(%eax),%esi
    72ee:	85 f6                	test   %esi,%esi
    72f0:	0f 95 c1             	setne  %cl
    72f3:	89 ce                	mov    %ecx,%esi
    72f5:	56                   	push   %esi
    72f6:	8b 48 08             	mov    0x8(%eax),%ecx
    72f9:	81 e1 ff ff 00 00    	and    $0xffff,%ecx
    72ff:	51                   	push   %ecx
    7300:	57                   	push   %edi
    7301:	ff d2                	call   *%edx
    7303:	89 5d 08             	mov    %ebx,0x8(%ebp)
    7306:	89 45 0c             	mov    %eax,0xc(%ebp)
    7309:	83 c4 10             	add    $0x10,%esp
    730c:	8d 65 f4             	lea    -0xc(%ebp),%esp
    730f:	5b                   	pop    %ebx
    7310:	5e                   	pop    %esi
    7311:	5f                   	pop    %edi
    7312:	5d                   	pop    %ebp
    7313:	e9 48 83 00 00       	jmp    f660 <async_answer_0@plt>
    7318:	89 5d 08             	mov    %ebx,0x8(%ebp)
    731b:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    7322:	8d 65 f4             	lea    -0xc(%ebp),%esp
    7325:	5b                   	pop    %ebx
    7326:	5e                   	pop    %esi
    7327:	5f                   	pop    %edi
    7328:	5d                   	pop    %ebp
    7329:	e9 32 83 00 00       	jmp    f660 <async_answer_0@plt>
    732e:	66 90                	xchg   %ax,%ax

00007330 <remote_nic_defective_set_mode>:
    7330:	55                   	push   %ebp
    7331:	89 e5                	mov    %esp,%ebp
    7333:	53                   	push   %ebx
    7334:	53                   	push   %ebx
    7335:	8b 45 0c             	mov    0xc(%ebp),%eax
    7338:	8b 55 08             	mov    0x8(%ebp),%edx
    733b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    733e:	8b 4d 14             	mov    0x14(%ebp),%ecx
    7341:	8b 40 60             	mov    0x60(%eax),%eax
    7344:	85 c0                	test   %eax,%eax
    7346:	74 20                	je     7368 <remote_nic_defective_set_mode+0x38>
    7348:	83 ec 08             	sub    $0x8,%esp
    734b:	8b 49 08             	mov    0x8(%ecx),%ecx
    734e:	51                   	push   %ecx
    734f:	52                   	push   %edx
    7350:	ff d0                	call   *%eax
    7352:	89 5d 08             	mov    %ebx,0x8(%ebp)
    7355:	83 c4 10             	add    $0x10,%esp
    7358:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    735b:	89 45 0c             	mov    %eax,0xc(%ebp)
    735e:	c9                   	leave  
    735f:	e9 fc 82 00 00       	jmp    f660 <async_answer_0@plt>
    7364:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7368:	89 5d 08             	mov    %ebx,0x8(%ebp)
    736b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    736e:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    7375:	c9                   	leave  
    7376:	e9 e5 82 00 00       	jmp    f660 <async_answer_0@plt>
    737b:	90                   	nop
    737c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00007380 <remote_nic_broadcast_set_mode>:
    7380:	55                   	push   %ebp
    7381:	89 e5                	mov    %esp,%ebp
    7383:	53                   	push   %ebx
    7384:	53                   	push   %ebx
    7385:	8b 45 0c             	mov    0xc(%ebp),%eax
    7388:	8b 55 08             	mov    0x8(%ebp),%edx
    738b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    738e:	8b 4d 14             	mov    0x14(%ebp),%ecx
    7391:	8b 40 58             	mov    0x58(%eax),%eax
    7394:	85 c0                	test   %eax,%eax
    7396:	74 20                	je     73b8 <remote_nic_broadcast_set_mode+0x38>
    7398:	83 ec 08             	sub    $0x8,%esp
    739b:	8b 49 08             	mov    0x8(%ecx),%ecx
    739e:	51                   	push   %ecx
    739f:	52                   	push   %edx
    73a0:	ff d0                	call   *%eax
    73a2:	89 5d 08             	mov    %ebx,0x8(%ebp)
    73a5:	83 c4 10             	add    $0x10,%esp
    73a8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    73ab:	89 45 0c             	mov    %eax,0xc(%ebp)
    73ae:	c9                   	leave  
    73af:	e9 ac 82 00 00       	jmp    f660 <async_answer_0@plt>
    73b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    73b8:	89 5d 08             	mov    %ebx,0x8(%ebp)
    73bb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    73be:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    73c5:	c9                   	leave  
    73c6:	e9 95 82 00 00       	jmp    f660 <async_answer_0@plt>
    73cb:	90                   	nop
    73cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000073d0 <remote_nic_set_pause>:
    73d0:	55                   	push   %ebp
    73d1:	89 e5                	mov    %esp,%ebp
    73d3:	56                   	push   %esi
    73d4:	53                   	push   %ebx
    73d5:	8b 55 0c             	mov    0xc(%ebp),%edx
    73d8:	8b 4d 08             	mov    0x8(%ebp),%ecx
    73db:	8b 5d 10             	mov    0x10(%ebp),%ebx
    73de:	8b 45 14             	mov    0x14(%ebp),%eax
    73e1:	8b 52 40             	mov    0x40(%edx),%edx
    73e4:	85 d2                	test   %edx,%edx
    73e6:	74 28                	je     7410 <remote_nic_set_pause+0x40>
    73e8:	31 f6                	xor    %esi,%esi
    73ea:	66 8b 70 10          	mov    0x10(%eax),%si
    73ee:	56                   	push   %esi
    73ef:	8b 70 0c             	mov    0xc(%eax),%esi
    73f2:	56                   	push   %esi
    73f3:	8b 40 08             	mov    0x8(%eax),%eax
    73f6:	50                   	push   %eax
    73f7:	51                   	push   %ecx
    73f8:	ff d2                	call   *%edx
    73fa:	89 5d 08             	mov    %ebx,0x8(%ebp)
    73fd:	89 45 0c             	mov    %eax,0xc(%ebp)
    7400:	83 c4 10             	add    $0x10,%esp
    7403:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7406:	5b                   	pop    %ebx
    7407:	5e                   	pop    %esi
    7408:	5d                   	pop    %ebp
    7409:	e9 52 82 00 00       	jmp    f660 <async_answer_0@plt>
    740e:	66 90                	xchg   %ax,%ax
    7410:	89 5d 08             	mov    %ebx,0x8(%ebp)
    7413:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    741a:	8d 65 f8             	lea    -0x8(%ebp),%esp
    741d:	5b                   	pop    %ebx
    741e:	5e                   	pop    %esi
    741f:	5d                   	pop    %ebp
    7420:	e9 3b 82 00 00       	jmp    f660 <async_answer_0@plt>
    7425:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7429:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007430 <remote_nic_autoneg_restart>:
    7430:	55                   	push   %ebp
    7431:	89 e5                	mov    %esp,%ebp
    7433:	53                   	push   %ebx
    7434:	50                   	push   %eax
    7435:	8b 45 0c             	mov    0xc(%ebp),%eax
    7438:	8b 55 08             	mov    0x8(%ebp),%edx
    743b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    743e:	8b 40 38             	mov    0x38(%eax),%eax
    7441:	85 c0                	test   %eax,%eax
    7443:	74 1b                	je     7460 <remote_nic_autoneg_restart+0x30>
    7445:	83 ec 0c             	sub    $0xc,%esp
    7448:	52                   	push   %edx
    7449:	ff d0                	call   *%eax
    744b:	89 5d 08             	mov    %ebx,0x8(%ebp)
    744e:	83 c4 10             	add    $0x10,%esp
    7451:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    7454:	89 45 0c             	mov    %eax,0xc(%ebp)
    7457:	c9                   	leave  
    7458:	e9 03 82 00 00       	jmp    f660 <async_answer_0@plt>
    745d:	8d 76 00             	lea    0x0(%esi),%esi
    7460:	89 5d 08             	mov    %ebx,0x8(%ebp)
    7463:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    7466:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    746d:	c9                   	leave  
    746e:	e9 ed 81 00 00       	jmp    f660 <async_answer_0@plt>
    7473:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7479:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007480 <remote_nic_autoneg_disable>:
    7480:	55                   	push   %ebp
    7481:	89 e5                	mov    %esp,%ebp
    7483:	53                   	push   %ebx
    7484:	50                   	push   %eax
    7485:	8b 45 0c             	mov    0xc(%ebp),%eax
    7488:	8b 55 08             	mov    0x8(%ebp),%edx
    748b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    748e:	8b 40 30             	mov    0x30(%eax),%eax
    7491:	85 c0                	test   %eax,%eax
    7493:	74 1b                	je     74b0 <remote_nic_autoneg_disable+0x30>
    7495:	83 ec 0c             	sub    $0xc,%esp
    7498:	52                   	push   %edx
    7499:	ff d0                	call   *%eax
    749b:	89 5d 08             	mov    %ebx,0x8(%ebp)
    749e:	83 c4 10             	add    $0x10,%esp
    74a1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    74a4:	89 45 0c             	mov    %eax,0xc(%ebp)
    74a7:	c9                   	leave  
    74a8:	e9 b3 81 00 00       	jmp    f660 <async_answer_0@plt>
    74ad:	8d 76 00             	lea    0x0(%esi),%esi
    74b0:	89 5d 08             	mov    %ebx,0x8(%ebp)
    74b3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    74b6:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    74bd:	c9                   	leave  
    74be:	e9 9d 81 00 00       	jmp    f660 <async_answer_0@plt>
    74c3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    74c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000074d0 <remote_nic_autoneg_enable>:
    74d0:	55                   	push   %ebp
    74d1:	89 e5                	mov    %esp,%ebp
    74d3:	53                   	push   %ebx
    74d4:	53                   	push   %ebx
    74d5:	8b 45 0c             	mov    0xc(%ebp),%eax
    74d8:	8b 55 08             	mov    0x8(%ebp),%edx
    74db:	8b 5d 10             	mov    0x10(%ebp),%ebx
    74de:	8b 4d 14             	mov    0x14(%ebp),%ecx
    74e1:	8b 40 2c             	mov    0x2c(%eax),%eax
    74e4:	85 c0                	test   %eax,%eax
    74e6:	74 20                	je     7508 <remote_nic_autoneg_enable+0x38>
    74e8:	83 ec 08             	sub    $0x8,%esp
    74eb:	8b 49 08             	mov    0x8(%ecx),%ecx
    74ee:	51                   	push   %ecx
    74ef:	52                   	push   %edx
    74f0:	ff d0                	call   *%eax
    74f2:	89 5d 08             	mov    %ebx,0x8(%ebp)
    74f5:	83 c4 10             	add    $0x10,%esp
    74f8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    74fb:	89 45 0c             	mov    %eax,0xc(%ebp)
    74fe:	c9                   	leave  
    74ff:	e9 5c 81 00 00       	jmp    f660 <async_answer_0@plt>
    7504:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7508:	89 5d 08             	mov    %ebx,0x8(%ebp)
    750b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    750e:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    7515:	c9                   	leave  
    7516:	e9 45 81 00 00       	jmp    f660 <async_answer_0@plt>
    751b:	90                   	nop
    751c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00007520 <remote_nic_set_operation_mode>:
    7520:	55                   	push   %ebp
    7521:	89 e5                	mov    %esp,%ebp
    7523:	53                   	push   %ebx
    7524:	52                   	push   %edx
    7525:	8b 55 0c             	mov    0xc(%ebp),%edx
    7528:	8b 4d 08             	mov    0x8(%ebp),%ecx
    752b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    752e:	8b 45 14             	mov    0x14(%ebp),%eax
    7531:	8b 52 28             	mov    0x28(%edx),%edx
    7534:	85 d2                	test   %edx,%edx
    7536:	74 20                	je     7558 <remote_nic_set_operation_mode+0x38>
    7538:	ff 70 10             	pushl  0x10(%eax)
    753b:	ff 70 0c             	pushl  0xc(%eax)
    753e:	8b 40 08             	mov    0x8(%eax),%eax
    7541:	50                   	push   %eax
    7542:	51                   	push   %ecx
    7543:	ff d2                	call   *%edx
    7545:	89 5d 08             	mov    %ebx,0x8(%ebp)
    7548:	83 c4 10             	add    $0x10,%esp
    754b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    754e:	89 45 0c             	mov    %eax,0xc(%ebp)
    7551:	c9                   	leave  
    7552:	e9 09 81 00 00       	jmp    f660 <async_answer_0@plt>
    7557:	90                   	nop
    7558:	89 5d 08             	mov    %ebx,0x8(%ebp)
    755b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    755e:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    7565:	c9                   	leave  
    7566:	e9 f5 80 00 00       	jmp    f660 <async_answer_0@plt>
    756b:	90                   	nop
    756c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00007570 <remote_nic_poll_set_mode>:
    7570:	55                   	push   %ebp
    7571:	31 d2                	xor    %edx,%edx
    7573:	89 e5                	mov    %esp,%ebp
    7575:	56                   	push   %esi
    7576:	53                   	push   %ebx
    7577:	83 ec 10             	sub    $0x10,%esp
    757a:	8b 45 14             	mov    0x14(%ebp),%eax
    757d:	8b 70 08             	mov    0x8(%eax),%esi
    7580:	8b 40 0c             	mov    0xc(%eax),%eax
    7583:	85 c0                	test   %eax,%eax
    7585:	75 31                	jne    75b8 <remote_nic_poll_set_mode+0x48>
    7587:	8b 45 0c             	mov    0xc(%ebp),%eax
    758a:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax
    7590:	85 c0                	test   %eax,%eax
    7592:	0f 84 90 00 00 00    	je     7628 <remote_nic_poll_set_mode+0xb8>
    7598:	8b 5d 08             	mov    0x8(%ebp),%ebx
    759b:	51                   	push   %ecx
    759c:	52                   	push   %edx
    759d:	56                   	push   %esi
    759e:	53                   	push   %ebx
    759f:	ff d0                	call   *%eax
    75a1:	8b 4d 10             	mov    0x10(%ebp),%ecx
    75a4:	5e                   	pop    %esi
    75a5:	5a                   	pop    %edx
    75a6:	50                   	push   %eax
    75a7:	51                   	push   %ecx
    75a8:	e8 b3 80 00 00       	call   f660 <async_answer_0@plt>
    75ad:	83 c4 10             	add    $0x10,%esp
    75b0:	8d 65 f8             	lea    -0x8(%ebp),%esp
    75b3:	5b                   	pop    %ebx
    75b4:	5e                   	pop    %esi
    75b5:	5d                   	pop    %ebp
    75b6:	c3                   	ret    
    75b7:	90                   	nop
    75b8:	8d 45 e8             	lea    -0x18(%ebp),%eax
    75bb:	53                   	push   %ebx
    75bc:	53                   	push   %ebx
    75bd:	50                   	push   %eax
    75be:	8d 45 ec             	lea    -0x14(%ebp),%eax
    75c1:	50                   	push   %eax
    75c2:	e8 c9 83 00 00       	call   f990 <async_data_write_receive@plt>
    75c7:	83 c4 10             	add    $0x10,%esp
    75ca:	84 c0                	test   %al,%al
    75cc:	74 72                	je     7640 <remote_nic_poll_set_mode+0xd0>
    75ce:	83 7d e8 08          	cmpl   $0x8,-0x18(%ebp)
    75d2:	74 24                	je     75f8 <remote_nic_poll_set_mode+0x88>
    75d4:	50                   	push   %eax
    75d5:	50                   	push   %eax
    75d6:	8b 45 ec             	mov    -0x14(%ebp),%eax
    75d9:	6a fd                	push   $0xfffffffd
    75db:	50                   	push   %eax
    75dc:	e8 7f 80 00 00       	call   f660 <async_answer_0@plt>
    75e1:	8b 4d 10             	mov    0x10(%ebp),%ecx
    75e4:	58                   	pop    %eax
    75e5:	5a                   	pop    %edx
    75e6:	6a fd                	push   $0xfffffffd
    75e8:	51                   	push   %ecx
    75e9:	e8 72 80 00 00       	call   f660 <async_answer_0@plt>
    75ee:	83 c4 10             	add    $0x10,%esp
    75f1:	8d 65 f8             	lea    -0x8(%ebp),%esp
    75f4:	5b                   	pop    %ebx
    75f5:	5e                   	pop    %esi
    75f6:	5d                   	pop    %ebp
    75f7:	c3                   	ret    
    75f8:	8d 5d f0             	lea    -0x10(%ebp),%ebx
    75fb:	50                   	push   %eax
    75fc:	8b 45 ec             	mov    -0x14(%ebp),%eax
    75ff:	6a 08                	push   $0x8
    7601:	53                   	push   %ebx
    7602:	50                   	push   %eax
    7603:	e8 18 83 00 00       	call   f920 <async_data_write_finalize@plt>
    7608:	83 c4 10             	add    $0x10,%esp
    760b:	89 da                	mov    %ebx,%edx
    760d:	85 c0                	test   %eax,%eax
    760f:	0f 84 72 ff ff ff    	je     7587 <remote_nic_poll_set_mode+0x17>
    7615:	8b 75 10             	mov    0x10(%ebp),%esi
    7618:	53                   	push   %ebx
    7619:	53                   	push   %ebx
    761a:	6a f2                	push   $0xfffffff2
    761c:	56                   	push   %esi
    761d:	e8 3e 80 00 00       	call   f660 <async_answer_0@plt>
    7622:	83 c4 10             	add    $0x10,%esp
    7625:	eb 89                	jmp    75b0 <remote_nic_poll_set_mode+0x40>
    7627:	90                   	nop
    7628:	8b 55 10             	mov    0x10(%ebp),%edx
    762b:	50                   	push   %eax
    762c:	50                   	push   %eax
    762d:	6a f5                	push   $0xfffffff5
    762f:	52                   	push   %edx
    7630:	e8 2b 80 00 00       	call   f660 <async_answer_0@plt>
    7635:	83 c4 10             	add    $0x10,%esp
    7638:	8d 65 f8             	lea    -0x8(%ebp),%esp
    763b:	5b                   	pop    %ebx
    763c:	5e                   	pop    %esi
    763d:	5d                   	pop    %ebp
    763e:	c3                   	ret    
    763f:	90                   	nop
    7640:	8b 75 ec             	mov    -0x14(%ebp),%esi
    7643:	53                   	push   %ebx
    7644:	53                   	push   %ebx
    7645:	6a f2                	push   $0xfffffff2
    7647:	56                   	push   %esi
    7648:	e8 13 80 00 00       	call   f660 <async_answer_0@plt>
    764d:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7650:	58                   	pop    %eax
    7651:	5a                   	pop    %edx
    7652:	6a f2                	push   $0xfffffff2
    7654:	51                   	push   %ecx
    7655:	e8 06 80 00 00       	call   f660 <async_answer_0@plt>
    765a:	83 c4 10             	add    $0x10,%esp
    765d:	e9 4e ff ff ff       	jmp    75b0 <remote_nic_poll_set_mode+0x40>
    7662:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7669:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007670 <remote_nic_vlan_set_mask>:
    7670:	55                   	push   %ebp
    7671:	31 d2                	xor    %edx,%edx
    7673:	89 e5                	mov    %esp,%ebp
    7675:	53                   	push   %ebx
    7676:	81 ec 14 02 00 00    	sub    $0x214,%esp
    767c:	8b 45 14             	mov    0x14(%ebp),%eax
    767f:	8b 40 08             	mov    0x8(%eax),%eax
    7682:	85 c0                	test   %eax,%eax
    7684:	75 32                	jne    76b8 <remote_nic_vlan_set_mask+0x48>
    7686:	8b 45 0c             	mov    0xc(%ebp),%eax
    7689:	8b 40 70             	mov    0x70(%eax),%eax
    768c:	85 c0                	test   %eax,%eax
    768e:	0f 84 bc 00 00 00    	je     7750 <remote_nic_vlan_set_mask+0xe0>
    7694:	8b 5d 08             	mov    0x8(%ebp),%ebx
    7697:	51                   	push   %ecx
    7698:	51                   	push   %ecx
    7699:	52                   	push   %edx
    769a:	53                   	push   %ebx
    769b:	ff d0                	call   *%eax
    769d:	8b 5d 10             	mov    0x10(%ebp),%ebx
    76a0:	5a                   	pop    %edx
    76a1:	59                   	pop    %ecx
    76a2:	50                   	push   %eax
    76a3:	53                   	push   %ebx
    76a4:	e8 b7 7f 00 00       	call   f660 <async_answer_0@plt>
    76a9:	83 c4 10             	add    $0x10,%esp
    76ac:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    76af:	c9                   	leave  
    76b0:	c3                   	ret    
    76b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    76b8:	8d 85 f4 fd ff ff    	lea    -0x20c(%ebp),%eax
    76be:	53                   	push   %ebx
    76bf:	53                   	push   %ebx
    76c0:	50                   	push   %eax
    76c1:	8d 85 f0 fd ff ff    	lea    -0x210(%ebp),%eax
    76c7:	50                   	push   %eax
    76c8:	e8 c3 82 00 00       	call   f990 <async_data_write_receive@plt>
    76cd:	83 c4 10             	add    $0x10,%esp
    76d0:	84 c0                	test   %al,%al
    76d2:	0f 84 90 00 00 00    	je     7768 <remote_nic_vlan_set_mask+0xf8>
    76d8:	81 bd f4 fd ff ff 00 	cmpl   $0x200,-0x20c(%ebp)
    76df:	02 00 00 
    76e2:	74 2c                	je     7710 <remote_nic_vlan_set_mask+0xa0>
    76e4:	50                   	push   %eax
    76e5:	50                   	push   %eax
    76e6:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
    76ec:	6a fd                	push   $0xfffffffd
    76ee:	50                   	push   %eax
    76ef:	e8 6c 7f 00 00       	call   f660 <async_answer_0@plt>
    76f4:	8b 5d 10             	mov    0x10(%ebp),%ebx
    76f7:	5a                   	pop    %edx
    76f8:	59                   	pop    %ecx
    76f9:	6a fd                	push   $0xfffffffd
    76fb:	53                   	push   %ebx
    76fc:	e8 5f 7f 00 00       	call   f660 <async_answer_0@plt>
    7701:	83 c4 10             	add    $0x10,%esp
    7704:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    7707:	c9                   	leave  
    7708:	c3                   	ret    
    7709:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7710:	8d 9d f8 fd ff ff    	lea    -0x208(%ebp),%ebx
    7716:	50                   	push   %eax
    7717:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
    771d:	68 00 02 00 00       	push   $0x200
    7722:	53                   	push   %ebx
    7723:	50                   	push   %eax
    7724:	e8 f7 81 00 00       	call   f920 <async_data_write_finalize@plt>
    7729:	83 c4 10             	add    $0x10,%esp
    772c:	89 da                	mov    %ebx,%edx
    772e:	85 c0                	test   %eax,%eax
    7730:	0f 84 50 ff ff ff    	je     7686 <remote_nic_vlan_set_mask+0x16>
    7736:	50                   	push   %eax
    7737:	50                   	push   %eax
    7738:	8b 45 10             	mov    0x10(%ebp),%eax
    773b:	6a f2                	push   $0xfffffff2
    773d:	50                   	push   %eax
    773e:	e8 1d 7f 00 00       	call   f660 <async_answer_0@plt>
    7743:	83 c4 10             	add    $0x10,%esp
    7746:	e9 61 ff ff ff       	jmp    76ac <remote_nic_vlan_set_mask+0x3c>
    774b:	90                   	nop
    774c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7750:	8b 55 10             	mov    0x10(%ebp),%edx
    7753:	50                   	push   %eax
    7754:	50                   	push   %eax
    7755:	6a f5                	push   $0xfffffff5
    7757:	52                   	push   %edx
    7758:	e8 03 7f 00 00       	call   f660 <async_answer_0@plt>
    775d:	83 c4 10             	add    $0x10,%esp
    7760:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    7763:	c9                   	leave  
    7764:	c3                   	ret    
    7765:	8d 76 00             	lea    0x0(%esi),%esi
    7768:	50                   	push   %eax
    7769:	50                   	push   %eax
    776a:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
    7770:	6a f2                	push   $0xfffffff2
    7772:	50                   	push   %eax
    7773:	e8 e8 7e 00 00       	call   f660 <async_answer_0@plt>
    7778:	8b 4d 10             	mov    0x10(%ebp),%ecx
    777b:	58                   	pop    %eax
    777c:	5a                   	pop    %edx
    777d:	6a f2                	push   $0xfffffff2
    777f:	51                   	push   %ecx
    7780:	e8 db 7e 00 00       	call   f660 <async_answer_0@plt>
    7785:	83 c4 10             	add    $0x10,%esp
    7788:	e9 1f ff ff ff       	jmp    76ac <remote_nic_vlan_set_mask+0x3c>
    778d:	8d 76 00             	lea    0x0(%esi),%esi

00007790 <remote_nic_set_address>:
    7790:	55                   	push   %ebp
    7791:	89 e5                	mov    %esp,%ebp
    7793:	53                   	push   %ebx
    7794:	83 ec 1c             	sub    $0x1c,%esp
    7797:	8d 45 e8             	lea    -0x18(%ebp),%eax
    779a:	50                   	push   %eax
    779b:	8d 45 ec             	lea    -0x14(%ebp),%eax
    779e:	50                   	push   %eax
    779f:	e8 ec 81 00 00       	call   f990 <async_data_write_receive@plt>
    77a4:	83 c4 10             	add    $0x10,%esp
    77a7:	84 c0                	test   %al,%al
    77a9:	74 75                	je     7820 <remote_nic_set_address+0x90>
    77ab:	8b 45 e8             	mov    -0x18(%ebp),%eax
    77ae:	83 f8 06             	cmp    $0x6,%eax
    77b1:	77 45                	ja     77f8 <remote_nic_set_address+0x68>
    77b3:	8b 4d ec             	mov    -0x14(%ebp),%ecx
    77b6:	8d 5d f2             	lea    -0xe(%ebp),%ebx
    77b9:	52                   	push   %edx
    77ba:	50                   	push   %eax
    77bb:	53                   	push   %ebx
    77bc:	51                   	push   %ecx
    77bd:	e8 5e 81 00 00       	call   f920 <async_data_write_finalize@plt>
    77c2:	83 c4 10             	add    $0x10,%esp
    77c5:	85 c0                	test   %eax,%eax
    77c7:	75 7f                	jne    7848 <remote_nic_set_address+0xb8>
    77c9:	8b 45 0c             	mov    0xc(%ebp),%eax
    77cc:	8b 40 14             	mov    0x14(%eax),%eax
    77cf:	85 c0                	test   %eax,%eax
    77d1:	0f 84 89 00 00 00    	je     7860 <remote_nic_set_address+0xd0>
    77d7:	51                   	push   %ecx
    77d8:	51                   	push   %ecx
    77d9:	53                   	push   %ebx
    77da:	8b 5d 08             	mov    0x8(%ebp),%ebx
    77dd:	53                   	push   %ebx
    77de:	ff d0                	call   *%eax
    77e0:	8b 5d 10             	mov    0x10(%ebp),%ebx
    77e3:	5a                   	pop    %edx
    77e4:	59                   	pop    %ecx
    77e5:	50                   	push   %eax
    77e6:	53                   	push   %ebx
    77e7:	e8 74 7e 00 00       	call   f660 <async_answer_0@plt>
    77ec:	83 c4 10             	add    $0x10,%esp
    77ef:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    77f2:	c9                   	leave  
    77f3:	c3                   	ret    
    77f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    77f8:	8b 45 ec             	mov    -0x14(%ebp),%eax
    77fb:	53                   	push   %ebx
    77fc:	53                   	push   %ebx
    77fd:	6a fd                	push   $0xfffffffd
    77ff:	50                   	push   %eax
    7800:	e8 5b 7e 00 00       	call   f660 <async_answer_0@plt>
    7805:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7808:	58                   	pop    %eax
    7809:	5a                   	pop    %edx
    780a:	6a fd                	push   $0xfffffffd
    780c:	51                   	push   %ecx
    780d:	e8 4e 7e 00 00       	call   f660 <async_answer_0@plt>
    7812:	83 c4 10             	add    $0x10,%esp
    7815:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    7818:	c9                   	leave  
    7819:	c3                   	ret    
    781a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7820:	8b 45 ec             	mov    -0x14(%ebp),%eax
    7823:	53                   	push   %ebx
    7824:	53                   	push   %ebx
    7825:	6a f2                	push   $0xfffffff2
    7827:	50                   	push   %eax
    7828:	e8 33 7e 00 00       	call   f660 <async_answer_0@plt>
    782d:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7830:	58                   	pop    %eax
    7831:	5a                   	pop    %edx
    7832:	6a f2                	push   $0xfffffff2
    7834:	51                   	push   %ecx
    7835:	e8 26 7e 00 00       	call   f660 <async_answer_0@plt>
    783a:	83 c4 10             	add    $0x10,%esp
    783d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    7840:	c9                   	leave  
    7841:	c3                   	ret    
    7842:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7848:	50                   	push   %eax
    7849:	50                   	push   %eax
    784a:	8b 45 10             	mov    0x10(%ebp),%eax
    784d:	6a f2                	push   $0xfffffff2
    784f:	50                   	push   %eax
    7850:	e8 0b 7e 00 00       	call   f660 <async_answer_0@plt>
    7855:	83 c4 10             	add    $0x10,%esp
    7858:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    785b:	c9                   	leave  
    785c:	c3                   	ret    
    785d:	8d 76 00             	lea    0x0(%esi),%esi
    7860:	8b 55 10             	mov    0x10(%ebp),%edx
    7863:	50                   	push   %eax
    7864:	50                   	push   %eax
    7865:	6a f5                	push   $0xfffffff5
    7867:	52                   	push   %edx
    7868:	e8 f3 7d 00 00       	call   f660 <async_answer_0@plt>
    786d:	83 c4 10             	add    $0x10,%esp
    7870:	e9 7a ff ff ff       	jmp    77ef <remote_nic_set_address+0x5f>
    7875:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7879:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007880 <remote_nic_poll_get_mode>:
    7880:	55                   	push   %ebp
    7881:	89 e5                	mov    %esp,%ebp
    7883:	57                   	push   %edi
    7884:	56                   	push   %esi
    7885:	53                   	push   %ebx
    7886:	83 ec 2c             	sub    $0x2c,%esp
    7889:	8b 45 0c             	mov    0xc(%ebp),%eax
    788c:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax
    7892:	85 c0                	test   %eax,%eax
    7894:	0f 84 d6 00 00 00    	je     7970 <remote_nic_poll_get_mode+0xf0>
    789a:	8b 55 14             	mov    0x14(%ebp),%edx
    789d:	8b 4d 08             	mov    0x8(%ebp),%ecx
    78a0:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
    78a7:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    78ae:	8b 72 08             	mov    0x8(%edx),%esi
    78b1:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    78b8:	8d 5d e0             	lea    -0x20(%ebp),%ebx
    78bb:	52                   	push   %edx
    78bc:	8d 55 d4             	lea    -0x2c(%ebp),%edx
    78bf:	53                   	push   %ebx
    78c0:	52                   	push   %edx
    78c1:	51                   	push   %ecx
    78c2:	ff d0                	call   *%eax
    78c4:	83 c4 10             	add    $0x10,%esp
    78c7:	89 c7                	mov    %eax,%edi
    78c9:	85 c0                	test   %eax,%eax
    78cb:	75 5b                	jne    7928 <remote_nic_poll_get_mode+0xa8>
    78cd:	85 f6                	test   %esi,%esi
    78cf:	74 57                	je     7928 <remote_nic_poll_get_mode+0xa8>
    78d1:	50                   	push   %eax
    78d2:	50                   	push   %eax
    78d3:	8d 45 d8             	lea    -0x28(%ebp),%eax
    78d6:	50                   	push   %eax
    78d7:	8d 45 dc             	lea    -0x24(%ebp),%eax
    78da:	50                   	push   %eax
    78db:	e8 30 7f 00 00       	call   f810 <async_data_read_receive@plt>
    78e0:	83 c4 10             	add    $0x10,%esp
    78e3:	84 c0                	test   %al,%al
    78e5:	74 61                	je     7948 <remote_nic_poll_get_mode+0xc8>
    78e7:	83 7d d8 08          	cmpl   $0x8,-0x28(%ebp)
    78eb:	74 2b                	je     7918 <remote_nic_poll_get_mode+0x98>
    78ed:	50                   	push   %eax
    78ee:	50                   	push   %eax
    78ef:	8b 45 dc             	mov    -0x24(%ebp),%eax
    78f2:	6a fd                	push   $0xfffffffd
    78f4:	50                   	push   %eax
    78f5:	e8 66 7d 00 00       	call   f660 <async_answer_0@plt>
    78fa:	8b 4d 10             	mov    0x10(%ebp),%ecx
    78fd:	58                   	pop    %eax
    78fe:	5a                   	pop    %edx
    78ff:	6a fd                	push   $0xfffffffd
    7901:	51                   	push   %ecx
    7902:	e8 59 7d 00 00       	call   f660 <async_answer_0@plt>
    7907:	83 c4 10             	add    $0x10,%esp
    790a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    790d:	5b                   	pop    %ebx
    790e:	5e                   	pop    %esi
    790f:	5f                   	pop    %edi
    7910:	5d                   	pop    %ebp
    7911:	c3                   	ret    
    7912:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7918:	8b 45 dc             	mov    -0x24(%ebp),%eax
    791b:	56                   	push   %esi
    791c:	6a 08                	push   $0x8
    791e:	53                   	push   %ebx
    791f:	50                   	push   %eax
    7920:	e8 cb 7c 00 00       	call   f5f0 <async_data_read_finalize@plt>
    7925:	83 c4 10             	add    $0x10,%esp
    7928:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    792b:	8b 4d 10             	mov    0x10(%ebp),%ecx
    792e:	50                   	push   %eax
    792f:	52                   	push   %edx
    7930:	57                   	push   %edi
    7931:	51                   	push   %ecx
    7932:	e8 69 7f 00 00       	call   f8a0 <async_answer_1@plt>
    7937:	83 c4 10             	add    $0x10,%esp
    793a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    793d:	5b                   	pop    %ebx
    793e:	5e                   	pop    %esi
    793f:	5f                   	pop    %edi
    7940:	5d                   	pop    %ebp
    7941:	c3                   	ret    
    7942:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7948:	8b 75 dc             	mov    -0x24(%ebp),%esi
    794b:	53                   	push   %ebx
    794c:	53                   	push   %ebx
    794d:	6a f2                	push   $0xfffffff2
    794f:	56                   	push   %esi
    7950:	e8 0b 7d 00 00       	call   f660 <async_answer_0@plt>
    7955:	5f                   	pop    %edi
    7956:	58                   	pop    %eax
    7957:	8b 45 10             	mov    0x10(%ebp),%eax
    795a:	6a f2                	push   $0xfffffff2
    795c:	50                   	push   %eax
    795d:	e8 fe 7c 00 00       	call   f660 <async_answer_0@plt>
    7962:	83 c4 10             	add    $0x10,%esp
    7965:	8d 65 f4             	lea    -0xc(%ebp),%esp
    7968:	5b                   	pop    %ebx
    7969:	5e                   	pop    %esi
    796a:	5f                   	pop    %edi
    796b:	5d                   	pop    %ebp
    796c:	c3                   	ret    
    796d:	8d 76 00             	lea    0x0(%esi),%esi
    7970:	8b 75 10             	mov    0x10(%ebp),%esi
    7973:	53                   	push   %ebx
    7974:	53                   	push   %ebx
    7975:	6a f5                	push   $0xfffffff5
    7977:	56                   	push   %esi
    7978:	e8 e3 7c 00 00       	call   f660 <async_answer_0@plt>
    797d:	83 c4 10             	add    $0x10,%esp
    7980:	8d 65 f4             	lea    -0xc(%ebp),%esp
    7983:	5b                   	pop    %ebx
    7984:	5e                   	pop    %esi
    7985:	5f                   	pop    %edi
    7986:	5d                   	pop    %ebp
    7987:	c3                   	ret    
    7988:	90                   	nop
    7989:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00007990 <remote_nic_wol_virtue_get_caps>:
    7990:	55                   	push   %ebp
    7991:	89 e5                	mov    %esp,%ebp
    7993:	83 ec 18             	sub    $0x18,%esp
    7996:	8b 45 0c             	mov    0xc(%ebp),%eax
    7999:	8b 80 88 00 00 00    	mov    0x88(%eax),%eax
    799f:	85 c0                	test   %eax,%eax
    79a1:	74 35                	je     79d8 <remote_nic_wol_virtue_get_caps+0x48>
    79a3:	52                   	push   %edx
    79a4:	8d 55 f4             	lea    -0xc(%ebp),%edx
    79a7:	52                   	push   %edx
    79a8:	8b 55 14             	mov    0x14(%ebp),%edx
    79ab:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
    79b2:	8b 4a 08             	mov    0x8(%edx),%ecx
    79b5:	8b 55 08             	mov    0x8(%ebp),%edx
    79b8:	51                   	push   %ecx
    79b9:	52                   	push   %edx
    79ba:	ff d0                	call   *%eax
    79bc:	83 c4 0c             	add    $0xc,%esp
    79bf:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    79c2:	51                   	push   %ecx
    79c3:	50                   	push   %eax
    79c4:	8b 45 10             	mov    0x10(%ebp),%eax
    79c7:	50                   	push   %eax
    79c8:	e8 d3 7e 00 00       	call   f8a0 <async_answer_1@plt>
    79cd:	83 c4 10             	add    $0x10,%esp
    79d0:	c9                   	leave  
    79d1:	c3                   	ret    
    79d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    79d8:	50                   	push   %eax
    79d9:	50                   	push   %eax
    79da:	8b 45 10             	mov    0x10(%ebp),%eax
    79dd:	6a f5                	push   $0xfffffff5
    79df:	50                   	push   %eax
    79e0:	e8 7b 7c 00 00       	call   f660 <async_answer_0@plt>
    79e5:	83 c4 10             	add    $0x10,%esp
    79e8:	c9                   	leave  
    79e9:	c3                   	ret    
    79ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000079f0 <remote_nic_defective_get_mode>:
    79f0:	55                   	push   %ebp
    79f1:	89 e5                	mov    %esp,%ebp
    79f3:	83 ec 18             	sub    $0x18,%esp
    79f6:	8b 45 0c             	mov    0xc(%ebp),%eax
    79f9:	8b 40 5c             	mov    0x5c(%eax),%eax
    79fc:	85 c0                	test   %eax,%eax
    79fe:	74 30                	je     7a30 <remote_nic_defective_get_mode+0x40>
    7a00:	8b 4d 08             	mov    0x8(%ebp),%ecx
    7a03:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    7a0a:	52                   	push   %edx
    7a0b:	52                   	push   %edx
    7a0c:	8d 55 f4             	lea    -0xc(%ebp),%edx
    7a0f:	52                   	push   %edx
    7a10:	51                   	push   %ecx
    7a11:	ff d0                	call   *%eax
    7a13:	83 c4 0c             	add    $0xc,%esp
    7a16:	8b 55 f4             	mov    -0xc(%ebp),%edx
    7a19:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7a1c:	52                   	push   %edx
    7a1d:	50                   	push   %eax
    7a1e:	51                   	push   %ecx
    7a1f:	e8 7c 7e 00 00       	call   f8a0 <async_answer_1@plt>
    7a24:	83 c4 10             	add    $0x10,%esp
    7a27:	c9                   	leave  
    7a28:	c3                   	ret    
    7a29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7a30:	50                   	push   %eax
    7a31:	50                   	push   %eax
    7a32:	8b 45 10             	mov    0x10(%ebp),%eax
    7a35:	6a f5                	push   $0xfffffff5
    7a37:	50                   	push   %eax
    7a38:	e8 23 7c 00 00       	call   f660 <async_answer_0@plt>
    7a3d:	83 c4 10             	add    $0x10,%esp
    7a40:	c9                   	leave  
    7a41:	c3                   	ret    
    7a42:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7a49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007a50 <remote_nic_broadcast_get_mode>:
    7a50:	55                   	push   %ebp
    7a51:	89 e5                	mov    %esp,%ebp
    7a53:	83 ec 18             	sub    $0x18,%esp
    7a56:	8b 45 0c             	mov    0xc(%ebp),%eax
    7a59:	8b 40 54             	mov    0x54(%eax),%eax
    7a5c:	85 c0                	test   %eax,%eax
    7a5e:	74 30                	je     7a90 <remote_nic_broadcast_get_mode+0x40>
    7a60:	8b 4d 08             	mov    0x8(%ebp),%ecx
    7a63:	c7 45 f4 02 00 00 00 	movl   $0x2,-0xc(%ebp)
    7a6a:	52                   	push   %edx
    7a6b:	52                   	push   %edx
    7a6c:	8d 55 f4             	lea    -0xc(%ebp),%edx
    7a6f:	52                   	push   %edx
    7a70:	51                   	push   %ecx
    7a71:	ff d0                	call   *%eax
    7a73:	83 c4 0c             	add    $0xc,%esp
    7a76:	8b 55 f4             	mov    -0xc(%ebp),%edx
    7a79:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7a7c:	52                   	push   %edx
    7a7d:	50                   	push   %eax
    7a7e:	51                   	push   %ecx
    7a7f:	e8 1c 7e 00 00       	call   f8a0 <async_answer_1@plt>
    7a84:	83 c4 10             	add    $0x10,%esp
    7a87:	c9                   	leave  
    7a88:	c3                   	ret    
    7a89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7a90:	50                   	push   %eax
    7a91:	50                   	push   %eax
    7a92:	8b 45 10             	mov    0x10(%ebp),%eax
    7a95:	6a f5                	push   $0xfffffff5
    7a97:	50                   	push   %eax
    7a98:	e8 c3 7b 00 00       	call   f660 <async_answer_0@plt>
    7a9d:	83 c4 10             	add    $0x10,%esp
    7aa0:	c9                   	leave  
    7aa1:	c3                   	ret    
    7aa2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7aa9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007ab0 <remote_nic_get_cable_state>:
    7ab0:	55                   	push   %ebp
    7ab1:	89 e5                	mov    %esp,%ebp
    7ab3:	83 ec 18             	sub    $0x18,%esp
    7ab6:	8b 45 0c             	mov    0xc(%ebp),%eax
    7ab9:	8b 40 20             	mov    0x20(%eax),%eax
    7abc:	85 c0                	test   %eax,%eax
    7abe:	74 30                	je     7af0 <remote_nic_get_cable_state+0x40>
    7ac0:	8b 4d 08             	mov    0x8(%ebp),%ecx
    7ac3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    7aca:	52                   	push   %edx
    7acb:	52                   	push   %edx
    7acc:	8d 55 f4             	lea    -0xc(%ebp),%edx
    7acf:	52                   	push   %edx
    7ad0:	51                   	push   %ecx
    7ad1:	ff d0                	call   *%eax
    7ad3:	83 c4 0c             	add    $0xc,%esp
    7ad6:	8b 55 f4             	mov    -0xc(%ebp),%edx
    7ad9:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7adc:	52                   	push   %edx
    7add:	50                   	push   %eax
    7ade:	51                   	push   %ecx
    7adf:	e8 bc 7d 00 00       	call   f8a0 <async_answer_1@plt>
    7ae4:	83 c4 10             	add    $0x10,%esp
    7ae7:	c9                   	leave  
    7ae8:	c3                   	ret    
    7ae9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7af0:	50                   	push   %eax
    7af1:	50                   	push   %eax
    7af2:	8b 45 10             	mov    0x10(%ebp),%eax
    7af5:	6a f5                	push   $0xfffffff5
    7af7:	50                   	push   %eax
    7af8:	e8 63 7b 00 00       	call   f660 <async_answer_0@plt>
    7afd:	83 c4 10             	add    $0x10,%esp
    7b00:	c9                   	leave  
    7b01:	c3                   	ret    
    7b02:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7b09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007b10 <remote_nic_offload_probe>:
    7b10:	55                   	push   %ebp
    7b11:	89 e5                	mov    %esp,%ebp
    7b13:	83 ec 18             	sub    $0x18,%esp
    7b16:	8b 45 0c             	mov    0xc(%ebp),%eax
    7b19:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax
    7b1f:	85 c0                	test   %eax,%eax
    7b21:	74 35                	je     7b58 <remote_nic_offload_probe+0x48>
    7b23:	52                   	push   %edx
    7b24:	8d 55 f4             	lea    -0xc(%ebp),%edx
    7b27:	52                   	push   %edx
    7b28:	8b 4d 08             	mov    0x8(%ebp),%ecx
    7b2b:	8d 55 f0             	lea    -0x10(%ebp),%edx
    7b2e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
    7b35:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    7b3c:	52                   	push   %edx
    7b3d:	51                   	push   %ecx
    7b3e:	ff d0                	call   *%eax
    7b40:	8b 55 f4             	mov    -0xc(%ebp),%edx
    7b43:	8b 4d f0             	mov    -0x10(%ebp),%ecx
    7b46:	52                   	push   %edx
    7b47:	51                   	push   %ecx
    7b48:	50                   	push   %eax
    7b49:	8b 45 10             	mov    0x10(%ebp),%eax
    7b4c:	50                   	push   %eax
    7b4d:	e8 ee 7b 00 00       	call   f740 <async_answer_2@plt>
    7b52:	83 c4 20             	add    $0x20,%esp
    7b55:	c9                   	leave  
    7b56:	c3                   	ret    
    7b57:	90                   	nop
    7b58:	50                   	push   %eax
    7b59:	50                   	push   %eax
    7b5a:	8b 45 10             	mov    0x10(%ebp),%eax
    7b5d:	6a f5                	push   $0xfffffff5
    7b5f:	50                   	push   %eax
    7b60:	e8 fb 7a 00 00       	call   f660 <async_answer_0@plt>
    7b65:	83 c4 10             	add    $0x10,%esp
    7b68:	c9                   	leave  
    7b69:	c3                   	ret    
    7b6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00007b70 <remote_nic_vlan_get_mask>:
    7b70:	55                   	push   %ebp
    7b71:	89 e5                	mov    %esp,%ebp
    7b73:	56                   	push   %esi
    7b74:	53                   	push   %ebx
    7b75:	81 ec 10 02 00 00    	sub    $0x210,%esp
    7b7b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    7b7e:	8b 43 6c             	mov    0x6c(%ebx),%eax
    7b81:	85 c0                	test   %eax,%eax
    7b83:	0f 84 a7 00 00 00    	je     7c30 <remote_nic_vlan_get_mask+0xc0>
    7b89:	8d b5 f8 fd ff ff    	lea    -0x208(%ebp),%esi
    7b8f:	50                   	push   %eax
    7b90:	68 00 02 00 00       	push   $0x200
    7b95:	6a 00                	push   $0x0
    7b97:	56                   	push   %esi
    7b98:	e8 63 7c 00 00       	call   f800 <memset@plt>
    7b9d:	8b 4d 08             	mov    0x8(%ebp),%ecx
    7ba0:	58                   	pop    %eax
    7ba1:	5a                   	pop    %edx
    7ba2:	56                   	push   %esi
    7ba3:	51                   	push   %ecx
    7ba4:	ff 53 6c             	call   *0x6c(%ebx)
    7ba7:	83 c4 10             	add    $0x10,%esp
    7baa:	89 c3                	mov    %eax,%ebx
    7bac:	85 c0                	test   %eax,%eax
    7bae:	75 66                	jne    7c16 <remote_nic_vlan_get_mask+0xa6>
    7bb0:	50                   	push   %eax
    7bb1:	50                   	push   %eax
    7bb2:	8d 85 f4 fd ff ff    	lea    -0x20c(%ebp),%eax
    7bb8:	50                   	push   %eax
    7bb9:	8d 85 f0 fd ff ff    	lea    -0x210(%ebp),%eax
    7bbf:	50                   	push   %eax
    7bc0:	e8 4b 7c 00 00       	call   f810 <async_data_read_receive@plt>
    7bc5:	83 c4 10             	add    $0x10,%esp
    7bc8:	84 c0                	test   %al,%al
    7bca:	74 0c                	je     7bd8 <remote_nic_vlan_get_mask+0x68>
    7bcc:	81 bd f4 fd ff ff 00 	cmpl   $0x200,-0x20c(%ebp)
    7bd3:	02 00 00 
    7bd6:	74 28                	je     7c00 <remote_nic_vlan_get_mask+0x90>
    7bd8:	50                   	push   %eax
    7bd9:	50                   	push   %eax
    7bda:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
    7be0:	6a f2                	push   $0xfffffff2
    7be2:	50                   	push   %eax
    7be3:	e8 78 7a 00 00       	call   f660 <async_answer_0@plt>
    7be8:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7beb:	58                   	pop    %eax
    7bec:	5a                   	pop    %edx
    7bed:	6a f2                	push   $0xfffffff2
    7bef:	51                   	push   %ecx
    7bf0:	e8 6b 7a 00 00       	call   f660 <async_answer_0@plt>
    7bf5:	83 c4 10             	add    $0x10,%esp
    7bf8:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7bfb:	5b                   	pop    %ebx
    7bfc:	5e                   	pop    %esi
    7bfd:	5d                   	pop    %ebp
    7bfe:	c3                   	ret    
    7bff:	90                   	nop
    7c00:	51                   	push   %ecx
    7c01:	68 00 02 00 00       	push   $0x200
    7c06:	56                   	push   %esi
    7c07:	8b b5 f0 fd ff ff    	mov    -0x210(%ebp),%esi
    7c0d:	56                   	push   %esi
    7c0e:	e8 dd 79 00 00       	call   f5f0 <async_data_read_finalize@plt>
    7c13:	83 c4 10             	add    $0x10,%esp
    7c16:	8b 55 10             	mov    0x10(%ebp),%edx
    7c19:	50                   	push   %eax
    7c1a:	50                   	push   %eax
    7c1b:	53                   	push   %ebx
    7c1c:	52                   	push   %edx
    7c1d:	e8 3e 7a 00 00       	call   f660 <async_answer_0@plt>
    7c22:	83 c4 10             	add    $0x10,%esp
    7c25:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7c28:	5b                   	pop    %ebx
    7c29:	5e                   	pop    %esi
    7c2a:	5d                   	pop    %ebp
    7c2b:	c3                   	ret    
    7c2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7c30:	8b 75 10             	mov    0x10(%ebp),%esi
    7c33:	53                   	push   %ebx
    7c34:	53                   	push   %ebx
    7c35:	6a f5                	push   $0xfffffff5
    7c37:	56                   	push   %esi
    7c38:	e8 23 7a 00 00       	call   f660 <async_answer_0@plt>
    7c3d:	83 c4 10             	add    $0x10,%esp
    7c40:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7c43:	5b                   	pop    %ebx
    7c44:	5e                   	pop    %esi
    7c45:	5d                   	pop    %ebp
    7c46:	c3                   	ret    
    7c47:	89 f6                	mov    %esi,%esi
    7c49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007c50 <remote_nic_get_device_info>:
    7c50:	55                   	push   %ebp
    7c51:	89 e5                	mov    %esp,%ebp
    7c53:	56                   	push   %esi
    7c54:	53                   	push   %ebx
    7c55:	81 ec 30 01 00 00    	sub    $0x130,%esp
    7c5b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    7c5e:	8b 43 1c             	mov    0x1c(%ebx),%eax
    7c61:	85 c0                	test   %eax,%eax
    7c63:	0f 84 cf 00 00 00    	je     7d38 <remote_nic_get_device_info+0xe8>
    7c69:	8d b5 dc fe ff ff    	lea    -0x124(%ebp),%esi
    7c6f:	50                   	push   %eax
    7c70:	68 1c 01 00 00       	push   $0x11c
    7c75:	6a 00                	push   $0x0
    7c77:	56                   	push   %esi
    7c78:	e8 83 7b 00 00       	call   f800 <memset@plt>
    7c7d:	8b 4d 08             	mov    0x8(%ebp),%ecx
    7c80:	58                   	pop    %eax
    7c81:	5a                   	pop    %edx
    7c82:	56                   	push   %esi
    7c83:	51                   	push   %ecx
    7c84:	ff 53 1c             	call   *0x1c(%ebx)
    7c87:	83 c4 10             	add    $0x10,%esp
    7c8a:	89 c3                	mov    %eax,%ebx
    7c8c:	85 c0                	test   %eax,%eax
    7c8e:	75 66                	jne    7cf6 <remote_nic_get_device_info+0xa6>
    7c90:	50                   	push   %eax
    7c91:	50                   	push   %eax
    7c92:	8d 85 d8 fe ff ff    	lea    -0x128(%ebp),%eax
    7c98:	50                   	push   %eax
    7c99:	8d 85 d4 fe ff ff    	lea    -0x12c(%ebp),%eax
    7c9f:	50                   	push   %eax
    7ca0:	e8 6b 7b 00 00       	call   f810 <async_data_read_receive@plt>
    7ca5:	83 c4 10             	add    $0x10,%esp
    7ca8:	84 c0                	test   %al,%al
    7caa:	74 64                	je     7d10 <remote_nic_get_device_info+0xc0>
    7cac:	81 bd d8 fe ff ff 1b 	cmpl   $0x11b,-0x128(%ebp)
    7cb3:	01 00 00 
    7cb6:	77 28                	ja     7ce0 <remote_nic_get_device_info+0x90>
    7cb8:	50                   	push   %eax
    7cb9:	50                   	push   %eax
    7cba:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
    7cc0:	6a fd                	push   $0xfffffffd
    7cc2:	50                   	push   %eax
    7cc3:	e8 98 79 00 00       	call   f660 <async_answer_0@plt>
    7cc8:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7ccb:	58                   	pop    %eax
    7ccc:	5a                   	pop    %edx
    7ccd:	6a fd                	push   $0xfffffffd
    7ccf:	51                   	push   %ecx
    7cd0:	e8 8b 79 00 00       	call   f660 <async_answer_0@plt>
    7cd5:	83 c4 10             	add    $0x10,%esp
    7cd8:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7cdb:	5b                   	pop    %ebx
    7cdc:	5e                   	pop    %esi
    7cdd:	5d                   	pop    %ebp
    7cde:	c3                   	ret    
    7cdf:	90                   	nop
    7ce0:	51                   	push   %ecx
    7ce1:	68 1c 01 00 00       	push   $0x11c
    7ce6:	56                   	push   %esi
    7ce7:	8b b5 d4 fe ff ff    	mov    -0x12c(%ebp),%esi
    7ced:	56                   	push   %esi
    7cee:	e8 fd 78 00 00       	call   f5f0 <async_data_read_finalize@plt>
    7cf3:	83 c4 10             	add    $0x10,%esp
    7cf6:	8b 55 10             	mov    0x10(%ebp),%edx
    7cf9:	50                   	push   %eax
    7cfa:	50                   	push   %eax
    7cfb:	53                   	push   %ebx
    7cfc:	52                   	push   %edx
    7cfd:	e8 5e 79 00 00       	call   f660 <async_answer_0@plt>
    7d02:	83 c4 10             	add    $0x10,%esp
    7d05:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7d08:	5b                   	pop    %ebx
    7d09:	5e                   	pop    %esi
    7d0a:	5d                   	pop    %ebp
    7d0b:	c3                   	ret    
    7d0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7d10:	8b b5 d4 fe ff ff    	mov    -0x12c(%ebp),%esi
    7d16:	53                   	push   %ebx
    7d17:	53                   	push   %ebx
    7d18:	6a f2                	push   $0xfffffff2
    7d1a:	56                   	push   %esi
    7d1b:	e8 40 79 00 00       	call   f660 <async_answer_0@plt>
    7d20:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7d23:	58                   	pop    %eax
    7d24:	5a                   	pop    %edx
    7d25:	6a f2                	push   $0xfffffff2
    7d27:	51                   	push   %ecx
    7d28:	e8 33 79 00 00       	call   f660 <async_answer_0@plt>
    7d2d:	83 c4 10             	add    $0x10,%esp
    7d30:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7d33:	5b                   	pop    %ebx
    7d34:	5e                   	pop    %esi
    7d35:	5d                   	pop    %ebp
    7d36:	c3                   	ret    
    7d37:	90                   	nop
    7d38:	8b 75 10             	mov    0x10(%ebp),%esi
    7d3b:	53                   	push   %ebx
    7d3c:	53                   	push   %ebx
    7d3d:	6a f5                	push   $0xfffffff5
    7d3f:	56                   	push   %esi
    7d40:	e8 1b 79 00 00       	call   f660 <async_answer_0@plt>
    7d45:	83 c4 10             	add    $0x10,%esp
    7d48:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7d4b:	5b                   	pop    %ebx
    7d4c:	5e                   	pop    %esi
    7d4d:	5d                   	pop    %ebp
    7d4e:	c3                   	ret    
    7d4f:	90                   	nop

00007d50 <remote_nic_get_stats>:
    7d50:	55                   	push   %ebp
    7d51:	89 e5                	mov    %esp,%ebp
    7d53:	56                   	push   %esi
    7d54:	53                   	push   %ebx
    7d55:	83 c4 80             	add    $0xffffff80,%esp
    7d58:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    7d5b:	8b 43 18             	mov    0x18(%ebx),%eax
    7d5e:	85 c0                	test   %eax,%eax
    7d60:	0f 84 b2 00 00 00    	je     7e18 <remote_nic_get_stats+0xc8>
    7d66:	8d 75 8c             	lea    -0x74(%ebp),%esi
    7d69:	50                   	push   %eax
    7d6a:	6a 6c                	push   $0x6c
    7d6c:	6a 00                	push   $0x0
    7d6e:	56                   	push   %esi
    7d6f:	e8 8c 7a 00 00       	call   f800 <memset@plt>
    7d74:	8b 4d 08             	mov    0x8(%ebp),%ecx
    7d77:	58                   	pop    %eax
    7d78:	5a                   	pop    %edx
    7d79:	56                   	push   %esi
    7d7a:	51                   	push   %ecx
    7d7b:	ff 53 18             	call   *0x18(%ebx)
    7d7e:	83 c4 10             	add    $0x10,%esp
    7d81:	89 c3                	mov    %eax,%ebx
    7d83:	85 c0                	test   %eax,%eax
    7d85:	75 51                	jne    7dd8 <remote_nic_get_stats+0x88>
    7d87:	50                   	push   %eax
    7d88:	50                   	push   %eax
    7d89:	8d 45 88             	lea    -0x78(%ebp),%eax
    7d8c:	50                   	push   %eax
    7d8d:	8d 45 84             	lea    -0x7c(%ebp),%eax
    7d90:	50                   	push   %eax
    7d91:	e8 7a 7a 00 00       	call   f810 <async_data_read_receive@plt>
    7d96:	83 c4 10             	add    $0x10,%esp
    7d99:	84 c0                	test   %al,%al
    7d9b:	74 53                	je     7df0 <remote_nic_get_stats+0xa0>
    7d9d:	83 7d 88 6b          	cmpl   $0x6b,-0x78(%ebp)
    7da1:	77 25                	ja     7dc8 <remote_nic_get_stats+0x78>
    7da3:	50                   	push   %eax
    7da4:	50                   	push   %eax
    7da5:	8b 45 84             	mov    -0x7c(%ebp),%eax
    7da8:	6a fd                	push   $0xfffffffd
    7daa:	50                   	push   %eax
    7dab:	e8 b0 78 00 00       	call   f660 <async_answer_0@plt>
    7db0:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7db3:	58                   	pop    %eax
    7db4:	5a                   	pop    %edx
    7db5:	6a fd                	push   $0xfffffffd
    7db7:	51                   	push   %ecx
    7db8:	e8 a3 78 00 00       	call   f660 <async_answer_0@plt>
    7dbd:	83 c4 10             	add    $0x10,%esp
    7dc0:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7dc3:	5b                   	pop    %ebx
    7dc4:	5e                   	pop    %esi
    7dc5:	5d                   	pop    %ebp
    7dc6:	c3                   	ret    
    7dc7:	90                   	nop
    7dc8:	51                   	push   %ecx
    7dc9:	6a 6c                	push   $0x6c
    7dcb:	56                   	push   %esi
    7dcc:	8b 75 84             	mov    -0x7c(%ebp),%esi
    7dcf:	56                   	push   %esi
    7dd0:	e8 1b 78 00 00       	call   f5f0 <async_data_read_finalize@plt>
    7dd5:	83 c4 10             	add    $0x10,%esp
    7dd8:	8b 55 10             	mov    0x10(%ebp),%edx
    7ddb:	50                   	push   %eax
    7ddc:	50                   	push   %eax
    7ddd:	53                   	push   %ebx
    7dde:	52                   	push   %edx
    7ddf:	e8 7c 78 00 00       	call   f660 <async_answer_0@plt>
    7de4:	83 c4 10             	add    $0x10,%esp
    7de7:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7dea:	5b                   	pop    %ebx
    7deb:	5e                   	pop    %esi
    7dec:	5d                   	pop    %ebp
    7ded:	c3                   	ret    
    7dee:	66 90                	xchg   %ax,%ax
    7df0:	8b 75 84             	mov    -0x7c(%ebp),%esi
    7df3:	53                   	push   %ebx
    7df4:	53                   	push   %ebx
    7df5:	6a f2                	push   $0xfffffff2
    7df7:	56                   	push   %esi
    7df8:	e8 63 78 00 00       	call   f660 <async_answer_0@plt>
    7dfd:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7e00:	58                   	pop    %eax
    7e01:	5a                   	pop    %edx
    7e02:	6a f2                	push   $0xfffffff2
    7e04:	51                   	push   %ecx
    7e05:	e8 56 78 00 00       	call   f660 <async_answer_0@plt>
    7e0a:	83 c4 10             	add    $0x10,%esp
    7e0d:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7e10:	5b                   	pop    %ebx
    7e11:	5e                   	pop    %esi
    7e12:	5d                   	pop    %ebp
    7e13:	c3                   	ret    
    7e14:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7e18:	8b 75 10             	mov    0x10(%ebp),%esi
    7e1b:	53                   	push   %ebx
    7e1c:	53                   	push   %ebx
    7e1d:	6a f5                	push   $0xfffffff5
    7e1f:	56                   	push   %esi
    7e20:	e8 3b 78 00 00       	call   f660 <async_answer_0@plt>
    7e25:	83 c4 10             	add    $0x10,%esp
    7e28:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7e2b:	5b                   	pop    %ebx
    7e2c:	5e                   	pop    %esi
    7e2d:	5d                   	pop    %ebp
    7e2e:	c3                   	ret    
    7e2f:	90                   	nop

00007e30 <remote_nic_get_address>:
    7e30:	55                   	push   %ebp
    7e31:	89 e5                	mov    %esp,%ebp
    7e33:	56                   	push   %esi
    7e34:	53                   	push   %ebx
    7e35:	83 ec 10             	sub    $0x10,%esp
    7e38:	8b 75 0c             	mov    0xc(%ebp),%esi
    7e3b:	8b 46 10             	mov    0x10(%esi),%eax
    7e3e:	85 c0                	test   %eax,%eax
    7e40:	0f 84 ae 00 00 00    	je     7ef4 <remote_nic_get_address+0xc4>
    7e46:	8d 5d f2             	lea    -0xe(%ebp),%ebx
    7e49:	50                   	push   %eax
    7e4a:	6a 06                	push   $0x6
    7e4c:	6a 00                	push   $0x0
    7e4e:	53                   	push   %ebx
    7e4f:	e8 ac 79 00 00       	call   f800 <memset@plt>
    7e54:	8b 4d 08             	mov    0x8(%ebp),%ecx
    7e57:	58                   	pop    %eax
    7e58:	5a                   	pop    %edx
    7e59:	53                   	push   %ebx
    7e5a:	51                   	push   %ecx
    7e5b:	ff 56 10             	call   *0x10(%esi)
    7e5e:	83 c4 10             	add    $0x10,%esp
    7e61:	89 c6                	mov    %eax,%esi
    7e63:	85 c0                	test   %eax,%eax
    7e65:	75 51                	jne    7eb8 <remote_nic_get_address+0x88>
    7e67:	50                   	push   %eax
    7e68:	50                   	push   %eax
    7e69:	8d 45 e8             	lea    -0x18(%ebp),%eax
    7e6c:	50                   	push   %eax
    7e6d:	8d 45 ec             	lea    -0x14(%ebp),%eax
    7e70:	50                   	push   %eax
    7e71:	e8 9a 79 00 00       	call   f810 <async_data_read_receive@plt>
    7e76:	83 c4 10             	add    $0x10,%esp
    7e79:	84 c0                	test   %al,%al
    7e7b:	74 53                	je     7ed0 <remote_nic_get_address+0xa0>
    7e7d:	83 7d e8 06          	cmpl   $0x6,-0x18(%ebp)
    7e81:	74 25                	je     7ea8 <remote_nic_get_address+0x78>
    7e83:	8b 45 ec             	mov    -0x14(%ebp),%eax
    7e86:	56                   	push   %esi
    7e87:	56                   	push   %esi
    7e88:	6a fd                	push   $0xfffffffd
    7e8a:	50                   	push   %eax
    7e8b:	e8 d0 77 00 00       	call   f660 <async_answer_0@plt>
    7e90:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7e93:	58                   	pop    %eax
    7e94:	5a                   	pop    %edx
    7e95:	6a fd                	push   $0xfffffffd
    7e97:	51                   	push   %ecx
    7e98:	e8 c3 77 00 00       	call   f660 <async_answer_0@plt>
    7e9d:	83 c4 10             	add    $0x10,%esp
    7ea0:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7ea3:	5b                   	pop    %ebx
    7ea4:	5e                   	pop    %esi
    7ea5:	5d                   	pop    %ebp
    7ea6:	c3                   	ret    
    7ea7:	90                   	nop
    7ea8:	51                   	push   %ecx
    7ea9:	6a 06                	push   $0x6
    7eab:	53                   	push   %ebx
    7eac:	8b 5d ec             	mov    -0x14(%ebp),%ebx
    7eaf:	53                   	push   %ebx
    7eb0:	e8 3b 77 00 00       	call   f5f0 <async_data_read_finalize@plt>
    7eb5:	83 c4 10             	add    $0x10,%esp
    7eb8:	8b 55 10             	mov    0x10(%ebp),%edx
    7ebb:	50                   	push   %eax
    7ebc:	50                   	push   %eax
    7ebd:	56                   	push   %esi
    7ebe:	52                   	push   %edx
    7ebf:	e8 9c 77 00 00       	call   f660 <async_answer_0@plt>
    7ec4:	83 c4 10             	add    $0x10,%esp
    7ec7:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7eca:	5b                   	pop    %ebx
    7ecb:	5e                   	pop    %esi
    7ecc:	5d                   	pop    %ebp
    7ecd:	c3                   	ret    
    7ece:	66 90                	xchg   %ax,%ax
    7ed0:	8b 75 ec             	mov    -0x14(%ebp),%esi
    7ed3:	53                   	push   %ebx
    7ed4:	53                   	push   %ebx
    7ed5:	6a f2                	push   $0xfffffff2
    7ed7:	56                   	push   %esi
    7ed8:	e8 83 77 00 00       	call   f660 <async_answer_0@plt>
    7edd:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7ee0:	58                   	pop    %eax
    7ee1:	5a                   	pop    %edx
    7ee2:	6a f2                	push   $0xfffffff2
    7ee4:	51                   	push   %ecx
    7ee5:	e8 76 77 00 00       	call   f660 <async_answer_0@plt>
    7eea:	83 c4 10             	add    $0x10,%esp
    7eed:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7ef0:	5b                   	pop    %ebx
    7ef1:	5e                   	pop    %esi
    7ef2:	5d                   	pop    %ebp
    7ef3:	c3                   	ret    
    7ef4:	53                   	push   %ebx
    7ef5:	68 75 05 00 00       	push   $0x575
    7efa:	68 a4 ee 00 00       	push   $0xeea4
    7eff:	68 b9 ee 00 00       	push   $0xeeb9
    7f04:	e8 c7 77 00 00       	call   f6d0 <assert_abort@plt>
    7f09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00007f10 <remote_nic_wol_load_info>:
    7f10:	55                   	push   %ebp
    7f11:	89 e5                	mov    %esp,%ebp
    7f13:	57                   	push   %edi
    7f14:	56                   	push   %esi
    7f15:	53                   	push   %ebx
    7f16:	83 ec 1c             	sub    $0x1c,%esp
    7f19:	8b 7d 0c             	mov    0xc(%ebp),%edi
    7f1c:	8b 8f 8c 00 00 00    	mov    0x8c(%edi),%ecx
    7f22:	85 c9                	test   %ecx,%ecx
    7f24:	0f 84 06 01 00 00    	je     8030 <remote_nic_wol_load_info+0x120>
    7f2a:	8b 45 14             	mov    0x14(%ebp),%eax
    7f2d:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
    7f34:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    7f3b:	8b 70 08             	mov    0x8(%eax),%esi
    7f3e:	85 f6                	test   %esi,%esi
    7f40:	75 76                	jne    7fb8 <remote_nic_wol_load_info+0xa8>
    7f42:	31 db                	xor    %ebx,%ebx
    7f44:	50                   	push   %eax
    7f45:	56                   	push   %esi
    7f46:	6a 00                	push   $0x0
    7f48:	53                   	push   %ebx
    7f49:	e8 b2 78 00 00       	call   f800 <memset@plt>
    7f4e:	8d 45 d8             	lea    -0x28(%ebp),%eax
    7f51:	89 04 24             	mov    %eax,(%esp)
    7f54:	8d 45 dc             	lea    -0x24(%ebp),%eax
    7f57:	53                   	push   %ebx
    7f58:	56                   	push   %esi
    7f59:	50                   	push   %eax
    7f5a:	8b 45 08             	mov    0x8(%ebp),%eax
    7f5d:	50                   	push   %eax
    7f5e:	ff 97 8c 00 00 00    	call   *0x8c(%edi)
    7f64:	83 c4 20             	add    $0x20,%esp
    7f67:	89 c7                	mov    %eax,%edi
    7f69:	85 c0                	test   %eax,%eax
    7f6b:	0f 85 93 00 00 00    	jne    8004 <remote_nic_wol_load_info+0xf4>
    7f71:	50                   	push   %eax
    7f72:	50                   	push   %eax
    7f73:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    7f76:	50                   	push   %eax
    7f77:	8d 45 e0             	lea    -0x20(%ebp),%eax
    7f7a:	50                   	push   %eax
    7f7b:	e8 90 78 00 00       	call   f810 <async_data_read_receive@plt>
    7f80:	83 c4 10             	add    $0x10,%esp
    7f83:	84 c0                	test   %al,%al
    7f85:	75 59                	jne    7fe0 <remote_nic_wol_load_info+0xd0>
    7f87:	50                   	push   %eax
    7f88:	50                   	push   %eax
    7f89:	8b 45 e0             	mov    -0x20(%ebp),%eax
    7f8c:	6a f2                	push   $0xfffffff2
    7f8e:	50                   	push   %eax
    7f8f:	e8 cc 76 00 00       	call   f660 <async_answer_0@plt>
    7f94:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7f97:	58                   	pop    %eax
    7f98:	5a                   	pop    %edx
    7f99:	6a f2                	push   $0xfffffff2
    7f9b:	51                   	push   %ecx
    7f9c:	e8 bf 76 00 00       	call   f660 <async_answer_0@plt>
    7fa1:	89 1c 24             	mov    %ebx,(%esp)
    7fa4:	e8 f7 79 00 00       	call   f9a0 <free@plt>
    7fa9:	83 c4 10             	add    $0x10,%esp
    7fac:	8d 65 f4             	lea    -0xc(%ebp),%esp
    7faf:	5b                   	pop    %ebx
    7fb0:	5e                   	pop    %esi
    7fb1:	5f                   	pop    %edi
    7fb2:	5d                   	pop    %ebp
    7fb3:	c3                   	ret    
    7fb4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7fb8:	83 ec 0c             	sub    $0xc,%esp
    7fbb:	56                   	push   %esi
    7fbc:	e8 5f 76 00 00       	call   f620 <malloc@plt>
    7fc1:	83 c4 10             	add    $0x10,%esp
    7fc4:	89 c3                	mov    %eax,%ebx
    7fc6:	85 c0                	test   %eax,%eax
    7fc8:	0f 85 76 ff ff ff    	jne    7f44 <remote_nic_wol_load_info+0x34>
    7fce:	50                   	push   %eax
    7fcf:	50                   	push   %eax
    7fd0:	8b 45 10             	mov    0x10(%ebp),%eax
    7fd3:	6a fe                	push   $0xfffffffe
    7fd5:	50                   	push   %eax
    7fd6:	e8 85 76 00 00       	call   f660 <async_answer_0@plt>
    7fdb:	83 c4 10             	add    $0x10,%esp
    7fde:	eb cc                	jmp    7fac <remote_nic_wol_load_info+0x9c>
    7fe0:	8b 55 d8             	mov    -0x28(%ebp),%edx
    7fe3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    7fe6:	39 d0                	cmp    %edx,%eax
    7fe8:	76 02                	jbe    7fec <remote_nic_wol_load_info+0xdc>
    7fea:	89 d0                	mov    %edx,%eax
    7fec:	39 f0                	cmp    %esi,%eax
    7fee:	76 02                	jbe    7ff2 <remote_nic_wol_load_info+0xe2>
    7ff0:	89 f0                	mov    %esi,%eax
    7ff2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    7ff5:	56                   	push   %esi
    7ff6:	50                   	push   %eax
    7ff7:	8b 45 e0             	mov    -0x20(%ebp),%eax
    7ffa:	53                   	push   %ebx
    7ffb:	50                   	push   %eax
    7ffc:	e8 ef 75 00 00       	call   f5f0 <async_data_read_finalize@plt>
    8001:	83 c4 10             	add    $0x10,%esp
    8004:	8b 55 dc             	mov    -0x24(%ebp),%edx
    8007:	8b 4d 10             	mov    0x10(%ebp),%ecx
    800a:	8b 45 d8             	mov    -0x28(%ebp),%eax
    800d:	50                   	push   %eax
    800e:	52                   	push   %edx
    800f:	57                   	push   %edi
    8010:	51                   	push   %ecx
    8011:	e8 2a 77 00 00       	call   f740 <async_answer_2@plt>
    8016:	89 1c 24             	mov    %ebx,(%esp)
    8019:	e8 82 79 00 00       	call   f9a0 <free@plt>
    801e:	83 c4 10             	add    $0x10,%esp
    8021:	8d 65 f4             	lea    -0xc(%ebp),%esp
    8024:	5b                   	pop    %ebx
    8025:	5e                   	pop    %esi
    8026:	5f                   	pop    %edi
    8027:	5d                   	pop    %ebp
    8028:	c3                   	ret    
    8029:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8030:	8b 55 10             	mov    0x10(%ebp),%edx
    8033:	50                   	push   %eax
    8034:	50                   	push   %eax
    8035:	6a f5                	push   $0xfffffff5
    8037:	52                   	push   %edx
    8038:	e8 23 76 00 00       	call   f660 <async_answer_0@plt>
    803d:	83 c4 10             	add    $0x10,%esp
    8040:	e9 67 ff ff ff       	jmp    7fac <remote_nic_wol_load_info+0x9c>
    8045:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8049:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00008050 <remote_nic_wol_virtue_list>:
    8050:	55                   	push   %ebp
    8051:	89 e5                	mov    %esp,%ebp
    8053:	57                   	push   %edi
    8054:	56                   	push   %esi
    8055:	53                   	push   %ebx
    8056:	83 ec 2c             	sub    $0x2c,%esp
    8059:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    805c:	8b 45 14             	mov    0x14(%ebp),%eax
    805f:	8b 91 84 00 00 00    	mov    0x84(%ecx),%edx
    8065:	85 d2                	test   %edx,%edx
    8067:	0f 84 2b 01 00 00    	je     8198 <remote_nic_wol_virtue_list+0x148>
    806d:	8b 78 0c             	mov    0xc(%eax),%edi
    8070:	8b 70 08             	mov    0x8(%eax),%esi
    8073:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    807a:	85 ff                	test   %edi,%edi
    807c:	0f 84 9e 00 00 00    	je     8120 <remote_nic_wol_virtue_list+0xd0>
    8082:	83 ec 0c             	sub    $0xc,%esp
    8085:	8d 04 bd 00 00 00 00 	lea    0x0(,%edi,4),%eax
    808c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    808f:	50                   	push   %eax
    8090:	e8 8b 75 00 00       	call   f620 <malloc@plt>
    8095:	83 c4 10             	add    $0x10,%esp
    8098:	89 c3                	mov    %eax,%ebx
    809a:	85 c0                	test   %eax,%eax
    809c:	0f 84 0e 01 00 00    	je     81b0 <remote_nic_wol_virtue_list+0x160>
    80a2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    80a5:	51                   	push   %ecx
    80a6:	50                   	push   %eax
    80a7:	6a 00                	push   $0x0
    80a9:	53                   	push   %ebx
    80aa:	e8 51 77 00 00       	call   f800 <memset@plt>
    80af:	8d 45 dc             	lea    -0x24(%ebp),%eax
    80b2:	89 04 24             	mov    %eax,(%esp)
    80b5:	8b 45 08             	mov    0x8(%ebp),%eax
    80b8:	53                   	push   %ebx
    80b9:	57                   	push   %edi
    80ba:	56                   	push   %esi
    80bb:	50                   	push   %eax
    80bc:	8b 45 0c             	mov    0xc(%ebp),%eax
    80bf:	ff 90 84 00 00 00    	call   *0x84(%eax)
    80c5:	8b 55 dc             	mov    -0x24(%ebp),%edx
    80c8:	83 c4 20             	add    $0x20,%esp
    80cb:	85 d2                	test   %edx,%edx
    80cd:	74 7d                	je     814c <remote_nic_wol_virtue_list+0xfc>
    80cf:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    80d2:	56                   	push   %esi
    80d3:	56                   	push   %esi
    80d4:	50                   	push   %eax
    80d5:	8d 45 e0             	lea    -0x20(%ebp),%eax
    80d8:	50                   	push   %eax
    80d9:	e8 32 77 00 00       	call   f810 <async_data_read_receive@plt>
    80de:	83 c4 10             	add    $0x10,%esp
    80e1:	84 c0                	test   %al,%al
    80e3:	0f 84 87 00 00 00    	je     8170 <remote_nic_wol_virtue_list+0x120>
    80e9:	8b 45 dc             	mov    -0x24(%ebp),%eax
    80ec:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
    80f3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    80f6:	39 c2                	cmp    %eax,%edx
    80f8:	73 05                	jae    80ff <remote_nic_wol_virtue_list+0xaf>
    80fa:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    80fd:	89 d0                	mov    %edx,%eax
    80ff:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    8102:	39 c1                	cmp    %eax,%ecx
    8104:	73 05                	jae    810b <remote_nic_wol_virtue_list+0xbb>
    8106:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
    8109:	89 c8                	mov    %ecx,%eax
    810b:	57                   	push   %edi
    810c:	50                   	push   %eax
    810d:	8b 45 e0             	mov    -0x20(%ebp),%eax
    8110:	53                   	push   %ebx
    8111:	50                   	push   %eax
    8112:	e8 d9 74 00 00       	call   f5f0 <async_data_read_finalize@plt>
    8117:	8b 55 dc             	mov    -0x24(%ebp),%edx
    811a:	83 c4 10             	add    $0x10,%esp
    811d:	eb 2d                	jmp    814c <remote_nic_wol_virtue_list+0xfc>
    811f:	90                   	nop
    8120:	50                   	push   %eax
    8121:	6a 00                	push   $0x0
    8123:	6a 00                	push   $0x0
    8125:	6a 00                	push   $0x0
    8127:	e8 d4 76 00 00       	call   f800 <memset@plt>
    812c:	8d 45 dc             	lea    -0x24(%ebp),%eax
    812f:	89 04 24             	mov    %eax,(%esp)
    8132:	8b 55 08             	mov    0x8(%ebp),%edx
    8135:	8b 45 0c             	mov    0xc(%ebp),%eax
    8138:	6a 00                	push   $0x0
    813a:	6a 00                	push   $0x0
    813c:	56                   	push   %esi
    813d:	52                   	push   %edx
    813e:	31 db                	xor    %ebx,%ebx
    8140:	ff 90 84 00 00 00    	call   *0x84(%eax)
    8146:	8b 55 dc             	mov    -0x24(%ebp),%edx
    8149:	83 c4 20             	add    $0x20,%esp
    814c:	8b 75 10             	mov    0x10(%ebp),%esi
    814f:	51                   	push   %ecx
    8150:	52                   	push   %edx
    8151:	50                   	push   %eax
    8152:	56                   	push   %esi
    8153:	e8 48 77 00 00       	call   f8a0 <async_answer_1@plt>
    8158:	89 1c 24             	mov    %ebx,(%esp)
    815b:	e8 40 78 00 00       	call   f9a0 <free@plt>
    8160:	83 c4 10             	add    $0x10,%esp
    8163:	8d 65 f4             	lea    -0xc(%ebp),%esp
    8166:	5b                   	pop    %ebx
    8167:	5e                   	pop    %esi
    8168:	5f                   	pop    %edi
    8169:	5d                   	pop    %ebp
    816a:	c3                   	ret    
    816b:	90                   	nop
    816c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8170:	50                   	push   %eax
    8171:	50                   	push   %eax
    8172:	8b 45 e0             	mov    -0x20(%ebp),%eax
    8175:	6a f2                	push   $0xfffffff2
    8177:	50                   	push   %eax
    8178:	e8 e3 74 00 00       	call   f660 <async_answer_0@plt>
    817d:	8b 4d 10             	mov    0x10(%ebp),%ecx
    8180:	58                   	pop    %eax
    8181:	5a                   	pop    %edx
    8182:	6a f2                	push   $0xfffffff2
    8184:	51                   	push   %ecx
    8185:	e8 d6 74 00 00       	call   f660 <async_answer_0@plt>
    818a:	89 1c 24             	mov    %ebx,(%esp)
    818d:	e8 0e 78 00 00       	call   f9a0 <free@plt>
    8192:	83 c4 10             	add    $0x10,%esp
    8195:	eb cc                	jmp    8163 <remote_nic_wol_virtue_list+0x113>
    8197:	90                   	nop
    8198:	50                   	push   %eax
    8199:	50                   	push   %eax
    819a:	8b 45 10             	mov    0x10(%ebp),%eax
    819d:	6a f5                	push   $0xfffffff5
    819f:	50                   	push   %eax
    81a0:	e8 bb 74 00 00       	call   f660 <async_answer_0@plt>
    81a5:	83 c4 10             	add    $0x10,%esp
    81a8:	eb b9                	jmp    8163 <remote_nic_wol_virtue_list+0x113>
    81aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    81b0:	8b 45 10             	mov    0x10(%ebp),%eax
    81b3:	57                   	push   %edi
    81b4:	57                   	push   %edi
    81b5:	6a fe                	push   $0xfffffffe
    81b7:	50                   	push   %eax
    81b8:	e8 a3 74 00 00       	call   f660 <async_answer_0@plt>
    81bd:	83 c4 10             	add    $0x10,%esp
    81c0:	eb a1                	jmp    8163 <remote_nic_wol_virtue_list+0x113>
    81c2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    81c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000081d0 <remote_nic_wol_virtue_probe>:
    81d0:	55                   	push   %ebp
    81d1:	89 e5                	mov    %esp,%ebp
    81d3:	57                   	push   %edi
    81d4:	56                   	push   %esi
    81d5:	53                   	push   %ebx
    81d6:	83 ec 1c             	sub    $0x1c,%esp
    81d9:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    81dc:	8b 45 14             	mov    0x14(%ebp),%eax
    81df:	8b 91 80 00 00 00    	mov    0x80(%ecx),%edx
    81e5:	85 d2                	test   %edx,%edx
    81e7:	0f 84 2b 01 00 00    	je     8318 <remote_nic_wol_virtue_probe+0x148>
    81ed:	8b 58 0c             	mov    0xc(%eax),%ebx
    81f0:	8b 78 08             	mov    0x8(%eax),%edi
    81f3:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
    81fa:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    8201:	85 db                	test   %ebx,%ebx
    8203:	0f 84 8f 00 00 00    	je     8298 <remote_nic_wol_virtue_probe+0xc8>
    8209:	83 ec 0c             	sub    $0xc,%esp
    820c:	53                   	push   %ebx
    820d:	e8 0e 74 00 00       	call   f620 <malloc@plt>
    8212:	83 c4 10             	add    $0x10,%esp
    8215:	89 c6                	mov    %eax,%esi
    8217:	85 c0                	test   %eax,%eax
    8219:	0f 84 11 01 00 00    	je     8330 <remote_nic_wol_virtue_probe+0x160>
    821f:	50                   	push   %eax
    8220:	53                   	push   %ebx
    8221:	6a 00                	push   $0x0
    8223:	56                   	push   %esi
    8224:	e8 d7 75 00 00       	call   f800 <memset@plt>
    8229:	58                   	pop    %eax
    822a:	8d 45 dc             	lea    -0x24(%ebp),%eax
    822d:	5a                   	pop    %edx
    822e:	50                   	push   %eax
    822f:	8d 45 d8             	lea    -0x28(%ebp),%eax
    8232:	56                   	push   %esi
    8233:	53                   	push   %ebx
    8234:	50                   	push   %eax
    8235:	8b 45 0c             	mov    0xc(%ebp),%eax
    8238:	8b 4d 08             	mov    0x8(%ebp),%ecx
    823b:	57                   	push   %edi
    823c:	51                   	push   %ecx
    823d:	ff 90 80 00 00 00    	call   *0x80(%eax)
    8243:	89 c7                	mov    %eax,%edi
    8245:	8b 45 dc             	mov    -0x24(%ebp),%eax
    8248:	83 c4 20             	add    $0x20,%esp
    824b:	85 c0                	test   %eax,%eax
    824d:	74 7b                	je     82ca <remote_nic_wol_virtue_probe+0xfa>
    824f:	50                   	push   %eax
    8250:	50                   	push   %eax
    8251:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    8254:	50                   	push   %eax
    8255:	8d 45 e0             	lea    -0x20(%ebp),%eax
    8258:	50                   	push   %eax
    8259:	e8 b2 75 00 00       	call   f810 <async_data_read_receive@plt>
    825e:	83 c4 10             	add    $0x10,%esp
    8261:	84 c0                	test   %al,%al
    8263:	0f 84 87 00 00 00    	je     82f0 <remote_nic_wol_virtue_probe+0x120>
    8269:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    826c:	8b 55 dc             	mov    -0x24(%ebp),%edx
    826f:	39 d0                	cmp    %edx,%eax
    8271:	76 05                	jbe    8278 <remote_nic_wol_virtue_probe+0xa8>
    8273:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    8276:	89 d0                	mov    %edx,%eax
    8278:	39 c3                	cmp    %eax,%ebx
    827a:	73 05                	jae    8281 <remote_nic_wol_virtue_probe+0xb1>
    827c:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
    827f:	89 d8                	mov    %ebx,%eax
    8281:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    8284:	52                   	push   %edx
    8285:	50                   	push   %eax
    8286:	56                   	push   %esi
    8287:	51                   	push   %ecx
    8288:	e8 63 73 00 00       	call   f5f0 <async_data_read_finalize@plt>
    828d:	8b 45 dc             	mov    -0x24(%ebp),%eax
    8290:	83 c4 10             	add    $0x10,%esp
    8293:	eb 35                	jmp    82ca <remote_nic_wol_virtue_probe+0xfa>
    8295:	8d 76 00             	lea    0x0(%esi),%esi
    8298:	50                   	push   %eax
    8299:	6a 00                	push   $0x0
    829b:	6a 00                	push   $0x0
    829d:	6a 00                	push   $0x0
    829f:	e8 5c 75 00 00       	call   f800 <memset@plt>
    82a4:	8d 45 dc             	lea    -0x24(%ebp),%eax
    82a7:	5a                   	pop    %edx
    82a8:	59                   	pop    %ecx
    82a9:	50                   	push   %eax
    82aa:	8d 45 d8             	lea    -0x28(%ebp),%eax
    82ad:	6a 00                	push   $0x0
    82af:	6a 00                	push   $0x0
    82b1:	50                   	push   %eax
    82b2:	8b 45 0c             	mov    0xc(%ebp),%eax
    82b5:	8b 5d 08             	mov    0x8(%ebp),%ebx
    82b8:	57                   	push   %edi
    82b9:	53                   	push   %ebx
    82ba:	ff 90 80 00 00 00    	call   *0x80(%eax)
    82c0:	31 f6                	xor    %esi,%esi
    82c2:	89 c7                	mov    %eax,%edi
    82c4:	83 c4 20             	add    $0x20,%esp
    82c7:	8b 45 dc             	mov    -0x24(%ebp),%eax
    82ca:	8b 5d d8             	mov    -0x28(%ebp),%ebx
    82cd:	50                   	push   %eax
    82ce:	53                   	push   %ebx
    82cf:	57                   	push   %edi
    82d0:	8b 7d 10             	mov    0x10(%ebp),%edi
    82d3:	57                   	push   %edi
    82d4:	e8 67 74 00 00       	call   f740 <async_answer_2@plt>
    82d9:	89 34 24             	mov    %esi,(%esp)
    82dc:	e8 bf 76 00 00       	call   f9a0 <free@plt>
    82e1:	83 c4 10             	add    $0x10,%esp
    82e4:	8d 65 f4             	lea    -0xc(%ebp),%esp
    82e7:	5b                   	pop    %ebx
    82e8:	5e                   	pop    %esi
    82e9:	5f                   	pop    %edi
    82ea:	5d                   	pop    %ebp
    82eb:	c3                   	ret    
    82ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    82f0:	8b 7d e0             	mov    -0x20(%ebp),%edi
    82f3:	53                   	push   %ebx
    82f4:	53                   	push   %ebx
    82f5:	6a f2                	push   $0xfffffff2
    82f7:	57                   	push   %edi
    82f8:	e8 63 73 00 00       	call   f660 <async_answer_0@plt>
    82fd:	8b 4d 10             	mov    0x10(%ebp),%ecx
    8300:	58                   	pop    %eax
    8301:	5a                   	pop    %edx
    8302:	6a f2                	push   $0xfffffff2
    8304:	51                   	push   %ecx
    8305:	e8 56 73 00 00       	call   f660 <async_answer_0@plt>
    830a:	89 34 24             	mov    %esi,(%esp)
    830d:	e8 8e 76 00 00       	call   f9a0 <free@plt>
    8312:	83 c4 10             	add    $0x10,%esp
    8315:	eb cd                	jmp    82e4 <remote_nic_wol_virtue_probe+0x114>
    8317:	90                   	nop
    8318:	50                   	push   %eax
    8319:	50                   	push   %eax
    831a:	8b 45 10             	mov    0x10(%ebp),%eax
    831d:	6a f5                	push   $0xfffffff5
    831f:	50                   	push   %eax
    8320:	e8 3b 73 00 00       	call   f660 <async_answer_0@plt>
    8325:	83 c4 10             	add    $0x10,%esp
    8328:	eb ba                	jmp    82e4 <remote_nic_wol_virtue_probe+0x114>
    832a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8330:	50                   	push   %eax
    8331:	50                   	push   %eax
    8332:	8b 45 10             	mov    0x10(%ebp),%eax
    8335:	6a fe                	push   $0xfffffffe
    8337:	50                   	push   %eax
    8338:	e8 23 73 00 00       	call   f660 <async_answer_0@plt>
    833d:	83 c4 10             	add    $0x10,%esp
    8340:	eb a2                	jmp    82e4 <remote_nic_wol_virtue_probe+0x114>
    8342:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8349:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00008350 <remote_nic_wol_virtue_add>:
    8350:	55                   	push   %ebp
    8351:	89 e5                	mov    %esp,%ebp
    8353:	57                   	push   %edi
    8354:	56                   	push   %esi
    8355:	53                   	push   %ebx
    8356:	83 ec 1c             	sub    $0x1c,%esp
    8359:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    835c:	8b 75 14             	mov    0x14(%ebp),%esi
    835f:	8b 43 78             	mov    0x78(%ebx),%eax
    8362:	8b 7e 0c             	mov    0xc(%esi),%edi
    8365:	85 c0                	test   %eax,%eax
    8367:	0f 84 eb 00 00 00    	je     8458 <remote_nic_wol_virtue_add+0x108>
    836d:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    8374:	85 ff                	test   %edi,%edi
    8376:	74 78                	je     83f0 <remote_nic_wol_virtue_add+0xa0>
    8378:	8d 45 e0             	lea    -0x20(%ebp),%eax
    837b:	57                   	push   %edi
    837c:	57                   	push   %edi
    837d:	50                   	push   %eax
    837e:	8d 45 dc             	lea    -0x24(%ebp),%eax
    8381:	50                   	push   %eax
    8382:	e8 09 76 00 00       	call   f990 <async_data_write_receive@plt>
    8387:	83 c4 10             	add    $0x10,%esp
    838a:	84 c0                	test   %al,%al
    838c:	75 2a                	jne    83b8 <remote_nic_wol_virtue_add+0x68>
    838e:	50                   	push   %eax
    838f:	50                   	push   %eax
    8390:	8b 45 dc             	mov    -0x24(%ebp),%eax
    8393:	6a f2                	push   $0xfffffff2
    8395:	50                   	push   %eax
    8396:	e8 c5 72 00 00       	call   f660 <async_answer_0@plt>
    839b:	8b 4d 10             	mov    0x10(%ebp),%ecx
    839e:	58                   	pop    %eax
    839f:	5a                   	pop    %edx
    83a0:	6a f2                	push   $0xfffffff2
    83a2:	51                   	push   %ecx
    83a3:	e8 b8 72 00 00       	call   f660 <async_answer_0@plt>
    83a8:	83 c4 10             	add    $0x10,%esp
    83ab:	8d 65 f4             	lea    -0xc(%ebp),%esp
    83ae:	5b                   	pop    %ebx
    83af:	5e                   	pop    %esi
    83b0:	5f                   	pop    %edi
    83b1:	5d                   	pop    %ebp
    83b2:	c3                   	ret    
    83b3:	90                   	nop
    83b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    83b8:	83 ec 0c             	sub    $0xc,%esp
    83bb:	8b 7d e0             	mov    -0x20(%ebp),%edi
    83be:	57                   	push   %edi
    83bf:	e8 5c 72 00 00       	call   f620 <malloc@plt>
    83c4:	83 c4 10             	add    $0x10,%esp
    83c7:	89 c7                	mov    %eax,%edi
    83c9:	85 c0                	test   %eax,%eax
    83cb:	0f 84 a7 00 00 00    	je     8478 <remote_nic_wol_virtue_add+0x128>
    83d1:	50                   	push   %eax
    83d2:	8b 45 e0             	mov    -0x20(%ebp),%eax
    83d5:	50                   	push   %eax
    83d6:	8b 45 dc             	mov    -0x24(%ebp),%eax
    83d9:	57                   	push   %edi
    83da:	50                   	push   %eax
    83db:	e8 40 75 00 00       	call   f920 <async_data_write_finalize@plt>
    83e0:	83 c4 10             	add    $0x10,%esp
    83e3:	85 c0                	test   %eax,%eax
    83e5:	75 51                	jne    8438 <remote_nic_wol_virtue_add+0xe8>
    83e7:	8b 45 e0             	mov    -0x20(%ebp),%eax
    83ea:	eb 08                	jmp    83f4 <remote_nic_wol_virtue_add+0xa4>
    83ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    83f0:	31 c0                	xor    %eax,%eax
    83f2:	31 ff                	xor    %edi,%edi
    83f4:	83 ec 0c             	sub    $0xc,%esp
    83f7:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    83fa:	8b 55 08             	mov    0x8(%ebp),%edx
    83fd:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    8404:	51                   	push   %ecx
    8405:	50                   	push   %eax
    8406:	8b 46 08             	mov    0x8(%esi),%eax
    8409:	57                   	push   %edi
    840a:	50                   	push   %eax
    840b:	52                   	push   %edx
    840c:	ff 53 78             	call   *0x78(%ebx)
    840f:	83 c4 1c             	add    $0x1c,%esp
    8412:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    8415:	8b 5d 10             	mov    0x10(%ebp),%ebx
    8418:	51                   	push   %ecx
    8419:	50                   	push   %eax
    841a:	53                   	push   %ebx
    841b:	e8 80 74 00 00       	call   f8a0 <async_answer_1@plt>
    8420:	89 3c 24             	mov    %edi,(%esp)
    8423:	e8 78 75 00 00       	call   f9a0 <free@plt>
    8428:	83 c4 10             	add    $0x10,%esp
    842b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    842e:	5b                   	pop    %ebx
    842f:	5e                   	pop    %esi
    8430:	5f                   	pop    %edi
    8431:	5d                   	pop    %ebp
    8432:	c3                   	ret    
    8433:	90                   	nop
    8434:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8438:	8b 45 10             	mov    0x10(%ebp),%eax
    843b:	56                   	push   %esi
    843c:	56                   	push   %esi
    843d:	6a f2                	push   $0xfffffff2
    843f:	50                   	push   %eax
    8440:	e8 1b 72 00 00       	call   f660 <async_answer_0@plt>
    8445:	89 3c 24             	mov    %edi,(%esp)
    8448:	e8 53 75 00 00       	call   f9a0 <free@plt>
    844d:	83 c4 10             	add    $0x10,%esp
    8450:	8d 65 f4             	lea    -0xc(%ebp),%esp
    8453:	5b                   	pop    %ebx
    8454:	5e                   	pop    %esi
    8455:	5f                   	pop    %edi
    8456:	5d                   	pop    %ebp
    8457:	c3                   	ret    
    8458:	85 ff                	test   %edi,%edi
    845a:	75 44                	jne    84a0 <remote_nic_wol_virtue_add+0x150>
    845c:	50                   	push   %eax
    845d:	50                   	push   %eax
    845e:	8b 45 10             	mov    0x10(%ebp),%eax
    8461:	6a f5                	push   $0xfffffff5
    8463:	50                   	push   %eax
    8464:	e8 f7 71 00 00       	call   f660 <async_answer_0@plt>
    8469:	83 c4 10             	add    $0x10,%esp
    846c:	e9 fc fe ff ff       	jmp    836d <remote_nic_wol_virtue_add+0x1d>
    8471:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8478:	50                   	push   %eax
    8479:	50                   	push   %eax
    847a:	8b 45 dc             	mov    -0x24(%ebp),%eax
    847d:	6a fe                	push   $0xfffffffe
    847f:	50                   	push   %eax
    8480:	e8 db 71 00 00       	call   f660 <async_answer_0@plt>
    8485:	8b 5d 10             	mov    0x10(%ebp),%ebx
    8488:	5a                   	pop    %edx
    8489:	59                   	pop    %ecx
    848a:	6a fe                	push   $0xfffffffe
    848c:	53                   	push   %ebx
    848d:	e8 ce 71 00 00       	call   f660 <async_answer_0@plt>
    8492:	83 c4 10             	add    $0x10,%esp
    8495:	e9 11 ff ff ff       	jmp    83ab <remote_nic_wol_virtue_add+0x5b>
    849a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    84a0:	50                   	push   %eax
    84a1:	50                   	push   %eax
    84a2:	8d 45 dc             	lea    -0x24(%ebp),%eax
    84a5:	6a 00                	push   $0x0
    84a7:	50                   	push   %eax
    84a8:	e8 e3 74 00 00       	call   f990 <async_data_write_receive@plt>
    84ad:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    84b0:	58                   	pop    %eax
    84b1:	5a                   	pop    %edx
    84b2:	6a f5                	push   $0xfffffff5
    84b4:	51                   	push   %ecx
    84b5:	e8 a6 71 00 00       	call   f660 <async_answer_0@plt>
    84ba:	83 c4 10             	add    $0x10,%esp
    84bd:	eb 9d                	jmp    845c <remote_nic_wol_virtue_add+0x10c>
    84bf:	90                   	nop

000084c0 <remote_nic_blocked_sources_set>:
    84c0:	55                   	push   %ebp
    84c1:	89 e5                	mov    %esp,%ebp
    84c3:	57                   	push   %edi
    84c4:	56                   	push   %esi
    84c5:	53                   	push   %ebx
    84c6:	83 ec 1c             	sub    $0x1c,%esp
    84c9:	31 f6                	xor    %esi,%esi
    84cb:	8b 45 14             	mov    0x14(%ebp),%eax
    84ce:	8b 58 08             	mov    0x8(%eax),%ebx
    84d1:	85 db                	test   %ebx,%ebx
    84d3:	75 3b                	jne    8510 <remote_nic_blocked_sources_set+0x50>
    84d5:	8b 45 0c             	mov    0xc(%ebp),%eax
    84d8:	8b 40 68             	mov    0x68(%eax),%eax
    84db:	85 c0                	test   %eax,%eax
    84dd:	0f 84 cd 00 00 00    	je     85b0 <remote_nic_blocked_sources_set+0xf0>
    84e3:	51                   	push   %ecx
    84e4:	53                   	push   %ebx
    84e5:	8b 5d 08             	mov    0x8(%ebp),%ebx
    84e8:	56                   	push   %esi
    84e9:	53                   	push   %ebx
    84ea:	ff d0                	call   *%eax
    84ec:	8b 4d 10             	mov    0x10(%ebp),%ecx
    84ef:	5f                   	pop    %edi
    84f0:	5a                   	pop    %edx
    84f1:	50                   	push   %eax
    84f2:	51                   	push   %ecx
    84f3:	e8 68 71 00 00       	call   f660 <async_answer_0@plt>
    84f8:	83 c4 10             	add    $0x10,%esp
    84fb:	83 ec 0c             	sub    $0xc,%esp
    84fe:	56                   	push   %esi
    84ff:	e8 9c 74 00 00       	call   f9a0 <free@plt>
    8504:	83 c4 10             	add    $0x10,%esp
    8507:	8d 65 f4             	lea    -0xc(%ebp),%esp
    850a:	5b                   	pop    %ebx
    850b:	5e                   	pop    %esi
    850c:	5f                   	pop    %edi
    850d:	5d                   	pop    %ebp
    850e:	c3                   	ret    
    850f:	90                   	nop
    8510:	8d 45 e0             	lea    -0x20(%ebp),%eax
    8513:	56                   	push   %esi
    8514:	56                   	push   %esi
    8515:	50                   	push   %eax
    8516:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    8519:	50                   	push   %eax
    851a:	e8 71 74 00 00       	call   f990 <async_data_write_receive@plt>
    851f:	83 c4 10             	add    $0x10,%esp
    8522:	84 c0                	test   %al,%al
    8524:	0f 84 9e 00 00 00    	je     85c8 <remote_nic_blocked_sources_set+0x108>
    852a:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    852d:	01 c0                	add    %eax,%eax
    852f:	3b 45 e0             	cmp    -0x20(%ebp),%eax
    8532:	74 2c                	je     8560 <remote_nic_blocked_sources_set+0xa0>
    8534:	8b 75 e4             	mov    -0x1c(%ebp),%esi
    8537:	53                   	push   %ebx
    8538:	53                   	push   %ebx
    8539:	6a fd                	push   $0xfffffffd
    853b:	56                   	push   %esi
    853c:	e8 1f 71 00 00       	call   f660 <async_answer_0@plt>
    8541:	5f                   	pop    %edi
    8542:	58                   	pop    %eax
    8543:	8b 45 10             	mov    0x10(%ebp),%eax
    8546:	6a fd                	push   $0xfffffffd
    8548:	50                   	push   %eax
    8549:	e8 12 71 00 00       	call   f660 <async_answer_0@plt>
    854e:	83 c4 10             	add    $0x10,%esp
    8551:	8d 65 f4             	lea    -0xc(%ebp),%esp
    8554:	5b                   	pop    %ebx
    8555:	5e                   	pop    %esi
    8556:	5f                   	pop    %edi
    8557:	5d                   	pop    %ebp
    8558:	c3                   	ret    
    8559:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8560:	83 ec 0c             	sub    $0xc,%esp
    8563:	50                   	push   %eax
    8564:	e8 b7 70 00 00       	call   f620 <malloc@plt>
    8569:	83 c4 10             	add    $0x10,%esp
    856c:	89 c7                	mov    %eax,%edi
    856e:	89 c6                	mov    %eax,%esi
    8570:	85 c0                	test   %eax,%eax
    8572:	74 76                	je     85ea <remote_nic_blocked_sources_set+0x12a>
    8574:	50                   	push   %eax
    8575:	8b 45 e0             	mov    -0x20(%ebp),%eax
    8578:	50                   	push   %eax
    8579:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    857c:	57                   	push   %edi
    857d:	50                   	push   %eax
    857e:	e8 9d 73 00 00       	call   f920 <async_data_write_finalize@plt>
    8583:	83 c4 10             	add    $0x10,%esp
    8586:	85 c0                	test   %eax,%eax
    8588:	0f 84 47 ff ff ff    	je     84d5 <remote_nic_blocked_sources_set+0x15>
    858e:	8b 75 10             	mov    0x10(%ebp),%esi
    8591:	53                   	push   %ebx
    8592:	53                   	push   %ebx
    8593:	6a f2                	push   $0xfffffff2
    8595:	56                   	push   %esi
    8596:	e8 c5 70 00 00       	call   f660 <async_answer_0@plt>
    859b:	89 3c 24             	mov    %edi,(%esp)
    859e:	e8 fd 73 00 00       	call   f9a0 <free@plt>
    85a3:	83 c4 10             	add    $0x10,%esp
    85a6:	e9 5c ff ff ff       	jmp    8507 <remote_nic_blocked_sources_set+0x47>
    85ab:	90                   	nop
    85ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    85b0:	8b 55 10             	mov    0x10(%ebp),%edx
    85b3:	50                   	push   %eax
    85b4:	50                   	push   %eax
    85b5:	6a f5                	push   $0xfffffff5
    85b7:	52                   	push   %edx
    85b8:	e8 a3 70 00 00       	call   f660 <async_answer_0@plt>
    85bd:	83 c4 10             	add    $0x10,%esp
    85c0:	e9 36 ff ff ff       	jmp    84fb <remote_nic_blocked_sources_set+0x3b>
    85c5:	8d 76 00             	lea    0x0(%esi),%esi
    85c8:	50                   	push   %eax
    85c9:	50                   	push   %eax
    85ca:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    85cd:	6a f2                	push   $0xfffffff2
    85cf:	50                   	push   %eax
    85d0:	e8 8b 70 00 00       	call   f660 <async_answer_0@plt>
    85d5:	8b 4d 10             	mov    0x10(%ebp),%ecx
    85d8:	58                   	pop    %eax
    85d9:	5a                   	pop    %edx
    85da:	6a f2                	push   $0xfffffff2
    85dc:	51                   	push   %ecx
    85dd:	e8 7e 70 00 00       	call   f660 <async_answer_0@plt>
    85e2:	83 c4 10             	add    $0x10,%esp
    85e5:	e9 1d ff ff ff       	jmp    8507 <remote_nic_blocked_sources_set+0x47>
    85ea:	50                   	push   %eax
    85eb:	50                   	push   %eax
    85ec:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    85ef:	6a fe                	push   $0xfffffffe
    85f1:	50                   	push   %eax
    85f2:	e8 69 70 00 00       	call   f660 <async_answer_0@plt>
    85f7:	8b 4d 10             	mov    0x10(%ebp),%ecx
    85fa:	58                   	pop    %eax
    85fb:	5a                   	pop    %edx
    85fc:	6a fe                	push   $0xfffffffe
    85fe:	51                   	push   %ecx
    85ff:	e8 5c 70 00 00       	call   f660 <async_answer_0@plt>
    8604:	83 c4 10             	add    $0x10,%esp
    8607:	e9 fb fe ff ff       	jmp    8507 <remote_nic_blocked_sources_set+0x47>
    860c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00008610 <remote_nic_blocked_sources_get>:
    8610:	55                   	push   %ebp
    8611:	89 e5                	mov    %esp,%ebp
    8613:	57                   	push   %edi
    8614:	56                   	push   %esi
    8615:	53                   	push   %ebx
    8616:	83 ec 1c             	sub    $0x1c,%esp
    8619:	8b 45 0c             	mov    0xc(%ebp),%eax
    861c:	8b 50 64             	mov    0x64(%eax),%edx
    861f:	85 d2                	test   %edx,%edx
    8621:	0f 84 19 01 00 00    	je     8740 <remote_nic_blocked_sources_get+0x130>
    8627:	8b 45 14             	mov    0x14(%ebp),%eax
    862a:	8b 70 08             	mov    0x8(%eax),%esi
    862d:	85 f6                	test   %esi,%esi
    862f:	75 4f                	jne    8680 <remote_nic_blocked_sources_get+0x70>
    8631:	50                   	push   %eax
    8632:	6a 00                	push   $0x0
    8634:	6a 00                	push   $0x0
    8636:	6a 00                	push   $0x0
    8638:	e8 c3 71 00 00       	call   f800 <memset@plt>
    863d:	8d 45 dc             	lea    -0x24(%ebp),%eax
    8640:	50                   	push   %eax
    8641:	8b 55 08             	mov    0x8(%ebp),%edx
    8644:	8b 45 0c             	mov    0xc(%ebp),%eax
    8647:	6a 00                	push   $0x0
    8649:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    8650:	6a 00                	push   $0x0
    8652:	52                   	push   %edx
    8653:	31 db                	xor    %ebx,%ebx
    8655:	ff 50 64             	call   *0x64(%eax)
    8658:	8b 55 dc             	mov    -0x24(%ebp),%edx
    865b:	83 c4 20             	add    $0x20,%esp
    865e:	57                   	push   %edi
    865f:	52                   	push   %edx
    8660:	50                   	push   %eax
    8661:	8b 45 10             	mov    0x10(%ebp),%eax
    8664:	50                   	push   %eax
    8665:	e8 36 72 00 00       	call   f8a0 <async_answer_1@plt>
    866a:	89 1c 24             	mov    %ebx,(%esp)
    866d:	e8 2e 73 00 00       	call   f9a0 <free@plt>
    8672:	83 c4 10             	add    $0x10,%esp
    8675:	8d 65 f4             	lea    -0xc(%ebp),%esp
    8678:	5b                   	pop    %ebx
    8679:	5e                   	pop    %esi
    867a:	5f                   	pop    %edi
    867b:	5d                   	pop    %ebp
    867c:	c3                   	ret    
    867d:	8d 76 00             	lea    0x0(%esi),%esi
    8680:	83 ec 0c             	sub    $0xc,%esp
    8683:	8d 3c 76             	lea    (%esi,%esi,2),%edi
    8686:	01 ff                	add    %edi,%edi
    8688:	57                   	push   %edi
    8689:	e8 92 6f 00 00       	call   f620 <malloc@plt>
    868e:	83 c4 10             	add    $0x10,%esp
    8691:	89 c3                	mov    %eax,%ebx
    8693:	85 c0                	test   %eax,%eax
    8695:	0f 84 dd 00 00 00    	je     8778 <remote_nic_blocked_sources_get+0x168>
    869b:	50                   	push   %eax
    869c:	57                   	push   %edi
    869d:	6a 00                	push   $0x0
    869f:	53                   	push   %ebx
    86a0:	e8 5b 71 00 00       	call   f800 <memset@plt>
    86a5:	8d 45 dc             	lea    -0x24(%ebp),%eax
    86a8:	50                   	push   %eax
    86a9:	8b 45 08             	mov    0x8(%ebp),%eax
    86ac:	53                   	push   %ebx
    86ad:	56                   	push   %esi
    86ae:	50                   	push   %eax
    86af:	8b 45 0c             	mov    0xc(%ebp),%eax
    86b2:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    86b9:	ff 50 64             	call   *0x64(%eax)
    86bc:	83 c4 20             	add    $0x20,%esp
    86bf:	8b 55 dc             	mov    -0x24(%ebp),%edx
    86c2:	85 c0                	test   %eax,%eax
    86c4:	75 98                	jne    865e <remote_nic_blocked_sources_get+0x4e>
    86c6:	85 d2                	test   %edx,%edx
    86c8:	74 94                	je     865e <remote_nic_blocked_sources_get+0x4e>
    86ca:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    86cd:	56                   	push   %esi
    86ce:	56                   	push   %esi
    86cf:	50                   	push   %eax
    86d0:	8d 45 e0             	lea    -0x20(%ebp),%eax
    86d3:	50                   	push   %eax
    86d4:	e8 37 71 00 00       	call   f810 <async_data_read_receive@plt>
    86d9:	83 c4 10             	add    $0x10,%esp
    86dc:	84 c0                	test   %al,%al
    86de:	74 78                	je     8758 <remote_nic_blocked_sources_get+0x148>
    86e0:	8b 45 dc             	mov    -0x24(%ebp),%eax
    86e3:	8d 14 40             	lea    (%eax,%eax,2),%edx
    86e6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    86e9:	01 d2                	add    %edx,%edx
    86eb:	39 c2                	cmp    %eax,%edx
    86ed:	73 05                	jae    86f4 <remote_nic_blocked_sources_get+0xe4>
    86ef:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    86f2:	89 d0                	mov    %edx,%eax
    86f4:	39 f8                	cmp    %edi,%eax
    86f6:	76 05                	jbe    86fd <remote_nic_blocked_sources_get+0xed>
    86f8:	89 7d e4             	mov    %edi,-0x1c(%ebp)
    86fb:	89 f8                	mov    %edi,%eax
    86fd:	8b 75 e0             	mov    -0x20(%ebp),%esi
    8700:	51                   	push   %ecx
    8701:	50                   	push   %eax
    8702:	53                   	push   %ebx
    8703:	56                   	push   %esi
    8704:	e8 e7 6e 00 00       	call   f5f0 <async_data_read_finalize@plt>
    8709:	5f                   	pop    %edi
    870a:	58                   	pop    %eax
    870b:	8b 45 e0             	mov    -0x20(%ebp),%eax
    870e:	6a f2                	push   $0xfffffff2
    8710:	50                   	push   %eax
    8711:	e8 4a 6f 00 00       	call   f660 <async_answer_0@plt>
    8716:	89 1c 24             	mov    %ebx,(%esp)
    8719:	e8 82 72 00 00       	call   f9a0 <free@plt>
    871e:	83 c4 0c             	add    $0xc,%esp
    8721:	8b 45 dc             	mov    -0x24(%ebp),%eax
    8724:	50                   	push   %eax
    8725:	8b 45 10             	mov    0x10(%ebp),%eax
    8728:	6a 00                	push   $0x0
    872a:	50                   	push   %eax
    872b:	e8 70 71 00 00       	call   f8a0 <async_answer_1@plt>
    8730:	83 c4 10             	add    $0x10,%esp
    8733:	8d 65 f4             	lea    -0xc(%ebp),%esp
    8736:	5b                   	pop    %ebx
    8737:	5e                   	pop    %esi
    8738:	5f                   	pop    %edi
    8739:	5d                   	pop    %ebp
    873a:	c3                   	ret    
    873b:	90                   	nop
    873c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8740:	50                   	push   %eax
    8741:	50                   	push   %eax
    8742:	8b 45 10             	mov    0x10(%ebp),%eax
    8745:	6a f5                	push   $0xfffffff5
    8747:	50                   	push   %eax
    8748:	e8 13 6f 00 00       	call   f660 <async_answer_0@plt>
    874d:	83 c4 10             	add    $0x10,%esp
    8750:	e9 20 ff ff ff       	jmp    8675 <remote_nic_blocked_sources_get+0x65>
    8755:	8d 76 00             	lea    0x0(%esi),%esi
    8758:	8b 55 e0             	mov    -0x20(%ebp),%edx
    875b:	50                   	push   %eax
    875c:	50                   	push   %eax
    875d:	6a f2                	push   $0xfffffff2
    875f:	52                   	push   %edx
    8760:	e8 fb 6e 00 00       	call   f660 <async_answer_0@plt>
    8765:	83 c4 0c             	add    $0xc,%esp
    8768:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    876b:	51                   	push   %ecx
    876c:	6a 00                	push   $0x0
    876e:	e9 ee fe ff ff       	jmp    8661 <remote_nic_blocked_sources_get+0x51>
    8773:	90                   	nop
    8774:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8778:	50                   	push   %eax
    8779:	50                   	push   %eax
    877a:	8b 45 10             	mov    0x10(%ebp),%eax
    877d:	6a fe                	push   $0xfffffffe
    877f:	50                   	push   %eax
    8780:	e8 db 6e 00 00       	call   f660 <async_answer_0@plt>
    8785:	83 c4 10             	add    $0x10,%esp
    8788:	e9 e8 fe ff ff       	jmp    8675 <remote_nic_blocked_sources_get+0x65>
    878d:	8d 76 00             	lea    0x0(%esi),%esi

00008790 <remote_nic_multicast_set_mode>:
    8790:	55                   	push   %ebp
    8791:	89 e5                	mov    %esp,%ebp
    8793:	57                   	push   %edi
    8794:	56                   	push   %esi
    8795:	53                   	push   %ebx
    8796:	83 ec 2c             	sub    $0x2c,%esp
    8799:	31 f6                	xor    %esi,%esi
    879b:	8b 45 14             	mov    0x14(%ebp),%eax
    879e:	8b 58 0c             	mov    0xc(%eax),%ebx
    87a1:	8b 78 08             	mov    0x8(%eax),%edi
    87a4:	85 db                	test   %ebx,%ebx
    87a6:	75 40                	jne    87e8 <remote_nic_multicast_set_mode+0x58>
    87a8:	8b 45 0c             	mov    0xc(%ebp),%eax
    87ab:	8b 40 50             	mov    0x50(%eax),%eax
    87ae:	85 c0                	test   %eax,%eax
    87b0:	0f 84 da 00 00 00    	je     8890 <remote_nic_multicast_set_mode+0x100>
    87b6:	8b 4d 08             	mov    0x8(%ebp),%ecx
    87b9:	53                   	push   %ebx
    87ba:	56                   	push   %esi
    87bb:	57                   	push   %edi
    87bc:	51                   	push   %ecx
    87bd:	ff d0                	call   *%eax
    87bf:	5b                   	pop    %ebx
    87c0:	5f                   	pop    %edi
    87c1:	50                   	push   %eax
    87c2:	8b 45 10             	mov    0x10(%ebp),%eax
    87c5:	50                   	push   %eax
    87c6:	e8 95 6e 00 00       	call   f660 <async_answer_0@plt>
    87cb:	83 c4 10             	add    $0x10,%esp
    87ce:	83 ec 0c             	sub    $0xc,%esp
    87d1:	56                   	push   %esi
    87d2:	e8 c9 71 00 00       	call   f9a0 <free@plt>
    87d7:	83 c4 10             	add    $0x10,%esp
    87da:	8d 65 f4             	lea    -0xc(%ebp),%esp
    87dd:	5b                   	pop    %ebx
    87de:	5e                   	pop    %esi
    87df:	5f                   	pop    %edi
    87e0:	5d                   	pop    %ebp
    87e1:	c3                   	ret    
    87e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    87e8:	50                   	push   %eax
    87e9:	50                   	push   %eax
    87ea:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    87ed:	50                   	push   %eax
    87ee:	8d 45 e0             	lea    -0x20(%ebp),%eax
    87f1:	50                   	push   %eax
    87f2:	e8 99 71 00 00       	call   f990 <async_data_write_receive@plt>
    87f7:	83 c4 10             	add    $0x10,%esp
    87fa:	84 c0                	test   %al,%al
    87fc:	0f 84 a6 00 00 00    	je     88a8 <remote_nic_multicast_set_mode+0x118>
    8802:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    8805:	01 c0                	add    %eax,%eax
    8807:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
    880a:	74 2c                	je     8838 <remote_nic_multicast_set_mode+0xa8>
    880c:	50                   	push   %eax
    880d:	50                   	push   %eax
    880e:	8b 45 e0             	mov    -0x20(%ebp),%eax
    8811:	6a fd                	push   $0xfffffffd
    8813:	50                   	push   %eax
    8814:	e8 47 6e 00 00       	call   f660 <async_answer_0@plt>
    8819:	8b 4d 10             	mov    0x10(%ebp),%ecx
    881c:	58                   	pop    %eax
    881d:	5a                   	pop    %edx
    881e:	6a fd                	push   $0xfffffffd
    8820:	51                   	push   %ecx
    8821:	e8 3a 6e 00 00       	call   f660 <async_answer_0@plt>
    8826:	83 c4 10             	add    $0x10,%esp
    8829:	8d 65 f4             	lea    -0xc(%ebp),%esp
    882c:	5b                   	pop    %ebx
    882d:	5e                   	pop    %esi
    882e:	5f                   	pop    %edi
    882f:	5d                   	pop    %ebp
    8830:	c3                   	ret    
    8831:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8838:	83 ec 0c             	sub    $0xc,%esp
    883b:	50                   	push   %eax
    883c:	e8 df 6d 00 00       	call   f620 <malloc@plt>
    8841:	83 c4 10             	add    $0x10,%esp
    8844:	89 c2                	mov    %eax,%edx
    8846:	89 c6                	mov    %eax,%esi
    8848:	85 c0                	test   %eax,%eax
    884a:	74 7e                	je     88ca <remote_nic_multicast_set_mode+0x13a>
    884c:	50                   	push   %eax
    884d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    8850:	50                   	push   %eax
    8851:	8b 45 e0             	mov    -0x20(%ebp),%eax
    8854:	52                   	push   %edx
    8855:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    8858:	50                   	push   %eax
    8859:	e8 c2 70 00 00       	call   f920 <async_data_write_finalize@plt>
    885e:	83 c4 10             	add    $0x10,%esp
    8861:	85 c0                	test   %eax,%eax
    8863:	0f 84 3f ff ff ff    	je     87a8 <remote_nic_multicast_set_mode+0x18>
    8869:	50                   	push   %eax
    886a:	50                   	push   %eax
    886b:	8b 45 10             	mov    0x10(%ebp),%eax
    886e:	6a f2                	push   $0xfffffff2
    8870:	50                   	push   %eax
    8871:	e8 ea 6d 00 00       	call   f660 <async_answer_0@plt>
    8876:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    8879:	89 14 24             	mov    %edx,(%esp)
    887c:	e8 1f 71 00 00       	call   f9a0 <free@plt>
    8881:	83 c4 10             	add    $0x10,%esp
    8884:	e9 51 ff ff ff       	jmp    87da <remote_nic_multicast_set_mode+0x4a>
    8889:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8890:	8b 55 10             	mov    0x10(%ebp),%edx
    8893:	50                   	push   %eax
    8894:	50                   	push   %eax
    8895:	6a f5                	push   $0xfffffff5
    8897:	52                   	push   %edx
    8898:	e8 c3 6d 00 00       	call   f660 <async_answer_0@plt>
    889d:	83 c4 10             	add    $0x10,%esp
    88a0:	e9 29 ff ff ff       	jmp    87ce <remote_nic_multicast_set_mode+0x3e>
    88a5:	8d 76 00             	lea    0x0(%esi),%esi
    88a8:	8b 75 e0             	mov    -0x20(%ebp),%esi
    88ab:	53                   	push   %ebx
    88ac:	53                   	push   %ebx
    88ad:	6a f2                	push   $0xfffffff2
    88af:	56                   	push   %esi
    88b0:	e8 ab 6d 00 00       	call   f660 <async_answer_0@plt>
    88b5:	5f                   	pop    %edi
    88b6:	58                   	pop    %eax
    88b7:	8b 45 10             	mov    0x10(%ebp),%eax
    88ba:	6a f2                	push   $0xfffffff2
    88bc:	50                   	push   %eax
    88bd:	e8 9e 6d 00 00       	call   f660 <async_answer_0@plt>
    88c2:	83 c4 10             	add    $0x10,%esp
    88c5:	e9 10 ff ff ff       	jmp    87da <remote_nic_multicast_set_mode+0x4a>
    88ca:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    88cd:	52                   	push   %edx
    88ce:	52                   	push   %edx
    88cf:	6a fe                	push   $0xfffffffe
    88d1:	51                   	push   %ecx
    88d2:	e8 89 6d 00 00       	call   f660 <async_answer_0@plt>
    88d7:	8b 7d 10             	mov    0x10(%ebp),%edi
    88da:	5b                   	pop    %ebx
    88db:	5e                   	pop    %esi
    88dc:	6a fe                	push   $0xfffffffe
    88de:	57                   	push   %edi
    88df:	e8 7c 6d 00 00       	call   f660 <async_answer_0@plt>
    88e4:	83 c4 10             	add    $0x10,%esp
    88e7:	e9 ee fe ff ff       	jmp    87da <remote_nic_multicast_set_mode+0x4a>
    88ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000088f0 <remote_nic_multicast_get_mode>:
    88f0:	55                   	push   %ebp
    88f1:	89 e5                	mov    %esp,%ebp
    88f3:	57                   	push   %edi
    88f4:	56                   	push   %esi
    88f5:	53                   	push   %ebx
    88f6:	83 ec 1c             	sub    $0x1c,%esp
    88f9:	8b 45 0c             	mov    0xc(%ebp),%eax
    88fc:	8b 58 4c             	mov    0x4c(%eax),%ebx
    88ff:	85 db                	test   %ebx,%ebx
    8901:	0f 84 39 01 00 00    	je     8a40 <remote_nic_multicast_get_mode+0x150>
    8907:	8b 45 14             	mov    0x14(%ebp),%eax
    890a:	8b 70 08             	mov    0x8(%eax),%esi
    890d:	85 f6                	test   %esi,%esi
    890f:	0f 84 cb 00 00 00    	je     89e0 <remote_nic_multicast_get_mode+0xf0>
    8915:	83 ec 0c             	sub    $0xc,%esp
    8918:	8d 3c 76             	lea    (%esi,%esi,2),%edi
    891b:	01 ff                	add    %edi,%edi
    891d:	57                   	push   %edi
    891e:	e8 fd 6c 00 00       	call   f620 <malloc@plt>
    8923:	83 c4 10             	add    $0x10,%esp
    8926:	89 c3                	mov    %eax,%ebx
    8928:	85 c0                	test   %eax,%eax
    892a:	0f 84 58 01 00 00    	je     8a88 <remote_nic_multicast_get_mode+0x198>
    8930:	50                   	push   %eax
    8931:	57                   	push   %edi
    8932:	6a 00                	push   $0x0
    8934:	53                   	push   %ebx
    8935:	e8 c6 6e 00 00       	call   f800 <memset@plt>
    893a:	8d 45 dc             	lea    -0x24(%ebp),%eax
    893d:	89 04 24             	mov    %eax,(%esp)
    8940:	8d 45 d8             	lea    -0x28(%ebp),%eax
    8943:	53                   	push   %ebx
    8944:	56                   	push   %esi
    8945:	50                   	push   %eax
    8946:	8b 45 08             	mov    0x8(%ebp),%eax
    8949:	50                   	push   %eax
    894a:	8b 45 0c             	mov    0xc(%ebp),%eax
    894d:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
    8954:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    895b:	ff 50 4c             	call   *0x4c(%eax)
    895e:	83 c4 20             	add    $0x20,%esp
    8961:	89 c6                	mov    %eax,%esi
    8963:	85 c0                	test   %eax,%eax
    8965:	0f 85 ae 00 00 00    	jne    8a19 <remote_nic_multicast_get_mode+0x129>
    896b:	8b 45 dc             	mov    -0x24(%ebp),%eax
    896e:	85 c0                	test   %eax,%eax
    8970:	0f 84 a3 00 00 00    	je     8a19 <remote_nic_multicast_get_mode+0x129>
    8976:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    8979:	51                   	push   %ecx
    897a:	51                   	push   %ecx
    897b:	50                   	push   %eax
    897c:	8d 45 e0             	lea    -0x20(%ebp),%eax
    897f:	50                   	push   %eax
    8980:	e8 8b 6e 00 00       	call   f810 <async_data_read_receive@plt>
    8985:	83 c4 10             	add    $0x10,%esp
    8988:	84 c0                	test   %al,%al
    898a:	0f 84 c8 00 00 00    	je     8a58 <remote_nic_multicast_get_mode+0x168>
    8990:	8b 45 dc             	mov    -0x24(%ebp),%eax
    8993:	8d 14 40             	lea    (%eax,%eax,2),%edx
    8996:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    8999:	01 d2                	add    %edx,%edx
    899b:	39 c2                	cmp    %eax,%edx
    899d:	73 05                	jae    89a4 <remote_nic_multicast_get_mode+0xb4>
    899f:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    89a2:	89 d0                	mov    %edx,%eax
    89a4:	39 c7                	cmp    %eax,%edi
    89a6:	73 05                	jae    89ad <remote_nic_multicast_get_mode+0xbd>
    89a8:	89 7d e4             	mov    %edi,-0x1c(%ebp)
    89ab:	89 f8                	mov    %edi,%eax
    89ad:	8b 75 e0             	mov    -0x20(%ebp),%esi
    89b0:	51                   	push   %ecx
    89b1:	50                   	push   %eax
    89b2:	53                   	push   %ebx
    89b3:	56                   	push   %esi
    89b4:	e8 37 6c 00 00       	call   f5f0 <async_data_read_finalize@plt>
    89b9:	89 1c 24             	mov    %ebx,(%esp)
    89bc:	e8 df 6f 00 00       	call   f9a0 <free@plt>
    89c1:	8b 7d dc             	mov    -0x24(%ebp),%edi
    89c4:	8b 45 d8             	mov    -0x28(%ebp),%eax
    89c7:	57                   	push   %edi
    89c8:	50                   	push   %eax
    89c9:	8b 45 10             	mov    0x10(%ebp),%eax
    89cc:	6a 00                	push   $0x0
    89ce:	50                   	push   %eax
    89cf:	e8 6c 6d 00 00       	call   f740 <async_answer_2@plt>
    89d4:	83 c4 20             	add    $0x20,%esp
    89d7:	8d 65 f4             	lea    -0xc(%ebp),%esp
    89da:	5b                   	pop    %ebx
    89db:	5e                   	pop    %esi
    89dc:	5f                   	pop    %edi
    89dd:	5d                   	pop    %ebp
    89de:	c3                   	ret    
    89df:	90                   	nop
    89e0:	50                   	push   %eax
    89e1:	6a 00                	push   $0x0
    89e3:	6a 00                	push   $0x0
    89e5:	6a 00                	push   $0x0
    89e7:	e8 14 6e 00 00       	call   f800 <memset@plt>
    89ec:	8d 45 dc             	lea    -0x24(%ebp),%eax
    89ef:	89 04 24             	mov    %eax,(%esp)
    89f2:	8d 45 d8             	lea    -0x28(%ebp),%eax
    89f5:	6a 00                	push   $0x0
    89f7:	6a 00                	push   $0x0
    89f9:	50                   	push   %eax
    89fa:	8b 45 0c             	mov    0xc(%ebp),%eax
    89fd:	8b 55 08             	mov    0x8(%ebp),%edx
    8a00:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
    8a07:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    8a0e:	52                   	push   %edx
    8a0f:	ff 50 4c             	call   *0x4c(%eax)
    8a12:	31 db                	xor    %ebx,%ebx
    8a14:	89 c6                	mov    %eax,%esi
    8a16:	83 c4 20             	add    $0x20,%esp
    8a19:	83 ec 0c             	sub    $0xc,%esp
    8a1c:	53                   	push   %ebx
    8a1d:	e8 7e 6f 00 00       	call   f9a0 <free@plt>
    8a22:	8b 5d dc             	mov    -0x24(%ebp),%ebx
    8a25:	8b 7d d8             	mov    -0x28(%ebp),%edi
    8a28:	8b 45 10             	mov    0x10(%ebp),%eax
    8a2b:	53                   	push   %ebx
    8a2c:	57                   	push   %edi
    8a2d:	56                   	push   %esi
    8a2e:	50                   	push   %eax
    8a2f:	e8 0c 6d 00 00       	call   f740 <async_answer_2@plt>
    8a34:	83 c4 20             	add    $0x20,%esp
    8a37:	8d 65 f4             	lea    -0xc(%ebp),%esp
    8a3a:	5b                   	pop    %ebx
    8a3b:	5e                   	pop    %esi
    8a3c:	5f                   	pop    %edi
    8a3d:	5d                   	pop    %ebp
    8a3e:	c3                   	ret    
    8a3f:	90                   	nop
    8a40:	8b 4d 10             	mov    0x10(%ebp),%ecx
    8a43:	52                   	push   %edx
    8a44:	52                   	push   %edx
    8a45:	6a f5                	push   $0xfffffff5
    8a47:	51                   	push   %ecx
    8a48:	e8 13 6c 00 00       	call   f660 <async_answer_0@plt>
    8a4d:	83 c4 10             	add    $0x10,%esp
    8a50:	eb e5                	jmp    8a37 <remote_nic_multicast_get_mode+0x147>
    8a52:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8a58:	50                   	push   %eax
    8a59:	50                   	push   %eax
    8a5a:	8b 45 e0             	mov    -0x20(%ebp),%eax
    8a5d:	6a f2                	push   $0xfffffff2
    8a5f:	50                   	push   %eax
    8a60:	e8 fb 6b 00 00       	call   f660 <async_answer_0@plt>
    8a65:	8b 45 dc             	mov    -0x24(%ebp),%eax
    8a68:	8b 55 10             	mov    0x10(%ebp),%edx
    8a6b:	50                   	push   %eax
    8a6c:	8b 45 d8             	mov    -0x28(%ebp),%eax
    8a6f:	50                   	push   %eax
    8a70:	6a 00                	push   $0x0
    8a72:	52                   	push   %edx
    8a73:	e8 c8 6c 00 00       	call   f740 <async_answer_2@plt>
    8a78:	83 c4 14             	add    $0x14,%esp
    8a7b:	53                   	push   %ebx
    8a7c:	e8 1f 6f 00 00       	call   f9a0 <free@plt>
    8a81:	83 c4 10             	add    $0x10,%esp
    8a84:	eb b1                	jmp    8a37 <remote_nic_multicast_get_mode+0x147>
    8a86:	66 90                	xchg   %ax,%ax
    8a88:	50                   	push   %eax
    8a89:	50                   	push   %eax
    8a8a:	8b 45 10             	mov    0x10(%ebp),%eax
    8a8d:	6a fe                	push   $0xfffffffe
    8a8f:	50                   	push   %eax
    8a90:	e8 cb 6b 00 00       	call   f660 <async_answer_0@plt>
    8a95:	83 c4 10             	add    $0x10,%esp
    8a98:	eb 9d                	jmp    8a37 <remote_nic_multicast_get_mode+0x147>
    8a9a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00008aa0 <remote_nic_unicast_set_mode>:
    8aa0:	55                   	push   %ebp
    8aa1:	89 e5                	mov    %esp,%ebp
    8aa3:	57                   	push   %edi
    8aa4:	56                   	push   %esi
    8aa5:	53                   	push   %ebx
    8aa6:	83 ec 2c             	sub    $0x2c,%esp
    8aa9:	31 f6                	xor    %esi,%esi
    8aab:	8b 45 14             	mov    0x14(%ebp),%eax
    8aae:	8b 58 0c             	mov    0xc(%eax),%ebx
    8ab1:	8b 78 08             	mov    0x8(%eax),%edi
    8ab4:	85 db                	test   %ebx,%ebx
    8ab6:	75 40                	jne    8af8 <remote_nic_unicast_set_mode+0x58>
    8ab8:	8b 45 0c             	mov    0xc(%ebp),%eax
    8abb:	8b 40 48             	mov    0x48(%eax),%eax
    8abe:	85 c0                	test   %eax,%eax
    8ac0:	0f 84 da 00 00 00    	je     8ba0 <remote_nic_unicast_set_mode+0x100>
    8ac6:	8b 4d 08             	mov    0x8(%ebp),%ecx
    8ac9:	53                   	push   %ebx
    8aca:	56                   	push   %esi
    8acb:	57                   	push   %edi
    8acc:	51                   	push   %ecx
    8acd:	ff d0                	call   *%eax
    8acf:	5b                   	pop    %ebx
    8ad0:	5f                   	pop    %edi
    8ad1:	50                   	push   %eax
    8ad2:	8b 45 10             	mov    0x10(%ebp),%eax
    8ad5:	50                   	push   %eax
    8ad6:	e8 85 6b 00 00       	call   f660 <async_answer_0@plt>
    8adb:	83 c4 10             	add    $0x10,%esp
    8ade:	83 ec 0c             	sub    $0xc,%esp
    8ae1:	56                   	push   %esi
    8ae2:	e8 b9 6e 00 00       	call   f9a0 <free@plt>
    8ae7:	83 c4 10             	add    $0x10,%esp
    8aea:	8d 65 f4             	lea    -0xc(%ebp),%esp
    8aed:	5b                   	pop    %ebx
    8aee:	5e                   	pop    %esi
    8aef:	5f                   	pop    %edi
    8af0:	5d                   	pop    %ebp
    8af1:	c3                   	ret    
    8af2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8af8:	50                   	push   %eax
    8af9:	50                   	push   %eax
    8afa:	8d 45 e0             	lea    -0x20(%ebp),%eax
    8afd:	50                   	push   %eax
    8afe:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    8b01:	50                   	push   %eax
    8b02:	e8 89 6e 00 00       	call   f990 <async_data_write_receive@plt>
    8b07:	83 c4 10             	add    $0x10,%esp
    8b0a:	84 c0                	test   %al,%al
    8b0c:	0f 84 a6 00 00 00    	je     8bb8 <remote_nic_unicast_set_mode+0x118>
    8b12:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    8b15:	01 c0                	add    %eax,%eax
    8b17:	3b 45 e0             	cmp    -0x20(%ebp),%eax
    8b1a:	74 2c                	je     8b48 <remote_nic_unicast_set_mode+0xa8>
    8b1c:	50                   	push   %eax
    8b1d:	50                   	push   %eax
    8b1e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    8b21:	6a fd                	push   $0xfffffffd
    8b23:	50                   	push   %eax
    8b24:	e8 37 6b 00 00       	call   f660 <async_answer_0@plt>
    8b29:	8b 4d 10             	mov    0x10(%ebp),%ecx
    8b2c:	58                   	pop    %eax
    8b2d:	5a                   	pop    %edx
    8b2e:	6a fd                	push   $0xfffffffd
    8b30:	51                   	push   %ecx
    8b31:	e8 2a 6b 00 00       	call   f660 <async_answer_0@plt>
    8b36:	83 c4 10             	add    $0x10,%esp
    8b39:	8d 65 f4             	lea    -0xc(%ebp),%esp
    8b3c:	5b                   	pop    %ebx
    8b3d:	5e                   	pop    %esi
    8b3e:	5f                   	pop    %edi
    8b3f:	5d                   	pop    %ebp
    8b40:	c3                   	ret    
    8b41:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8b48:	83 ec 0c             	sub    $0xc,%esp
    8b4b:	50                   	push   %eax
    8b4c:	e8 cf 6a 00 00       	call   f620 <malloc@plt>
    8b51:	83 c4 10             	add    $0x10,%esp
    8b54:	89 c2                	mov    %eax,%edx
    8b56:	89 c6                	mov    %eax,%esi
    8b58:	85 c0                	test   %eax,%eax
    8b5a:	74 7e                	je     8bda <remote_nic_unicast_set_mode+0x13a>
    8b5c:	50                   	push   %eax
    8b5d:	8b 45 e0             	mov    -0x20(%ebp),%eax
    8b60:	50                   	push   %eax
    8b61:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    8b64:	52                   	push   %edx
    8b65:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    8b68:	50                   	push   %eax
    8b69:	e8 b2 6d 00 00       	call   f920 <async_data_write_finalize@plt>
    8b6e:	83 c4 10             	add    $0x10,%esp
    8b71:	85 c0                	test   %eax,%eax
    8b73:	0f 84 3f ff ff ff    	je     8ab8 <remote_nic_unicast_set_mode+0x18>
    8b79:	50                   	push   %eax
    8b7a:	50                   	push   %eax
    8b7b:	8b 45 10             	mov    0x10(%ebp),%eax
    8b7e:	6a f2                	push   $0xfffffff2
    8b80:	50                   	push   %eax
    8b81:	e8 da 6a 00 00       	call   f660 <async_answer_0@plt>
    8b86:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    8b89:	89 14 24             	mov    %edx,(%esp)
    8b8c:	e8 0f 6e 00 00       	call   f9a0 <free@plt>
    8b91:	83 c4 10             	add    $0x10,%esp
    8b94:	e9 51 ff ff ff       	jmp    8aea <remote_nic_unicast_set_mode+0x4a>
    8b99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8ba0:	8b 55 10             	mov    0x10(%ebp),%edx
    8ba3:	50                   	push   %eax
    8ba4:	50                   	push   %eax
    8ba5:	6a f5                	push   $0xfffffff5
    8ba7:	52                   	push   %edx
    8ba8:	e8 b3 6a 00 00       	call   f660 <async_answer_0@plt>
    8bad:	83 c4 10             	add    $0x10,%esp
    8bb0:	e9 29 ff ff ff       	jmp    8ade <remote_nic_unicast_set_mode+0x3e>
    8bb5:	8d 76 00             	lea    0x0(%esi),%esi
    8bb8:	8b 75 e4             	mov    -0x1c(%ebp),%esi
    8bbb:	53                   	push   %ebx
    8bbc:	53                   	push   %ebx
    8bbd:	6a f2                	push   $0xfffffff2
    8bbf:	56                   	push   %esi
    8bc0:	e8 9b 6a 00 00       	call   f660 <async_answer_0@plt>
    8bc5:	5f                   	pop    %edi
    8bc6:	58                   	pop    %eax
    8bc7:	8b 45 10             	mov    0x10(%ebp),%eax
    8bca:	6a f2                	push   $0xfffffff2
    8bcc:	50                   	push   %eax
    8bcd:	e8 8e 6a 00 00       	call   f660 <async_answer_0@plt>
    8bd2:	83 c4 10             	add    $0x10,%esp
    8bd5:	e9 10 ff ff ff       	jmp    8aea <remote_nic_unicast_set_mode+0x4a>
    8bda:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    8bdd:	52                   	push   %edx
    8bde:	52                   	push   %edx
    8bdf:	6a fe                	push   $0xfffffffe
    8be1:	51                   	push   %ecx
    8be2:	e8 79 6a 00 00       	call   f660 <async_answer_0@plt>
    8be7:	8b 7d 10             	mov    0x10(%ebp),%edi
    8bea:	5b                   	pop    %ebx
    8beb:	5e                   	pop    %esi
    8bec:	6a fe                	push   $0xfffffffe
    8bee:	57                   	push   %edi
    8bef:	e8 6c 6a 00 00       	call   f660 <async_answer_0@plt>
    8bf4:	83 c4 10             	add    $0x10,%esp
    8bf7:	e9 ee fe ff ff       	jmp    8aea <remote_nic_unicast_set_mode+0x4a>
    8bfc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00008c00 <remote_nic_unicast_get_mode>:
    8c00:	55                   	push   %ebp
    8c01:	89 e5                	mov    %esp,%ebp
    8c03:	57                   	push   %edi
    8c04:	56                   	push   %esi
    8c05:	53                   	push   %ebx
    8c06:	83 ec 1c             	sub    $0x1c,%esp
    8c09:	8b 45 0c             	mov    0xc(%ebp),%eax
    8c0c:	8b 40 44             	mov    0x44(%eax),%eax
    8c0f:	85 c0                	test   %eax,%eax
    8c11:	0f 84 49 01 00 00    	je     8d60 <remote_nic_unicast_get_mode+0x160>
    8c17:	8b 45 14             	mov    0x14(%ebp),%eax
    8c1a:	8b 70 08             	mov    0x8(%eax),%esi
    8c1d:	85 f6                	test   %esi,%esi
    8c1f:	0f 84 db 00 00 00    	je     8d00 <remote_nic_unicast_get_mode+0x100>
    8c25:	83 ec 0c             	sub    $0xc,%esp
    8c28:	8d 3c 76             	lea    (%esi,%esi,2),%edi
    8c2b:	01 ff                	add    %edi,%edi
    8c2d:	57                   	push   %edi
    8c2e:	e8 ed 69 00 00       	call   f620 <malloc@plt>
    8c33:	83 c4 10             	add    $0x10,%esp
    8c36:	89 c3                	mov    %eax,%ebx
    8c38:	85 c0                	test   %eax,%eax
    8c3a:	0f 84 68 01 00 00    	je     8da8 <remote_nic_unicast_get_mode+0x1a8>
    8c40:	50                   	push   %eax
    8c41:	57                   	push   %edi
    8c42:	6a 00                	push   $0x0
    8c44:	53                   	push   %ebx
    8c45:	e8 b6 6b 00 00       	call   f800 <memset@plt>
    8c4a:	8d 45 dc             	lea    -0x24(%ebp),%eax
    8c4d:	89 04 24             	mov    %eax,(%esp)
    8c50:	8d 45 d8             	lea    -0x28(%ebp),%eax
    8c53:	53                   	push   %ebx
    8c54:	56                   	push   %esi
    8c55:	50                   	push   %eax
    8c56:	8b 45 0c             	mov    0xc(%ebp),%eax
    8c59:	8b 55 08             	mov    0x8(%ebp),%edx
    8c5c:	c7 45 d8 02 00 00 00 	movl   $0x2,-0x28(%ebp)
    8c63:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    8c6a:	52                   	push   %edx
    8c6b:	ff 50 44             	call   *0x44(%eax)
    8c6e:	83 c4 20             	add    $0x20,%esp
    8c71:	89 c6                	mov    %eax,%esi
    8c73:	85 c0                	test   %eax,%eax
    8c75:	0f 85 be 00 00 00    	jne    8d39 <remote_nic_unicast_get_mode+0x139>
    8c7b:	8b 45 dc             	mov    -0x24(%ebp),%eax
    8c7e:	85 c0                	test   %eax,%eax
    8c80:	0f 84 b3 00 00 00    	je     8d39 <remote_nic_unicast_get_mode+0x139>
    8c86:	50                   	push   %eax
    8c87:	50                   	push   %eax
    8c88:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    8c8b:	50                   	push   %eax
    8c8c:	8d 45 e0             	lea    -0x20(%ebp),%eax
    8c8f:	50                   	push   %eax
    8c90:	e8 7b 6b 00 00       	call   f810 <async_data_read_receive@plt>
    8c95:	83 c4 10             	add    $0x10,%esp
    8c98:	84 c0                	test   %al,%al
    8c9a:	0f 84 d8 00 00 00    	je     8d78 <remote_nic_unicast_get_mode+0x178>
    8ca0:	8b 45 dc             	mov    -0x24(%ebp),%eax
    8ca3:	8d 14 40             	lea    (%eax,%eax,2),%edx
    8ca6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    8ca9:	01 d2                	add    %edx,%edx
    8cab:	39 c2                	cmp    %eax,%edx
    8cad:	73 05                	jae    8cb4 <remote_nic_unicast_get_mode+0xb4>
    8caf:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    8cb2:	89 d0                	mov    %edx,%eax
    8cb4:	39 c7                	cmp    %eax,%edi
    8cb6:	73 05                	jae    8cbd <remote_nic_unicast_get_mode+0xbd>
    8cb8:	89 7d e4             	mov    %edi,-0x1c(%ebp)
    8cbb:	89 f8                	mov    %edi,%eax
    8cbd:	8b 75 e0             	mov    -0x20(%ebp),%esi
    8cc0:	51                   	push   %ecx
    8cc1:	50                   	push   %eax
    8cc2:	53                   	push   %ebx
    8cc3:	56                   	push   %esi
    8cc4:	e8 27 69 00 00       	call   f5f0 <async_data_read_finalize@plt>
    8cc9:	5f                   	pop    %edi
    8cca:	58                   	pop    %eax
    8ccb:	8b 45 e0             	mov    -0x20(%ebp),%eax
    8cce:	6a f2                	push   $0xfffffff2
    8cd0:	50                   	push   %eax
    8cd1:	e8 8a 69 00 00       	call   f660 <async_answer_0@plt>
    8cd6:	89 1c 24             	mov    %ebx,(%esp)
    8cd9:	e8 c2 6c 00 00       	call   f9a0 <free@plt>
    8cde:	8b 45 dc             	mov    -0x24(%ebp),%eax
    8ce1:	50                   	push   %eax
    8ce2:	8b 45 d8             	mov    -0x28(%ebp),%eax
    8ce5:	50                   	push   %eax
    8ce6:	8b 45 10             	mov    0x10(%ebp),%eax
    8ce9:	6a 00                	push   $0x0
    8ceb:	50                   	push   %eax
    8cec:	e8 4f 6a 00 00       	call   f740 <async_answer_2@plt>
    8cf1:	83 c4 20             	add    $0x20,%esp
    8cf4:	8d 65 f4             	lea    -0xc(%ebp),%esp
    8cf7:	5b                   	pop    %ebx
    8cf8:	5e                   	pop    %esi
    8cf9:	5f                   	pop    %edi
    8cfa:	5d                   	pop    %ebp
    8cfb:	c3                   	ret    
    8cfc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8d00:	50                   	push   %eax
    8d01:	6a 00                	push   $0x0
    8d03:	6a 00                	push   $0x0
    8d05:	6a 00                	push   $0x0
    8d07:	e8 f4 6a 00 00       	call   f800 <memset@plt>
    8d0c:	8d 45 dc             	lea    -0x24(%ebp),%eax
    8d0f:	89 04 24             	mov    %eax,(%esp)
    8d12:	8d 45 d8             	lea    -0x28(%ebp),%eax
    8d15:	6a 00                	push   $0x0
    8d17:	6a 00                	push   $0x0
    8d19:	50                   	push   %eax
    8d1a:	8b 45 0c             	mov    0xc(%ebp),%eax
    8d1d:	8b 55 08             	mov    0x8(%ebp),%edx
    8d20:	c7 45 d8 02 00 00 00 	movl   $0x2,-0x28(%ebp)
    8d27:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    8d2e:	52                   	push   %edx
    8d2f:	ff 50 44             	call   *0x44(%eax)
    8d32:	31 db                	xor    %ebx,%ebx
    8d34:	89 c6                	mov    %eax,%esi
    8d36:	83 c4 20             	add    $0x20,%esp
    8d39:	83 ec 0c             	sub    $0xc,%esp
    8d3c:	53                   	push   %ebx
    8d3d:	e8 5e 6c 00 00       	call   f9a0 <free@plt>
    8d42:	8b 45 dc             	mov    -0x24(%ebp),%eax
    8d45:	50                   	push   %eax
    8d46:	8b 45 d8             	mov    -0x28(%ebp),%eax
    8d49:	50                   	push   %eax
    8d4a:	8b 45 10             	mov    0x10(%ebp),%eax
    8d4d:	56                   	push   %esi
    8d4e:	50                   	push   %eax
    8d4f:	e8 ec 69 00 00       	call   f740 <async_answer_2@plt>
    8d54:	83 c4 20             	add    $0x20,%esp
    8d57:	8d 65 f4             	lea    -0xc(%ebp),%esp
    8d5a:	5b                   	pop    %ebx
    8d5b:	5e                   	pop    %esi
    8d5c:	5f                   	pop    %edi
    8d5d:	5d                   	pop    %ebp
    8d5e:	c3                   	ret    
    8d5f:	90                   	nop
    8d60:	8b 7d 10             	mov    0x10(%ebp),%edi
    8d63:	56                   	push   %esi
    8d64:	56                   	push   %esi
    8d65:	6a f5                	push   $0xfffffff5
    8d67:	57                   	push   %edi
    8d68:	e8 f3 68 00 00       	call   f660 <async_answer_0@plt>
    8d6d:	83 c4 10             	add    $0x10,%esp
    8d70:	eb e5                	jmp    8d57 <remote_nic_unicast_get_mode+0x157>
    8d72:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8d78:	8b 55 e0             	mov    -0x20(%ebp),%edx
    8d7b:	50                   	push   %eax
    8d7c:	50                   	push   %eax
    8d7d:	6a f2                	push   $0xfffffff2
    8d7f:	52                   	push   %edx
    8d80:	e8 db 68 00 00       	call   f660 <async_answer_0@plt>
    8d85:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    8d88:	8b 75 d8             	mov    -0x28(%ebp),%esi
    8d8b:	8b 7d 10             	mov    0x10(%ebp),%edi
    8d8e:	51                   	push   %ecx
    8d8f:	56                   	push   %esi
    8d90:	6a 00                	push   $0x0
    8d92:	57                   	push   %edi
    8d93:	e8 a8 69 00 00       	call   f740 <async_answer_2@plt>
    8d98:	83 c4 14             	add    $0x14,%esp
    8d9b:	53                   	push   %ebx
    8d9c:	e8 ff 6b 00 00       	call   f9a0 <free@plt>
    8da1:	83 c4 10             	add    $0x10,%esp
    8da4:	eb b1                	jmp    8d57 <remote_nic_unicast_get_mode+0x157>
    8da6:	66 90                	xchg   %ax,%ax
    8da8:	8b 5d 10             	mov    0x10(%ebp),%ebx
    8dab:	51                   	push   %ecx
    8dac:	51                   	push   %ecx
    8dad:	6a fe                	push   $0xfffffffe
    8daf:	53                   	push   %ebx
    8db0:	e8 ab 68 00 00       	call   f660 <async_answer_0@plt>
    8db5:	83 c4 10             	add    $0x10,%esp
    8db8:	eb 9d                	jmp    8d57 <remote_nic_unicast_get_mode+0x157>
    8dba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00008dc0 <remote_nic_get_pause>:
    8dc0:	55                   	push   %ebp
    8dc1:	89 e5                	mov    %esp,%ebp
    8dc3:	83 ec 18             	sub    $0x18,%esp
    8dc6:	8b 45 0c             	mov    0xc(%ebp),%eax
    8dc9:	8b 40 3c             	mov    0x3c(%eax),%eax
    8dcc:	85 c0                	test   %eax,%eax
    8dce:	74 38                	je     8e08 <remote_nic_get_pause+0x48>
    8dd0:	8d 55 ee             	lea    -0x12(%ebp),%edx
    8dd3:	52                   	push   %edx
    8dd4:	8d 55 f4             	lea    -0xc(%ebp),%edx
    8dd7:	52                   	push   %edx
    8dd8:	8d 55 f0             	lea    -0x10(%ebp),%edx
    8ddb:	52                   	push   %edx
    8ddc:	8b 55 08             	mov    0x8(%ebp),%edx
    8ddf:	52                   	push   %edx
    8de0:	ff d0                	call   *%eax
    8de2:	31 d2                	xor    %edx,%edx
    8de4:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    8de7:	66 8b 55 ee          	mov    -0x12(%ebp),%dx
    8deb:	89 14 24             	mov    %edx,(%esp)
    8dee:	51                   	push   %ecx
    8def:	8b 55 f0             	mov    -0x10(%ebp),%edx
    8df2:	8b 4d 10             	mov    0x10(%ebp),%ecx
    8df5:	52                   	push   %edx
    8df6:	50                   	push   %eax
    8df7:	51                   	push   %ecx
    8df8:	e8 f3 6a 00 00       	call   f8f0 <async_answer_3@plt>
    8dfd:	83 c4 20             	add    $0x20,%esp
    8e00:	c9                   	leave  
    8e01:	c3                   	ret    
    8e02:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8e08:	50                   	push   %eax
    8e09:	50                   	push   %eax
    8e0a:	8b 45 10             	mov    0x10(%ebp),%eax
    8e0d:	6a f5                	push   $0xfffffff5
    8e0f:	50                   	push   %eax
    8e10:	e8 4b 68 00 00       	call   f660 <async_answer_0@plt>
    8e15:	83 c4 10             	add    $0x10,%esp
    8e18:	c9                   	leave  
    8e19:	c3                   	ret    
    8e1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00008e20 <remote_nic_get_operation_mode>:
    8e20:	55                   	push   %ebp
    8e21:	89 e5                	mov    %esp,%ebp
    8e23:	83 ec 18             	sub    $0x18,%esp
    8e26:	8b 45 0c             	mov    0xc(%ebp),%eax
    8e29:	8b 40 24             	mov    0x24(%eax),%eax
    8e2c:	85 c0                	test   %eax,%eax
    8e2e:	74 48                	je     8e78 <remote_nic_get_operation_mode+0x58>
    8e30:	8d 55 f4             	lea    -0xc(%ebp),%edx
    8e33:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    8e3a:	52                   	push   %edx
    8e3b:	8d 55 f0             	lea    -0x10(%ebp),%edx
    8e3e:	52                   	push   %edx
    8e3f:	8d 55 ec             	lea    -0x14(%ebp),%edx
    8e42:	52                   	push   %edx
    8e43:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
    8e4a:	8b 55 08             	mov    0x8(%ebp),%edx
    8e4d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    8e54:	52                   	push   %edx
    8e55:	ff d0                	call   *%eax
    8e57:	59                   	pop    %ecx
    8e58:	8b 55 f4             	mov    -0xc(%ebp),%edx
    8e5b:	8b 4d f0             	mov    -0x10(%ebp),%ecx
    8e5e:	52                   	push   %edx
    8e5f:	8b 55 ec             	mov    -0x14(%ebp),%edx
    8e62:	51                   	push   %ecx
    8e63:	8b 4d 10             	mov    0x10(%ebp),%ecx
    8e66:	52                   	push   %edx
    8e67:	50                   	push   %eax
    8e68:	51                   	push   %ecx
    8e69:	e8 82 6a 00 00       	call   f8f0 <async_answer_3@plt>
    8e6e:	83 c4 20             	add    $0x20,%esp
    8e71:	c9                   	leave  
    8e72:	c3                   	ret    
    8e73:	90                   	nop
    8e74:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8e78:	50                   	push   %eax
    8e79:	50                   	push   %eax
    8e7a:	8b 45 10             	mov    0x10(%ebp),%eax
    8e7d:	6a f5                	push   $0xfffffff5
    8e7f:	50                   	push   %eax
    8e80:	e8 db 67 00 00       	call   f660 <async_answer_0@plt>
    8e85:	83 c4 10             	add    $0x10,%esp
    8e88:	c9                   	leave  
    8e89:	c3                   	ret    
    8e8a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00008e90 <remote_nic_autoneg_probe>:
    8e90:	55                   	push   %ebp
    8e91:	89 e5                	mov    %esp,%ebp
    8e93:	83 ec 18             	sub    $0x18,%esp
    8e96:	8b 45 0c             	mov    0xc(%ebp),%eax
    8e99:	8b 40 34             	mov    0x34(%eax),%eax
    8e9c:	85 c0                	test   %eax,%eax
    8e9e:	74 58                	je     8ef8 <remote_nic_autoneg_probe+0x68>
    8ea0:	83 ec 0c             	sub    $0xc,%esp
    8ea3:	8d 55 f4             	lea    -0xc(%ebp),%edx
    8ea6:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
    8ead:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    8eb4:	52                   	push   %edx
    8eb5:	8d 55 f0             	lea    -0x10(%ebp),%edx
    8eb8:	52                   	push   %edx
    8eb9:	8d 55 ec             	lea    -0x14(%ebp),%edx
    8ebc:	52                   	push   %edx
    8ebd:	8d 55 e8             	lea    -0x18(%ebp),%edx
    8ec0:	52                   	push   %edx
    8ec1:	c7 45 f0 03 00 00 00 	movl   $0x3,-0x10(%ebp)
    8ec8:	8b 55 08             	mov    0x8(%ebp),%edx
    8ecb:	c7 45 f4 03 00 00 00 	movl   $0x3,-0xc(%ebp)
    8ed2:	52                   	push   %edx
    8ed3:	ff d0                	call   *%eax
    8ed5:	83 c4 18             	add    $0x18,%esp
    8ed8:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    8edb:	8b 55 f0             	mov    -0x10(%ebp),%edx
    8ede:	51                   	push   %ecx
    8edf:	8b 4d ec             	mov    -0x14(%ebp),%ecx
    8ee2:	52                   	push   %edx
    8ee3:	8b 55 e8             	mov    -0x18(%ebp),%edx
    8ee6:	51                   	push   %ecx
    8ee7:	8b 4d 10             	mov    0x10(%ebp),%ecx
    8eea:	52                   	push   %edx
    8eeb:	50                   	push   %eax
    8eec:	51                   	push   %ecx
    8eed:	e8 8e 68 00 00       	call   f780 <async_answer_4@plt>
    8ef2:	83 c4 20             	add    $0x20,%esp
    8ef5:	c9                   	leave  
    8ef6:	c3                   	ret    
    8ef7:	90                   	nop
    8ef8:	50                   	push   %eax
    8ef9:	50                   	push   %eax
    8efa:	8b 45 10             	mov    0x10(%ebp),%eax
    8efd:	6a f5                	push   $0xfffffff5
    8eff:	50                   	push   %eax
    8f00:	e8 5b 67 00 00       	call   f660 <async_answer_0@plt>
    8f05:	83 c4 10             	add    $0x10,%esp
    8f08:	c9                   	leave  
    8f09:	c3                   	ret    
    8f0a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00008f10 <remote_nic_set_state>:
    8f10:	55                   	push   %ebp
    8f11:	89 e5                	mov    %esp,%ebp
    8f13:	53                   	push   %ebx
    8f14:	50                   	push   %eax
    8f15:	8b 45 0c             	mov    0xc(%ebp),%eax
    8f18:	8b 55 08             	mov    0x8(%ebp),%edx
    8f1b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    8f1e:	8b 4d 14             	mov    0x14(%ebp),%ecx
    8f21:	8b 40 0c             	mov    0xc(%eax),%eax
    8f24:	85 c0                	test   %eax,%eax
    8f26:	74 1c                	je     8f44 <remote_nic_set_state+0x34>
    8f28:	83 ec 08             	sub    $0x8,%esp
    8f2b:	8b 49 08             	mov    0x8(%ecx),%ecx
    8f2e:	51                   	push   %ecx
    8f2f:	52                   	push   %edx
    8f30:	ff d0                	call   *%eax
    8f32:	89 5d 08             	mov    %ebx,0x8(%ebp)
    8f35:	83 c4 10             	add    $0x10,%esp
    8f38:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    8f3b:	89 45 0c             	mov    %eax,0xc(%ebp)
    8f3e:	c9                   	leave  
    8f3f:	e9 1c 67 00 00       	jmp    f660 <async_answer_0@plt>
    8f44:	53                   	push   %ebx
    8f45:	68 69 05 00 00       	push   $0x569
    8f4a:	68 a4 ee 00 00       	push   $0xeea4
    8f4f:	68 d0 ee 00 00       	push   $0xeed0
    8f54:	e8 77 67 00 00       	call   f6d0 <assert_abort@plt>
    8f59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00008f60 <remote_nic_callback_create>:
    8f60:	55                   	push   %ebp
    8f61:	89 e5                	mov    %esp,%ebp
    8f63:	53                   	push   %ebx
    8f64:	52                   	push   %edx
    8f65:	8b 45 0c             	mov    0xc(%ebp),%eax
    8f68:	8b 55 08             	mov    0x8(%ebp),%edx
    8f6b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    8f6e:	8b 40 04             	mov    0x4(%eax),%eax
    8f71:	85 c0                	test   %eax,%eax
    8f73:	74 18                	je     8f8d <remote_nic_callback_create+0x2d>
    8f75:	83 ec 0c             	sub    $0xc,%esp
    8f78:	52                   	push   %edx
    8f79:	ff d0                	call   *%eax
    8f7b:	89 5d 08             	mov    %ebx,0x8(%ebp)
    8f7e:	83 c4 10             	add    $0x10,%esp
    8f81:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    8f84:	89 45 0c             	mov    %eax,0xc(%ebp)
    8f87:	c9                   	leave  
    8f88:	e9 d3 66 00 00       	jmp    f660 <async_answer_0@plt>
    8f8d:	50                   	push   %eax
    8f8e:	68 53 05 00 00       	push   $0x553
    8f93:	68 a4 ee 00 00       	push   $0xeea4
    8f98:	68 e5 ee 00 00       	push   $0xeee5
    8f9d:	e8 2e 67 00 00       	call   f6d0 <assert_abort@plt>
    8fa2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8fa9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00008fb0 <remote_nic_get_state>:
    8fb0:	55                   	push   %ebp
    8fb1:	89 e5                	mov    %esp,%ebp
    8fb3:	83 ec 18             	sub    $0x18,%esp
    8fb6:	8b 45 0c             	mov    0xc(%ebp),%eax
    8fb9:	8b 40 08             	mov    0x8(%eax),%eax
    8fbc:	85 c0                	test   %eax,%eax
    8fbe:	74 29                	je     8fe9 <remote_nic_get_state+0x39>
    8fc0:	8b 4d 08             	mov    0x8(%ebp),%ecx
    8fc3:	c7 45 f4 03 00 00 00 	movl   $0x3,-0xc(%ebp)
    8fca:	52                   	push   %edx
    8fcb:	52                   	push   %edx
    8fcc:	8d 55 f4             	lea    -0xc(%ebp),%edx
    8fcf:	52                   	push   %edx
    8fd0:	51                   	push   %ecx
    8fd1:	ff d0                	call   *%eax
    8fd3:	83 c4 0c             	add    $0xc,%esp
    8fd6:	8b 55 f4             	mov    -0xc(%ebp),%edx
    8fd9:	8b 4d 10             	mov    0x10(%ebp),%ecx
    8fdc:	52                   	push   %edx
    8fdd:	50                   	push   %eax
    8fde:	51                   	push   %ecx
    8fdf:	e8 bc 68 00 00       	call   f8a0 <async_answer_1@plt>
    8fe4:	83 c4 10             	add    $0x10,%esp
    8fe7:	c9                   	leave  
    8fe8:	c3                   	ret    
    8fe9:	50                   	push   %eax
    8fea:	68 5d 05 00 00       	push   $0x55d
    8fef:	68 a4 ee 00 00       	push   $0xeea4
    8ff4:	68 00 ef 00 00       	push   $0xef00
    8ff9:	e8 d2 66 00 00       	call   f6d0 <assert_abort@plt>
    8ffe:	66 90                	xchg   %ax,%ax

00009000 <remote_nic_send_frame>:
    9000:	55                   	push   %ebp
    9001:	89 e5                	mov    %esp,%ebp
    9003:	53                   	push   %ebx
    9004:	83 ec 14             	sub    $0x14,%esp
    9007:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    900a:	8b 13                	mov    (%ebx),%edx
    900c:	85 d2                	test   %edx,%edx
    900e:	74 65                	je     9075 <remote_nic_send_frame+0x75>
    9010:	50                   	push   %eax
    9011:	50                   	push   %eax
    9012:	8d 45 f4             	lea    -0xc(%ebp),%eax
    9015:	50                   	push   %eax
    9016:	8d 45 f0             	lea    -0x10(%ebp),%eax
    9019:	6a 00                	push   $0x0
    901b:	6a 00                	push   $0x0
    901d:	6a 00                	push   $0x0
    901f:	6a 00                	push   $0x0
    9021:	50                   	push   %eax
    9022:	e8 09 69 00 00       	call   f930 <async_data_write_accept@plt>
    9027:	83 c4 20             	add    $0x20,%esp
    902a:	85 c0                	test   %eax,%eax
    902c:	75 32                	jne    9060 <remote_nic_send_frame+0x60>
    902e:	8b 55 f4             	mov    -0xc(%ebp),%edx
    9031:	8b 4d f0             	mov    -0x10(%ebp),%ecx
    9034:	50                   	push   %eax
    9035:	8b 45 08             	mov    0x8(%ebp),%eax
    9038:	52                   	push   %edx
    9039:	51                   	push   %ecx
    903a:	50                   	push   %eax
    903b:	ff 13                	call   *(%ebx)
    903d:	8b 5d 10             	mov    0x10(%ebp),%ebx
    9040:	5a                   	pop    %edx
    9041:	59                   	pop    %ecx
    9042:	50                   	push   %eax
    9043:	53                   	push   %ebx
    9044:	e8 17 66 00 00       	call   f660 <async_answer_0@plt>
    9049:	58                   	pop    %eax
    904a:	8b 45 f0             	mov    -0x10(%ebp),%eax
    904d:	50                   	push   %eax
    904e:	e8 4d 69 00 00       	call   f9a0 <free@plt>
    9053:	83 c4 10             	add    $0x10,%esp
    9056:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    9059:	c9                   	leave  
    905a:	c3                   	ret    
    905b:	90                   	nop
    905c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9060:	50                   	push   %eax
    9061:	50                   	push   %eax
    9062:	8b 45 10             	mov    0x10(%ebp),%eax
    9065:	6a f2                	push   $0xfffffff2
    9067:	50                   	push   %eax
    9068:	e8 f3 65 00 00       	call   f660 <async_answer_0@plt>
    906d:	83 c4 10             	add    $0x10,%esp
    9070:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    9073:	c9                   	leave  
    9074:	c3                   	ret    
    9075:	50                   	push   %eax
    9076:	68 3e 05 00 00       	push   $0x53e
    907b:	68 a4 ee 00 00       	push   $0xeea4
    9080:	68 15 ef 00 00       	push   $0xef15
    9085:	e8 46 66 00 00       	call   f6d0 <assert_abort@plt>
    908a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00009090 <nic_send_frame>:
    9090:	55                   	push   %ebp
    9091:	89 e5                	mov    %esp,%ebp
    9093:	56                   	push   %esi
    9094:	53                   	push   %ebx
    9095:	83 ec 3c             	sub    $0x3c,%esp
    9098:	8b 55 08             	mov    0x8(%ebp),%edx
    909b:	52                   	push   %edx
    909c:	e8 0f 68 00 00       	call   f8b0 <async_exchange_begin@plt>
    90a1:	83 c4 0c             	add    $0xc,%esp
    90a4:	89 c3                	mov    %eax,%ebx
    90a6:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    90a9:	50                   	push   %eax
    90aa:	6a 00                	push   $0x0
    90ac:	6a 00                	push   $0x0
    90ae:	6a 00                	push   $0x0
    90b0:	6a 00                	push   $0x0
    90b2:	68 05 04 00 00       	push   $0x405
    90b7:	53                   	push   %ebx
    90b8:	e8 b3 65 00 00       	call   f670 <async_send_fast@plt>
    90bd:	83 c4 1c             	add    $0x1c,%esp
    90c0:	8b 4d 10             	mov    0x10(%ebp),%ecx
    90c3:	89 c6                	mov    %eax,%esi
    90c5:	8b 45 0c             	mov    0xc(%ebp),%eax
    90c8:	51                   	push   %ecx
    90c9:	50                   	push   %eax
    90ca:	53                   	push   %ebx
    90cb:	e8 f0 64 00 00       	call   f5c0 <async_data_write_start@plt>
    90d0:	89 1c 24             	mov    %ebx,(%esp)
    90d3:	89 45 d0             	mov    %eax,-0x30(%ebp)
    90d6:	e8 e5 65 00 00       	call   f6c0 <async_exchange_end@plt>
    90db:	8b 45 d0             	mov    -0x30(%ebp),%eax
    90de:	83 c4 10             	add    $0x10,%esp
    90e1:	85 c0                	test   %eax,%eax
    90e3:	75 1b                	jne    9100 <nic_send_frame+0x70>
    90e5:	50                   	push   %eax
    90e6:	50                   	push   %eax
    90e7:	8d 45 d0             	lea    -0x30(%ebp),%eax
    90ea:	50                   	push   %eax
    90eb:	56                   	push   %esi
    90ec:	e8 8f 64 00 00       	call   f580 <async_wait_for@plt>
    90f1:	8b 45 d0             	mov    -0x30(%ebp),%eax
    90f4:	83 c4 10             	add    $0x10,%esp
    90f7:	8d 65 f8             	lea    -0x8(%ebp),%esp
    90fa:	5b                   	pop    %ebx
    90fb:	5e                   	pop    %esi
    90fc:	5d                   	pop    %ebp
    90fd:	c3                   	ret    
    90fe:	66 90                	xchg   %ax,%ax
    9100:	83 ec 0c             	sub    $0xc,%esp
    9103:	56                   	push   %esi
    9104:	e8 37 68 00 00       	call   f940 <async_forget@plt>
    9109:	8b 45 d0             	mov    -0x30(%ebp),%eax
    910c:	83 c4 10             	add    $0x10,%esp
    910f:	8d 65 f8             	lea    -0x8(%ebp),%esp
    9112:	5b                   	pop    %ebx
    9113:	5e                   	pop    %esi
    9114:	5d                   	pop    %ebp
    9115:	c3                   	ret    
    9116:	8d 76 00             	lea    0x0(%esi),%esi
    9119:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009120 <nic_callback_create>:
    9120:	55                   	push   %ebp
    9121:	89 e5                	mov    %esp,%ebp
    9123:	56                   	push   %esi
    9124:	53                   	push   %ebx
    9125:	83 ec 4c             	sub    $0x4c,%esp
    9128:	8b 4d 08             	mov    0x8(%ebp),%ecx
    912b:	51                   	push   %ecx
    912c:	e8 7f 67 00 00       	call   f8b0 <async_exchange_begin@plt>
    9131:	83 c4 0c             	add    $0xc,%esp
    9134:	89 c3                	mov    %eax,%ebx
    9136:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    9139:	50                   	push   %eax
    913a:	6a 00                	push   $0x0
    913c:	6a 00                	push   $0x0
    913e:	6a 00                	push   $0x0
    9140:	6a 01                	push   $0x1
    9142:	68 05 04 00 00       	push   $0x405
    9147:	53                   	push   %ebx
    9148:	e8 23 65 00 00       	call   f670 <async_send_fast@plt>
    914d:	83 c4 1c             	add    $0x1c,%esp
    9150:	89 c6                	mov    %eax,%esi
    9152:	8d 45 d0             	lea    -0x30(%ebp),%eax
    9155:	50                   	push   %eax
    9156:	8b 45 10             	mov    0x10(%ebp),%eax
    9159:	50                   	push   %eax
    915a:	8b 45 0c             	mov    0xc(%ebp),%eax
    915d:	50                   	push   %eax
    915e:	6a 00                	push   $0x0
    9160:	6a 00                	push   $0x0
    9162:	68 e5 4e 8f 41       	push   $0x418f4ee5
    9167:	53                   	push   %ebx
    9168:	e8 63 66 00 00       	call   f7d0 <async_create_callback_port@plt>
    916d:	83 c4 20             	add    $0x20,%esp
    9170:	85 c0                	test   %eax,%eax
    9172:	75 24                	jne    9198 <nic_callback_create+0x78>
    9174:	83 ec 0c             	sub    $0xc,%esp
    9177:	53                   	push   %ebx
    9178:	e8 43 65 00 00       	call   f6c0 <async_exchange_end@plt>
    917d:	58                   	pop    %eax
    917e:	8d 45 cc             	lea    -0x34(%ebp),%eax
    9181:	5a                   	pop    %edx
    9182:	50                   	push   %eax
    9183:	56                   	push   %esi
    9184:	e8 f7 63 00 00       	call   f580 <async_wait_for@plt>
    9189:	8b 45 cc             	mov    -0x34(%ebp),%eax
    918c:	83 c4 10             	add    $0x10,%esp
    918f:	8d 65 f8             	lea    -0x8(%ebp),%esp
    9192:	5b                   	pop    %ebx
    9193:	5e                   	pop    %esi
    9194:	5d                   	pop    %ebp
    9195:	c3                   	ret    
    9196:	66 90                	xchg   %ax,%ax
    9198:	83 ec 0c             	sub    $0xc,%esp
    919b:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    919e:	56                   	push   %esi
    919f:	e8 9c 67 00 00       	call   f940 <async_forget@plt>
    91a4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    91a7:	83 c4 10             	add    $0x10,%esp
    91aa:	8d 65 f8             	lea    -0x8(%ebp),%esp
    91ad:	5b                   	pop    %ebx
    91ae:	5e                   	pop    %esi
    91af:	5d                   	pop    %ebp
    91b0:	c3                   	ret    
    91b1:	eb 0d                	jmp    91c0 <nic_get_state>
    91b3:	90                   	nop
    91b4:	90                   	nop
    91b5:	90                   	nop
    91b6:	90                   	nop
    91b7:	90                   	nop
    91b8:	90                   	nop
    91b9:	90                   	nop
    91ba:	90                   	nop
    91bb:	90                   	nop
    91bc:	90                   	nop
    91bd:	90                   	nop
    91be:	90                   	nop
    91bf:	90                   	nop

000091c0 <nic_get_state>:
    91c0:	55                   	push   %ebp
    91c1:	89 e5                	mov    %esp,%ebp
    91c3:	56                   	push   %esi
    91c4:	53                   	push   %ebx
    91c5:	83 ec 20             	sub    $0x20,%esp
    91c8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    91cb:	85 db                	test   %ebx,%ebx
    91cd:	74 4b                	je     921a <nic_get_state+0x5a>
    91cf:	83 ec 0c             	sub    $0xc,%esp
    91d2:	8b 45 08             	mov    0x8(%ebp),%eax
    91d5:	50                   	push   %eax
    91d6:	e8 d5 66 00 00       	call   f8b0 <async_exchange_begin@plt>
    91db:	83 c4 0c             	add    $0xc,%esp
    91de:	89 c6                	mov    %eax,%esi
    91e0:	8d 45 f4             	lea    -0xc(%ebp),%eax
    91e3:	6a 00                	push   $0x0
    91e5:	6a 00                	push   $0x0
    91e7:	6a 00                	push   $0x0
    91e9:	6a 00                	push   $0x0
    91eb:	50                   	push   %eax
    91ec:	6a 00                	push   $0x0
    91ee:	6a 00                	push   $0x0
    91f0:	6a 00                	push   $0x0
    91f2:	6a 02                	push   $0x2
    91f4:	68 05 04 00 00       	push   $0x405
    91f9:	56                   	push   %esi
    91fa:	e8 51 64 00 00       	call   f650 <async_req_fast@plt>
    91ff:	83 c4 24             	add    $0x24,%esp
    9202:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    9205:	56                   	push   %esi
    9206:	e8 b5 64 00 00       	call   f6c0 <async_exchange_end@plt>
    920b:	8b 55 f4             	mov    -0xc(%ebp),%edx
    920e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    9211:	89 13                	mov    %edx,(%ebx)
    9213:	8d 65 f8             	lea    -0x8(%ebp),%esp
    9216:	5b                   	pop    %ebx
    9217:	5e                   	pop    %esi
    9218:	5d                   	pop    %ebp
    9219:	c3                   	ret    
    921a:	52                   	push   %edx
    921b:	68 a2 00 00 00       	push   $0xa2
    9220:	68 a4 ee 00 00       	push   $0xeea4
    9225:	68 43 ef 00 00       	push   $0xef43
    922a:	e8 a1 64 00 00       	call   f6d0 <assert_abort@plt>
    922f:	90                   	nop

00009230 <nic_set_state>:
    9230:	55                   	push   %ebp
    9231:	89 e5                	mov    %esp,%ebp
    9233:	53                   	push   %ebx
    9234:	83 ec 20             	sub    $0x20,%esp
    9237:	8b 45 08             	mov    0x8(%ebp),%eax
    923a:	50                   	push   %eax
    923b:	e8 70 66 00 00       	call   f8b0 <async_exchange_begin@plt>
    9240:	83 c4 0c             	add    $0xc,%esp
    9243:	8b 55 0c             	mov    0xc(%ebp),%edx
    9246:	89 c3                	mov    %eax,%ebx
    9248:	6a 00                	push   $0x0
    924a:	6a 00                	push   $0x0
    924c:	6a 00                	push   $0x0
    924e:	6a 00                	push   $0x0
    9250:	6a 00                	push   $0x0
    9252:	6a 00                	push   $0x0
    9254:	6a 00                	push   $0x0
    9256:	52                   	push   %edx
    9257:	6a 03                	push   $0x3
    9259:	68 05 04 00 00       	push   $0x405
    925e:	50                   	push   %eax
    925f:	e8 ec 63 00 00       	call   f650 <async_req_fast@plt>
    9264:	83 c4 24             	add    $0x24,%esp
    9267:	89 45 f4             	mov    %eax,-0xc(%ebp)
    926a:	53                   	push   %ebx
    926b:	e8 50 64 00 00       	call   f6c0 <async_exchange_end@plt>
    9270:	8b 45 f4             	mov    -0xc(%ebp),%eax
    9273:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    9276:	c9                   	leave  
    9277:	c3                   	ret    
    9278:	90                   	nop
    9279:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00009280 <nic_get_address>:
    9280:	55                   	push   %ebp
    9281:	89 e5                	mov    %esp,%ebp
    9283:	57                   	push   %edi
    9284:	56                   	push   %esi
    9285:	53                   	push   %ebx
    9286:	83 ec 2c             	sub    $0x2c,%esp
    9289:	8b 75 0c             	mov    0xc(%ebp),%esi
    928c:	85 f6                	test   %esi,%esi
    928e:	74 60                	je     92f0 <nic_get_address+0x70>
    9290:	83 ec 0c             	sub    $0xc,%esp
    9293:	8b 45 08             	mov    0x8(%ebp),%eax
    9296:	50                   	push   %eax
    9297:	e8 14 66 00 00       	call   f8b0 <async_exchange_begin@plt>
    929c:	83 c4 0c             	add    $0xc,%esp
    929f:	89 c3                	mov    %eax,%ebx
    92a1:	6a 00                	push   $0x0
    92a3:	6a 00                	push   $0x0
    92a5:	6a 00                	push   $0x0
    92a7:	6a 00                	push   $0x0
    92a9:	6a 04                	push   $0x4
    92ab:	68 05 04 00 00       	push   $0x405
    92b0:	50                   	push   %eax
    92b1:	e8 ba 63 00 00       	call   f670 <async_send_fast@plt>
    92b6:	83 c4 1c             	add    $0x1c,%esp
    92b9:	89 c7                	mov    %eax,%edi
    92bb:	6a 06                	push   $0x6
    92bd:	56                   	push   %esi
    92be:	53                   	push   %ebx
    92bf:	e8 5c 65 00 00       	call   f820 <async_data_read_start@plt>
    92c4:	89 1c 24             	mov    %ebx,(%esp)
    92c7:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    92ca:	e8 f1 63 00 00       	call   f6c0 <async_exchange_end@plt>
    92cf:	5a                   	pop    %edx
    92d0:	8d 55 e4             	lea    -0x1c(%ebp),%edx
    92d3:	59                   	pop    %ecx
    92d4:	52                   	push   %edx
    92d5:	57                   	push   %edi
    92d6:	e8 a5 62 00 00       	call   f580 <async_wait_for@plt>
    92db:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    92de:	83 c4 10             	add    $0x10,%esp
    92e1:	85 c0                	test   %eax,%eax
    92e3:	75 03                	jne    92e8 <nic_get_address+0x68>
    92e5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    92e8:	8d 65 f4             	lea    -0xc(%ebp),%esp
    92eb:	5b                   	pop    %ebx
    92ec:	5e                   	pop    %esi
    92ed:	5f                   	pop    %edi
    92ee:	5d                   	pop    %ebp
    92ef:	c3                   	ret    
    92f0:	53                   	push   %ebx
    92f1:	68 cc 00 00 00       	push   $0xcc
    92f6:	68 a4 ee 00 00       	push   $0xeea4
    92fb:	68 c8 ee 00 00       	push   $0xeec8
    9300:	e8 cb 63 00 00       	call   f6d0 <assert_abort@plt>
    9305:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9309:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009310 <nic_set_address>:
    9310:	55                   	push   %ebp
    9311:	89 e5                	mov    %esp,%ebp
    9313:	57                   	push   %edi
    9314:	56                   	push   %esi
    9315:	53                   	push   %ebx
    9316:	83 ec 2c             	sub    $0x2c,%esp
    9319:	8b 75 0c             	mov    0xc(%ebp),%esi
    931c:	85 f6                	test   %esi,%esi
    931e:	74 60                	je     9380 <nic_set_address+0x70>
    9320:	83 ec 0c             	sub    $0xc,%esp
    9323:	8b 45 08             	mov    0x8(%ebp),%eax
    9326:	50                   	push   %eax
    9327:	e8 84 65 00 00       	call   f8b0 <async_exchange_begin@plt>
    932c:	83 c4 0c             	add    $0xc,%esp
    932f:	89 c3                	mov    %eax,%ebx
    9331:	6a 00                	push   $0x0
    9333:	6a 00                	push   $0x0
    9335:	6a 00                	push   $0x0
    9337:	6a 00                	push   $0x0
    9339:	6a 05                	push   $0x5
    933b:	68 05 04 00 00       	push   $0x405
    9340:	50                   	push   %eax
    9341:	e8 2a 63 00 00       	call   f670 <async_send_fast@plt>
    9346:	83 c4 1c             	add    $0x1c,%esp
    9349:	89 c7                	mov    %eax,%edi
    934b:	6a 06                	push   $0x6
    934d:	56                   	push   %esi
    934e:	53                   	push   %ebx
    934f:	e8 6c 62 00 00       	call   f5c0 <async_data_write_start@plt>
    9354:	89 1c 24             	mov    %ebx,(%esp)
    9357:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    935a:	e8 61 63 00 00       	call   f6c0 <async_exchange_end@plt>
    935f:	5a                   	pop    %edx
    9360:	8d 55 e4             	lea    -0x1c(%ebp),%edx
    9363:	59                   	pop    %ecx
    9364:	52                   	push   %edx
    9365:	57                   	push   %edi
    9366:	e8 15 62 00 00       	call   f580 <async_wait_for@plt>
    936b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    936e:	83 c4 10             	add    $0x10,%esp
    9371:	85 c0                	test   %eax,%eax
    9373:	75 03                	jne    9378 <nic_set_address+0x68>
    9375:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    9378:	8d 65 f4             	lea    -0xc(%ebp),%esp
    937b:	5b                   	pop    %ebx
    937c:	5e                   	pop    %esi
    937d:	5f                   	pop    %edi
    937e:	5d                   	pop    %ebp
    937f:	c3                   	ret    
    9380:	53                   	push   %ebx
    9381:	68 e7 00 00 00       	push   $0xe7
    9386:	68 a4 ee 00 00       	push   $0xeea4
    938b:	68 c8 ee 00 00       	push   $0xeec8
    9390:	e8 3b 63 00 00       	call   f6d0 <assert_abort@plt>
    9395:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9399:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000093a0 <nic_get_stats>:
    93a0:	55                   	push   %ebp
    93a1:	89 e5                	mov    %esp,%ebp
    93a3:	56                   	push   %esi
    93a4:	53                   	push   %ebx
    93a5:	83 ec 10             	sub    $0x10,%esp
    93a8:	8b 75 0c             	mov    0xc(%ebp),%esi
    93ab:	85 f6                	test   %esi,%esi
    93ad:	74 72                	je     9421 <nic_get_stats+0x81>
    93af:	83 ec 0c             	sub    $0xc,%esp
    93b2:	8b 55 08             	mov    0x8(%ebp),%edx
    93b5:	52                   	push   %edx
    93b6:	e8 f5 64 00 00       	call   f8b0 <async_exchange_begin@plt>
    93bb:	83 c4 0c             	add    $0xc,%esp
    93be:	89 c3                	mov    %eax,%ebx
    93c0:	6a 00                	push   $0x0
    93c2:	6a 00                	push   $0x0
    93c4:	6a 00                	push   $0x0
    93c6:	6a 00                	push   $0x0
    93c8:	6a 00                	push   $0x0
    93ca:	6a 00                	push   $0x0
    93cc:	6a 00                	push   $0x0
    93ce:	6a 00                	push   $0x0
    93d0:	6a 06                	push   $0x6
    93d2:	68 05 04 00 00       	push   $0x405
    93d7:	50                   	push   %eax
    93d8:	e8 73 62 00 00       	call   f650 <async_req_fast@plt>
    93dd:	83 c4 30             	add    $0x30,%esp
    93e0:	85 c0                	test   %eax,%eax
    93e2:	75 24                	jne    9408 <nic_get_stats+0x68>
    93e4:	50                   	push   %eax
    93e5:	6a 6c                	push   $0x6c
    93e7:	56                   	push   %esi
    93e8:	53                   	push   %ebx
    93e9:	e8 32 64 00 00       	call   f820 <async_data_read_start@plt>
    93ee:	89 1c 24             	mov    %ebx,(%esp)
    93f1:	89 45 f4             	mov    %eax,-0xc(%ebp)
    93f4:	e8 c7 62 00 00       	call   f6c0 <async_exchange_end@plt>
    93f9:	8b 45 f4             	mov    -0xc(%ebp),%eax
    93fc:	83 c4 10             	add    $0x10,%esp
    93ff:	8d 65 f8             	lea    -0x8(%ebp),%esp
    9402:	5b                   	pop    %ebx
    9403:	5e                   	pop    %esi
    9404:	5d                   	pop    %ebp
    9405:	c3                   	ret    
    9406:	66 90                	xchg   %ax,%ax
    9408:	83 ec 0c             	sub    $0xc,%esp
    940b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    940e:	53                   	push   %ebx
    940f:	e8 ac 62 00 00       	call   f6c0 <async_exchange_end@plt>
    9414:	8b 45 f4             	mov    -0xc(%ebp),%eax
    9417:	83 c4 10             	add    $0x10,%esp
    941a:	8d 65 f8             	lea    -0x8(%ebp),%esp
    941d:	5b                   	pop    %ebx
    941e:	5e                   	pop    %esi
    941f:	5d                   	pop    %ebp
    9420:	c3                   	ret    
    9421:	51                   	push   %ecx
    9422:	68 02 01 00 00       	push   $0x102
    9427:	68 a4 ee 00 00       	push   $0xeea4
    942c:	68 2b ef 00 00       	push   $0xef2b
    9431:	e8 9a 62 00 00       	call   f6d0 <assert_abort@plt>
    9436:	8d 76 00             	lea    0x0(%esi),%esi
    9439:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009440 <nic_get_device_info>:
    9440:	55                   	push   %ebp
    9441:	89 e5                	mov    %esp,%ebp
    9443:	57                   	push   %edi
    9444:	56                   	push   %esi
    9445:	53                   	push   %ebx
    9446:	83 ec 2c             	sub    $0x2c,%esp
    9449:	8b 75 0c             	mov    0xc(%ebp),%esi
    944c:	85 f6                	test   %esi,%esi
    944e:	74 63                	je     94b3 <nic_get_device_info+0x73>
    9450:	83 ec 0c             	sub    $0xc,%esp
    9453:	8b 45 08             	mov    0x8(%ebp),%eax
    9456:	50                   	push   %eax
    9457:	e8 54 64 00 00       	call   f8b0 <async_exchange_begin@plt>
    945c:	83 c4 0c             	add    $0xc,%esp
    945f:	89 c3                	mov    %eax,%ebx
    9461:	6a 00                	push   $0x0
    9463:	6a 00                	push   $0x0
    9465:	6a 00                	push   $0x0
    9467:	6a 00                	push   $0x0
    9469:	6a 07                	push   $0x7
    946b:	68 05 04 00 00       	push   $0x405
    9470:	50                   	push   %eax
    9471:	e8 fa 61 00 00       	call   f670 <async_send_fast@plt>
    9476:	83 c4 1c             	add    $0x1c,%esp
    9479:	89 c7                	mov    %eax,%edi
    947b:	68 1c 01 00 00       	push   $0x11c
    9480:	56                   	push   %esi
    9481:	53                   	push   %ebx
    9482:	e8 99 63 00 00       	call   f820 <async_data_read_start@plt>
    9487:	89 1c 24             	mov    %ebx,(%esp)
    948a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    948d:	e8 2e 62 00 00       	call   f6c0 <async_exchange_end@plt>
    9492:	5a                   	pop    %edx
    9493:	8d 55 e4             	lea    -0x1c(%ebp),%edx
    9496:	59                   	pop    %ecx
    9497:	52                   	push   %edx
    9498:	57                   	push   %edi
    9499:	e8 e2 60 00 00       	call   f580 <async_wait_for@plt>
    949e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    94a1:	83 c4 10             	add    $0x10,%esp
    94a4:	85 c0                	test   %eax,%eax
    94a6:	75 03                	jne    94ab <nic_get_device_info+0x6b>
    94a8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    94ab:	8d 65 f4             	lea    -0xc(%ebp),%esp
    94ae:	5b                   	pop    %ebx
    94af:	5e                   	pop    %esi
    94b0:	5f                   	pop    %edi
    94b1:	5d                   	pop    %ebp
    94b2:	c3                   	ret    
    94b3:	53                   	push   %ebx
    94b4:	68 20 01 00 00       	push   $0x120
    94b9:	68 a4 ee 00 00       	push   $0xeea4
    94be:	68 31 ef 00 00       	push   $0xef31
    94c3:	e8 08 62 00 00       	call   f6d0 <assert_abort@plt>
    94c8:	90                   	nop
    94c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000094d0 <nic_get_cable_state>:
    94d0:	55                   	push   %ebp
    94d1:	89 e5                	mov    %esp,%ebp
    94d3:	56                   	push   %esi
    94d4:	53                   	push   %ebx
    94d5:	83 ec 20             	sub    $0x20,%esp
    94d8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    94db:	85 db                	test   %ebx,%ebx
    94dd:	74 4b                	je     952a <nic_get_cable_state+0x5a>
    94df:	83 ec 0c             	sub    $0xc,%esp
    94e2:	8b 45 08             	mov    0x8(%ebp),%eax
    94e5:	50                   	push   %eax
    94e6:	e8 c5 63 00 00       	call   f8b0 <async_exchange_begin@plt>
    94eb:	83 c4 0c             	add    $0xc,%esp
    94ee:	89 c6                	mov    %eax,%esi
    94f0:	8d 45 f4             	lea    -0xc(%ebp),%eax
    94f3:	6a 00                	push   $0x0
    94f5:	6a 00                	push   $0x0
    94f7:	6a 00                	push   $0x0
    94f9:	6a 00                	push   $0x0
    94fb:	50                   	push   %eax
    94fc:	6a 00                	push   $0x0
    94fe:	6a 00                	push   $0x0
    9500:	6a 00                	push   $0x0
    9502:	6a 08                	push   $0x8
    9504:	68 05 04 00 00       	push   $0x405
    9509:	56                   	push   %esi
    950a:	e8 41 61 00 00       	call   f650 <async_req_fast@plt>
    950f:	83 c4 24             	add    $0x24,%esp
    9512:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    9515:	56                   	push   %esi
    9516:	e8 a5 61 00 00       	call   f6c0 <async_exchange_end@plt>
    951b:	8b 55 f4             	mov    -0xc(%ebp),%edx
    951e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    9521:	89 13                	mov    %edx,(%ebx)
    9523:	8d 65 f8             	lea    -0x8(%ebp),%esp
    9526:	5b                   	pop    %ebx
    9527:	5e                   	pop    %esi
    9528:	5d                   	pop    %ebp
    9529:	c3                   	ret    
    952a:	52                   	push   %edx
    952b:	68 3c 01 00 00       	push   $0x13c
    9530:	68 a4 ee 00 00       	push   $0xeea4
    9535:	68 3d ef 00 00       	push   $0xef3d
    953a:	e8 91 61 00 00       	call   f6d0 <assert_abort@plt>
    953f:	90                   	nop

00009540 <nic_get_operation_mode>:
    9540:	55                   	push   %ebp
    9541:	89 e5                	mov    %esp,%ebp
    9543:	57                   	push   %edi
    9544:	56                   	push   %esi
    9545:	53                   	push   %ebx
    9546:	83 ec 38             	sub    $0x38,%esp
    9549:	8b 4d 08             	mov    0x8(%ebp),%ecx
    954c:	8b 7d 0c             	mov    0xc(%ebp),%edi
    954f:	51                   	push   %ecx
    9550:	8b 5d 14             	mov    0x14(%ebp),%ebx
    9553:	e8 58 63 00 00       	call   f8b0 <async_exchange_begin@plt>
    9558:	83 c4 0c             	add    $0xc,%esp
    955b:	89 c6                	mov    %eax,%esi
    955d:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9560:	6a 00                	push   $0x0
    9562:	6a 00                	push   $0x0
    9564:	50                   	push   %eax
    9565:	8d 45 e0             	lea    -0x20(%ebp),%eax
    9568:	50                   	push   %eax
    9569:	8d 45 dc             	lea    -0x24(%ebp),%eax
    956c:	50                   	push   %eax
    956d:	6a 00                	push   $0x0
    956f:	6a 00                	push   $0x0
    9571:	6a 00                	push   $0x0
    9573:	6a 09                	push   $0x9
    9575:	68 05 04 00 00       	push   $0x405
    957a:	56                   	push   %esi
    957b:	e8 d0 60 00 00       	call   f650 <async_req_fast@plt>
    9580:	83 c4 24             	add    $0x24,%esp
    9583:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    9586:	56                   	push   %esi
    9587:	e8 34 61 00 00       	call   f6c0 <async_exchange_end@plt>
    958c:	83 c4 10             	add    $0x10,%esp
    958f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9592:	85 ff                	test   %edi,%edi
    9594:	74 05                	je     959b <nic_get_operation_mode+0x5b>
    9596:	8b 55 dc             	mov    -0x24(%ebp),%edx
    9599:	89 17                	mov    %edx,(%edi)
    959b:	8b 55 10             	mov    0x10(%ebp),%edx
    959e:	85 d2                	test   %edx,%edx
    95a0:	74 08                	je     95aa <nic_get_operation_mode+0x6a>
    95a2:	8b 4d 10             	mov    0x10(%ebp),%ecx
    95a5:	8b 55 e0             	mov    -0x20(%ebp),%edx
    95a8:	89 11                	mov    %edx,(%ecx)
    95aa:	85 db                	test   %ebx,%ebx
    95ac:	74 05                	je     95b3 <nic_get_operation_mode+0x73>
    95ae:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    95b1:	89 13                	mov    %edx,(%ebx)
    95b3:	8d 65 f4             	lea    -0xc(%ebp),%esp
    95b6:	5b                   	pop    %ebx
    95b7:	5e                   	pop    %esi
    95b8:	5f                   	pop    %edi
    95b9:	5d                   	pop    %ebp
    95ba:	c3                   	ret    
    95bb:	90                   	nop
    95bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000095c0 <nic_set_operation_mode>:
    95c0:	55                   	push   %ebp
    95c1:	89 e5                	mov    %esp,%ebp
    95c3:	53                   	push   %ebx
    95c4:	83 ec 20             	sub    $0x20,%esp
    95c7:	8b 45 08             	mov    0x8(%ebp),%eax
    95ca:	50                   	push   %eax
    95cb:	e8 e0 62 00 00       	call   f8b0 <async_exchange_begin@plt>
    95d0:	83 c4 0c             	add    $0xc,%esp
    95d3:	89 c3                	mov    %eax,%ebx
    95d5:	8b 55 14             	mov    0x14(%ebp),%edx
    95d8:	8b 4d 10             	mov    0x10(%ebp),%ecx
    95db:	8b 45 0c             	mov    0xc(%ebp),%eax
    95de:	6a 00                	push   $0x0
    95e0:	6a 00                	push   $0x0
    95e2:	6a 00                	push   $0x0
    95e4:	6a 00                	push   $0x0
    95e6:	6a 00                	push   $0x0
    95e8:	52                   	push   %edx
    95e9:	51                   	push   %ecx
    95ea:	50                   	push   %eax
    95eb:	6a 0a                	push   $0xa
    95ed:	68 05 04 00 00       	push   $0x405
    95f2:	53                   	push   %ebx
    95f3:	e8 58 60 00 00       	call   f650 <async_req_fast@plt>
    95f8:	83 c4 24             	add    $0x24,%esp
    95fb:	89 45 f4             	mov    %eax,-0xc(%ebp)
    95fe:	53                   	push   %ebx
    95ff:	e8 bc 60 00 00       	call   f6c0 <async_exchange_end@plt>
    9604:	8b 45 f4             	mov    -0xc(%ebp),%eax
    9607:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    960a:	c9                   	leave  
    960b:	c3                   	ret    
    960c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00009610 <nic_autoneg_enable>:
    9610:	55                   	push   %ebp
    9611:	89 e5                	mov    %esp,%ebp
    9613:	53                   	push   %ebx
    9614:	83 ec 20             	sub    $0x20,%esp
    9617:	8b 45 08             	mov    0x8(%ebp),%eax
    961a:	50                   	push   %eax
    961b:	e8 90 62 00 00       	call   f8b0 <async_exchange_begin@plt>
    9620:	83 c4 0c             	add    $0xc,%esp
    9623:	8b 55 0c             	mov    0xc(%ebp),%edx
    9626:	89 c3                	mov    %eax,%ebx
    9628:	6a 00                	push   $0x0
    962a:	6a 00                	push   $0x0
    962c:	6a 00                	push   $0x0
    962e:	6a 00                	push   $0x0
    9630:	6a 00                	push   $0x0
    9632:	6a 00                	push   $0x0
    9634:	6a 00                	push   $0x0
    9636:	52                   	push   %edx
    9637:	6a 0b                	push   $0xb
    9639:	68 05 04 00 00       	push   $0x405
    963e:	50                   	push   %eax
    963f:	e8 0c 60 00 00       	call   f650 <async_req_fast@plt>
    9644:	83 c4 24             	add    $0x24,%esp
    9647:	89 45 f4             	mov    %eax,-0xc(%ebp)
    964a:	53                   	push   %ebx
    964b:	e8 70 60 00 00       	call   f6c0 <async_exchange_end@plt>
    9650:	8b 45 f4             	mov    -0xc(%ebp),%eax
    9653:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    9656:	c9                   	leave  
    9657:	c3                   	ret    
    9658:	90                   	nop
    9659:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00009660 <nic_autoneg_disable>:
    9660:	55                   	push   %ebp
    9661:	89 e5                	mov    %esp,%ebp
    9663:	53                   	push   %ebx
    9664:	83 ec 20             	sub    $0x20,%esp
    9667:	8b 45 08             	mov    0x8(%ebp),%eax
    966a:	50                   	push   %eax
    966b:	e8 40 62 00 00       	call   f8b0 <async_exchange_begin@plt>
    9670:	83 c4 0c             	add    $0xc,%esp
    9673:	89 c3                	mov    %eax,%ebx
    9675:	6a 00                	push   $0x0
    9677:	6a 00                	push   $0x0
    9679:	6a 00                	push   $0x0
    967b:	6a 00                	push   $0x0
    967d:	6a 00                	push   $0x0
    967f:	6a 00                	push   $0x0
    9681:	6a 00                	push   $0x0
    9683:	6a 00                	push   $0x0
    9685:	6a 0c                	push   $0xc
    9687:	68 05 04 00 00       	push   $0x405
    968c:	50                   	push   %eax
    968d:	e8 be 5f 00 00       	call   f650 <async_req_fast@plt>
    9692:	83 c4 24             	add    $0x24,%esp
    9695:	89 45 f4             	mov    %eax,-0xc(%ebp)
    9698:	53                   	push   %ebx
    9699:	e8 22 60 00 00       	call   f6c0 <async_exchange_end@plt>
    969e:	8b 45 f4             	mov    -0xc(%ebp),%eax
    96a1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    96a4:	c9                   	leave  
    96a5:	c3                   	ret    
    96a6:	8d 76 00             	lea    0x0(%esi),%esi
    96a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000096b0 <nic_autoneg_probe>:
    96b0:	55                   	push   %ebp
    96b1:	89 e5                	mov    %esp,%ebp
    96b3:	57                   	push   %edi
    96b4:	56                   	push   %esi
    96b5:	53                   	push   %ebx
    96b6:	83 ec 38             	sub    $0x38,%esp
    96b9:	8b 45 08             	mov    0x8(%ebp),%eax
    96bc:	8b 7d 0c             	mov    0xc(%ebp),%edi
    96bf:	50                   	push   %eax
    96c0:	8b 5d 18             	mov    0x18(%ebp),%ebx
    96c3:	e8 e8 61 00 00       	call   f8b0 <async_exchange_begin@plt>
    96c8:	83 c4 0c             	add    $0xc,%esp
    96cb:	89 c6                	mov    %eax,%esi
    96cd:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    96d0:	6a 00                	push   $0x0
    96d2:	50                   	push   %eax
    96d3:	8d 45 e0             	lea    -0x20(%ebp),%eax
    96d6:	50                   	push   %eax
    96d7:	8d 45 dc             	lea    -0x24(%ebp),%eax
    96da:	50                   	push   %eax
    96db:	8d 45 d8             	lea    -0x28(%ebp),%eax
    96de:	50                   	push   %eax
    96df:	6a 00                	push   $0x0
    96e1:	6a 00                	push   $0x0
    96e3:	6a 00                	push   $0x0
    96e5:	6a 0d                	push   $0xd
    96e7:	68 05 04 00 00       	push   $0x405
    96ec:	56                   	push   %esi
    96ed:	e8 5e 5f 00 00       	call   f650 <async_req_fast@plt>
    96f2:	83 c4 24             	add    $0x24,%esp
    96f5:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    96f8:	56                   	push   %esi
    96f9:	e8 c2 5f 00 00       	call   f6c0 <async_exchange_end@plt>
    96fe:	83 c4 10             	add    $0x10,%esp
    9701:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9704:	85 ff                	test   %edi,%edi
    9706:	74 05                	je     970d <nic_autoneg_probe+0x5d>
    9708:	8b 55 d8             	mov    -0x28(%ebp),%edx
    970b:	89 17                	mov    %edx,(%edi)
    970d:	8b 4d 10             	mov    0x10(%ebp),%ecx
    9710:	8b 31                	mov    (%ecx),%esi
    9712:	85 f6                	test   %esi,%esi
    9714:	74 05                	je     971b <nic_autoneg_probe+0x6b>
    9716:	8b 55 dc             	mov    -0x24(%ebp),%edx
    9719:	89 11                	mov    %edx,(%ecx)
    971b:	8b 55 14             	mov    0x14(%ebp),%edx
    971e:	85 d2                	test   %edx,%edx
    9720:	74 08                	je     972a <nic_autoneg_probe+0x7a>
    9722:	8b 4d 14             	mov    0x14(%ebp),%ecx
    9725:	8b 55 e0             	mov    -0x20(%ebp),%edx
    9728:	89 11                	mov    %edx,(%ecx)
    972a:	85 db                	test   %ebx,%ebx
    972c:	74 05                	je     9733 <nic_autoneg_probe+0x83>
    972e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    9731:	89 13                	mov    %edx,(%ebx)
    9733:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9736:	5b                   	pop    %ebx
    9737:	5e                   	pop    %esi
    9738:	5f                   	pop    %edi
    9739:	5d                   	pop    %ebp
    973a:	c3                   	ret    
    973b:	90                   	nop
    973c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00009740 <nic_autoneg_restart>:
    9740:	55                   	push   %ebp
    9741:	89 e5                	mov    %esp,%ebp
    9743:	53                   	push   %ebx
    9744:	83 ec 20             	sub    $0x20,%esp
    9747:	8b 45 08             	mov    0x8(%ebp),%eax
    974a:	50                   	push   %eax
    974b:	e8 60 61 00 00       	call   f8b0 <async_exchange_begin@plt>
    9750:	83 c4 0c             	add    $0xc,%esp
    9753:	89 c3                	mov    %eax,%ebx
    9755:	6a 00                	push   $0x0
    9757:	6a 00                	push   $0x0
    9759:	6a 00                	push   $0x0
    975b:	6a 00                	push   $0x0
    975d:	6a 00                	push   $0x0
    975f:	6a 00                	push   $0x0
    9761:	6a 00                	push   $0x0
    9763:	6a 00                	push   $0x0
    9765:	6a 0e                	push   $0xe
    9767:	68 05 04 00 00       	push   $0x405
    976c:	50                   	push   %eax
    976d:	e8 de 5e 00 00       	call   f650 <async_req_fast@plt>
    9772:	83 c4 24             	add    $0x24,%esp
    9775:	89 45 f4             	mov    %eax,-0xc(%ebp)
    9778:	53                   	push   %ebx
    9779:	e8 42 5f 00 00       	call   f6c0 <async_exchange_end@plt>
    977e:	8b 45 f4             	mov    -0xc(%ebp),%eax
    9781:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    9784:	c9                   	leave  
    9785:	c3                   	ret    
    9786:	8d 76 00             	lea    0x0(%esi),%esi
    9789:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009790 <nic_get_pause>:
    9790:	55                   	push   %ebp
    9791:	89 e5                	mov    %esp,%ebp
    9793:	57                   	push   %edi
    9794:	56                   	push   %esi
    9795:	53                   	push   %ebx
    9796:	83 ec 38             	sub    $0x38,%esp
    9799:	8b 4d 08             	mov    0x8(%ebp),%ecx
    979c:	8b 7d 0c             	mov    0xc(%ebp),%edi
    979f:	51                   	push   %ecx
    97a0:	8b 5d 14             	mov    0x14(%ebp),%ebx
    97a3:	e8 08 61 00 00       	call   f8b0 <async_exchange_begin@plt>
    97a8:	83 c4 0c             	add    $0xc,%esp
    97ab:	89 c6                	mov    %eax,%esi
    97ad:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    97b0:	6a 00                	push   $0x0
    97b2:	6a 00                	push   $0x0
    97b4:	50                   	push   %eax
    97b5:	8d 45 e0             	lea    -0x20(%ebp),%eax
    97b8:	50                   	push   %eax
    97b9:	8d 45 dc             	lea    -0x24(%ebp),%eax
    97bc:	50                   	push   %eax
    97bd:	6a 00                	push   $0x0
    97bf:	6a 00                	push   $0x0
    97c1:	6a 00                	push   $0x0
    97c3:	6a 0f                	push   $0xf
    97c5:	68 05 04 00 00       	push   $0x405
    97ca:	56                   	push   %esi
    97cb:	e8 80 5e 00 00       	call   f650 <async_req_fast@plt>
    97d0:	83 c4 24             	add    $0x24,%esp
    97d3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    97d6:	56                   	push   %esi
    97d7:	e8 e4 5e 00 00       	call   f6c0 <async_exchange_end@plt>
    97dc:	83 c4 10             	add    $0x10,%esp
    97df:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    97e2:	85 ff                	test   %edi,%edi
    97e4:	74 05                	je     97eb <nic_get_pause+0x5b>
    97e6:	8b 55 dc             	mov    -0x24(%ebp),%edx
    97e9:	89 17                	mov    %edx,(%edi)
    97eb:	8b 55 10             	mov    0x10(%ebp),%edx
    97ee:	85 d2                	test   %edx,%edx
    97f0:	74 08                	je     97fa <nic_get_pause+0x6a>
    97f2:	8b 4d 10             	mov    0x10(%ebp),%ecx
    97f5:	8b 55 e0             	mov    -0x20(%ebp),%edx
    97f8:	89 11                	mov    %edx,(%ecx)
    97fa:	85 db                	test   %ebx,%ebx
    97fc:	74 06                	je     9804 <nic_get_pause+0x74>
    97fe:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    9801:	66 89 13             	mov    %dx,(%ebx)
    9804:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9807:	5b                   	pop    %ebx
    9808:	5e                   	pop    %esi
    9809:	5f                   	pop    %edi
    980a:	5d                   	pop    %ebp
    980b:	c3                   	ret    
    980c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00009810 <nic_set_pause>:
    9810:	55                   	push   %ebp
    9811:	89 e5                	mov    %esp,%ebp
    9813:	56                   	push   %esi
    9814:	53                   	push   %ebx
    9815:	83 ec 1c             	sub    $0x1c,%esp
    9818:	8b 45 08             	mov    0x8(%ebp),%eax
    981b:	8b 5d 14             	mov    0x14(%ebp),%ebx
    981e:	50                   	push   %eax
    981f:	e8 8c 60 00 00       	call   f8b0 <async_exchange_begin@plt>
    9824:	83 c4 0c             	add    $0xc,%esp
    9827:	8b 55 10             	mov    0x10(%ebp),%edx
    982a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    982d:	81 e3 ff ff 00 00    	and    $0xffff,%ebx
    9833:	6a 00                	push   $0x0
    9835:	89 c6                	mov    %eax,%esi
    9837:	6a 00                	push   $0x0
    9839:	6a 00                	push   $0x0
    983b:	6a 00                	push   $0x0
    983d:	6a 00                	push   $0x0
    983f:	53                   	push   %ebx
    9840:	52                   	push   %edx
    9841:	51                   	push   %ecx
    9842:	6a 10                	push   $0x10
    9844:	68 05 04 00 00       	push   $0x405
    9849:	50                   	push   %eax
    984a:	e8 01 5e 00 00       	call   f650 <async_req_fast@plt>
    984f:	83 c4 24             	add    $0x24,%esp
    9852:	89 45 f4             	mov    %eax,-0xc(%ebp)
    9855:	56                   	push   %esi
    9856:	e8 65 5e 00 00       	call   f6c0 <async_exchange_end@plt>
    985b:	8b 45 f4             	mov    -0xc(%ebp),%eax
    985e:	8d 65 f8             	lea    -0x8(%ebp),%esp
    9861:	5b                   	pop    %ebx
    9862:	5e                   	pop    %esi
    9863:	5d                   	pop    %ebp
    9864:	c3                   	ret    
    9865:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9869:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009870 <nic_unicast_get_mode>:
    9870:	55                   	push   %ebp
    9871:	89 e5                	mov    %esp,%ebp
    9873:	57                   	push   %edi
    9874:	56                   	push   %esi
    9875:	53                   	push   %ebx
    9876:	83 ec 2c             	sub    $0x2c,%esp
    9879:	8b 75 0c             	mov    0xc(%ebp),%esi
    987c:	8b 5d 10             	mov    0x10(%ebp),%ebx
    987f:	85 f6                	test   %esi,%esi
    9881:	0f 84 a0 00 00 00    	je     9927 <nic_unicast_get_mode+0xb7>
    9887:	8b 45 14             	mov    0x14(%ebp),%eax
    988a:	85 c0                	test   %eax,%eax
    988c:	0f 84 8e 00 00 00    	je     9920 <nic_unicast_get_mode+0xb0>
    9892:	83 ec 0c             	sub    $0xc,%esp
    9895:	8b 7d 08             	mov    0x8(%ebp),%edi
    9898:	57                   	push   %edi
    9899:	e8 12 60 00 00       	call   f8b0 <async_exchange_begin@plt>
    989e:	83 c4 0c             	add    $0xc,%esp
    98a1:	89 c7                	mov    %eax,%edi
    98a3:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    98a6:	6a 00                	push   $0x0
    98a8:	6a 00                	push   $0x0
    98aa:	6a 00                	push   $0x0
    98ac:	50                   	push   %eax
    98ad:	8d 45 e0             	lea    -0x20(%ebp),%eax
    98b0:	50                   	push   %eax
    98b1:	6a 00                	push   $0x0
    98b3:	6a 00                	push   $0x0
    98b5:	53                   	push   %ebx
    98b6:	6a 11                	push   $0x11
    98b8:	68 05 04 00 00       	push   $0x405
    98bd:	57                   	push   %edi
    98be:	e8 8d 5d 00 00       	call   f650 <async_req_fast@plt>
    98c3:	83 c4 30             	add    $0x30,%esp
    98c6:	85 c0                	test   %eax,%eax
    98c8:	75 1f                	jne    98e9 <nic_unicast_get_mode+0x79>
    98ca:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    98cd:	89 0e                	mov    %ecx,(%esi)
    98cf:	8b 75 18             	mov    0x18(%ebp),%esi
    98d2:	85 f6                	test   %esi,%esi
    98d4:	74 08                	je     98de <nic_unicast_get_mode+0x6e>
    98d6:	8b 55 18             	mov    0x18(%ebp),%edx
    98d9:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    98dc:	89 0a                	mov    %ecx,(%edx)
    98de:	85 db                	test   %ebx,%ebx
    98e0:	74 07                	je     98e9 <nic_unicast_get_mode+0x79>
    98e2:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    98e5:	85 c9                	test   %ecx,%ecx
    98e7:	75 1f                	jne    9908 <nic_unicast_get_mode+0x98>
    98e9:	83 ec 0c             	sub    $0xc,%esp
    98ec:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    98ef:	57                   	push   %edi
    98f0:	e8 cb 5d 00 00       	call   f6c0 <async_exchange_end@plt>
    98f5:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    98f8:	83 c4 10             	add    $0x10,%esp
    98fb:	8d 65 f4             	lea    -0xc(%ebp),%esp
    98fe:	5b                   	pop    %ebx
    98ff:	5e                   	pop    %esi
    9900:	5f                   	pop    %edi
    9901:	5d                   	pop    %ebp
    9902:	c3                   	ret    
    9903:	90                   	nop
    9904:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9908:	50                   	push   %eax
    9909:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    990c:	01 c0                	add    %eax,%eax
    990e:	8b 55 14             	mov    0x14(%ebp),%edx
    9911:	50                   	push   %eax
    9912:	52                   	push   %edx
    9913:	57                   	push   %edi
    9914:	e8 07 5f 00 00       	call   f820 <async_data_read_start@plt>
    9919:	83 c4 10             	add    $0x10,%esp
    991c:	eb cb                	jmp    98e9 <nic_unicast_get_mode+0x79>
    991e:	66 90                	xchg   %ax,%ax
    9920:	31 db                	xor    %ebx,%ebx
    9922:	e9 6b ff ff ff       	jmp    9892 <nic_unicast_get_mode+0x22>
    9927:	50                   	push   %eax
    9928:	68 3b 02 00 00       	push   $0x23b
    992d:	68 a4 ee 00 00       	push   $0xeea4
    9932:	68 49 ef 00 00       	push   $0xef49
    9937:	e8 94 5d 00 00       	call   f6d0 <assert_abort@plt>
    993c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00009940 <nic_unicast_set_mode>:
    9940:	55                   	push   %ebp
    9941:	89 e5                	mov    %esp,%ebp
    9943:	57                   	push   %edi
    9944:	56                   	push   %esi
    9945:	53                   	push   %ebx
    9946:	83 ec 2c             	sub    $0x2c,%esp
    9949:	8b 75 10             	mov    0x10(%ebp),%esi
    994c:	8b 45 08             	mov    0x8(%ebp),%eax
    994f:	8b 5d 14             	mov    0x14(%ebp),%ebx
    9952:	85 f6                	test   %esi,%esi
    9954:	0f 84 96 00 00 00    	je     99f0 <nic_unicast_set_mode+0xb0>
    995a:	83 ec 0c             	sub    $0xc,%esp
    995d:	50                   	push   %eax
    995e:	e8 4d 5f 00 00       	call   f8b0 <async_exchange_begin@plt>
    9963:	83 c4 0c             	add    $0xc,%esp
    9966:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    9969:	89 c7                	mov    %eax,%edi
    996b:	6a 00                	push   $0x0
    996d:	6a 00                	push   $0x0
    996f:	53                   	push   %ebx
    9970:	51                   	push   %ecx
    9971:	6a 12                	push   $0x12
    9973:	68 05 04 00 00       	push   $0x405
    9978:	50                   	push   %eax
    9979:	e8 f2 5c 00 00       	call   f670 <async_send_fast@plt>
    997e:	83 c4 20             	add    $0x20,%esp
    9981:	89 c6                	mov    %eax,%esi
    9983:	85 db                	test   %ebx,%ebx
    9985:	75 29                	jne    99b0 <nic_unicast_set_mode+0x70>
    9987:	83 ec 0c             	sub    $0xc,%esp
    998a:	57                   	push   %edi
    998b:	e8 30 5d 00 00       	call   f6c0 <async_exchange_end@plt>
    9990:	58                   	pop    %eax
    9991:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9994:	5a                   	pop    %edx
    9995:	50                   	push   %eax
    9996:	56                   	push   %esi
    9997:	e8 e4 5b 00 00       	call   f580 <async_wait_for@plt>
    999c:	83 c4 10             	add    $0x10,%esp
    999f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    99a2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    99a5:	5b                   	pop    %ebx
    99a6:	5e                   	pop    %esi
    99a7:	5f                   	pop    %edi
    99a8:	5d                   	pop    %ebp
    99a9:	c3                   	ret    
    99aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    99b0:	50                   	push   %eax
    99b1:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    99b4:	01 c0                	add    %eax,%eax
    99b6:	50                   	push   %eax
    99b7:	8b 45 10             	mov    0x10(%ebp),%eax
    99ba:	50                   	push   %eax
    99bb:	57                   	push   %edi
    99bc:	e8 ff 5b 00 00       	call   f5c0 <async_data_write_start@plt>
    99c1:	89 3c 24             	mov    %edi,(%esp)
    99c4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    99c7:	e8 f4 5c 00 00       	call   f6c0 <async_exchange_end@plt>
    99cc:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    99cf:	58                   	pop    %eax
    99d0:	5a                   	pop    %edx
    99d1:	51                   	push   %ecx
    99d2:	56                   	push   %esi
    99d3:	e8 a8 5b 00 00       	call   f580 <async_wait_for@plt>
    99d8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    99db:	83 c4 10             	add    $0x10,%esp
    99de:	85 c0                	test   %eax,%eax
    99e0:	74 bd                	je     999f <nic_unicast_set_mode+0x5f>
    99e2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    99e5:	5b                   	pop    %ebx
    99e6:	5e                   	pop    %esi
    99e7:	5f                   	pop    %edi
    99e8:	5d                   	pop    %ebp
    99e9:	c3                   	ret    
    99ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    99f0:	83 ec 0c             	sub    $0xc,%esp
    99f3:	50                   	push   %eax
    99f4:	e8 b7 5e 00 00       	call   f8b0 <async_exchange_begin@plt>
    99f9:	83 c4 0c             	add    $0xc,%esp
    99fc:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    99ff:	89 c3                	mov    %eax,%ebx
    9a01:	6a 00                	push   $0x0
    9a03:	6a 00                	push   $0x0
    9a05:	6a 00                	push   $0x0
    9a07:	51                   	push   %ecx
    9a08:	6a 12                	push   $0x12
    9a0a:	68 05 04 00 00       	push   $0x405
    9a0f:	50                   	push   %eax
    9a10:	e8 5b 5c 00 00       	call   f670 <async_send_fast@plt>
    9a15:	83 c4 14             	add    $0x14,%esp
    9a18:	89 c6                	mov    %eax,%esi
    9a1a:	53                   	push   %ebx
    9a1b:	e9 6b ff ff ff       	jmp    998b <nic_unicast_set_mode+0x4b>

00009a20 <nic_multicast_get_mode>:
    9a20:	55                   	push   %ebp
    9a21:	89 e5                	mov    %esp,%ebp
    9a23:	57                   	push   %edi
    9a24:	56                   	push   %esi
    9a25:	53                   	push   %ebx
    9a26:	83 ec 2c             	sub    $0x2c,%esp
    9a29:	8b 75 0c             	mov    0xc(%ebp),%esi
    9a2c:	8b 5d 10             	mov    0x10(%ebp),%ebx
    9a2f:	85 f6                	test   %esi,%esi
    9a31:	0f 84 a0 00 00 00    	je     9ad7 <nic_multicast_get_mode+0xb7>
    9a37:	8b 45 14             	mov    0x14(%ebp),%eax
    9a3a:	85 c0                	test   %eax,%eax
    9a3c:	0f 84 8e 00 00 00    	je     9ad0 <nic_multicast_get_mode+0xb0>
    9a42:	83 ec 0c             	sub    $0xc,%esp
    9a45:	8b 7d 08             	mov    0x8(%ebp),%edi
    9a48:	57                   	push   %edi
    9a49:	e8 62 5e 00 00       	call   f8b0 <async_exchange_begin@plt>
    9a4e:	83 c4 0c             	add    $0xc,%esp
    9a51:	89 c7                	mov    %eax,%edi
    9a53:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9a56:	6a 00                	push   $0x0
    9a58:	6a 00                	push   $0x0
    9a5a:	6a 00                	push   $0x0
    9a5c:	50                   	push   %eax
    9a5d:	8d 45 e0             	lea    -0x20(%ebp),%eax
    9a60:	50                   	push   %eax
    9a61:	6a 00                	push   $0x0
    9a63:	6a 00                	push   $0x0
    9a65:	53                   	push   %ebx
    9a66:	6a 13                	push   $0x13
    9a68:	68 05 04 00 00       	push   $0x405
    9a6d:	57                   	push   %edi
    9a6e:	e8 dd 5b 00 00       	call   f650 <async_req_fast@plt>
    9a73:	83 c4 30             	add    $0x30,%esp
    9a76:	85 c0                	test   %eax,%eax
    9a78:	75 1f                	jne    9a99 <nic_multicast_get_mode+0x79>
    9a7a:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    9a7d:	89 0e                	mov    %ecx,(%esi)
    9a7f:	8b 75 18             	mov    0x18(%ebp),%esi
    9a82:	85 f6                	test   %esi,%esi
    9a84:	74 08                	je     9a8e <nic_multicast_get_mode+0x6e>
    9a86:	8b 55 18             	mov    0x18(%ebp),%edx
    9a89:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    9a8c:	89 0a                	mov    %ecx,(%edx)
    9a8e:	85 db                	test   %ebx,%ebx
    9a90:	74 07                	je     9a99 <nic_multicast_get_mode+0x79>
    9a92:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    9a95:	85 c9                	test   %ecx,%ecx
    9a97:	75 1f                	jne    9ab8 <nic_multicast_get_mode+0x98>
    9a99:	83 ec 0c             	sub    $0xc,%esp
    9a9c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    9a9f:	57                   	push   %edi
    9aa0:	e8 1b 5c 00 00       	call   f6c0 <async_exchange_end@plt>
    9aa5:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9aa8:	83 c4 10             	add    $0x10,%esp
    9aab:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9aae:	5b                   	pop    %ebx
    9aaf:	5e                   	pop    %esi
    9ab0:	5f                   	pop    %edi
    9ab1:	5d                   	pop    %ebp
    9ab2:	c3                   	ret    
    9ab3:	90                   	nop
    9ab4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9ab8:	50                   	push   %eax
    9ab9:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    9abc:	01 c0                	add    %eax,%eax
    9abe:	8b 55 14             	mov    0x14(%ebp),%edx
    9ac1:	50                   	push   %eax
    9ac2:	52                   	push   %edx
    9ac3:	57                   	push   %edi
    9ac4:	e8 57 5d 00 00       	call   f820 <async_data_read_start@plt>
    9ac9:	83 c4 10             	add    $0x10,%esp
    9acc:	eb cb                	jmp    9a99 <nic_multicast_get_mode+0x79>
    9ace:	66 90                	xchg   %ax,%ax
    9ad0:	31 db                	xor    %ebx,%ebx
    9ad2:	e9 6b ff ff ff       	jmp    9a42 <nic_multicast_get_mode+0x22>
    9ad7:	50                   	push   %eax
    9ad8:	68 94 02 00 00       	push   $0x294
    9add:	68 a4 ee 00 00       	push   $0xeea4
    9ae2:	68 49 ef 00 00       	push   $0xef49
    9ae7:	e8 e4 5b 00 00       	call   f6d0 <assert_abort@plt>
    9aec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00009af0 <nic_multicast_set_mode>:
    9af0:	55                   	push   %ebp
    9af1:	89 e5                	mov    %esp,%ebp
    9af3:	57                   	push   %edi
    9af4:	56                   	push   %esi
    9af5:	53                   	push   %ebx
    9af6:	83 ec 2c             	sub    $0x2c,%esp
    9af9:	8b 75 10             	mov    0x10(%ebp),%esi
    9afc:	8b 45 08             	mov    0x8(%ebp),%eax
    9aff:	8b 5d 14             	mov    0x14(%ebp),%ebx
    9b02:	85 f6                	test   %esi,%esi
    9b04:	0f 84 96 00 00 00    	je     9ba0 <nic_multicast_set_mode+0xb0>
    9b0a:	83 ec 0c             	sub    $0xc,%esp
    9b0d:	50                   	push   %eax
    9b0e:	e8 9d 5d 00 00       	call   f8b0 <async_exchange_begin@plt>
    9b13:	83 c4 0c             	add    $0xc,%esp
    9b16:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    9b19:	89 c7                	mov    %eax,%edi
    9b1b:	6a 00                	push   $0x0
    9b1d:	6a 00                	push   $0x0
    9b1f:	53                   	push   %ebx
    9b20:	51                   	push   %ecx
    9b21:	6a 14                	push   $0x14
    9b23:	68 05 04 00 00       	push   $0x405
    9b28:	50                   	push   %eax
    9b29:	e8 42 5b 00 00       	call   f670 <async_send_fast@plt>
    9b2e:	83 c4 20             	add    $0x20,%esp
    9b31:	89 c6                	mov    %eax,%esi
    9b33:	85 db                	test   %ebx,%ebx
    9b35:	75 29                	jne    9b60 <nic_multicast_set_mode+0x70>
    9b37:	83 ec 0c             	sub    $0xc,%esp
    9b3a:	57                   	push   %edi
    9b3b:	e8 80 5b 00 00       	call   f6c0 <async_exchange_end@plt>
    9b40:	58                   	pop    %eax
    9b41:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9b44:	5a                   	pop    %edx
    9b45:	50                   	push   %eax
    9b46:	56                   	push   %esi
    9b47:	e8 34 5a 00 00       	call   f580 <async_wait_for@plt>
    9b4c:	83 c4 10             	add    $0x10,%esp
    9b4f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    9b52:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9b55:	5b                   	pop    %ebx
    9b56:	5e                   	pop    %esi
    9b57:	5f                   	pop    %edi
    9b58:	5d                   	pop    %ebp
    9b59:	c3                   	ret    
    9b5a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9b60:	50                   	push   %eax
    9b61:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    9b64:	01 c0                	add    %eax,%eax
    9b66:	50                   	push   %eax
    9b67:	8b 45 10             	mov    0x10(%ebp),%eax
    9b6a:	50                   	push   %eax
    9b6b:	57                   	push   %edi
    9b6c:	e8 4f 5a 00 00       	call   f5c0 <async_data_write_start@plt>
    9b71:	89 3c 24             	mov    %edi,(%esp)
    9b74:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    9b77:	e8 44 5b 00 00       	call   f6c0 <async_exchange_end@plt>
    9b7c:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    9b7f:	58                   	pop    %eax
    9b80:	5a                   	pop    %edx
    9b81:	51                   	push   %ecx
    9b82:	56                   	push   %esi
    9b83:	e8 f8 59 00 00       	call   f580 <async_wait_for@plt>
    9b88:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9b8b:	83 c4 10             	add    $0x10,%esp
    9b8e:	85 c0                	test   %eax,%eax
    9b90:	74 bd                	je     9b4f <nic_multicast_set_mode+0x5f>
    9b92:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9b95:	5b                   	pop    %ebx
    9b96:	5e                   	pop    %esi
    9b97:	5f                   	pop    %edi
    9b98:	5d                   	pop    %ebp
    9b99:	c3                   	ret    
    9b9a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9ba0:	83 ec 0c             	sub    $0xc,%esp
    9ba3:	50                   	push   %eax
    9ba4:	e8 07 5d 00 00       	call   f8b0 <async_exchange_begin@plt>
    9ba9:	83 c4 0c             	add    $0xc,%esp
    9bac:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    9baf:	89 c3                	mov    %eax,%ebx
    9bb1:	6a 00                	push   $0x0
    9bb3:	6a 00                	push   $0x0
    9bb5:	6a 00                	push   $0x0
    9bb7:	51                   	push   %ecx
    9bb8:	6a 14                	push   $0x14
    9bba:	68 05 04 00 00       	push   $0x405
    9bbf:	50                   	push   %eax
    9bc0:	e8 ab 5a 00 00       	call   f670 <async_send_fast@plt>
    9bc5:	83 c4 14             	add    $0x14,%esp
    9bc8:	89 c6                	mov    %eax,%esi
    9bca:	53                   	push   %ebx
    9bcb:	e9 6b ff ff ff       	jmp    9b3b <nic_multicast_set_mode+0x4b>

00009bd0 <nic_broadcast_get_mode>:
    9bd0:	55                   	push   %ebp
    9bd1:	89 e5                	mov    %esp,%ebp
    9bd3:	56                   	push   %esi
    9bd4:	53                   	push   %ebx
    9bd5:	83 ec 20             	sub    $0x20,%esp
    9bd8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    9bdb:	85 db                	test   %ebx,%ebx
    9bdd:	74 4b                	je     9c2a <nic_broadcast_get_mode+0x5a>
    9bdf:	83 ec 0c             	sub    $0xc,%esp
    9be2:	8b 45 08             	mov    0x8(%ebp),%eax
    9be5:	50                   	push   %eax
    9be6:	e8 c5 5c 00 00       	call   f8b0 <async_exchange_begin@plt>
    9beb:	83 c4 0c             	add    $0xc,%esp
    9bee:	89 c6                	mov    %eax,%esi
    9bf0:	8d 45 f4             	lea    -0xc(%ebp),%eax
    9bf3:	6a 00                	push   $0x0
    9bf5:	6a 00                	push   $0x0
    9bf7:	6a 00                	push   $0x0
    9bf9:	6a 00                	push   $0x0
    9bfb:	50                   	push   %eax
    9bfc:	6a 00                	push   $0x0
    9bfe:	6a 00                	push   $0x0
    9c00:	6a 00                	push   $0x0
    9c02:	6a 15                	push   $0x15
    9c04:	68 05 04 00 00       	push   $0x405
    9c09:	56                   	push   %esi
    9c0a:	e8 41 5a 00 00       	call   f650 <async_req_fast@plt>
    9c0f:	83 c4 24             	add    $0x24,%esp
    9c12:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    9c15:	56                   	push   %esi
    9c16:	e8 a5 5a 00 00       	call   f6c0 <async_exchange_end@plt>
    9c1b:	8b 55 f4             	mov    -0xc(%ebp),%edx
    9c1e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    9c21:	89 13                	mov    %edx,(%ebx)
    9c23:	8d 65 f8             	lea    -0x8(%ebp),%esp
    9c26:	5b                   	pop    %ebx
    9c27:	5e                   	pop    %esi
    9c28:	5d                   	pop    %ebp
    9c29:	c3                   	ret    
    9c2a:	52                   	push   %edx
    9c2b:	68 e2 02 00 00       	push   $0x2e2
    9c30:	68 a4 ee 00 00       	push   $0xeea4
    9c35:	68 49 ef 00 00       	push   $0xef49
    9c3a:	e8 91 5a 00 00       	call   f6d0 <assert_abort@plt>
    9c3f:	90                   	nop

00009c40 <nic_broadcast_set_mode>:
    9c40:	55                   	push   %ebp
    9c41:	89 e5                	mov    %esp,%ebp
    9c43:	53                   	push   %ebx
    9c44:	83 ec 20             	sub    $0x20,%esp
    9c47:	8b 45 08             	mov    0x8(%ebp),%eax
    9c4a:	50                   	push   %eax
    9c4b:	e8 60 5c 00 00       	call   f8b0 <async_exchange_begin@plt>
    9c50:	83 c4 0c             	add    $0xc,%esp
    9c53:	8b 55 0c             	mov    0xc(%ebp),%edx
    9c56:	89 c3                	mov    %eax,%ebx
    9c58:	6a 00                	push   $0x0
    9c5a:	6a 00                	push   $0x0
    9c5c:	6a 00                	push   $0x0
    9c5e:	6a 00                	push   $0x0
    9c60:	6a 00                	push   $0x0
    9c62:	6a 00                	push   $0x0
    9c64:	6a 00                	push   $0x0
    9c66:	52                   	push   %edx
    9c67:	6a 16                	push   $0x16
    9c69:	68 05 04 00 00       	push   $0x405
    9c6e:	50                   	push   %eax
    9c6f:	e8 dc 59 00 00       	call   f650 <async_req_fast@plt>
    9c74:	83 c4 24             	add    $0x24,%esp
    9c77:	89 45 f4             	mov    %eax,-0xc(%ebp)
    9c7a:	53                   	push   %ebx
    9c7b:	e8 40 5a 00 00       	call   f6c0 <async_exchange_end@plt>
    9c80:	8b 45 f4             	mov    -0xc(%ebp),%eax
    9c83:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    9c86:	c9                   	leave  
    9c87:	c3                   	ret    
    9c88:	90                   	nop
    9c89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00009c90 <nic_defective_get_mode>:
    9c90:	55                   	push   %ebp
    9c91:	89 e5                	mov    %esp,%ebp
    9c93:	56                   	push   %esi
    9c94:	53                   	push   %ebx
    9c95:	83 ec 20             	sub    $0x20,%esp
    9c98:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    9c9b:	85 db                	test   %ebx,%ebx
    9c9d:	74 4b                	je     9cea <nic_defective_get_mode+0x5a>
    9c9f:	83 ec 0c             	sub    $0xc,%esp
    9ca2:	8b 45 08             	mov    0x8(%ebp),%eax
    9ca5:	50                   	push   %eax
    9ca6:	e8 05 5c 00 00       	call   f8b0 <async_exchange_begin@plt>
    9cab:	83 c4 0c             	add    $0xc,%esp
    9cae:	89 c6                	mov    %eax,%esi
    9cb0:	8d 45 f4             	lea    -0xc(%ebp),%eax
    9cb3:	6a 00                	push   $0x0
    9cb5:	6a 00                	push   $0x0
    9cb7:	6a 00                	push   $0x0
    9cb9:	6a 00                	push   $0x0
    9cbb:	50                   	push   %eax
    9cbc:	6a 00                	push   $0x0
    9cbe:	6a 00                	push   $0x0
    9cc0:	6a 00                	push   $0x0
    9cc2:	6a 17                	push   $0x17
    9cc4:	68 05 04 00 00       	push   $0x405
    9cc9:	56                   	push   %esi
    9cca:	e8 81 59 00 00       	call   f650 <async_req_fast@plt>
    9ccf:	83 c4 24             	add    $0x24,%esp
    9cd2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    9cd5:	56                   	push   %esi
    9cd6:	e8 e5 59 00 00       	call   f6c0 <async_exchange_end@plt>
    9cdb:	8b 55 f4             	mov    -0xc(%ebp),%edx
    9cde:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    9ce1:	89 13                	mov    %edx,(%ebx)
    9ce3:	8d 65 f8             	lea    -0x8(%ebp),%esp
    9ce6:	5b                   	pop    %ebx
    9ce7:	5e                   	pop    %esi
    9ce8:	5d                   	pop    %ebp
    9ce9:	c3                   	ret    
    9cea:	52                   	push   %edx
    9ceb:	68 0c 03 00 00       	push   $0x30c
    9cf0:	68 a4 ee 00 00       	push   $0xeea4
    9cf5:	68 49 ef 00 00       	push   $0xef49
    9cfa:	e8 d1 59 00 00       	call   f6d0 <assert_abort@plt>
    9cff:	90                   	nop

00009d00 <nic_defective_set_mode>:
    9d00:	55                   	push   %ebp
    9d01:	89 e5                	mov    %esp,%ebp
    9d03:	53                   	push   %ebx
    9d04:	83 ec 20             	sub    $0x20,%esp
    9d07:	8b 45 08             	mov    0x8(%ebp),%eax
    9d0a:	50                   	push   %eax
    9d0b:	e8 a0 5b 00 00       	call   f8b0 <async_exchange_begin@plt>
    9d10:	83 c4 0c             	add    $0xc,%esp
    9d13:	8b 55 0c             	mov    0xc(%ebp),%edx
    9d16:	89 c3                	mov    %eax,%ebx
    9d18:	6a 00                	push   $0x0
    9d1a:	6a 00                	push   $0x0
    9d1c:	6a 00                	push   $0x0
    9d1e:	6a 00                	push   $0x0
    9d20:	6a 00                	push   $0x0
    9d22:	6a 00                	push   $0x0
    9d24:	6a 00                	push   $0x0
    9d26:	52                   	push   %edx
    9d27:	6a 18                	push   $0x18
    9d29:	68 05 04 00 00       	push   $0x405
    9d2e:	50                   	push   %eax
    9d2f:	e8 1c 59 00 00       	call   f650 <async_req_fast@plt>
    9d34:	83 c4 24             	add    $0x24,%esp
    9d37:	89 45 f4             	mov    %eax,-0xc(%ebp)
    9d3a:	53                   	push   %ebx
    9d3b:	e8 80 59 00 00       	call   f6c0 <async_exchange_end@plt>
    9d40:	8b 45 f4             	mov    -0xc(%ebp),%eax
    9d43:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    9d46:	c9                   	leave  
    9d47:	c3                   	ret    
    9d48:	90                   	nop
    9d49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00009d50 <nic_blocked_sources_get>:
    9d50:	55                   	push   %ebp
    9d51:	89 e5                	mov    %esp,%ebp
    9d53:	57                   	push   %edi
    9d54:	56                   	push   %esi
    9d55:	53                   	push   %ebx
    9d56:	83 ec 2c             	sub    $0x2c,%esp
    9d59:	8b 45 10             	mov    0x10(%ebp),%eax
    9d5c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    9d5f:	8b 75 14             	mov    0x14(%ebp),%esi
    9d62:	85 c0                	test   %eax,%eax
    9d64:	0f 84 7e 00 00 00    	je     9de8 <nic_blocked_sources_get+0x98>
    9d6a:	83 ec 0c             	sub    $0xc,%esp
    9d6d:	8b 7d 08             	mov    0x8(%ebp),%edi
    9d70:	57                   	push   %edi
    9d71:	e8 3a 5b 00 00       	call   f8b0 <async_exchange_begin@plt>
    9d76:	83 c4 0c             	add    $0xc,%esp
    9d79:	89 c7                	mov    %eax,%edi
    9d7b:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9d7e:	6a 00                	push   $0x0
    9d80:	6a 00                	push   $0x0
    9d82:	6a 00                	push   $0x0
    9d84:	6a 00                	push   $0x0
    9d86:	50                   	push   %eax
    9d87:	6a 00                	push   $0x0
    9d89:	6a 00                	push   $0x0
    9d8b:	53                   	push   %ebx
    9d8c:	6a 19                	push   $0x19
    9d8e:	68 05 04 00 00       	push   $0x405
    9d93:	57                   	push   %edi
    9d94:	e8 b7 58 00 00       	call   f650 <async_req_fast@plt>
    9d99:	83 c4 30             	add    $0x30,%esp
    9d9c:	85 c0                	test   %eax,%eax
    9d9e:	75 14                	jne    9db4 <nic_blocked_sources_get+0x64>
    9da0:	85 f6                	test   %esi,%esi
    9da2:	74 05                	je     9da9 <nic_blocked_sources_get+0x59>
    9da4:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    9da7:	89 0e                	mov    %ecx,(%esi)
    9da9:	85 db                	test   %ebx,%ebx
    9dab:	74 07                	je     9db4 <nic_blocked_sources_get+0x64>
    9dad:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    9db0:	85 c9                	test   %ecx,%ecx
    9db2:	75 1c                	jne    9dd0 <nic_blocked_sources_get+0x80>
    9db4:	83 ec 0c             	sub    $0xc,%esp
    9db7:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    9dba:	57                   	push   %edi
    9dbb:	e8 00 59 00 00       	call   f6c0 <async_exchange_end@plt>
    9dc0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9dc3:	83 c4 10             	add    $0x10,%esp
    9dc6:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9dc9:	5b                   	pop    %ebx
    9dca:	5e                   	pop    %esi
    9dcb:	5f                   	pop    %edi
    9dcc:	5d                   	pop    %ebp
    9dcd:	c3                   	ret    
    9dce:	66 90                	xchg   %ax,%ax
    9dd0:	50                   	push   %eax
    9dd1:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    9dd4:	01 c0                	add    %eax,%eax
    9dd6:	8b 55 10             	mov    0x10(%ebp),%edx
    9dd9:	50                   	push   %eax
    9dda:	52                   	push   %edx
    9ddb:	57                   	push   %edi
    9ddc:	e8 3f 5a 00 00       	call   f820 <async_data_read_start@plt>
    9de1:	83 c4 10             	add    $0x10,%esp
    9de4:	eb ce                	jmp    9db4 <nic_blocked_sources_get+0x64>
    9de6:	66 90                	xchg   %ax,%ax
    9de8:	31 db                	xor    %ebx,%ebx
    9dea:	e9 7b ff ff ff       	jmp    9d6a <nic_blocked_sources_get+0x1a>
    9def:	90                   	nop

00009df0 <nic_blocked_sources_set>:
    9df0:	55                   	push   %ebp
    9df1:	89 e5                	mov    %esp,%ebp
    9df3:	57                   	push   %edi
    9df4:	56                   	push   %esi
    9df5:	53                   	push   %ebx
    9df6:	83 ec 2c             	sub    $0x2c,%esp
    9df9:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    9dfc:	8b 45 08             	mov    0x8(%ebp),%eax
    9dff:	8b 5d 10             	mov    0x10(%ebp),%ebx
    9e02:	85 c9                	test   %ecx,%ecx
    9e04:	0f 84 8e 00 00 00    	je     9e98 <nic_blocked_sources_set+0xa8>
    9e0a:	83 ec 0c             	sub    $0xc,%esp
    9e0d:	50                   	push   %eax
    9e0e:	e8 9d 5a 00 00       	call   f8b0 <async_exchange_begin@plt>
    9e13:	83 c4 0c             	add    $0xc,%esp
    9e16:	89 c6                	mov    %eax,%esi
    9e18:	6a 00                	push   $0x0
    9e1a:	6a 00                	push   $0x0
    9e1c:	6a 00                	push   $0x0
    9e1e:	53                   	push   %ebx
    9e1f:	6a 1a                	push   $0x1a
    9e21:	68 05 04 00 00       	push   $0x405
    9e26:	50                   	push   %eax
    9e27:	e8 44 58 00 00       	call   f670 <async_send_fast@plt>
    9e2c:	83 c4 20             	add    $0x20,%esp
    9e2f:	89 c7                	mov    %eax,%edi
    9e31:	85 db                	test   %ebx,%ebx
    9e33:	75 23                	jne    9e58 <nic_blocked_sources_set+0x68>
    9e35:	83 ec 0c             	sub    $0xc,%esp
    9e38:	56                   	push   %esi
    9e39:	e8 82 58 00 00       	call   f6c0 <async_exchange_end@plt>
    9e3e:	58                   	pop    %eax
    9e3f:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9e42:	5a                   	pop    %edx
    9e43:	50                   	push   %eax
    9e44:	57                   	push   %edi
    9e45:	e8 36 57 00 00       	call   f580 <async_wait_for@plt>
    9e4a:	83 c4 10             	add    $0x10,%esp
    9e4d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    9e50:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9e53:	5b                   	pop    %ebx
    9e54:	5e                   	pop    %esi
    9e55:	5f                   	pop    %edi
    9e56:	5d                   	pop    %ebp
    9e57:	c3                   	ret    
    9e58:	50                   	push   %eax
    9e59:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    9e5c:	01 c0                	add    %eax,%eax
    9e5e:	50                   	push   %eax
    9e5f:	8b 45 0c             	mov    0xc(%ebp),%eax
    9e62:	50                   	push   %eax
    9e63:	56                   	push   %esi
    9e64:	e8 57 57 00 00       	call   f5c0 <async_data_write_start@plt>
    9e69:	89 34 24             	mov    %esi,(%esp)
    9e6c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    9e6f:	e8 4c 58 00 00       	call   f6c0 <async_exchange_end@plt>
    9e74:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    9e77:	58                   	pop    %eax
    9e78:	5a                   	pop    %edx
    9e79:	51                   	push   %ecx
    9e7a:	57                   	push   %edi
    9e7b:	e8 00 57 00 00       	call   f580 <async_wait_for@plt>
    9e80:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9e83:	83 c4 10             	add    $0x10,%esp
    9e86:	85 c0                	test   %eax,%eax
    9e88:	74 c3                	je     9e4d <nic_blocked_sources_set+0x5d>
    9e8a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9e8d:	5b                   	pop    %ebx
    9e8e:	5e                   	pop    %esi
    9e8f:	5f                   	pop    %edi
    9e90:	5d                   	pop    %ebp
    9e91:	c3                   	ret    
    9e92:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9e98:	83 ec 0c             	sub    $0xc,%esp
    9e9b:	50                   	push   %eax
    9e9c:	e8 0f 5a 00 00       	call   f8b0 <async_exchange_begin@plt>
    9ea1:	83 c4 0c             	add    $0xc,%esp
    9ea4:	89 c3                	mov    %eax,%ebx
    9ea6:	6a 00                	push   $0x0
    9ea8:	6a 00                	push   $0x0
    9eaa:	6a 00                	push   $0x0
    9eac:	6a 00                	push   $0x0
    9eae:	6a 1a                	push   $0x1a
    9eb0:	68 05 04 00 00       	push   $0x405
    9eb5:	50                   	push   %eax
    9eb6:	e8 b5 57 00 00       	call   f670 <async_send_fast@plt>
    9ebb:	83 c4 14             	add    $0x14,%esp
    9ebe:	89 c6                	mov    %eax,%esi
    9ec0:	53                   	push   %ebx
    9ec1:	e8 fa 57 00 00       	call   f6c0 <async_exchange_end@plt>
    9ec6:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9ec9:	59                   	pop    %ecx
    9eca:	5b                   	pop    %ebx
    9ecb:	50                   	push   %eax
    9ecc:	56                   	push   %esi
    9ecd:	e8 ae 56 00 00       	call   f580 <async_wait_for@plt>
    9ed2:	83 c4 10             	add    $0x10,%esp
    9ed5:	e9 73 ff ff ff       	jmp    9e4d <nic_blocked_sources_set+0x5d>
    9eda:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00009ee0 <nic_vlan_get_mask>:
    9ee0:	55                   	push   %ebp
    9ee1:	89 e5                	mov    %esp,%ebp
    9ee3:	56                   	push   %esi
    9ee4:	53                   	push   %ebx
    9ee5:	83 ec 10             	sub    $0x10,%esp
    9ee8:	8b 75 0c             	mov    0xc(%ebp),%esi
    9eeb:	85 f6                	test   %esi,%esi
    9eed:	74 7a                	je     9f69 <nic_vlan_get_mask+0x89>
    9eef:	83 ec 0c             	sub    $0xc,%esp
    9ef2:	8b 55 08             	mov    0x8(%ebp),%edx
    9ef5:	52                   	push   %edx
    9ef6:	e8 b5 59 00 00       	call   f8b0 <async_exchange_begin@plt>
    9efb:	83 c4 0c             	add    $0xc,%esp
    9efe:	89 c3                	mov    %eax,%ebx
    9f00:	6a 00                	push   $0x0
    9f02:	6a 00                	push   $0x0
    9f04:	6a 00                	push   $0x0
    9f06:	6a 00                	push   $0x0
    9f08:	6a 00                	push   $0x0
    9f0a:	6a 00                	push   $0x0
    9f0c:	6a 00                	push   $0x0
    9f0e:	6a 00                	push   $0x0
    9f10:	6a 1b                	push   $0x1b
    9f12:	68 05 04 00 00       	push   $0x405
    9f17:	50                   	push   %eax
    9f18:	e8 33 57 00 00       	call   f650 <async_req_fast@plt>
    9f1d:	83 c4 30             	add    $0x30,%esp
    9f20:	85 c0                	test   %eax,%eax
    9f22:	75 2c                	jne    9f50 <nic_vlan_get_mask+0x70>
    9f24:	50                   	push   %eax
    9f25:	68 00 02 00 00       	push   $0x200
    9f2a:	56                   	push   %esi
    9f2b:	53                   	push   %ebx
    9f2c:	e8 ef 58 00 00       	call   f820 <async_data_read_start@plt>
    9f31:	89 1c 24             	mov    %ebx,(%esp)
    9f34:	89 45 f4             	mov    %eax,-0xc(%ebp)
    9f37:	e8 84 57 00 00       	call   f6c0 <async_exchange_end@plt>
    9f3c:	8b 45 f4             	mov    -0xc(%ebp),%eax
    9f3f:	83 c4 10             	add    $0x10,%esp
    9f42:	8d 65 f8             	lea    -0x8(%ebp),%esp
    9f45:	5b                   	pop    %ebx
    9f46:	5e                   	pop    %esi
    9f47:	5d                   	pop    %ebp
    9f48:	c3                   	ret    
    9f49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    9f50:	83 ec 0c             	sub    $0xc,%esp
    9f53:	89 45 f4             	mov    %eax,-0xc(%ebp)
    9f56:	53                   	push   %ebx
    9f57:	e8 64 57 00 00       	call   f6c0 <async_exchange_end@plt>
    9f5c:	8b 45 f4             	mov    -0xc(%ebp),%eax
    9f5f:	83 c4 10             	add    $0x10,%esp
    9f62:	8d 65 f8             	lea    -0x8(%ebp),%esp
    9f65:	5b                   	pop    %ebx
    9f66:	5e                   	pop    %esi
    9f67:	5d                   	pop    %ebp
    9f68:	c3                   	ret    
    9f69:	51                   	push   %ecx
    9f6a:	68 83 03 00 00       	push   $0x383
    9f6f:	68 a4 ee 00 00       	push   $0xeea4
    9f74:	68 4e ef 00 00       	push   $0xef4e
    9f79:	e8 52 57 00 00       	call   f6d0 <assert_abort@plt>
    9f7e:	66 90                	xchg   %ax,%ax

00009f80 <nic_vlan_set_mask>:
    9f80:	55                   	push   %ebp
    9f81:	89 e5                	mov    %esp,%ebp
    9f83:	57                   	push   %edi
    9f84:	56                   	push   %esi
    9f85:	53                   	push   %ebx
    9f86:	83 ec 38             	sub    $0x38,%esp
    9f89:	8b 7d 08             	mov    0x8(%ebp),%edi
    9f8c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    9f8f:	57                   	push   %edi
    9f90:	e8 1b 59 00 00       	call   f8b0 <async_exchange_begin@plt>
    9f95:	83 c4 0c             	add    $0xc,%esp
    9f98:	89 c6                	mov    %eax,%esi
    9f9a:	31 c0                	xor    %eax,%eax
    9f9c:	85 db                	test   %ebx,%ebx
    9f9e:	0f 95 c0             	setne  %al
    9fa1:	6a 00                	push   $0x0
    9fa3:	6a 00                	push   $0x0
    9fa5:	6a 00                	push   $0x0
    9fa7:	50                   	push   %eax
    9fa8:	6a 1c                	push   $0x1c
    9faa:	68 05 04 00 00       	push   $0x405
    9faf:	56                   	push   %esi
    9fb0:	e8 bb 56 00 00       	call   f670 <async_send_fast@plt>
    9fb5:	83 c4 20             	add    $0x20,%esp
    9fb8:	89 c7                	mov    %eax,%edi
    9fba:	85 db                	test   %ebx,%ebx
    9fbc:	74 3a                	je     9ff8 <nic_vlan_set_mask+0x78>
    9fbe:	51                   	push   %ecx
    9fbf:	68 00 02 00 00       	push   $0x200
    9fc4:	53                   	push   %ebx
    9fc5:	56                   	push   %esi
    9fc6:	e8 f5 55 00 00       	call   f5c0 <async_data_write_start@plt>
    9fcb:	89 34 24             	mov    %esi,(%esp)
    9fce:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    9fd1:	e8 ea 56 00 00       	call   f6c0 <async_exchange_end@plt>
    9fd6:	8d 55 e4             	lea    -0x1c(%ebp),%edx
    9fd9:	5b                   	pop    %ebx
    9fda:	5e                   	pop    %esi
    9fdb:	52                   	push   %edx
    9fdc:	57                   	push   %edi
    9fdd:	e8 9e 55 00 00       	call   f580 <async_wait_for@plt>
    9fe2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9fe5:	83 c4 10             	add    $0x10,%esp
    9fe8:	85 c0                	test   %eax,%eax
    9fea:	74 24                	je     a010 <nic_vlan_set_mask+0x90>
    9fec:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9fef:	5b                   	pop    %ebx
    9ff0:	5e                   	pop    %esi
    9ff1:	5f                   	pop    %edi
    9ff2:	5d                   	pop    %ebp
    9ff3:	c3                   	ret    
    9ff4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9ff8:	83 ec 0c             	sub    $0xc,%esp
    9ffb:	56                   	push   %esi
    9ffc:	e8 bf 56 00 00       	call   f6c0 <async_exchange_end@plt>
    a001:	58                   	pop    %eax
    a002:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    a005:	5a                   	pop    %edx
    a006:	50                   	push   %eax
    a007:	57                   	push   %edi
    a008:	e8 73 55 00 00       	call   f580 <async_wait_for@plt>
    a00d:	83 c4 10             	add    $0x10,%esp
    a010:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    a013:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a016:	5b                   	pop    %ebx
    a017:	5e                   	pop    %esi
    a018:	5f                   	pop    %edi
    a019:	5d                   	pop    %ebp
    a01a:	c3                   	ret    
    a01b:	90                   	nop
    a01c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000a020 <nic_vlan_set_tag>:
    a020:	55                   	push   %ebp
    a021:	89 e5                	mov    %esp,%ebp
    a023:	57                   	push   %edi
    a024:	56                   	push   %esi
    a025:	53                   	push   %ebx
    a026:	83 ec 28             	sub    $0x28,%esp
    a029:	8b 55 14             	mov    0x14(%ebp),%edx
    a02c:	8b 45 08             	mov    0x8(%ebp),%eax
    a02f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    a032:	8b 75 10             	mov    0x10(%ebp),%esi
    a035:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    a038:	50                   	push   %eax
    a039:	e8 72 58 00 00       	call   f8b0 <async_exchange_begin@plt>
    a03e:	83 c4 0c             	add    $0xc,%esp
    a041:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    a044:	81 e6 ff 00 00 00    	and    $0xff,%esi
    a04a:	81 e2 ff 00 00 00    	and    $0xff,%edx
    a050:	81 e3 ff ff 00 00    	and    $0xffff,%ebx
    a056:	6a 00                	push   $0x0
    a058:	89 c7                	mov    %eax,%edi
    a05a:	6a 00                	push   $0x0
    a05c:	6a 00                	push   $0x0
    a05e:	6a 00                	push   $0x0
    a060:	6a 00                	push   $0x0
    a062:	52                   	push   %edx
    a063:	56                   	push   %esi
    a064:	53                   	push   %ebx
    a065:	6a 1d                	push   $0x1d
    a067:	68 05 04 00 00       	push   $0x405
    a06c:	50                   	push   %eax
    a06d:	e8 de 55 00 00       	call   f650 <async_req_fast@plt>
    a072:	83 c4 24             	add    $0x24,%esp
    a075:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    a078:	57                   	push   %edi
    a079:	e8 42 56 00 00       	call   f6c0 <async_exchange_end@plt>
    a07e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    a081:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a084:	5b                   	pop    %ebx
    a085:	5e                   	pop    %esi
    a086:	5f                   	pop    %edi
    a087:	5d                   	pop    %ebp
    a088:	c3                   	ret    
    a089:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000a090 <nic_wol_virtue_add>:
    a090:	55                   	push   %ebp
    a091:	89 e5                	mov    %esp,%ebp
    a093:	57                   	push   %edi
    a094:	56                   	push   %esi
    a095:	53                   	push   %ebx
    a096:	83 ec 4c             	sub    $0x4c,%esp
    a099:	8b 5d 18             	mov    0x18(%ebp),%ebx
    a09c:	85 db                	test   %ebx,%ebx
    a09e:	0f 84 b0 00 00 00    	je     a154 <nic_wol_virtue_add+0xc4>
    a0a4:	8b 45 10             	mov    0x10(%ebp),%eax
    a0a7:	85 c0                	test   %eax,%eax
    a0a9:	8b 45 14             	mov    0x14(%ebp),%eax
    a0ac:	0f 95 c3             	setne  %bl
    a0af:	85 c0                	test   %eax,%eax
    a0b1:	0f 95 c0             	setne  %al
    a0b4:	83 ec 0c             	sub    $0xc,%esp
    a0b7:	21 c3                	and    %eax,%ebx
    a0b9:	8b 45 08             	mov    0x8(%ebp),%eax
    a0bc:	50                   	push   %eax
    a0bd:	e8 ee 57 00 00       	call   f8b0 <async_exchange_begin@plt>
    a0c2:	83 c4 0c             	add    $0xc,%esp
    a0c5:	89 c6                	mov    %eax,%esi
    a0c7:	8d 45 c4             	lea    -0x3c(%ebp),%eax
    a0ca:	8b 55 0c             	mov    0xc(%ebp),%edx
    a0cd:	50                   	push   %eax
    a0ce:	31 c0                	xor    %eax,%eax
    a0d0:	88 d8                	mov    %bl,%al
    a0d2:	6a 00                	push   $0x0
    a0d4:	50                   	push   %eax
    a0d5:	52                   	push   %edx
    a0d6:	6a 1e                	push   $0x1e
    a0d8:	68 05 04 00 00       	push   $0x405
    a0dd:	56                   	push   %esi
    a0de:	e8 8d 55 00 00       	call   f670 <async_send_fast@plt>
    a0e3:	83 c4 20             	add    $0x20,%esp
    a0e6:	89 c7                	mov    %eax,%edi
    a0e8:	84 db                	test   %bl,%bl
    a0ea:	75 2c                	jne    a118 <nic_wol_virtue_add+0x88>
    a0ec:	83 ec 0c             	sub    $0xc,%esp
    a0ef:	56                   	push   %esi
    a0f0:	e8 cb 55 00 00       	call   f6c0 <async_exchange_end@plt>
    a0f5:	58                   	pop    %eax
    a0f6:	8d 45 c0             	lea    -0x40(%ebp),%eax
    a0f9:	5a                   	pop    %edx
    a0fa:	50                   	push   %eax
    a0fb:	57                   	push   %edi
    a0fc:	e8 7f 54 00 00       	call   f580 <async_wait_for@plt>
    a101:	8b 4d 18             	mov    0x18(%ebp),%ecx
    a104:	8b 45 c8             	mov    -0x38(%ebp),%eax
    a107:	83 c4 10             	add    $0x10,%esp
    a10a:	89 01                	mov    %eax,(%ecx)
    a10c:	8b 45 c0             	mov    -0x40(%ebp),%eax
    a10f:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a112:	5b                   	pop    %ebx
    a113:	5e                   	pop    %esi
    a114:	5f                   	pop    %edi
    a115:	5d                   	pop    %ebp
    a116:	c3                   	ret    
    a117:	90                   	nop
    a118:	50                   	push   %eax
    a119:	8b 45 14             	mov    0x14(%ebp),%eax
    a11c:	50                   	push   %eax
    a11d:	8b 45 10             	mov    0x10(%ebp),%eax
    a120:	50                   	push   %eax
    a121:	56                   	push   %esi
    a122:	e8 99 54 00 00       	call   f5c0 <async_data_write_start@plt>
    a127:	83 c4 10             	add    $0x10,%esp
    a12a:	85 c0                	test   %eax,%eax
    a12c:	74 be                	je     a0ec <nic_wol_virtue_add+0x5c>
    a12e:	83 ec 0c             	sub    $0xc,%esp
    a131:	89 45 b4             	mov    %eax,-0x4c(%ebp)
    a134:	56                   	push   %esi
    a135:	e8 86 55 00 00       	call   f6c0 <async_exchange_end@plt>
    a13a:	8d 55 c0             	lea    -0x40(%ebp),%edx
    a13d:	59                   	pop    %ecx
    a13e:	5b                   	pop    %ebx
    a13f:	52                   	push   %edx
    a140:	57                   	push   %edi
    a141:	e8 3a 54 00 00       	call   f580 <async_wait_for@plt>
    a146:	8b 45 b4             	mov    -0x4c(%ebp),%eax
    a149:	83 c4 10             	add    $0x10,%esp
    a14c:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a14f:	5b                   	pop    %ebx
    a150:	5e                   	pop    %esi
    a151:	5f                   	pop    %edi
    a152:	5d                   	pop    %ebp
    a153:	c3                   	ret    
    a154:	51                   	push   %ecx
    a155:	68 de 03 00 00       	push   $0x3de
    a15a:	68 a4 ee 00 00       	push   $0xeea4
    a15f:	68 53 ef 00 00       	push   $0xef53
    a164:	e8 67 55 00 00       	call   f6d0 <assert_abort@plt>
    a169:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000a170 <nic_wol_virtue_remove>:
    a170:	55                   	push   %ebp
    a171:	89 e5                	mov    %esp,%ebp
    a173:	53                   	push   %ebx
    a174:	83 ec 20             	sub    $0x20,%esp
    a177:	8b 45 08             	mov    0x8(%ebp),%eax
    a17a:	50                   	push   %eax
    a17b:	e8 30 57 00 00       	call   f8b0 <async_exchange_begin@plt>
    a180:	83 c4 0c             	add    $0xc,%esp
    a183:	8b 55 0c             	mov    0xc(%ebp),%edx
    a186:	89 c3                	mov    %eax,%ebx
    a188:	6a 00                	push   $0x0
    a18a:	6a 00                	push   $0x0
    a18c:	6a 00                	push   $0x0
    a18e:	6a 00                	push   $0x0
    a190:	6a 00                	push   $0x0
    a192:	6a 00                	push   $0x0
    a194:	6a 00                	push   $0x0
    a196:	52                   	push   %edx
    a197:	6a 1f                	push   $0x1f
    a199:	68 05 04 00 00       	push   $0x405
    a19e:	50                   	push   %eax
    a19f:	e8 ac 54 00 00       	call   f650 <async_req_fast@plt>
    a1a4:	83 c4 24             	add    $0x24,%esp
    a1a7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    a1aa:	53                   	push   %ebx
    a1ab:	e8 10 55 00 00       	call   f6c0 <async_exchange_end@plt>
    a1b0:	8b 45 f4             	mov    -0xc(%ebp),%eax
    a1b3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    a1b6:	c9                   	leave  
    a1b7:	c3                   	ret    
    a1b8:	90                   	nop
    a1b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000a1c0 <nic_wol_virtue_probe>:
    a1c0:	55                   	push   %ebp
    a1c1:	89 e5                	mov    %esp,%ebp
    a1c3:	57                   	push   %edi
    a1c4:	56                   	push   %esi
    a1c5:	53                   	push   %ebx
    a1c6:	83 ec 2c             	sub    $0x2c,%esp
    a1c9:	8b 45 18             	mov    0x18(%ebp),%eax
    a1cc:	8b 7d 10             	mov    0x10(%ebp),%edi
    a1cf:	8b 5d 14             	mov    0x14(%ebp),%ebx
    a1d2:	85 c0                	test   %eax,%eax
    a1d4:	0f 84 96 00 00 00    	je     a270 <nic_wol_virtue_probe+0xb0>
    a1da:	83 ec 0c             	sub    $0xc,%esp
    a1dd:	8b 45 08             	mov    0x8(%ebp),%eax
    a1e0:	50                   	push   %eax
    a1e1:	e8 ca 56 00 00       	call   f8b0 <async_exchange_begin@plt>
    a1e6:	83 c4 0c             	add    $0xc,%esp
    a1e9:	89 c6                	mov    %eax,%esi
    a1eb:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    a1ee:	6a 00                	push   $0x0
    a1f0:	6a 00                	push   $0x0
    a1f2:	6a 00                	push   $0x0
    a1f4:	50                   	push   %eax
    a1f5:	8d 45 e0             	lea    -0x20(%ebp),%eax
    a1f8:	50                   	push   %eax
    a1f9:	8b 45 0c             	mov    0xc(%ebp),%eax
    a1fc:	6a 00                	push   $0x0
    a1fe:	53                   	push   %ebx
    a1ff:	50                   	push   %eax
    a200:	6a 20                	push   $0x20
    a202:	68 05 04 00 00       	push   $0x405
    a207:	56                   	push   %esi
    a208:	e8 43 54 00 00       	call   f650 <async_req_fast@plt>
    a20d:	83 c4 30             	add    $0x30,%esp
    a210:	85 c0                	test   %eax,%eax
    a212:	75 23                	jne    a237 <nic_wol_virtue_probe+0x77>
    a214:	85 ff                	test   %edi,%edi
    a216:	74 05                	je     a21d <nic_wol_virtue_probe+0x5d>
    a218:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    a21b:	89 0f                	mov    %ecx,(%edi)
    a21d:	8b 7d 1c             	mov    0x1c(%ebp),%edi
    a220:	85 ff                	test   %edi,%edi
    a222:	74 08                	je     a22c <nic_wol_virtue_probe+0x6c>
    a224:	8b 55 1c             	mov    0x1c(%ebp),%edx
    a227:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    a22a:	89 0a                	mov    %ecx,(%edx)
    a22c:	85 db                	test   %ebx,%ebx
    a22e:	74 07                	je     a237 <nic_wol_virtue_probe+0x77>
    a230:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    a233:	85 c9                	test   %ecx,%ecx
    a235:	75 21                	jne    a258 <nic_wol_virtue_probe+0x98>
    a237:	83 ec 0c             	sub    $0xc,%esp
    a23a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a23d:	56                   	push   %esi
    a23e:	e8 7d 54 00 00       	call   f6c0 <async_exchange_end@plt>
    a243:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a246:	83 c4 10             	add    $0x10,%esp
    a249:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a24c:	5b                   	pop    %ebx
    a24d:	5e                   	pop    %esi
    a24e:	5f                   	pop    %edi
    a24f:	5d                   	pop    %ebp
    a250:	c3                   	ret    
    a251:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    a258:	8b 55 18             	mov    0x18(%ebp),%edx
    a25b:	50                   	push   %eax
    a25c:	53                   	push   %ebx
    a25d:	52                   	push   %edx
    a25e:	56                   	push   %esi
    a25f:	e8 bc 55 00 00       	call   f820 <async_data_read_start@plt>
    a264:	83 c4 10             	add    $0x10,%esp
    a267:	eb ce                	jmp    a237 <nic_wol_virtue_probe+0x77>
    a269:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    a270:	31 db                	xor    %ebx,%ebx
    a272:	e9 63 ff ff ff       	jmp    a1da <nic_wol_virtue_probe+0x1a>
    a277:	89 f6                	mov    %esi,%esi
    a279:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000a280 <nic_wol_virtue_list>:
    a280:	55                   	push   %ebp
    a281:	89 e5                	mov    %esp,%ebp
    a283:	57                   	push   %edi
    a284:	56                   	push   %esi
    a285:	53                   	push   %ebx
    a286:	83 ec 2c             	sub    $0x2c,%esp
    a289:	8b 55 14             	mov    0x14(%ebp),%edx
    a28c:	8b 45 08             	mov    0x8(%ebp),%eax
    a28f:	8b 5d 10             	mov    0x10(%ebp),%ebx
    a292:	8b 75 18             	mov    0x18(%ebp),%esi
    a295:	85 d2                	test   %edx,%edx
    a297:	0f 84 9b 00 00 00    	je     a338 <nic_wol_virtue_list+0xb8>
    a29d:	83 ec 0c             	sub    $0xc,%esp
    a2a0:	50                   	push   %eax
    a2a1:	e8 0a 56 00 00       	call   f8b0 <async_exchange_begin@plt>
    a2a6:	83 c4 0c             	add    $0xc,%esp
    a2a9:	89 c7                	mov    %eax,%edi
    a2ab:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    a2ae:	6a 00                	push   $0x0
    a2b0:	6a 00                	push   $0x0
    a2b2:	6a 00                	push   $0x0
    a2b4:	6a 00                	push   $0x0
    a2b6:	50                   	push   %eax
    a2b7:	8b 45 0c             	mov    0xc(%ebp),%eax
    a2ba:	6a 00                	push   $0x0
    a2bc:	53                   	push   %ebx
    a2bd:	50                   	push   %eax
    a2be:	6a 21                	push   $0x21
    a2c0:	68 05 04 00 00       	push   $0x405
    a2c5:	57                   	push   %edi
    a2c6:	e8 85 53 00 00       	call   f650 <async_req_fast@plt>
    a2cb:	83 c4 30             	add    $0x30,%esp
    a2ce:	85 f6                	test   %esi,%esi
    a2d0:	0f 84 a2 00 00 00    	je     a378 <nic_wol_virtue_list+0xf8>
    a2d6:	85 c0                	test   %eax,%eax
    a2d8:	0f 95 c2             	setne  %dl
    a2db:	85 db                	test   %ebx,%ebx
    a2dd:	0f 94 c1             	sete   %cl
    a2e0:	09 ca                	or     %ecx,%edx
    a2e2:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    a2e5:	89 0e                	mov    %ecx,(%esi)
    a2e7:	84 d2                	test   %dl,%dl
    a2e9:	75 2d                	jne    a318 <nic_wol_virtue_list+0x98>
    a2eb:	c1 e3 02             	shl    $0x2,%ebx
    a2ee:	8b 4d 14             	mov    0x14(%ebp),%ecx
    a2f1:	52                   	push   %edx
    a2f2:	53                   	push   %ebx
    a2f3:	51                   	push   %ecx
    a2f4:	57                   	push   %edi
    a2f5:	e8 26 55 00 00       	call   f820 <async_data_read_start@plt>
    a2fa:	89 3c 24             	mov    %edi,(%esp)
    a2fd:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a300:	e8 bb 53 00 00       	call   f6c0 <async_exchange_end@plt>
    a305:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a308:	83 c4 10             	add    $0x10,%esp
    a30b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a30e:	5b                   	pop    %ebx
    a30f:	5e                   	pop    %esi
    a310:	5f                   	pop    %edi
    a311:	5d                   	pop    %ebp
    a312:	c3                   	ret    
    a313:	90                   	nop
    a314:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a318:	83 ec 0c             	sub    $0xc,%esp
    a31b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a31e:	57                   	push   %edi
    a31f:	e8 9c 53 00 00       	call   f6c0 <async_exchange_end@plt>
    a324:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a327:	83 c4 10             	add    $0x10,%esp
    a32a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a32d:	5b                   	pop    %ebx
    a32e:	5e                   	pop    %esi
    a32f:	5f                   	pop    %edi
    a330:	5d                   	pop    %ebp
    a331:	c3                   	ret    
    a332:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    a338:	83 ec 0c             	sub    $0xc,%esp
    a33b:	50                   	push   %eax
    a33c:	e8 6f 55 00 00       	call   f8b0 <async_exchange_begin@plt>
    a341:	83 c4 0c             	add    $0xc,%esp
    a344:	89 c7                	mov    %eax,%edi
    a346:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    a349:	6a 00                	push   $0x0
    a34b:	6a 00                	push   $0x0
    a34d:	6a 00                	push   $0x0
    a34f:	6a 00                	push   $0x0
    a351:	50                   	push   %eax
    a352:	8b 45 0c             	mov    0xc(%ebp),%eax
    a355:	6a 00                	push   $0x0
    a357:	6a 00                	push   $0x0
    a359:	50                   	push   %eax
    a35a:	6a 21                	push   $0x21
    a35c:	68 05 04 00 00       	push   $0x405
    a361:	57                   	push   %edi
    a362:	e8 e9 52 00 00       	call   f650 <async_req_fast@plt>
    a367:	83 c4 30             	add    $0x30,%esp
    a36a:	85 f6                	test   %esi,%esi
    a36c:	74 aa                	je     a318 <nic_wol_virtue_list+0x98>
    a36e:	b2 01                	mov    $0x1,%dl
    a370:	31 db                	xor    %ebx,%ebx
    a372:	e9 6b ff ff ff       	jmp    a2e2 <nic_wol_virtue_list+0x62>
    a377:	90                   	nop
    a378:	85 db                	test   %ebx,%ebx
    a37a:	0f 94 c1             	sete   %cl
    a37d:	85 c0                	test   %eax,%eax
    a37f:	0f 95 c2             	setne  %dl
    a382:	09 ca                	or     %ecx,%edx
    a384:	e9 5e ff ff ff       	jmp    a2e7 <nic_wol_virtue_list+0x67>
    a389:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000a390 <nic_wol_virtue_get_caps>:
    a390:	55                   	push   %ebp
    a391:	89 e5                	mov    %esp,%ebp
    a393:	56                   	push   %esi
    a394:	53                   	push   %ebx
    a395:	83 ec 20             	sub    $0x20,%esp
    a398:	8b 5d 10             	mov    0x10(%ebp),%ebx
    a39b:	85 db                	test   %ebx,%ebx
    a39d:	74 4d                	je     a3ec <nic_wol_virtue_get_caps+0x5c>
    a39f:	83 ec 0c             	sub    $0xc,%esp
    a3a2:	8b 45 08             	mov    0x8(%ebp),%eax
    a3a5:	50                   	push   %eax
    a3a6:	e8 05 55 00 00       	call   f8b0 <async_exchange_begin@plt>
    a3ab:	83 c4 0c             	add    $0xc,%esp
    a3ae:	8b 55 0c             	mov    0xc(%ebp),%edx
    a3b1:	89 c6                	mov    %eax,%esi
    a3b3:	8d 45 f4             	lea    -0xc(%ebp),%eax
    a3b6:	6a 00                	push   $0x0
    a3b8:	6a 00                	push   $0x0
    a3ba:	6a 00                	push   $0x0
    a3bc:	6a 00                	push   $0x0
    a3be:	50                   	push   %eax
    a3bf:	6a 00                	push   $0x0
    a3c1:	6a 00                	push   $0x0
    a3c3:	52                   	push   %edx
    a3c4:	6a 22                	push   $0x22
    a3c6:	68 05 04 00 00       	push   $0x405
    a3cb:	56                   	push   %esi
    a3cc:	e8 7f 52 00 00       	call   f650 <async_req_fast@plt>
    a3d1:	83 c4 24             	add    $0x24,%esp
    a3d4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    a3d7:	56                   	push   %esi
    a3d8:	e8 e3 52 00 00       	call   f6c0 <async_exchange_end@plt>
    a3dd:	8b 55 f4             	mov    -0xc(%ebp),%edx
    a3e0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    a3e3:	89 13                	mov    %edx,(%ebx)
    a3e5:	8d 65 f8             	lea    -0x8(%ebp),%esp
    a3e8:	5b                   	pop    %ebx
    a3e9:	5e                   	pop    %esi
    a3ea:	5d                   	pop    %ebp
    a3eb:	c3                   	ret    
    a3ec:	51                   	push   %ecx
    a3ed:	68 74 04 00 00       	push   $0x474
    a3f2:	68 a4 ee 00 00       	push   $0xeea4
    a3f7:	68 56 ef 00 00       	push   $0xef56
    a3fc:	e8 cf 52 00 00       	call   f6d0 <assert_abort@plt>
    a401:	eb 0d                	jmp    a410 <nic_wol_load_info>
    a403:	90                   	nop
    a404:	90                   	nop
    a405:	90                   	nop
    a406:	90                   	nop
    a407:	90                   	nop
    a408:	90                   	nop
    a409:	90                   	nop
    a40a:	90                   	nop
    a40b:	90                   	nop
    a40c:	90                   	nop
    a40d:	90                   	nop
    a40e:	90                   	nop
    a40f:	90                   	nop

0000a410 <nic_wol_load_info>:
    a410:	55                   	push   %ebp
    a411:	89 e5                	mov    %esp,%ebp
    a413:	57                   	push   %edi
    a414:	56                   	push   %esi
    a415:	53                   	push   %ebx
    a416:	83 ec 2c             	sub    $0x2c,%esp
    a419:	8b 75 0c             	mov    0xc(%ebp),%esi
    a41c:	8b 5d 10             	mov    0x10(%ebp),%ebx
    a41f:	85 f6                	test   %esi,%esi
    a421:	0f 84 a0 00 00 00    	je     a4c7 <nic_wol_load_info+0xb7>
    a427:	8b 45 14             	mov    0x14(%ebp),%eax
    a42a:	85 c0                	test   %eax,%eax
    a42c:	0f 84 8e 00 00 00    	je     a4c0 <nic_wol_load_info+0xb0>
    a432:	83 ec 0c             	sub    $0xc,%esp
    a435:	8b 7d 08             	mov    0x8(%ebp),%edi
    a438:	57                   	push   %edi
    a439:	e8 72 54 00 00       	call   f8b0 <async_exchange_begin@plt>
    a43e:	83 c4 0c             	add    $0xc,%esp
    a441:	89 c7                	mov    %eax,%edi
    a443:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    a446:	6a 00                	push   $0x0
    a448:	6a 00                	push   $0x0
    a44a:	6a 00                	push   $0x0
    a44c:	50                   	push   %eax
    a44d:	8d 45 e0             	lea    -0x20(%ebp),%eax
    a450:	50                   	push   %eax
    a451:	6a 00                	push   $0x0
    a453:	6a 00                	push   $0x0
    a455:	53                   	push   %ebx
    a456:	6a 23                	push   $0x23
    a458:	68 05 04 00 00       	push   $0x405
    a45d:	57                   	push   %edi
    a45e:	e8 ed 51 00 00       	call   f650 <async_req_fast@plt>
    a463:	83 c4 30             	add    $0x30,%esp
    a466:	85 c0                	test   %eax,%eax
    a468:	75 1f                	jne    a489 <nic_wol_load_info+0x79>
    a46a:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    a46d:	89 0e                	mov    %ecx,(%esi)
    a46f:	8b 75 18             	mov    0x18(%ebp),%esi
    a472:	85 f6                	test   %esi,%esi
    a474:	74 08                	je     a47e <nic_wol_load_info+0x6e>
    a476:	8b 55 18             	mov    0x18(%ebp),%edx
    a479:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    a47c:	89 0a                	mov    %ecx,(%edx)
    a47e:	85 db                	test   %ebx,%ebx
    a480:	74 07                	je     a489 <nic_wol_load_info+0x79>
    a482:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    a485:	85 c9                	test   %ecx,%ecx
    a487:	75 1f                	jne    a4a8 <nic_wol_load_info+0x98>
    a489:	83 ec 0c             	sub    $0xc,%esp
    a48c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a48f:	57                   	push   %edi
    a490:	e8 2b 52 00 00       	call   f6c0 <async_exchange_end@plt>
    a495:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a498:	83 c4 10             	add    $0x10,%esp
    a49b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a49e:	5b                   	pop    %ebx
    a49f:	5e                   	pop    %esi
    a4a0:	5f                   	pop    %edi
    a4a1:	5d                   	pop    %ebp
    a4a2:	c3                   	ret    
    a4a3:	90                   	nop
    a4a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a4a8:	8b 55 14             	mov    0x14(%ebp),%edx
    a4ab:	50                   	push   %eax
    a4ac:	53                   	push   %ebx
    a4ad:	52                   	push   %edx
    a4ae:	57                   	push   %edi
    a4af:	e8 6c 53 00 00       	call   f820 <async_data_read_start@plt>
    a4b4:	83 c4 10             	add    $0x10,%esp
    a4b7:	eb d0                	jmp    a489 <nic_wol_load_info+0x79>
    a4b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    a4c0:	31 db                	xor    %ebx,%ebx
    a4c2:	e9 6b ff ff ff       	jmp    a432 <nic_wol_load_info+0x22>
    a4c7:	50                   	push   %eax
    a4c8:	68 9a 04 00 00       	push   $0x49a
    a4cd:	68 a4 ee 00 00       	push   $0xeea4
    a4d2:	68 5c ef 00 00       	push   $0xef5c
    a4d7:	e8 f4 51 00 00       	call   f6d0 <assert_abort@plt>
    a4dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000a4e0 <nic_offload_probe>:
    a4e0:	55                   	push   %ebp
    a4e1:	89 e5                	mov    %esp,%ebp
    a4e3:	57                   	push   %edi
    a4e4:	56                   	push   %esi
    a4e5:	53                   	push   %ebx
    a4e6:	83 ec 2c             	sub    $0x2c,%esp
    a4e9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    a4ec:	8b 75 10             	mov    0x10(%ebp),%esi
    a4ef:	85 db                	test   %ebx,%ebx
    a4f1:	74 57                	je     a54a <nic_offload_probe+0x6a>
    a4f3:	85 f6                	test   %esi,%esi
    a4f5:	74 68                	je     a55f <nic_offload_probe+0x7f>
    a4f7:	83 ec 0c             	sub    $0xc,%esp
    a4fa:	8b 45 08             	mov    0x8(%ebp),%eax
    a4fd:	50                   	push   %eax
    a4fe:	e8 ad 53 00 00       	call   f8b0 <async_exchange_begin@plt>
    a503:	83 c4 0c             	add    $0xc,%esp
    a506:	89 c7                	mov    %eax,%edi
    a508:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    a50b:	6a 00                	push   $0x0
    a50d:	6a 00                	push   $0x0
    a50f:	6a 00                	push   $0x0
    a511:	50                   	push   %eax
    a512:	8d 45 e0             	lea    -0x20(%ebp),%eax
    a515:	50                   	push   %eax
    a516:	6a 00                	push   $0x0
    a518:	6a 00                	push   $0x0
    a51a:	6a 00                	push   $0x0
    a51c:	6a 24                	push   $0x24
    a51e:	68 05 04 00 00       	push   $0x405
    a523:	57                   	push   %edi
    a524:	e8 27 51 00 00       	call   f650 <async_req_fast@plt>
    a529:	83 c4 24             	add    $0x24,%esp
    a52c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a52f:	57                   	push   %edi
    a530:	e8 8b 51 00 00       	call   f6c0 <async_exchange_end@plt>
    a535:	8b 55 e0             	mov    -0x20(%ebp),%edx
    a538:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a53b:	89 13                	mov    %edx,(%ebx)
    a53d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    a540:	89 16                	mov    %edx,(%esi)
    a542:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a545:	5b                   	pop    %ebx
    a546:	5e                   	pop    %esi
    a547:	5f                   	pop    %edi
    a548:	5d                   	pop    %ebp
    a549:	c3                   	ret    
    a54a:	51                   	push   %ecx
    a54b:	68 c2 04 00 00       	push   $0x4c2
    a550:	68 a4 ee 00 00       	push   $0xeea4
    a555:	68 69 ef 00 00       	push   $0xef69
    a55a:	e8 71 51 00 00       	call   f6d0 <assert_abort@plt>
    a55f:	52                   	push   %edx
    a560:	68 c3 04 00 00       	push   $0x4c3
    a565:	68 a4 ee 00 00       	push   $0xeea4
    a56a:	68 73 ef 00 00       	push   $0xef73
    a56f:	e8 5c 51 00 00       	call   f6d0 <assert_abort@plt>
    a574:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    a57a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0000a580 <nic_offload_set>:
    a580:	55                   	push   %ebp
    a581:	89 e5                	mov    %esp,%ebp
    a583:	53                   	push   %ebx
    a584:	83 ec 20             	sub    $0x20,%esp
    a587:	8b 45 08             	mov    0x8(%ebp),%eax
    a58a:	50                   	push   %eax
    a58b:	e8 20 53 00 00       	call   f8b0 <async_exchange_begin@plt>
    a590:	83 c4 0c             	add    $0xc,%esp
    a593:	8b 55 10             	mov    0x10(%ebp),%edx
    a596:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    a599:	89 c3                	mov    %eax,%ebx
    a59b:	6a 00                	push   $0x0
    a59d:	6a 00                	push   $0x0
    a59f:	6a 00                	push   $0x0
    a5a1:	6a 00                	push   $0x0
    a5a3:	6a 00                	push   $0x0
    a5a5:	6a 00                	push   $0x0
    a5a7:	52                   	push   %edx
    a5a8:	51                   	push   %ecx
    a5a9:	6a 0e                	push   $0xe
    a5ab:	68 05 04 00 00       	push   $0x405
    a5b0:	50                   	push   %eax
    a5b1:	e8 9a 50 00 00       	call   f650 <async_req_fast@plt>
    a5b6:	83 c4 24             	add    $0x24,%esp
    a5b9:	89 45 f4             	mov    %eax,-0xc(%ebp)
    a5bc:	53                   	push   %ebx
    a5bd:	e8 fe 50 00 00       	call   f6c0 <async_exchange_end@plt>
    a5c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
    a5c5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    a5c8:	c9                   	leave  
    a5c9:	c3                   	ret    
    a5ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000a5d0 <nic_poll_get_mode>:
    a5d0:	55                   	push   %ebp
    a5d1:	89 e5                	mov    %esp,%ebp
    a5d3:	57                   	push   %edi
    a5d4:	56                   	push   %esi
    a5d5:	53                   	push   %ebx
    a5d6:	83 ec 2c             	sub    $0x2c,%esp
    a5d9:	8b 75 0c             	mov    0xc(%ebp),%esi
    a5dc:	8b 5d 10             	mov    0x10(%ebp),%ebx
    a5df:	85 f6                	test   %esi,%esi
    a5e1:	74 6d                	je     a650 <nic_poll_get_mode+0x80>
    a5e3:	83 ec 0c             	sub    $0xc,%esp
    a5e6:	8b 55 08             	mov    0x8(%ebp),%edx
    a5e9:	52                   	push   %edx
    a5ea:	e8 c1 52 00 00       	call   f8b0 <async_exchange_begin@plt>
    a5ef:	83 c4 0c             	add    $0xc,%esp
    a5f2:	89 c7                	mov    %eax,%edi
    a5f4:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    a5f7:	6a 00                	push   $0x0
    a5f9:	6a 00                	push   $0x0
    a5fb:	6a 00                	push   $0x0
    a5fd:	6a 00                	push   $0x0
    a5ff:	50                   	push   %eax
    a600:	31 c0                	xor    %eax,%eax
    a602:	85 db                	test   %ebx,%ebx
    a604:	6a 00                	push   $0x0
    a606:	0f 95 c0             	setne  %al
    a609:	6a 00                	push   $0x0
    a60b:	50                   	push   %eax
    a60c:	6a 26                	push   $0x26
    a60e:	68 05 04 00 00       	push   $0x405
    a613:	57                   	push   %edi
    a614:	e8 37 50 00 00       	call   f650 <async_req_fast@plt>
    a619:	83 c4 30             	add    $0x30,%esp
    a61c:	85 c0                	test   %eax,%eax
    a61e:	75 16                	jne    a636 <nic_poll_get_mode+0x66>
    a620:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    a623:	85 db                	test   %ebx,%ebx
    a625:	89 16                	mov    %edx,(%esi)
    a627:	74 0d                	je     a636 <nic_poll_get_mode+0x66>
    a629:	50                   	push   %eax
    a62a:	6a 08                	push   $0x8
    a62c:	53                   	push   %ebx
    a62d:	57                   	push   %edi
    a62e:	e8 ed 51 00 00       	call   f820 <async_data_read_start@plt>
    a633:	83 c4 10             	add    $0x10,%esp
    a636:	83 ec 0c             	sub    $0xc,%esp
    a639:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a63c:	57                   	push   %edi
    a63d:	e8 7e 50 00 00       	call   f6c0 <async_exchange_end@plt>
    a642:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a645:	83 c4 10             	add    $0x10,%esp
    a648:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a64b:	5b                   	pop    %ebx
    a64c:	5e                   	pop    %esi
    a64d:	5f                   	pop    %edi
    a64e:	5d                   	pop    %ebp
    a64f:	c3                   	ret    
    a650:	51                   	push   %ecx
    a651:	68 f2 04 00 00       	push   $0x4f2
    a656:	68 a4 ee 00 00       	push   $0xeea4
    a65b:	68 49 ef 00 00       	push   $0xef49
    a660:	e8 6b 50 00 00       	call   f6d0 <assert_abort@plt>
    a665:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a669:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000a670 <nic_poll_set_mode>:
    a670:	55                   	push   %ebp
    a671:	89 e5                	mov    %esp,%ebp
    a673:	57                   	push   %edi
    a674:	56                   	push   %esi
    a675:	53                   	push   %ebx
    a676:	83 ec 38             	sub    $0x38,%esp
    a679:	8b 7d 08             	mov    0x8(%ebp),%edi
    a67c:	8b 5d 10             	mov    0x10(%ebp),%ebx
    a67f:	57                   	push   %edi
    a680:	e8 2b 52 00 00       	call   f8b0 <async_exchange_begin@plt>
    a685:	83 c4 0c             	add    $0xc,%esp
    a688:	89 c6                	mov    %eax,%esi
    a68a:	31 c0                	xor    %eax,%eax
    a68c:	85 db                	test   %ebx,%ebx
    a68e:	0f 95 c0             	setne  %al
    a691:	6a 00                	push   $0x0
    a693:	6a 00                	push   $0x0
    a695:	50                   	push   %eax
    a696:	8b 45 0c             	mov    0xc(%ebp),%eax
    a699:	50                   	push   %eax
    a69a:	6a 27                	push   $0x27
    a69c:	68 05 04 00 00       	push   $0x405
    a6a1:	56                   	push   %esi
    a6a2:	e8 c9 4f 00 00       	call   f670 <async_send_fast@plt>
    a6a7:	83 c4 20             	add    $0x20,%esp
    a6aa:	89 c7                	mov    %eax,%edi
    a6ac:	85 db                	test   %ebx,%ebx
    a6ae:	74 38                	je     a6e8 <nic_poll_set_mode+0x78>
    a6b0:	51                   	push   %ecx
    a6b1:	6a 08                	push   $0x8
    a6b3:	53                   	push   %ebx
    a6b4:	56                   	push   %esi
    a6b5:	e8 06 4f 00 00       	call   f5c0 <async_data_write_start@plt>
    a6ba:	89 34 24             	mov    %esi,(%esp)
    a6bd:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a6c0:	e8 fb 4f 00 00       	call   f6c0 <async_exchange_end@plt>
    a6c5:	8d 55 e4             	lea    -0x1c(%ebp),%edx
    a6c8:	5b                   	pop    %ebx
    a6c9:	5e                   	pop    %esi
    a6ca:	52                   	push   %edx
    a6cb:	57                   	push   %edi
    a6cc:	e8 af 4e 00 00       	call   f580 <async_wait_for@plt>
    a6d1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a6d4:	83 c4 10             	add    $0x10,%esp
    a6d7:	85 c0                	test   %eax,%eax
    a6d9:	74 25                	je     a700 <nic_poll_set_mode+0x90>
    a6db:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a6de:	5b                   	pop    %ebx
    a6df:	5e                   	pop    %esi
    a6e0:	5f                   	pop    %edi
    a6e1:	5d                   	pop    %ebp
    a6e2:	c3                   	ret    
    a6e3:	90                   	nop
    a6e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a6e8:	83 ec 0c             	sub    $0xc,%esp
    a6eb:	56                   	push   %esi
    a6ec:	e8 cf 4f 00 00       	call   f6c0 <async_exchange_end@plt>
    a6f1:	58                   	pop    %eax
    a6f2:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    a6f5:	5a                   	pop    %edx
    a6f6:	50                   	push   %eax
    a6f7:	57                   	push   %edi
    a6f8:	e8 83 4e 00 00       	call   f580 <async_wait_for@plt>
    a6fd:	83 c4 10             	add    $0x10,%esp
    a700:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    a703:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a706:	5b                   	pop    %ebx
    a707:	5e                   	pop    %esi
    a708:	5f                   	pop    %edi
    a709:	5d                   	pop    %ebp
    a70a:	c3                   	ret    
    a70b:	90                   	nop
    a70c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000a710 <nic_poll_now>:
    a710:	55                   	push   %ebp
    a711:	89 e5                	mov    %esp,%ebp
    a713:	53                   	push   %ebx
    a714:	83 ec 20             	sub    $0x20,%esp
    a717:	8b 45 08             	mov    0x8(%ebp),%eax
    a71a:	50                   	push   %eax
    a71b:	e8 90 51 00 00       	call   f8b0 <async_exchange_begin@plt>
    a720:	83 c4 0c             	add    $0xc,%esp
    a723:	89 c3                	mov    %eax,%ebx
    a725:	6a 00                	push   $0x0
    a727:	6a 00                	push   $0x0
    a729:	6a 00                	push   $0x0
    a72b:	6a 00                	push   $0x0
    a72d:	6a 00                	push   $0x0
    a72f:	6a 00                	push   $0x0
    a731:	6a 00                	push   $0x0
    a733:	6a 00                	push   $0x0
    a735:	6a 28                	push   $0x28
    a737:	68 05 04 00 00       	push   $0x405
    a73c:	50                   	push   %eax
    a73d:	e8 0e 4f 00 00       	call   f650 <async_req_fast@plt>
    a742:	83 c4 24             	add    $0x24,%esp
    a745:	89 45 f4             	mov    %eax,-0xc(%ebp)
    a748:	53                   	push   %ebx
    a749:	e8 72 4f 00 00       	call   f6c0 <async_exchange_end@plt>
    a74e:	8b 45 f4             	mov    -0xc(%ebp),%eax
    a751:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    a754:	c9                   	leave  
    a755:	c3                   	ret    
    a756:	66 90                	xchg   %ax,%ax
    a758:	66 90                	xchg   %ax,%ax
    a75a:	66 90                	xchg   %ax,%ax
    a75c:	66 90                	xchg   %ax,%ax
    a75e:	66 90                	xchg   %ax,%ax

0000a760 <remote_ieee80211_connect>:
    a760:	55                   	push   %ebp
    a761:	89 e5                	mov    %esp,%ebp
    a763:	57                   	push   %edi
    a764:	56                   	push   %esi
    a765:	53                   	push   %ebx
    a766:	83 ec 5c             	sub    $0x5c,%esp
    a769:	8b 45 0c             	mov    0xc(%ebp),%eax
    a76c:	8b 78 04             	mov    0x4(%eax),%edi
    a76f:	85 ff                	test   %edi,%edi
    a771:	0f 84 ab 00 00 00    	je     a822 <remote_ieee80211_connect+0xc2>
    a777:	8d 75 a4             	lea    -0x5c(%ebp),%esi
    a77a:	53                   	push   %ebx
    a77b:	53                   	push   %ebx
    a77c:	8d 5d a0             	lea    -0x60(%ebp),%ebx
    a77f:	56                   	push   %esi
    a780:	53                   	push   %ebx
    a781:	e8 0a 52 00 00       	call   f990 <async_data_write_receive@plt>
    a786:	83 c4 10             	add    $0x10,%esp
    a789:	84 c0                	test   %al,%al
    a78b:	74 08                	je     a795 <remote_ieee80211_connect+0x35>
    a78d:	8b 45 a4             	mov    -0x5c(%ebp),%eax
    a790:	83 f8 20             	cmp    $0x20,%eax
    a793:	76 2b                	jbe    a7c0 <remote_ieee80211_connect+0x60>
    a795:	8b 45 a0             	mov    -0x60(%ebp),%eax
    a798:	57                   	push   %edi
    a799:	57                   	push   %edi
    a79a:	6a f2                	push   $0xfffffff2
    a79c:	50                   	push   %eax
    a79d:	e8 be 4e 00 00       	call   f660 <async_answer_0@plt>
    a7a2:	8b 4d 10             	mov    0x10(%ebp),%ecx
    a7a5:	58                   	pop    %eax
    a7a6:	5a                   	pop    %edx
    a7a7:	6a f2                	push   $0xfffffff2
    a7a9:	51                   	push   %ecx
    a7aa:	e8 b1 4e 00 00       	call   f660 <async_answer_0@plt>
    a7af:	83 c4 10             	add    $0x10,%esp
    a7b2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a7b5:	5b                   	pop    %ebx
    a7b6:	5e                   	pop    %esi
    a7b7:	5f                   	pop    %edi
    a7b8:	5d                   	pop    %ebp
    a7b9:	c3                   	ret    
    a7ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    a7c0:	8b 4d a0             	mov    -0x60(%ebp),%ecx
    a7c3:	8d 7d a8             	lea    -0x58(%ebp),%edi
    a7c6:	52                   	push   %edx
    a7c7:	50                   	push   %eax
    a7c8:	57                   	push   %edi
    a7c9:	51                   	push   %ecx
    a7ca:	e8 51 51 00 00       	call   f920 <async_data_write_finalize@plt>
    a7cf:	83 c4 10             	add    $0x10,%esp
    a7d2:	85 c0                	test   %eax,%eax
    a7d4:	75 bf                	jne    a795 <remote_ieee80211_connect+0x35>
    a7d6:	50                   	push   %eax
    a7d7:	50                   	push   %eax
    a7d8:	56                   	push   %esi
    a7d9:	53                   	push   %ebx
    a7da:	e8 b1 51 00 00       	call   f990 <async_data_write_receive@plt>
    a7df:	83 c4 10             	add    $0x10,%esp
    a7e2:	84 c0                	test   %al,%al
    a7e4:	74 af                	je     a795 <remote_ieee80211_connect+0x35>
    a7e6:	8b 45 a4             	mov    -0x5c(%ebp),%eax
    a7e9:	83 f8 20             	cmp    $0x20,%eax
    a7ec:	77 a7                	ja     a795 <remote_ieee80211_connect+0x35>
    a7ee:	8b 75 a0             	mov    -0x60(%ebp),%esi
    a7f1:	53                   	push   %ebx
    a7f2:	8d 5d c8             	lea    -0x38(%ebp),%ebx
    a7f5:	50                   	push   %eax
    a7f6:	53                   	push   %ebx
    a7f7:	56                   	push   %esi
    a7f8:	e8 23 51 00 00       	call   f920 <async_data_write_finalize@plt>
    a7fd:	83 c4 10             	add    $0x10,%esp
    a800:	85 c0                	test   %eax,%eax
    a802:	75 91                	jne    a795 <remote_ieee80211_connect+0x35>
    a804:	50                   	push   %eax
    a805:	8b 45 0c             	mov    0xc(%ebp),%eax
    a808:	8b 55 08             	mov    0x8(%ebp),%edx
    a80b:	53                   	push   %ebx
    a80c:	57                   	push   %edi
    a80d:	52                   	push   %edx
    a80e:	ff 50 04             	call   *0x4(%eax)
    a811:	8b 75 10             	mov    0x10(%ebp),%esi
    a814:	59                   	pop    %ecx
    a815:	5b                   	pop    %ebx
    a816:	50                   	push   %eax
    a817:	56                   	push   %esi
    a818:	e8 43 4e 00 00       	call   f660 <async_answer_0@plt>
    a81d:	83 c4 10             	add    $0x10,%esp
    a820:	eb 90                	jmp    a7b2 <remote_ieee80211_connect+0x52>
    a822:	56                   	push   %esi
    a823:	68 33 01 00 00       	push   $0x133
    a828:	68 44 f0 00 00       	push   $0xf044
    a82d:	68 5f f0 00 00       	push   $0xf05f
    a832:	e8 99 4e 00 00       	call   f6d0 <assert_abort@plt>
    a837:	89 f6                	mov    %esi,%esi
    a839:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000a840 <remote_ieee80211_get_scan_results>:
    a840:	55                   	push   %ebp
    a841:	89 e5                	mov    %esp,%ebp
    a843:	56                   	push   %esi
    a844:	53                   	push   %ebx
    a845:	81 ec 90 07 00 00    	sub    $0x790,%esp
    a84b:	8b 75 0c             	mov    0xc(%ebp),%esi
    a84e:	8b 06                	mov    (%esi),%eax
    a850:	85 c0                	test   %eax,%eax
    a852:	0f 84 df 00 00 00    	je     a937 <remote_ieee80211_get_scan_results+0xf7>
    a858:	8d 9d 74 f8 ff ff    	lea    -0x78c(%ebp),%ebx
    a85e:	50                   	push   %eax
    a85f:	68 84 07 00 00       	push   $0x784
    a864:	6a 00                	push   $0x0
    a866:	53                   	push   %ebx
    a867:	e8 94 4f 00 00       	call   f800 <memset@plt>
    a86c:	8b 45 14             	mov    0x14(%ebp),%eax
    a86f:	83 c4 0c             	add    $0xc,%esp
    a872:	8b 40 08             	mov    0x8(%eax),%eax
    a875:	85 c0                	test   %eax,%eax
    a877:	0f 95 c0             	setne  %al
    a87a:	25 ff 00 00 00       	and    $0xff,%eax
    a87f:	50                   	push   %eax
    a880:	8b 45 08             	mov    0x8(%ebp),%eax
    a883:	53                   	push   %ebx
    a884:	50                   	push   %eax
    a885:	ff 16                	call   *(%esi)
    a887:	83 c4 10             	add    $0x10,%esp
    a88a:	89 c6                	mov    %eax,%esi
    a88c:	85 c0                	test   %eax,%eax
    a88e:	75 66                	jne    a8f6 <remote_ieee80211_get_scan_results+0xb6>
    a890:	50                   	push   %eax
    a891:	50                   	push   %eax
    a892:	8d 85 70 f8 ff ff    	lea    -0x790(%ebp),%eax
    a898:	50                   	push   %eax
    a899:	8d 85 6c f8 ff ff    	lea    -0x794(%ebp),%eax
    a89f:	50                   	push   %eax
    a8a0:	e8 6b 4f 00 00       	call   f810 <async_data_read_receive@plt>
    a8a5:	83 c4 10             	add    $0x10,%esp
    a8a8:	84 c0                	test   %al,%al
    a8aa:	74 64                	je     a910 <remote_ieee80211_get_scan_results+0xd0>
    a8ac:	81 bd 70 f8 ff ff 83 	cmpl   $0x783,-0x790(%ebp)
    a8b3:	07 00 00 
    a8b6:	77 28                	ja     a8e0 <remote_ieee80211_get_scan_results+0xa0>
    a8b8:	8b 85 6c f8 ff ff    	mov    -0x794(%ebp),%eax
    a8be:	56                   	push   %esi
    a8bf:	56                   	push   %esi
    a8c0:	6a fd                	push   $0xfffffffd
    a8c2:	50                   	push   %eax
    a8c3:	e8 98 4d 00 00       	call   f660 <async_answer_0@plt>
    a8c8:	8b 4d 10             	mov    0x10(%ebp),%ecx
    a8cb:	58                   	pop    %eax
    a8cc:	5a                   	pop    %edx
    a8cd:	6a fd                	push   $0xfffffffd
    a8cf:	51                   	push   %ecx
    a8d0:	e8 8b 4d 00 00       	call   f660 <async_answer_0@plt>
    a8d5:	83 c4 10             	add    $0x10,%esp
    a8d8:	8d 65 f8             	lea    -0x8(%ebp),%esp
    a8db:	5b                   	pop    %ebx
    a8dc:	5e                   	pop    %esi
    a8dd:	5d                   	pop    %ebp
    a8de:	c3                   	ret    
    a8df:	90                   	nop
    a8e0:	51                   	push   %ecx
    a8e1:	68 84 07 00 00       	push   $0x784
    a8e6:	53                   	push   %ebx
    a8e7:	8b 9d 6c f8 ff ff    	mov    -0x794(%ebp),%ebx
    a8ed:	53                   	push   %ebx
    a8ee:	e8 fd 4c 00 00       	call   f5f0 <async_data_read_finalize@plt>
    a8f3:	83 c4 10             	add    $0x10,%esp
    a8f6:	8b 55 10             	mov    0x10(%ebp),%edx
    a8f9:	50                   	push   %eax
    a8fa:	50                   	push   %eax
    a8fb:	56                   	push   %esi
    a8fc:	52                   	push   %edx
    a8fd:	e8 5e 4d 00 00       	call   f660 <async_answer_0@plt>
    a902:	83 c4 10             	add    $0x10,%esp
    a905:	8d 65 f8             	lea    -0x8(%ebp),%esp
    a908:	5b                   	pop    %ebx
    a909:	5e                   	pop    %esi
    a90a:	5d                   	pop    %ebp
    a90b:	c3                   	ret    
    a90c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a910:	8b b5 6c f8 ff ff    	mov    -0x794(%ebp),%esi
    a916:	53                   	push   %ebx
    a917:	53                   	push   %ebx
    a918:	6a f2                	push   $0xfffffff2
    a91a:	56                   	push   %esi
    a91b:	e8 40 4d 00 00       	call   f660 <async_answer_0@plt>
    a920:	8b 4d 10             	mov    0x10(%ebp),%ecx
    a923:	58                   	pop    %eax
    a924:	5a                   	pop    %edx
    a925:	6a f2                	push   $0xfffffff2
    a927:	51                   	push   %ecx
    a928:	e8 33 4d 00 00       	call   f660 <async_answer_0@plt>
    a92d:	83 c4 10             	add    $0x10,%esp
    a930:	8d 65 f8             	lea    -0x8(%ebp),%esp
    a933:	5b                   	pop    %ebx
    a934:	5e                   	pop    %esi
    a935:	5d                   	pop    %ebp
    a936:	c3                   	ret    
    a937:	50                   	push   %eax
    a938:	68 11 01 00 00       	push   $0x111
    a93d:	68 44 f0 00 00       	push   $0xf044
    a942:	68 ac f0 00 00       	push   $0xf0ac
    a947:	e8 84 4d 00 00       	call   f6d0 <assert_abort@plt>
    a94c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000a950 <remote_ieee80211_disconnect>:
    a950:	55                   	push   %ebp
    a951:	89 e5                	mov    %esp,%ebp
    a953:	53                   	push   %ebx
    a954:	52                   	push   %edx
    a955:	8b 45 0c             	mov    0xc(%ebp),%eax
    a958:	8b 55 08             	mov    0x8(%ebp),%edx
    a95b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    a95e:	8b 40 08             	mov    0x8(%eax),%eax
    a961:	85 c0                	test   %eax,%eax
    a963:	74 18                	je     a97d <remote_ieee80211_disconnect+0x2d>
    a965:	83 ec 0c             	sub    $0xc,%esp
    a968:	52                   	push   %edx
    a969:	ff d0                	call   *%eax
    a96b:	89 5d 08             	mov    %ebx,0x8(%ebp)
    a96e:	83 c4 10             	add    $0x10,%esp
    a971:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    a974:	89 45 0c             	mov    %eax,0xc(%ebp)
    a977:	c9                   	leave  
    a978:	e9 e3 4c 00 00       	jmp    f660 <async_answer_0@plt>
    a97d:	50                   	push   %eax
    a97e:	68 69 01 00 00       	push   $0x169
    a983:	68 44 f0 00 00       	push   $0xf044
    a988:	68 78 f0 00 00       	push   $0xf078
    a98d:	e8 3e 4d 00 00       	call   f6d0 <assert_abort@plt>
    a992:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    a999:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000a9a0 <ieee80211_get_scan_results>:
    a9a0:	55                   	push   %ebp
    a9a1:	89 e5                	mov    %esp,%ebp
    a9a3:	57                   	push   %edi
    a9a4:	56                   	push   %esi
    a9a5:	53                   	push   %ebx
    a9a6:	83 ec 2c             	sub    $0x2c,%esp
    a9a9:	8b 75 0c             	mov    0xc(%ebp),%esi
    a9ac:	8b 5d 10             	mov    0x10(%ebp),%ebx
    a9af:	85 f6                	test   %esi,%esi
    a9b1:	74 6a                	je     aa1d <ieee80211_get_scan_results+0x7d>
    a9b3:	83 ec 0c             	sub    $0xc,%esp
    a9b6:	8b 45 08             	mov    0x8(%ebp),%eax
    a9b9:	81 e3 ff 00 00 00    	and    $0xff,%ebx
    a9bf:	50                   	push   %eax
    a9c0:	e8 eb 4e 00 00       	call   f8b0 <async_exchange_begin@plt>
    a9c5:	83 c4 0c             	add    $0xc,%esp
    a9c8:	89 c7                	mov    %eax,%edi
    a9ca:	6a 00                	push   $0x0
    a9cc:	6a 00                	push   $0x0
    a9ce:	6a 00                	push   $0x0
    a9d0:	53                   	push   %ebx
    a9d1:	6a 00                	push   $0x0
    a9d3:	68 06 04 00 00       	push   $0x406
    a9d8:	50                   	push   %eax
    a9d9:	e8 92 4c 00 00       	call   f670 <async_send_fast@plt>
    a9de:	83 c4 1c             	add    $0x1c,%esp
    a9e1:	89 c3                	mov    %eax,%ebx
    a9e3:	68 84 07 00 00       	push   $0x784
    a9e8:	56                   	push   %esi
    a9e9:	57                   	push   %edi
    a9ea:	e8 31 4e 00 00       	call   f820 <async_data_read_start@plt>
    a9ef:	89 3c 24             	mov    %edi,(%esp)
    a9f2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a9f5:	e8 c6 4c 00 00       	call   f6c0 <async_exchange_end@plt>
    a9fa:	5a                   	pop    %edx
    a9fb:	8d 55 e4             	lea    -0x1c(%ebp),%edx
    a9fe:	59                   	pop    %ecx
    a9ff:	52                   	push   %edx
    aa00:	53                   	push   %ebx
    aa01:	e8 7a 4b 00 00       	call   f580 <async_wait_for@plt>
    aa06:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    aa09:	83 c4 10             	add    $0x10,%esp
    aa0c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    aa0f:	85 d2                	test   %edx,%edx
    aa11:	74 02                	je     aa15 <ieee80211_get_scan_results+0x75>
    aa13:	89 d0                	mov    %edx,%eax
    aa15:	8d 65 f4             	lea    -0xc(%ebp),%esp
    aa18:	5b                   	pop    %ebx
    aa19:	5e                   	pop    %esi
    aa1a:	5f                   	pop    %edi
    aa1b:	5d                   	pop    %ebp
    aa1c:	c3                   	ret    
    aa1d:	53                   	push   %ebx
    aa1e:	6a 43                	push   $0x43
    aa20:	68 44 f0 00 00       	push   $0xf044
    aa25:	68 94 f0 00 00       	push   $0xf094
    aa2a:	e8 a1 4c 00 00       	call   f6d0 <assert_abort@plt>
    aa2f:	90                   	nop

0000aa30 <ieee80211_connect>:
    aa30:	55                   	push   %ebp
    aa31:	89 e5                	mov    %esp,%ebp
    aa33:	57                   	push   %edi
    aa34:	56                   	push   %esi
    aa35:	53                   	push   %ebx
    aa36:	83 ec 3c             	sub    $0x3c,%esp
    aa39:	8b 75 0c             	mov    0xc(%ebp),%esi
    aa3c:	85 f6                	test   %esi,%esi
    aa3e:	0f 84 97 01 00 00    	je     abdb <ieee80211_connect+0x1ab>
    aa44:	83 ec 0c             	sub    $0xc,%esp
    aa47:	8b 45 08             	mov    0x8(%ebp),%eax
    aa4a:	50                   	push   %eax
    aa4b:	e8 60 4e 00 00       	call   f8b0 <async_exchange_begin@plt>
    aa50:	83 c4 0c             	add    $0xc,%esp
    aa53:	89 c3                	mov    %eax,%ebx
    aa55:	6a 00                	push   $0x0
    aa57:	6a 00                	push   $0x0
    aa59:	6a 00                	push   $0x0
    aa5b:	6a 00                	push   $0x0
    aa5d:	6a 01                	push   $0x1
    aa5f:	68 06 04 00 00       	push   $0x406
    aa64:	50                   	push   %eax
    aa65:	e8 06 4c 00 00       	call   f670 <async_send_fast@plt>
    aa6a:	83 c4 14             	add    $0x14,%esp
    aa6d:	89 c7                	mov    %eax,%edi
    aa6f:	56                   	push   %esi
    aa70:	e8 0b 4e 00 00       	call   f880 <str_size@plt>
    aa75:	83 c4 0c             	add    $0xc,%esp
    aa78:	40                   	inc    %eax
    aa79:	50                   	push   %eax
    aa7a:	56                   	push   %esi
    aa7b:	53                   	push   %ebx
    aa7c:	e8 3f 4b 00 00       	call   f5c0 <async_data_write_start@plt>
    aa81:	83 c4 10             	add    $0x10,%esp
    aa84:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    aa87:	85 c0                	test   %eax,%eax
    aa89:	75 30                	jne    aabb <ieee80211_connect+0x8b>
    aa8b:	8b 45 10             	mov    0x10(%ebp),%eax
    aa8e:	85 c0                	test   %eax,%eax
    aa90:	0f 84 aa 00 00 00    	je     ab40 <ieee80211_connect+0x110>
    aa96:	83 ec 0c             	sub    $0xc,%esp
    aa99:	8b 75 10             	mov    0x10(%ebp),%esi
    aa9c:	56                   	push   %esi
    aa9d:	e8 de 4d 00 00       	call   f880 <str_size@plt>
    aaa2:	83 c4 0c             	add    $0xc,%esp
    aaa5:	40                   	inc    %eax
    aaa6:	50                   	push   %eax
    aaa7:	8b 45 10             	mov    0x10(%ebp),%eax
    aaaa:	50                   	push   %eax
    aaab:	53                   	push   %ebx
    aaac:	e8 0f 4b 00 00       	call   f5c0 <async_data_write_start@plt>
    aab1:	83 c4 10             	add    $0x10,%esp
    aab4:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    aab7:	85 c0                	test   %eax,%eax
    aab9:	74 2d                	je     aae8 <ieee80211_connect+0xb8>
    aabb:	83 ec 0c             	sub    $0xc,%esp
    aabe:	53                   	push   %ebx
    aabf:	e8 fc 4b 00 00       	call   f6c0 <async_exchange_end@plt>
    aac4:	8d 45 d8             	lea    -0x28(%ebp),%eax
    aac7:	59                   	pop    %ecx
    aac8:	5b                   	pop    %ebx
    aac9:	50                   	push   %eax
    aaca:	57                   	push   %edi
    aacb:	e8 b0 4a 00 00       	call   f580 <async_wait_for@plt>
    aad0:	8b 45 d8             	mov    -0x28(%ebp),%eax
    aad3:	83 c4 10             	add    $0x10,%esp
    aad6:	85 c0                	test   %eax,%eax
    aad8:	75 03                	jne    aadd <ieee80211_connect+0xad>
    aada:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    aadd:	8d 65 f4             	lea    -0xc(%ebp),%esp
    aae0:	5b                   	pop    %ebx
    aae1:	5e                   	pop    %esi
    aae2:	5f                   	pop    %edi
    aae3:	5d                   	pop    %ebp
    aae4:	c3                   	ret    
    aae5:	8d 76 00             	lea    0x0(%esi),%esi
    aae8:	83 ec 0c             	sub    $0xc,%esp
    aaeb:	53                   	push   %ebx
    aaec:	e8 cf 4b 00 00       	call   f6c0 <async_exchange_end@plt>
    aaf1:	58                   	pop    %eax
    aaf2:	8d 45 c4             	lea    -0x3c(%ebp),%eax
    aaf5:	5a                   	pop    %edx
    aaf6:	50                   	push   %eax
    aaf7:	57                   	push   %edi
    aaf8:	e8 83 4a 00 00       	call   f580 <async_wait_for@plt>
    aafd:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    ab00:	83 c4 10             	add    $0x10,%esp
    ab03:	85 c0                	test   %eax,%eax
    ab05:	75 d6                	jne    aadd <ieee80211_connect+0xad>
    ab07:	8d 45 d2             	lea    -0x2e(%ebp),%eax
    ab0a:	8b 7d 08             	mov    0x8(%ebp),%edi
    ab0d:	56                   	push   %esi
    ab0e:	56                   	push   %esi
    ab0f:	50                   	push   %eax
    ab10:	57                   	push   %edi
    ab11:	e8 6a e7 ff ff       	call   9280 <nic_get_address>
    ab16:	83 c4 10             	add    $0x10,%esp
    ab19:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    ab1c:	85 c0                	test   %eax,%eax
    ab1e:	75 bd                	jne    aadd <ieee80211_connect+0xad>
    ab20:	8d 45 cc             	lea    -0x34(%ebp),%eax
    ab23:	53                   	push   %ebx
    ab24:	53                   	push   %ebx
    ab25:	50                   	push   %eax
    ab26:	8d 45 c8             	lea    -0x38(%ebp),%eax
    ab29:	50                   	push   %eax
    ab2a:	e8 31 4e 00 00       	call   f960 <inetcfg_get_link_list@plt>
    ab2f:	83 c4 10             	add    $0x10,%esp
    ab32:	85 c0                	test   %eax,%eax
    ab34:	74 1a                	je     ab50 <ieee80211_connect+0x120>
    ab36:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    ab3b:	eb a0                	jmp    aadd <ieee80211_connect+0xad>
    ab3d:	8d 76 00             	lea    0x0(%esi),%esi
    ab40:	c7 45 10 06 f2 00 00 	movl   $0xf206,0x10(%ebp)
    ab47:	e9 4a ff ff ff       	jmp    aa96 <ieee80211_connect+0x66>
    ab4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ab50:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    ab53:	85 c9                	test   %ecx,%ecx
    ab55:	74 df                	je     ab36 <ieee80211_connect+0x106>
    ab57:	31 db                	xor    %ebx,%ebx
    ab59:	8d 7d d8             	lea    -0x28(%ebp),%edi
    ab5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ab60:	8d 34 9d 00 00 00 00 	lea    0x0(,%ebx,4),%esi
    ab67:	50                   	push   %eax
    ab68:	50                   	push   %eax
    ab69:	8b 45 c8             	mov    -0x38(%ebp),%eax
    ab6c:	57                   	push   %edi
    ab6d:	8b 14 30             	mov    (%eax,%esi,1),%edx
    ab70:	52                   	push   %edx
    ab71:	e8 3a 4c 00 00       	call   f7b0 <inetcfg_link_get@plt>
    ab76:	83 c4 10             	add    $0x10,%esp
    ab79:	85 c0                	test   %eax,%eax
    ab7b:	75 b9                	jne    ab36 <ieee80211_connect+0x106>
    ab7d:	8a 45 e0             	mov    -0x20(%ebp),%al
    ab80:	38 45 d2             	cmp    %al,-0x2e(%ebp)
    ab83:	75 4b                	jne    abd0 <ieee80211_connect+0x1a0>
    ab85:	8a 45 e1             	mov    -0x1f(%ebp),%al
    ab88:	38 45 d3             	cmp    %al,-0x2d(%ebp)
    ab8b:	75 43                	jne    abd0 <ieee80211_connect+0x1a0>
    ab8d:	8a 45 e2             	mov    -0x1e(%ebp),%al
    ab90:	38 45 d4             	cmp    %al,-0x2c(%ebp)
    ab93:	75 3b                	jne    abd0 <ieee80211_connect+0x1a0>
    ab95:	8a 45 e3             	mov    -0x1d(%ebp),%al
    ab98:	38 45 d5             	cmp    %al,-0x2b(%ebp)
    ab9b:	75 33                	jne    abd0 <ieee80211_connect+0x1a0>
    ab9d:	8a 45 e4             	mov    -0x1c(%ebp),%al
    aba0:	38 45 d6             	cmp    %al,-0x2a(%ebp)
    aba3:	75 2b                	jne    abd0 <ieee80211_connect+0x1a0>
    aba5:	8a 45 e5             	mov    -0x1b(%ebp),%al
    aba8:	38 45 d7             	cmp    %al,-0x29(%ebp)
    abab:	75 23                	jne    abd0 <ieee80211_connect+0x1a0>
    abad:	8b 45 c8             	mov    -0x38(%ebp),%eax
    abb0:	8b 04 30             	mov    (%eax,%esi,1),%eax
    abb3:	83 f8 ff             	cmp    $0xffffffff,%eax
    abb6:	0f 84 7a ff ff ff    	je     ab36 <ieee80211_connect+0x106>
    abbc:	83 ec 0c             	sub    $0xc,%esp
    abbf:	50                   	push   %eax
    abc0:	e8 1b 4c 00 00       	call   f7e0 <dhcp_discover@plt>
    abc5:	83 c4 10             	add    $0x10,%esp
    abc8:	e9 10 ff ff ff       	jmp    aadd <ieee80211_connect+0xad>
    abcd:	8d 76 00             	lea    0x0(%esi),%esi
    abd0:	43                   	inc    %ebx
    abd1:	3b 5d cc             	cmp    -0x34(%ebp),%ebx
    abd4:	72 8a                	jb     ab60 <ieee80211_connect+0x130>
    abd6:	e9 5b ff ff ff       	jmp    ab36 <ieee80211_connect+0x106>
    abdb:	50                   	push   %eax
    abdc:	68 82 00 00 00       	push   $0x82
    abe1:	68 44 f0 00 00       	push   $0xf044
    abe6:	68 9c f0 00 00       	push   $0xf09c
    abeb:	e8 e0 4a 00 00       	call   f6d0 <assert_abort@plt>

0000abf0 <ieee80211_disconnect>:
    abf0:	55                   	push   %ebp
    abf1:	89 e5                	mov    %esp,%ebp
    abf3:	57                   	push   %edi
    abf4:	56                   	push   %esi
    abf5:	53                   	push   %ebx
    abf6:	81 ec 98 00 00 00    	sub    $0x98,%esp
    abfc:	8b 75 08             	mov    0x8(%ebp),%esi
    abff:	56                   	push   %esi
    ac00:	e8 ab 4c 00 00       	call   f8b0 <async_exchange_begin@plt>
    ac05:	83 c4 0c             	add    $0xc,%esp
    ac08:	89 c3                	mov    %eax,%ebx
    ac0a:	6a 00                	push   $0x0
    ac0c:	6a 00                	push   $0x0
    ac0e:	6a 00                	push   $0x0
    ac10:	6a 00                	push   $0x0
    ac12:	6a 00                	push   $0x0
    ac14:	6a 00                	push   $0x0
    ac16:	6a 00                	push   $0x0
    ac18:	6a 00                	push   $0x0
    ac1a:	6a 02                	push   $0x2
    ac1c:	68 06 04 00 00       	push   $0x406
    ac21:	50                   	push   %eax
    ac22:	e8 29 4a 00 00       	call   f650 <async_req_fast@plt>
    ac27:	83 c4 24             	add    $0x24,%esp
    ac2a:	89 c7                	mov    %eax,%edi
    ac2c:	53                   	push   %ebx
    ac2d:	e8 8e 4a 00 00       	call   f6c0 <async_exchange_end@plt>
    ac32:	83 c4 10             	add    $0x10,%esp
    ac35:	85 ff                	test   %edi,%edi
    ac37:	74 0f                	je     ac48 <ieee80211_disconnect+0x58>
    ac39:	8d 65 f4             	lea    -0xc(%ebp),%esp
    ac3c:	89 f8                	mov    %edi,%eax
    ac3e:	5b                   	pop    %ebx
    ac3f:	5e                   	pop    %esi
    ac40:	5f                   	pop    %edi
    ac41:	5d                   	pop    %ebp
    ac42:	c3                   	ret    
    ac43:	90                   	nop
    ac44:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ac48:	50                   	push   %eax
    ac49:	50                   	push   %eax
    ac4a:	8d 45 82             	lea    -0x7e(%ebp),%eax
    ac4d:	50                   	push   %eax
    ac4e:	56                   	push   %esi
    ac4f:	e8 2c e6 ff ff       	call   9280 <nic_get_address>
    ac54:	83 c4 10             	add    $0x10,%esp
    ac57:	89 c7                	mov    %eax,%edi
    ac59:	85 c0                	test   %eax,%eax
    ac5b:	75 dc                	jne    ac39 <ieee80211_disconnect+0x49>
    ac5d:	50                   	push   %eax
    ac5e:	50                   	push   %eax
    ac5f:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
    ac65:	50                   	push   %eax
    ac66:	8d 85 74 ff ff ff    	lea    -0x8c(%ebp),%eax
    ac6c:	50                   	push   %eax
    ac6d:	e8 1e 4b 00 00       	call   f790 <inetcfg_get_addr_list@plt>
    ac72:	83 c4 10             	add    $0x10,%esp
    ac75:	89 c7                	mov    %eax,%edi
    ac77:	85 c0                	test   %eax,%eax
    ac79:	75 be                	jne    ac39 <ieee80211_disconnect+0x49>
    ac7b:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
    ac81:	31 db                	xor    %ebx,%ebx
    ac83:	85 c0                	test   %eax,%eax
    ac85:	0f 84 9e 00 00 00    	je     ad29 <ieee80211_disconnect+0x139>
    ac8b:	90                   	nop
    ac8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ac90:	8d 45 98             	lea    -0x68(%ebp),%eax
    ac93:	8d 34 9d 00 00 00 00 	lea    0x0(,%ebx,4),%esi
    ac9a:	57                   	push   %edi
    ac9b:	57                   	push   %edi
    ac9c:	50                   	push   %eax
    ac9d:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
    aca3:	8b 04 30             	mov    (%eax,%esi,1),%eax
    aca6:	50                   	push   %eax
    aca7:	e8 e4 48 00 00       	call   f590 <inetcfg_addr_get@plt>
    acac:	83 c4 10             	add    $0x10,%esp
    acaf:	89 c7                	mov    %eax,%edi
    acb1:	85 c0                	test   %eax,%eax
    acb3:	75 84                	jne    ac39 <ieee80211_disconnect+0x49>
    acb5:	8d 45 88             	lea    -0x78(%ebp),%eax
    acb8:	8b 4d b0             	mov    -0x50(%ebp),%ecx
    acbb:	52                   	push   %edx
    acbc:	52                   	push   %edx
    acbd:	50                   	push   %eax
    acbe:	51                   	push   %ecx
    acbf:	e8 ec 4a 00 00       	call   f7b0 <inetcfg_link_get@plt>
    acc4:	83 c4 10             	add    $0x10,%esp
    acc7:	89 c7                	mov    %eax,%edi
    acc9:	85 c0                	test   %eax,%eax
    accb:	0f 85 68 ff ff ff    	jne    ac39 <ieee80211_disconnect+0x49>
    acd1:	8a 45 90             	mov    -0x70(%ebp),%al
    acd4:	38 45 82             	cmp    %al,-0x7e(%ebp)
    acd7:	75 43                	jne    ad1c <ieee80211_disconnect+0x12c>
    acd9:	8a 45 91             	mov    -0x6f(%ebp),%al
    acdc:	38 45 83             	cmp    %al,-0x7d(%ebp)
    acdf:	75 3b                	jne    ad1c <ieee80211_disconnect+0x12c>
    ace1:	8a 45 92             	mov    -0x6e(%ebp),%al
    ace4:	38 45 84             	cmp    %al,-0x7c(%ebp)
    ace7:	75 33                	jne    ad1c <ieee80211_disconnect+0x12c>
    ace9:	8a 45 93             	mov    -0x6d(%ebp),%al
    acec:	38 45 85             	cmp    %al,-0x7b(%ebp)
    acef:	75 2b                	jne    ad1c <ieee80211_disconnect+0x12c>
    acf1:	8a 45 94             	mov    -0x6c(%ebp),%al
    acf4:	38 45 86             	cmp    %al,-0x7a(%ebp)
    acf7:	75 23                	jne    ad1c <ieee80211_disconnect+0x12c>
    acf9:	8a 45 95             	mov    -0x6b(%ebp),%al
    acfc:	38 45 87             	cmp    %al,-0x79(%ebp)
    acff:	75 1b                	jne    ad1c <ieee80211_disconnect+0x12c>
    ad01:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    ad04:	50                   	push   %eax
    ad05:	50                   	push   %eax
    ad06:	68 a7 f0 00 00       	push   $0xf0a7
    ad0b:	52                   	push   %edx
    ad0c:	e8 1f 4a 00 00       	call   f730 <str_test_prefix@plt>
    ad11:	83 c4 10             	add    $0x10,%esp
    ad14:	84 c0                	test   %al,%al
    ad16:	0f 85 94 00 00 00    	jne    adb0 <ieee80211_disconnect+0x1c0>
    ad1c:	43                   	inc    %ebx
    ad1d:	39 9d 7c ff ff ff    	cmp    %ebx,-0x84(%ebp)
    ad23:	0f 87 67 ff ff ff    	ja     ac90 <ieee80211_disconnect+0xa0>
    ad29:	50                   	push   %eax
    ad2a:	50                   	push   %eax
    ad2b:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
    ad31:	50                   	push   %eax
    ad32:	8d 85 78 ff ff ff    	lea    -0x88(%ebp),%eax
    ad38:	50                   	push   %eax
    ad39:	e8 a2 49 00 00       	call   f6e0 <inetcfg_get_sroute_list@plt>
    ad3e:	83 c4 10             	add    $0x10,%esp
    ad41:	89 c7                	mov    %eax,%edi
    ad43:	85 c0                	test   %eax,%eax
    ad45:	0f 85 ee fe ff ff    	jne    ac39 <ieee80211_disconnect+0x49>
    ad4b:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
    ad51:	31 db                	xor    %ebx,%ebx
    ad53:	85 c0                	test   %eax,%eax
    ad55:	75 2d                	jne    ad84 <ieee80211_disconnect+0x194>
    ad57:	e9 dd fe ff ff       	jmp    ac39 <ieee80211_disconnect+0x49>
    ad5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ad60:	50                   	push   %eax
    ad61:	50                   	push   %eax
    ad62:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    ad65:	68 a7 f0 00 00       	push   $0xf0a7
    ad6a:	50                   	push   %eax
    ad6b:	e8 c0 49 00 00       	call   f730 <str_test_prefix@plt>
    ad70:	83 c4 10             	add    $0x10,%esp
    ad73:	84 c0                	test   %al,%al
    ad75:	75 5d                	jne    add4 <ieee80211_disconnect+0x1e4>
    ad77:	43                   	inc    %ebx
    ad78:	39 9d 7c ff ff ff    	cmp    %ebx,-0x84(%ebp)
    ad7e:	0f 86 b5 fe ff ff    	jbe    ac39 <ieee80211_disconnect+0x49>
    ad84:	50                   	push   %eax
    ad85:	50                   	push   %eax
    ad86:	8d 45 b8             	lea    -0x48(%ebp),%eax
    ad89:	8d 34 9d 00 00 00 00 	lea    0x0(,%ebx,4),%esi
    ad90:	50                   	push   %eax
    ad91:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
    ad97:	8b 04 30             	mov    (%eax,%esi,1),%eax
    ad9a:	50                   	push   %eax
    ad9b:	e8 b0 47 00 00       	call   f550 <inetcfg_sroute_get@plt>
    ada0:	83 c4 10             	add    $0x10,%esp
    ada3:	85 c0                	test   %eax,%eax
    ada5:	74 b9                	je     ad60 <ieee80211_disconnect+0x170>
    ada7:	89 c7                	mov    %eax,%edi
    ada9:	e9 8b fe ff ff       	jmp    ac39 <ieee80211_disconnect+0x49>
    adae:	66 90                	xchg   %ax,%ax
    adb0:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
    adb6:	83 ec 0c             	sub    $0xc,%esp
    adb9:	8b 04 30             	mov    (%eax,%esi,1),%eax
    adbc:	50                   	push   %eax
    adbd:	e8 3e 49 00 00       	call   f700 <inetcfg_addr_delete@plt>
    adc2:	83 c4 10             	add    $0x10,%esp
    adc5:	89 c7                	mov    %eax,%edi
    adc7:	85 c0                	test   %eax,%eax
    adc9:	0f 84 5a ff ff ff    	je     ad29 <ieee80211_disconnect+0x139>
    adcf:	e9 65 fe ff ff       	jmp    ac39 <ieee80211_disconnect+0x49>
    add4:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
    adda:	83 ec 0c             	sub    $0xc,%esp
    addd:	8b 0c 30             	mov    (%eax,%esi,1),%ecx
    ade0:	51                   	push   %ecx
    ade1:	e8 6a 4a 00 00       	call   f850 <inetcfg_sroute_delete@plt>
    ade6:	83 c4 10             	add    $0x10,%esp
    ade9:	89 c7                	mov    %eax,%edi
    adeb:	e9 49 fe ff ff       	jmp    ac39 <ieee80211_disconnect+0x49>

0000adf0 <remote_usb_unregister_endpoint>:
    adf0:	55                   	push   %ebp
    adf1:	89 e5                	mov    %esp,%ebp
    adf3:	53                   	push   %ebx
    adf4:	50                   	push   %eax
    adf5:	8b 45 0c             	mov    0xc(%ebp),%eax
    adf8:	8b 4d 08             	mov    0x8(%ebp),%ecx
    adfb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    adfe:	8b 55 14             	mov    0x14(%ebp),%edx
    ae01:	8b 40 1c             	mov    0x1c(%eax),%eax
    ae04:	85 c0                	test   %eax,%eax
    ae06:	74 20                	je     ae28 <remote_usb_unregister_endpoint+0x38>
    ae08:	83 ec 04             	sub    $0x4,%esp
    ae0b:	ff 72 0c             	pushl  0xc(%edx)
    ae0e:	0f bf 52 08          	movswl 0x8(%edx),%edx
    ae12:	52                   	push   %edx
    ae13:	51                   	push   %ecx
    ae14:	ff d0                	call   *%eax
    ae16:	89 5d 08             	mov    %ebx,0x8(%ebp)
    ae19:	83 c4 10             	add    $0x10,%esp
    ae1c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    ae1f:	89 45 0c             	mov    %eax,0xc(%ebp)
    ae22:	c9                   	leave  
    ae23:	e9 38 48 00 00       	jmp    f660 <async_answer_0@plt>
    ae28:	89 5d 08             	mov    %ebx,0x8(%ebp)
    ae2b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    ae2e:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    ae35:	c9                   	leave  
    ae36:	e9 25 48 00 00       	jmp    f660 <async_answer_0@plt>
    ae3b:	90                   	nop
    ae3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000ae40 <remote_usb_register_endpoint>:
    ae40:	55                   	push   %ebp
    ae41:	89 e5                	mov    %esp,%ebp
    ae43:	57                   	push   %edi
    ae44:	56                   	push   %esi
    ae45:	53                   	push   %ebx
    ae46:	83 ec 0c             	sub    $0xc,%esp
    ae49:	8b 45 0c             	mov    0xc(%ebp),%eax
    ae4c:	8b 75 08             	mov    0x8(%ebp),%esi
    ae4f:	8b 5d 10             	mov    0x10(%ebp),%ebx
    ae52:	8b 55 14             	mov    0x14(%ebp),%edx
    ae55:	8b 48 18             	mov    0x18(%eax),%ecx
    ae58:	85 c9                	test   %ecx,%ecx
    ae5a:	74 44                	je     aea0 <remote_usb_register_endpoint+0x60>
    ae5c:	8b 42 0c             	mov    0xc(%edx),%eax
    ae5f:	57                   	push   %edi
    ae60:	89 c7                	mov    %eax,%edi
    ae62:	c1 ef 18             	shr    $0x18,%edi
    ae65:	57                   	push   %edi
    ae66:	89 c7                	mov    %eax,%edi
    ae68:	c1 ef 10             	shr    $0x10,%edi
    ae6b:	81 e7 ff 00 00 00    	and    $0xff,%edi
    ae71:	57                   	push   %edi
    ae72:	8b 7a 10             	mov    0x10(%edx),%edi
    ae75:	57                   	push   %edi
    ae76:	0f b6 fc             	movzbl %ah,%edi
    ae79:	25 ff 00 00 00       	and    $0xff,%eax
    ae7e:	57                   	push   %edi
    ae7f:	50                   	push   %eax
    ae80:	0f bf 42 08          	movswl 0x8(%edx),%eax
    ae84:	50                   	push   %eax
    ae85:	56                   	push   %esi
    ae86:	ff d1                	call   *%ecx
    ae88:	89 5d 08             	mov    %ebx,0x8(%ebp)
    ae8b:	89 45 0c             	mov    %eax,0xc(%ebp)
    ae8e:	83 c4 20             	add    $0x20,%esp
    ae91:	8d 65 f4             	lea    -0xc(%ebp),%esp
    ae94:	5b                   	pop    %ebx
    ae95:	5e                   	pop    %esi
    ae96:	5f                   	pop    %edi
    ae97:	5d                   	pop    %ebp
    ae98:	e9 c3 47 00 00       	jmp    f660 <async_answer_0@plt>
    ae9d:	8d 76 00             	lea    0x0(%esi),%esi
    aea0:	89 5d 08             	mov    %ebx,0x8(%ebp)
    aea3:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    aeaa:	8d 65 f4             	lea    -0xc(%ebp),%esp
    aead:	5b                   	pop    %ebx
    aeae:	5e                   	pop    %esi
    aeaf:	5f                   	pop    %edi
    aeb0:	5d                   	pop    %ebp
    aeb1:	e9 aa 47 00 00       	jmp    f660 <async_answer_0@plt>
    aeb6:	8d 76 00             	lea    0x0(%esi),%esi
    aeb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000aec0 <remote_usb_device_remove>:
    aec0:	55                   	push   %ebp
    aec1:	89 e5                	mov    %esp,%ebp
    aec3:	53                   	push   %ebx
    aec4:	53                   	push   %ebx
    aec5:	8b 45 0c             	mov    0xc(%ebp),%eax
    aec8:	8b 55 08             	mov    0x8(%ebp),%edx
    aecb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    aece:	8b 4d 14             	mov    0x14(%ebp),%ecx
    aed1:	8b 40 14             	mov    0x14(%eax),%eax
    aed4:	85 c0                	test   %eax,%eax
    aed6:	74 20                	je     aef8 <remote_usb_device_remove+0x38>
    aed8:	83 ec 08             	sub    $0x8,%esp
    aedb:	8b 49 08             	mov    0x8(%ecx),%ecx
    aede:	51                   	push   %ecx
    aedf:	52                   	push   %edx
    aee0:	ff d0                	call   *%eax
    aee2:	89 5d 08             	mov    %ebx,0x8(%ebp)
    aee5:	83 c4 10             	add    $0x10,%esp
    aee8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    aeeb:	89 45 0c             	mov    %eax,0xc(%ebp)
    aeee:	c9                   	leave  
    aeef:	e9 6c 47 00 00       	jmp    f660 <async_answer_0@plt>
    aef4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    aef8:	89 5d 08             	mov    %ebx,0x8(%ebp)
    aefb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    aefe:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    af05:	c9                   	leave  
    af06:	e9 55 47 00 00       	jmp    f660 <async_answer_0@plt>
    af0b:	90                   	nop
    af0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000af10 <remote_usb_device_enumerate>:
    af10:	55                   	push   %ebp
    af11:	89 e5                	mov    %esp,%ebp
    af13:	53                   	push   %ebx
    af14:	53                   	push   %ebx
    af15:	8b 45 0c             	mov    0xc(%ebp),%eax
    af18:	8b 55 08             	mov    0x8(%ebp),%edx
    af1b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    af1e:	8b 4d 14             	mov    0x14(%ebp),%ecx
    af21:	8b 40 10             	mov    0x10(%eax),%eax
    af24:	85 c0                	test   %eax,%eax
    af26:	74 20                	je     af48 <remote_usb_device_enumerate+0x38>
    af28:	83 ec 08             	sub    $0x8,%esp
    af2b:	8b 49 08             	mov    0x8(%ecx),%ecx
    af2e:	51                   	push   %ecx
    af2f:	52                   	push   %edx
    af30:	ff d0                	call   *%eax
    af32:	89 5d 08             	mov    %ebx,0x8(%ebp)
    af35:	83 c4 10             	add    $0x10,%esp
    af38:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    af3b:	89 45 0c             	mov    %eax,0xc(%ebp)
    af3e:	c9                   	leave  
    af3f:	e9 1c 47 00 00       	jmp    f660 <async_answer_0@plt>
    af44:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    af48:	89 5d 08             	mov    %ebx,0x8(%ebp)
    af4b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    af4e:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    af55:	c9                   	leave  
    af56:	e9 05 47 00 00       	jmp    f660 <async_answer_0@plt>
    af5b:	90                   	nop
    af5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000af60 <remote_usb_release_default_address>:
    af60:	55                   	push   %ebp
    af61:	89 e5                	mov    %esp,%ebp
    af63:	53                   	push   %ebx
    af64:	50                   	push   %eax
    af65:	8b 45 0c             	mov    0xc(%ebp),%eax
    af68:	8b 55 08             	mov    0x8(%ebp),%edx
    af6b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    af6e:	8b 40 0c             	mov    0xc(%eax),%eax
    af71:	85 c0                	test   %eax,%eax
    af73:	74 1b                	je     af90 <remote_usb_release_default_address+0x30>
    af75:	83 ec 0c             	sub    $0xc,%esp
    af78:	52                   	push   %edx
    af79:	ff d0                	call   *%eax
    af7b:	89 5d 08             	mov    %ebx,0x8(%ebp)
    af7e:	83 c4 10             	add    $0x10,%esp
    af81:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    af84:	89 45 0c             	mov    %eax,0xc(%ebp)
    af87:	c9                   	leave  
    af88:	e9 d3 46 00 00       	jmp    f660 <async_answer_0@plt>
    af8d:	8d 76 00             	lea    0x0(%esi),%esi
    af90:	89 5d 08             	mov    %ebx,0x8(%ebp)
    af93:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    af96:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    af9d:	c9                   	leave  
    af9e:	e9 bd 46 00 00       	jmp    f660 <async_answer_0@plt>
    afa3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    afa9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000afb0 <remote_usb_reserve_default_address>:
    afb0:	55                   	push   %ebp
    afb1:	89 e5                	mov    %esp,%ebp
    afb3:	53                   	push   %ebx
    afb4:	53                   	push   %ebx
    afb5:	8b 45 0c             	mov    0xc(%ebp),%eax
    afb8:	8b 55 08             	mov    0x8(%ebp),%edx
    afbb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    afbe:	8b 4d 14             	mov    0x14(%ebp),%ecx
    afc1:	8b 40 08             	mov    0x8(%eax),%eax
    afc4:	85 c0                	test   %eax,%eax
    afc6:	74 20                	je     afe8 <remote_usb_reserve_default_address+0x38>
    afc8:	83 ec 08             	sub    $0x8,%esp
    afcb:	8b 49 08             	mov    0x8(%ecx),%ecx
    afce:	51                   	push   %ecx
    afcf:	52                   	push   %edx
    afd0:	ff d0                	call   *%eax
    afd2:	89 5d 08             	mov    %ebx,0x8(%ebp)
    afd5:	83 c4 10             	add    $0x10,%esp
    afd8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    afdb:	89 45 0c             	mov    %eax,0xc(%ebp)
    afde:	c9                   	leave  
    afdf:	e9 7c 46 00 00       	jmp    f660 <async_answer_0@plt>
    afe4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    afe8:	89 5d 08             	mov    %ebx,0x8(%ebp)
    afeb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    afee:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    aff5:	c9                   	leave  
    aff6:	e9 65 46 00 00       	jmp    f660 <async_answer_0@plt>
    affb:	90                   	nop
    affc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000b000 <remote_usb_get_my_device_handle>:
    b000:	55                   	push   %ebp
    b001:	89 e5                	mov    %esp,%ebp
    b003:	53                   	push   %ebx
    b004:	83 ec 14             	sub    $0x14,%esp
    b007:	8b 45 0c             	mov    0xc(%ebp),%eax
    b00a:	8b 5d 10             	mov    0x10(%ebp),%ebx
    b00d:	8b 40 04             	mov    0x4(%eax),%eax
    b010:	85 c0                	test   %eax,%eax
    b012:	74 3c                	je     b050 <remote_usb_get_my_device_handle+0x50>
    b014:	8b 4d 08             	mov    0x8(%ebp),%ecx
    b017:	52                   	push   %edx
    b018:	52                   	push   %edx
    b019:	8d 55 f4             	lea    -0xc(%ebp),%edx
    b01c:	52                   	push   %edx
    b01d:	51                   	push   %ecx
    b01e:	ff d0                	call   *%eax
    b020:	83 c4 10             	add    $0x10,%esp
    b023:	85 c0                	test   %eax,%eax
    b025:	75 19                	jne    b040 <remote_usb_get_my_device_handle+0x40>
    b027:	8b 55 f4             	mov    -0xc(%ebp),%edx
    b02a:	50                   	push   %eax
    b02b:	52                   	push   %edx
    b02c:	6a 00                	push   $0x0
    b02e:	53                   	push   %ebx
    b02f:	e8 6c 48 00 00       	call   f8a0 <async_answer_1@plt>
    b034:	83 c4 10             	add    $0x10,%esp
    b037:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    b03a:	c9                   	leave  
    b03b:	c3                   	ret    
    b03c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b040:	51                   	push   %ecx
    b041:	51                   	push   %ecx
    b042:	50                   	push   %eax
    b043:	53                   	push   %ebx
    b044:	e8 17 46 00 00       	call   f660 <async_answer_0@plt>
    b049:	83 c4 10             	add    $0x10,%esp
    b04c:	eb d9                	jmp    b027 <remote_usb_get_my_device_handle+0x27>
    b04e:	66 90                	xchg   %ax,%ax
    b050:	50                   	push   %eax
    b051:	50                   	push   %eax
    b052:	6a f5                	push   $0xfffffff5
    b054:	53                   	push   %ebx
    b055:	e8 06 46 00 00       	call   f660 <async_answer_0@plt>
    b05a:	83 c4 10             	add    $0x10,%esp
    b05d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    b060:	c9                   	leave  
    b061:	c3                   	ret    
    b062:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b069:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b070 <remote_usb_get_my_interface>:
    b070:	55                   	push   %ebp
    b071:	89 e5                	mov    %esp,%ebp
    b073:	83 ec 18             	sub    $0x18,%esp
    b076:	8b 45 0c             	mov    0xc(%ebp),%eax
    b079:	8b 00                	mov    (%eax),%eax
    b07b:	85 c0                	test   %eax,%eax
    b07d:	74 41                	je     b0c0 <remote_usb_get_my_interface+0x50>
    b07f:	8b 4d 08             	mov    0x8(%ebp),%ecx
    b082:	52                   	push   %edx
    b083:	52                   	push   %edx
    b084:	8d 55 f4             	lea    -0xc(%ebp),%edx
    b087:	52                   	push   %edx
    b088:	51                   	push   %ecx
    b089:	ff d0                	call   *%eax
    b08b:	83 c4 10             	add    $0x10,%esp
    b08e:	85 c0                	test   %eax,%eax
    b090:	74 16                	je     b0a8 <remote_usb_get_my_interface+0x38>
    b092:	8b 4d 10             	mov    0x10(%ebp),%ecx
    b095:	52                   	push   %edx
    b096:	52                   	push   %edx
    b097:	50                   	push   %eax
    b098:	51                   	push   %ecx
    b099:	e8 c2 45 00 00       	call   f660 <async_answer_0@plt>
    b09e:	83 c4 10             	add    $0x10,%esp
    b0a1:	c9                   	leave  
    b0a2:	c3                   	ret    
    b0a3:	90                   	nop
    b0a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b0a8:	8b 55 f4             	mov    -0xc(%ebp),%edx
    b0ab:	8b 4d 10             	mov    0x10(%ebp),%ecx
    b0ae:	50                   	push   %eax
    b0af:	52                   	push   %edx
    b0b0:	6a 00                	push   $0x0
    b0b2:	51                   	push   %ecx
    b0b3:	e8 e8 47 00 00       	call   f8a0 <async_answer_1@plt>
    b0b8:	83 c4 10             	add    $0x10,%esp
    b0bb:	c9                   	leave  
    b0bc:	c3                   	ret    
    b0bd:	8d 76 00             	lea    0x0(%esi),%esi
    b0c0:	50                   	push   %eax
    b0c1:	50                   	push   %eax
    b0c2:	8b 45 10             	mov    0x10(%ebp),%eax
    b0c5:	6a f5                	push   $0xfffffff5
    b0c7:	50                   	push   %eax
    b0c8:	e8 93 45 00 00       	call   f660 <async_answer_0@plt>
    b0cd:	83 c4 10             	add    $0x10,%esp
    b0d0:	c9                   	leave  
    b0d1:	c3                   	ret    
    b0d2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b0d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b0e0 <callback_out>:
    b0e0:	55                   	push   %ebp
    b0e1:	89 e5                	mov    %esp,%ebp
    b0e3:	53                   	push   %ebx
    b0e4:	83 ec 0c             	sub    $0xc,%esp
    b0e7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    b0ea:	8b 45 08             	mov    0x8(%ebp),%eax
    b0ed:	50                   	push   %eax
    b0ee:	8b 13                	mov    (%ebx),%edx
    b0f0:	52                   	push   %edx
    b0f1:	e8 6a 45 00 00       	call   f660 <async_answer_0@plt>
    b0f6:	8b 43 08             	mov    0x8(%ebx),%eax
    b0f9:	83 c4 10             	add    $0x10,%esp
    b0fc:	85 c0                	test   %eax,%eax
    b0fe:	74 0c                	je     b10c <callback_out+0x2c>
    b100:	83 ec 0c             	sub    $0xc,%esp
    b103:	50                   	push   %eax
    b104:	e8 97 48 00 00       	call   f9a0 <free@plt>
    b109:	83 c4 10             	add    $0x10,%esp
    b10c:	89 5d 08             	mov    %ebx,0x8(%ebp)
    b10f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    b112:	c9                   	leave  
    b113:	e9 88 48 00 00       	jmp    f9a0 <free@plt>
    b118:	90                   	nop
    b119:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000b120 <callback_in>:
    b120:	55                   	push   %ebp
    b121:	89 e5                	mov    %esp,%ebp
    b123:	53                   	push   %ebx
    b124:	53                   	push   %ebx
    b125:	8b 45 08             	mov    0x8(%ebp),%eax
    b128:	8b 55 0c             	mov    0xc(%ebp),%edx
    b12b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    b12e:	85 c0                	test   %eax,%eax
    b130:	75 36                	jne    b168 <callback_in+0x48>
    b132:	8b 43 04             	mov    0x4(%ebx),%eax
    b135:	85 c0                	test   %eax,%eax
    b137:	75 4f                	jne    b188 <callback_in+0x68>
    b139:	50                   	push   %eax
    b13a:	50                   	push   %eax
    b13b:	6a 00                	push   $0x0
    b13d:	8b 13                	mov    (%ebx),%edx
    b13f:	52                   	push   %edx
    b140:	e8 1b 45 00 00       	call   f660 <async_answer_0@plt>
    b145:	8b 43 08             	mov    0x8(%ebx),%eax
    b148:	83 c4 10             	add    $0x10,%esp
    b14b:	85 c0                	test   %eax,%eax
    b14d:	74 0c                	je     b15b <callback_in+0x3b>
    b14f:	83 ec 0c             	sub    $0xc,%esp
    b152:	50                   	push   %eax
    b153:	e8 48 48 00 00       	call   f9a0 <free@plt>
    b158:	83 c4 10             	add    $0x10,%esp
    b15b:	89 5d 08             	mov    %ebx,0x8(%ebp)
    b15e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    b161:	c9                   	leave  
    b162:	e9 39 48 00 00       	jmp    f9a0 <free@plt>
    b167:	90                   	nop
    b168:	52                   	push   %edx
    b169:	52                   	push   %edx
    b16a:	50                   	push   %eax
    b16b:	8b 0b                	mov    (%ebx),%ecx
    b16d:	51                   	push   %ecx
    b16e:	e8 ed 44 00 00       	call   f660 <async_answer_0@plt>
    b173:	8b 43 04             	mov    0x4(%ebx),%eax
    b176:	83 c4 10             	add    $0x10,%esp
    b179:	85 c0                	test   %eax,%eax
    b17b:	75 23                	jne    b1a0 <callback_in+0x80>
    b17d:	8b 43 08             	mov    0x8(%ebx),%eax
    b180:	85 c0                	test   %eax,%eax
    b182:	75 cb                	jne    b14f <callback_in+0x2f>
    b184:	eb d5                	jmp    b15b <callback_in+0x3b>
    b186:	66 90                	xchg   %ax,%ax
    b188:	51                   	push   %ecx
    b189:	52                   	push   %edx
    b18a:	8b 53 08             	mov    0x8(%ebx),%edx
    b18d:	52                   	push   %edx
    b18e:	50                   	push   %eax
    b18f:	e8 5c 44 00 00       	call   f5f0 <async_data_read_finalize@plt>
    b194:	83 c4 10             	add    $0x10,%esp
    b197:	eb a0                	jmp    b139 <callback_in+0x19>
    b199:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b1a0:	51                   	push   %ecx
    b1a1:	51                   	push   %ecx
    b1a2:	6a ef                	push   $0xffffffef
    b1a4:	50                   	push   %eax
    b1a5:	e8 b6 44 00 00       	call   f660 <async_answer_0@plt>
    b1aa:	8b 43 08             	mov    0x8(%ebx),%eax
    b1ad:	83 c4 10             	add    $0x10,%esp
    b1b0:	85 c0                	test   %eax,%eax
    b1b2:	75 9b                	jne    b14f <callback_in+0x2f>
    b1b4:	eb a5                	jmp    b15b <callback_in+0x3b>
    b1b6:	8d 76 00             	lea    0x0(%esi),%esi
    b1b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b1c0 <remote_usb_write>:
    b1c0:	55                   	push   %ebp
    b1c1:	89 e5                	mov    %esp,%ebp
    b1c3:	57                   	push   %edi
    b1c4:	56                   	push   %esi
    b1c5:	53                   	push   %ebx
    b1c6:	83 ec 2c             	sub    $0x2c,%esp
    b1c9:	8b 55 08             	mov    0x8(%ebp),%edx
    b1cc:	8b 45 14             	mov    0x14(%ebp),%eax
    b1cf:	85 d2                	test   %edx,%edx
    b1d1:	0f 84 53 01 00 00    	je     b32a <remote_usb_write+0x16a>
    b1d7:	8b 75 0c             	mov    0xc(%ebp),%esi
    b1da:	85 f6                	test   %esi,%esi
    b1dc:	0f 84 33 01 00 00    	je     b315 <remote_usb_write+0x155>
    b1e2:	85 c0                	test   %eax,%eax
    b1e4:	0f 84 16 01 00 00    	je     b300 <remote_usb_write+0x140>
    b1ea:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    b1ed:	8b 51 24             	mov    0x24(%ecx),%edx
    b1f0:	85 d2                	test   %edx,%edx
    b1f2:	0f 84 d8 00 00 00    	je     b2d0 <remote_usb_write+0x110>
    b1f8:	83 ec 0c             	sub    $0xc,%esp
    b1fb:	8b 50 14             	mov    0x14(%eax),%edx
    b1fe:	8b 70 08             	mov    0x8(%eax),%esi
    b201:	8b 58 0c             	mov    0xc(%eax),%ebx
    b204:	8b 40 10             	mov    0x10(%eax),%eax
    b207:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    b20a:	6a 0c                	push   $0xc
    b20c:	89 45 d0             	mov    %eax,-0x30(%ebp)
    b20f:	e8 0c 44 00 00       	call   f620 <malloc@plt>
    b214:	83 c4 10             	add    $0x10,%esp
    b217:	89 c7                	mov    %eax,%edi
    b219:	85 c0                	test   %eax,%eax
    b21b:	0f 84 c7 00 00 00    	je     b2e8 <remote_usb_write+0x128>
    b221:	8b 45 10             	mov    0x10(%ebp),%eax
    b224:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
    b22b:	89 07                	mov    %eax,(%edi)
    b22d:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%edi)
    b234:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    b23b:	85 db                	test   %ebx,%ebx
    b23d:	75 31                	jne    b270 <remote_usb_write+0xb0>
    b23f:	31 c0                	xor    %eax,%eax
    b241:	31 c9                	xor    %ecx,%ecx
    b243:	57                   	push   %edi
    b244:	68 e0 b0 00 00       	push   $0xb0e0
    b249:	51                   	push   %ecx
    b24a:	50                   	push   %eax
    b24b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    b24e:	50                   	push   %eax
    b24f:	8b 45 d0             	mov    -0x30(%ebp),%eax
    b252:	50                   	push   %eax
    b253:	8b 45 08             	mov    0x8(%ebp),%eax
    b256:	0f bf f6             	movswl %si,%esi
    b259:	56                   	push   %esi
    b25a:	50                   	push   %eax
    b25b:	8b 45 0c             	mov    0xc(%ebp),%eax
    b25e:	ff 50 24             	call   *0x24(%eax)
    b261:	83 c4 20             	add    $0x20,%esp
    b264:	85 c0                	test   %eax,%eax
    b266:	75 30                	jne    b298 <remote_usb_write+0xd8>
    b268:	8d 65 f4             	lea    -0xc(%ebp),%esp
    b26b:	5b                   	pop    %ebx
    b26c:	5e                   	pop    %esi
    b26d:	5f                   	pop    %edi
    b26e:	5d                   	pop    %ebp
    b26f:	c3                   	ret    
    b270:	50                   	push   %eax
    b271:	50                   	push   %eax
    b272:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    b275:	50                   	push   %eax
    b276:	8d 47 08             	lea    0x8(%edi),%eax
    b279:	6a 00                	push   $0x0
    b27b:	53                   	push   %ebx
    b27c:	6a 01                	push   $0x1
    b27e:	6a 00                	push   $0x0
    b280:	50                   	push   %eax
    b281:	e8 aa 46 00 00       	call   f930 <async_data_write_accept@plt>
    b286:	83 c4 20             	add    $0x20,%esp
    b289:	85 c0                	test   %eax,%eax
    b28b:	75 0b                	jne    b298 <remote_usb_write+0xd8>
    b28d:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    b290:	8b 47 08             	mov    0x8(%edi),%eax
    b293:	eb ae                	jmp    b243 <remote_usb_write+0x83>
    b295:	8d 76 00             	lea    0x0(%esi),%esi
    b298:	8b 5d 10             	mov    0x10(%ebp),%ebx
    b29b:	51                   	push   %ecx
    b29c:	51                   	push   %ecx
    b29d:	50                   	push   %eax
    b29e:	53                   	push   %ebx
    b29f:	e8 bc 43 00 00       	call   f660 <async_answer_0@plt>
    b2a4:	8b 47 08             	mov    0x8(%edi),%eax
    b2a7:	83 c4 10             	add    $0x10,%esp
    b2aa:	85 c0                	test   %eax,%eax
    b2ac:	74 0c                	je     b2ba <remote_usb_write+0xfa>
    b2ae:	83 ec 0c             	sub    $0xc,%esp
    b2b1:	50                   	push   %eax
    b2b2:	e8 e9 46 00 00       	call   f9a0 <free@plt>
    b2b7:	83 c4 10             	add    $0x10,%esp
    b2ba:	83 ec 0c             	sub    $0xc,%esp
    b2bd:	57                   	push   %edi
    b2be:	e8 dd 46 00 00       	call   f9a0 <free@plt>
    b2c3:	83 c4 10             	add    $0x10,%esp
    b2c6:	8d 65 f4             	lea    -0xc(%ebp),%esp
    b2c9:	5b                   	pop    %ebx
    b2ca:	5e                   	pop    %esi
    b2cb:	5f                   	pop    %edi
    b2cc:	5d                   	pop    %ebp
    b2cd:	c3                   	ret    
    b2ce:	66 90                	xchg   %ax,%ax
    b2d0:	50                   	push   %eax
    b2d1:	50                   	push   %eax
    b2d2:	8b 45 10             	mov    0x10(%ebp),%eax
    b2d5:	6a f5                	push   $0xfffffff5
    b2d7:	50                   	push   %eax
    b2d8:	e8 83 43 00 00       	call   f660 <async_answer_0@plt>
    b2dd:	83 c4 10             	add    $0x10,%esp
    b2e0:	8d 65 f4             	lea    -0xc(%ebp),%esp
    b2e3:	5b                   	pop    %ebx
    b2e4:	5e                   	pop    %esi
    b2e5:	5f                   	pop    %edi
    b2e6:	5d                   	pop    %ebp
    b2e7:	c3                   	ret    
    b2e8:	8b 55 10             	mov    0x10(%ebp),%edx
    b2eb:	50                   	push   %eax
    b2ec:	50                   	push   %eax
    b2ed:	6a fe                	push   $0xfffffffe
    b2ef:	52                   	push   %edx
    b2f0:	e8 6b 43 00 00       	call   f660 <async_answer_0@plt>
    b2f5:	83 c4 10             	add    $0x10,%esp
    b2f8:	8d 65 f4             	lea    -0xc(%ebp),%esp
    b2fb:	5b                   	pop    %ebx
    b2fc:	5e                   	pop    %esi
    b2fd:	5f                   	pop    %edi
    b2fe:	5d                   	pop    %ebp
    b2ff:	c3                   	ret    
    b300:	51                   	push   %ecx
    b301:	68 42 02 00 00       	push   $0x242
    b306:	68 e4 f0 00 00       	push   $0xf0e4
    b30b:	68 03 f1 00 00       	push   $0xf103
    b310:	e8 bb 43 00 00       	call   f6d0 <assert_abort@plt>
    b315:	53                   	push   %ebx
    b316:	68 41 02 00 00       	push   $0x241
    b31b:	68 e4 f0 00 00       	push   $0xf0e4
    b320:	68 fd f0 00 00       	push   $0xf0fd
    b325:	e8 a6 43 00 00       	call   f6d0 <assert_abort@plt>
    b32a:	57                   	push   %edi
    b32b:	68 40 02 00 00       	push   $0x240
    b330:	68 e4 f0 00 00       	push   $0xf0e4
    b335:	68 f9 f0 00 00       	push   $0xf0f9
    b33a:	e8 91 43 00 00       	call   f6d0 <assert_abort@plt>
    b33f:	90                   	nop

0000b340 <remote_usb_read>:
    b340:	55                   	push   %ebp
    b341:	89 e5                	mov    %esp,%ebp
    b343:	57                   	push   %edi
    b344:	56                   	push   %esi
    b345:	53                   	push   %ebx
    b346:	83 ec 2c             	sub    $0x2c,%esp
    b349:	8b 7d 08             	mov    0x8(%ebp),%edi
    b34c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    b34f:	8b 45 14             	mov    0x14(%ebp),%eax
    b352:	85 ff                	test   %edi,%edi
    b354:	0f 84 4c 01 00 00    	je     b4a6 <remote_usb_read+0x166>
    b35a:	85 db                	test   %ebx,%ebx
    b35c:	0f 84 6e 01 00 00    	je     b4d0 <remote_usb_read+0x190>
    b362:	85 c0                	test   %eax,%eax
    b364:	0f 84 51 01 00 00    	je     b4bb <remote_usb_read+0x17b>
    b36a:	8b 53 20             	mov    0x20(%ebx),%edx
    b36d:	85 d2                	test   %edx,%edx
    b36f:	0f 84 eb 00 00 00    	je     b460 <remote_usb_read+0x120>
    b375:	83 ec 0c             	sub    $0xc,%esp
    b378:	8b 50 10             	mov    0x10(%eax),%edx
    b37b:	8b 70 08             	mov    0x8(%eax),%esi
    b37e:	8b 40 0c             	mov    0xc(%eax),%eax
    b381:	89 45 d0             	mov    %eax,-0x30(%ebp)
    b384:	6a 0c                	push   $0xc
    b386:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    b389:	e8 92 42 00 00       	call   f620 <malloc@plt>
    b38e:	83 c4 10             	add    $0x10,%esp
    b391:	89 c7                	mov    %eax,%edi
    b393:	85 c0                	test   %eax,%eax
    b395:	0f 84 dd 00 00 00    	je     b478 <remote_usb_read+0x138>
    b39b:	8b 45 10             	mov    0x10(%ebp),%eax
    b39e:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
    b3a5:	89 07                	mov    %eax,(%edi)
    b3a7:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%edi)
    b3ae:	50                   	push   %eax
    b3af:	50                   	push   %eax
    b3b0:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    b3b3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    b3ba:	50                   	push   %eax
    b3bb:	8d 47 04             	lea    0x4(%edi),%eax
    b3be:	50                   	push   %eax
    b3bf:	e8 4c 44 00 00       	call   f810 <async_data_read_receive@plt>
    b3c4:	83 c4 10             	add    $0x10,%esp
    b3c7:	84 c0                	test   %al,%al
    b3c9:	75 3d                	jne    b408 <remote_usb_read+0xc8>
    b3cb:	53                   	push   %ebx
    b3cc:	53                   	push   %ebx
    b3cd:	6a f8                	push   $0xfffffff8
    b3cf:	8b 4d 10             	mov    0x10(%ebp),%ecx
    b3d2:	51                   	push   %ecx
    b3d3:	e8 88 42 00 00       	call   f660 <async_answer_0@plt>
    b3d8:	8b 47 08             	mov    0x8(%edi),%eax
    b3db:	83 c4 10             	add    $0x10,%esp
    b3de:	85 c0                	test   %eax,%eax
    b3e0:	74 0c                	je     b3ee <remote_usb_read+0xae>
    b3e2:	83 ec 0c             	sub    $0xc,%esp
    b3e5:	50                   	push   %eax
    b3e6:	e8 b5 45 00 00       	call   f9a0 <free@plt>
    b3eb:	83 c4 10             	add    $0x10,%esp
    b3ee:	83 ec 0c             	sub    $0xc,%esp
    b3f1:	57                   	push   %edi
    b3f2:	e8 a9 45 00 00       	call   f9a0 <free@plt>
    b3f7:	83 c4 10             	add    $0x10,%esp
    b3fa:	8d 65 f4             	lea    -0xc(%ebp),%esp
    b3fd:	5b                   	pop    %ebx
    b3fe:	5e                   	pop    %esi
    b3ff:	5f                   	pop    %edi
    b400:	5d                   	pop    %ebp
    b401:	c3                   	ret    
    b402:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b408:	83 ec 0c             	sub    $0xc,%esp
    b40b:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    b40e:	51                   	push   %ecx
    b40f:	e8 0c 42 00 00       	call   f620 <malloc@plt>
    b414:	83 c4 10             	add    $0x10,%esp
    b417:	89 47 08             	mov    %eax,0x8(%edi)
    b41a:	85 c0                	test   %eax,%eax
    b41c:	74 72                	je     b490 <remote_usb_read+0x150>
    b41e:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    b421:	57                   	push   %edi
    b422:	68 20 b1 00 00       	push   $0xb120
    b427:	51                   	push   %ecx
    b428:	50                   	push   %eax
    b429:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    b42c:	50                   	push   %eax
    b42d:	8b 45 d0             	mov    -0x30(%ebp),%eax
    b430:	50                   	push   %eax
    b431:	8b 45 08             	mov    0x8(%ebp),%eax
    b434:	0f bf f6             	movswl %si,%esi
    b437:	56                   	push   %esi
    b438:	50                   	push   %eax
    b439:	ff 53 20             	call   *0x20(%ebx)
    b43c:	83 c4 20             	add    $0x20,%esp
    b43f:	89 c3                	mov    %eax,%ebx
    b441:	85 c0                	test   %eax,%eax
    b443:	74 b5                	je     b3fa <remote_usb_read+0xba>
    b445:	56                   	push   %esi
    b446:	56                   	push   %esi
    b447:	50                   	push   %eax
    b448:	8b 47 04             	mov    0x4(%edi),%eax
    b44b:	50                   	push   %eax
    b44c:	e8 0f 42 00 00       	call   f660 <async_answer_0@plt>
    b451:	58                   	pop    %eax
    b452:	5a                   	pop    %edx
    b453:	53                   	push   %ebx
    b454:	e9 76 ff ff ff       	jmp    b3cf <remote_usb_read+0x8f>
    b459:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b460:	50                   	push   %eax
    b461:	50                   	push   %eax
    b462:	8b 45 10             	mov    0x10(%ebp),%eax
    b465:	6a f5                	push   $0xfffffff5
    b467:	50                   	push   %eax
    b468:	e8 f3 41 00 00       	call   f660 <async_answer_0@plt>
    b46d:	83 c4 10             	add    $0x10,%esp
    b470:	8d 65 f4             	lea    -0xc(%ebp),%esp
    b473:	5b                   	pop    %ebx
    b474:	5e                   	pop    %esi
    b475:	5f                   	pop    %edi
    b476:	5d                   	pop    %ebp
    b477:	c3                   	ret    
    b478:	8b 55 10             	mov    0x10(%ebp),%edx
    b47b:	50                   	push   %eax
    b47c:	50                   	push   %eax
    b47d:	6a fe                	push   $0xfffffffe
    b47f:	52                   	push   %edx
    b480:	e8 db 41 00 00       	call   f660 <async_answer_0@plt>
    b485:	83 c4 10             	add    $0x10,%esp
    b488:	8d 65 f4             	lea    -0xc(%ebp),%esp
    b48b:	5b                   	pop    %ebx
    b48c:	5e                   	pop    %esi
    b48d:	5f                   	pop    %edi
    b48e:	5d                   	pop    %ebp
    b48f:	c3                   	ret    
    b490:	50                   	push   %eax
    b491:	50                   	push   %eax
    b492:	6a fe                	push   $0xfffffffe
    b494:	8b 47 04             	mov    0x4(%edi),%eax
    b497:	50                   	push   %eax
    b498:	e8 c3 41 00 00       	call   f660 <async_answer_0@plt>
    b49d:	58                   	pop    %eax
    b49e:	5a                   	pop    %edx
    b49f:	6a fe                	push   $0xfffffffe
    b4a1:	e9 29 ff ff ff       	jmp    b3cf <remote_usb_read+0x8f>
    b4a6:	56                   	push   %esi
    b4a7:	68 0e 02 00 00       	push   $0x20e
    b4ac:	68 e4 f0 00 00       	push   $0xf0e4
    b4b1:	68 f9 f0 00 00       	push   $0xf0f9
    b4b6:	e8 15 42 00 00       	call   f6d0 <assert_abort@plt>
    b4bb:	51                   	push   %ecx
    b4bc:	68 10 02 00 00       	push   $0x210
    b4c1:	68 e4 f0 00 00       	push   $0xf0e4
    b4c6:	68 03 f1 00 00       	push   $0xf103
    b4cb:	e8 00 42 00 00       	call   f6d0 <assert_abort@plt>
    b4d0:	53                   	push   %ebx
    b4d1:	68 0f 02 00 00       	push   $0x20f
    b4d6:	68 e4 f0 00 00       	push   $0xf0e4
    b4db:	68 fd f0 00 00       	push   $0xf0fd
    b4e0:	e8 eb 41 00 00       	call   f6d0 <assert_abort@plt>
    b4e5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b4e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b4f0 <usb_dev_connect>:
    b4f0:	55                   	push   %ebp
    b4f1:	89 e5                	mov    %esp,%ebp
    b4f3:	83 ec 10             	sub    $0x10,%esp
    b4f6:	8b 45 08             	mov    0x8(%ebp),%eax
    b4f9:	6a 01                	push   $0x1
    b4fb:	50                   	push   %eax
    b4fc:	e8 1f 40 00 00       	call   f520 <devman_device_connect@plt>
    b501:	c9                   	leave  
    b502:	c3                   	ret    
    b503:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b509:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b510 <usb_dev_connect_to_self>:
    b510:	55                   	push   %ebp
    b511:	89 e5                	mov    %esp,%ebp
    b513:	83 ec 14             	sub    $0x14,%esp
    b516:	8b 45 08             	mov    0x8(%ebp),%eax
    b519:	50                   	push   %eax
    b51a:	e8 d1 97 ff ff       	call   4cf0 <ddf_dev_get_handle>
    b51f:	5a                   	pop    %edx
    b520:	59                   	pop    %ecx
    b521:	6a 01                	push   $0x1
    b523:	50                   	push   %eax
    b524:	e8 77 40 00 00       	call   f5a0 <devman_parent_device_connect@plt>
    b529:	c9                   	leave  
    b52a:	c3                   	ret    
    b52b:	90                   	nop
    b52c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000b530 <usb_dev_disconnect>:
    b530:	55                   	push   %ebp
    b531:	89 e5                	mov    %esp,%ebp
    b533:	8b 45 08             	mov    0x8(%ebp),%eax
    b536:	85 c0                	test   %eax,%eax
    b538:	74 06                	je     b540 <usb_dev_disconnect+0x10>
    b53a:	5d                   	pop    %ebp
    b53b:	e9 30 40 00 00       	jmp    f570 <async_hangup@plt>
    b540:	5d                   	pop    %ebp
    b541:	c3                   	ret    
    b542:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b549:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b550 <usb_get_my_interface>:
    b550:	55                   	push   %ebp
    b551:	89 e5                	mov    %esp,%ebp
    b553:	53                   	push   %ebx
    b554:	83 ec 14             	sub    $0x14,%esp
    b557:	8b 45 08             	mov    0x8(%ebp),%eax
    b55a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    b55d:	85 c0                	test   %eax,%eax
    b55f:	74 37                	je     b598 <usb_get_my_interface+0x48>
    b561:	52                   	push   %edx
    b562:	8d 55 f4             	lea    -0xc(%ebp),%edx
    b565:	6a 00                	push   $0x0
    b567:	6a 00                	push   $0x0
    b569:	6a 00                	push   $0x0
    b56b:	6a 00                	push   $0x0
    b56d:	52                   	push   %edx
    b56e:	6a 00                	push   $0x0
    b570:	6a 00                	push   $0x0
    b572:	6a 00                	push   $0x0
    b574:	6a 00                	push   $0x0
    b576:	68 08 04 00 00       	push   $0x408
    b57b:	50                   	push   %eax
    b57c:	e8 cf 40 00 00       	call   f650 <async_req_fast@plt>
    b581:	83 c4 30             	add    $0x30,%esp
    b584:	85 c0                	test   %eax,%eax
    b586:	75 09                	jne    b591 <usb_get_my_interface+0x41>
    b588:	85 db                	test   %ebx,%ebx
    b58a:	74 05                	je     b591 <usb_get_my_interface+0x41>
    b58c:	8b 55 f4             	mov    -0xc(%ebp),%edx
    b58f:	89 13                	mov    %edx,(%ebx)
    b591:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    b594:	c9                   	leave  
    b595:	c3                   	ret    
    b596:	66 90                	xchg   %ax,%ax
    b598:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b59d:	eb f2                	jmp    b591 <usb_get_my_interface+0x41>
    b59f:	90                   	nop

0000b5a0 <usb_get_my_device_handle>:
    b5a0:	55                   	push   %ebp
    b5a1:	89 e5                	mov    %esp,%ebp
    b5a3:	53                   	push   %ebx
    b5a4:	83 ec 18             	sub    $0x18,%esp
    b5a7:	8d 45 f4             	lea    -0xc(%ebp),%eax
    b5aa:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    b5ad:	6a 00                	push   $0x0
    b5af:	6a 00                	push   $0x0
    b5b1:	6a 00                	push   $0x0
    b5b3:	6a 00                	push   $0x0
    b5b5:	50                   	push   %eax
    b5b6:	8b 45 08             	mov    0x8(%ebp),%eax
    b5b9:	6a 00                	push   $0x0
    b5bb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    b5c2:	6a 00                	push   $0x0
    b5c4:	6a 00                	push   $0x0
    b5c6:	6a 01                	push   $0x1
    b5c8:	68 08 04 00 00       	push   $0x408
    b5cd:	50                   	push   %eax
    b5ce:	e8 7d 40 00 00       	call   f650 <async_req_fast@plt>
    b5d3:	83 c4 30             	add    $0x30,%esp
    b5d6:	85 c0                	test   %eax,%eax
    b5d8:	75 09                	jne    b5e3 <usb_get_my_device_handle+0x43>
    b5da:	85 db                	test   %ebx,%ebx
    b5dc:	74 05                	je     b5e3 <usb_get_my_device_handle+0x43>
    b5de:	8b 55 f4             	mov    -0xc(%ebp),%edx
    b5e1:	89 13                	mov    %edx,(%ebx)
    b5e3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    b5e6:	c9                   	leave  
    b5e7:	c3                   	ret    
    b5e8:	90                   	nop
    b5e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000b5f0 <usb_reserve_default_address>:
    b5f0:	55                   	push   %ebp
    b5f1:	89 e5                	mov    %esp,%ebp
    b5f3:	83 ec 08             	sub    $0x8,%esp
    b5f6:	8b 45 08             	mov    0x8(%ebp),%eax
    b5f9:	85 c0                	test   %eax,%eax
    b5fb:	74 2b                	je     b628 <usb_reserve_default_address+0x38>
    b5fd:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    b600:	52                   	push   %edx
    b601:	6a 00                	push   $0x0
    b603:	6a 00                	push   $0x0
    b605:	6a 00                	push   $0x0
    b607:	6a 00                	push   $0x0
    b609:	6a 00                	push   $0x0
    b60b:	6a 00                	push   $0x0
    b60d:	6a 00                	push   $0x0
    b60f:	51                   	push   %ecx
    b610:	6a 02                	push   $0x2
    b612:	68 08 04 00 00       	push   $0x408
    b617:	50                   	push   %eax
    b618:	e8 33 40 00 00       	call   f650 <async_req_fast@plt>
    b61d:	83 c4 30             	add    $0x30,%esp
    b620:	c9                   	leave  
    b621:	c3                   	ret    
    b622:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b628:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b62d:	c9                   	leave  
    b62e:	c3                   	ret    
    b62f:	90                   	nop

0000b630 <usb_release_default_address>:
    b630:	55                   	push   %ebp
    b631:	89 e5                	mov    %esp,%ebp
    b633:	83 ec 08             	sub    $0x8,%esp
    b636:	8b 45 08             	mov    0x8(%ebp),%eax
    b639:	85 c0                	test   %eax,%eax
    b63b:	74 23                	je     b660 <usb_release_default_address+0x30>
    b63d:	52                   	push   %edx
    b63e:	6a 00                	push   $0x0
    b640:	6a 00                	push   $0x0
    b642:	6a 00                	push   $0x0
    b644:	6a 00                	push   $0x0
    b646:	6a 00                	push   $0x0
    b648:	6a 00                	push   $0x0
    b64a:	6a 00                	push   $0x0
    b64c:	6a 00                	push   $0x0
    b64e:	6a 03                	push   $0x3
    b650:	68 08 04 00 00       	push   $0x408
    b655:	50                   	push   %eax
    b656:	e8 f5 3f 00 00       	call   f650 <async_req_fast@plt>
    b65b:	83 c4 30             	add    $0x30,%esp
    b65e:	c9                   	leave  
    b65f:	c3                   	ret    
    b660:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b665:	c9                   	leave  
    b666:	c3                   	ret    
    b667:	89 f6                	mov    %esi,%esi
    b669:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b670 <usb_device_enumerate>:
    b670:	55                   	push   %ebp
    b671:	89 e5                	mov    %esp,%ebp
    b673:	83 ec 08             	sub    $0x8,%esp
    b676:	8b 45 08             	mov    0x8(%ebp),%eax
    b679:	85 c0                	test   %eax,%eax
    b67b:	74 2b                	je     b6a8 <usb_device_enumerate+0x38>
    b67d:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    b680:	52                   	push   %edx
    b681:	6a 00                	push   $0x0
    b683:	6a 00                	push   $0x0
    b685:	6a 00                	push   $0x0
    b687:	6a 00                	push   $0x0
    b689:	6a 00                	push   $0x0
    b68b:	6a 00                	push   $0x0
    b68d:	6a 00                	push   $0x0
    b68f:	51                   	push   %ecx
    b690:	6a 04                	push   $0x4
    b692:	68 08 04 00 00       	push   $0x408
    b697:	50                   	push   %eax
    b698:	e8 b3 3f 00 00       	call   f650 <async_req_fast@plt>
    b69d:	83 c4 30             	add    $0x30,%esp
    b6a0:	c9                   	leave  
    b6a1:	c3                   	ret    
    b6a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b6a8:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b6ad:	c9                   	leave  
    b6ae:	c3                   	ret    
    b6af:	90                   	nop

0000b6b0 <usb_device_remove>:
    b6b0:	55                   	push   %ebp
    b6b1:	89 e5                	mov    %esp,%ebp
    b6b3:	83 ec 08             	sub    $0x8,%esp
    b6b6:	8b 45 08             	mov    0x8(%ebp),%eax
    b6b9:	85 c0                	test   %eax,%eax
    b6bb:	74 2b                	je     b6e8 <usb_device_remove+0x38>
    b6bd:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    b6c0:	52                   	push   %edx
    b6c1:	6a 00                	push   $0x0
    b6c3:	6a 00                	push   $0x0
    b6c5:	6a 00                	push   $0x0
    b6c7:	6a 00                	push   $0x0
    b6c9:	6a 00                	push   $0x0
    b6cb:	6a 00                	push   $0x0
    b6cd:	6a 00                	push   $0x0
    b6cf:	51                   	push   %ecx
    b6d0:	6a 05                	push   $0x5
    b6d2:	68 08 04 00 00       	push   $0x408
    b6d7:	50                   	push   %eax
    b6d8:	e8 73 3f 00 00       	call   f650 <async_req_fast@plt>
    b6dd:	83 c4 30             	add    $0x30,%esp
    b6e0:	c9                   	leave  
    b6e1:	c3                   	ret    
    b6e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b6e8:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b6ed:	c9                   	leave  
    b6ee:	c3                   	ret    
    b6ef:	90                   	nop

0000b6f0 <usb_register_endpoint>:
    b6f0:	55                   	push   %ebp
    b6f1:	89 e5                	mov    %esp,%ebp
    b6f3:	56                   	push   %esi
    b6f4:	53                   	push   %ebx
    b6f5:	8b 4d 08             	mov    0x8(%ebp),%ecx
    b6f8:	8b 55 0c             	mov    0xc(%ebp),%edx
    b6fb:	85 c9                	test   %ecx,%ecx
    b6fd:	74 51                	je     b750 <usb_register_endpoint+0x60>
    b6ff:	0f b6 75 20          	movzbl 0x20(%ebp),%esi
    b703:	31 c0                	xor    %eax,%eax
    b705:	81 e6 ff 00 00 00    	and    $0xff,%esi
    b70b:	8a 45 10             	mov    0x10(%ebp),%al
    b70e:	8b 5d 1c             	mov    0x1c(%ebp),%ebx
    b711:	c1 e6 10             	shl    $0x10,%esi
    b714:	8a 65 14             	mov    0x14(%ebp),%ah
    b717:	c1 e3 18             	shl    $0x18,%ebx
    b71a:	25 ff ff 00 00       	and    $0xffff,%eax
    b71f:	09 f0                	or     %esi,%eax
    b721:	8b 75 18             	mov    0x18(%ebp),%esi
    b724:	09 d8                	or     %ebx,%eax
    b726:	53                   	push   %ebx
    b727:	0f bf d2             	movswl %dx,%edx
    b72a:	6a 00                	push   $0x0
    b72c:	6a 00                	push   $0x0
    b72e:	6a 00                	push   $0x0
    b730:	6a 00                	push   $0x0
    b732:	6a 00                	push   $0x0
    b734:	56                   	push   %esi
    b735:	50                   	push   %eax
    b736:	52                   	push   %edx
    b737:	6a 06                	push   $0x6
    b739:	68 08 04 00 00       	push   $0x408
    b73e:	51                   	push   %ecx
    b73f:	e8 0c 3f 00 00       	call   f650 <async_req_fast@plt>
    b744:	83 c4 30             	add    $0x30,%esp
    b747:	8d 65 f8             	lea    -0x8(%ebp),%esp
    b74a:	5b                   	pop    %ebx
    b74b:	5e                   	pop    %esi
    b74c:	5d                   	pop    %ebp
    b74d:	c3                   	ret    
    b74e:	66 90                	xchg   %ax,%ax
    b750:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b755:	eb f0                	jmp    b747 <usb_register_endpoint+0x57>
    b757:	89 f6                	mov    %esi,%esi
    b759:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b760 <usb_unregister_endpoint>:
    b760:	55                   	push   %ebp
    b761:	89 e5                	mov    %esp,%ebp
    b763:	83 ec 08             	sub    $0x8,%esp
    b766:	8b 55 08             	mov    0x8(%ebp),%edx
    b769:	8b 45 0c             	mov    0xc(%ebp),%eax
    b76c:	85 d2                	test   %edx,%edx
    b76e:	74 28                	je     b798 <usb_unregister_endpoint+0x38>
    b770:	98                   	cwtl   
    b771:	51                   	push   %ecx
    b772:	8b 4d 10             	mov    0x10(%ebp),%ecx
    b775:	6a 00                	push   $0x0
    b777:	6a 00                	push   $0x0
    b779:	6a 00                	push   $0x0
    b77b:	6a 00                	push   $0x0
    b77d:	6a 00                	push   $0x0
    b77f:	6a 00                	push   $0x0
    b781:	51                   	push   %ecx
    b782:	50                   	push   %eax
    b783:	6a 07                	push   $0x7
    b785:	68 08 04 00 00       	push   $0x408
    b78a:	52                   	push   %edx
    b78b:	e8 c0 3e 00 00       	call   f650 <async_req_fast@plt>
    b790:	83 c4 30             	add    $0x30,%esp
    b793:	c9                   	leave  
    b794:	c3                   	ret    
    b795:	8d 76 00             	lea    0x0(%esi),%esi
    b798:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b79d:	c9                   	leave  
    b79e:	c3                   	ret    
    b79f:	90                   	nop

0000b7a0 <usb_read>:
    b7a0:	55                   	push   %ebp
    b7a1:	89 e5                	mov    %esp,%ebp
    b7a3:	57                   	push   %edi
    b7a4:	56                   	push   %esi
    b7a5:	53                   	push   %ebx
    b7a6:	83 ec 4c             	sub    $0x4c,%esp
    b7a9:	8b 5d 08             	mov    0x8(%ebp),%ebx
    b7ac:	8b 45 1c             	mov    0x1c(%ebp),%eax
    b7af:	8b 7d 0c             	mov    0xc(%ebp),%edi
    b7b2:	8b 55 10             	mov    0x10(%ebp),%edx
    b7b5:	8b 4d 14             	mov    0x14(%ebp),%ecx
    b7b8:	89 45 b4             	mov    %eax,-0x4c(%ebp)
    b7bb:	85 db                	test   %ebx,%ebx
    b7bd:	0f 84 c3 00 00 00    	je     b886 <usb_read+0xe6>
    b7c3:	85 c0                	test   %eax,%eax
    b7c5:	75 11                	jne    b7d8 <usb_read+0x38>
    b7c7:	89 d6                	mov    %edx,%esi
    b7c9:	09 ce                	or     %ecx,%esi
    b7cb:	75 0b                	jne    b7d8 <usb_read+0x38>
    b7cd:	8d 65 f4             	lea    -0xc(%ebp),%esp
    b7d0:	5b                   	pop    %ebx
    b7d1:	5e                   	pop    %esi
    b7d2:	5f                   	pop    %edi
    b7d3:	5d                   	pop    %ebp
    b7d4:	c3                   	ret    
    b7d5:	8d 76 00             	lea    0x0(%esi),%esi
    b7d8:	0f bf ff             	movswl %di,%edi
    b7db:	50                   	push   %eax
    b7dc:	6a 00                	push   $0x0
    b7de:	51                   	push   %ecx
    b7df:	52                   	push   %edx
    b7e0:	57                   	push   %edi
    b7e1:	6a 08                	push   $0x8
    b7e3:	68 08 04 00 00       	push   $0x408
    b7e8:	53                   	push   %ebx
    b7e9:	e8 82 3e 00 00       	call   f670 <async_send_fast@plt>
    b7ee:	83 c4 20             	add    $0x20,%esp
    b7f1:	89 c7                	mov    %eax,%edi
    b7f3:	85 c0                	test   %eax,%eax
    b7f5:	74 69                	je     b860 <usb_read+0xc0>
    b7f7:	8d 45 c4             	lea    -0x3c(%ebp),%eax
    b7fa:	8b 75 b4             	mov    -0x4c(%ebp),%esi
    b7fd:	50                   	push   %eax
    b7fe:	8b 45 18             	mov    0x18(%ebp),%eax
    b801:	56                   	push   %esi
    b802:	50                   	push   %eax
    b803:	53                   	push   %ebx
    b804:	e8 87 3e 00 00       	call   f690 <async_data_read@plt>
    b809:	83 c4 10             	add    $0x10,%esp
    b80c:	85 c0                	test   %eax,%eax
    b80e:	74 60                	je     b870 <usb_read+0xd0>
    b810:	52                   	push   %edx
    b811:	52                   	push   %edx
    b812:	8d 55 bc             	lea    -0x44(%ebp),%edx
    b815:	52                   	push   %edx
    b816:	50                   	push   %eax
    b817:	e8 64 3d 00 00       	call   f580 <async_wait_for@plt>
    b81c:	8d 45 c0             	lea    -0x40(%ebp),%eax
    b81f:	59                   	pop    %ecx
    b820:	5b                   	pop    %ebx
    b821:	50                   	push   %eax
    b822:	57                   	push   %edi
    b823:	e8 58 3d 00 00       	call   f580 <async_wait_for@plt>
    b828:	8b 45 bc             	mov    -0x44(%ebp),%eax
    b82b:	83 c4 10             	add    $0x10,%esp
    b82e:	85 c0                	test   %eax,%eax
    b830:	74 0e                	je     b840 <usb_read+0xa0>
    b832:	8b 55 c0             	mov    -0x40(%ebp),%edx
    b835:	85 d2                	test   %edx,%edx
    b837:	74 94                	je     b7cd <usb_read+0x2d>
    b839:	89 d0                	mov    %edx,%eax
    b83b:	eb 90                	jmp    b7cd <usb_read+0x2d>
    b83d:	8d 76 00             	lea    0x0(%esi),%esi
    b840:	8b 45 c0             	mov    -0x40(%ebp),%eax
    b843:	85 c0                	test   %eax,%eax
    b845:	75 86                	jne    b7cd <usb_read+0x2d>
    b847:	8b 45 20             	mov    0x20(%ebp),%eax
    b84a:	8b 55 cc             	mov    -0x34(%ebp),%edx
    b84d:	89 10                	mov    %edx,(%eax)
    b84f:	8d 65 f4             	lea    -0xc(%ebp),%esp
    b852:	31 c0                	xor    %eax,%eax
    b854:	5b                   	pop    %ebx
    b855:	5e                   	pop    %esi
    b856:	5f                   	pop    %edi
    b857:	5d                   	pop    %ebp
    b858:	c3                   	ret    
    b859:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b860:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    b865:	e9 63 ff ff ff       	jmp    b7cd <usb_read+0x2d>
    b86a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b870:	83 ec 0c             	sub    $0xc,%esp
    b873:	57                   	push   %edi
    b874:	e8 c7 40 00 00       	call   f940 <async_forget@plt>
    b879:	83 c4 10             	add    $0x10,%esp
    b87c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    b881:	e9 47 ff ff ff       	jmp    b7cd <usb_read+0x2d>
    b886:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b88b:	e9 3d ff ff ff       	jmp    b7cd <usb_read+0x2d>

0000b890 <usb_write>:
    b890:	55                   	push   %ebp
    b891:	89 e5                	mov    %esp,%ebp
    b893:	57                   	push   %edi
    b894:	56                   	push   %esi
    b895:	53                   	push   %ebx
    b896:	83 ec 2c             	sub    $0x2c,%esp
    b899:	8b 75 08             	mov    0x8(%ebp),%esi
    b89c:	8b 45 0c             	mov    0xc(%ebp),%eax
    b89f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    b8a2:	8b 55 10             	mov    0x10(%ebp),%edx
    b8a5:	8b 4d 14             	mov    0x14(%ebp),%ecx
    b8a8:	8b 5d 1c             	mov    0x1c(%ebp),%ebx
    b8ab:	85 f6                	test   %esi,%esi
    b8ad:	0f 84 8f 00 00 00    	je     b942 <usb_write+0xb2>
    b8b3:	85 db                	test   %ebx,%ebx
    b8b5:	75 11                	jne    b8c8 <usb_write+0x38>
    b8b7:	89 d7                	mov    %edx,%edi
    b8b9:	31 c0                	xor    %eax,%eax
    b8bb:	09 cf                	or     %ecx,%edi
    b8bd:	75 09                	jne    b8c8 <usb_write+0x38>
    b8bf:	8d 65 f4             	lea    -0xc(%ebp),%esp
    b8c2:	5b                   	pop    %ebx
    b8c3:	5e                   	pop    %esi
    b8c4:	5f                   	pop    %edi
    b8c5:	5d                   	pop    %ebp
    b8c6:	c3                   	ret    
    b8c7:	90                   	nop
    b8c8:	0f bf 7d d4          	movswl -0x2c(%ebp),%edi
    b8cc:	6a 00                	push   $0x0
    b8ce:	51                   	push   %ecx
    b8cf:	52                   	push   %edx
    b8d0:	53                   	push   %ebx
    b8d1:	57                   	push   %edi
    b8d2:	6a 09                	push   $0x9
    b8d4:	68 08 04 00 00       	push   $0x408
    b8d9:	56                   	push   %esi
    b8da:	e8 c1 3e 00 00       	call   f7a0 <async_send_slow@plt>
    b8df:	83 c4 20             	add    $0x20,%esp
    b8e2:	89 c7                	mov    %eax,%edi
    b8e4:	85 c0                	test   %eax,%eax
    b8e6:	74 50                	je     b938 <usb_write+0xa8>
    b8e8:	85 db                	test   %ebx,%ebx
    b8ea:	74 13                	je     b8ff <usb_write+0x6f>
    b8ec:	8b 4d 18             	mov    0x18(%ebp),%ecx
    b8ef:	52                   	push   %edx
    b8f0:	53                   	push   %ebx
    b8f1:	51                   	push   %ecx
    b8f2:	56                   	push   %esi
    b8f3:	e8 c8 3c 00 00       	call   f5c0 <async_data_write_start@plt>
    b8f8:	83 c4 10             	add    $0x10,%esp
    b8fb:	85 c0                	test   %eax,%eax
    b8fd:	75 21                	jne    b920 <usb_write+0x90>
    b8ff:	50                   	push   %eax
    b900:	50                   	push   %eax
    b901:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    b904:	50                   	push   %eax
    b905:	57                   	push   %edi
    b906:	e8 75 3c 00 00       	call   f580 <async_wait_for@plt>
    b90b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    b90e:	83 c4 10             	add    $0x10,%esp
    b911:	8d 65 f4             	lea    -0xc(%ebp),%esp
    b914:	5b                   	pop    %ebx
    b915:	5e                   	pop    %esi
    b916:	5f                   	pop    %edi
    b917:	5d                   	pop    %ebp
    b918:	c3                   	ret    
    b919:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b920:	83 ec 0c             	sub    $0xc,%esp
    b923:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    b926:	57                   	push   %edi
    b927:	e8 14 40 00 00       	call   f940 <async_forget@plt>
    b92c:	83 c4 10             	add    $0x10,%esp
    b92f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    b932:	eb 8b                	jmp    b8bf <usb_write+0x2f>
    b934:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b938:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    b93d:	e9 7d ff ff ff       	jmp    b8bf <usb_write+0x2f>
    b942:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b947:	e9 73 ff ff ff       	jmp    b8bf <usb_write+0x2f>
    b94c:	66 90                	xchg   %ax,%ax
    b94e:	66 90                	xchg   %ax,%ax

0000b950 <remote_config_space_write_32>:
    b950:	55                   	push   %ebp
    b951:	89 e5                	mov    %esp,%ebp
    b953:	53                   	push   %ebx
    b954:	53                   	push   %ebx
    b955:	8b 45 0c             	mov    0xc(%ebp),%eax
    b958:	8b 4d 08             	mov    0x8(%ebp),%ecx
    b95b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    b95e:	8b 55 14             	mov    0x14(%ebp),%edx
    b961:	85 c0                	test   %eax,%eax
    b963:	74 56                	je     b9bb <remote_config_space_write_32+0x6b>
    b965:	8b 40 14             	mov    0x14(%eax),%eax
    b968:	85 c0                	test   %eax,%eax
    b96a:	74 3c                	je     b9a8 <remote_config_space_write_32+0x58>
    b96c:	83 ec 04             	sub    $0x4,%esp
    b96f:	ff 72 0c             	pushl  0xc(%edx)
    b972:	8b 52 08             	mov    0x8(%edx),%edx
    b975:	52                   	push   %edx
    b976:	51                   	push   %ecx
    b977:	ff d0                	call   *%eax
    b979:	83 c4 10             	add    $0x10,%esp
    b97c:	85 c0                	test   %eax,%eax
    b97e:	75 18                	jne    b998 <remote_config_space_write_32+0x48>
    b980:	89 5d 08             	mov    %ebx,0x8(%ebp)
    b983:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    b986:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
    b98d:	c9                   	leave  
    b98e:	e9 cd 3c 00 00       	jmp    f660 <async_answer_0@plt>
    b993:	90                   	nop
    b994:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b998:	89 5d 08             	mov    %ebx,0x8(%ebp)
    b99b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    b99e:	89 45 0c             	mov    %eax,0xc(%ebp)
    b9a1:	c9                   	leave  
    b9a2:	e9 b9 3c 00 00       	jmp    f660 <async_answer_0@plt>
    b9a7:	90                   	nop
    b9a8:	89 5d 08             	mov    %ebx,0x8(%ebp)
    b9ab:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    b9ae:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    b9b5:	c9                   	leave  
    b9b6:	e9 a5 3c 00 00       	jmp    f660 <async_answer_0@plt>
    b9bb:	51                   	push   %ecx
    b9bc:	68 f3 00 00 00       	push   $0xf3
    b9c1:	68 68 f1 00 00       	push   $0xf168
    b9c6:	68 fd f0 00 00       	push   $0xf0fd
    b9cb:	e8 00 3d 00 00       	call   f6d0 <assert_abort@plt>

0000b9d0 <remote_config_space_write_16>:
    b9d0:	55                   	push   %ebp
    b9d1:	89 e5                	mov    %esp,%ebp
    b9d3:	56                   	push   %esi
    b9d4:	53                   	push   %ebx
    b9d5:	8b 45 0c             	mov    0xc(%ebp),%eax
    b9d8:	8b 4d 08             	mov    0x8(%ebp),%ecx
    b9db:	8b 5d 10             	mov    0x10(%ebp),%ebx
    b9de:	8b 55 14             	mov    0x14(%ebp),%edx
    b9e1:	85 c0                	test   %eax,%eax
    b9e3:	74 60                	je     ba45 <remote_config_space_write_16+0x75>
    b9e5:	8b 40 10             	mov    0x10(%eax),%eax
    b9e8:	85 c0                	test   %eax,%eax
    b9ea:	74 44                	je     ba30 <remote_config_space_write_16+0x60>
    b9ec:	56                   	push   %esi
    b9ed:	31 f6                	xor    %esi,%esi
    b9ef:	66 8b 72 0c          	mov    0xc(%edx),%si
    b9f3:	56                   	push   %esi
    b9f4:	8b 52 08             	mov    0x8(%edx),%edx
    b9f7:	52                   	push   %edx
    b9f8:	51                   	push   %ecx
    b9f9:	ff d0                	call   *%eax
    b9fb:	83 c4 10             	add    $0x10,%esp
    b9fe:	85 c0                	test   %eax,%eax
    ba00:	75 16                	jne    ba18 <remote_config_space_write_16+0x48>
    ba02:	89 5d 08             	mov    %ebx,0x8(%ebp)
    ba05:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
    ba0c:	8d 65 f8             	lea    -0x8(%ebp),%esp
    ba0f:	5b                   	pop    %ebx
    ba10:	5e                   	pop    %esi
    ba11:	5d                   	pop    %ebp
    ba12:	e9 49 3c 00 00       	jmp    f660 <async_answer_0@plt>
    ba17:	90                   	nop
    ba18:	89 5d 08             	mov    %ebx,0x8(%ebp)
    ba1b:	89 45 0c             	mov    %eax,0xc(%ebp)
    ba1e:	8d 65 f8             	lea    -0x8(%ebp),%esp
    ba21:	5b                   	pop    %ebx
    ba22:	5e                   	pop    %esi
    ba23:	5d                   	pop    %ebp
    ba24:	e9 37 3c 00 00       	jmp    f660 <async_answer_0@plt>
    ba29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    ba30:	89 5d 08             	mov    %ebx,0x8(%ebp)
    ba33:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    ba3a:	8d 65 f8             	lea    -0x8(%ebp),%esp
    ba3d:	5b                   	pop    %ebx
    ba3e:	5e                   	pop    %esi
    ba3f:	5d                   	pop    %ebp
    ba40:	e9 1b 3c 00 00       	jmp    f660 <async_answer_0@plt>
    ba45:	51                   	push   %ecx
    ba46:	68 e1 00 00 00       	push   $0xe1
    ba4b:	68 68 f1 00 00       	push   $0xf168
    ba50:	68 fd f0 00 00       	push   $0xf0fd
    ba55:	e8 76 3c 00 00       	call   f6d0 <assert_abort@plt>
    ba5a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000ba60 <remote_config_space_write_8>:
    ba60:	55                   	push   %ebp
    ba61:	89 e5                	mov    %esp,%ebp
    ba63:	56                   	push   %esi
    ba64:	53                   	push   %ebx
    ba65:	8b 45 0c             	mov    0xc(%ebp),%eax
    ba68:	8b 4d 08             	mov    0x8(%ebp),%ecx
    ba6b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    ba6e:	8b 55 14             	mov    0x14(%ebp),%edx
    ba71:	85 c0                	test   %eax,%eax
    ba73:	74 68                	je     badd <remote_config_space_write_8+0x7d>
    ba75:	8b 40 0c             	mov    0xc(%eax),%eax
    ba78:	85 c0                	test   %eax,%eax
    ba7a:	74 4c                	je     bac8 <remote_config_space_write_8+0x68>
    ba7c:	56                   	push   %esi
    ba7d:	0f b6 72 0c          	movzbl 0xc(%edx),%esi
    ba81:	81 e6 ff 00 00 00    	and    $0xff,%esi
    ba87:	56                   	push   %esi
    ba88:	8b 52 08             	mov    0x8(%edx),%edx
    ba8b:	52                   	push   %edx
    ba8c:	51                   	push   %ecx
    ba8d:	ff d0                	call   *%eax
    ba8f:	83 c4 10             	add    $0x10,%esp
    ba92:	85 c0                	test   %eax,%eax
    ba94:	75 1a                	jne    bab0 <remote_config_space_write_8+0x50>
    ba96:	89 5d 08             	mov    %ebx,0x8(%ebp)
    ba99:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
    baa0:	8d 65 f8             	lea    -0x8(%ebp),%esp
    baa3:	5b                   	pop    %ebx
    baa4:	5e                   	pop    %esi
    baa5:	5d                   	pop    %ebp
    baa6:	e9 b5 3b 00 00       	jmp    f660 <async_answer_0@plt>
    baab:	90                   	nop
    baac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    bab0:	89 5d 08             	mov    %ebx,0x8(%ebp)
    bab3:	89 45 0c             	mov    %eax,0xc(%ebp)
    bab6:	8d 65 f8             	lea    -0x8(%ebp),%esp
    bab9:	5b                   	pop    %ebx
    baba:	5e                   	pop    %esi
    babb:	5d                   	pop    %ebp
    babc:	e9 9f 3b 00 00       	jmp    f660 <async_answer_0@plt>
    bac1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    bac8:	89 5d 08             	mov    %ebx,0x8(%ebp)
    bacb:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    bad2:	8d 65 f8             	lea    -0x8(%ebp),%esp
    bad5:	5b                   	pop    %ebx
    bad6:	5e                   	pop    %esi
    bad7:	5d                   	pop    %ebp
    bad8:	e9 83 3b 00 00       	jmp    f660 <async_answer_0@plt>
    badd:	51                   	push   %ecx
    bade:	68 cf 00 00 00       	push   $0xcf
    bae3:	68 68 f1 00 00       	push   $0xf168
    bae8:	68 fd f0 00 00       	push   $0xf0fd
    baed:	e8 de 3b 00 00       	call   f6d0 <assert_abort@plt>
    baf2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    baf9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000bb00 <remote_config_space_read_32>:
    bb00:	55                   	push   %ebp
    bb01:	89 e5                	mov    %esp,%ebp
    bb03:	83 ec 18             	sub    $0x18,%esp
    bb06:	8b 45 0c             	mov    0xc(%ebp),%eax
    bb09:	85 c0                	test   %eax,%eax
    bb0b:	74 5d                	je     bb6a <remote_config_space_read_32+0x6a>
    bb0d:	8b 40 08             	mov    0x8(%eax),%eax
    bb10:	85 c0                	test   %eax,%eax
    bb12:	74 44                	je     bb58 <remote_config_space_read_32+0x58>
    bb14:	52                   	push   %edx
    bb15:	8d 55 f4             	lea    -0xc(%ebp),%edx
    bb18:	52                   	push   %edx
    bb19:	8b 55 14             	mov    0x14(%ebp),%edx
    bb1c:	8b 4a 08             	mov    0x8(%edx),%ecx
    bb1f:	8b 55 08             	mov    0x8(%ebp),%edx
    bb22:	51                   	push   %ecx
    bb23:	52                   	push   %edx
    bb24:	ff d0                	call   *%eax
    bb26:	83 c4 10             	add    $0x10,%esp
    bb29:	85 c0                	test   %eax,%eax
    bb2b:	74 13                	je     bb40 <remote_config_space_read_32+0x40>
    bb2d:	8b 4d 10             	mov    0x10(%ebp),%ecx
    bb30:	52                   	push   %edx
    bb31:	52                   	push   %edx
    bb32:	50                   	push   %eax
    bb33:	51                   	push   %ecx
    bb34:	e8 27 3b 00 00       	call   f660 <async_answer_0@plt>
    bb39:	83 c4 10             	add    $0x10,%esp
    bb3c:	c9                   	leave  
    bb3d:	c3                   	ret    
    bb3e:	66 90                	xchg   %ax,%ax
    bb40:	8b 55 f4             	mov    -0xc(%ebp),%edx
    bb43:	8b 4d 10             	mov    0x10(%ebp),%ecx
    bb46:	50                   	push   %eax
    bb47:	52                   	push   %edx
    bb48:	6a 00                	push   $0x0
    bb4a:	51                   	push   %ecx
    bb4b:	e8 50 3d 00 00       	call   f8a0 <async_answer_1@plt>
    bb50:	83 c4 10             	add    $0x10,%esp
    bb53:	c9                   	leave  
    bb54:	c3                   	ret    
    bb55:	8d 76 00             	lea    0x0(%esi),%esi
    bb58:	8b 45 10             	mov    0x10(%ebp),%eax
    bb5b:	51                   	push   %ecx
    bb5c:	51                   	push   %ecx
    bb5d:	6a f5                	push   $0xfffffff5
    bb5f:	50                   	push   %eax
    bb60:	e8 fb 3a 00 00       	call   f660 <async_answer_0@plt>
    bb65:	83 c4 10             	add    $0x10,%esp
    bb68:	c9                   	leave  
    bb69:	c3                   	ret    
    bb6a:	50                   	push   %eax
    bb6b:	68 bd 00 00 00       	push   $0xbd
    bb70:	68 68 f1 00 00       	push   $0xf168
    bb75:	68 fd f0 00 00       	push   $0xf0fd
    bb7a:	e8 51 3b 00 00       	call   f6d0 <assert_abort@plt>
    bb7f:	90                   	nop

0000bb80 <remote_config_space_read_16>:
    bb80:	55                   	push   %ebp
    bb81:	89 e5                	mov    %esp,%ebp
    bb83:	83 ec 18             	sub    $0x18,%esp
    bb86:	8b 45 0c             	mov    0xc(%ebp),%eax
    bb89:	85 c0                	test   %eax,%eax
    bb8b:	74 5d                	je     bbea <remote_config_space_read_16+0x6a>
    bb8d:	8b 40 04             	mov    0x4(%eax),%eax
    bb90:	85 c0                	test   %eax,%eax
    bb92:	74 44                	je     bbd8 <remote_config_space_read_16+0x58>
    bb94:	52                   	push   %edx
    bb95:	8d 55 f6             	lea    -0xa(%ebp),%edx
    bb98:	52                   	push   %edx
    bb99:	8b 55 14             	mov    0x14(%ebp),%edx
    bb9c:	8b 4a 08             	mov    0x8(%edx),%ecx
    bb9f:	8b 55 08             	mov    0x8(%ebp),%edx
    bba2:	51                   	push   %ecx
    bba3:	52                   	push   %edx
    bba4:	ff d0                	call   *%eax
    bba6:	83 c4 10             	add    $0x10,%esp
    bba9:	85 c0                	test   %eax,%eax
    bbab:	74 13                	je     bbc0 <remote_config_space_read_16+0x40>
    bbad:	51                   	push   %ecx
    bbae:	51                   	push   %ecx
    bbaf:	50                   	push   %eax
    bbb0:	8b 45 10             	mov    0x10(%ebp),%eax
    bbb3:	50                   	push   %eax
    bbb4:	e8 a7 3a 00 00       	call   f660 <async_answer_0@plt>
    bbb9:	83 c4 10             	add    $0x10,%esp
    bbbc:	c9                   	leave  
    bbbd:	c3                   	ret    
    bbbe:	66 90                	xchg   %ax,%ax
    bbc0:	50                   	push   %eax
    bbc1:	31 c0                	xor    %eax,%eax
    bbc3:	66 8b 45 f6          	mov    -0xa(%ebp),%ax
    bbc7:	8b 55 10             	mov    0x10(%ebp),%edx
    bbca:	50                   	push   %eax
    bbcb:	6a 00                	push   $0x0
    bbcd:	52                   	push   %edx
    bbce:	e8 cd 3c 00 00       	call   f8a0 <async_answer_1@plt>
    bbd3:	83 c4 10             	add    $0x10,%esp
    bbd6:	c9                   	leave  
    bbd7:	c3                   	ret    
    bbd8:	8b 45 10             	mov    0x10(%ebp),%eax
    bbdb:	51                   	push   %ecx
    bbdc:	51                   	push   %ecx
    bbdd:	6a f5                	push   $0xfffffff5
    bbdf:	50                   	push   %eax
    bbe0:	e8 7b 3a 00 00       	call   f660 <async_answer_0@plt>
    bbe5:	83 c4 10             	add    $0x10,%esp
    bbe8:	c9                   	leave  
    bbe9:	c3                   	ret    
    bbea:	50                   	push   %eax
    bbeb:	68 ac 00 00 00       	push   $0xac
    bbf0:	68 68 f1 00 00       	push   $0xf168
    bbf5:	68 fd f0 00 00       	push   $0xf0fd
    bbfa:	e8 d1 3a 00 00       	call   f6d0 <assert_abort@plt>
    bbff:	90                   	nop

0000bc00 <remote_config_space_read_8>:
    bc00:	55                   	push   %ebp
    bc01:	89 e5                	mov    %esp,%ebp
    bc03:	83 ec 18             	sub    $0x18,%esp
    bc06:	8b 45 0c             	mov    0xc(%ebp),%eax
    bc09:	85 c0                	test   %eax,%eax
    bc0b:	74 5d                	je     bc6a <remote_config_space_read_8+0x6a>
    bc0d:	8b 00                	mov    (%eax),%eax
    bc0f:	85 c0                	test   %eax,%eax
    bc11:	74 45                	je     bc58 <remote_config_space_read_8+0x58>
    bc13:	52                   	push   %edx
    bc14:	8d 55 f7             	lea    -0x9(%ebp),%edx
    bc17:	52                   	push   %edx
    bc18:	8b 55 14             	mov    0x14(%ebp),%edx
    bc1b:	8b 4a 08             	mov    0x8(%edx),%ecx
    bc1e:	8b 55 08             	mov    0x8(%ebp),%edx
    bc21:	51                   	push   %ecx
    bc22:	52                   	push   %edx
    bc23:	ff d0                	call   *%eax
    bc25:	83 c4 10             	add    $0x10,%esp
    bc28:	85 c0                	test   %eax,%eax
    bc2a:	74 14                	je     bc40 <remote_config_space_read_8+0x40>
    bc2c:	51                   	push   %ecx
    bc2d:	51                   	push   %ecx
    bc2e:	50                   	push   %eax
    bc2f:	8b 45 10             	mov    0x10(%ebp),%eax
    bc32:	50                   	push   %eax
    bc33:	e8 28 3a 00 00       	call   f660 <async_answer_0@plt>
    bc38:	83 c4 10             	add    $0x10,%esp
    bc3b:	c9                   	leave  
    bc3c:	c3                   	ret    
    bc3d:	8d 76 00             	lea    0x0(%esi),%esi
    bc40:	50                   	push   %eax
    bc41:	31 c0                	xor    %eax,%eax
    bc43:	8a 45 f7             	mov    -0x9(%ebp),%al
    bc46:	8b 55 10             	mov    0x10(%ebp),%edx
    bc49:	50                   	push   %eax
    bc4a:	6a 00                	push   $0x0
    bc4c:	52                   	push   %edx
    bc4d:	e8 4e 3c 00 00       	call   f8a0 <async_answer_1@plt>
    bc52:	83 c4 10             	add    $0x10,%esp
    bc55:	c9                   	leave  
    bc56:	c3                   	ret    
    bc57:	90                   	nop
    bc58:	8b 45 10             	mov    0x10(%ebp),%eax
    bc5b:	51                   	push   %ecx
    bc5c:	51                   	push   %ecx
    bc5d:	6a f5                	push   $0xfffffff5
    bc5f:	50                   	push   %eax
    bc60:	e8 fb 39 00 00       	call   f660 <async_answer_0@plt>
    bc65:	83 c4 10             	add    $0x10,%esp
    bc68:	c9                   	leave  
    bc69:	c3                   	ret    
    bc6a:	50                   	push   %eax
    bc6b:	68 9a 00 00 00       	push   $0x9a
    bc70:	68 68 f1 00 00       	push   $0xf168
    bc75:	68 fd f0 00 00       	push   $0xf0fd
    bc7a:	e8 51 3a 00 00       	call   f6d0 <assert_abort@plt>
    bc7f:	90                   	nop

0000bc80 <pci_config_space_read_8>:
    bc80:	55                   	push   %ebp
    bc81:	89 e5                	mov    %esp,%ebp
    bc83:	53                   	push   %ebx
    bc84:	83 ec 30             	sub    $0x30,%esp
    bc87:	8b 45 08             	mov    0x8(%ebp),%eax
    bc8a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    bc91:	50                   	push   %eax
    bc92:	e8 19 3c 00 00       	call   f8b0 <async_exchange_begin@plt>
    bc97:	83 c4 0c             	add    $0xc,%esp
    bc9a:	8b 55 0c             	mov    0xc(%ebp),%edx
    bc9d:	89 c3                	mov    %eax,%ebx
    bc9f:	8d 45 f4             	lea    -0xc(%ebp),%eax
    bca2:	6a 00                	push   $0x0
    bca4:	6a 00                	push   $0x0
    bca6:	6a 00                	push   $0x0
    bca8:	6a 00                	push   $0x0
    bcaa:	50                   	push   %eax
    bcab:	6a 00                	push   $0x0
    bcad:	6a 00                	push   $0x0
    bcaf:	52                   	push   %edx
    bcb0:	6a 00                	push   $0x0
    bcb2:	68 07 04 00 00       	push   $0x407
    bcb7:	53                   	push   %ebx
    bcb8:	e8 93 39 00 00       	call   f650 <async_req_fast@plt>
    bcbd:	83 c4 24             	add    $0x24,%esp
    bcc0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    bcc3:	53                   	push   %ebx
    bcc4:	e8 f7 39 00 00       	call   f6c0 <async_exchange_end@plt>
    bcc9:	8b 55 10             	mov    0x10(%ebp),%edx
    bccc:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    bccf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    bcd2:	88 0a                	mov    %cl,(%edx)
    bcd4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    bcd7:	c9                   	leave  
    bcd8:	c3                   	ret    
    bcd9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000bce0 <pci_config_space_read_16>:
    bce0:	55                   	push   %ebp
    bce1:	89 e5                	mov    %esp,%ebp
    bce3:	53                   	push   %ebx
    bce4:	83 ec 30             	sub    $0x30,%esp
    bce7:	8b 45 08             	mov    0x8(%ebp),%eax
    bcea:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    bcf1:	50                   	push   %eax
    bcf2:	e8 b9 3b 00 00       	call   f8b0 <async_exchange_begin@plt>
    bcf7:	83 c4 0c             	add    $0xc,%esp
    bcfa:	8b 55 0c             	mov    0xc(%ebp),%edx
    bcfd:	89 c3                	mov    %eax,%ebx
    bcff:	8d 45 f4             	lea    -0xc(%ebp),%eax
    bd02:	6a 00                	push   $0x0
    bd04:	6a 00                	push   $0x0
    bd06:	6a 00                	push   $0x0
    bd08:	6a 00                	push   $0x0
    bd0a:	50                   	push   %eax
    bd0b:	6a 00                	push   $0x0
    bd0d:	6a 00                	push   $0x0
    bd0f:	52                   	push   %edx
    bd10:	6a 01                	push   $0x1
    bd12:	68 07 04 00 00       	push   $0x407
    bd17:	53                   	push   %ebx
    bd18:	e8 33 39 00 00       	call   f650 <async_req_fast@plt>
    bd1d:	83 c4 24             	add    $0x24,%esp
    bd20:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    bd23:	53                   	push   %ebx
    bd24:	e8 97 39 00 00       	call   f6c0 <async_exchange_end@plt>
    bd29:	8b 55 10             	mov    0x10(%ebp),%edx
    bd2c:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    bd2f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    bd32:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    bd35:	66 89 0a             	mov    %cx,(%edx)
    bd38:	c9                   	leave  
    bd39:	c3                   	ret    
    bd3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000bd40 <pci_config_space_read_32>:
    bd40:	55                   	push   %ebp
    bd41:	89 e5                	mov    %esp,%ebp
    bd43:	53                   	push   %ebx
    bd44:	83 ec 30             	sub    $0x30,%esp
    bd47:	8b 45 08             	mov    0x8(%ebp),%eax
    bd4a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    bd51:	50                   	push   %eax
    bd52:	e8 59 3b 00 00       	call   f8b0 <async_exchange_begin@plt>
    bd57:	83 c4 0c             	add    $0xc,%esp
    bd5a:	8b 55 0c             	mov    0xc(%ebp),%edx
    bd5d:	89 c3                	mov    %eax,%ebx
    bd5f:	8d 45 f4             	lea    -0xc(%ebp),%eax
    bd62:	6a 00                	push   $0x0
    bd64:	6a 00                	push   $0x0
    bd66:	6a 00                	push   $0x0
    bd68:	6a 00                	push   $0x0
    bd6a:	50                   	push   %eax
    bd6b:	6a 00                	push   $0x0
    bd6d:	6a 00                	push   $0x0
    bd6f:	52                   	push   %edx
    bd70:	6a 02                	push   $0x2
    bd72:	68 07 04 00 00       	push   $0x407
    bd77:	53                   	push   %ebx
    bd78:	e8 d3 38 00 00       	call   f650 <async_req_fast@plt>
    bd7d:	83 c4 24             	add    $0x24,%esp
    bd80:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    bd83:	53                   	push   %ebx
    bd84:	e8 37 39 00 00       	call   f6c0 <async_exchange_end@plt>
    bd89:	8b 55 10             	mov    0x10(%ebp),%edx
    bd8c:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    bd8f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    bd92:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    bd95:	89 0a                	mov    %ecx,(%edx)
    bd97:	c9                   	leave  
    bd98:	c3                   	ret    
    bd99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000bda0 <pci_config_space_write_8>:
    bda0:	55                   	push   %ebp
    bda1:	89 e5                	mov    %esp,%ebp
    bda3:	56                   	push   %esi
    bda4:	53                   	push   %ebx
    bda5:	83 ec 1c             	sub    $0x1c,%esp
    bda8:	8b 45 08             	mov    0x8(%ebp),%eax
    bdab:	8b 5d 10             	mov    0x10(%ebp),%ebx
    bdae:	50                   	push   %eax
    bdaf:	e8 fc 3a 00 00       	call   f8b0 <async_exchange_begin@plt>
    bdb4:	83 c4 0c             	add    $0xc,%esp
    bdb7:	8b 55 0c             	mov    0xc(%ebp),%edx
    bdba:	81 e3 ff 00 00 00    	and    $0xff,%ebx
    bdc0:	89 c6                	mov    %eax,%esi
    bdc2:	6a 00                	push   $0x0
    bdc4:	6a 00                	push   $0x0
    bdc6:	6a 00                	push   $0x0
    bdc8:	6a 00                	push   $0x0
    bdca:	6a 00                	push   $0x0
    bdcc:	6a 00                	push   $0x0
    bdce:	53                   	push   %ebx
    bdcf:	52                   	push   %edx
    bdd0:	6a 03                	push   $0x3
    bdd2:	68 07 04 00 00       	push   $0x407
    bdd7:	50                   	push   %eax
    bdd8:	e8 73 38 00 00       	call   f650 <async_req_fast@plt>
    bddd:	83 c4 24             	add    $0x24,%esp
    bde0:	89 45 f4             	mov    %eax,-0xc(%ebp)
    bde3:	56                   	push   %esi
    bde4:	e8 d7 38 00 00       	call   f6c0 <async_exchange_end@plt>
    bde9:	8b 45 f4             	mov    -0xc(%ebp),%eax
    bdec:	8d 65 f8             	lea    -0x8(%ebp),%esp
    bdef:	5b                   	pop    %ebx
    bdf0:	5e                   	pop    %esi
    bdf1:	5d                   	pop    %ebp
    bdf2:	c3                   	ret    
    bdf3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    bdf9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000be00 <pci_config_space_write_16>:
    be00:	55                   	push   %ebp
    be01:	89 e5                	mov    %esp,%ebp
    be03:	56                   	push   %esi
    be04:	53                   	push   %ebx
    be05:	83 ec 1c             	sub    $0x1c,%esp
    be08:	8b 45 08             	mov    0x8(%ebp),%eax
    be0b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    be0e:	50                   	push   %eax
    be0f:	e8 9c 3a 00 00       	call   f8b0 <async_exchange_begin@plt>
    be14:	83 c4 0c             	add    $0xc,%esp
    be17:	8b 55 0c             	mov    0xc(%ebp),%edx
    be1a:	81 e3 ff ff 00 00    	and    $0xffff,%ebx
    be20:	89 c6                	mov    %eax,%esi
    be22:	6a 00                	push   $0x0
    be24:	6a 00                	push   $0x0
    be26:	6a 00                	push   $0x0
    be28:	6a 00                	push   $0x0
    be2a:	6a 00                	push   $0x0
    be2c:	6a 00                	push   $0x0
    be2e:	53                   	push   %ebx
    be2f:	52                   	push   %edx
    be30:	6a 04                	push   $0x4
    be32:	68 07 04 00 00       	push   $0x407
    be37:	50                   	push   %eax
    be38:	e8 13 38 00 00       	call   f650 <async_req_fast@plt>
    be3d:	83 c4 24             	add    $0x24,%esp
    be40:	89 45 f4             	mov    %eax,-0xc(%ebp)
    be43:	56                   	push   %esi
    be44:	e8 77 38 00 00       	call   f6c0 <async_exchange_end@plt>
    be49:	8b 45 f4             	mov    -0xc(%ebp),%eax
    be4c:	8d 65 f8             	lea    -0x8(%ebp),%esp
    be4f:	5b                   	pop    %ebx
    be50:	5e                   	pop    %esi
    be51:	5d                   	pop    %ebp
    be52:	c3                   	ret    
    be53:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    be59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000be60 <pci_config_space_write_32>:
    be60:	55                   	push   %ebp
    be61:	89 e5                	mov    %esp,%ebp
    be63:	53                   	push   %ebx
    be64:	83 ec 20             	sub    $0x20,%esp
    be67:	8b 45 08             	mov    0x8(%ebp),%eax
    be6a:	50                   	push   %eax
    be6b:	e8 40 3a 00 00       	call   f8b0 <async_exchange_begin@plt>
    be70:	83 c4 0c             	add    $0xc,%esp
    be73:	8b 55 10             	mov    0x10(%ebp),%edx
    be76:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    be79:	89 c3                	mov    %eax,%ebx
    be7b:	6a 00                	push   $0x0
    be7d:	6a 00                	push   $0x0
    be7f:	6a 00                	push   $0x0
    be81:	6a 00                	push   $0x0
    be83:	6a 00                	push   $0x0
    be85:	6a 00                	push   $0x0
    be87:	52                   	push   %edx
    be88:	51                   	push   %ecx
    be89:	6a 05                	push   $0x5
    be8b:	68 07 04 00 00       	push   $0x407
    be90:	50                   	push   %eax
    be91:	e8 ba 37 00 00       	call   f650 <async_req_fast@plt>
    be96:	83 c4 24             	add    $0x24,%esp
    be99:	89 45 f4             	mov    %eax,-0xc(%ebp)
    be9c:	53                   	push   %ebx
    be9d:	e8 1e 38 00 00       	call   f6c0 <async_exchange_end@plt>
    bea2:	8b 45 f4             	mov    -0xc(%ebp),%eax
    bea5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    bea8:	c9                   	leave  
    bea9:	c3                   	ret    
    beaa:	66 90                	xchg   %ax,%ax
    beac:	66 90                	xchg   %ax,%ax
    beae:	66 90                	xchg   %ax,%ax

0000beb0 <callback_out>:
    beb0:	55                   	push   %ebp
    beb1:	89 e5                	mov    %esp,%ebp
    beb3:	53                   	push   %ebx
    beb4:	83 ec 0c             	sub    $0xc,%esp
    beb7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    beba:	8b 45 08             	mov    0x8(%ebp),%eax
    bebd:	50                   	push   %eax
    bebe:	8b 13                	mov    (%ebx),%edx
    bec0:	52                   	push   %edx
    bec1:	e8 9a 37 00 00       	call   f660 <async_answer_0@plt>
    bec6:	8b 43 08             	mov    0x8(%ebx),%eax
    bec9:	83 c4 10             	add    $0x10,%esp
    becc:	85 c0                	test   %eax,%eax
    bece:	74 0c                	je     bedc <callback_out+0x2c>
    bed0:	83 ec 0c             	sub    $0xc,%esp
    bed3:	50                   	push   %eax
    bed4:	e8 c7 3a 00 00       	call   f9a0 <free@plt>
    bed9:	83 c4 10             	add    $0x10,%esp
    bedc:	89 5d 08             	mov    %ebx,0x8(%ebp)
    bedf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    bee2:	c9                   	leave  
    bee3:	e9 b8 3a 00 00       	jmp    f9a0 <free@plt>
    bee8:	90                   	nop
    bee9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000bef0 <callback_in>:
    bef0:	55                   	push   %ebp
    bef1:	89 e5                	mov    %esp,%ebp
    bef3:	53                   	push   %ebx
    bef4:	53                   	push   %ebx
    bef5:	8b 45 08             	mov    0x8(%ebp),%eax
    bef8:	8b 55 0c             	mov    0xc(%ebp),%edx
    befb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    befe:	85 c0                	test   %eax,%eax
    bf00:	75 36                	jne    bf38 <callback_in+0x48>
    bf02:	8b 43 04             	mov    0x4(%ebx),%eax
    bf05:	85 c0                	test   %eax,%eax
    bf07:	75 4f                	jne    bf58 <callback_in+0x68>
    bf09:	50                   	push   %eax
    bf0a:	50                   	push   %eax
    bf0b:	6a 00                	push   $0x0
    bf0d:	8b 13                	mov    (%ebx),%edx
    bf0f:	52                   	push   %edx
    bf10:	e8 4b 37 00 00       	call   f660 <async_answer_0@plt>
    bf15:	8b 43 08             	mov    0x8(%ebx),%eax
    bf18:	83 c4 10             	add    $0x10,%esp
    bf1b:	85 c0                	test   %eax,%eax
    bf1d:	74 0c                	je     bf2b <callback_in+0x3b>
    bf1f:	83 ec 0c             	sub    $0xc,%esp
    bf22:	50                   	push   %eax
    bf23:	e8 78 3a 00 00       	call   f9a0 <free@plt>
    bf28:	83 c4 10             	add    $0x10,%esp
    bf2b:	89 5d 08             	mov    %ebx,0x8(%ebp)
    bf2e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    bf31:	c9                   	leave  
    bf32:	e9 69 3a 00 00       	jmp    f9a0 <free@plt>
    bf37:	90                   	nop
    bf38:	52                   	push   %edx
    bf39:	52                   	push   %edx
    bf3a:	50                   	push   %eax
    bf3b:	8b 0b                	mov    (%ebx),%ecx
    bf3d:	51                   	push   %ecx
    bf3e:	e8 1d 37 00 00       	call   f660 <async_answer_0@plt>
    bf43:	8b 43 04             	mov    0x4(%ebx),%eax
    bf46:	83 c4 10             	add    $0x10,%esp
    bf49:	85 c0                	test   %eax,%eax
    bf4b:	75 23                	jne    bf70 <callback_in+0x80>
    bf4d:	8b 43 08             	mov    0x8(%ebx),%eax
    bf50:	85 c0                	test   %eax,%eax
    bf52:	75 cb                	jne    bf1f <callback_in+0x2f>
    bf54:	eb d5                	jmp    bf2b <callback_in+0x3b>
    bf56:	66 90                	xchg   %ax,%ax
    bf58:	51                   	push   %ecx
    bf59:	52                   	push   %edx
    bf5a:	8b 53 08             	mov    0x8(%ebx),%edx
    bf5d:	52                   	push   %edx
    bf5e:	50                   	push   %eax
    bf5f:	e8 8c 36 00 00       	call   f5f0 <async_data_read_finalize@plt>
    bf64:	83 c4 10             	add    $0x10,%esp
    bf67:	eb a0                	jmp    bf09 <callback_in+0x19>
    bf69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    bf70:	51                   	push   %ecx
    bf71:	51                   	push   %ecx
    bf72:	6a ef                	push   $0xffffffef
    bf74:	50                   	push   %eax
    bf75:	e8 e6 36 00 00       	call   f660 <async_answer_0@plt>
    bf7a:	8b 43 08             	mov    0x8(%ebx),%eax
    bf7d:	83 c4 10             	add    $0x10,%esp
    bf80:	85 c0                	test   %eax,%eax
    bf82:	75 9b                	jne    bf1f <callback_in+0x2f>
    bf84:	eb a5                	jmp    bf2b <callback_in+0x3b>
    bf86:	8d 76 00             	lea    0x0(%esi),%esi
    bf89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000bf90 <remote_usbhc_write>:
    bf90:	55                   	push   %ebp
    bf91:	89 e5                	mov    %esp,%ebp
    bf93:	57                   	push   %edi
    bf94:	56                   	push   %esi
    bf95:	53                   	push   %ebx
    bf96:	83 ec 2c             	sub    $0x2c,%esp
    bf99:	8b 7d 08             	mov    0x8(%ebp),%edi
    bf9c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    bf9f:	8b 45 14             	mov    0x14(%ebp),%eax
    bfa2:	85 ff                	test   %edi,%edi
    bfa4:	0f 84 58 01 00 00    	je     c102 <remote_usbhc_write+0x172>
    bfaa:	85 db                	test   %ebx,%ebx
    bfac:	0f 84 3b 01 00 00    	je     c0ed <remote_usbhc_write+0x15d>
    bfb2:	85 c0                	test   %eax,%eax
    bfb4:	0f 84 1e 01 00 00    	je     c0d8 <remote_usbhc_write+0x148>
    bfba:	8b 53 04             	mov    0x4(%ebx),%edx
    bfbd:	85 d2                	test   %edx,%edx
    bfbf:	0f 84 e3 00 00 00    	je     c0a8 <remote_usbhc_write+0x118>
    bfc5:	83 ec 0c             	sub    $0xc,%esp
    bfc8:	8b 48 08             	mov    0x8(%eax),%ecx
    bfcb:	8b 50 14             	mov    0x14(%eax),%edx
    bfce:	8b 70 0c             	mov    0xc(%eax),%esi
    bfd1:	8b 40 10             	mov    0x10(%eax),%eax
    bfd4:	89 4d cc             	mov    %ecx,-0x34(%ebp)
    bfd7:	6a 0c                	push   $0xc
    bfd9:	89 45 d0             	mov    %eax,-0x30(%ebp)
    bfdc:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    bfdf:	e8 3c 36 00 00       	call   f620 <malloc@plt>
    bfe4:	83 c4 10             	add    $0x10,%esp
    bfe7:	89 c7                	mov    %eax,%edi
    bfe9:	85 c0                	test   %eax,%eax
    bfeb:	0f 84 cf 00 00 00    	je     c0c0 <remote_usbhc_write+0x130>
    bff1:	8b 45 10             	mov    0x10(%ebp),%eax
    bff4:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
    bffb:	89 07                	mov    %eax,(%edi)
    bffd:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%edi)
    c004:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    c00b:	85 f6                	test   %esi,%esi
    c00d:	75 31                	jne    c040 <remote_usbhc_write+0xb0>
    c00f:	31 c0                	xor    %eax,%eax
    c011:	31 c9                	xor    %ecx,%ecx
    c013:	57                   	push   %edi
    c014:	8b 75 d4             	mov    -0x2c(%ebp),%esi
    c017:	68 b0 be 00 00       	push   $0xbeb0
    c01c:	51                   	push   %ecx
    c01d:	50                   	push   %eax
    c01e:	8b 45 d0             	mov    -0x30(%ebp),%eax
    c021:	56                   	push   %esi
    c022:	50                   	push   %eax
    c023:	8b 45 cc             	mov    -0x34(%ebp),%eax
    c026:	50                   	push   %eax
    c027:	8b 45 08             	mov    0x8(%ebp),%eax
    c02a:	50                   	push   %eax
    c02b:	ff 53 04             	call   *0x4(%ebx)
    c02e:	83 c4 20             	add    $0x20,%esp
    c031:	85 c0                	test   %eax,%eax
    c033:	75 3b                	jne    c070 <remote_usbhc_write+0xe0>
    c035:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c038:	5b                   	pop    %ebx
    c039:	5e                   	pop    %esi
    c03a:	5f                   	pop    %edi
    c03b:	5d                   	pop    %ebp
    c03c:	c3                   	ret    
    c03d:	8d 76 00             	lea    0x0(%esi),%esi
    c040:	50                   	push   %eax
    c041:	50                   	push   %eax
    c042:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    c045:	50                   	push   %eax
    c046:	8d 47 08             	lea    0x8(%edi),%eax
    c049:	6a 00                	push   $0x0
    c04b:	68 fc 03 00 00       	push   $0x3fc
    c050:	6a 01                	push   $0x1
    c052:	6a 00                	push   $0x0
    c054:	50                   	push   %eax
    c055:	e8 d6 38 00 00       	call   f930 <async_data_write_accept@plt>
    c05a:	83 c4 20             	add    $0x20,%esp
    c05d:	85 c0                	test   %eax,%eax
    c05f:	75 0f                	jne    c070 <remote_usbhc_write+0xe0>
    c061:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    c064:	8b 47 08             	mov    0x8(%edi),%eax
    c067:	eb aa                	jmp    c013 <remote_usbhc_write+0x83>
    c069:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c070:	8b 5d 10             	mov    0x10(%ebp),%ebx
    c073:	51                   	push   %ecx
    c074:	51                   	push   %ecx
    c075:	50                   	push   %eax
    c076:	53                   	push   %ebx
    c077:	e8 e4 35 00 00       	call   f660 <async_answer_0@plt>
    c07c:	8b 47 08             	mov    0x8(%edi),%eax
    c07f:	83 c4 10             	add    $0x10,%esp
    c082:	85 c0                	test   %eax,%eax
    c084:	74 0c                	je     c092 <remote_usbhc_write+0x102>
    c086:	83 ec 0c             	sub    $0xc,%esp
    c089:	50                   	push   %eax
    c08a:	e8 11 39 00 00       	call   f9a0 <free@plt>
    c08f:	83 c4 10             	add    $0x10,%esp
    c092:	83 ec 0c             	sub    $0xc,%esp
    c095:	57                   	push   %edi
    c096:	e8 05 39 00 00       	call   f9a0 <free@plt>
    c09b:	83 c4 10             	add    $0x10,%esp
    c09e:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c0a1:	5b                   	pop    %ebx
    c0a2:	5e                   	pop    %esi
    c0a3:	5f                   	pop    %edi
    c0a4:	5d                   	pop    %ebp
    c0a5:	c3                   	ret    
    c0a6:	66 90                	xchg   %ax,%ax
    c0a8:	50                   	push   %eax
    c0a9:	50                   	push   %eax
    c0aa:	8b 45 10             	mov    0x10(%ebp),%eax
    c0ad:	6a f5                	push   $0xfffffff5
    c0af:	50                   	push   %eax
    c0b0:	e8 ab 35 00 00       	call   f660 <async_answer_0@plt>
    c0b5:	83 c4 10             	add    $0x10,%esp
    c0b8:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c0bb:	5b                   	pop    %ebx
    c0bc:	5e                   	pop    %esi
    c0bd:	5f                   	pop    %edi
    c0be:	5d                   	pop    %ebp
    c0bf:	c3                   	ret    
    c0c0:	8b 55 10             	mov    0x10(%ebp),%edx
    c0c3:	50                   	push   %eax
    c0c4:	50                   	push   %eax
    c0c5:	6a fe                	push   $0xfffffffe
    c0c7:	52                   	push   %edx
    c0c8:	e8 93 35 00 00       	call   f660 <async_answer_0@plt>
    c0cd:	83 c4 10             	add    $0x10,%esp
    c0d0:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c0d3:	5b                   	pop    %ebx
    c0d4:	5e                   	pop    %esi
    c0d5:	5f                   	pop    %edi
    c0d6:	5d                   	pop    %ebp
    c0d7:	c3                   	ret    
    c0d8:	51                   	push   %ecx
    c0d9:	68 43 01 00 00       	push   $0x143
    c0de:	68 a0 f1 00 00       	push   $0xf1a0
    c0e3:	68 03 f1 00 00       	push   $0xf103
    c0e8:	e8 e3 35 00 00       	call   f6d0 <assert_abort@plt>
    c0ed:	53                   	push   %ebx
    c0ee:	68 42 01 00 00       	push   $0x142
    c0f3:	68 a0 f1 00 00       	push   $0xf1a0
    c0f8:	68 fd f0 00 00       	push   $0xf0fd
    c0fd:	e8 ce 35 00 00       	call   f6d0 <assert_abort@plt>
    c102:	56                   	push   %esi
    c103:	68 41 01 00 00       	push   $0x141
    c108:	68 a0 f1 00 00       	push   $0xf1a0
    c10d:	68 f9 f0 00 00       	push   $0xf0f9
    c112:	e8 b9 35 00 00       	call   f6d0 <assert_abort@plt>
    c117:	89 f6                	mov    %esi,%esi
    c119:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000c120 <remote_usbhc_read>:
    c120:	55                   	push   %ebp
    c121:	89 e5                	mov    %esp,%ebp
    c123:	57                   	push   %edi
    c124:	56                   	push   %esi
    c125:	53                   	push   %ebx
    c126:	83 ec 2c             	sub    $0x2c,%esp
    c129:	8b 7d 08             	mov    0x8(%ebp),%edi
    c12c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    c12f:	8b 45 14             	mov    0x14(%ebp),%eax
    c132:	85 ff                	test   %edi,%edi
    c134:	0f 84 51 01 00 00    	je     c28b <remote_usbhc_read+0x16b>
    c13a:	85 db                	test   %ebx,%ebx
    c13c:	0f 84 73 01 00 00    	je     c2b5 <remote_usbhc_read+0x195>
    c142:	85 c0                	test   %eax,%eax
    c144:	0f 84 56 01 00 00    	je     c2a0 <remote_usbhc_read+0x180>
    c14a:	8b 13                	mov    (%ebx),%edx
    c14c:	85 d2                	test   %edx,%edx
    c14e:	0f 84 f4 00 00 00    	je     c248 <remote_usbhc_read+0x128>
    c154:	83 ec 0c             	sub    $0xc,%esp
    c157:	8b 50 10             	mov    0x10(%eax),%edx
    c15a:	8b 70 08             	mov    0x8(%eax),%esi
    c15d:	8b 40 0c             	mov    0xc(%eax),%eax
    c160:	89 45 d0             	mov    %eax,-0x30(%ebp)
    c163:	6a 0c                	push   $0xc
    c165:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    c168:	e8 b3 34 00 00       	call   f620 <malloc@plt>
    c16d:	83 c4 10             	add    $0x10,%esp
    c170:	89 c7                	mov    %eax,%edi
    c172:	85 c0                	test   %eax,%eax
    c174:	0f 84 e6 00 00 00    	je     c260 <remote_usbhc_read+0x140>
    c17a:	8b 45 10             	mov    0x10(%ebp),%eax
    c17d:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
    c184:	89 07                	mov    %eax,(%edi)
    c186:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%edi)
    c18d:	50                   	push   %eax
    c18e:	50                   	push   %eax
    c18f:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    c192:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    c199:	50                   	push   %eax
    c19a:	8d 47 04             	lea    0x4(%edi),%eax
    c19d:	50                   	push   %eax
    c19e:	e8 6d 36 00 00       	call   f810 <async_data_read_receive@plt>
    c1a3:	83 c4 10             	add    $0x10,%esp
    c1a6:	84 c0                	test   %al,%al
    c1a8:	75 1e                	jne    c1c8 <remote_usbhc_read+0xa8>
    c1aa:	8b 75 10             	mov    0x10(%ebp),%esi
    c1ad:	53                   	push   %ebx
    c1ae:	53                   	push   %ebx
    c1af:	6a f8                	push   $0xfffffff8
    c1b1:	56                   	push   %esi
    c1b2:	e8 a9 34 00 00       	call   f660 <async_answer_0@plt>
    c1b7:	83 c4 10             	add    $0x10,%esp
    c1ba:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c1bd:	5b                   	pop    %ebx
    c1be:	5e                   	pop    %esi
    c1bf:	5f                   	pop    %edi
    c1c0:	5d                   	pop    %ebp
    c1c1:	c3                   	ret    
    c1c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    c1c8:	83 ec 0c             	sub    $0xc,%esp
    c1cb:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    c1ce:	51                   	push   %ecx
    c1cf:	e8 4c 34 00 00       	call   f620 <malloc@plt>
    c1d4:	83 c4 10             	add    $0x10,%esp
    c1d7:	89 47 08             	mov    %eax,0x8(%edi)
    c1da:	85 c0                	test   %eax,%eax
    c1dc:	0f 84 96 00 00 00    	je     c278 <remote_usbhc_read+0x158>
    c1e2:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    c1e5:	57                   	push   %edi
    c1e6:	68 f0 be 00 00       	push   $0xbef0
    c1eb:	51                   	push   %ecx
    c1ec:	50                   	push   %eax
    c1ed:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    c1f0:	50                   	push   %eax
    c1f1:	8b 45 d0             	mov    -0x30(%ebp),%eax
    c1f4:	50                   	push   %eax
    c1f5:	8b 45 08             	mov    0x8(%ebp),%eax
    c1f8:	56                   	push   %esi
    c1f9:	50                   	push   %eax
    c1fa:	ff 13                	call   *(%ebx)
    c1fc:	83 c4 20             	add    $0x20,%esp
    c1ff:	89 c3                	mov    %eax,%ebx
    c201:	85 c0                	test   %eax,%eax
    c203:	74 b5                	je     c1ba <remote_usbhc_read+0x9a>
    c205:	56                   	push   %esi
    c206:	56                   	push   %esi
    c207:	50                   	push   %eax
    c208:	8b 47 04             	mov    0x4(%edi),%eax
    c20b:	50                   	push   %eax
    c20c:	e8 4f 34 00 00       	call   f660 <async_answer_0@plt>
    c211:	58                   	pop    %eax
    c212:	5a                   	pop    %edx
    c213:	53                   	push   %ebx
    c214:	8b 4d 10             	mov    0x10(%ebp),%ecx
    c217:	51                   	push   %ecx
    c218:	e8 43 34 00 00       	call   f660 <async_answer_0@plt>
    c21d:	8b 47 08             	mov    0x8(%edi),%eax
    c220:	83 c4 10             	add    $0x10,%esp
    c223:	85 c0                	test   %eax,%eax
    c225:	74 0c                	je     c233 <remote_usbhc_read+0x113>
    c227:	83 ec 0c             	sub    $0xc,%esp
    c22a:	50                   	push   %eax
    c22b:	e8 70 37 00 00       	call   f9a0 <free@plt>
    c230:	83 c4 10             	add    $0x10,%esp
    c233:	83 ec 0c             	sub    $0xc,%esp
    c236:	57                   	push   %edi
    c237:	e8 64 37 00 00       	call   f9a0 <free@plt>
    c23c:	83 c4 10             	add    $0x10,%esp
    c23f:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c242:	5b                   	pop    %ebx
    c243:	5e                   	pop    %esi
    c244:	5f                   	pop    %edi
    c245:	5d                   	pop    %ebp
    c246:	c3                   	ret    
    c247:	90                   	nop
    c248:	50                   	push   %eax
    c249:	50                   	push   %eax
    c24a:	8b 45 10             	mov    0x10(%ebp),%eax
    c24d:	6a f5                	push   $0xfffffff5
    c24f:	50                   	push   %eax
    c250:	e8 0b 34 00 00       	call   f660 <async_answer_0@plt>
    c255:	83 c4 10             	add    $0x10,%esp
    c258:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c25b:	5b                   	pop    %ebx
    c25c:	5e                   	pop    %esi
    c25d:	5f                   	pop    %edi
    c25e:	5d                   	pop    %ebp
    c25f:	c3                   	ret    
    c260:	8b 55 10             	mov    0x10(%ebp),%edx
    c263:	50                   	push   %eax
    c264:	50                   	push   %eax
    c265:	6a fe                	push   $0xfffffffe
    c267:	52                   	push   %edx
    c268:	e8 f3 33 00 00       	call   f660 <async_answer_0@plt>
    c26d:	83 c4 10             	add    $0x10,%esp
    c270:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c273:	5b                   	pop    %ebx
    c274:	5e                   	pop    %esi
    c275:	5f                   	pop    %edi
    c276:	5d                   	pop    %ebp
    c277:	c3                   	ret    
    c278:	50                   	push   %eax
    c279:	50                   	push   %eax
    c27a:	6a fe                	push   $0xfffffffe
    c27c:	8b 47 04             	mov    0x4(%edi),%eax
    c27f:	50                   	push   %eax
    c280:	e8 db 33 00 00       	call   f660 <async_answer_0@plt>
    c285:	58                   	pop    %eax
    c286:	5a                   	pop    %edx
    c287:	6a fe                	push   $0xfffffffe
    c289:	eb 89                	jmp    c214 <remote_usbhc_read+0xf4>
    c28b:	56                   	push   %esi
    c28c:	68 10 01 00 00       	push   $0x110
    c291:	68 a0 f1 00 00       	push   $0xf1a0
    c296:	68 f9 f0 00 00       	push   $0xf0f9
    c29b:	e8 30 34 00 00       	call   f6d0 <assert_abort@plt>
    c2a0:	51                   	push   %ecx
    c2a1:	68 12 01 00 00       	push   $0x112
    c2a6:	68 a0 f1 00 00       	push   $0xf1a0
    c2ab:	68 03 f1 00 00       	push   $0xf103
    c2b0:	e8 1b 34 00 00       	call   f6d0 <assert_abort@plt>
    c2b5:	53                   	push   %ebx
    c2b6:	68 11 01 00 00       	push   $0x111
    c2bb:	68 a0 f1 00 00       	push   $0xf1a0
    c2c0:	68 fd f0 00 00       	push   $0xf0fd
    c2c5:	e8 06 34 00 00       	call   f6d0 <assert_abort@plt>
    c2ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000c2d0 <usbhc_read>:
    c2d0:	55                   	push   %ebp
    c2d1:	89 e5                	mov    %esp,%ebp
    c2d3:	57                   	push   %edi
    c2d4:	56                   	push   %esi
    c2d5:	53                   	push   %ebx
    c2d6:	83 ec 4c             	sub    $0x4c,%esp
    c2d9:	8b 5d 08             	mov    0x8(%ebp),%ebx
    c2dc:	8b 45 0c             	mov    0xc(%ebp),%eax
    c2df:	8b 7d 10             	mov    0x10(%ebp),%edi
    c2e2:	8b 4d 14             	mov    0x14(%ebp),%ecx
    c2e5:	8b 75 18             	mov    0x18(%ebp),%esi
    c2e8:	66 89 45 b6          	mov    %ax,-0x4a(%ebp)
    c2ec:	85 db                	test   %ebx,%ebx
    c2ee:	0f 84 d2 00 00 00    	je     c3c6 <usbhc_read+0xf6>
    c2f4:	8b 45 20             	mov    0x20(%ebp),%eax
    c2f7:	85 c0                	test   %eax,%eax
    c2f9:	75 15                	jne    c310 <usbhc_read+0x40>
    c2fb:	89 ca                	mov    %ecx,%edx
    c2fd:	31 c0                	xor    %eax,%eax
    c2ff:	09 f2                	or     %esi,%edx
    c301:	75 0d                	jne    c310 <usbhc_read+0x40>
    c303:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c306:	5b                   	pop    %ebx
    c307:	5e                   	pop    %esi
    c308:	5f                   	pop    %edi
    c309:	5d                   	pop    %ebp
    c30a:	c3                   	ret    
    c30b:	90                   	nop
    c30c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c310:	c1 e7 10             	shl    $0x10,%edi
    c313:	31 d2                	xor    %edx,%edx
    c315:	66 8b 55 b6          	mov    -0x4a(%ebp),%dx
    c319:	50                   	push   %eax
    c31a:	09 d7                	or     %edx,%edi
    c31c:	6a 00                	push   $0x0
    c31e:	56                   	push   %esi
    c31f:	51                   	push   %ecx
    c320:	57                   	push   %edi
    c321:	6a 00                	push   $0x0
    c323:	68 09 04 00 00       	push   $0x409
    c328:	53                   	push   %ebx
    c329:	e8 42 33 00 00       	call   f670 <async_send_fast@plt>
    c32e:	83 c4 20             	add    $0x20,%esp
    c331:	89 c6                	mov    %eax,%esi
    c333:	85 c0                	test   %eax,%eax
    c335:	74 69                	je     c3a0 <usbhc_read+0xd0>
    c337:	8d 45 c4             	lea    -0x3c(%ebp),%eax
    c33a:	8b 7d 20             	mov    0x20(%ebp),%edi
    c33d:	50                   	push   %eax
    c33e:	8b 45 1c             	mov    0x1c(%ebp),%eax
    c341:	57                   	push   %edi
    c342:	50                   	push   %eax
    c343:	53                   	push   %ebx
    c344:	e8 47 33 00 00       	call   f690 <async_data_read@plt>
    c349:	83 c4 10             	add    $0x10,%esp
    c34c:	85 c0                	test   %eax,%eax
    c34e:	74 60                	je     c3b0 <usbhc_read+0xe0>
    c350:	52                   	push   %edx
    c351:	52                   	push   %edx
    c352:	8d 55 bc             	lea    -0x44(%ebp),%edx
    c355:	52                   	push   %edx
    c356:	50                   	push   %eax
    c357:	e8 24 32 00 00       	call   f580 <async_wait_for@plt>
    c35c:	8d 45 c0             	lea    -0x40(%ebp),%eax
    c35f:	59                   	pop    %ecx
    c360:	5b                   	pop    %ebx
    c361:	50                   	push   %eax
    c362:	56                   	push   %esi
    c363:	e8 18 32 00 00       	call   f580 <async_wait_for@plt>
    c368:	8b 45 bc             	mov    -0x44(%ebp),%eax
    c36b:	83 c4 10             	add    $0x10,%esp
    c36e:	85 c0                	test   %eax,%eax
    c370:	74 0e                	je     c380 <usbhc_read+0xb0>
    c372:	8b 55 c0             	mov    -0x40(%ebp),%edx
    c375:	85 d2                	test   %edx,%edx
    c377:	74 8a                	je     c303 <usbhc_read+0x33>
    c379:	89 d0                	mov    %edx,%eax
    c37b:	eb 86                	jmp    c303 <usbhc_read+0x33>
    c37d:	8d 76 00             	lea    0x0(%esi),%esi
    c380:	8b 45 c0             	mov    -0x40(%ebp),%eax
    c383:	85 c0                	test   %eax,%eax
    c385:	0f 85 78 ff ff ff    	jne    c303 <usbhc_read+0x33>
    c38b:	8b 45 24             	mov    0x24(%ebp),%eax
    c38e:	8b 55 cc             	mov    -0x34(%ebp),%edx
    c391:	89 10                	mov    %edx,(%eax)
    c393:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c396:	31 c0                	xor    %eax,%eax
    c398:	5b                   	pop    %ebx
    c399:	5e                   	pop    %esi
    c39a:	5f                   	pop    %edi
    c39b:	5d                   	pop    %ebp
    c39c:	c3                   	ret    
    c39d:	8d 76 00             	lea    0x0(%esi),%esi
    c3a0:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c3a5:	e9 59 ff ff ff       	jmp    c303 <usbhc_read+0x33>
    c3aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    c3b0:	83 ec 0c             	sub    $0xc,%esp
    c3b3:	56                   	push   %esi
    c3b4:	e8 87 35 00 00       	call   f940 <async_forget@plt>
    c3b9:	83 c4 10             	add    $0x10,%esp
    c3bc:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c3c1:	e9 3d ff ff ff       	jmp    c303 <usbhc_read+0x33>
    c3c6:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    c3cb:	e9 33 ff ff ff       	jmp    c303 <usbhc_read+0x33>

0000c3d0 <usbhc_write>:
    c3d0:	55                   	push   %ebp
    c3d1:	89 e5                	mov    %esp,%ebp
    c3d3:	57                   	push   %edi
    c3d4:	56                   	push   %esi
    c3d5:	53                   	push   %ebx
    c3d6:	83 ec 2c             	sub    $0x2c,%esp
    c3d9:	8b 45 0c             	mov    0xc(%ebp),%eax
    c3dc:	8b 7d 10             	mov    0x10(%ebp),%edi
    c3df:	66 89 45 d4          	mov    %ax,-0x2c(%ebp)
    c3e3:	8b 45 08             	mov    0x8(%ebp),%eax
    c3e6:	8b 4d 14             	mov    0x14(%ebp),%ecx
    c3e9:	8b 75 18             	mov    0x18(%ebp),%esi
    c3ec:	8b 5d 20             	mov    0x20(%ebp),%ebx
    c3ef:	85 c0                	test   %eax,%eax
    c3f1:	0f 84 9b 00 00 00    	je     c492 <usbhc_write+0xc2>
    c3f7:	85 db                	test   %ebx,%ebx
    c3f9:	75 15                	jne    c410 <usbhc_write+0x40>
    c3fb:	89 ca                	mov    %ecx,%edx
    c3fd:	31 c0                	xor    %eax,%eax
    c3ff:	09 f2                	or     %esi,%edx
    c401:	75 0d                	jne    c410 <usbhc_write+0x40>
    c403:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c406:	5b                   	pop    %ebx
    c407:	5e                   	pop    %esi
    c408:	5f                   	pop    %edi
    c409:	5d                   	pop    %ebp
    c40a:	c3                   	ret    
    c40b:	90                   	nop
    c40c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c410:	31 d2                	xor    %edx,%edx
    c412:	6a 00                	push   $0x0
    c414:	c1 e7 10             	shl    $0x10,%edi
    c417:	66 8b 55 d4          	mov    -0x2c(%ebp),%dx
    c41b:	56                   	push   %esi
    c41c:	09 d7                	or     %edx,%edi
    c41e:	8b 75 08             	mov    0x8(%ebp),%esi
    c421:	51                   	push   %ecx
    c422:	53                   	push   %ebx
    c423:	57                   	push   %edi
    c424:	6a 01                	push   $0x1
    c426:	68 09 04 00 00       	push   $0x409
    c42b:	56                   	push   %esi
    c42c:	e8 6f 33 00 00       	call   f7a0 <async_send_slow@plt>
    c431:	83 c4 20             	add    $0x20,%esp
    c434:	89 c6                	mov    %eax,%esi
    c436:	85 c0                	test   %eax,%eax
    c438:	74 4e                	je     c488 <usbhc_write+0xb8>
    c43a:	85 db                	test   %ebx,%ebx
    c43c:	74 16                	je     c454 <usbhc_write+0x84>
    c43e:	8b 4d 1c             	mov    0x1c(%ebp),%ecx
    c441:	52                   	push   %edx
    c442:	53                   	push   %ebx
    c443:	8b 5d 08             	mov    0x8(%ebp),%ebx
    c446:	51                   	push   %ecx
    c447:	53                   	push   %ebx
    c448:	e8 73 31 00 00       	call   f5c0 <async_data_write_start@plt>
    c44d:	83 c4 10             	add    $0x10,%esp
    c450:	85 c0                	test   %eax,%eax
    c452:	75 1c                	jne    c470 <usbhc_write+0xa0>
    c454:	50                   	push   %eax
    c455:	50                   	push   %eax
    c456:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    c459:	50                   	push   %eax
    c45a:	56                   	push   %esi
    c45b:	e8 20 31 00 00       	call   f580 <async_wait_for@plt>
    c460:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    c463:	83 c4 10             	add    $0x10,%esp
    c466:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c469:	5b                   	pop    %ebx
    c46a:	5e                   	pop    %esi
    c46b:	5f                   	pop    %edi
    c46c:	5d                   	pop    %ebp
    c46d:	c3                   	ret    
    c46e:	66 90                	xchg   %ax,%ax
    c470:	83 ec 0c             	sub    $0xc,%esp
    c473:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    c476:	56                   	push   %esi
    c477:	e8 c4 34 00 00       	call   f940 <async_forget@plt>
    c47c:	83 c4 10             	add    $0x10,%esp
    c47f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    c482:	e9 7c ff ff ff       	jmp    c403 <usbhc_write+0x33>
    c487:	90                   	nop
    c488:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c48d:	e9 71 ff ff ff       	jmp    c403 <usbhc_write+0x33>
    c492:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    c497:	e9 67 ff ff ff       	jmp    c403 <usbhc_write+0x33>
    c49c:	66 90                	xchg   %ax,%ax
    c49e:	66 90                	xchg   %ax,%ax

0000c4a0 <remote_usbhid_get_report_descriptor>:
    c4a0:	55                   	push   %ebp
    c4a1:	89 e5                	mov    %esp,%ebp
    c4a3:	56                   	push   %esi
    c4a4:	53                   	push   %ebx
    c4a5:	83 ec 10             	sub    $0x10,%esp
    c4a8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    c4ab:	8b 43 0c             	mov    0xc(%ebx),%eax
    c4ae:	85 c0                	test   %eax,%eax
    c4b0:	0f 84 02 01 00 00    	je     c5b8 <remote_usbhid_get_report_descriptor+0x118>
    c4b6:	50                   	push   %eax
    c4b7:	50                   	push   %eax
    c4b8:	8d 45 ec             	lea    -0x14(%ebp),%eax
    c4bb:	50                   	push   %eax
    c4bc:	8d 45 f0             	lea    -0x10(%ebp),%eax
    c4bf:	50                   	push   %eax
    c4c0:	e8 4b 33 00 00       	call   f810 <async_data_read_receive@plt>
    c4c5:	83 c4 10             	add    $0x10,%esp
    c4c8:	84 c0                	test   %al,%al
    c4ca:	0f 84 98 00 00 00    	je     c568 <remote_usbhid_get_report_descriptor+0xc8>
    c4d0:	8b 45 ec             	mov    -0x14(%ebp),%eax
    c4d3:	85 c0                	test   %eax,%eax
    c4d5:	75 29                	jne    c500 <remote_usbhid_get_report_descriptor+0x60>
    c4d7:	8b 45 f0             	mov    -0x10(%ebp),%eax
    c4da:	56                   	push   %esi
    c4db:	56                   	push   %esi
    c4dc:	6a f2                	push   $0xfffffff2
    c4de:	50                   	push   %eax
    c4df:	e8 7c 31 00 00       	call   f660 <async_answer_0@plt>
    c4e4:	8b 4d 10             	mov    0x10(%ebp),%ecx
    c4e7:	58                   	pop    %eax
    c4e8:	5a                   	pop    %edx
    c4e9:	6a f2                	push   $0xfffffff2
    c4eb:	51                   	push   %ecx
    c4ec:	e8 6f 31 00 00       	call   f660 <async_answer_0@plt>
    c4f1:	83 c4 10             	add    $0x10,%esp
    c4f4:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c4f7:	5b                   	pop    %ebx
    c4f8:	5e                   	pop    %esi
    c4f9:	5d                   	pop    %ebp
    c4fa:	c3                   	ret    
    c4fb:	90                   	nop
    c4fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c500:	83 ec 0c             	sub    $0xc,%esp
    c503:	50                   	push   %eax
    c504:	e8 17 31 00 00       	call   f620 <malloc@plt>
    c509:	83 c4 10             	add    $0x10,%esp
    c50c:	89 c6                	mov    %eax,%esi
    c50e:	85 c0                	test   %eax,%eax
    c510:	0f 84 ba 00 00 00    	je     c5d0 <remote_usbhid_get_report_descriptor+0x130>
    c516:	8d 45 f4             	lea    -0xc(%ebp),%eax
    c519:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    c520:	50                   	push   %eax
    c521:	8b 45 ec             	mov    -0x14(%ebp),%eax
    c524:	50                   	push   %eax
    c525:	8b 45 08             	mov    0x8(%ebp),%eax
    c528:	56                   	push   %esi
    c529:	50                   	push   %eax
    c52a:	ff 53 0c             	call   *0xc(%ebx)
    c52d:	8b 55 f4             	mov    -0xc(%ebp),%edx
    c530:	83 c4 10             	add    $0x10,%esp
    c533:	3b 55 ec             	cmp    -0x14(%ebp),%edx
    c536:	76 48                	jbe    c580 <remote_usbhid_get_report_descriptor+0xe0>
    c538:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx
    c53d:	83 ec 0c             	sub    $0xc,%esp
    c540:	56                   	push   %esi
    c541:	e8 5a 34 00 00       	call   f9a0 <free@plt>
    c546:	8b 4d f0             	mov    -0x10(%ebp),%ecx
    c549:	58                   	pop    %eax
    c54a:	5a                   	pop    %edx
    c54b:	53                   	push   %ebx
    c54c:	51                   	push   %ecx
    c54d:	e8 0e 31 00 00       	call   f660 <async_answer_0@plt>
    c552:	5e                   	pop    %esi
    c553:	58                   	pop    %eax
    c554:	8b 45 10             	mov    0x10(%ebp),%eax
    c557:	53                   	push   %ebx
    c558:	50                   	push   %eax
    c559:	e8 02 31 00 00       	call   f660 <async_answer_0@plt>
    c55e:	83 c4 10             	add    $0x10,%esp
    c561:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c564:	5b                   	pop    %ebx
    c565:	5e                   	pop    %esi
    c566:	5d                   	pop    %ebp
    c567:	c3                   	ret    
    c568:	8b 75 10             	mov    0x10(%ebp),%esi
    c56b:	53                   	push   %ebx
    c56c:	53                   	push   %ebx
    c56d:	6a f2                	push   $0xfffffff2
    c56f:	56                   	push   %esi
    c570:	e8 eb 30 00 00       	call   f660 <async_answer_0@plt>
    c575:	83 c4 10             	add    $0x10,%esp
    c578:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c57b:	5b                   	pop    %ebx
    c57c:	5e                   	pop    %esi
    c57d:	5d                   	pop    %ebp
    c57e:	c3                   	ret    
    c57f:	90                   	nop
    c580:	89 c3                	mov    %eax,%ebx
    c582:	85 c0                	test   %eax,%eax
    c584:	75 b7                	jne    c53d <remote_usbhid_get_report_descriptor+0x9d>
    c586:	50                   	push   %eax
    c587:	52                   	push   %edx
    c588:	8b 55 f0             	mov    -0x10(%ebp),%edx
    c58b:	56                   	push   %esi
    c58c:	52                   	push   %edx
    c58d:	e8 5e 30 00 00       	call   f5f0 <async_data_read_finalize@plt>
    c592:	8b 45 10             	mov    0x10(%ebp),%eax
    c595:	59                   	pop    %ecx
    c596:	5b                   	pop    %ebx
    c597:	6a 00                	push   $0x0
    c599:	50                   	push   %eax
    c59a:	e8 c1 30 00 00       	call   f660 <async_answer_0@plt>
    c59f:	89 34 24             	mov    %esi,(%esp)
    c5a2:	e8 f9 33 00 00       	call   f9a0 <free@plt>
    c5a7:	83 c4 10             	add    $0x10,%esp
    c5aa:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c5ad:	5b                   	pop    %ebx
    c5ae:	5e                   	pop    %esi
    c5af:	5d                   	pop    %ebp
    c5b0:	c3                   	ret    
    c5b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c5b8:	50                   	push   %eax
    c5b9:	50                   	push   %eax
    c5ba:	8b 45 10             	mov    0x10(%ebp),%eax
    c5bd:	6a f5                	push   $0xfffffff5
    c5bf:	50                   	push   %eax
    c5c0:	e8 9b 30 00 00       	call   f660 <async_answer_0@plt>
    c5c5:	83 c4 10             	add    $0x10,%esp
    c5c8:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c5cb:	5b                   	pop    %ebx
    c5cc:	5e                   	pop    %esi
    c5cd:	5d                   	pop    %ebp
    c5ce:	c3                   	ret    
    c5cf:	90                   	nop
    c5d0:	50                   	push   %eax
    c5d1:	50                   	push   %eax
    c5d2:	8b 45 f0             	mov    -0x10(%ebp),%eax
    c5d5:	6a fe                	push   $0xfffffffe
    c5d7:	50                   	push   %eax
    c5d8:	e8 83 30 00 00       	call   f660 <async_answer_0@plt>
    c5dd:	8b 5d 10             	mov    0x10(%ebp),%ebx
    c5e0:	5a                   	pop    %edx
    c5e1:	59                   	pop    %ecx
    c5e2:	6a fe                	push   $0xfffffffe
    c5e4:	53                   	push   %ebx
    c5e5:	e8 76 30 00 00       	call   f660 <async_answer_0@plt>
    c5ea:	83 c4 10             	add    $0x10,%esp
    c5ed:	e9 02 ff ff ff       	jmp    c4f4 <remote_usbhid_get_report_descriptor+0x54>
    c5f2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c5f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000c600 <remote_usbhid_get_report_descriptor_length>:
    c600:	55                   	push   %ebp
    c601:	89 e5                	mov    %esp,%ebp
    c603:	53                   	push   %ebx
    c604:	50                   	push   %eax
    c605:	8b 45 0c             	mov    0xc(%ebp),%eax
    c608:	8b 55 08             	mov    0x8(%ebp),%edx
    c60b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    c60e:	8b 40 08             	mov    0x8(%eax),%eax
    c611:	85 c0                	test   %eax,%eax
    c613:	74 23                	je     c638 <remote_usbhid_get_report_descriptor_length+0x38>
    c615:	83 ec 0c             	sub    $0xc,%esp
    c618:	52                   	push   %edx
    c619:	ff d0                	call   *%eax
    c61b:	89 5d 08             	mov    %ebx,0x8(%ebp)
    c61e:	83 c4 10             	add    $0x10,%esp
    c621:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    c624:	89 45 10             	mov    %eax,0x10(%ebp)
    c627:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
    c62e:	c9                   	leave  
    c62f:	e9 6c 32 00 00       	jmp    f8a0 <async_answer_1@plt>
    c634:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c638:	89 5d 08             	mov    %ebx,0x8(%ebp)
    c63b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    c63e:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    c645:	c9                   	leave  
    c646:	e9 15 30 00 00       	jmp    f660 <async_answer_0@plt>
    c64b:	90                   	nop
    c64c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000c650 <remote_usbhid_get_event>:
    c650:	55                   	push   %ebp
    c651:	89 e5                	mov    %esp,%ebp
    c653:	57                   	push   %edi
    c654:	56                   	push   %esi
    c655:	53                   	push   %ebx
    c656:	83 ec 1c             	sub    $0x1c,%esp
    c659:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    c65c:	8b 4b 04             	mov    0x4(%ebx),%ecx
    c65f:	85 c9                	test   %ecx,%ecx
    c661:	0f 84 11 01 00 00    	je     c778 <remote_usbhid_get_event+0x128>
    c667:	8b 45 14             	mov    0x14(%ebp),%eax
    c66a:	8b 70 08             	mov    0x8(%eax),%esi
    c66d:	50                   	push   %eax
    c66e:	50                   	push   %eax
    c66f:	8d 45 d8             	lea    -0x28(%ebp),%eax
    c672:	50                   	push   %eax
    c673:	8d 45 dc             	lea    -0x24(%ebp),%eax
    c676:	50                   	push   %eax
    c677:	e8 94 31 00 00       	call   f810 <async_data_read_receive@plt>
    c67c:	83 c4 10             	add    $0x10,%esp
    c67f:	84 c0                	test   %al,%al
    c681:	0f 84 a9 00 00 00    	je     c730 <remote_usbhid_get_event+0xe0>
    c687:	8b 45 d8             	mov    -0x28(%ebp),%eax
    c68a:	85 c0                	test   %eax,%eax
    c68c:	75 2a                	jne    c6b8 <remote_usbhid_get_event+0x68>
    c68e:	8b 75 dc             	mov    -0x24(%ebp),%esi
    c691:	53                   	push   %ebx
    c692:	53                   	push   %ebx
    c693:	6a f2                	push   $0xfffffff2
    c695:	56                   	push   %esi
    c696:	e8 c5 2f 00 00       	call   f660 <async_answer_0@plt>
    c69b:	5f                   	pop    %edi
    c69c:	58                   	pop    %eax
    c69d:	8b 45 10             	mov    0x10(%ebp),%eax
    c6a0:	6a f2                	push   $0xfffffff2
    c6a2:	50                   	push   %eax
    c6a3:	e8 b8 2f 00 00       	call   f660 <async_answer_0@plt>
    c6a8:	83 c4 10             	add    $0x10,%esp
    c6ab:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c6ae:	5b                   	pop    %ebx
    c6af:	5e                   	pop    %esi
    c6b0:	5f                   	pop    %edi
    c6b1:	5d                   	pop    %ebp
    c6b2:	c3                   	ret    
    c6b3:	90                   	nop
    c6b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c6b8:	83 ec 0c             	sub    $0xc,%esp
    c6bb:	50                   	push   %eax
    c6bc:	e8 5f 2f 00 00       	call   f620 <malloc@plt>
    c6c1:	83 c4 10             	add    $0x10,%esp
    c6c4:	89 c7                	mov    %eax,%edi
    c6c6:	85 c0                	test   %eax,%eax
    c6c8:	0f 84 c2 00 00 00    	je     c790 <remote_usbhid_get_event+0x140>
    c6ce:	50                   	push   %eax
    c6cf:	50                   	push   %eax
    c6d0:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    c6d3:	56                   	push   %esi
    c6d4:	50                   	push   %eax
    c6d5:	8d 45 e0             	lea    -0x20(%ebp),%eax
    c6d8:	50                   	push   %eax
    c6d9:	8b 45 d8             	mov    -0x28(%ebp),%eax
    c6dc:	50                   	push   %eax
    c6dd:	8b 45 08             	mov    0x8(%ebp),%eax
    c6e0:	57                   	push   %edi
    c6e1:	50                   	push   %eax
    c6e2:	ff 53 04             	call   *0x4(%ebx)
    c6e5:	83 c4 20             	add    $0x20,%esp
    c6e8:	89 c3                	mov    %eax,%ebx
    c6ea:	85 c0                	test   %eax,%eax
    c6ec:	75 5a                	jne    c748 <remote_usbhid_get_event+0xf8>
    c6ee:	8b 45 e0             	mov    -0x20(%ebp),%eax
    c6f1:	8b 55 d8             	mov    -0x28(%ebp),%edx
    c6f4:	39 d0                	cmp    %edx,%eax
    c6f6:	72 05                	jb     c6fd <remote_usbhid_get_event+0xad>
    c6f8:	89 55 e0             	mov    %edx,-0x20(%ebp)
    c6fb:	89 d0                	mov    %edx,%eax
    c6fd:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    c700:	52                   	push   %edx
    c701:	50                   	push   %eax
    c702:	57                   	push   %edi
    c703:	51                   	push   %ecx
    c704:	e8 e7 2e 00 00       	call   f5f0 <async_data_read_finalize@plt>
    c709:	89 3c 24             	mov    %edi,(%esp)
    c70c:	e8 8f 32 00 00       	call   f9a0 <free@plt>
    c711:	83 c4 0c             	add    $0xc,%esp
    c714:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
    c717:	8b 75 10             	mov    0x10(%ebp),%esi
    c71a:	53                   	push   %ebx
    c71b:	6a 00                	push   $0x0
    c71d:	56                   	push   %esi
    c71e:	e8 7d 31 00 00       	call   f8a0 <async_answer_1@plt>
    c723:	83 c4 10             	add    $0x10,%esp
    c726:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c729:	5b                   	pop    %ebx
    c72a:	5e                   	pop    %esi
    c72b:	5f                   	pop    %edi
    c72c:	5d                   	pop    %ebp
    c72d:	c3                   	ret    
    c72e:	66 90                	xchg   %ax,%ax
    c730:	50                   	push   %eax
    c731:	50                   	push   %eax
    c732:	8b 45 10             	mov    0x10(%ebp),%eax
    c735:	6a f8                	push   $0xfffffff8
    c737:	50                   	push   %eax
    c738:	e8 23 2f 00 00       	call   f660 <async_answer_0@plt>
    c73d:	83 c4 10             	add    $0x10,%esp
    c740:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c743:	5b                   	pop    %ebx
    c744:	5e                   	pop    %esi
    c745:	5f                   	pop    %edi
    c746:	5d                   	pop    %ebp
    c747:	c3                   	ret    
    c748:	83 ec 0c             	sub    $0xc,%esp
    c74b:	57                   	push   %edi
    c74c:	e8 4f 32 00 00       	call   f9a0 <free@plt>
    c751:	5f                   	pop    %edi
    c752:	58                   	pop    %eax
    c753:	8b 45 dc             	mov    -0x24(%ebp),%eax
    c756:	53                   	push   %ebx
    c757:	50                   	push   %eax
    c758:	e8 03 2f 00 00       	call   f660 <async_answer_0@plt>
    c75d:	8b 4d 10             	mov    0x10(%ebp),%ecx
    c760:	58                   	pop    %eax
    c761:	5a                   	pop    %edx
    c762:	53                   	push   %ebx
    c763:	51                   	push   %ecx
    c764:	e8 f7 2e 00 00       	call   f660 <async_answer_0@plt>
    c769:	83 c4 10             	add    $0x10,%esp
    c76c:	e9 3a ff ff ff       	jmp    c6ab <remote_usbhid_get_event+0x5b>
    c771:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c778:	8b 55 10             	mov    0x10(%ebp),%edx
    c77b:	50                   	push   %eax
    c77c:	50                   	push   %eax
    c77d:	6a f5                	push   $0xfffffff5
    c77f:	52                   	push   %edx
    c780:	e8 db 2e 00 00       	call   f660 <async_answer_0@plt>
    c785:	83 c4 10             	add    $0x10,%esp
    c788:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c78b:	5b                   	pop    %ebx
    c78c:	5e                   	pop    %esi
    c78d:	5f                   	pop    %edi
    c78e:	5d                   	pop    %ebp
    c78f:	c3                   	ret    
    c790:	50                   	push   %eax
    c791:	50                   	push   %eax
    c792:	8b 45 dc             	mov    -0x24(%ebp),%eax
    c795:	6a fe                	push   $0xfffffffe
    c797:	50                   	push   %eax
    c798:	e8 c3 2e 00 00       	call   f660 <async_answer_0@plt>
    c79d:	8b 4d 10             	mov    0x10(%ebp),%ecx
    c7a0:	58                   	pop    %eax
    c7a1:	5a                   	pop    %edx
    c7a2:	6a fe                	push   $0xfffffffe
    c7a4:	51                   	push   %ecx
    c7a5:	e8 b6 2e 00 00       	call   f660 <async_answer_0@plt>
    c7aa:	83 c4 10             	add    $0x10,%esp
    c7ad:	e9 f9 fe ff ff       	jmp    c6ab <remote_usbhid_get_event+0x5b>
    c7b2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c7b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000c7c0 <remote_usbhid_get_event_length>:
    c7c0:	55                   	push   %ebp
    c7c1:	89 e5                	mov    %esp,%ebp
    c7c3:	57                   	push   %edi
    c7c4:	56                   	push   %esi
    c7c5:	53                   	push   %ebx
    c7c6:	83 ec 18             	sub    $0x18,%esp
    c7c9:	8b 7d 0c             	mov    0xc(%ebp),%edi
    c7cc:	8b 75 08             	mov    0x8(%ebp),%esi
    c7cf:	68 c8 f1 00 00       	push   $0xf1c8
    c7d4:	8b 5d 10             	mov    0x10(%ebp),%ebx
    c7d7:	e8 84 2d 00 00       	call   f560 <printf@plt>
    c7dc:	8b 07                	mov    (%edi),%eax
    c7de:	83 c4 10             	add    $0x10,%esp
    c7e1:	85 c0                	test   %eax,%eax
    c7e3:	74 23                	je     c808 <remote_usbhid_get_event_length+0x48>
    c7e5:	83 ec 0c             	sub    $0xc,%esp
    c7e8:	56                   	push   %esi
    c7e9:	ff d0                	call   *%eax
    c7eb:	89 5d 08             	mov    %ebx,0x8(%ebp)
    c7ee:	89 45 10             	mov    %eax,0x10(%ebp)
    c7f1:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
    c7f8:	83 c4 10             	add    $0x10,%esp
    c7fb:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c7fe:	5b                   	pop    %ebx
    c7ff:	5e                   	pop    %esi
    c800:	5f                   	pop    %edi
    c801:	5d                   	pop    %ebp
    c802:	e9 99 30 00 00       	jmp    f8a0 <async_answer_1@plt>
    c807:	90                   	nop
    c808:	83 ec 0c             	sub    $0xc,%esp
    c80b:	68 ec f1 00 00       	push   $0xf1ec
    c810:	e8 4b 2d 00 00       	call   f560 <printf@plt>
    c815:	89 5d 08             	mov    %ebx,0x8(%ebp)
    c818:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    c81f:	83 c4 10             	add    $0x10,%esp
    c822:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c825:	5b                   	pop    %ebx
    c826:	5e                   	pop    %esi
    c827:	5f                   	pop    %edi
    c828:	5d                   	pop    %ebp
    c829:	e9 32 2e 00 00       	jmp    f660 <async_answer_0@plt>
    c82e:	66 90                	xchg   %ax,%ax

0000c830 <usbhid_dev_get_event_length>:
    c830:	55                   	push   %ebp
    c831:	89 e5                	mov    %esp,%ebp
    c833:	56                   	push   %esi
    c834:	53                   	push   %ebx
    c835:	83 ec 20             	sub    $0x20,%esp
    c838:	8b 45 08             	mov    0x8(%ebp),%eax
    c83b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    c83e:	85 c0                	test   %eax,%eax
    c840:	74 56                	je     c898 <usbhid_dev_get_event_length+0x68>
    c842:	83 ec 0c             	sub    $0xc,%esp
    c845:	50                   	push   %eax
    c846:	e8 65 30 00 00       	call   f8b0 <async_exchange_begin@plt>
    c84b:	83 c4 0c             	add    $0xc,%esp
    c84e:	89 c6                	mov    %eax,%esi
    c850:	8d 45 f4             	lea    -0xc(%ebp),%eax
    c853:	6a 00                	push   $0x0
    c855:	6a 00                	push   $0x0
    c857:	6a 00                	push   $0x0
    c859:	6a 00                	push   $0x0
    c85b:	50                   	push   %eax
    c85c:	6a 00                	push   $0x0
    c85e:	6a 00                	push   $0x0
    c860:	6a 00                	push   $0x0
    c862:	6a 00                	push   $0x0
    c864:	68 0a 04 00 00       	push   $0x40a
    c869:	56                   	push   %esi
    c86a:	e8 e1 2d 00 00       	call   f650 <async_req_fast@plt>
    c86f:	83 c4 24             	add    $0x24,%esp
    c872:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    c875:	56                   	push   %esi
    c876:	e8 45 2e 00 00       	call   f6c0 <async_exchange_end@plt>
    c87b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    c87e:	83 c4 10             	add    $0x10,%esp
    c881:	85 c0                	test   %eax,%eax
    c883:	75 09                	jne    c88e <usbhid_dev_get_event_length+0x5e>
    c885:	85 db                	test   %ebx,%ebx
    c887:	74 05                	je     c88e <usbhid_dev_get_event_length+0x5e>
    c889:	8b 55 f4             	mov    -0xc(%ebp),%edx
    c88c:	89 13                	mov    %edx,(%ebx)
    c88e:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c891:	5b                   	pop    %ebx
    c892:	5e                   	pop    %esi
    c893:	5d                   	pop    %ebp
    c894:	c3                   	ret    
    c895:	8d 76 00             	lea    0x0(%esi),%esi
    c898:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    c89d:	eb ef                	jmp    c88e <usbhid_dev_get_event_length+0x5e>
    c89f:	90                   	nop

0000c8a0 <usbhid_dev_get_event>:
    c8a0:	55                   	push   %ebp
    c8a1:	89 e5                	mov    %esp,%ebp
    c8a3:	57                   	push   %edi
    c8a4:	56                   	push   %esi
    c8a5:	53                   	push   %ebx
    c8a6:	83 ec 6c             	sub    $0x6c,%esp
    c8a9:	8b 75 08             	mov    0x8(%ebp),%esi
    c8ac:	8b 5d 10             	mov    0x10(%ebp),%ebx
    c8af:	85 f6                	test   %esi,%esi
    c8b1:	0f 84 01 01 00 00    	je     c9b8 <usbhid_dev_get_event+0x118>
    c8b7:	8b 45 0c             	mov    0xc(%ebp),%eax
    c8ba:	85 c0                	test   %eax,%eax
    c8bc:	0f 84 12 01 00 00    	je     c9d4 <usbhid_dev_get_event+0x134>
    c8c2:	85 db                	test   %ebx,%ebx
    c8c4:	0f 84 ee 00 00 00    	je     c9b8 <usbhid_dev_get_event+0x118>
    c8ca:	83 ec 0c             	sub    $0xc,%esp
    c8cd:	53                   	push   %ebx
    c8ce:	e8 4d 2d 00 00       	call   f620 <malloc@plt>
    c8d3:	83 c4 10             	add    $0x10,%esp
    c8d6:	89 c7                	mov    %eax,%edi
    c8d8:	85 c0                	test   %eax,%eax
    c8da:	0f 84 f4 00 00 00    	je     c9d4 <usbhid_dev_get_event+0x134>
    c8e0:	83 ec 0c             	sub    $0xc,%esp
    c8e3:	56                   	push   %esi
    c8e4:	e8 c7 2f 00 00       	call   f8b0 <async_exchange_begin@plt>
    c8e9:	83 c4 0c             	add    $0xc,%esp
    c8ec:	89 c6                	mov    %eax,%esi
    c8ee:	8d 45 a0             	lea    -0x60(%ebp),%eax
    c8f1:	50                   	push   %eax
    c8f2:	8b 45 1c             	mov    0x1c(%ebp),%eax
    c8f5:	6a 00                	push   $0x0
    c8f7:	6a 00                	push   $0x0
    c8f9:	50                   	push   %eax
    c8fa:	6a 01                	push   $0x1
    c8fc:	68 0a 04 00 00       	push   $0x40a
    c901:	56                   	push   %esi
    c902:	e8 69 2d 00 00       	call   f670 <async_send_fast@plt>
    c907:	83 c4 20             	add    $0x20,%esp
    c90a:	89 45 94             	mov    %eax,-0x6c(%ebp)
    c90d:	85 c0                	test   %eax,%eax
    c90f:	0f 84 ab 00 00 00    	je     c9c0 <usbhid_dev_get_event+0x120>
    c915:	8d 45 c4             	lea    -0x3c(%ebp),%eax
    c918:	50                   	push   %eax
    c919:	53                   	push   %ebx
    c91a:	57                   	push   %edi
    c91b:	56                   	push   %esi
    c91c:	e8 6f 2d 00 00       	call   f690 <async_data_read@plt>
    c921:	89 34 24             	mov    %esi,(%esp)
    c924:	89 c3                	mov    %eax,%ebx
    c926:	e8 95 2d 00 00       	call   f6c0 <async_exchange_end@plt>
    c92b:	83 c4 10             	add    $0x10,%esp
    c92e:	85 db                	test   %ebx,%ebx
    c930:	0f 84 aa 00 00 00    	je     c9e0 <usbhid_dev_get_event+0x140>
    c936:	50                   	push   %eax
    c937:	50                   	push   %eax
    c938:	8d 45 98             	lea    -0x68(%ebp),%eax
    c93b:	50                   	push   %eax
    c93c:	53                   	push   %ebx
    c93d:	e8 3e 2c 00 00       	call   f580 <async_wait_for@plt>
    c942:	58                   	pop    %eax
    c943:	8b 4d 94             	mov    -0x6c(%ebp),%ecx
    c946:	8d 45 9c             	lea    -0x64(%ebp),%eax
    c949:	5a                   	pop    %edx
    c94a:	50                   	push   %eax
    c94b:	51                   	push   %ecx
    c94c:	e8 2f 2c 00 00       	call   f580 <async_wait_for@plt>
    c951:	8b 45 98             	mov    -0x68(%ebp),%eax
    c954:	83 c4 10             	add    $0x10,%esp
    c957:	85 c0                	test   %eax,%eax
    c959:	74 15                	je     c970 <usbhid_dev_get_event+0xd0>
    c95b:	8b 55 9c             	mov    -0x64(%ebp),%edx
    c95e:	85 d2                	test   %edx,%edx
    c960:	74 15                	je     c977 <usbhid_dev_get_event+0xd7>
    c962:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c965:	89 d0                	mov    %edx,%eax
    c967:	5b                   	pop    %ebx
    c968:	5e                   	pop    %esi
    c969:	5f                   	pop    %edi
    c96a:	5d                   	pop    %ebp
    c96b:	c3                   	ret    
    c96c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c970:	8b 45 9c             	mov    -0x64(%ebp),%eax
    c973:	85 c0                	test   %eax,%eax
    c975:	74 09                	je     c980 <usbhid_dev_get_event+0xe0>
    c977:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c97a:	5b                   	pop    %ebx
    c97b:	5e                   	pop    %esi
    c97c:	5f                   	pop    %edi
    c97d:	5d                   	pop    %ebp
    c97e:	c3                   	ret    
    c97f:	90                   	nop
    c980:	8b 5d cc             	mov    -0x34(%ebp),%ebx
    c983:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    c986:	52                   	push   %edx
    c987:	53                   	push   %ebx
    c988:	57                   	push   %edi
    c989:	51                   	push   %ecx
    c98a:	e8 81 2c 00 00       	call   f610 <memcpy@plt>
    c98f:	8b 75 14             	mov    0x14(%ebp),%esi
    c992:	83 c4 10             	add    $0x10,%esp
    c995:	85 f6                	test   %esi,%esi
    c997:	74 05                	je     c99e <usbhid_dev_get_event+0xfe>
    c999:	8b 45 14             	mov    0x14(%ebp),%eax
    c99c:	89 18                	mov    %ebx,(%eax)
    c99e:	8b 45 18             	mov    0x18(%ebp),%eax
    c9a1:	85 c0                	test   %eax,%eax
    c9a3:	74 63                	je     ca08 <usbhid_dev_get_event+0x168>
    c9a5:	8b 4d 18             	mov    0x18(%ebp),%ecx
    c9a8:	8b 45 a4             	mov    -0x5c(%ebp),%eax
    c9ab:	89 01                	mov    %eax,(%ecx)
    c9ad:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c9b0:	31 c0                	xor    %eax,%eax
    c9b2:	5b                   	pop    %ebx
    c9b3:	5e                   	pop    %esi
    c9b4:	5f                   	pop    %edi
    c9b5:	5d                   	pop    %ebp
    c9b6:	c3                   	ret    
    c9b7:	90                   	nop
    c9b8:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    c9bd:	eb b8                	jmp    c977 <usbhid_dev_get_event+0xd7>
    c9bf:	90                   	nop
    c9c0:	83 ec 0c             	sub    $0xc,%esp
    c9c3:	56                   	push   %esi
    c9c4:	e8 f7 2c 00 00       	call   f6c0 <async_exchange_end@plt>
    c9c9:	89 3c 24             	mov    %edi,(%esp)
    c9cc:	e8 cf 2f 00 00       	call   f9a0 <free@plt>
    c9d1:	83 c4 10             	add    $0x10,%esp
    c9d4:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c9d9:	eb 9c                	jmp    c977 <usbhid_dev_get_event+0xd7>
    c9db:	90                   	nop
    c9dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c9e0:	83 ec 0c             	sub    $0xc,%esp
    c9e3:	8b 5d 94             	mov    -0x6c(%ebp),%ebx
    c9e6:	53                   	push   %ebx
    c9e7:	e8 54 2f 00 00       	call   f940 <async_forget@plt>
    c9ec:	89 3c 24             	mov    %edi,(%esp)
    c9ef:	e8 ac 2f 00 00       	call   f9a0 <free@plt>
    c9f4:	83 c4 10             	add    $0x10,%esp
    c9f7:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c9fc:	e9 76 ff ff ff       	jmp    c977 <usbhid_dev_get_event+0xd7>
    ca01:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    ca08:	31 c0                	xor    %eax,%eax
    ca0a:	e9 68 ff ff ff       	jmp    c977 <usbhid_dev_get_event+0xd7>
    ca0f:	90                   	nop

0000ca10 <usbhid_dev_get_report_descriptor_length>:
    ca10:	55                   	push   %ebp
    ca11:	89 e5                	mov    %esp,%ebp
    ca13:	56                   	push   %esi
    ca14:	53                   	push   %ebx
    ca15:	83 ec 20             	sub    $0x20,%esp
    ca18:	8b 45 08             	mov    0x8(%ebp),%eax
    ca1b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    ca1e:	85 c0                	test   %eax,%eax
    ca20:	74 56                	je     ca78 <usbhid_dev_get_report_descriptor_length+0x68>
    ca22:	83 ec 0c             	sub    $0xc,%esp
    ca25:	50                   	push   %eax
    ca26:	e8 85 2e 00 00       	call   f8b0 <async_exchange_begin@plt>
    ca2b:	83 c4 0c             	add    $0xc,%esp
    ca2e:	89 c6                	mov    %eax,%esi
    ca30:	8d 45 f4             	lea    -0xc(%ebp),%eax
    ca33:	6a 00                	push   $0x0
    ca35:	6a 00                	push   $0x0
    ca37:	6a 00                	push   $0x0
    ca39:	6a 00                	push   $0x0
    ca3b:	50                   	push   %eax
    ca3c:	6a 00                	push   $0x0
    ca3e:	6a 00                	push   $0x0
    ca40:	6a 00                	push   $0x0
    ca42:	6a 02                	push   $0x2
    ca44:	68 0a 04 00 00       	push   $0x40a
    ca49:	56                   	push   %esi
    ca4a:	e8 01 2c 00 00       	call   f650 <async_req_fast@plt>
    ca4f:	83 c4 24             	add    $0x24,%esp
    ca52:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    ca55:	56                   	push   %esi
    ca56:	e8 65 2c 00 00       	call   f6c0 <async_exchange_end@plt>
    ca5b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    ca5e:	83 c4 10             	add    $0x10,%esp
    ca61:	85 c0                	test   %eax,%eax
    ca63:	75 09                	jne    ca6e <usbhid_dev_get_report_descriptor_length+0x5e>
    ca65:	85 db                	test   %ebx,%ebx
    ca67:	74 05                	je     ca6e <usbhid_dev_get_report_descriptor_length+0x5e>
    ca69:	8b 55 f4             	mov    -0xc(%ebp),%edx
    ca6c:	89 13                	mov    %edx,(%ebx)
    ca6e:	8d 65 f8             	lea    -0x8(%ebp),%esp
    ca71:	5b                   	pop    %ebx
    ca72:	5e                   	pop    %esi
    ca73:	5d                   	pop    %ebp
    ca74:	c3                   	ret    
    ca75:	8d 76 00             	lea    0x0(%esi),%esi
    ca78:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    ca7d:	eb ef                	jmp    ca6e <usbhid_dev_get_report_descriptor_length+0x5e>
    ca7f:	90                   	nop

0000ca80 <usbhid_dev_get_report_descriptor>:
    ca80:	55                   	push   %ebp
    ca81:	89 e5                	mov    %esp,%ebp
    ca83:	57                   	push   %edi
    ca84:	56                   	push   %esi
    ca85:	53                   	push   %ebx
    ca86:	83 ec 3c             	sub    $0x3c,%esp
    ca89:	8b 45 08             	mov    0x8(%ebp),%eax
    ca8c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    ca8f:	85 c0                	test   %eax,%eax
    ca91:	0f 84 c1 00 00 00    	je     cb58 <usbhid_dev_get_report_descriptor+0xd8>
    ca97:	85 db                	test   %ebx,%ebx
    ca99:	0f 84 f5 00 00 00    	je     cb94 <usbhid_dev_get_report_descriptor+0x114>
    ca9f:	8b 55 10             	mov    0x10(%ebp),%edx
    caa2:	85 d2                	test   %edx,%edx
    caa4:	0f 84 ae 00 00 00    	je     cb58 <usbhid_dev_get_report_descriptor+0xd8>
    caaa:	83 ec 0c             	sub    $0xc,%esp
    caad:	50                   	push   %eax
    caae:	e8 fd 2d 00 00       	call   f8b0 <async_exchange_begin@plt>
    cab3:	83 c4 0c             	add    $0xc,%esp
    cab6:	89 c6                	mov    %eax,%esi
    cab8:	6a 00                	push   $0x0
    caba:	6a 00                	push   $0x0
    cabc:	6a 00                	push   $0x0
    cabe:	6a 00                	push   $0x0
    cac0:	6a 03                	push   $0x3
    cac2:	68 0a 04 00 00       	push   $0x40a
    cac7:	50                   	push   %eax
    cac8:	e8 a3 2b 00 00       	call   f670 <async_send_fast@plt>
    cacd:	83 c4 20             	add    $0x20,%esp
    cad0:	89 c7                	mov    %eax,%edi
    cad2:	85 c0                	test   %eax,%eax
    cad4:	0f 84 86 00 00 00    	je     cb60 <usbhid_dev_get_report_descriptor+0xe0>
    cada:	8d 45 c4             	lea    -0x3c(%ebp),%eax
    cadd:	50                   	push   %eax
    cade:	8b 45 10             	mov    0x10(%ebp),%eax
    cae1:	50                   	push   %eax
    cae2:	53                   	push   %ebx
    cae3:	56                   	push   %esi
    cae4:	e8 a7 2b 00 00       	call   f690 <async_data_read@plt>
    cae9:	89 c3                	mov    %eax,%ebx
    caeb:	89 34 24             	mov    %esi,(%esp)
    caee:	e8 cd 2b 00 00       	call   f6c0 <async_exchange_end@plt>
    caf3:	83 c4 10             	add    $0x10,%esp
    caf6:	85 db                	test   %ebx,%ebx
    caf8:	74 7e                	je     cb78 <usbhid_dev_get_report_descriptor+0xf8>
    cafa:	8d 45 bc             	lea    -0x44(%ebp),%eax
    cafd:	51                   	push   %ecx
    cafe:	51                   	push   %ecx
    caff:	50                   	push   %eax
    cb00:	53                   	push   %ebx
    cb01:	e8 7a 2a 00 00       	call   f580 <async_wait_for@plt>
    cb06:	8d 45 c0             	lea    -0x40(%ebp),%eax
    cb09:	5b                   	pop    %ebx
    cb0a:	5e                   	pop    %esi
    cb0b:	50                   	push   %eax
    cb0c:	57                   	push   %edi
    cb0d:	e8 6e 2a 00 00       	call   f580 <async_wait_for@plt>
    cb12:	8b 45 bc             	mov    -0x44(%ebp),%eax
    cb15:	83 c4 10             	add    $0x10,%esp
    cb18:	85 c0                	test   %eax,%eax
    cb1a:	75 24                	jne    cb40 <usbhid_dev_get_report_descriptor+0xc0>
    cb1c:	8b 45 c0             	mov    -0x40(%ebp),%eax
    cb1f:	85 c0                	test   %eax,%eax
    cb21:	75 11                	jne    cb34 <usbhid_dev_get_report_descriptor+0xb4>
    cb23:	8b 55 14             	mov    0x14(%ebp),%edx
    cb26:	8b 45 cc             	mov    -0x34(%ebp),%eax
    cb29:	85 d2                	test   %edx,%edx
    cb2b:	74 63                	je     cb90 <usbhid_dev_get_report_descriptor+0x110>
    cb2d:	8b 4d 14             	mov    0x14(%ebp),%ecx
    cb30:	89 01                	mov    %eax,(%ecx)
    cb32:	31 c0                	xor    %eax,%eax
    cb34:	8d 65 f4             	lea    -0xc(%ebp),%esp
    cb37:	5b                   	pop    %ebx
    cb38:	5e                   	pop    %esi
    cb39:	5f                   	pop    %edi
    cb3a:	5d                   	pop    %ebp
    cb3b:	c3                   	ret    
    cb3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    cb40:	8b 55 c0             	mov    -0x40(%ebp),%edx
    cb43:	85 d2                	test   %edx,%edx
    cb45:	74 ed                	je     cb34 <usbhid_dev_get_report_descriptor+0xb4>
    cb47:	8d 65 f4             	lea    -0xc(%ebp),%esp
    cb4a:	89 d0                	mov    %edx,%eax
    cb4c:	5b                   	pop    %ebx
    cb4d:	5e                   	pop    %esi
    cb4e:	5f                   	pop    %edi
    cb4f:	5d                   	pop    %ebp
    cb50:	c3                   	ret    
    cb51:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    cb58:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    cb5d:	eb d5                	jmp    cb34 <usbhid_dev_get_report_descriptor+0xb4>
    cb5f:	90                   	nop
    cb60:	83 ec 0c             	sub    $0xc,%esp
    cb63:	56                   	push   %esi
    cb64:	e8 57 2b 00 00       	call   f6c0 <async_exchange_end@plt>
    cb69:	83 c4 10             	add    $0x10,%esp
    cb6c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    cb71:	eb c1                	jmp    cb34 <usbhid_dev_get_report_descriptor+0xb4>
    cb73:	90                   	nop
    cb74:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    cb78:	83 ec 0c             	sub    $0xc,%esp
    cb7b:	57                   	push   %edi
    cb7c:	e8 bf 2d 00 00       	call   f940 <async_forget@plt>
    cb81:	83 c4 10             	add    $0x10,%esp
    cb84:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    cb89:	eb a9                	jmp    cb34 <usbhid_dev_get_report_descriptor+0xb4>
    cb8b:	90                   	nop
    cb8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    cb90:	31 c0                	xor    %eax,%eax
    cb92:	eb a0                	jmp    cb34 <usbhid_dev_get_report_descriptor+0xb4>
    cb94:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    cb99:	eb 99                	jmp    cb34 <usbhid_dev_get_report_descriptor+0xb4>
    cb9b:	66 90                	xchg   %ax,%ax
    cb9d:	66 90                	xchg   %ax,%ax
    cb9f:	90                   	nop

0000cba0 <remote_clock_time_set>:
    cba0:	55                   	push   %ebp
    cba1:	89 e5                	mov    %esp,%ebp
    cba3:	56                   	push   %esi
    cba4:	53                   	push   %ebx
    cba5:	83 ec 38             	sub    $0x38,%esp
    cba8:	8d 45 cc             	lea    -0x34(%ebp),%eax
    cbab:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    cbae:	50                   	push   %eax
    cbaf:	8d 45 c8             	lea    -0x38(%ebp),%eax
    cbb2:	50                   	push   %eax
    cbb3:	e8 d8 2d 00 00       	call   f990 <async_data_write_receive@plt>
    cbb8:	83 c4 10             	add    $0x10,%esp
    cbbb:	84 c0                	test   %al,%al
    cbbd:	74 39                	je     cbf8 <remote_clock_time_set+0x58>
    cbbf:	8b 73 04             	mov    0x4(%ebx),%esi
    cbc2:	85 f6                	test   %esi,%esi
    cbc4:	74 4a                	je     cc10 <remote_clock_time_set+0x70>
    cbc6:	8b 55 c8             	mov    -0x38(%ebp),%edx
    cbc9:	8d 75 d0             	lea    -0x30(%ebp),%esi
    cbcc:	50                   	push   %eax
    cbcd:	6a 28                	push   $0x28
    cbcf:	56                   	push   %esi
    cbd0:	52                   	push   %edx
    cbd1:	e8 4a 2d 00 00       	call   f920 <async_data_write_finalize@plt>
    cbd6:	59                   	pop    %ecx
    cbd7:	58                   	pop    %eax
    cbd8:	8b 45 08             	mov    0x8(%ebp),%eax
    cbdb:	56                   	push   %esi
    cbdc:	50                   	push   %eax
    cbdd:	ff 53 04             	call   *0x4(%ebx)
    cbe0:	8b 5d 10             	mov    0x10(%ebp),%ebx
    cbe3:	5a                   	pop    %edx
    cbe4:	59                   	pop    %ecx
    cbe5:	50                   	push   %eax
    cbe6:	53                   	push   %ebx
    cbe7:	e8 74 2a 00 00       	call   f660 <async_answer_0@plt>
    cbec:	83 c4 10             	add    $0x10,%esp
    cbef:	8d 65 f8             	lea    -0x8(%ebp),%esp
    cbf2:	5b                   	pop    %ebx
    cbf3:	5e                   	pop    %esi
    cbf4:	5d                   	pop    %ebp
    cbf5:	c3                   	ret    
    cbf6:	66 90                	xchg   %ax,%ax
    cbf8:	50                   	push   %eax
    cbf9:	50                   	push   %eax
    cbfa:	8b 45 10             	mov    0x10(%ebp),%eax
    cbfd:	6a f2                	push   $0xfffffff2
    cbff:	50                   	push   %eax
    cc00:	e8 5b 2a 00 00       	call   f660 <async_answer_0@plt>
    cc05:	83 c4 10             	add    $0x10,%esp
    cc08:	8d 65 f8             	lea    -0x8(%ebp),%esp
    cc0b:	5b                   	pop    %ebx
    cc0c:	5e                   	pop    %esi
    cc0d:	5d                   	pop    %ebp
    cc0e:	c3                   	ret    
    cc0f:	90                   	nop
    cc10:	8b 45 c8             	mov    -0x38(%ebp),%eax
    cc13:	56                   	push   %esi
    cc14:	56                   	push   %esi
    cc15:	6a f5                	push   $0xfffffff5
    cc17:	50                   	push   %eax
    cc18:	e8 43 2a 00 00       	call   f660 <async_answer_0@plt>
    cc1d:	8b 4d 10             	mov    0x10(%ebp),%ecx
    cc20:	58                   	pop    %eax
    cc21:	5a                   	pop    %edx
    cc22:	6a f5                	push   $0xfffffff5
    cc24:	51                   	push   %ecx
    cc25:	e8 36 2a 00 00       	call   f660 <async_answer_0@plt>
    cc2a:	83 c4 10             	add    $0x10,%esp
    cc2d:	8d 65 f8             	lea    -0x8(%ebp),%esp
    cc30:	5b                   	pop    %ebx
    cc31:	5e                   	pop    %esi
    cc32:	5d                   	pop    %ebp
    cc33:	c3                   	ret    
    cc34:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    cc3a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0000cc40 <remote_clock_time_get>:
    cc40:	55                   	push   %ebp
    cc41:	89 e5                	mov    %esp,%ebp
    cc43:	56                   	push   %esi
    cc44:	53                   	push   %ebx
    cc45:	83 ec 38             	sub    $0x38,%esp
    cc48:	8d 45 cc             	lea    -0x34(%ebp),%eax
    cc4b:	50                   	push   %eax
    cc4c:	8d 45 c8             	lea    -0x38(%ebp),%eax
    cc4f:	50                   	push   %eax
    cc50:	e8 bb 2b 00 00       	call   f810 <async_data_read_receive@plt>
    cc55:	83 c4 10             	add    $0x10,%esp
    cc58:	84 c0                	test   %al,%al
    cc5a:	74 6c                	je     ccc8 <remote_clock_time_get+0x88>
    cc5c:	8b 45 0c             	mov    0xc(%ebp),%eax
    cc5f:	8b 00                	mov    (%eax),%eax
    cc61:	85 c0                	test   %eax,%eax
    cc63:	74 7b                	je     cce0 <remote_clock_time_get+0xa0>
    cc65:	8b 55 08             	mov    0x8(%ebp),%edx
    cc68:	8d 75 d0             	lea    -0x30(%ebp),%esi
    cc6b:	53                   	push   %ebx
    cc6c:	53                   	push   %ebx
    cc6d:	56                   	push   %esi
    cc6e:	52                   	push   %edx
    cc6f:	ff d0                	call   *%eax
    cc71:	83 c4 10             	add    $0x10,%esp
    cc74:	89 c3                	mov    %eax,%ebx
    cc76:	85 c0                	test   %eax,%eax
    cc78:	74 26                	je     cca0 <remote_clock_time_get+0x60>
    cc7a:	50                   	push   %eax
    cc7b:	50                   	push   %eax
    cc7c:	8b 45 c8             	mov    -0x38(%ebp),%eax
    cc7f:	53                   	push   %ebx
    cc80:	50                   	push   %eax
    cc81:	e8 da 29 00 00       	call   f660 <async_answer_0@plt>
    cc86:	8b 4d 10             	mov    0x10(%ebp),%ecx
    cc89:	58                   	pop    %eax
    cc8a:	5a                   	pop    %edx
    cc8b:	53                   	push   %ebx
    cc8c:	51                   	push   %ecx
    cc8d:	e8 ce 29 00 00       	call   f660 <async_answer_0@plt>
    cc92:	83 c4 10             	add    $0x10,%esp
    cc95:	8d 65 f8             	lea    -0x8(%ebp),%esp
    cc98:	5b                   	pop    %ebx
    cc99:	5e                   	pop    %esi
    cc9a:	5d                   	pop    %ebp
    cc9b:	c3                   	ret    
    cc9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    cca0:	8b 55 c8             	mov    -0x38(%ebp),%edx
    cca3:	50                   	push   %eax
    cca4:	6a 28                	push   $0x28
    cca6:	56                   	push   %esi
    cca7:	52                   	push   %edx
    cca8:	e8 43 29 00 00       	call   f5f0 <async_data_read_finalize@plt>
    ccad:	8b 75 10             	mov    0x10(%ebp),%esi
    ccb0:	59                   	pop    %ecx
    ccb1:	5b                   	pop    %ebx
    ccb2:	6a 00                	push   $0x0
    ccb4:	56                   	push   %esi
    ccb5:	e8 a6 29 00 00       	call   f660 <async_answer_0@plt>
    ccba:	83 c4 10             	add    $0x10,%esp
    ccbd:	8d 65 f8             	lea    -0x8(%ebp),%esp
    ccc0:	5b                   	pop    %ebx
    ccc1:	5e                   	pop    %esi
    ccc2:	5d                   	pop    %ebp
    ccc3:	c3                   	ret    
    ccc4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ccc8:	50                   	push   %eax
    ccc9:	50                   	push   %eax
    ccca:	8b 45 10             	mov    0x10(%ebp),%eax
    cccd:	6a f2                	push   $0xfffffff2
    cccf:	50                   	push   %eax
    ccd0:	e8 8b 29 00 00       	call   f660 <async_answer_0@plt>
    ccd5:	83 c4 10             	add    $0x10,%esp
    ccd8:	8d 65 f8             	lea    -0x8(%ebp),%esp
    ccdb:	5b                   	pop    %ebx
    ccdc:	5e                   	pop    %esi
    ccdd:	5d                   	pop    %ebp
    ccde:	c3                   	ret    
    ccdf:	90                   	nop
    cce0:	8b 5d c8             	mov    -0x38(%ebp),%ebx
    cce3:	51                   	push   %ecx
    cce4:	51                   	push   %ecx
    cce5:	6a f5                	push   $0xfffffff5
    cce7:	53                   	push   %ebx
    cce8:	e8 73 29 00 00       	call   f660 <async_answer_0@plt>
    cced:	5e                   	pop    %esi
    ccee:	58                   	pop    %eax
    ccef:	8b 45 10             	mov    0x10(%ebp),%eax
    ccf2:	6a f5                	push   $0xfffffff5
    ccf4:	50                   	push   %eax
    ccf5:	e8 66 29 00 00       	call   f660 <async_answer_0@plt>
    ccfa:	83 c4 10             	add    $0x10,%esp
    ccfd:	8d 65 f8             	lea    -0x8(%ebp),%esp
    cd00:	5b                   	pop    %ebx
    cd01:	5e                   	pop    %esi
    cd02:	5d                   	pop    %ebp
    cd03:	c3                   	ret    
    cd04:	66 90                	xchg   %ax,%ax
    cd06:	66 90                	xchg   %ax,%ax
    cd08:	66 90                	xchg   %ax,%ax
    cd0a:	66 90                	xchg   %ax,%ax
    cd0c:	66 90                	xchg   %ax,%ax
    cd0e:	66 90                	xchg   %ax,%ax

0000cd10 <remote_led_color_set>:
    cd10:	55                   	push   %ebp
    cd11:	89 e5                	mov    %esp,%ebp
    cd13:	53                   	push   %ebx
    cd14:	50                   	push   %eax
    cd15:	8b 45 14             	mov    0x14(%ebp),%eax
    cd18:	8b 55 08             	mov    0x8(%ebp),%edx
    cd1b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    cd1e:	8b 48 08             	mov    0x8(%eax),%ecx
    cd21:	8b 45 0c             	mov    0xc(%ebp),%eax
    cd24:	8b 00                	mov    (%eax),%eax
    cd26:	85 c0                	test   %eax,%eax
    cd28:	74 1e                	je     cd48 <remote_led_color_set+0x38>
    cd2a:	83 ec 08             	sub    $0x8,%esp
    cd2d:	51                   	push   %ecx
    cd2e:	52                   	push   %edx
    cd2f:	ff d0                	call   *%eax
    cd31:	89 5d 08             	mov    %ebx,0x8(%ebp)
    cd34:	83 c4 10             	add    $0x10,%esp
    cd37:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    cd3a:	89 45 0c             	mov    %eax,0xc(%ebp)
    cd3d:	c9                   	leave  
    cd3e:	e9 1d 29 00 00       	jmp    f660 <async_answer_0@plt>
    cd43:	90                   	nop
    cd44:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    cd48:	89 5d 08             	mov    %ebx,0x8(%ebp)
    cd4b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    cd4e:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    cd55:	c9                   	leave  
    cd56:	e9 05 29 00 00       	jmp    f660 <async_answer_0@plt>
    cd5b:	66 90                	xchg   %ax,%ax
    cd5d:	66 90                	xchg   %ax,%ax
    cd5f:	90                   	nop

0000cd60 <remote_battery_charge_level_get>:
    cd60:	55                   	push   %ebp
    cd61:	89 e5                	mov    %esp,%ebp
    cd63:	83 ec 18             	sub    $0x18,%esp
    cd66:	8b 45 0c             	mov    0xc(%ebp),%eax
    cd69:	8b 40 04             	mov    0x4(%eax),%eax
    cd6c:	85 c0                	test   %eax,%eax
    cd6e:	74 40                	je     cdb0 <remote_battery_charge_level_get+0x50>
    cd70:	8b 4d 08             	mov    0x8(%ebp),%ecx
    cd73:	52                   	push   %edx
    cd74:	52                   	push   %edx
    cd75:	8d 55 f4             	lea    -0xc(%ebp),%edx
    cd78:	52                   	push   %edx
    cd79:	51                   	push   %ecx
    cd7a:	ff d0                	call   *%eax
    cd7c:	83 c4 10             	add    $0x10,%esp
    cd7f:	85 c0                	test   %eax,%eax
    cd81:	74 15                	je     cd98 <remote_battery_charge_level_get+0x38>
    cd83:	8b 4d 10             	mov    0x10(%ebp),%ecx
    cd86:	52                   	push   %edx
    cd87:	52                   	push   %edx
    cd88:	50                   	push   %eax
    cd89:	51                   	push   %ecx
    cd8a:	e8 d1 28 00 00       	call   f660 <async_answer_0@plt>
    cd8f:	83 c4 10             	add    $0x10,%esp
    cd92:	c9                   	leave  
    cd93:	c3                   	ret    
    cd94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    cd98:	8b 55 f4             	mov    -0xc(%ebp),%edx
    cd9b:	8b 4d 10             	mov    0x10(%ebp),%ecx
    cd9e:	50                   	push   %eax
    cd9f:	52                   	push   %edx
    cda0:	6a 00                	push   $0x0
    cda2:	51                   	push   %ecx
    cda3:	e8 f8 2a 00 00       	call   f8a0 <async_answer_1@plt>
    cda8:	83 c4 10             	add    $0x10,%esp
    cdab:	c9                   	leave  
    cdac:	c3                   	ret    
    cdad:	8d 76 00             	lea    0x0(%esi),%esi
    cdb0:	50                   	push   %eax
    cdb1:	50                   	push   %eax
    cdb2:	8b 45 10             	mov    0x10(%ebp),%eax
    cdb5:	6a f5                	push   $0xfffffff5
    cdb7:	50                   	push   %eax
    cdb8:	e8 a3 28 00 00       	call   f660 <async_answer_0@plt>
    cdbd:	83 c4 10             	add    $0x10,%esp
    cdc0:	c9                   	leave  
    cdc1:	c3                   	ret    
    cdc2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    cdc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000cdd0 <remote_battery_status_get>:
    cdd0:	55                   	push   %ebp
    cdd1:	89 e5                	mov    %esp,%ebp
    cdd3:	83 ec 18             	sub    $0x18,%esp
    cdd6:	8b 45 0c             	mov    0xc(%ebp),%eax
    cdd9:	8b 00                	mov    (%eax),%eax
    cddb:	85 c0                	test   %eax,%eax
    cddd:	74 41                	je     ce20 <remote_battery_status_get+0x50>
    cddf:	8b 4d 08             	mov    0x8(%ebp),%ecx
    cde2:	52                   	push   %edx
    cde3:	52                   	push   %edx
    cde4:	8d 55 f4             	lea    -0xc(%ebp),%edx
    cde7:	52                   	push   %edx
    cde8:	51                   	push   %ecx
    cde9:	ff d0                	call   *%eax
    cdeb:	83 c4 10             	add    $0x10,%esp
    cdee:	85 c0                	test   %eax,%eax
    cdf0:	74 16                	je     ce08 <remote_battery_status_get+0x38>
    cdf2:	8b 4d 10             	mov    0x10(%ebp),%ecx
    cdf5:	52                   	push   %edx
    cdf6:	52                   	push   %edx
    cdf7:	50                   	push   %eax
    cdf8:	51                   	push   %ecx
    cdf9:	e8 62 28 00 00       	call   f660 <async_answer_0@plt>
    cdfe:	83 c4 10             	add    $0x10,%esp
    ce01:	c9                   	leave  
    ce02:	c3                   	ret    
    ce03:	90                   	nop
    ce04:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ce08:	8b 55 f4             	mov    -0xc(%ebp),%edx
    ce0b:	8b 4d 10             	mov    0x10(%ebp),%ecx
    ce0e:	50                   	push   %eax
    ce0f:	52                   	push   %edx
    ce10:	6a 00                	push   $0x0
    ce12:	51                   	push   %ecx
    ce13:	e8 88 2a 00 00       	call   f8a0 <async_answer_1@plt>
    ce18:	83 c4 10             	add    $0x10,%esp
    ce1b:	c9                   	leave  
    ce1c:	c3                   	ret    
    ce1d:	8d 76 00             	lea    0x0(%esi),%esi
    ce20:	50                   	push   %eax
    ce21:	50                   	push   %eax
    ce22:	8b 45 10             	mov    0x10(%ebp),%eax
    ce25:	6a f5                	push   $0xfffffff5
    ce27:	50                   	push   %eax
    ce28:	e8 33 28 00 00       	call   f660 <async_answer_0@plt>
    ce2d:	83 c4 10             	add    $0x10,%esp
    ce30:	c9                   	leave  
    ce31:	c3                   	ret    
    ce32:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    ce39:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000ce40 <battery_status_get>:
    ce40:	55                   	push   %ebp
    ce41:	89 e5                	mov    %esp,%ebp
    ce43:	53                   	push   %ebx
    ce44:	83 ec 30             	sub    $0x30,%esp
    ce47:	8b 45 08             	mov    0x8(%ebp),%eax
    ce4a:	50                   	push   %eax
    ce4b:	e8 60 2a 00 00       	call   f8b0 <async_exchange_begin@plt>
    ce50:	83 c4 0c             	add    $0xc,%esp
    ce53:	89 c3                	mov    %eax,%ebx
    ce55:	8d 45 f4             	lea    -0xc(%ebp),%eax
    ce58:	6a 00                	push   $0x0
    ce5a:	6a 00                	push   $0x0
    ce5c:	6a 00                	push   $0x0
    ce5e:	6a 00                	push   $0x0
    ce60:	50                   	push   %eax
    ce61:	6a 00                	push   $0x0
    ce63:	6a 00                	push   $0x0
    ce65:	6a 00                	push   $0x0
    ce67:	6a 00                	push   $0x0
    ce69:	68 0d 04 00 00       	push   $0x40d
    ce6e:	53                   	push   %ebx
    ce6f:	e8 dc 27 00 00       	call   f650 <async_req_fast@plt>
    ce74:	83 c4 24             	add    $0x24,%esp
    ce77:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    ce7a:	53                   	push   %ebx
    ce7b:	e8 40 28 00 00       	call   f6c0 <async_exchange_end@plt>
    ce80:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    ce83:	83 c4 10             	add    $0x10,%esp
    ce86:	85 c0                	test   %eax,%eax
    ce88:	75 08                	jne    ce92 <battery_status_get+0x52>
    ce8a:	8b 55 0c             	mov    0xc(%ebp),%edx
    ce8d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    ce90:	89 0a                	mov    %ecx,(%edx)
    ce92:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    ce95:	c9                   	leave  
    ce96:	c3                   	ret    
    ce97:	89 f6                	mov    %esi,%esi
    ce99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000cea0 <battery_charge_level_get>:
    cea0:	55                   	push   %ebp
    cea1:	89 e5                	mov    %esp,%ebp
    cea3:	53                   	push   %ebx
    cea4:	83 ec 30             	sub    $0x30,%esp
    cea7:	8b 45 08             	mov    0x8(%ebp),%eax
    ceaa:	50                   	push   %eax
    ceab:	e8 00 2a 00 00       	call   f8b0 <async_exchange_begin@plt>
    ceb0:	83 c4 0c             	add    $0xc,%esp
    ceb3:	89 c3                	mov    %eax,%ebx
    ceb5:	8d 45 f4             	lea    -0xc(%ebp),%eax
    ceb8:	6a 00                	push   $0x0
    ceba:	6a 00                	push   $0x0
    cebc:	6a 00                	push   $0x0
    cebe:	6a 00                	push   $0x0
    cec0:	50                   	push   %eax
    cec1:	6a 00                	push   $0x0
    cec3:	6a 00                	push   $0x0
    cec5:	6a 00                	push   $0x0
    cec7:	6a 01                	push   $0x1
    cec9:	68 0d 04 00 00       	push   $0x40d
    cece:	53                   	push   %ebx
    cecf:	e8 7c 27 00 00       	call   f650 <async_req_fast@plt>
    ced4:	83 c4 24             	add    $0x24,%esp
    ced7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    ceda:	53                   	push   %ebx
    cedb:	e8 e0 27 00 00       	call   f6c0 <async_exchange_end@plt>
    cee0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    cee3:	83 c4 10             	add    $0x10,%esp
    cee6:	85 c0                	test   %eax,%eax
    cee8:	75 08                	jne    cef2 <battery_charge_level_get+0x52>
    ceea:	8b 55 0c             	mov    0xc(%ebp),%edx
    ceed:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    cef0:	89 0a                	mov    %ecx,(%edx)
    cef2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    cef5:	c9                   	leave  
    cef6:	c3                   	ret    
    cef7:	66 90                	xchg   %ax,%ax
    cef9:	66 90                	xchg   %ax,%ax
    cefb:	66 90                	xchg   %ax,%ax
    cefd:	66 90                	xchg   %ax,%ax
    ceff:	90                   	nop

0000cf00 <remote_ahci_write_blocks>:
    cf00:	55                   	push   %ebp
    cf01:	89 e5                	mov    %esp,%ebp
    cf03:	56                   	push   %esi
    cf04:	53                   	push   %ebx
    cf05:	83 ec 10             	sub    $0x10,%esp
    cf08:	8b 75 0c             	mov    0xc(%ebp),%esi
    cf0b:	8b 5d 14             	mov    0x14(%ebp),%ebx
    cf0e:	8b 46 0c             	mov    0xc(%esi),%eax
    cf11:	85 c0                	test   %eax,%eax
    cf13:	74 53                	je     cf68 <remote_ahci_write_blocks+0x68>
    cf15:	50                   	push   %eax
    cf16:	8d 45 ec             	lea    -0x14(%ebp),%eax
    cf19:	50                   	push   %eax
    cf1a:	8d 45 e8             	lea    -0x18(%ebp),%eax
    cf1d:	50                   	push   %eax
    cf1e:	8d 45 f0             	lea    -0x10(%ebp),%eax
    cf21:	50                   	push   %eax
    cf22:	e8 19 27 00 00       	call   f640 <async_share_out_receive@plt>
    cf27:	8d 45 f4             	lea    -0xc(%ebp),%eax
    cf2a:	5a                   	pop    %edx
    cf2b:	59                   	pop    %ecx
    cf2c:	50                   	push   %eax
    cf2d:	8b 45 f0             	mov    -0x10(%ebp),%eax
    cf30:	50                   	push   %eax
    cf31:	e8 ea 27 00 00       	call   f720 <async_share_out_finalize@plt>
    cf36:	58                   	pop    %eax
    cf37:	8b 45 f4             	mov    -0xc(%ebp),%eax
    cf3a:	50                   	push   %eax
    cf3b:	8b 43 10             	mov    0x10(%ebx),%eax
    cf3e:	50                   	push   %eax
    cf3f:	8b 43 0c             	mov    0xc(%ebx),%eax
    cf42:	8b 53 08             	mov    0x8(%ebx),%edx
    cf45:	52                   	push   %edx
    cf46:	50                   	push   %eax
    cf47:	8b 45 08             	mov    0x8(%ebp),%eax
    cf4a:	50                   	push   %eax
    cf4b:	ff 56 10             	call   *0x10(%esi)
    cf4e:	83 c4 18             	add    $0x18,%esp
    cf51:	50                   	push   %eax
    cf52:	8b 45 10             	mov    0x10(%ebp),%eax
    cf55:	50                   	push   %eax
    cf56:	e8 05 27 00 00       	call   f660 <async_answer_0@plt>
    cf5b:	83 c4 10             	add    $0x10,%esp
    cf5e:	8d 65 f8             	lea    -0x8(%ebp),%esp
    cf61:	5b                   	pop    %ebx
    cf62:	5e                   	pop    %esi
    cf63:	5d                   	pop    %ebp
    cf64:	c3                   	ret    
    cf65:	8d 76 00             	lea    0x0(%esi),%esi
    cf68:	8b 4d 10             	mov    0x10(%ebp),%ecx
    cf6b:	52                   	push   %edx
    cf6c:	52                   	push   %edx
    cf6d:	6a f5                	push   $0xfffffff5
    cf6f:	51                   	push   %ecx
    cf70:	e8 eb 26 00 00       	call   f660 <async_answer_0@plt>
    cf75:	83 c4 10             	add    $0x10,%esp
    cf78:	8d 65 f8             	lea    -0x8(%ebp),%esp
    cf7b:	5b                   	pop    %ebx
    cf7c:	5e                   	pop    %esi
    cf7d:	5d                   	pop    %ebp
    cf7e:	c3                   	ret    
    cf7f:	90                   	nop

0000cf80 <remote_ahci_read_blocks>:
    cf80:	55                   	push   %ebp
    cf81:	89 e5                	mov    %esp,%ebp
    cf83:	56                   	push   %esi
    cf84:	53                   	push   %ebx
    cf85:	83 ec 10             	sub    $0x10,%esp
    cf88:	8b 75 0c             	mov    0xc(%ebp),%esi
    cf8b:	8b 5d 14             	mov    0x14(%ebp),%ebx
    cf8e:	8b 46 0c             	mov    0xc(%esi),%eax
    cf91:	85 c0                	test   %eax,%eax
    cf93:	74 53                	je     cfe8 <remote_ahci_read_blocks+0x68>
    cf95:	50                   	push   %eax
    cf96:	8d 45 ec             	lea    -0x14(%ebp),%eax
    cf99:	50                   	push   %eax
    cf9a:	8d 45 e8             	lea    -0x18(%ebp),%eax
    cf9d:	50                   	push   %eax
    cf9e:	8d 45 f0             	lea    -0x10(%ebp),%eax
    cfa1:	50                   	push   %eax
    cfa2:	e8 99 26 00 00       	call   f640 <async_share_out_receive@plt>
    cfa7:	8d 45 f4             	lea    -0xc(%ebp),%eax
    cfaa:	5a                   	pop    %edx
    cfab:	59                   	pop    %ecx
    cfac:	50                   	push   %eax
    cfad:	8b 45 f0             	mov    -0x10(%ebp),%eax
    cfb0:	50                   	push   %eax
    cfb1:	e8 6a 27 00 00       	call   f720 <async_share_out_finalize@plt>
    cfb6:	58                   	pop    %eax
    cfb7:	8b 45 f4             	mov    -0xc(%ebp),%eax
    cfba:	50                   	push   %eax
    cfbb:	8b 43 10             	mov    0x10(%ebx),%eax
    cfbe:	50                   	push   %eax
    cfbf:	8b 43 0c             	mov    0xc(%ebx),%eax
    cfc2:	8b 53 08             	mov    0x8(%ebx),%edx
    cfc5:	52                   	push   %edx
    cfc6:	50                   	push   %eax
    cfc7:	8b 45 08             	mov    0x8(%ebp),%eax
    cfca:	50                   	push   %eax
    cfcb:	ff 56 0c             	call   *0xc(%esi)
    cfce:	83 c4 18             	add    $0x18,%esp
    cfd1:	50                   	push   %eax
    cfd2:	8b 45 10             	mov    0x10(%ebp),%eax
    cfd5:	50                   	push   %eax
    cfd6:	e8 85 26 00 00       	call   f660 <async_answer_0@plt>
    cfdb:	83 c4 10             	add    $0x10,%esp
    cfde:	8d 65 f8             	lea    -0x8(%ebp),%esp
    cfe1:	5b                   	pop    %ebx
    cfe2:	5e                   	pop    %esi
    cfe3:	5d                   	pop    %ebp
    cfe4:	c3                   	ret    
    cfe5:	8d 76 00             	lea    0x0(%esi),%esi
    cfe8:	8b 4d 10             	mov    0x10(%ebp),%ecx
    cfeb:	52                   	push   %edx
    cfec:	52                   	push   %edx
    cfed:	6a f5                	push   $0xfffffff5
    cfef:	51                   	push   %ecx
    cff0:	e8 6b 26 00 00       	call   f660 <async_answer_0@plt>
    cff5:	83 c4 10             	add    $0x10,%esp
    cff8:	8d 65 f8             	lea    -0x8(%ebp),%esp
    cffb:	5b                   	pop    %ebx
    cffc:	5e                   	pop    %esi
    cffd:	5d                   	pop    %ebp
    cffe:	c3                   	ret    
    cfff:	90                   	nop

0000d000 <remote_ahci_get_block_size>:
    d000:	55                   	push   %ebp
    d001:	89 e5                	mov    %esp,%ebp
    d003:	83 ec 18             	sub    $0x18,%esp
    d006:	8b 45 0c             	mov    0xc(%ebp),%eax
    d009:	8b 40 08             	mov    0x8(%eax),%eax
    d00c:	85 c0                	test   %eax,%eax
    d00e:	74 40                	je     d050 <remote_ahci_get_block_size+0x50>
    d010:	8b 4d 08             	mov    0x8(%ebp),%ecx
    d013:	52                   	push   %edx
    d014:	52                   	push   %edx
    d015:	8d 55 f4             	lea    -0xc(%ebp),%edx
    d018:	52                   	push   %edx
    d019:	51                   	push   %ecx
    d01a:	ff d0                	call   *%eax
    d01c:	83 c4 10             	add    $0x10,%esp
    d01f:	85 c0                	test   %eax,%eax
    d021:	74 15                	je     d038 <remote_ahci_get_block_size+0x38>
    d023:	8b 4d 10             	mov    0x10(%ebp),%ecx
    d026:	52                   	push   %edx
    d027:	52                   	push   %edx
    d028:	50                   	push   %eax
    d029:	51                   	push   %ecx
    d02a:	e8 31 26 00 00       	call   f660 <async_answer_0@plt>
    d02f:	83 c4 10             	add    $0x10,%esp
    d032:	c9                   	leave  
    d033:	c3                   	ret    
    d034:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    d038:	8b 55 f4             	mov    -0xc(%ebp),%edx
    d03b:	8b 4d 10             	mov    0x10(%ebp),%ecx
    d03e:	50                   	push   %eax
    d03f:	52                   	push   %edx
    d040:	6a 00                	push   $0x0
    d042:	51                   	push   %ecx
    d043:	e8 58 28 00 00       	call   f8a0 <async_answer_1@plt>
    d048:	83 c4 10             	add    $0x10,%esp
    d04b:	c9                   	leave  
    d04c:	c3                   	ret    
    d04d:	8d 76 00             	lea    0x0(%esi),%esi
    d050:	50                   	push   %eax
    d051:	50                   	push   %eax
    d052:	8b 45 10             	mov    0x10(%ebp),%eax
    d055:	6a f5                	push   $0xfffffff5
    d057:	50                   	push   %eax
    d058:	e8 03 26 00 00       	call   f660 <async_answer_0@plt>
    d05d:	83 c4 10             	add    $0x10,%esp
    d060:	c9                   	leave  
    d061:	c3                   	ret    
    d062:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    d069:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000d070 <remote_ahci_get_num_blocks>:
    d070:	55                   	push   %ebp
    d071:	89 e5                	mov    %esp,%ebp
    d073:	83 ec 18             	sub    $0x18,%esp
    d076:	8b 45 0c             	mov    0xc(%ebp),%eax
    d079:	8b 40 04             	mov    0x4(%eax),%eax
    d07c:	85 c0                	test   %eax,%eax
    d07e:	74 40                	je     d0c0 <remote_ahci_get_num_blocks+0x50>
    d080:	8b 4d 08             	mov    0x8(%ebp),%ecx
    d083:	52                   	push   %edx
    d084:	52                   	push   %edx
    d085:	8d 55 f0             	lea    -0x10(%ebp),%edx
    d088:	52                   	push   %edx
    d089:	51                   	push   %ecx
    d08a:	ff d0                	call   *%eax
    d08c:	83 c4 10             	add    $0x10,%esp
    d08f:	85 c0                	test   %eax,%eax
    d091:	74 15                	je     d0a8 <remote_ahci_get_num_blocks+0x38>
    d093:	51                   	push   %ecx
    d094:	51                   	push   %ecx
    d095:	50                   	push   %eax
    d096:	8b 45 10             	mov    0x10(%ebp),%eax
    d099:	50                   	push   %eax
    d09a:	e8 c1 25 00 00       	call   f660 <async_answer_0@plt>
    d09f:	83 c4 10             	add    $0x10,%esp
    d0a2:	c9                   	leave  
    d0a3:	c3                   	ret    
    d0a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    d0a8:	8b 45 f0             	mov    -0x10(%ebp),%eax
    d0ab:	8b 55 10             	mov    0x10(%ebp),%edx
    d0ae:	50                   	push   %eax
    d0af:	6a 00                	push   $0x0
    d0b1:	6a 00                	push   $0x0
    d0b3:	52                   	push   %edx
    d0b4:	e8 87 26 00 00       	call   f740 <async_answer_2@plt>
    d0b9:	83 c4 10             	add    $0x10,%esp
    d0bc:	c9                   	leave  
    d0bd:	c3                   	ret    
    d0be:	66 90                	xchg   %ax,%ax
    d0c0:	50                   	push   %eax
    d0c1:	50                   	push   %eax
    d0c2:	8b 45 10             	mov    0x10(%ebp),%eax
    d0c5:	6a f5                	push   $0xfffffff5
    d0c7:	50                   	push   %eax
    d0c8:	e8 93 25 00 00       	call   f660 <async_answer_0@plt>
    d0cd:	83 c4 10             	add    $0x10,%esp
    d0d0:	c9                   	leave  
    d0d1:	c3                   	ret    
    d0d2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    d0d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000d0e0 <remote_ahci_get_sata_device_name>:
    d0e0:	55                   	push   %ebp
    d0e1:	89 e5                	mov    %esp,%ebp
    d0e3:	57                   	push   %edi
    d0e4:	56                   	push   %esi
    d0e5:	53                   	push   %ebx
    d0e6:	83 ec 1c             	sub    $0x1c,%esp
    d0e9:	8b 7d 0c             	mov    0xc(%ebp),%edi
    d0ec:	8b 07                	mov    (%edi),%eax
    d0ee:	85 c0                	test   %eax,%eax
    d0f0:	74 76                	je     d168 <remote_ahci_get_sata_device_name+0x88>
    d0f2:	8b 45 14             	mov    0x14(%ebp),%eax
    d0f5:	83 ec 0c             	sub    $0xc,%esp
    d0f8:	8b 70 08             	mov    0x8(%eax),%esi
    d0fb:	56                   	push   %esi
    d0fc:	e8 1f 25 00 00       	call   f620 <malloc@plt>
    d101:	83 c4 10             	add    $0x10,%esp
    d104:	89 c3                	mov    %eax,%ebx
    d106:	85 c0                	test   %eax,%eax
    d108:	74 76                	je     d180 <remote_ahci_get_sata_device_name+0xa0>
    d10a:	50                   	push   %eax
    d10b:	8b 45 08             	mov    0x8(%ebp),%eax
    d10e:	53                   	push   %ebx
    d10f:	56                   	push   %esi
    d110:	50                   	push   %eax
    d111:	ff 17                	call   *(%edi)
    d113:	89 c7                	mov    %eax,%edi
    d115:	58                   	pop    %eax
    d116:	8d 45 e0             	lea    -0x20(%ebp),%eax
    d119:	5a                   	pop    %edx
    d11a:	50                   	push   %eax
    d11b:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    d11e:	50                   	push   %eax
    d11f:	e8 ec 26 00 00       	call   f810 <async_data_read_receive@plt>
    d124:	83 c4 10             	add    $0x10,%esp
    d127:	84 c0                	test   %al,%al
    d129:	74 05                	je     d130 <remote_ahci_get_sata_device_name+0x50>
    d12b:	3b 75 e0             	cmp    -0x20(%ebp),%esi
    d12e:	74 20                	je     d150 <remote_ahci_get_sata_device_name+0x70>
    d130:	83 ec 0c             	sub    $0xc,%esp
    d133:	53                   	push   %ebx
    d134:	e8 67 28 00 00       	call   f9a0 <free@plt>
    d139:	8b 4d 10             	mov    0x10(%ebp),%ecx
    d13c:	58                   	pop    %eax
    d13d:	5a                   	pop    %edx
    d13e:	57                   	push   %edi
    d13f:	51                   	push   %ecx
    d140:	e8 1b 25 00 00       	call   f660 <async_answer_0@plt>
    d145:	83 c4 10             	add    $0x10,%esp
    d148:	8d 65 f4             	lea    -0xc(%ebp),%esp
    d14b:	5b                   	pop    %ebx
    d14c:	5e                   	pop    %esi
    d14d:	5f                   	pop    %edi
    d14e:	5d                   	pop    %ebp
    d14f:	c3                   	ret    
    d150:	50                   	push   %eax
    d151:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    d154:	56                   	push   %esi
    d155:	53                   	push   %ebx
    d156:	50                   	push   %eax
    d157:	e8 94 24 00 00       	call   f5f0 <async_data_read_finalize@plt>
    d15c:	83 c4 10             	add    $0x10,%esp
    d15f:	eb cf                	jmp    d130 <remote_ahci_get_sata_device_name+0x50>
    d161:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    d168:	8b 7d 10             	mov    0x10(%ebp),%edi
    d16b:	56                   	push   %esi
    d16c:	56                   	push   %esi
    d16d:	6a f5                	push   $0xfffffff5
    d16f:	57                   	push   %edi
    d170:	e8 eb 24 00 00       	call   f660 <async_answer_0@plt>
    d175:	83 c4 10             	add    $0x10,%esp
    d178:	8d 65 f4             	lea    -0xc(%ebp),%esp
    d17b:	5b                   	pop    %ebx
    d17c:	5e                   	pop    %esi
    d17d:	5f                   	pop    %edi
    d17e:	5d                   	pop    %ebp
    d17f:	c3                   	ret    
    d180:	8b 5d 10             	mov    0x10(%ebp),%ebx
    d183:	51                   	push   %ecx
    d184:	51                   	push   %ecx
    d185:	6a fe                	push   $0xfffffffe
    d187:	53                   	push   %ebx
    d188:	e8 d3 24 00 00       	call   f660 <async_answer_0@plt>
    d18d:	83 c4 10             	add    $0x10,%esp
    d190:	8d 65 f4             	lea    -0xc(%ebp),%esp
    d193:	5b                   	pop    %ebx
    d194:	5e                   	pop    %esi
    d195:	5f                   	pop    %edi
    d196:	5d                   	pop    %ebp
    d197:	c3                   	ret    
    d198:	90                   	nop
    d199:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000d1a0 <ahci_get_sess>:
    d1a0:	55                   	push   %ebp
    d1a1:	89 e5                	mov    %esp,%ebp
    d1a3:	57                   	push   %edi
    d1a4:	56                   	push   %esi
    d1a5:	53                   	push   %ebx
    d1a6:	81 ec 10 04 00 00    	sub    $0x410,%esp
    d1ac:	8d 9d e8 fb ff ff    	lea    -0x418(%ebp),%ebx
    d1b2:	8b 7d 0c             	mov    0xc(%ebp),%edi
    d1b5:	8b 75 08             	mov    0x8(%ebp),%esi
    d1b8:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
    d1be:	68 00 04 00 00       	push   $0x400
    d1c3:	53                   	push   %ebx
    d1c4:	56                   	push   %esi
    d1c5:	e8 e6 27 00 00       	call   f9b0 <devman_fun_get_name@plt>
    d1ca:	83 c4 10             	add    $0x10,%esp
    d1cd:	85 c0                	test   %eax,%eax
    d1cf:	75 57                	jne    d228 <ahci_get_sess+0x88>
    d1d1:	83 ec 0c             	sub    $0xc,%esp
    d1d4:	53                   	push   %ebx
    d1d5:	e8 a6 26 00 00       	call   f880 <str_size@plt>
    d1da:	83 c4 10             	add    $0x10,%esp
    d1dd:	83 f8 05             	cmp    $0x5,%eax
    d1e0:	76 46                	jbe    d228 <ahci_get_sess+0x88>
    d1e2:	52                   	push   %edx
    d1e3:	6a 05                	push   $0x5
    d1e5:	68 4c f2 00 00       	push   $0xf24c
    d1ea:	53                   	push   %ebx
    d1eb:	e8 a0 26 00 00       	call   f890 <str_lcmp@plt>
    d1f0:	83 c4 10             	add    $0x10,%esp
    d1f3:	85 c0                	test   %eax,%eax
    d1f5:	75 31                	jne    d228 <ahci_get_sess+0x88>
    d1f7:	50                   	push   %eax
    d1f8:	50                   	push   %eax
    d1f9:	6a 01                	push   $0x1
    d1fb:	56                   	push   %esi
    d1fc:	e8 1f 23 00 00       	call   f520 <devman_device_connect@plt>
    d201:	83 c4 10             	add    $0x10,%esp
    d204:	89 c6                	mov    %eax,%esi
    d206:	85 c0                	test   %eax,%eax
    d208:	74 20                	je     d22a <ahci_get_sess+0x8a>
    d20a:	83 ec 0c             	sub    $0xc,%esp
    d20d:	53                   	push   %ebx
    d20e:	e8 5d 25 00 00       	call   f770 <str_dup@plt>
    d213:	83 c4 10             	add    $0x10,%esp
    d216:	89 07                	mov    %eax,(%edi)
    d218:	8d 65 f4             	lea    -0xc(%ebp),%esp
    d21b:	89 f0                	mov    %esi,%eax
    d21d:	5b                   	pop    %ebx
    d21e:	5e                   	pop    %esi
    d21f:	5f                   	pop    %edi
    d220:	5d                   	pop    %ebp
    d221:	c3                   	ret    
    d222:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    d228:	31 f6                	xor    %esi,%esi
    d22a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    d22d:	89 f0                	mov    %esi,%eax
    d22f:	5b                   	pop    %ebx
    d230:	5e                   	pop    %esi
    d231:	5f                   	pop    %edi
    d232:	5d                   	pop    %ebp
    d233:	c3                   	ret    
    d234:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    d23a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0000d240 <ahci_get_sata_device_name>:
    d240:	55                   	push   %ebp
    d241:	89 e5                	mov    %esp,%ebp
    d243:	57                   	push   %edi
    d244:	56                   	push   %esi
    d245:	53                   	push   %ebx
    d246:	83 ec 28             	sub    $0x28,%esp
    d249:	8b 7d 08             	mov    0x8(%ebp),%edi
    d24c:	8b 75 0c             	mov    0xc(%ebp),%esi
    d24f:	57                   	push   %edi
    d250:	e8 5b 26 00 00       	call   f8b0 <async_exchange_begin@plt>
    d255:	83 c4 10             	add    $0x10,%esp
    d258:	85 c0                	test   %eax,%eax
    d25a:	74 44                	je     d2a0 <ahci_get_sata_device_name+0x60>
    d25c:	89 c3                	mov    %eax,%ebx
    d25e:	50                   	push   %eax
    d25f:	6a 00                	push   $0x0
    d261:	6a 00                	push   $0x0
    d263:	6a 00                	push   $0x0
    d265:	56                   	push   %esi
    d266:	6a 00                	push   $0x0
    d268:	68 0e 04 00 00       	push   $0x40e
    d26d:	53                   	push   %ebx
    d26e:	e8 fd 23 00 00       	call   f670 <async_send_fast@plt>
    d273:	83 c4 1c             	add    $0x1c,%esp
    d276:	8b 55 10             	mov    0x10(%ebp),%edx
    d279:	89 c7                	mov    %eax,%edi
    d27b:	56                   	push   %esi
    d27c:	52                   	push   %edx
    d27d:	53                   	push   %ebx
    d27e:	e8 9d 25 00 00       	call   f820 <async_data_read_start@plt>
    d283:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    d286:	59                   	pop    %ecx
    d287:	5b                   	pop    %ebx
    d288:	50                   	push   %eax
    d289:	57                   	push   %edi
    d28a:	e8 f1 22 00 00       	call   f580 <async_wait_for@plt>
    d28f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    d292:	83 c4 10             	add    $0x10,%esp
    d295:	8d 65 f4             	lea    -0xc(%ebp),%esp
    d298:	5b                   	pop    %ebx
    d299:	5e                   	pop    %esi
    d29a:	5f                   	pop    %edi
    d29b:	5d                   	pop    %ebp
    d29c:	c3                   	ret    
    d29d:	8d 76 00             	lea    0x0(%esi),%esi
    d2a0:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    d2a5:	eb ee                	jmp    d295 <ahci_get_sata_device_name+0x55>
    d2a7:	89 f6                	mov    %esi,%esi
    d2a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000d2b0 <ahci_get_num_blocks>:
    d2b0:	55                   	push   %ebp
    d2b1:	89 e5                	mov    %esp,%ebp
    d2b3:	57                   	push   %edi
    d2b4:	56                   	push   %esi
    d2b5:	53                   	push   %ebx
    d2b6:	83 ec 38             	sub    $0x38,%esp
    d2b9:	8b 55 08             	mov    0x8(%ebp),%edx
    d2bc:	52                   	push   %edx
    d2bd:	e8 ee 25 00 00       	call   f8b0 <async_exchange_begin@plt>
    d2c2:	83 c4 10             	add    $0x10,%esp
    d2c5:	85 c0                	test   %eax,%eax
    d2c7:	74 57                	je     d320 <ahci_get_num_blocks+0x70>
    d2c9:	89 c6                	mov    %eax,%esi
    d2cb:	50                   	push   %eax
    d2cc:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    d2cf:	6a 00                	push   $0x0
    d2d1:	6a 00                	push   $0x0
    d2d3:	6a 00                	push   $0x0
    d2d5:	50                   	push   %eax
    d2d6:	8d 45 e0             	lea    -0x20(%ebp),%eax
    d2d9:	50                   	push   %eax
    d2da:	6a 00                	push   $0x0
    d2dc:	6a 00                	push   $0x0
    d2de:	6a 00                	push   $0x0
    d2e0:	6a 01                	push   $0x1
    d2e2:	68 0e 04 00 00       	push   $0x40e
    d2e7:	56                   	push   %esi
    d2e8:	e8 63 23 00 00       	call   f650 <async_req_fast@plt>
    d2ed:	83 c4 24             	add    $0x24,%esp
    d2f0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    d2f3:	56                   	push   %esi
    d2f4:	e8 c7 23 00 00       	call   f6c0 <async_exchange_end@plt>
    d2f9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    d2fc:	83 c4 10             	add    $0x10,%esp
    d2ff:	85 c0                	test   %eax,%eax
    d301:	75 0e                	jne    d311 <ahci_get_num_blocks+0x61>
    d303:	8b 55 0c             	mov    0xc(%ebp),%edx
    d306:	8b 75 e0             	mov    -0x20(%ebp),%esi
    d309:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    d30c:	89 0a                	mov    %ecx,(%edx)
    d30e:	89 72 04             	mov    %esi,0x4(%edx)
    d311:	8d 65 f4             	lea    -0xc(%ebp),%esp
    d314:	5b                   	pop    %ebx
    d315:	5e                   	pop    %esi
    d316:	5f                   	pop    %edi
    d317:	5d                   	pop    %ebp
    d318:	c3                   	ret    
    d319:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    d320:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    d325:	eb ea                	jmp    d311 <ahci_get_num_blocks+0x61>
    d327:	89 f6                	mov    %esi,%esi
    d329:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000d330 <ahci_get_block_size>:
    d330:	55                   	push   %ebp
    d331:	89 e5                	mov    %esp,%ebp
    d333:	53                   	push   %ebx
    d334:	83 ec 30             	sub    $0x30,%esp
    d337:	8b 55 08             	mov    0x8(%ebp),%edx
    d33a:	52                   	push   %edx
    d33b:	e8 70 25 00 00       	call   f8b0 <async_exchange_begin@plt>
    d340:	83 c4 10             	add    $0x10,%esp
    d343:	85 c0                	test   %eax,%eax
    d345:	74 49                	je     d390 <ahci_get_block_size+0x60>
    d347:	89 c3                	mov    %eax,%ebx
    d349:	50                   	push   %eax
    d34a:	8d 45 f4             	lea    -0xc(%ebp),%eax
    d34d:	6a 00                	push   $0x0
    d34f:	6a 00                	push   $0x0
    d351:	6a 00                	push   $0x0
    d353:	6a 00                	push   $0x0
    d355:	50                   	push   %eax
    d356:	6a 00                	push   $0x0
    d358:	6a 00                	push   $0x0
    d35a:	6a 00                	push   $0x0
    d35c:	6a 02                	push   $0x2
    d35e:	68 0e 04 00 00       	push   $0x40e
    d363:	53                   	push   %ebx
    d364:	e8 e7 22 00 00       	call   f650 <async_req_fast@plt>
    d369:	83 c4 24             	add    $0x24,%esp
    d36c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    d36f:	53                   	push   %ebx
    d370:	e8 4b 23 00 00       	call   f6c0 <async_exchange_end@plt>
    d375:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    d378:	83 c4 10             	add    $0x10,%esp
    d37b:	85 c0                	test   %eax,%eax
    d37d:	75 08                	jne    d387 <ahci_get_block_size+0x57>
    d37f:	8b 55 0c             	mov    0xc(%ebp),%edx
    d382:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    d385:	89 0a                	mov    %ecx,(%edx)
    d387:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    d38a:	c9                   	leave  
    d38b:	c3                   	ret    
    d38c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    d390:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    d395:	eb f0                	jmp    d387 <ahci_get_block_size+0x57>
    d397:	89 f6                	mov    %esi,%esi
    d399:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000d3a0 <ahci_read_blocks>:
    d3a0:	55                   	push   %ebp
    d3a1:	89 e5                	mov    %esp,%ebp
    d3a3:	56                   	push   %esi
    d3a4:	53                   	push   %ebx
    d3a5:	83 ec 1c             	sub    $0x1c,%esp
    d3a8:	8b 45 08             	mov    0x8(%ebp),%eax
    d3ab:	8b 75 0c             	mov    0xc(%ebp),%esi
    d3ae:	50                   	push   %eax
    d3af:	e8 fc 24 00 00       	call   f8b0 <async_exchange_begin@plt>
    d3b4:	83 c4 10             	add    $0x10,%esp
    d3b7:	85 c0                	test   %eax,%eax
    d3b9:	74 4d                	je     d408 <ahci_read_blocks+0x68>
    d3bb:	89 c3                	mov    %eax,%ebx
    d3bd:	8b 55 14             	mov    0x14(%ebp),%edx
    d3c0:	50                   	push   %eax
    d3c1:	6a 00                	push   $0x0
    d3c3:	52                   	push   %edx
    d3c4:	56                   	push   %esi
    d3c5:	6a 00                	push   $0x0
    d3c7:	6a 03                	push   $0x3
    d3c9:	68 0e 04 00 00       	push   $0x40e
    d3ce:	53                   	push   %ebx
    d3cf:	e8 9c 22 00 00       	call   f670 <async_send_fast@plt>
    d3d4:	83 c4 1c             	add    $0x1c,%esp
    d3d7:	8b 4d 18             	mov    0x18(%ebp),%ecx
    d3da:	6a 03                	push   $0x3
    d3dc:	51                   	push   %ecx
    d3dd:	53                   	push   %ebx
    d3de:	89 c6                	mov    %eax,%esi
    d3e0:	e8 1b 25 00 00       	call   f900 <async_share_out_start@plt>
    d3e5:	89 1c 24             	mov    %ebx,(%esp)
    d3e8:	e8 d3 22 00 00       	call   f6c0 <async_exchange_end@plt>
    d3ed:	5b                   	pop    %ebx
    d3ee:	58                   	pop    %eax
    d3ef:	8d 45 f4             	lea    -0xc(%ebp),%eax
    d3f2:	50                   	push   %eax
    d3f3:	56                   	push   %esi
    d3f4:	e8 87 21 00 00       	call   f580 <async_wait_for@plt>
    d3f9:	8b 45 f4             	mov    -0xc(%ebp),%eax
    d3fc:	83 c4 10             	add    $0x10,%esp
    d3ff:	8d 65 f8             	lea    -0x8(%ebp),%esp
    d402:	5b                   	pop    %ebx
    d403:	5e                   	pop    %esi
    d404:	5d                   	pop    %ebp
    d405:	c3                   	ret    
    d406:	66 90                	xchg   %ax,%ax
    d408:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    d40d:	eb f0                	jmp    d3ff <ahci_read_blocks+0x5f>
    d40f:	90                   	nop

0000d410 <ahci_write_blocks>:
    d410:	55                   	push   %ebp
    d411:	89 e5                	mov    %esp,%ebp
    d413:	56                   	push   %esi
    d414:	53                   	push   %ebx
    d415:	83 ec 1c             	sub    $0x1c,%esp
    d418:	8b 45 08             	mov    0x8(%ebp),%eax
    d41b:	8b 75 0c             	mov    0xc(%ebp),%esi
    d41e:	50                   	push   %eax
    d41f:	e8 8c 24 00 00       	call   f8b0 <async_exchange_begin@plt>
    d424:	83 c4 10             	add    $0x10,%esp
    d427:	85 c0                	test   %eax,%eax
    d429:	74 4d                	je     d478 <ahci_write_blocks+0x68>
    d42b:	89 c3                	mov    %eax,%ebx
    d42d:	8b 55 14             	mov    0x14(%ebp),%edx
    d430:	50                   	push   %eax
    d431:	6a 00                	push   $0x0
    d433:	52                   	push   %edx
    d434:	56                   	push   %esi
    d435:	6a 00                	push   $0x0
    d437:	6a 04                	push   $0x4
    d439:	68 0e 04 00 00       	push   $0x40e
    d43e:	53                   	push   %ebx
    d43f:	e8 2c 22 00 00       	call   f670 <async_send_fast@plt>
    d444:	83 c4 1c             	add    $0x1c,%esp
    d447:	8b 4d 18             	mov    0x18(%ebp),%ecx
    d44a:	6a 03                	push   $0x3
    d44c:	51                   	push   %ecx
    d44d:	53                   	push   %ebx
    d44e:	89 c6                	mov    %eax,%esi
    d450:	e8 ab 24 00 00       	call   f900 <async_share_out_start@plt>
    d455:	89 1c 24             	mov    %ebx,(%esp)
    d458:	e8 63 22 00 00       	call   f6c0 <async_exchange_end@plt>
    d45d:	5b                   	pop    %ebx
    d45e:	58                   	pop    %eax
    d45f:	8d 45 f4             	lea    -0xc(%ebp),%eax
    d462:	50                   	push   %eax
    d463:	56                   	push   %esi
    d464:	e8 17 21 00 00       	call   f580 <async_wait_for@plt>
    d469:	8b 45 f4             	mov    -0xc(%ebp),%eax
    d46c:	83 c4 10             	add    $0x10,%esp
    d46f:	8d 65 f8             	lea    -0x8(%ebp),%esp
    d472:	5b                   	pop    %ebx
    d473:	5e                   	pop    %esi
    d474:	5d                   	pop    %ebp
    d475:	c3                   	ret    
    d476:	66 90                	xchg   %ax,%ax
    d478:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    d47d:	eb f0                	jmp    d46f <ahci_write_blocks+0x5f>
    d47f:	90                   	nop

0000d480 <ddf_log_init>:
    d480:	55                   	push   %ebp
    d481:	89 e5                	mov    %esp,%ebp
    d483:	5d                   	pop    %ebp
    d484:	e9 27 21 00 00       	jmp    f5b0 <log_init@plt>
    d489:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000d490 <ddf_msg>:
    d490:	55                   	push   %ebp
    d491:	89 e5                	mov    %esp,%ebp
    d493:	83 ec 08             	sub    $0x8,%esp
    d496:	8d 45 10             	lea    0x10(%ebp),%eax
    d499:	8b 55 0c             	mov    0xc(%ebp),%edx
    d49c:	8b 4d 08             	mov    0x8(%ebp),%ecx
    d49f:	50                   	push   %eax
    d4a0:	52                   	push   %edx
    d4a1:	51                   	push   %ecx
    d4a2:	6a ff                	push   $0xffffffff
    d4a4:	e8 f7 21 00 00       	call   f6a0 <log_msgv@plt>
    d4a9:	83 c4 10             	add    $0x10,%esp
    d4ac:	c9                   	leave  
    d4ad:	c3                   	ret    
    d4ae:	64 65 76 69          	fs gs jbe d51b <usbfallback_driver_ops+0x1f>
    d4b2:	63 65 00             	arpl   %sp,0x0(%ebp)
    d4b5:	69 6e 74 65 72 66 61 	imul   $0x61667265,0x74(%esi),%ebp
    d4bc:	63 65 00             	arpl   %sp,0x0(%ebp)
    d4bf:	6d                   	insl   (%dx),%es:(%edi)
    d4c0:	61                   	popa   
    d4c1:	69 6e 2e 63 00 75 73 	imul   $0x73750063,0x2e(%esi),%ebp
    d4c8:	62 66 6c             	bound  %esp,0x6c(%esi)
    d4cb:	62 6b 00             	bound  %ebp,0x0(%ebx)
    d4ce:	66 90                	xchg   %ax,%ax
    d4d0:	50                   	push   %eax
    d4d1:	72 65                	jb     d538 <usbfallback_driver_ops+0x3c>
    d4d3:	74 65                	je     d53a <usbfallback_driver_ops+0x3e>
    d4d5:	6e                   	outsb  %ds:(%esi),(%dx)
    d4d6:	64 69 6e 67 20 74 6f 	imul   $0x206f7420,%fs:0x67(%esi),%ebp
    d4dd:	20 
    d4de:	63 6f 6e             	arpl   %bp,0x6e(%edi)
    d4e1:	74 72                	je     d555 <usbfallback_driver_ops+0x59>
    d4e3:	6f                   	outsl  %ds:(%esi),(%dx)
    d4e4:	6c                   	insb   (%dx),%es:(%edi)
    d4e5:	20 25 73 20 60 25    	and    %ah,0x25602073
    d4eb:	73 27                	jae    d514 <usbfallback_driver_ops+0x18>
    d4ed:	2e 0a 00             	or     %cs:(%eax),%al

0000d4f0 <usbfallback_driver>:
    d4f0:	c6 d4 00 00 00 00 00 00 fc d4 00 00                 ............

0000d4fc <usbfallback_driver_ops>:
    d4fc:	40 11 00 00 90 11 00 00 90 11 00 00 73 72 63 2f     @...........src/
    d50c:	64 72 69 76 65 72 2e 63 00 64 72 69 76 65 72 00     driver.c.driver.
    d51c:	64 72 69 76 65 72 2d 3e 6f 70 73 00 64 72 69 76     driver->ops.driv
    d52c:	65 72 2d 3e 6f 70 73 2d 3e 64 65 76 69 63 65 5f     er->ops->device_
    d53c:	61 64 64 00 64 72 76 20 21 3d 20 4e 55 4c 4c 00     add.drv != NULL.
    d54c:	55 53 42 20 64 65 76 69 63 65 20 60 25 73 27 20     USB device `%s' 
    d55c:	69 6e 69 74 20 66 61 69 6c 65 64 20 28 25 73 29     init failed (%s)
    d56c:	3a 20 25 73 2e 0a 00 73 72 63 2f 64 65 76 64 72     : %s...src/devdr
    d57c:	76 2e 63 00 75 73 62 5f 64 65 76 00 75 73 62 5f     v.c.usb_dev.usb_
    d58c:	64 65 76 2d 3e 70 69 70 65 73 20 3d 3d 20 4e 55     dev->pipes == NU
    d59c:	4c 4c 00 75 73 62 5f 64 65 76 2d 3e 70 69 70 65     LL.usb_dev->pipe
    d5ac:	73 5f 63 6f 75 6e 74 20 3d 3d 20 30 00 6e 6f 74     s_count == 0.not
    d5bc:	20 00 64 64 66 5f 64 65 76 00 65 72 72 00 44 44      .ddf_dev.err.DD
    d5cc:	46 20 64 61 74 61 20 61 6c 6c 6f 63 00 64 65 76     F data alloc.dev
    d5dc:	69 63 65 20 62 75 73 20 73 65 73 73 69 6f 6e 20     ice bus session 
    d5ec:	63 72 65 61 74 65 00 64 65 73 63 72 69 70 74 6f     create.descripto
    d5fc:	72 20 72 65 74 72 69 65 76 61 6c 00 70 69 70 65     r retrieval.pipe
    d60c:	73 20 69 6e 69 74 69 61 6c 69 7a 61 74 69 6f 6e     s initialization
    d61c:	00 75 73 62 5f 64 65 76 2d 3e 64 72 69 76 65 72     .usb_dev->driver
    d62c:	5f 64 61 74 61 20 3d 3d 20 4e 55 4c 4c 00 66 90     _data == NULL.f.
    d63c:	75 73 62 5f 64 65 76 2d 3e 64 65 73 63 72 69 70     usb_dev->descrip
    d64c:	74 6f 72 73 2e 66 75 6c 6c 5f 63 6f 6e 66 69 67     tors.full_config
    d65c:	00 00 00 00 75 73 62 5f 64 65 76 2d 3e 70 69 70     ....usb_dev->pip
    d66c:	65 73 20 7c 7c 20 75 73 62 5f 64 65 76 2d 3e 70     es || usb_dev->p
    d67c:	69 70 65 73 5f 63 6f 75 6e 74 20 3d 3d 20 30 00     ipes_count == 0.
    d68c:	55 6e 72 65 67 69 73 74 65 72 69 6e 67 20 70 69     Unregistering pi
    d69c:	70 65 20 25 7a 75 3a 20 25 73 70 72 65 73 65 6e     pe %zu: %spresen
    d6ac:	74 2e 0a 00 64 65 66 61 75 6c 74 20 63 6f 6e 74     t...default cont
    d6bc:	72 6f 6c 20 70 69 70 65 20 69 6e 69 74 69 61 6c     rol pipe initial
    d6cc:	69 7a 61 74 69 6f 6e 00 75 73 62 5f 64 65 76 2d     ization.usb_dev-
    d6dc:	3e 64 65 73 63 72 69 70 74 6f 72 73 2e 66 75 6c     >descriptors.ful
    d6ec:	6c 5f 63 6f 6e 66 69 67 20 3d 3d 20 4e 55 4c 4c     l_config == NULL
    d6fc:	00 73 72 63 2f 70 69 70 65 73 2e 63 00 70 69 70     .src/pipes.c.pip
    d70c:	65 00 70 69 70 65 2d 3e 62 75 73 5f 73 65 73 73     e.pipe->bus_sess
    d71c:	69 6f 6e 00 73 72 63 2f 70 69 70 65 73 69 6e 69     ion.src/pipesini
    d72c:	74 2e 63 00 66 90 66 90 66 90 66 90 66 90 66 90     t.c.f.f.f.f.f.f.
    d73c:	66 90 66 90                                         f.f.

0000d740 <descriptor_nesting>:
    d740:	04 00 00 00 02 00 00 00 05 00 00 00 04 00 00 00     ................
    d750:	29 00 00 00 04 00 00 00 21 00 00 00 04 00 00 00     ).......!.......
    d760:	22 00 00 00 21 00 00 00 ff ff ff ff ff ff ff ff     "...!...........
    d770:	73 72 63 2f 61 6c 74 69 66 61 63 65 2e 63 00 63     src/altiface.c.c
    d780:	6f 6e 66 69 67 5f 64 65 73 63 72 20 21 3d 20 4e     onfig_descr != N
    d790:	55 4c 4c 00 63 6f 6e 66 69 67 5f 64 65 73 63 72     ULL.config_descr
    d7a0:	5f 73 69 7a 65 20 3e 20 30 00 61 6c 74 65 72 6e     _size > 0.altern
    d7b0:	61 74 65 73 20 21 3d 20 4e 55 4c 4c 00 73 72 63     ates != NULL.src
    d7c0:	2f 64 70 2e 63 00 66 90 69 73 5f 76 61 6c 69 64     /dp.c.f.is_valid
    d7d0:	5f 64 65 73 63 72 69 70 74 6f 72 5f 70 6f 69 6e     _descriptor_poin
    d7e0:	74 65 72 28 64 61 74 61 2c 20 63 75 72 72 65 6e     ter(data, curren
    d7f0:	74 29 00 66 90 66 90 66 90 66 90 66 90 66 90 90     t).f.f.f.f.f.f..

0000d800 <usb_dp_standard_descriptor_nesting>:
    d800:	04 00 00 00 02 00 00 00 05 00 00 00 04 00 00 00     ................
    d810:	29 00 00 00 04 00 00 00 21 00 00 00 04 00 00 00     ).......!.......
    d820:	22 00 00 00 21 00 00 00 ff ff ff ff ff ff ff ff     "...!...........
    d830:	67 65 6e 65 72 69 63 2f 64 72 69 76 65 72 2e 63     generic/driver.c
    d840:	00 69 73 5f 76 61 6c 69 64 5f 69 66 61 63 65 5f     .is_valid_iface_
    d850:	69 64 78 28 69 64 78 29 00 72 65 6d 5f 69 66 61     idx(idx).rem_ifa
    d860:	63 65 20 21 3d 20 4e 55 4c 4c 00 64 65 76 2d 3e     ce != NULL.dev->
    d870:	70 61 72 65 6e 74 5f 73 65 73 73 20 3d 3d 20 4e     parent_sess == N
    d880:	55 4c 4c 00 64 65 76 2d 3e 6e 61 6d 65 20 3d 3d     ULL.dev->name ==
    d890:	20 4e 55 4c 4c 00 66 75 6e 2d 3e 62 6f 75 6e 64      NULL.fun->bound
    d8a0:	20 3d 3d 20 66 61 6c 73 65 00 66 75 6e 2d 3e 64      == false.fun->d
    d8b0:	72 69 76 65 72 5f 64 61 74 61 20 3d 3d 20 4e 55     river_data == NU
    d8c0:	4c 4c 00 66 75 6e 2d 3e 6e 61 6d 65 20 21 3d 20     LL.fun->name != 
    d8d0:	4e 55 4c 4c 00 66 75 6e 2d 3e 64 65 76 20 21 3d     NULL.fun->dev !=
    d8e0:	20 4e 55 4c 4c 00 66 75 6e 2d 3e 62 6f 75 6e 64      NULL.fun->bound
    d8f0:	20 3d 3d 20 74 72 75 65 00 66 75 6e 2d 3e 66 74      == true.fun->ft
    d900:	79 70 65 20 3d 3d 20 66 75 6e 5f 69 6e 6e 65 72     ype == fun_inner
    d910:	00 66 75 6e 2d 3e 63 6f 6e 6e 5f 68 61 6e 64 6c     .fun->conn_handl
    d920:	65 72 20 3d 3d 20 4e 55 4c 4c 00 66 75 6e 2d 3e     er == NULL.fun->
    d930:	6f 70 73 20 3d 3d 20 4e 55 4c 4c 00 66 75 6e 2d     ops == NULL.fun-
    d940:	3e 66 74 79 70 65 20 3d 3d 20 66 75 6e 5f 65 78     >ftype == fun_ex
    d950:	70 6f 73 65 64 00 64 72 69 76 65 72 20 61 6c 72     posed.driver alr
    d960:	65 61 64 79 20 73 74 61 72 74 65 64 00 66 90 90     eady started.f..
    d970:	66 69 62 72 69 6c 5f 6d 75 74 65 78 5f 69 73 5f     fibril_mutex_is_
    d980:	6c 6f 63 6b 65 64 28 26 66 75 6e 63 74 69 6f 6e     locked(&function
    d990:	73 5f 6d 75 74 65 78 29 00 00 00 00 25 73 3a 20     s_mutex)....%s: 
    d9a0:	64 72 69 76 65 72 5f 63 6f 6e 6e 65 63 74 69 6f     driver_connectio
    d9b0:	6e 5f 67 65 6e 20 65 72 72 6f 72 20 2d 20 69 6e     n_gen error - in
    d9c0:	76 61 6c 69 64 20 69 6e 74 65 72 66 61 63 65 20     valid interface 
    d9d0:	69 64 20 25 64 2e 00 00 25 73 3a 20 64 72 69 76     id %d...%s: driv
    d9e0:	65 72 5f 63 6f 6e 6e 65 63 74 69 6f 6e 5f 67 65     er_connection_ge
    d9f0:	6e 20 65 72 72 6f 72 20 2d 20 00 00 46 75 6e 63     n error - ..Func
    da00:	74 69 6f 6e 20 77 69 74 68 20 68 61 6e 64 6c 65     tion with handle
    da10:	20 25 75 20 68 61 73 20 6e 6f 20 69 6e 74 65 72      %u has no inter
    da20:	66 61 63 65 20 77 69 74 68 20 69 64 20 25 64 2e     face with id %d.
    da30:	0a 00 00 00 25 73 3a 20 64 72 69 76 65 72 5f 63     ....%s: driver_c
    da40:	6f 6e 6e 65 63 74 69 6f 6e 5f 67 65 6e 20 65 72     onnection_gen er
    da50:	72 6f 72 20 2d 20 69 6e 76 61 6c 69 64 20 69 6e     ror - invalid in
    da60:	74 65 72 66 61 63 65 20 6d 65 74 68 6f 64 2e 00     terface method..
    da70:	25 73 3a 20 64 72 69 76 65 72 5f 63 6f 6e 6e 65     %s: driver_conne
    da80:	63 74 69 6f 6e 5f 67 65 6e 20 65 72 72 6f 72 20     ction_gen error 
    da90:	2d 20 6e 6f 20 66 75 6e 63 74 69 6f 6e 20 77 69     - no function wi
    daa0:	74 68 20 68 61 6e 64 6c 65 20 25 75 20 77 61 73     th handle %u was
    dab0:	20 66 6f 75 6e 64 2e 0a 00 00 00 00 66 69 62 72      found......fibr
    dac0:	69 6c 5f 6d 75 74 65 78 5f 69 73 5f 6c 6f 63 6b     il_mutex_is_lock
    dad0:	65 64 28 26 64 65 76 69 63 65 73 5f 6d 75 74 65     ed(&devices_mute
    dae0:	78 29 00 00 45 72 72 6f 72 3a 20 46 61 69 6c 65     x)..Error: Faile
    daf0:	64 20 74 6f 20 72 65 67 69 73 74 65 72 20 64 72     d to register dr
    db00:	69 76 65 72 20 77 69 74 68 20 64 65 76 69 63 65     iver with device
    db10:	20 6d 61 6e 61 67 65 72 20 28 25 73 29 2e 0a 00      manager (%s)...
    db20:	38 4a 00 00 38 49 00 00 b0 48 00 00 08 48 00 00     8J..8I...H...H..
    db30:	10 4b 00 00 67 65 6e 65 72 69 63 2f 64 65 76 5f     .K..generic/dev_
    db40:	69 66 61 63 65 2e 63 00 66 90 66 90 66 90 66 90     iface.c.f.f.f.f.
    db50:	66 90 66 90 66 90 66 90 66 90 66 90 66 90 66 90     f.f.f.f.f.f.f.f.

0000db60 <remote_ifaces>:
    db60:	70 ee 00 00 88 ee 00 00 94 ee 00 00 9c db 00 00     p...............
    db70:	34 ee 00 00 80 ef 00 00 d0 f0 00 00 80 f1 00 00     4...............
    db80:	20 f1 00 00 b8 f1 00 00 08 f2 00 00 20 f2 00 00      ........... ...
    db90:	30 f2 00 00 3c f2 00 00 54 f2 00 00                 0...<...T...

0000db9c <remote_audio_mixer_iface>:
    db9c:	04 00 00 00 a4 db 00 00                             ........

0000dba4 <remote_audio_mixer_iface_ops>:
    dba4:	50 57 00 00 40 56 00 00 90 55 00 00 e0 55 00 00     PW..@V...U...U..
    dbb4:	52 65 63 65 69 76 69 6e 67 20 73 68 61 72 65 20     Receiving share 
    dbc4:	72 65 71 75 65 73 74 2e 00 46 61 69 6c 65 64 20     request..Failed 
    dbd4:	74 6f 20 73 68 61 72 65 20 70 63 6d 20 62 75 66     to share pcm buf
    dbe4:	66 65 72 2e 00 43 61 6c 6c 69 6e 67 20 73 68 61     fer..Calling sha
    dbf4:	72 65 20 66 69 6e 61 6c 69 7a 65 2e 00 46 61 69     re finalize..Fai
    dc04:	6c 65 64 20 74 6f 20 73 68 61 72 65 20 62 75 66     led to share buf
    dc14:	66 65 72 2e 00 42 75 66 66 65 72 20 73 68 61 72     fer..Buffer shar
    dc24:	65 64 20 77 69 74 68 20 73 69 7a 65 20 25 7a 75     ed with size %zu
    dc34:	2e 00 46 61 69 6c 65 64 20 74 6f 20 73 65 74 20     ..Failed to set 
    dc44:	65 76 65 6e 74 20 63 61 6c 6c 62 61 63 6b 2e 00     event callback..
    dc54:	55 4e 4b 4e 4f 57 4e 20 43 41 50 00 55 4e 4b 4e     UNKNOWN CAP.UNKN
    dc64:	4f 57 4e 20 45 56 45 4e 54 00 61 75 64 69 6f 2d     OWN EVENT.audio-
    dc74:	70 63 6d 00 67 65 6e 65 72 69 63 2f 72 65 6d 6f     pcm.generic/remo
    dc84:	74 65 5f 61 75 64 69 6f 5f 70 63 6d 2e 63 00 50     te_audio_pcm.c.P
    dc94:	4c 41 59 42 41 43 4b 20 53 54 41 52 54 45 44 00     LAYBACK STARTED.
    dca4:	43 41 50 54 55 52 45 20 53 54 41 52 54 45 44 00     CAPTURE STARTED.
    dcb4:	46 52 41 47 4d 45 4e 54 20 50 4c 41 59 45 44 00     FRAGMENT PLAYED.
    dcc4:	46 52 41 47 4d 45 4e 54 20 43 41 50 54 55 52 45     FRAGMENT CAPTURE
    dcd4:	44 00 50 4c 41 59 42 41 43 4b 20 54 45 52 4d 49     D.PLAYBACK TERMI
    dce4:	4e 41 54 45 44 00 43 41 50 54 55 52 45 20 54 45     NATED.CAPTURE TE
    dcf4:	52 4d 49 4e 41 54 45 44 00 43 41 50 54 55 52 45     RMINATED.CAPTURE
    dd04:	00 50 4c 41 59 42 41 43 4b 00 4d 41 58 49 4d 55     .PLAYBACK.MAXIMU
    dd14:	4d 20 42 55 46 46 45 52 20 53 49 5a 45 00 4b 4e     M BUFFER SIZE.KN
    dd24:	4f 57 53 20 42 55 46 46 45 52 20 50 4f 53 49 54     OWS BUFFER POSIT
    dd34:	49 4f 4e 00 46 52 41 47 4d 45 4e 54 20 49 4e 54     ION.FRAGMENT INT
    dd44:	45 52 52 55 50 54 53 00 4d 49 4e 49 4d 55 4d 20     ERRUPTS.MINIMUM 
    dd54:	46 52 41 47 4d 45 4e 54 20 53 49 5a 45 00 4d 41     FRAGMENT SIZE.MA
    dd64:	58 49 4d 55 4d 20 46 52 41 47 4d 45 4e 54 20 53     XIMUM FRAGMENT S
    dd74:	49 5a 45 00 43 68 65 63 6b 69 6e 67 20 72 65 71     IZE.Checking req
    dd84:	75 65 73 74 65 64 20 73 68 61 72 65 20 73 69 7a     uested share siz
    dd94:	65 2e 00 00 49 6e 63 6f 72 72 65 63 74 20 70 63     e...Incorrect pc
    dda4:	6d 20 62 75 66 66 65 72 20 73 69 7a 65 20 72 65     m buffer size re
    ddb4:	71 75 65 73 74 65 64 2e 00 00 00 00 46 61 69 6c     quested.....Fail
    ddc4:	65 64 20 74 6f 20 63 72 65 61 74 65 20 65 76 65     ed to create eve
    ddd4:	6e 74 20 63 61 6c 6c 62 61 63 6b 00 28 66 6f 72     nt callback.(for
    dde4:	6d 61 74 20 26 20 55 49 4e 54 31 36 5f 4d 41 58     mat & UINT16_MAX
    ddf4:	29 20 3d 3d 20 66 6f 72 6d 61 74 00                 ) == format.

0000de00 <events.2836>:
	...
    ee00:	93 dc 00 00 a4 dc 00 00 b4 dc 00 00 c4 dc 00 00     ................
    ee10:	d6 dc 00 00 ea dc 00 00                             ........

0000ee18 <caps.2832>:
    ee18:	fd dc 00 00 05 dd 00 00 0e dd 00 00 22 dd 00 00     ............"...
    ee28:	38 dd 00 00 4c dd 00 00 62 dd 00 00                 8...L...b...

0000ee34 <remote_audio_pcm_iface>:
    ee34:	0c 00 00 00 40 ee 00 00 00 00 00 00                 ....@.......

0000ee40 <remote_audio_pcm_iface_ops>:
    ee40:	a0 60 00 00 60 5d 00 00 c0 5f 00 00 a0 5c 00 00     .`..`]..._...\..
    ee50:	50 5f 00 00 c0 5d 00 00 50 5c 00 00 10 5d 00 00     P_...]..P\...]..
    ee60:	f0 5b 00 00 90 5b 00 00 30 5b 00 00 d0 5a 00 00     .[...[..0[...Z..

0000ee70 <remote_hw_res_iface>:
    ee70:	04 00 00 00 78 ee 00 00                             ....x...

0000ee78 <remote_hw_res_iface_ops>:
    ee78:	30 6d 00 00 60 6c 00 00 f0 6b 00 00 d0 6c 00 00     0m..`l...k...l..

0000ee88 <remote_pio_window_iface>:
    ee88:	01 00 00 00 90 ee 00 00                             ........

0000ee90 <remote_pio_window_iface_ops>:
    ee90:	d0 6d 00 00                                         .m..

0000ee94 <remote_char_dev_iface>:
    ee94:	02 00 00 00 9c ee 00 00                             ........

0000ee9c <remote_char_dev_iface_ops>:
    ee9c:	60 6f 00 00 70 6e 00 00 67 65 6e 65 72 69 63 2f     `o..pn..generic/
    eeac:	72 65 6d 6f 74 65 5f 6e 69 63 2e 63 00 6e 69 63     remote_nic.c.nic
    eebc:	5f 69 66 61 63 65 2d 3e 67 65 74 5f 61 64 64 72     _iface->get_addr
    eecc:	65 73 73 00 6e 69 63 5f 69 66 61 63 65 2d 3e 73     ess.nic_iface->s
    eedc:	65 74 5f 73 74 61 74 65 00 6e 69 63 5f 69 66 61     et_state.nic_ifa
    eeec:	63 65 2d 3e 63 61 6c 6c 62 61 63 6b 5f 63 72 65     ce->callback_cre
    eefc:	61 74 65 00 6e 69 63 5f 69 66 61 63 65 2d 3e 67     ate.nic_iface->g
    ef0c:	65 74 5f 73 74 61 74 65 00 6e 69 63 5f 69 66 61     et_state.nic_ifa
    ef1c:	63 65 2d 3e 73 65 6e 64 5f 66 72 61 6d 65 00 73     ce->send_frame.s
    ef2c:	74 61 74 73 00 64 65 76 69 63 65 5f 69 6e 66 6f     tats.device_info
    ef3c:	00 63 61 62 6c 65 5f 73 74 61 74 65 00 6d 6f 64     .cable_state.mod
    ef4c:	65 00 6d 61 73 6b 00 69 64 00 63 6f 75 6e 74 00     e.mask.id.count.
    ef5c:	6d 61 74 63 68 65 64 5f 74 79 70 65 00 73 75 70     matched_type.sup
    ef6c:	70 6f 72 74 65 64 00 61 63 74 69 76 65 00 66 90     ported.active.f.
    ef7c:	66 90 66 90                                         f.f.

0000ef80 <remote_nic_iface>:
    ef80:	29 00 00 00 a0 ef 00 00 00 00 00 00 00 00 00 00     )...............
	...

0000efa0 <remote_nic_iface_ops>:
    efa0:	00 90 00 00 60 8f 00 00 b0 8f 00 00 10 8f 00 00     ....`...........
    efb0:	30 7e 00 00 90 77 00 00 50 7d 00 00 50 7c 00 00     0~...w..P}..P|..
    efc0:	b0 7a 00 00 20 8e 00 00 20 75 00 00 d0 74 00 00     .z.. ... u...t..
    efd0:	80 74 00 00 90 8e 00 00 30 74 00 00 c0 8d 00 00     .t......0t......
    efe0:	d0 73 00 00 00 8c 00 00 a0 8a 00 00 f0 88 00 00     .s..............
    eff0:	90 87 00 00 50 7a 00 00 80 73 00 00 f0 79 00 00     ....Pz...s...y..
    f000:	30 73 00 00 10 86 00 00 c0 84 00 00 70 7b 00 00     0s..........p{..
    f010:	70 76 00 00 c0 72 00 00 50 83 00 00 70 72 00 00     pv...r..P...pr..
    f020:	d0 81 00 00 50 80 00 00 90 79 00 00 10 7f 00 00     ....P....y......
    f030:	10 7b 00 00 10 72 00 00 80 78 00 00 70 75 00 00     .{...r...x..pu..
    f040:	c0 71 00 00 67 65 6e 65 72 69 63 2f 72 65 6d 6f     .q..generic/remo
    f050:	74 65 5f 69 65 65 65 38 30 32 31 31 2e 63 00 69     te_ieee80211.c.i
    f060:	65 65 65 38 30 32 31 31 5f 69 66 61 63 65 2d 3e     eee80211_iface->
    f070:	63 6f 6e 6e 65 63 74 00 69 65 65 65 38 30 32 31     connect.ieee8021
    f080:	31 5f 69 66 61 63 65 2d 3e 64 69 73 63 6f 6e 6e     1_iface->disconn
    f090:	65 63 74 00 72 65 73 75 6c 74 73 00 73 73 69 64     ect.results.ssid
    f0a0:	5f 73 74 61 72 74 00 64 68 63 70 00 69 65 65 65     _start.dhcp.ieee
    f0b0:	38 30 32 31 31 5f 69 66 61 63 65 2d 3e 67 65 74     80211_iface->get
    f0c0:	5f 73 63 61 6e 5f 72 65 73 75 6c 74 73 00 66 90     _scan_results.f.

0000f0d0 <remote_ieee80211_iface>:
    f0d0:	03 00 00 00 d8 f0 00 00                             ........

0000f0d8 <remote_ieee80211_iface_ops>:
    f0d8:	40 a8 00 00 60 a7 00 00 50 a9 00 00 67 65 6e 65     @...`...P...gene
    f0e8:	72 69 63 2f 72 65 6d 6f 74 65 5f 75 73 62 2e 63     ric/remote_usb.c
    f0f8:	00 66 75 6e 00 69 66 61 63 65 00 63 61 6c 6c 00     .fun.iface.call.
    f108:	66 90 66 90 66 90 66 90 66 90 66 90 66 90 66 90     f.f.f.f.f.f.f.f.
    f118:	66 90 66 90 66 90 66 90                             f.f.f.f.

0000f120 <remote_usb_iface>:
    f120:	0a 00 00 00 40 f1 00 00 00 00 00 00 00 00 00 00     ....@...........
	...

0000f140 <remote_usb_iface_ops>:
    f140:	70 b0 00 00 00 b0 00 00 b0 af 00 00 60 af 00 00     p...........`...
    f150:	10 af 00 00 c0 ae 00 00 40 ae 00 00 f0 ad 00 00     ........@.......
    f160:	40 b3 00 00 c0 b1 00 00 67 65 6e 65 72 69 63 2f     @.......generic/
    f170:	72 65 6d 6f 74 65 5f 70 63 69 2e 63 00 66 90 90     remote_pci.c.f..

0000f180 <remote_pci_iface>:
    f180:	06 00 00 00 88 f1 00 00                             ........

0000f188 <remote_pci_iface_ops>:
    f188:	00 bc 00 00 80 bb 00 00 00 bb 00 00 60 ba 00 00     ............`...
    f198:	d0 b9 00 00 50 b9 00 00 67 65 6e 65 72 69 63 2f     ....P...generic/
    f1a8:	72 65 6d 6f 74 65 5f 75 73 62 68 63 2e 63 00 90     remote_usbhc.c..

0000f1b8 <remote_usbhc_iface>:
    f1b8:	02 00 00 00 c0 f1 00 00                             ........

0000f1c0 <remote_usbhc_iface_ops>:
    f1c0:	20 c1 00 00 90 bf 00 00 72 65 6d 6f 74 65 5f 75      .......remote_u
    f1d0:	73 62 68 69 64 5f 67 65 74 5f 65 76 65 6e 74 5f     sbhid_get_event_
    f1e0:	6c 65 6e 67 74 68 28 29 0a 00 00 00 47 65 74 20     length()....Get 
    f1f0:	65 76 65 6e 74 20 6c 65 6e 67 74 68 20 6e 6f 74     event length not
    f200:	20 73 65 74 21 0a 00 90                              set!...

0000f208 <remote_usbhid_iface>:
    f208:	04 00 00 00 10 f2 00 00                             ........

0000f210 <remote_usbhid_iface_ops>:
    f210:	c0 c7 00 00 50 c6 00 00 00 c6 00 00 a0 c4 00 00     ....P...........

0000f220 <remote_clock_dev_iface>:
    f220:	02 00 00 00 28 f2 00 00                             ....(...

0000f228 <remote_clock_dev_iface_ops>:
    f228:	40 cc 00 00 a0 cb 00 00                             @.......

0000f230 <remote_led_dev_iface>:
    f230:	01 00 00 00 38 f2 00 00                             ....8...

0000f238 <remote_led_dev_iface_ops>:
    f238:	10 cd 00 00                                         ....

0000f23c <remote_battery_dev_iface>:
    f23c:	02 00 00 00 44 f2 00 00                             ....D...

0000f244 <remote_battery_dev_iface_ops>:
    f244:	d0 cd 00 00 60 cd 00 00 61 68 63 69 5f 00 66 90     ....`...ahci_.f.

0000f254 <remote_ahci_iface>:
    f254:	05 00 00 00 5c f2 00 00                             ....\...

0000f25c <remote_ahci_iface_ops>:
    f25c:	e0 d0 00 00 70 d0 00 00 00 d0 00 00 80 cf 00 00     ....p...........
    f26c:	00 cf 00 00                                         ....

Disassembly of section .plt:

0000f4f0 <__main@plt-0x10>:
    f4f0:	ff 35 04 18 01 00    	pushl  0x11804
    f4f6:	ff 25 08 18 01 00    	jmp    *0x11808
    f4fc:	00 00                	add    %al,(%eax)
	...

0000f500 <__main@plt>:
    f500:	ff 25 0c 18 01 00    	jmp    *0x1180c
    f506:	68 00 00 00 00       	push   $0x0
    f50b:	e9 e0 ff ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f510 <loc_category_get_id@plt>:
    f510:	ff 25 10 18 01 00    	jmp    *0x11810
    f516:	68 08 00 00 00       	push   $0x8
    f51b:	e9 d0 ff ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f520 <devman_device_connect@plt>:
    f520:	ff 25 14 18 01 00    	jmp    *0x11814
    f526:	68 10 00 00 00       	push   $0x10
    f52b:	e9 c0 ff ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f530 <task_retval@plt>:
    f530:	ff 25 18 18 01 00    	jmp    *0x11818
    f536:	68 18 00 00 00       	push   $0x18
    f53b:	e9 b0 ff ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f540 <loc_service_connect@plt>:
    f540:	ff 25 1c 18 01 00    	jmp    *0x1181c
    f546:	68 20 00 00 00       	push   $0x20
    f54b:	e9 a0 ff ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f550 <inetcfg_sroute_get@plt>:
    f550:	ff 25 20 18 01 00    	jmp    *0x11820
    f556:	68 28 00 00 00       	push   $0x28
    f55b:	e9 90 ff ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f560 <printf@plt>:
    f560:	ff 25 24 18 01 00    	jmp    *0x11824
    f566:	68 30 00 00 00       	push   $0x30
    f56b:	e9 80 ff ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f570 <async_hangup@plt>:
    f570:	ff 25 28 18 01 00    	jmp    *0x11828
    f576:	68 38 00 00 00       	push   $0x38
    f57b:	e9 70 ff ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f580 <async_wait_for@plt>:
    f580:	ff 25 2c 18 01 00    	jmp    *0x1182c
    f586:	68 40 00 00 00       	push   $0x40
    f58b:	e9 60 ff ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f590 <inetcfg_addr_get@plt>:
    f590:	ff 25 30 18 01 00    	jmp    *0x11830
    f596:	68 48 00 00 00       	push   $0x48
    f59b:	e9 50 ff ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f5a0 <devman_parent_device_connect@plt>:
    f5a0:	ff 25 34 18 01 00    	jmp    *0x11834
    f5a6:	68 50 00 00 00       	push   $0x50
    f5ab:	e9 40 ff ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f5b0 <log_init@plt>:
    f5b0:	ff 25 38 18 01 00    	jmp    *0x11838
    f5b6:	68 58 00 00 00       	push   $0x58
    f5bb:	e9 30 ff ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f5c0 <async_data_write_start@plt>:
    f5c0:	ff 25 3c 18 01 00    	jmp    *0x1183c
    f5c6:	68 60 00 00 00       	push   $0x60
    f5cb:	e9 20 ff ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f5d0 <fibril_mutex_is_locked@plt>:
    f5d0:	ff 25 40 18 01 00    	jmp    *0x11840
    f5d6:	68 68 00 00 00       	push   $0x68
    f5db:	e9 10 ff ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f5e0 <devman_drv_fun_online@plt>:
    f5e0:	ff 25 44 18 01 00    	jmp    *0x11844
    f5e6:	68 70 00 00 00       	push   $0x70
    f5eb:	e9 00 ff ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f5f0 <async_data_read_finalize@plt>:
    f5f0:	ff 25 48 18 01 00    	jmp    *0x11848
    f5f6:	68 78 00 00 00       	push   $0x78
    f5fb:	e9 f0 fe ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f600 <async_share_in_start@plt>:
    f600:	ff 25 4c 18 01 00    	jmp    *0x1184c
    f606:	68 80 00 00 00       	push   $0x80
    f60b:	e9 e0 fe ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f610 <memcpy@plt>:
    f610:	ff 25 50 18 01 00    	jmp    *0x11850
    f616:	68 88 00 00 00       	push   $0x88
    f61b:	e9 d0 fe ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f620 <malloc@plt>:
    f620:	ff 25 54 18 01 00    	jmp    *0x11854
    f626:	68 90 00 00 00       	push   $0x90
    f62b:	e9 c0 fe ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f630 <devman_add_device_to_category@plt>:
    f630:	ff 25 58 18 01 00    	jmp    *0x11858
    f636:	68 98 00 00 00       	push   $0x98
    f63b:	e9 b0 fe ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f640 <async_share_out_receive@plt>:
    f640:	ff 25 5c 18 01 00    	jmp    *0x1185c
    f646:	68 a0 00 00 00       	push   $0xa0
    f64b:	e9 a0 fe ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f650 <async_req_fast@plt>:
    f650:	ff 25 60 18 01 00    	jmp    *0x11860
    f656:	68 a8 00 00 00       	push   $0xa8
    f65b:	e9 90 fe ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f660 <async_answer_0@plt>:
    f660:	ff 25 64 18 01 00    	jmp    *0x11864
    f666:	68 b0 00 00 00       	push   $0xb0
    f66b:	e9 80 fe ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f670 <async_send_fast@plt>:
    f670:	ff 25 68 18 01 00    	jmp    *0x11868
    f676:	68 b8 00 00 00       	push   $0xb8
    f67b:	e9 70 fe ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f680 <log_msg@plt>:
    f680:	ff 25 6c 18 01 00    	jmp    *0x1186c
    f686:	68 c0 00 00 00       	push   $0xc0
    f68b:	e9 60 fe ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f690 <async_data_read@plt>:
    f690:	ff 25 70 18 01 00    	jmp    *0x11870
    f696:	68 c8 00 00 00       	push   $0xc8
    f69b:	e9 50 fe ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f6a0 <log_msgv@plt>:
    f6a0:	ff 25 74 18 01 00    	jmp    *0x11874
    f6a6:	68 d0 00 00 00       	push   $0xd0
    f6ab:	e9 40 fe ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f6b0 <devman_add_function@plt>:
    f6b0:	ff 25 78 18 01 00    	jmp    *0x11878
    f6b6:	68 d8 00 00 00       	push   $0xd8
    f6bb:	e9 30 fe ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f6c0 <async_exchange_end@plt>:
    f6c0:	ff 25 7c 18 01 00    	jmp    *0x1187c
    f6c6:	68 e0 00 00 00       	push   $0xe0
    f6cb:	e9 20 fe ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f6d0 <assert_abort@plt>:
    f6d0:	ff 25 80 18 01 00    	jmp    *0x11880
    f6d6:	68 e8 00 00 00       	push   $0xe8
    f6db:	e9 10 fe ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f6e0 <inetcfg_get_sroute_list@plt>:
    f6e0:	ff 25 84 18 01 00    	jmp    *0x11884
    f6e6:	68 f0 00 00 00       	push   $0xf0
    f6eb:	e9 00 fe ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f6f0 <calloc@plt>:
    f6f0:	ff 25 88 18 01 00    	jmp    *0x11888
    f6f6:	68 f8 00 00 00       	push   $0xf8
    f6fb:	e9 f0 fd ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f700 <inetcfg_addr_delete@plt>:
    f700:	ff 25 8c 18 01 00    	jmp    *0x1188c
    f706:	68 00 01 00 00       	push   $0x100
    f70b:	e9 e0 fd ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f710 <devman_remove_function@plt>:
    f710:	ff 25 90 18 01 00    	jmp    *0x11890
    f716:	68 08 01 00 00       	push   $0x108
    f71b:	e9 d0 fd ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f720 <async_share_out_finalize@plt>:
    f720:	ff 25 94 18 01 00    	jmp    *0x11894
    f726:	68 10 01 00 00       	push   $0x110
    f72b:	e9 c0 fd ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f730 <str_test_prefix@plt>:
    f730:	ff 25 98 18 01 00    	jmp    *0x11898
    f736:	68 18 01 00 00       	push   $0x118
    f73b:	e9 b0 fd ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f740 <async_answer_2@plt>:
    f740:	ff 25 9c 18 01 00    	jmp    *0x1189c
    f746:	68 20 01 00 00       	push   $0x120
    f74b:	e9 a0 fd ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f750 <fibril_mutex_unlock@plt>:
    f750:	ff 25 a0 18 01 00    	jmp    *0x118a0
    f756:	68 28 01 00 00       	push   $0x128
    f75b:	e9 90 fd ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f760 <async_callback_receive_start@plt>:
    f760:	ff 25 a4 18 01 00    	jmp    *0x118a4
    f766:	68 30 01 00 00       	push   $0x130
    f76b:	e9 80 fd ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f770 <str_dup@plt>:
    f770:	ff 25 a8 18 01 00    	jmp    *0x118a8
    f776:	68 38 01 00 00       	push   $0x138
    f77b:	e9 70 fd ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f780 <async_answer_4@plt>:
    f780:	ff 25 ac 18 01 00    	jmp    *0x118ac
    f786:	68 40 01 00 00       	push   $0x140
    f78b:	e9 60 fd ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f790 <inetcfg_get_addr_list@plt>:
    f790:	ff 25 b0 18 01 00    	jmp    *0x118b0
    f796:	68 48 01 00 00       	push   $0x148
    f79b:	e9 50 fd ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f7a0 <async_send_slow@plt>:
    f7a0:	ff 25 b4 18 01 00    	jmp    *0x118b4
    f7a6:	68 50 01 00 00       	push   $0x150
    f7ab:	e9 40 fd ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f7b0 <inetcfg_link_get@plt>:
    f7b0:	ff 25 b8 18 01 00    	jmp    *0x118b8
    f7b6:	68 58 01 00 00       	push   $0x158
    f7bb:	e9 30 fd ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f7c0 <devman_drv_fun_offline@plt>:
    f7c0:	ff 25 bc 18 01 00    	jmp    *0x118bc
    f7c6:	68 60 01 00 00       	push   $0x160
    f7cb:	e9 20 fd ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f7d0 <async_create_callback_port@plt>:
    f7d0:	ff 25 c0 18 01 00    	jmp    *0x118c0
    f7d6:	68 68 01 00 00       	push   $0x168
    f7db:	e9 10 fd ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f7e0 <dhcp_discover@plt>:
    f7e0:	ff 25 c4 18 01 00    	jmp    *0x118c4
    f7e6:	68 70 01 00 00       	push   $0x170
    f7eb:	e9 00 fd ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f7f0 <devman_driver_register@plt>:
    f7f0:	ff 25 c8 18 01 00    	jmp    *0x118c8
    f7f6:	68 78 01 00 00       	push   $0x178
    f7fb:	e9 f0 fc ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f800 <memset@plt>:
    f800:	ff 25 cc 18 01 00    	jmp    *0x118cc
    f806:	68 80 01 00 00       	push   $0x180
    f80b:	e9 e0 fc ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f810 <async_data_read_receive@plt>:
    f810:	ff 25 d0 18 01 00    	jmp    *0x118d0
    f816:	68 88 01 00 00       	push   $0x188
    f81b:	e9 d0 fc ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f820 <async_data_read_start@plt>:
    f820:	ff 25 d4 18 01 00    	jmp    *0x118d4
    f826:	68 90 01 00 00       	push   $0x190
    f82b:	e9 c0 fc ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f830 <wstr_to_astr@plt>:
    f830:	ff 25 d8 18 01 00    	jmp    *0x118d8
    f836:	68 98 01 00 00       	push   $0x198
    f83b:	e9 b0 fc ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f840 <async_share_in_receive@plt>:
    f840:	ff 25 dc 18 01 00    	jmp    *0x118dc
    f846:	68 a0 01 00 00       	push   $0x1a0
    f84b:	e9 a0 fc ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f850 <inetcfg_sroute_delete@plt>:
    f850:	ff 25 e0 18 01 00    	jmp    *0x118e0
    f856:	68 a8 01 00 00       	push   $0x1a8
    f85b:	e9 90 fc ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f860 <loc_category_get_svcs@plt>:
    f860:	ff 25 e4 18 01 00    	jmp    *0x118e4
    f866:	68 b0 01 00 00       	push   $0x1b0
    f86b:	e9 80 fc ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f870 <async_get_call_timeout@plt>:
    f870:	ff 25 e8 18 01 00    	jmp    *0x118e8
    f876:	68 b8 01 00 00       	push   $0x1b8
    f87b:	e9 70 fc ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f880 <str_size@plt>:
    f880:	ff 25 ec 18 01 00    	jmp    *0x118ec
    f886:	68 c0 01 00 00       	push   $0x1c0
    f88b:	e9 60 fc ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f890 <str_lcmp@plt>:
    f890:	ff 25 f0 18 01 00    	jmp    *0x118f0
    f896:	68 c8 01 00 00       	push   $0x1c8
    f89b:	e9 50 fc ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f8a0 <async_answer_1@plt>:
    f8a0:	ff 25 f4 18 01 00    	jmp    *0x118f4
    f8a6:	68 d0 01 00 00       	push   $0x1d0
    f8ab:	e9 40 fc ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f8b0 <async_exchange_begin@plt>:
    f8b0:	ff 25 f8 18 01 00    	jmp    *0x118f8
    f8b6:	68 d8 01 00 00       	push   $0x1d8
    f8bb:	e9 30 fc ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f8c0 <str_error@plt>:
    f8c0:	ff 25 fc 18 01 00    	jmp    *0x118fc
    f8c6:	68 e0 01 00 00       	push   $0x1e0
    f8cb:	e9 20 fc ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f8d0 <devman_fun_get_handle@plt>:
    f8d0:	ff 25 00 19 01 00    	jmp    *0x11900
    f8d6:	68 e8 01 00 00       	push   $0x1e8
    f8db:	e9 10 fc ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f8e0 <async_share_in_finalize@plt>:
    f8e0:	ff 25 04 19 01 00    	jmp    *0x11904
    f8e6:	68 f0 01 00 00       	push   $0x1f0
    f8eb:	e9 00 fc ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f8f0 <async_answer_3@plt>:
    f8f0:	ff 25 08 19 01 00    	jmp    *0x11908
    f8f6:	68 f8 01 00 00       	push   $0x1f8
    f8fb:	e9 f0 fb ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f900 <async_share_out_start@plt>:
    f900:	ff 25 0c 19 01 00    	jmp    *0x1190c
    f906:	68 00 02 00 00       	push   $0x200
    f90b:	e9 e0 fb ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f910 <async_create_port@plt>:
    f910:	ff 25 10 19 01 00    	jmp    *0x11910
    f916:	68 08 02 00 00       	push   $0x208
    f91b:	e9 d0 fb ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f920 <async_data_write_finalize@plt>:
    f920:	ff 25 14 19 01 00    	jmp    *0x11914
    f926:	68 10 02 00 00       	push   $0x210
    f92b:	e9 c0 fb ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f930 <async_data_write_accept@plt>:
    f930:	ff 25 18 19 01 00    	jmp    *0x11918
    f936:	68 18 02 00 00       	push   $0x218
    f93b:	e9 b0 fb ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f940 <async_forget@plt>:
    f940:	ff 25 1c 19 01 00    	jmp    *0x1191c
    f946:	68 20 02 00 00       	push   $0x220
    f94b:	e9 a0 fb ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f950 <fibril_switch@plt>:
    f950:	ff 25 20 19 01 00    	jmp    *0x11920
    f956:	68 28 02 00 00       	push   $0x228
    f95b:	e9 90 fb ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f960 <inetcfg_get_link_list@plt>:
    f960:	ff 25 24 19 01 00    	jmp    *0x11924
    f966:	68 30 02 00 00       	push   $0x230
    f96b:	e9 80 fb ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f970 <__syscall_fast@plt>:
    f970:	ff 25 28 19 01 00    	jmp    *0x11928
    f976:	68 38 02 00 00       	push   $0x238
    f97b:	e9 70 fb ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f980 <async_set_fallback_port_handler@plt>:
    f980:	ff 25 2c 19 01 00    	jmp    *0x1192c
    f986:	68 40 02 00 00       	push   $0x240
    f98b:	e9 60 fb ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f990 <async_data_write_receive@plt>:
    f990:	ff 25 30 19 01 00    	jmp    *0x11930
    f996:	68 48 02 00 00       	push   $0x248
    f99b:	e9 50 fb ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f9a0 <free@plt>:
    f9a0:	ff 25 34 19 01 00    	jmp    *0x11934
    f9a6:	68 50 02 00 00       	push   $0x250
    f9ab:	e9 40 fb ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f9b0 <devman_fun_get_name@plt>:
    f9b0:	ff 25 38 19 01 00    	jmp    *0x11938
    f9b6:	68 58 02 00 00       	push   $0x258
    f9bb:	e9 30 fb ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>

0000f9c0 <fibril_mutex_lock@plt>:
    f9c0:	ff 25 3c 19 01 00    	jmp    *0x1193c
    f9c6:	68 60 02 00 00       	push   $0x260
    f9cb:	e9 20 fb ff ff       	jmp    f4f0 <remote_ahci_iface_ops+0x294>
