
pciintel:     file format elf32-i386


Disassembly of section .init:

000010f4 <__entry>:
    10f4:	66 8c d0             	mov    %ss,%ax
    10f7:	8e d8                	mov    %eax,%ds
    10f9:	8e c0                	mov    %eax,%es
    10fb:	8e e0                	mov    %eax,%fs
    10fd:	b8 01 00 00 00       	mov    $0x1,%eax
    1102:	0f a2                	cpuid  
    1104:	0f ba e2 0b          	bt     $0xb,%edx
    1108:	73 0c                	jae    1116 <__entry+0x22>
    110a:	8d 05 a0 19 01 00    	lea    0x119a0,%eax
    1110:	c7 00 30 f8 00 00    	movl   $0xf830,(%eax)
    1116:	6a 00                	push   $0x0
    1118:	6a 00                	push   $0x0
    111a:	89 e5                	mov    %esp,%ebp
    111c:	57                   	push   %edi
    111d:	e8 2e e2 00 00       	call   f350 <__main@plt>

Disassembly of section .text:

00001140 <pciintel_get_pio_window>:
    1140:	55                   	push   %ebp
    1141:	89 e5                	mov    %esp,%ebp
    1143:	83 ec 14             	sub    $0x14,%esp
    1146:	8b 45 08             	mov    0x8(%ebp),%eax
    1149:	50                   	push   %eax
    114a:	e8 51 3a 00 00       	call   4ba0 <ddf_fun_data_get>
    114f:	83 c4 10             	add    $0x10,%esp
    1152:	85 c0                	test   %eax,%eax
    1154:	74 0a                	je     1160 <pciintel_get_pio_window+0x20>
    1156:	05 18 01 00 00       	add    $0x118,%eax
    115b:	c9                   	leave  
    115c:	c3                   	ret    
    115d:	8d 76 00             	lea    0x0(%esi),%esi
    1160:	31 c0                	xor    %eax,%eax
    1162:	c9                   	leave  
    1163:	c3                   	ret    
    1164:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    116a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00001170 <pciintel_get_resources>:
    1170:	55                   	push   %ebp
    1171:	89 e5                	mov    %esp,%ebp
    1173:	83 ec 14             	sub    $0x14,%esp
    1176:	8b 45 08             	mov    0x8(%ebp),%eax
    1179:	50                   	push   %eax
    117a:	e8 21 3a 00 00       	call   4ba0 <ddf_fun_data_get>
    117f:	83 c4 10             	add    $0x10,%esp
    1182:	85 c0                	test   %eax,%eax
    1184:	74 0a                	je     1190 <pciintel_get_resources+0x20>
    1186:	83 c0 20             	add    $0x20,%eax
    1189:	c9                   	leave  
    118a:	c3                   	ret    
    118b:	90                   	nop
    118c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1190:	31 c0                	xor    %eax,%eax
    1192:	c9                   	leave  
    1193:	c3                   	ret    
    1194:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    119a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000011a0 <pci_fun_offline>:
    11a0:	55                   	push   %ebp
    11a1:	89 e5                	mov    %esp,%ebp
    11a3:	53                   	push   %ebx
    11a4:	83 ec 0c             	sub    $0xc,%esp
    11a7:	8b 5d 08             	mov    0x8(%ebp),%ebx
    11aa:	68 0f d1 00 00       	push   $0xd10f
    11af:	6a 04                	push   $0x4
    11b1:	e8 4a 40 00 00       	call   5200 <ddf_msg>
    11b6:	89 5d 08             	mov    %ebx,0x8(%ebp)
    11b9:	83 c4 10             	add    $0x10,%esp
    11bc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    11bf:	c9                   	leave  
    11c0:	e9 2b 3d 00 00       	jmp    4ef0 <ddf_fun_offline>
    11c5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    11c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000011d0 <pci_fun_online>:
    11d0:	55                   	push   %ebp
    11d1:	89 e5                	mov    %esp,%ebp
    11d3:	53                   	push   %ebx
    11d4:	83 ec 0c             	sub    $0xc,%esp
    11d7:	8b 5d 08             	mov    0x8(%ebp),%ebx
    11da:	68 21 d1 00 00       	push   $0xd121
    11df:	6a 04                	push   $0x4
    11e1:	e8 1a 40 00 00       	call   5200 <ddf_msg>
    11e6:	89 5d 08             	mov    %ebx,0x8(%ebp)
    11e9:	83 c4 10             	add    $0x10,%esp
    11ec:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    11ef:	c9                   	leave  
    11f0:	e9 cb 3c 00 00       	jmp    4ec0 <ddf_fun_online>
    11f5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    11f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00001200 <pciintel_enable_interrupt>:
    1200:	55                   	push   %ebp
    1201:	89 e5                	mov    %esp,%ebp
    1203:	56                   	push   %esi
    1204:	53                   	push   %ebx
    1205:	8b 45 08             	mov    0x8(%ebp),%eax
    1208:	85 c0                	test   %eax,%eax
    120a:	74 5d                	je     1269 <pciintel_enable_interrupt+0x69>
    120c:	83 ec 0c             	sub    $0xc,%esp
    120f:	31 db                	xor    %ebx,%ebx
    1211:	50                   	push   %eax
    1212:	e8 89 39 00 00       	call   4ba0 <ddf_fun_data_get>
    1217:	83 c4 10             	add    $0x10,%esp
    121a:	89 c6                	mov    %eax,%esi
    121c:	8b 50 20             	mov    0x20(%eax),%edx
    121f:	85 d2                	test   %edx,%edx
    1221:	75 0a                	jne    122d <pciintel_enable_interrupt+0x2d>
    1223:	eb 32                	jmp    1257 <pciintel_enable_interrupt+0x57>
    1225:	8d 76 00             	lea    0x0(%esi),%esi
    1228:	43                   	inc    %ebx
    1229:	39 d3                	cmp    %edx,%ebx
    122b:	73 2a                	jae    1257 <pciintel_enable_interrupt+0x57>
    122d:	8b 4e 24             	mov    0x24(%esi),%ecx
    1230:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    1233:	8d 04 c1             	lea    (%ecx,%eax,8),%eax
    1236:	8b 08                	mov    (%eax),%ecx
    1238:	85 c9                	test   %ecx,%ecx
    123a:	75 ec                	jne    1228 <pciintel_enable_interrupt+0x28>
    123c:	83 ec 0c             	sub    $0xc,%esp
    123f:	8b 40 04             	mov    0x4(%eax),%eax
    1242:	50                   	push   %eax
    1243:	e8 f8 e1 00 00       	call   f440 <irc_enable_interrupt@plt>
    1248:	83 c4 10             	add    $0x10,%esp
    124b:	85 c0                	test   %eax,%eax
    124d:	75 11                	jne    1260 <pciintel_enable_interrupt+0x60>
    124f:	8b 56 20             	mov    0x20(%esi),%edx
    1252:	43                   	inc    %ebx
    1253:	39 d3                	cmp    %edx,%ebx
    1255:	72 d6                	jb     122d <pciintel_enable_interrupt+0x2d>
    1257:	8d 65 f8             	lea    -0x8(%ebp),%esp
    125a:	b0 01                	mov    $0x1,%al
    125c:	5b                   	pop    %ebx
    125d:	5e                   	pop    %esi
    125e:	5d                   	pop    %ebp
    125f:	c3                   	ret    
    1260:	8d 65 f8             	lea    -0x8(%ebp),%esp
    1263:	31 c0                	xor    %eax,%eax
    1265:	5b                   	pop    %ebx
    1266:	5e                   	pop    %esi
    1267:	5d                   	pop    %ebp
    1268:	c3                   	ret    
    1269:	53                   	push   %ebx
    126a:	6a 68                	push   $0x68
    126c:	68 97 ef 00 00       	push   $0xef97
    1271:	68 32 d1 00 00       	push   $0xd132
    1276:	e8 e5 e2 00 00       	call   f560 <assert_abort@plt>
    127b:	90                   	nop
    127c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00001280 <config_space_write_32>:
    1280:	55                   	push   %ebp
    1281:	89 e5                	mov    %esp,%ebp
    1283:	57                   	push   %edi
    1284:	56                   	push   %esi
    1285:	53                   	push   %ebx
    1286:	83 ec 0c             	sub    $0xc,%esp
    1289:	81 7d 0c fc 00 00 00 	cmpl   $0xfc,0xc(%ebp)
    1290:	0f 87 92 00 00 00    	ja     1328 <config_space_write_32+0xa8>
    1296:	83 ec 0c             	sub    $0xc,%esp
    1299:	8b 45 08             	mov    0x8(%ebp),%eax
    129c:	50                   	push   %eax
    129d:	e8 fe 38 00 00       	call   4ba0 <ddf_fun_data_get>
    12a2:	8b 58 08             	mov    0x8(%eax),%ebx
    12a5:	8b 50 0c             	mov    0xc(%eax),%edx
    12a8:	c1 e2 0b             	shl    $0xb,%edx
    12ab:	8b 30                	mov    (%eax),%esi
    12ad:	c1 e3 10             	shl    $0x10,%ebx
    12b0:	09 d3                	or     %edx,%ebx
    12b2:	8b 55 0c             	mov    0xc(%ebp),%edx
    12b5:	83 e2 fc             	and    $0xfffffffc,%edx
    12b8:	8d 7e 20             	lea    0x20(%esi),%edi
    12bb:	09 d3                	or     %edx,%ebx
    12bd:	8b 50 10             	mov    0x10(%eax),%edx
    12c0:	c1 e2 08             	shl    $0x8,%edx
    12c3:	89 3c 24             	mov    %edi,(%esp)
    12c6:	09 d3                	or     %edx,%ebx
    12c8:	e8 b3 e5 00 00       	call   f880 <fibril_mutex_lock@plt>
    12cd:	8b 46 04             	mov    0x4(%esi),%eax
    12d0:	83 c4 10             	add    $0x10,%esp
    12d3:	85 c0                	test   %eax,%eax
    12d5:	74 39                	je     1310 <config_space_write_32+0x90>
    12d7:	81 cb 00 00 00 80    	or     $0x80000000,%ebx
    12dd:	52                   	push   %edx
    12de:	52                   	push   %edx
    12df:	53                   	push   %ebx
    12e0:	50                   	push   %eax
    12e1:	e8 7a e3 00 00       	call   f660 <pio_write_32@plt>
    12e6:	8b 45 10             	mov    0x10(%ebp),%eax
    12e9:	59                   	pop    %ecx
    12ea:	5b                   	pop    %ebx
    12eb:	50                   	push   %eax
    12ec:	8b 46 08             	mov    0x8(%esi),%eax
    12ef:	50                   	push   %eax
    12f0:	e8 6b e3 00 00       	call   f660 <pio_write_32@plt>
    12f5:	83 c4 10             	add    $0x10,%esp
    12f8:	83 ec 0c             	sub    $0xc,%esp
    12fb:	57                   	push   %edi
    12fc:	e8 ef e2 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    1301:	83 c4 10             	add    $0x10,%esp
    1304:	31 c0                	xor    %eax,%eax
    1306:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1309:	5b                   	pop    %ebx
    130a:	5e                   	pop    %esi
    130b:	5f                   	pop    %edi
    130c:	5d                   	pop    %ebp
    130d:	c3                   	ret    
    130e:	66 90                	xchg   %ax,%ax
    1310:	50                   	push   %eax
    1311:	50                   	push   %eax
    1312:	8b 4e 0c             	mov    0xc(%esi),%ecx
    1315:	8b 55 10             	mov    0x10(%ebp),%edx
    1318:	01 cb                	add    %ecx,%ebx
    131a:	52                   	push   %edx
    131b:	53                   	push   %ebx
    131c:	e8 3f e3 00 00       	call   f660 <pio_write_32@plt>
    1321:	83 c4 10             	add    $0x10,%esp
    1324:	eb d2                	jmp    12f8 <config_space_write_32+0x78>
    1326:	66 90                	xchg   %ax,%ax
    1328:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    132d:	eb d7                	jmp    1306 <config_space_write_32+0x86>
    132f:	90                   	nop

00001330 <config_space_read_16>:
    1330:	55                   	push   %ebp
    1331:	89 e5                	mov    %esp,%ebp
    1333:	57                   	push   %edi
    1334:	56                   	push   %esi
    1335:	53                   	push   %ebx
    1336:	83 ec 0c             	sub    $0xc,%esp
    1339:	81 7d 0c fe 00 00 00 	cmpl   $0xfe,0xc(%ebp)
    1340:	0f 87 a2 00 00 00    	ja     13e8 <config_space_read_16+0xb8>
    1346:	83 ec 0c             	sub    $0xc,%esp
    1349:	8b 7d 08             	mov    0x8(%ebp),%edi
    134c:	57                   	push   %edi
    134d:	e8 4e 38 00 00       	call   4ba0 <ddf_fun_data_get>
    1352:	8b 58 08             	mov    0x8(%eax),%ebx
    1355:	8b 50 0c             	mov    0xc(%eax),%edx
    1358:	c1 e2 0b             	shl    $0xb,%edx
    135b:	8b 30                	mov    (%eax),%esi
    135d:	c1 e3 10             	shl    $0x10,%ebx
    1360:	09 d3                	or     %edx,%ebx
    1362:	8b 55 0c             	mov    0xc(%ebp),%edx
    1365:	83 e2 fc             	and    $0xfffffffc,%edx
    1368:	8d 7e 20             	lea    0x20(%esi),%edi
    136b:	09 d3                	or     %edx,%ebx
    136d:	8b 50 10             	mov    0x10(%eax),%edx
    1370:	c1 e2 08             	shl    $0x8,%edx
    1373:	89 3c 24             	mov    %edi,(%esp)
    1376:	09 d3                	or     %edx,%ebx
    1378:	e8 03 e5 00 00       	call   f880 <fibril_mutex_lock@plt>
    137d:	8b 56 04             	mov    0x4(%esi),%edx
    1380:	83 c4 10             	add    $0x10,%esp
    1383:	85 d2                	test   %edx,%edx
    1385:	74 49                	je     13d0 <config_space_read_16+0xa0>
    1387:	81 cb 00 00 00 80    	or     $0x80000000,%ebx
    138d:	51                   	push   %ecx
    138e:	51                   	push   %ecx
    138f:	53                   	push   %ebx
    1390:	52                   	push   %edx
    1391:	e8 ca e2 00 00       	call   f660 <pio_write_32@plt>
    1396:	8b 76 08             	mov    0x8(%esi),%esi
    1399:	5b                   	pop    %ebx
    139a:	56                   	push   %esi
    139b:	e8 10 e1 00 00       	call   f4b0 <pio_read_32@plt>
    13a0:	83 c4 10             	add    $0x10,%esp
    13a3:	89 c3                	mov    %eax,%ebx
    13a5:	83 ec 0c             	sub    $0xc,%esp
    13a8:	57                   	push   %edi
    13a9:	e8 42 e2 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    13ae:	8b 75 0c             	mov    0xc(%ebp),%esi
    13b1:	8b 45 10             	mov    0x10(%ebp),%eax
    13b4:	83 e6 03             	and    $0x3,%esi
    13b7:	83 c4 10             	add    $0x10,%esp
    13ba:	8d 0c f5 00 00 00 00 	lea    0x0(,%esi,8),%ecx
    13c1:	d3 eb                	shr    %cl,%ebx
    13c3:	66 89 18             	mov    %bx,(%eax)
    13c6:	31 c0                	xor    %eax,%eax
    13c8:	8d 65 f4             	lea    -0xc(%ebp),%esp
    13cb:	5b                   	pop    %ebx
    13cc:	5e                   	pop    %esi
    13cd:	5f                   	pop    %edi
    13ce:	5d                   	pop    %ebp
    13cf:	c3                   	ret    
    13d0:	83 ec 0c             	sub    $0xc,%esp
    13d3:	8b 46 0c             	mov    0xc(%esi),%eax
    13d6:	01 c3                	add    %eax,%ebx
    13d8:	53                   	push   %ebx
    13d9:	e8 d2 e0 00 00       	call   f4b0 <pio_read_32@plt>
    13de:	83 c4 10             	add    $0x10,%esp
    13e1:	89 c3                	mov    %eax,%ebx
    13e3:	eb c0                	jmp    13a5 <config_space_read_16+0x75>
    13e5:	8d 76 00             	lea    0x0(%esi),%esi
    13e8:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    13ed:	eb d9                	jmp    13c8 <config_space_read_16+0x98>
    13ef:	90                   	nop

000013f0 <config_space_read_32>:
    13f0:	55                   	push   %ebp
    13f1:	89 e5                	mov    %esp,%ebp
    13f3:	57                   	push   %edi
    13f4:	56                   	push   %esi
    13f5:	53                   	push   %ebx
    13f6:	83 ec 0c             	sub    $0xc,%esp
    13f9:	81 7d 0c fc 00 00 00 	cmpl   $0xfc,0xc(%ebp)
    1400:	0f 87 92 00 00 00    	ja     1498 <config_space_read_32+0xa8>
    1406:	83 ec 0c             	sub    $0xc,%esp
    1409:	8b 75 08             	mov    0x8(%ebp),%esi
    140c:	56                   	push   %esi
    140d:	e8 8e 37 00 00       	call   4ba0 <ddf_fun_data_get>
    1412:	8b 58 08             	mov    0x8(%eax),%ebx
    1415:	8b 50 0c             	mov    0xc(%eax),%edx
    1418:	c1 e2 0b             	shl    $0xb,%edx
    141b:	8b 30                	mov    (%eax),%esi
    141d:	c1 e3 10             	shl    $0x10,%ebx
    1420:	09 d3                	or     %edx,%ebx
    1422:	8b 55 0c             	mov    0xc(%ebp),%edx
    1425:	83 e2 fc             	and    $0xfffffffc,%edx
    1428:	8d 7e 20             	lea    0x20(%esi),%edi
    142b:	09 d3                	or     %edx,%ebx
    142d:	8b 50 10             	mov    0x10(%eax),%edx
    1430:	c1 e2 08             	shl    $0x8,%edx
    1433:	89 3c 24             	mov    %edi,(%esp)
    1436:	09 d3                	or     %edx,%ebx
    1438:	e8 43 e4 00 00       	call   f880 <fibril_mutex_lock@plt>
    143d:	8b 46 04             	mov    0x4(%esi),%eax
    1440:	83 c4 10             	add    $0x10,%esp
    1443:	85 c0                	test   %eax,%eax
    1445:	74 39                	je     1480 <config_space_read_32+0x90>
    1447:	81 cb 00 00 00 80    	or     $0x80000000,%ebx
    144d:	52                   	push   %edx
    144e:	52                   	push   %edx
    144f:	53                   	push   %ebx
    1450:	50                   	push   %eax
    1451:	e8 0a e2 00 00       	call   f660 <pio_write_32@plt>
    1456:	8b 5e 08             	mov    0x8(%esi),%ebx
    1459:	59                   	pop    %ecx
    145a:	53                   	push   %ebx
    145b:	e8 50 e0 00 00       	call   f4b0 <pio_read_32@plt>
    1460:	83 c4 10             	add    $0x10,%esp
    1463:	89 c3                	mov    %eax,%ebx
    1465:	83 ec 0c             	sub    $0xc,%esp
    1468:	57                   	push   %edi
    1469:	e8 82 e1 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    146e:	8b 55 10             	mov    0x10(%ebp),%edx
    1471:	83 c4 10             	add    $0x10,%esp
    1474:	31 c0                	xor    %eax,%eax
    1476:	89 1a                	mov    %ebx,(%edx)
    1478:	8d 65 f4             	lea    -0xc(%ebp),%esp
    147b:	5b                   	pop    %ebx
    147c:	5e                   	pop    %esi
    147d:	5f                   	pop    %edi
    147e:	5d                   	pop    %ebp
    147f:	c3                   	ret    
    1480:	83 ec 0c             	sub    $0xc,%esp
    1483:	8b 46 0c             	mov    0xc(%esi),%eax
    1486:	01 c3                	add    %eax,%ebx
    1488:	53                   	push   %ebx
    1489:	e8 22 e0 00 00       	call   f4b0 <pio_read_32@plt>
    148e:	83 c4 10             	add    $0x10,%esp
    1491:	89 c3                	mov    %eax,%ebx
    1493:	eb d0                	jmp    1465 <config_space_read_32+0x75>
    1495:	8d 76 00             	lea    0x0(%esi),%esi
    1498:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    149d:	eb d9                	jmp    1478 <config_space_read_32+0x88>
    149f:	90                   	nop

000014a0 <config_space_write_16>:
    14a0:	55                   	push   %ebp
    14a1:	89 e5                	mov    %esp,%ebp
    14a3:	57                   	push   %edi
    14a4:	56                   	push   %esi
    14a5:	53                   	push   %ebx
    14a6:	83 ec 1c             	sub    $0x1c,%esp
    14a9:	8b 45 10             	mov    0x10(%ebp),%eax
    14ac:	89 45 e0             	mov    %eax,-0x20(%ebp)
    14af:	81 7d 0c fe 00 00 00 	cmpl   $0xfe,0xc(%ebp)
    14b6:	0f 87 04 01 00 00    	ja     15c0 <config_space_write_16+0x120>
    14bc:	83 ec 0c             	sub    $0xc,%esp
    14bf:	8b 75 08             	mov    0x8(%ebp),%esi
    14c2:	56                   	push   %esi
    14c3:	e8 d8 36 00 00       	call   4ba0 <ddf_fun_data_get>
    14c8:	8b 50 08             	mov    0x8(%eax),%edx
    14cb:	8b 48 0c             	mov    0xc(%eax),%ecx
    14ce:	c1 e1 0b             	shl    $0xb,%ecx
    14d1:	8b 30                	mov    (%eax),%esi
    14d3:	c1 e2 10             	shl    $0x10,%edx
    14d6:	09 ca                	or     %ecx,%edx
    14d8:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    14db:	83 e1 fc             	and    $0xfffffffc,%ecx
    14de:	8d 7e 20             	lea    0x20(%esi),%edi
    14e1:	09 ca                	or     %ecx,%edx
    14e3:	8b 48 10             	mov    0x10(%eax),%ecx
    14e6:	c1 e1 08             	shl    $0x8,%ecx
    14e9:	89 3c 24             	mov    %edi,(%esp)
    14ec:	09 ca                	or     %ecx,%edx
    14ee:	89 d3                	mov    %edx,%ebx
    14f0:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    14f3:	e8 88 e3 00 00       	call   f880 <fibril_mutex_lock@plt>
    14f8:	8b 46 04             	mov    0x4(%esi),%eax
    14fb:	83 c4 10             	add    $0x10,%esp
    14fe:	85 c0                	test   %eax,%eax
    1500:	0f 84 9a 00 00 00    	je     15a0 <config_space_write_16+0x100>
    1506:	52                   	push   %edx
    1507:	52                   	push   %edx
    1508:	89 da                	mov    %ebx,%edx
    150a:	81 ca 00 00 00 80    	or     $0x80000000,%edx
    1510:	52                   	push   %edx
    1511:	50                   	push   %eax
    1512:	e8 49 e1 00 00       	call   f660 <pio_write_32@plt>
    1517:	8b 5e 08             	mov    0x8(%esi),%ebx
    151a:	59                   	pop    %ecx
    151b:	53                   	push   %ebx
    151c:	e8 8f df 00 00       	call   f4b0 <pio_read_32@plt>
    1521:	83 c4 10             	add    $0x10,%esp
    1524:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    1527:	ba ff ff 00 00       	mov    $0xffff,%edx
    152c:	83 e1 03             	and    $0x3,%ecx
    152f:	31 db                	xor    %ebx,%ebx
    1531:	c1 e1 03             	shl    $0x3,%ecx
    1534:	66 8b 5d e0          	mov    -0x20(%ebp),%bx
    1538:	d3 e2                	shl    %cl,%edx
    153a:	83 f2 ff             	xor    $0xffffffff,%edx
    153d:	21 d0                	and    %edx,%eax
    153f:	d3 e3                	shl    %cl,%ebx
    1541:	09 c3                	or     %eax,%ebx
    1543:	8b 46 04             	mov    0x4(%esi),%eax
    1546:	85 c0                	test   %eax,%eax
    1548:	74 3e                	je     1588 <config_space_write_16+0xe8>
    154a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    154d:	51                   	push   %ecx
    154e:	81 ca 00 00 00 80    	or     $0x80000000,%edx
    1554:	51                   	push   %ecx
    1555:	52                   	push   %edx
    1556:	50                   	push   %eax
    1557:	e8 04 e1 00 00       	call   f660 <pio_write_32@plt>
    155c:	8b 4e 08             	mov    0x8(%esi),%ecx
    155f:	58                   	pop    %eax
    1560:	5a                   	pop    %edx
    1561:	53                   	push   %ebx
    1562:	51                   	push   %ecx
    1563:	e8 f8 e0 00 00       	call   f660 <pio_write_32@plt>
    1568:	83 c4 10             	add    $0x10,%esp
    156b:	83 ec 0c             	sub    $0xc,%esp
    156e:	57                   	push   %edi
    156f:	e8 7c e0 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    1574:	83 c4 10             	add    $0x10,%esp
    1577:	31 c0                	xor    %eax,%eax
    1579:	8d 65 f4             	lea    -0xc(%ebp),%esp
    157c:	5b                   	pop    %ebx
    157d:	5e                   	pop    %esi
    157e:	5f                   	pop    %edi
    157f:	5d                   	pop    %ebp
    1580:	c3                   	ret    
    1581:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1588:	50                   	push   %eax
    1589:	50                   	push   %eax
    158a:	8b 56 0c             	mov    0xc(%esi),%edx
    158d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    1590:	01 d0                	add    %edx,%eax
    1592:	53                   	push   %ebx
    1593:	50                   	push   %eax
    1594:	e8 c7 e0 00 00       	call   f660 <pio_write_32@plt>
    1599:	83 c4 10             	add    $0x10,%esp
    159c:	eb cd                	jmp    156b <config_space_write_16+0xcb>
    159e:	66 90                	xchg   %ax,%ax
    15a0:	83 ec 0c             	sub    $0xc,%esp
    15a3:	8b 5e 0c             	mov    0xc(%esi),%ebx
    15a6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    15a9:	01 d8                	add    %ebx,%eax
    15ab:	50                   	push   %eax
    15ac:	e8 ff de 00 00       	call   f4b0 <pio_read_32@plt>
    15b1:	83 c4 10             	add    $0x10,%esp
    15b4:	e9 6b ff ff ff       	jmp    1524 <config_space_write_16+0x84>
    15b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    15c0:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    15c5:	eb b2                	jmp    1579 <config_space_write_16+0xd9>
    15c7:	89 f6                	mov    %esi,%esi
    15c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000015d0 <config_space_write_8>:
    15d0:	55                   	push   %ebp
    15d1:	89 e5                	mov    %esp,%ebp
    15d3:	57                   	push   %edi
    15d4:	56                   	push   %esi
    15d5:	53                   	push   %ebx
    15d6:	83 ec 1c             	sub    $0x1c,%esp
    15d9:	8b 45 10             	mov    0x10(%ebp),%eax
    15dc:	89 45 e0             	mov    %eax,-0x20(%ebp)
    15df:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
    15e6:	0f 87 fc 00 00 00    	ja     16e8 <config_space_write_8+0x118>
    15ec:	83 ec 0c             	sub    $0xc,%esp
    15ef:	8b 75 08             	mov    0x8(%ebp),%esi
    15f2:	56                   	push   %esi
    15f3:	e8 a8 35 00 00       	call   4ba0 <ddf_fun_data_get>
    15f8:	8b 50 08             	mov    0x8(%eax),%edx
    15fb:	8b 48 0c             	mov    0xc(%eax),%ecx
    15fe:	c1 e1 0b             	shl    $0xb,%ecx
    1601:	8b 30                	mov    (%eax),%esi
    1603:	c1 e2 10             	shl    $0x10,%edx
    1606:	09 ca                	or     %ecx,%edx
    1608:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    160b:	83 e1 fc             	and    $0xfffffffc,%ecx
    160e:	8d 7e 20             	lea    0x20(%esi),%edi
    1611:	09 ca                	or     %ecx,%edx
    1613:	8b 48 10             	mov    0x10(%eax),%ecx
    1616:	c1 e1 08             	shl    $0x8,%ecx
    1619:	89 3c 24             	mov    %edi,(%esp)
    161c:	09 ca                	or     %ecx,%edx
    161e:	89 d3                	mov    %edx,%ebx
    1620:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    1623:	e8 58 e2 00 00       	call   f880 <fibril_mutex_lock@plt>
    1628:	8b 46 04             	mov    0x4(%esi),%eax
    162b:	83 c4 10             	add    $0x10,%esp
    162e:	85 c0                	test   %eax,%eax
    1630:	0f 84 92 00 00 00    	je     16c8 <config_space_write_8+0xf8>
    1636:	52                   	push   %edx
    1637:	52                   	push   %edx
    1638:	89 da                	mov    %ebx,%edx
    163a:	81 ca 00 00 00 80    	or     $0x80000000,%edx
    1640:	52                   	push   %edx
    1641:	50                   	push   %eax
    1642:	e8 19 e0 00 00       	call   f660 <pio_write_32@plt>
    1647:	8b 5e 08             	mov    0x8(%esi),%ebx
    164a:	59                   	pop    %ecx
    164b:	53                   	push   %ebx
    164c:	e8 5f de 00 00       	call   f4b0 <pio_read_32@plt>
    1651:	83 c4 10             	add    $0x10,%esp
    1654:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    1657:	ba ff 00 00 00       	mov    $0xff,%edx
    165c:	83 e1 03             	and    $0x3,%ecx
    165f:	31 db                	xor    %ebx,%ebx
    1661:	c1 e1 03             	shl    $0x3,%ecx
    1664:	8a 5d e0             	mov    -0x20(%ebp),%bl
    1667:	d3 e2                	shl    %cl,%edx
    1669:	83 f2 ff             	xor    $0xffffffff,%edx
    166c:	21 d0                	and    %edx,%eax
    166e:	d3 e3                	shl    %cl,%ebx
    1670:	09 c3                	or     %eax,%ebx
    1672:	8b 46 04             	mov    0x4(%esi),%eax
    1675:	85 c0                	test   %eax,%eax
    1677:	74 37                	je     16b0 <config_space_write_8+0xe0>
    1679:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    167c:	51                   	push   %ecx
    167d:	81 ca 00 00 00 80    	or     $0x80000000,%edx
    1683:	51                   	push   %ecx
    1684:	52                   	push   %edx
    1685:	50                   	push   %eax
    1686:	e8 d5 df 00 00       	call   f660 <pio_write_32@plt>
    168b:	8b 4e 08             	mov    0x8(%esi),%ecx
    168e:	58                   	pop    %eax
    168f:	5a                   	pop    %edx
    1690:	53                   	push   %ebx
    1691:	51                   	push   %ecx
    1692:	e8 c9 df 00 00       	call   f660 <pio_write_32@plt>
    1697:	83 c4 10             	add    $0x10,%esp
    169a:	83 ec 0c             	sub    $0xc,%esp
    169d:	57                   	push   %edi
    169e:	e8 4d df 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    16a3:	83 c4 10             	add    $0x10,%esp
    16a6:	31 c0                	xor    %eax,%eax
    16a8:	8d 65 f4             	lea    -0xc(%ebp),%esp
    16ab:	5b                   	pop    %ebx
    16ac:	5e                   	pop    %esi
    16ad:	5f                   	pop    %edi
    16ae:	5d                   	pop    %ebp
    16af:	c3                   	ret    
    16b0:	50                   	push   %eax
    16b1:	50                   	push   %eax
    16b2:	8b 56 0c             	mov    0xc(%esi),%edx
    16b5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    16b8:	01 d0                	add    %edx,%eax
    16ba:	53                   	push   %ebx
    16bb:	50                   	push   %eax
    16bc:	e8 9f df 00 00       	call   f660 <pio_write_32@plt>
    16c1:	83 c4 10             	add    $0x10,%esp
    16c4:	eb d4                	jmp    169a <config_space_write_8+0xca>
    16c6:	66 90                	xchg   %ax,%ax
    16c8:	83 ec 0c             	sub    $0xc,%esp
    16cb:	8b 5e 0c             	mov    0xc(%esi),%ebx
    16ce:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    16d1:	01 d8                	add    %ebx,%eax
    16d3:	50                   	push   %eax
    16d4:	e8 d7 dd 00 00       	call   f4b0 <pio_read_32@plt>
    16d9:	83 c4 10             	add    $0x10,%esp
    16dc:	e9 73 ff ff ff       	jmp    1654 <config_space_write_8+0x84>
    16e1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    16e8:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    16ed:	eb b9                	jmp    16a8 <config_space_write_8+0xd8>
    16ef:	90                   	nop

000016f0 <config_space_read_8>:
    16f0:	55                   	push   %ebp
    16f1:	89 e5                	mov    %esp,%ebp
    16f3:	57                   	push   %edi
    16f4:	56                   	push   %esi
    16f5:	53                   	push   %ebx
    16f6:	83 ec 0c             	sub    $0xc,%esp
    16f9:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
    1700:	0f 87 a2 00 00 00    	ja     17a8 <config_space_read_8+0xb8>
    1706:	83 ec 0c             	sub    $0xc,%esp
    1709:	8b 7d 08             	mov    0x8(%ebp),%edi
    170c:	57                   	push   %edi
    170d:	e8 8e 34 00 00       	call   4ba0 <ddf_fun_data_get>
    1712:	8b 58 08             	mov    0x8(%eax),%ebx
    1715:	8b 50 0c             	mov    0xc(%eax),%edx
    1718:	c1 e2 0b             	shl    $0xb,%edx
    171b:	8b 30                	mov    (%eax),%esi
    171d:	c1 e3 10             	shl    $0x10,%ebx
    1720:	09 d3                	or     %edx,%ebx
    1722:	8b 55 0c             	mov    0xc(%ebp),%edx
    1725:	83 e2 fc             	and    $0xfffffffc,%edx
    1728:	8d 7e 20             	lea    0x20(%esi),%edi
    172b:	09 d3                	or     %edx,%ebx
    172d:	8b 50 10             	mov    0x10(%eax),%edx
    1730:	c1 e2 08             	shl    $0x8,%edx
    1733:	89 3c 24             	mov    %edi,(%esp)
    1736:	09 d3                	or     %edx,%ebx
    1738:	e8 43 e1 00 00       	call   f880 <fibril_mutex_lock@plt>
    173d:	8b 56 04             	mov    0x4(%esi),%edx
    1740:	83 c4 10             	add    $0x10,%esp
    1743:	85 d2                	test   %edx,%edx
    1745:	74 49                	je     1790 <config_space_read_8+0xa0>
    1747:	81 cb 00 00 00 80    	or     $0x80000000,%ebx
    174d:	51                   	push   %ecx
    174e:	51                   	push   %ecx
    174f:	53                   	push   %ebx
    1750:	52                   	push   %edx
    1751:	e8 0a df 00 00       	call   f660 <pio_write_32@plt>
    1756:	8b 76 08             	mov    0x8(%esi),%esi
    1759:	5b                   	pop    %ebx
    175a:	56                   	push   %esi
    175b:	e8 50 dd 00 00       	call   f4b0 <pio_read_32@plt>
    1760:	83 c4 10             	add    $0x10,%esp
    1763:	89 c3                	mov    %eax,%ebx
    1765:	83 ec 0c             	sub    $0xc,%esp
    1768:	57                   	push   %edi
    1769:	e8 82 de 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    176e:	8b 75 0c             	mov    0xc(%ebp),%esi
    1771:	8b 45 10             	mov    0x10(%ebp),%eax
    1774:	83 e6 03             	and    $0x3,%esi
    1777:	83 c4 10             	add    $0x10,%esp
    177a:	8d 0c f5 00 00 00 00 	lea    0x0(,%esi,8),%ecx
    1781:	d3 eb                	shr    %cl,%ebx
    1783:	88 18                	mov    %bl,(%eax)
    1785:	31 c0                	xor    %eax,%eax
    1787:	8d 65 f4             	lea    -0xc(%ebp),%esp
    178a:	5b                   	pop    %ebx
    178b:	5e                   	pop    %esi
    178c:	5f                   	pop    %edi
    178d:	5d                   	pop    %ebp
    178e:	c3                   	ret    
    178f:	90                   	nop
    1790:	83 ec 0c             	sub    $0xc,%esp
    1793:	8b 46 0c             	mov    0xc(%esi),%eax
    1796:	01 c3                	add    %eax,%ebx
    1798:	53                   	push   %ebx
    1799:	e8 12 dd 00 00       	call   f4b0 <pio_read_32@plt>
    179e:	83 c4 10             	add    $0x10,%esp
    17a1:	89 c3                	mov    %eax,%ebx
    17a3:	eb c0                	jmp    1765 <config_space_read_8+0x75>
    17a5:	8d 76 00             	lea    0x0(%esi),%esi
    17a8:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    17ad:	eb d8                	jmp    1787 <config_space_read_8+0x97>
    17af:	90                   	nop

000017b0 <pci_conf_read_8>:
    17b0:	55                   	push   %ebp
    17b1:	89 e5                	mov    %esp,%ebp
    17b3:	57                   	push   %edi
    17b4:	56                   	push   %esi
    17b5:	53                   	push   %ebx
    17b6:	83 ec 28             	sub    $0x28,%esp
    17b9:	8b 55 08             	mov    0x8(%ebp),%edx
    17bc:	8b 42 08             	mov    0x8(%edx),%eax
    17bf:	8b 4a 0c             	mov    0xc(%edx),%ecx
    17c2:	c1 e1 0b             	shl    $0xb,%ecx
    17c5:	8b 3a                	mov    (%edx),%edi
    17c7:	c1 e0 10             	shl    $0x10,%eax
    17ca:	8b 5a 10             	mov    0x10(%edx),%ebx
    17cd:	09 c8                	or     %ecx,%eax
    17cf:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    17d2:	83 e1 fc             	and    $0xfffffffc,%ecx
    17d5:	8d 77 20             	lea    0x20(%edi),%esi
    17d8:	09 c8                	or     %ecx,%eax
    17da:	56                   	push   %esi
    17db:	c1 e3 08             	shl    $0x8,%ebx
    17de:	09 c3                	or     %eax,%ebx
    17e0:	e8 9b e0 00 00       	call   f880 <fibril_mutex_lock@plt>
    17e5:	8b 57 04             	mov    0x4(%edi),%edx
    17e8:	83 c4 10             	add    $0x10,%esp
    17eb:	85 d2                	test   %edx,%edx
    17ed:	74 41                	je     1830 <pci_conf_read_8+0x80>
    17ef:	50                   	push   %eax
    17f0:	50                   	push   %eax
    17f1:	89 d8                	mov    %ebx,%eax
    17f3:	0d 00 00 00 80       	or     $0x80000000,%eax
    17f8:	50                   	push   %eax
    17f9:	52                   	push   %edx
    17fa:	e8 61 de 00 00       	call   f660 <pio_write_32@plt>
    17ff:	8b 4f 08             	mov    0x8(%edi),%ecx
    1802:	5a                   	pop    %edx
    1803:	51                   	push   %ecx
    1804:	e8 a7 dc 00 00       	call   f4b0 <pio_read_32@plt>
    1809:	83 c4 10             	add    $0x10,%esp
    180c:	83 ec 0c             	sub    $0xc,%esp
    180f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    1812:	56                   	push   %esi
    1813:	e8 d8 dd 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    1818:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    181b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    181e:	83 e1 03             	and    $0x3,%ecx
    1821:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1824:	c1 e1 03             	shl    $0x3,%ecx
    1827:	5b                   	pop    %ebx
    1828:	5e                   	pop    %esi
    1829:	d3 e8                	shr    %cl,%eax
    182b:	5f                   	pop    %edi
    182c:	5d                   	pop    %ebp
    182d:	c3                   	ret    
    182e:	66 90                	xchg   %ax,%ax
    1830:	83 ec 0c             	sub    $0xc,%esp
    1833:	8b 47 0c             	mov    0xc(%edi),%eax
    1836:	01 d8                	add    %ebx,%eax
    1838:	50                   	push   %eax
    1839:	e8 72 dc 00 00       	call   f4b0 <pio_read_32@plt>
    183e:	83 c4 10             	add    $0x10,%esp
    1841:	eb c9                	jmp    180c <pci_conf_read_8+0x5c>
    1843:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1849:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00001850 <pci_conf_read_16>:
    1850:	55                   	push   %ebp
    1851:	89 e5                	mov    %esp,%ebp
    1853:	57                   	push   %edi
    1854:	56                   	push   %esi
    1855:	53                   	push   %ebx
    1856:	83 ec 28             	sub    $0x28,%esp
    1859:	8b 55 08             	mov    0x8(%ebp),%edx
    185c:	8b 42 08             	mov    0x8(%edx),%eax
    185f:	8b 4a 0c             	mov    0xc(%edx),%ecx
    1862:	c1 e1 0b             	shl    $0xb,%ecx
    1865:	8b 3a                	mov    (%edx),%edi
    1867:	c1 e0 10             	shl    $0x10,%eax
    186a:	8b 5a 10             	mov    0x10(%edx),%ebx
    186d:	09 c8                	or     %ecx,%eax
    186f:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    1872:	83 e1 fc             	and    $0xfffffffc,%ecx
    1875:	8d 77 20             	lea    0x20(%edi),%esi
    1878:	09 c8                	or     %ecx,%eax
    187a:	56                   	push   %esi
    187b:	c1 e3 08             	shl    $0x8,%ebx
    187e:	09 c3                	or     %eax,%ebx
    1880:	e8 fb df 00 00       	call   f880 <fibril_mutex_lock@plt>
    1885:	8b 57 04             	mov    0x4(%edi),%edx
    1888:	83 c4 10             	add    $0x10,%esp
    188b:	85 d2                	test   %edx,%edx
    188d:	74 41                	je     18d0 <pci_conf_read_16+0x80>
    188f:	50                   	push   %eax
    1890:	50                   	push   %eax
    1891:	89 d8                	mov    %ebx,%eax
    1893:	0d 00 00 00 80       	or     $0x80000000,%eax
    1898:	50                   	push   %eax
    1899:	52                   	push   %edx
    189a:	e8 c1 dd 00 00       	call   f660 <pio_write_32@plt>
    189f:	8b 4f 08             	mov    0x8(%edi),%ecx
    18a2:	5a                   	pop    %edx
    18a3:	51                   	push   %ecx
    18a4:	e8 07 dc 00 00       	call   f4b0 <pio_read_32@plt>
    18a9:	83 c4 10             	add    $0x10,%esp
    18ac:	83 ec 0c             	sub    $0xc,%esp
    18af:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    18b2:	56                   	push   %esi
    18b3:	e8 38 dd 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    18b8:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    18bb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    18be:	83 e1 03             	and    $0x3,%ecx
    18c1:	8d 65 f4             	lea    -0xc(%ebp),%esp
    18c4:	c1 e1 03             	shl    $0x3,%ecx
    18c7:	5b                   	pop    %ebx
    18c8:	5e                   	pop    %esi
    18c9:	d3 e8                	shr    %cl,%eax
    18cb:	5f                   	pop    %edi
    18cc:	5d                   	pop    %ebp
    18cd:	c3                   	ret    
    18ce:	66 90                	xchg   %ax,%ax
    18d0:	83 ec 0c             	sub    $0xc,%esp
    18d3:	8b 47 0c             	mov    0xc(%edi),%eax
    18d6:	01 d8                	add    %ebx,%eax
    18d8:	50                   	push   %eax
    18d9:	e8 d2 db 00 00       	call   f4b0 <pio_read_32@plt>
    18de:	83 c4 10             	add    $0x10,%esp
    18e1:	eb c9                	jmp    18ac <pci_conf_read_16+0x5c>
    18e3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    18e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000018f0 <pci_conf_read_32>:
    18f0:	55                   	push   %ebp
    18f1:	89 e5                	mov    %esp,%ebp
    18f3:	57                   	push   %edi
    18f4:	56                   	push   %esi
    18f5:	53                   	push   %ebx
    18f6:	83 ec 28             	sub    $0x28,%esp
    18f9:	8b 55 08             	mov    0x8(%ebp),%edx
    18fc:	8b 42 08             	mov    0x8(%edx),%eax
    18ff:	8b 4a 0c             	mov    0xc(%edx),%ecx
    1902:	c1 e1 0b             	shl    $0xb,%ecx
    1905:	8b 32                	mov    (%edx),%esi
    1907:	c1 e0 10             	shl    $0x10,%eax
    190a:	8b 5a 10             	mov    0x10(%edx),%ebx
    190d:	09 c8                	or     %ecx,%eax
    190f:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    1912:	83 e1 fc             	and    $0xfffffffc,%ecx
    1915:	8d 7e 20             	lea    0x20(%esi),%edi
    1918:	09 c8                	or     %ecx,%eax
    191a:	57                   	push   %edi
    191b:	c1 e3 08             	shl    $0x8,%ebx
    191e:	09 c3                	or     %eax,%ebx
    1920:	e8 5b df 00 00       	call   f880 <fibril_mutex_lock@plt>
    1925:	8b 56 04             	mov    0x4(%esi),%edx
    1928:	83 c4 10             	add    $0x10,%esp
    192b:	85 d2                	test   %edx,%edx
    192d:	74 39                	je     1968 <pci_conf_read_32+0x78>
    192f:	50                   	push   %eax
    1930:	50                   	push   %eax
    1931:	89 d8                	mov    %ebx,%eax
    1933:	0d 00 00 00 80       	or     $0x80000000,%eax
    1938:	50                   	push   %eax
    1939:	52                   	push   %edx
    193a:	e8 21 dd 00 00       	call   f660 <pio_write_32@plt>
    193f:	8b 4e 08             	mov    0x8(%esi),%ecx
    1942:	5a                   	pop    %edx
    1943:	51                   	push   %ecx
    1944:	e8 67 db 00 00       	call   f4b0 <pio_read_32@plt>
    1949:	83 c4 10             	add    $0x10,%esp
    194c:	83 ec 0c             	sub    $0xc,%esp
    194f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    1952:	57                   	push   %edi
    1953:	e8 98 dc 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    1958:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    195b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    195e:	5b                   	pop    %ebx
    195f:	5e                   	pop    %esi
    1960:	5f                   	pop    %edi
    1961:	5d                   	pop    %ebp
    1962:	c3                   	ret    
    1963:	90                   	nop
    1964:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1968:	83 ec 0c             	sub    $0xc,%esp
    196b:	8b 46 0c             	mov    0xc(%esi),%eax
    196e:	01 d8                	add    %ebx,%eax
    1970:	50                   	push   %eax
    1971:	e8 3a db 00 00       	call   f4b0 <pio_read_32@plt>
    1976:	83 c4 10             	add    $0x10,%esp
    1979:	eb d1                	jmp    194c <pci_conf_read_32+0x5c>
    197b:	90                   	nop
    197c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00001980 <pci_conf_write_8>:
    1980:	55                   	push   %ebp
    1981:	89 e5                	mov    %esp,%ebp
    1983:	57                   	push   %edi
    1984:	56                   	push   %esi
    1985:	53                   	push   %ebx
    1986:	83 ec 28             	sub    $0x28,%esp
    1989:	8b 55 08             	mov    0x8(%ebp),%edx
    198c:	8b 45 10             	mov    0x10(%ebp),%eax
    198f:	89 45 e0             	mov    %eax,-0x20(%ebp)
    1992:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    1995:	8b 42 08             	mov    0x8(%edx),%eax
    1998:	8b 4a 0c             	mov    0xc(%edx),%ecx
    199b:	c1 e1 0b             	shl    $0xb,%ecx
    199e:	8b 32                	mov    (%edx),%esi
    19a0:	c1 e0 10             	shl    $0x10,%eax
    19a3:	09 c8                	or     %ecx,%eax
    19a5:	89 d9                	mov    %ebx,%ecx
    19a7:	83 e1 fc             	and    $0xfffffffc,%ecx
    19aa:	8d 7e 20             	lea    0x20(%esi),%edi
    19ad:	09 c8                	or     %ecx,%eax
    19af:	8b 4a 10             	mov    0x10(%edx),%ecx
    19b2:	c1 e1 08             	shl    $0x8,%ecx
    19b5:	57                   	push   %edi
    19b6:	09 c8                	or     %ecx,%eax
    19b8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    19bb:	e8 c0 de 00 00       	call   f880 <fibril_mutex_lock@plt>
    19c0:	8b 46 04             	mov    0x4(%esi),%eax
    19c3:	83 c4 10             	add    $0x10,%esp
    19c6:	85 c0                	test   %eax,%eax
    19c8:	0f 84 a2 00 00 00    	je     1a70 <pci_conf_write_8+0xf0>
    19ce:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    19d1:	51                   	push   %ecx
    19d2:	81 ca 00 00 00 80    	or     $0x80000000,%edx
    19d8:	51                   	push   %ecx
    19d9:	52                   	push   %edx
    19da:	50                   	push   %eax
    19db:	e8 80 dc 00 00       	call   f660 <pio_write_32@plt>
    19e0:	58                   	pop    %eax
    19e1:	8b 46 08             	mov    0x8(%esi),%eax
    19e4:	50                   	push   %eax
    19e5:	e8 c6 da 00 00       	call   f4b0 <pio_read_32@plt>
    19ea:	83 c4 10             	add    $0x10,%esp
    19ed:	83 e3 03             	and    $0x3,%ebx
    19f0:	ba ff 00 00 00       	mov    $0xff,%edx
    19f5:	8d 0c dd 00 00 00 00 	lea    0x0(,%ebx,8),%ecx
    19fc:	d3 e2                	shl    %cl,%edx
    19fe:	89 d3                	mov    %edx,%ebx
    1a00:	83 f3 ff             	xor    $0xffffffff,%ebx
    1a03:	21 d8                	and    %ebx,%eax
    1a05:	31 db                	xor    %ebx,%ebx
    1a07:	8a 5d e0             	mov    -0x20(%ebp),%bl
    1a0a:	d3 e3                	shl    %cl,%ebx
    1a0c:	09 c3                	or     %eax,%ebx
    1a0e:	8b 46 04             	mov    0x4(%esi),%eax
    1a11:	85 c0                	test   %eax,%eax
    1a13:	74 33                	je     1a48 <pci_conf_write_8+0xc8>
    1a15:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    1a18:	51                   	push   %ecx
    1a19:	81 ca 00 00 00 80    	or     $0x80000000,%edx
    1a1f:	51                   	push   %ecx
    1a20:	52                   	push   %edx
    1a21:	50                   	push   %eax
    1a22:	e8 39 dc 00 00       	call   f660 <pio_write_32@plt>
    1a27:	58                   	pop    %eax
    1a28:	5a                   	pop    %edx
    1a29:	53                   	push   %ebx
    1a2a:	8b 4e 08             	mov    0x8(%esi),%ecx
    1a2d:	51                   	push   %ecx
    1a2e:	e8 2d dc 00 00       	call   f660 <pio_write_32@plt>
    1a33:	89 7d 08             	mov    %edi,0x8(%ebp)
    1a36:	83 c4 10             	add    $0x10,%esp
    1a39:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1a3c:	5b                   	pop    %ebx
    1a3d:	5e                   	pop    %esi
    1a3e:	5f                   	pop    %edi
    1a3f:	5d                   	pop    %ebp
    1a40:	e9 ab db 00 00       	jmp    f5f0 <fibril_mutex_unlock@plt>
    1a45:	8d 76 00             	lea    0x0(%esi),%esi
    1a48:	50                   	push   %eax
    1a49:	50                   	push   %eax
    1a4a:	53                   	push   %ebx
    1a4b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    1a4e:	8b 56 0c             	mov    0xc(%esi),%edx
    1a51:	01 d0                	add    %edx,%eax
    1a53:	50                   	push   %eax
    1a54:	e8 07 dc 00 00       	call   f660 <pio_write_32@plt>
    1a59:	89 7d 08             	mov    %edi,0x8(%ebp)
    1a5c:	83 c4 10             	add    $0x10,%esp
    1a5f:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1a62:	5b                   	pop    %ebx
    1a63:	5e                   	pop    %esi
    1a64:	5f                   	pop    %edi
    1a65:	5d                   	pop    %ebp
    1a66:	e9 85 db 00 00       	jmp    f5f0 <fibril_mutex_unlock@plt>
    1a6b:	90                   	nop
    1a6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1a70:	83 ec 0c             	sub    $0xc,%esp
    1a73:	8b 56 0c             	mov    0xc(%esi),%edx
    1a76:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    1a79:	01 d0                	add    %edx,%eax
    1a7b:	50                   	push   %eax
    1a7c:	e8 2f da 00 00       	call   f4b0 <pio_read_32@plt>
    1a81:	83 c4 10             	add    $0x10,%esp
    1a84:	e9 64 ff ff ff       	jmp    19ed <pci_conf_write_8+0x6d>
    1a89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001a90 <pci_conf_write_16>:
    1a90:	55                   	push   %ebp
    1a91:	89 e5                	mov    %esp,%ebp
    1a93:	57                   	push   %edi
    1a94:	56                   	push   %esi
    1a95:	53                   	push   %ebx
    1a96:	83 ec 28             	sub    $0x28,%esp
    1a99:	8b 55 08             	mov    0x8(%ebp),%edx
    1a9c:	8b 45 10             	mov    0x10(%ebp),%eax
    1a9f:	89 45 dc             	mov    %eax,-0x24(%ebp)
    1aa2:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    1aa5:	8b 42 08             	mov    0x8(%edx),%eax
    1aa8:	8b 4a 0c             	mov    0xc(%edx),%ecx
    1aab:	c1 e1 0b             	shl    $0xb,%ecx
    1aae:	8b 3a                	mov    (%edx),%edi
    1ab0:	c1 e0 10             	shl    $0x10,%eax
    1ab3:	09 c8                	or     %ecx,%eax
    1ab5:	89 d9                	mov    %ebx,%ecx
    1ab7:	83 e1 fc             	and    $0xfffffffc,%ecx
    1aba:	09 c8                	or     %ecx,%eax
    1abc:	8b 4a 10             	mov    0x10(%edx),%ecx
    1abf:	c1 e1 08             	shl    $0x8,%ecx
    1ac2:	09 c8                	or     %ecx,%eax
    1ac4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    1ac7:	89 c6                	mov    %eax,%esi
    1ac9:	8d 47 20             	lea    0x20(%edi),%eax
    1acc:	50                   	push   %eax
    1acd:	89 45 e0             	mov    %eax,-0x20(%ebp)
    1ad0:	e8 ab dd 00 00       	call   f880 <fibril_mutex_lock@plt>
    1ad5:	8b 47 04             	mov    0x4(%edi),%eax
    1ad8:	83 c4 10             	add    $0x10,%esp
    1adb:	85 c0                	test   %eax,%eax
    1add:	0f 84 95 00 00 00    	je     1b78 <pci_conf_write_16+0xe8>
    1ae3:	89 f2                	mov    %esi,%edx
    1ae5:	51                   	push   %ecx
    1ae6:	81 ca 00 00 00 80    	or     $0x80000000,%edx
    1aec:	51                   	push   %ecx
    1aed:	52                   	push   %edx
    1aee:	50                   	push   %eax
    1aef:	e8 6c db 00 00       	call   f660 <pio_write_32@plt>
    1af4:	8b 47 08             	mov    0x8(%edi),%eax
    1af7:	5e                   	pop    %esi
    1af8:	50                   	push   %eax
    1af9:	e8 b2 d9 00 00       	call   f4b0 <pio_read_32@plt>
    1afe:	83 c4 10             	add    $0x10,%esp
    1b01:	83 e3 03             	and    $0x3,%ebx
    1b04:	ba ff ff 00 00       	mov    $0xffff,%edx
    1b09:	31 f6                	xor    %esi,%esi
    1b0b:	8d 0c dd 00 00 00 00 	lea    0x0(,%ebx,8),%ecx
    1b12:	66 8b 75 dc          	mov    -0x24(%ebp),%si
    1b16:	d3 e2                	shl    %cl,%edx
    1b18:	83 f2 ff             	xor    $0xffffffff,%edx
    1b1b:	21 d0                	and    %edx,%eax
    1b1d:	d3 e6                	shl    %cl,%esi
    1b1f:	09 c6                	or     %eax,%esi
    1b21:	8b 47 04             	mov    0x4(%edi),%eax
    1b24:	85 c0                	test   %eax,%eax
    1b26:	74 38                	je     1b60 <pci_conf_write_16+0xd0>
    1b28:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    1b2b:	51                   	push   %ecx
    1b2c:	81 ca 00 00 00 80    	or     $0x80000000,%edx
    1b32:	51                   	push   %ecx
    1b33:	52                   	push   %edx
    1b34:	50                   	push   %eax
    1b35:	e8 26 db 00 00       	call   f660 <pio_write_32@plt>
    1b3a:	5b                   	pop    %ebx
    1b3b:	58                   	pop    %eax
    1b3c:	56                   	push   %esi
    1b3d:	8b 47 08             	mov    0x8(%edi),%eax
    1b40:	50                   	push   %eax
    1b41:	e8 1a db 00 00       	call   f660 <pio_write_32@plt>
    1b46:	83 c4 10             	add    $0x10,%esp
    1b49:	8b 45 e0             	mov    -0x20(%ebp),%eax
    1b4c:	89 45 08             	mov    %eax,0x8(%ebp)
    1b4f:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1b52:	5b                   	pop    %ebx
    1b53:	5e                   	pop    %esi
    1b54:	5f                   	pop    %edi
    1b55:	5d                   	pop    %ebp
    1b56:	e9 95 da 00 00       	jmp    f5f0 <fibril_mutex_unlock@plt>
    1b5b:	90                   	nop
    1b5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1b60:	50                   	push   %eax
    1b61:	50                   	push   %eax
    1b62:	56                   	push   %esi
    1b63:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    1b66:	8b 57 0c             	mov    0xc(%edi),%edx
    1b69:	01 d0                	add    %edx,%eax
    1b6b:	50                   	push   %eax
    1b6c:	e8 ef da 00 00       	call   f660 <pio_write_32@plt>
    1b71:	83 c4 10             	add    $0x10,%esp
    1b74:	eb d3                	jmp    1b49 <pci_conf_write_16+0xb9>
    1b76:	66 90                	xchg   %ax,%ax
    1b78:	83 ec 0c             	sub    $0xc,%esp
    1b7b:	8b 57 0c             	mov    0xc(%edi),%edx
    1b7e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    1b81:	01 d0                	add    %edx,%eax
    1b83:	50                   	push   %eax
    1b84:	e8 27 d9 00 00       	call   f4b0 <pio_read_32@plt>
    1b89:	83 c4 10             	add    $0x10,%esp
    1b8c:	e9 70 ff ff ff       	jmp    1b01 <pci_conf_write_16+0x71>
    1b91:	eb 0d                	jmp    1ba0 <pci_conf_write_32>
    1b93:	90                   	nop
    1b94:	90                   	nop
    1b95:	90                   	nop
    1b96:	90                   	nop
    1b97:	90                   	nop
    1b98:	90                   	nop
    1b99:	90                   	nop
    1b9a:	90                   	nop
    1b9b:	90                   	nop
    1b9c:	90                   	nop
    1b9d:	90                   	nop
    1b9e:	90                   	nop
    1b9f:	90                   	nop

00001ba0 <pci_conf_write_32>:
    1ba0:	55                   	push   %ebp
    1ba1:	89 e5                	mov    %esp,%ebp
    1ba3:	57                   	push   %edi
    1ba4:	56                   	push   %esi
    1ba5:	53                   	push   %ebx
    1ba6:	83 ec 28             	sub    $0x28,%esp
    1ba9:	8b 55 08             	mov    0x8(%ebp),%edx
    1bac:	8b 45 10             	mov    0x10(%ebp),%eax
    1baf:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    1bb2:	8b 4a 0c             	mov    0xc(%edx),%ecx
    1bb5:	8b 42 08             	mov    0x8(%edx),%eax
    1bb8:	c1 e1 0b             	shl    $0xb,%ecx
    1bbb:	8b 1a                	mov    (%edx),%ebx
    1bbd:	c1 e0 10             	shl    $0x10,%eax
    1bc0:	8b 72 10             	mov    0x10(%edx),%esi
    1bc3:	09 c8                	or     %ecx,%eax
    1bc5:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    1bc8:	83 e1 fc             	and    $0xfffffffc,%ecx
    1bcb:	8d 7b 20             	lea    0x20(%ebx),%edi
    1bce:	09 c8                	or     %ecx,%eax
    1bd0:	57                   	push   %edi
    1bd1:	c1 e6 08             	shl    $0x8,%esi
    1bd4:	09 c6                	or     %eax,%esi
    1bd6:	e8 a5 dc 00 00       	call   f880 <fibril_mutex_lock@plt>
    1bdb:	8b 4b 04             	mov    0x4(%ebx),%ecx
    1bde:	83 c4 10             	add    $0x10,%esp
    1be1:	85 c9                	test   %ecx,%ecx
    1be3:	74 33                	je     1c18 <pci_conf_write_32+0x78>
    1be5:	81 ce 00 00 00 80    	or     $0x80000000,%esi
    1beb:	50                   	push   %eax
    1bec:	50                   	push   %eax
    1bed:	56                   	push   %esi
    1bee:	51                   	push   %ecx
    1bef:	e8 6c da 00 00       	call   f660 <pio_write_32@plt>
    1bf4:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    1bf7:	58                   	pop    %eax
    1bf8:	5a                   	pop    %edx
    1bf9:	51                   	push   %ecx
    1bfa:	8b 5b 08             	mov    0x8(%ebx),%ebx
    1bfd:	53                   	push   %ebx
    1bfe:	e8 5d da 00 00       	call   f660 <pio_write_32@plt>
    1c03:	89 7d 08             	mov    %edi,0x8(%ebp)
    1c06:	83 c4 10             	add    $0x10,%esp
    1c09:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1c0c:	5b                   	pop    %ebx
    1c0d:	5e                   	pop    %esi
    1c0e:	5f                   	pop    %edi
    1c0f:	5d                   	pop    %ebp
    1c10:	e9 db d9 00 00       	jmp    f5f0 <fibril_mutex_unlock@plt>
    1c15:	8d 76 00             	lea    0x0(%esi),%esi
    1c18:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    1c1b:	50                   	push   %eax
    1c1c:	50                   	push   %eax
    1c1d:	52                   	push   %edx
    1c1e:	8b 43 0c             	mov    0xc(%ebx),%eax
    1c21:	01 f0                	add    %esi,%eax
    1c23:	50                   	push   %eax
    1c24:	e8 37 da 00 00       	call   f660 <pio_write_32@plt>
    1c29:	89 7d 08             	mov    %edi,0x8(%ebp)
    1c2c:	83 c4 10             	add    $0x10,%esp
    1c2f:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1c32:	5b                   	pop    %ebx
    1c33:	5e                   	pop    %esi
    1c34:	5f                   	pop    %edi
    1c35:	5d                   	pop    %ebp
    1c36:	e9 b5 d9 00 00       	jmp    f5f0 <fibril_mutex_unlock@plt>
    1c3b:	90                   	nop
    1c3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00001c40 <pci_fun_create_match_ids>:
    1c40:	55                   	push   %ebp
    1c41:	31 c0                	xor    %eax,%eax
    1c43:	89 e5                	mov    %esp,%ebp
    1c45:	56                   	push   %esi
    1c46:	53                   	push   %ebx
    1c47:	83 ec 4c             	sub    $0x4c,%esp
    1c4a:	8d 75 c6             	lea    -0x3a(%ebp),%esi
    1c4d:	8b 5d 08             	mov    0x8(%ebp),%ebx
    1c50:	66 8b 43 16          	mov    0x16(%ebx),%ax
    1c54:	50                   	push   %eax
    1c55:	31 c0                	xor    %eax,%eax
    1c57:	66 8b 43 14          	mov    0x14(%ebx),%ax
    1c5b:	50                   	push   %eax
    1c5c:	68 38 d1 00 00       	push   $0xd138
    1c61:	6a 32                	push   $0x32
    1c63:	56                   	push   %esi
    1c64:	e8 97 d7 00 00       	call   f400 <snprintf@plt>
    1c69:	83 c4 20             	add    $0x20,%esp
    1c6c:	85 c0                	test   %eax,%eax
    1c6e:	0f 88 d4 01 00 00    	js     1e48 <pci_fun_create_match_ids+0x208>
    1c74:	51                   	push   %ecx
    1c75:	6a 5a                	push   $0x5a
    1c77:	8b 43 04             	mov    0x4(%ebx),%eax
    1c7a:	56                   	push   %esi
    1c7b:	50                   	push   %eax
    1c7c:	e8 9f 32 00 00       	call   4f20 <ddf_fun_add_match_id>
    1c81:	83 c4 10             	add    $0x10,%esp
    1c84:	85 c0                	test   %eax,%eax
    1c86:	0f 85 94 01 00 00    	jne    1e20 <pci_fun_create_match_ids+0x1e0>
    1c8c:	31 c0                	xor    %eax,%eax
    1c8e:	52                   	push   %edx
    1c8f:	8a 43 1d             	mov    0x1d(%ebx),%al
    1c92:	50                   	push   %eax
    1c93:	31 c0                	xor    %eax,%eax
    1c95:	8a 43 1c             	mov    0x1c(%ebx),%al
    1c98:	50                   	push   %eax
    1c99:	31 c0                	xor    %eax,%eax
    1c9b:	8a 43 1b             	mov    0x1b(%ebx),%al
    1c9e:	50                   	push   %eax
    1c9f:	31 c0                	xor    %eax,%eax
    1ca1:	8a 43 1a             	mov    0x1a(%ebx),%al
    1ca4:	50                   	push   %eax
    1ca5:	68 00 d3 00 00       	push   $0xd300
    1caa:	6a 32                	push   $0x32
    1cac:	56                   	push   %esi
    1cad:	e8 4e d7 00 00       	call   f400 <snprintf@plt>
    1cb2:	83 c4 20             	add    $0x20,%esp
    1cb5:	85 c0                	test   %eax,%eax
    1cb7:	0f 88 b3 01 00 00    	js     1e70 <pci_fun_create_match_ids+0x230>
    1cbd:	50                   	push   %eax
    1cbe:	6a 46                	push   $0x46
    1cc0:	8b 43 04             	mov    0x4(%ebx),%eax
    1cc3:	56                   	push   %esi
    1cc4:	50                   	push   %eax
    1cc5:	e8 56 32 00 00       	call   4f20 <ddf_fun_add_match_id>
    1cca:	83 c4 10             	add    $0x10,%esp
    1ccd:	85 c0                	test   %eax,%eax
    1ccf:	0f 85 23 01 00 00    	jne    1df8 <pci_fun_create_match_ids+0x1b8>
    1cd5:	50                   	push   %eax
    1cd6:	50                   	push   %eax
    1cd7:	31 c0                	xor    %eax,%eax
    1cd9:	8a 43 1c             	mov    0x1c(%ebx),%al
    1cdc:	50                   	push   %eax
    1cdd:	31 c0                	xor    %eax,%eax
    1cdf:	8a 43 1b             	mov    0x1b(%ebx),%al
    1ce2:	50                   	push   %eax
    1ce3:	31 c0                	xor    %eax,%eax
    1ce5:	8a 43 1a             	mov    0x1a(%ebx),%al
    1ce8:	50                   	push   %eax
    1ce9:	68 38 d3 00 00       	push   $0xd338
    1cee:	6a 32                	push   $0x32
    1cf0:	56                   	push   %esi
    1cf1:	e8 0a d7 00 00       	call   f400 <snprintf@plt>
    1cf6:	83 c4 20             	add    $0x20,%esp
    1cf9:	85 c0                	test   %eax,%eax
    1cfb:	0f 88 97 01 00 00    	js     1e98 <pci_fun_create_match_ids+0x258>
    1d01:	50                   	push   %eax
    1d02:	6a 3c                	push   $0x3c
    1d04:	8b 43 04             	mov    0x4(%ebx),%eax
    1d07:	56                   	push   %esi
    1d08:	50                   	push   %eax
    1d09:	e8 12 32 00 00       	call   4f20 <ddf_fun_add_match_id>
    1d0e:	83 c4 10             	add    $0x10,%esp
    1d11:	85 c0                	test   %eax,%eax
    1d13:	0f 85 b7 00 00 00    	jne    1dd0 <pci_fun_create_match_ids+0x190>
    1d19:	83 ec 0c             	sub    $0xc,%esp
    1d1c:	31 c0                	xor    %eax,%eax
    1d1e:	8a 43 1b             	mov    0x1b(%ebx),%al
    1d21:	50                   	push   %eax
    1d22:	31 c0                	xor    %eax,%eax
    1d24:	8a 43 1a             	mov    0x1a(%ebx),%al
    1d27:	50                   	push   %eax
    1d28:	68 6b d1 00 00       	push   $0xd16b
    1d2d:	6a 32                	push   $0x32
    1d2f:	56                   	push   %esi
    1d30:	e8 cb d6 00 00       	call   f400 <snprintf@plt>
    1d35:	83 c4 20             	add    $0x20,%esp
    1d38:	85 c0                	test   %eax,%eax
    1d3a:	0f 88 80 01 00 00    	js     1ec0 <pci_fun_create_match_ids+0x280>
    1d40:	51                   	push   %ecx
    1d41:	6a 32                	push   $0x32
    1d43:	8b 43 04             	mov    0x4(%ebx),%eax
    1d46:	56                   	push   %esi
    1d47:	50                   	push   %eax
    1d48:	e8 d3 31 00 00       	call   4f20 <ddf_fun_add_match_id>
    1d4d:	83 c4 10             	add    $0x10,%esp
    1d50:	85 c0                	test   %eax,%eax
    1d52:	75 5c                	jne    1db0 <pci_fun_create_match_ids+0x170>
    1d54:	31 c0                	xor    %eax,%eax
    1d56:	8a 43 1a             	mov    0x1a(%ebx),%al
    1d59:	50                   	push   %eax
    1d5a:	68 88 d1 00 00       	push   $0xd188
    1d5f:	6a 32                	push   $0x32
    1d61:	56                   	push   %esi
    1d62:	e8 99 d6 00 00       	call   f400 <snprintf@plt>
    1d67:	83 c4 10             	add    $0x10,%esp
    1d6a:	85 c0                	test   %eax,%eax
    1d6c:	0f 88 76 01 00 00    	js     1ee8 <pci_fun_create_match_ids+0x2a8>
    1d72:	50                   	push   %eax
    1d73:	6a 28                	push   $0x28
    1d75:	8b 53 04             	mov    0x4(%ebx),%edx
    1d78:	56                   	push   %esi
    1d79:	52                   	push   %edx
    1d7a:	e8 a1 31 00 00       	call   4f20 <ddf_fun_add_match_id>
    1d7f:	83 c4 10             	add    $0x10,%esp
    1d82:	85 c0                	test   %eax,%eax
    1d84:	74 1c                	je     1da2 <pci_fun_create_match_ids+0x162>
    1d86:	83 ec 0c             	sub    $0xc,%esp
    1d89:	50                   	push   %eax
    1d8a:	e8 f1 d9 00 00       	call   f780 <str_error@plt>
    1d8f:	83 c4 0c             	add    $0xc,%esp
    1d92:	50                   	push   %eax
    1d93:	68 50 d1 00 00       	push   $0xd150
    1d98:	6a 01                	push   $0x1
    1d9a:	e8 61 34 00 00       	call   5200 <ddf_msg>
    1d9f:	83 c4 10             	add    $0x10,%esp
    1da2:	8d 65 f8             	lea    -0x8(%ebp),%esp
    1da5:	5b                   	pop    %ebx
    1da6:	5e                   	pop    %esi
    1da7:	5d                   	pop    %ebp
    1da8:	c3                   	ret    
    1da9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1db0:	83 ec 0c             	sub    $0xc,%esp
    1db3:	50                   	push   %eax
    1db4:	e8 c7 d9 00 00       	call   f780 <str_error@plt>
    1db9:	83 c4 0c             	add    $0xc,%esp
    1dbc:	50                   	push   %eax
    1dbd:	68 50 d1 00 00       	push   $0xd150
    1dc2:	6a 01                	push   $0x1
    1dc4:	e8 37 34 00 00       	call   5200 <ddf_msg>
    1dc9:	83 c4 10             	add    $0x10,%esp
    1dcc:	eb 86                	jmp    1d54 <pci_fun_create_match_ids+0x114>
    1dce:	66 90                	xchg   %ax,%ax
    1dd0:	83 ec 0c             	sub    $0xc,%esp
    1dd3:	50                   	push   %eax
    1dd4:	e8 a7 d9 00 00       	call   f780 <str_error@plt>
    1dd9:	83 c4 0c             	add    $0xc,%esp
    1ddc:	50                   	push   %eax
    1ddd:	68 50 d1 00 00       	push   $0xd150
    1de2:	6a 01                	push   $0x1
    1de4:	e8 17 34 00 00       	call   5200 <ddf_msg>
    1de9:	83 c4 10             	add    $0x10,%esp
    1dec:	e9 28 ff ff ff       	jmp    1d19 <pci_fun_create_match_ids+0xd9>
    1df1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1df8:	83 ec 0c             	sub    $0xc,%esp
    1dfb:	50                   	push   %eax
    1dfc:	e8 7f d9 00 00       	call   f780 <str_error@plt>
    1e01:	83 c4 0c             	add    $0xc,%esp
    1e04:	50                   	push   %eax
    1e05:	68 50 d1 00 00       	push   $0xd150
    1e0a:	6a 01                	push   $0x1
    1e0c:	e8 ef 33 00 00       	call   5200 <ddf_msg>
    1e11:	83 c4 10             	add    $0x10,%esp
    1e14:	e9 bc fe ff ff       	jmp    1cd5 <pci_fun_create_match_ids+0x95>
    1e19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1e20:	83 ec 0c             	sub    $0xc,%esp
    1e23:	50                   	push   %eax
    1e24:	e8 57 d9 00 00       	call   f780 <str_error@plt>
    1e29:	83 c4 0c             	add    $0xc,%esp
    1e2c:	50                   	push   %eax
    1e2d:	68 50 d1 00 00       	push   $0xd150
    1e32:	6a 01                	push   $0x1
    1e34:	e8 c7 33 00 00       	call   5200 <ddf_msg>
    1e39:	83 c4 10             	add    $0x10,%esp
    1e3c:	e9 4b fe ff ff       	jmp    1c8c <pci_fun_create_match_ids+0x4c>
    1e41:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1e48:	83 ec 0c             	sub    $0xc,%esp
    1e4b:	50                   	push   %eax
    1e4c:	e8 2f d9 00 00       	call   f780 <str_error@plt>
    1e51:	83 c4 0c             	add    $0xc,%esp
    1e54:	50                   	push   %eax
    1e55:	68 dc d2 00 00       	push   $0xd2dc
    1e5a:	6a 01                	push   $0x1
    1e5c:	e8 9f 33 00 00       	call   5200 <ddf_msg>
    1e61:	83 c4 10             	add    $0x10,%esp
    1e64:	e9 0b fe ff ff       	jmp    1c74 <pci_fun_create_match_ids+0x34>
    1e69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1e70:	83 ec 0c             	sub    $0xc,%esp
    1e73:	50                   	push   %eax
    1e74:	e8 07 d9 00 00       	call   f780 <str_error@plt>
    1e79:	83 c4 0c             	add    $0xc,%esp
    1e7c:	50                   	push   %eax
    1e7d:	68 dc d2 00 00       	push   $0xd2dc
    1e82:	6a 01                	push   $0x1
    1e84:	e8 77 33 00 00       	call   5200 <ddf_msg>
    1e89:	83 c4 10             	add    $0x10,%esp
    1e8c:	e9 2c fe ff ff       	jmp    1cbd <pci_fun_create_match_ids+0x7d>
    1e91:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1e98:	83 ec 0c             	sub    $0xc,%esp
    1e9b:	50                   	push   %eax
    1e9c:	e8 df d8 00 00       	call   f780 <str_error@plt>
    1ea1:	83 c4 0c             	add    $0xc,%esp
    1ea4:	50                   	push   %eax
    1ea5:	68 dc d2 00 00       	push   $0xd2dc
    1eaa:	6a 01                	push   $0x1
    1eac:	e8 4f 33 00 00       	call   5200 <ddf_msg>
    1eb1:	83 c4 10             	add    $0x10,%esp
    1eb4:	e9 48 fe ff ff       	jmp    1d01 <pci_fun_create_match_ids+0xc1>
    1eb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1ec0:	83 ec 0c             	sub    $0xc,%esp
    1ec3:	50                   	push   %eax
    1ec4:	e8 b7 d8 00 00       	call   f780 <str_error@plt>
    1ec9:	83 c4 0c             	add    $0xc,%esp
    1ecc:	50                   	push   %eax
    1ecd:	68 dc d2 00 00       	push   $0xd2dc
    1ed2:	6a 01                	push   $0x1
    1ed4:	e8 27 33 00 00       	call   5200 <ddf_msg>
    1ed9:	83 c4 10             	add    $0x10,%esp
    1edc:	e9 5f fe ff ff       	jmp    1d40 <pci_fun_create_match_ids+0x100>
    1ee1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1ee8:	83 ec 0c             	sub    $0xc,%esp
    1eeb:	50                   	push   %eax
    1eec:	e8 8f d8 00 00       	call   f780 <str_error@plt>
    1ef1:	83 c4 0c             	add    $0xc,%esp
    1ef4:	50                   	push   %eax
    1ef5:	68 dc d2 00 00       	push   $0xd2dc
    1efa:	6a 01                	push   $0x1
    1efc:	e8 ff 32 00 00       	call   5200 <ddf_msg>
    1f01:	83 c4 10             	add    $0x10,%esp
    1f04:	e9 69 fe ff ff       	jmp    1d72 <pci_fun_create_match_ids+0x132>
    1f09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001f10 <pci_add_range>:
    1f10:	55                   	push   %ebp
    1f11:	89 e5                	mov    %esp,%ebp
    1f13:	57                   	push   %edi
    1f14:	56                   	push   %esi
    1f15:	53                   	push   %ebx
    1f16:	83 ec 1c             	sub    $0x1c,%esp
    1f19:	8b 55 08             	mov    0x8(%ebp),%edx
    1f1c:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    1f1f:	8b 5d 10             	mov    0x10(%ebp),%ebx
    1f22:	89 4d e0             	mov    %ecx,-0x20(%ebp)
    1f25:	8b 72 24             	mov    0x24(%edx),%esi
    1f28:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
    1f2b:	8b 7d 18             	mov    0x18(%ebp),%edi
    1f2e:	8b 42 20             	mov    0x20(%edx),%eax
    1f31:	85 f6                	test   %esi,%esi
    1f33:	0f 84 8b 00 00 00    	je     1fc4 <pci_add_range+0xb4>
    1f39:	83 f8 09             	cmp    $0x9,%eax
    1f3c:	77 71                	ja     1faf <pci_add_range+0x9f>
    1f3e:	89 fb                	mov    %edi,%ebx
    1f40:	8d 3c 40             	lea    (%eax,%eax,2),%edi
    1f43:	84 db                	test   %bl,%bl
    1f45:	8d 34 fe             	lea    (%esi,%edi,8),%esi
    1f48:	75 36                	jne    1f80 <pci_add_range+0x70>
    1f4a:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    1f4d:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
    1f50:	89 4e 04             	mov    %ecx,0x4(%esi)
    1f53:	40                   	inc    %eax
    1f54:	8b 4d 14             	mov    0x14(%ebp),%ecx
    1f57:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
    1f5d:	89 5e 08             	mov    %ebx,0x8(%esi)
    1f60:	89 4e 0c             	mov    %ecx,0xc(%esi)
    1f63:	c6 46 10 00          	movb   $0x0,0x10(%esi)
    1f67:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)
    1f6e:	89 42 20             	mov    %eax,0x20(%edx)
    1f71:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1f74:	5b                   	pop    %ebx
    1f75:	5e                   	pop    %esi
    1f76:	5f                   	pop    %edi
    1f77:	5d                   	pop    %ebp
    1f78:	c3                   	ret    
    1f79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1f80:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
    1f83:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    1f86:	89 5e 08             	mov    %ebx,0x8(%esi)
    1f89:	40                   	inc    %eax
    1f8a:	8b 5d 14             	mov    0x14(%ebp),%ebx
    1f8d:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
    1f93:	89 4e 04             	mov    %ecx,0x4(%esi)
    1f96:	89 5e 0c             	mov    %ebx,0xc(%esi)
    1f99:	c6 46 10 01          	movb   $0x1,0x10(%esi)
    1f9d:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)
    1fa4:	89 42 20             	mov    %eax,0x20(%edx)
    1fa7:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1faa:	5b                   	pop    %ebx
    1fab:	5e                   	pop    %esi
    1fac:	5f                   	pop    %edi
    1fad:	5d                   	pop    %ebp
    1fae:	c3                   	ret    
    1faf:	50                   	push   %eax
    1fb0:	68 b8 01 00 00       	push   $0x1b8
    1fb5:	68 97 ef 00 00       	push   $0xef97
    1fba:	68 ac d1 00 00       	push   $0xd1ac
    1fbf:	e8 9c d5 00 00       	call   f560 <assert_abort@plt>
    1fc4:	52                   	push   %edx
    1fc5:	68 b7 01 00 00       	push   $0x1b7
    1fca:	68 97 ef 00 00       	push   $0xef97
    1fcf:	68 97 d1 00 00       	push   $0xd197
    1fd4:	e8 87 d5 00 00       	call   f560 <assert_abort@plt>
    1fd9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001fe0 <pci_read_bar>:
    1fe0:	55                   	push   %ebp
    1fe1:	89 e5                	mov    %esp,%ebp
    1fe3:	57                   	push   %edi
    1fe4:	56                   	push   %esi
    1fe5:	53                   	push   %ebx
    1fe6:	83 ec 38             	sub    $0x38,%esp
    1fe9:	8b 7d 08             	mov    0x8(%ebp),%edi
    1fec:	8b 45 0c             	mov    0xc(%ebp),%eax
    1fef:	83 e0 fc             	and    $0xfffffffc,%eax
    1ff2:	89 c2                	mov    %eax,%edx
    1ff4:	8b 77 08             	mov    0x8(%edi),%esi
    1ff7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    1ffa:	8b 47 0c             	mov    0xc(%edi),%eax
    1ffd:	c1 e0 0b             	shl    $0xb,%eax
    2000:	8b 1f                	mov    (%edi),%ebx
    2002:	c1 e6 10             	shl    $0x10,%esi
    2005:	09 c6                	or     %eax,%esi
    2007:	8b 47 10             	mov    0x10(%edi),%eax
    200a:	c1 e0 08             	shl    $0x8,%eax
    200d:	09 d6                	or     %edx,%esi
    200f:	09 c6                	or     %eax,%esi
    2011:	8d 43 20             	lea    0x20(%ebx),%eax
    2014:	50                   	push   %eax
    2015:	89 45 dc             	mov    %eax,-0x24(%ebp)
    2018:	e8 63 d8 00 00       	call   f880 <fibril_mutex_lock@plt>
    201d:	8b 43 04             	mov    0x4(%ebx),%eax
    2020:	83 c4 10             	add    $0x10,%esp
    2023:	85 c0                	test   %eax,%eax
    2025:	0f 84 fd 02 00 00    	je     2328 <pci_read_bar+0x348>
    202b:	81 ce 00 00 00 80    	or     $0x80000000,%esi
    2031:	52                   	push   %edx
    2032:	52                   	push   %edx
    2033:	56                   	push   %esi
    2034:	50                   	push   %eax
    2035:	e8 26 d6 00 00       	call   f660 <pio_write_32@plt>
    203a:	8b 5b 08             	mov    0x8(%ebx),%ebx
    203d:	59                   	pop    %ecx
    203e:	53                   	push   %ebx
    203f:	e8 6c d4 00 00       	call   f4b0 <pio_read_32@plt>
    2044:	83 c4 10             	add    $0x10,%esp
    2047:	89 45 e0             	mov    %eax,-0x20(%ebp)
    204a:	83 ec 0c             	sub    $0xc,%esp
    204d:	8b 45 dc             	mov    -0x24(%ebp),%eax
    2050:	50                   	push   %eax
    2051:	e8 9a d5 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    2056:	8b 55 e0             	mov    -0x20(%ebp),%edx
    2059:	83 c4 10             	add    $0x10,%esp
    205c:	89 d0                	mov    %edx,%eax
    205e:	83 e0 01             	and    $0x1,%eax
    2061:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    2064:	0f 85 1e 01 00 00    	jne    2188 <pci_read_bar+0x1a8>
    206a:	89 d0                	mov    %edx,%eax
    206c:	d1 e8                	shr    %eax
    206e:	83 e0 03             	and    $0x3,%eax
    2071:	0f 84 01 01 00 00    	je     2178 <pci_read_bar+0x198>
    2077:	83 f8 02             	cmp    $0x2,%eax
    207a:	0f 85 18 01 00 00    	jne    2198 <pci_read_bar+0x1b8>
    2080:	c6 45 dc 01          	movb   $0x1,-0x24(%ebp)
    2084:	c7 45 d0 f0 ff ff ff 	movl   $0xfffffff0,-0x30(%ebp)
    208b:	8b 5f 08             	mov    0x8(%edi),%ebx
    208e:	8b 47 0c             	mov    0xc(%edi),%eax
    2091:	c1 e0 0b             	shl    $0xb,%eax
    2094:	8b 75 e4             	mov    -0x1c(%ebp),%esi
    2097:	c1 e3 10             	shl    $0x10,%ebx
    209a:	83 ec 0c             	sub    $0xc,%esp
    209d:	09 c3                	or     %eax,%ebx
    209f:	8b 47 10             	mov    0x10(%edi),%eax
    20a2:	c1 e0 08             	shl    $0x8,%eax
    20a5:	09 f3                	or     %esi,%ebx
    20a7:	8b 37                	mov    (%edi),%esi
    20a9:	09 c3                	or     %eax,%ebx
    20ab:	8d 46 20             	lea    0x20(%esi),%eax
    20ae:	50                   	push   %eax
    20af:	89 45 d8             	mov    %eax,-0x28(%ebp)
    20b2:	e8 c9 d7 00 00       	call   f880 <fibril_mutex_lock@plt>
    20b7:	8b 4e 04             	mov    0x4(%esi),%ecx
    20ba:	83 c4 10             	add    $0x10,%esp
    20bd:	85 c9                	test   %ecx,%ecx
    20bf:	0f 84 4b 02 00 00    	je     2310 <pci_read_bar+0x330>
    20c5:	81 cb 00 00 00 80    	or     $0x80000000,%ebx
    20cb:	50                   	push   %eax
    20cc:	50                   	push   %eax
    20cd:	53                   	push   %ebx
    20ce:	51                   	push   %ecx
    20cf:	e8 8c d5 00 00       	call   f660 <pio_write_32@plt>
    20d4:	8b 4e 08             	mov    0x8(%esi),%ecx
    20d7:	58                   	pop    %eax
    20d8:	5a                   	pop    %edx
    20d9:	6a ff                	push   $0xffffffff
    20db:	51                   	push   %ecx
    20dc:	e8 7f d5 00 00       	call   f660 <pio_write_32@plt>
    20e1:	83 c4 10             	add    $0x10,%esp
    20e4:	83 ec 0c             	sub    $0xc,%esp
    20e7:	8b 55 d8             	mov    -0x28(%ebp),%edx
    20ea:	52                   	push   %edx
    20eb:	e8 00 d5 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    20f0:	8b 5f 08             	mov    0x8(%edi),%ebx
    20f3:	8b 47 0c             	mov    0xc(%edi),%eax
    20f6:	c1 e0 0b             	shl    $0xb,%eax
    20f9:	8b 37                	mov    (%edi),%esi
    20fb:	c1 e3 10             	shl    $0x10,%ebx
    20fe:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    2101:	09 c3                	or     %eax,%ebx
    2103:	8b 47 10             	mov    0x10(%edi),%eax
    2106:	c1 e0 08             	shl    $0x8,%eax
    2109:	09 cb                	or     %ecx,%ebx
    210b:	09 c3                	or     %eax,%ebx
    210d:	8d 46 20             	lea    0x20(%esi),%eax
    2110:	89 04 24             	mov    %eax,(%esp)
    2113:	89 45 d8             	mov    %eax,-0x28(%ebp)
    2116:	e8 65 d7 00 00       	call   f880 <fibril_mutex_lock@plt>
    211b:	8b 4e 04             	mov    0x4(%esi),%ecx
    211e:	83 c4 10             	add    $0x10,%esp
    2121:	85 c9                	test   %ecx,%ecx
    2123:	0f 84 1f 02 00 00    	je     2348 <pci_read_bar+0x368>
    2129:	81 cb 00 00 00 80    	or     $0x80000000,%ebx
    212f:	50                   	push   %eax
    2130:	50                   	push   %eax
    2131:	53                   	push   %ebx
    2132:	51                   	push   %ecx
    2133:	e8 28 d5 00 00       	call   f660 <pio_write_32@plt>
    2138:	58                   	pop    %eax
    2139:	8b 46 08             	mov    0x8(%esi),%eax
    213c:	50                   	push   %eax
    213d:	e8 6e d3 00 00       	call   f4b0 <pio_read_32@plt>
    2142:	83 c4 10             	add    $0x10,%esp
    2145:	89 c3                	mov    %eax,%ebx
    2147:	83 ec 0c             	sub    $0xc,%esp
    214a:	8b 45 d8             	mov    -0x28(%ebp),%eax
    214d:	50                   	push   %eax
    214e:	e8 9d d4 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    2153:	83 c4 10             	add    $0x10,%esp
    2156:	85 db                	test   %ebx,%ebx
    2158:	75 4e                	jne    21a8 <pci_read_bar+0x1c8>
    215a:	80 7d dc 01          	cmpb   $0x1,-0x24(%ebp)
    215e:	19 c0                	sbb    %eax,%eax
    2160:	8b 55 0c             	mov    0xc(%ebp),%edx
    2163:	83 e0 fc             	and    $0xfffffffc,%eax
    2166:	8d 44 10 08          	lea    0x8(%eax,%edx,1),%eax
    216a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    216d:	5b                   	pop    %ebx
    216e:	5e                   	pop    %esi
    216f:	5f                   	pop    %edi
    2170:	5d                   	pop    %ebp
    2171:	c3                   	ret    
    2172:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2178:	c6 45 dc 00          	movb   $0x0,-0x24(%ebp)
    217c:	c7 45 d0 f0 ff ff ff 	movl   $0xfffffff0,-0x30(%ebp)
    2183:	e9 03 ff ff ff       	jmp    208b <pci_read_bar+0xab>
    2188:	c6 45 dc 00          	movb   $0x0,-0x24(%ebp)
    218c:	c7 45 d0 fc ff ff ff 	movl   $0xfffffffc,-0x30(%ebp)
    2193:	e9 f3 fe ff ff       	jmp    208b <pci_read_bar+0xab>
    2198:	8b 45 0c             	mov    0xc(%ebp),%eax
    219b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    219e:	83 c0 04             	add    $0x4,%eax
    21a1:	5b                   	pop    %ebx
    21a2:	5e                   	pop    %esi
    21a3:	5f                   	pop    %edi
    21a4:	5d                   	pop    %ebp
    21a5:	c3                   	ret    
    21a6:	66 90                	xchg   %ax,%ax
    21a8:	8b 75 d0             	mov    -0x30(%ebp),%esi
    21ab:	8b 47 0c             	mov    0xc(%edi),%eax
    21ae:	21 f3                	and    %esi,%ebx
    21b0:	83 ec 0c             	sub    $0xc,%esp
    21b3:	c1 e0 0b             	shl    $0xb,%eax
    21b6:	89 5d d8             	mov    %ebx,-0x28(%ebp)
    21b9:	8b 5f 08             	mov    0x8(%edi),%ebx
    21bc:	c1 e3 10             	shl    $0x10,%ebx
    21bf:	09 c3                	or     %eax,%ebx
    21c1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    21c4:	09 c3                	or     %eax,%ebx
    21c6:	8b 47 10             	mov    0x10(%edi),%eax
    21c9:	c1 e0 08             	shl    $0x8,%eax
    21cc:	09 c3                	or     %eax,%ebx
    21ce:	8b 07                	mov    (%edi),%eax
    21d0:	89 45 d0             	mov    %eax,-0x30(%ebp)
    21d3:	8d 70 20             	lea    0x20(%eax),%esi
    21d6:	56                   	push   %esi
    21d7:	e8 a4 d6 00 00       	call   f880 <fibril_mutex_lock@plt>
    21dc:	8b 45 d0             	mov    -0x30(%ebp),%eax
    21df:	83 c4 10             	add    $0x10,%esp
    21e2:	8b 48 04             	mov    0x4(%eax),%ecx
    21e5:	85 c9                	test   %ecx,%ecx
    21e7:	0f 84 4b 02 00 00    	je     2438 <pci_read_bar+0x458>
    21ed:	81 cb 00 00 00 80    	or     $0x80000000,%ebx
    21f3:	50                   	push   %eax
    21f4:	50                   	push   %eax
    21f5:	53                   	push   %ebx
    21f6:	51                   	push   %ecx
    21f7:	e8 64 d4 00 00       	call   f660 <pio_write_32@plt>
    21fc:	58                   	pop    %eax
    21fd:	8b 45 d0             	mov    -0x30(%ebp),%eax
    2200:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    2203:	5a                   	pop    %edx
    2204:	8b 58 08             	mov    0x8(%eax),%ebx
    2207:	51                   	push   %ecx
    2208:	53                   	push   %ebx
    2209:	e8 52 d4 00 00       	call   f660 <pio_write_32@plt>
    220e:	83 c4 10             	add    $0x10,%esp
    2211:	83 ec 0c             	sub    $0xc,%esp
    2214:	56                   	push   %esi
    2215:	e8 d6 d3 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    221a:	8b 5f 08             	mov    0x8(%edi),%ebx
    221d:	8b 47 0c             	mov    0xc(%edi),%eax
    2220:	c1 e0 0b             	shl    $0xb,%eax
    2223:	8b 75 e4             	mov    -0x1c(%ebp),%esi
    2226:	c1 e3 10             	shl    $0x10,%ebx
    2229:	09 c3                	or     %eax,%ebx
    222b:	8b 47 10             	mov    0x10(%edi),%eax
    222e:	c1 e0 08             	shl    $0x8,%eax
    2231:	09 f3                	or     %esi,%ebx
    2233:	8b 37                	mov    (%edi),%esi
    2235:	09 c3                	or     %eax,%ebx
    2237:	8d 46 20             	lea    0x20(%esi),%eax
    223a:	89 04 24             	mov    %eax,(%esp)
    223d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    2240:	e8 3b d6 00 00       	call   f880 <fibril_mutex_lock@plt>
    2245:	8b 46 04             	mov    0x4(%esi),%eax
    2248:	83 c4 10             	add    $0x10,%esp
    224b:	85 c0                	test   %eax,%eax
    224d:	0f 84 05 02 00 00    	je     2458 <pci_read_bar+0x478>
    2253:	81 cb 00 00 00 80    	or     $0x80000000,%ebx
    2259:	52                   	push   %edx
    225a:	52                   	push   %edx
    225b:	53                   	push   %ebx
    225c:	50                   	push   %eax
    225d:	e8 fe d3 00 00       	call   f660 <pio_write_32@plt>
    2262:	8b 5e 08             	mov    0x8(%esi),%ebx
    2265:	59                   	pop    %ecx
    2266:	53                   	push   %ebx
    2267:	e8 44 d2 00 00       	call   f4b0 <pio_read_32@plt>
    226c:	83 c4 10             	add    $0x10,%esp
    226f:	89 45 e0             	mov    %eax,-0x20(%ebp)
    2272:	83 ec 0c             	sub    $0xc,%esp
    2275:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    2278:	50                   	push   %eax
    2279:	e8 72 d3 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    227e:	8b 55 d8             	mov    -0x28(%ebp),%edx
    2281:	83 c4 10             	add    $0x10,%esp
    2284:	89 d0                	mov    %edx,%eax
    2286:	f7 d8                	neg    %eax
    2288:	21 d0                	and    %edx,%eax
    228a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    228d:	80 7d dc 00          	cmpb   $0x0,-0x24(%ebp)
    2291:	0f 85 21 01 00 00    	jne    23b8 <pci_read_bar+0x3d8>
    2297:	8b 75 e0             	mov    -0x20(%ebp),%esi
    229a:	83 e6 f0             	and    $0xfffffff0,%esi
    229d:	89 f3                	mov    %esi,%ebx
    229f:	31 f6                	xor    %esi,%esi
    22a1:	89 f1                	mov    %esi,%ecx
    22a3:	09 d9                	or     %ebx,%ecx
    22a5:	0f 85 dd 00 00 00    	jne    2388 <pci_read_bar+0x3a8>
    22ab:	8b 4f 24             	mov    0x24(%edi),%ecx
    22ae:	8b 47 20             	mov    0x20(%edi),%eax
    22b1:	85 c9                	test   %ecx,%ecx
    22b3:	0f 84 e3 01 00 00    	je     249c <pci_read_bar+0x4bc>
    22b9:	83 f8 09             	cmp    $0x9,%eax
    22bc:	0f 87 c5 01 00 00    	ja     2487 <pci_read_bar+0x4a7>
    22c2:	8d 14 40             	lea    (%eax,%eax,2),%edx
    22c5:	8d 0c d1             	lea    (%ecx,%edx,8),%ecx
    22c8:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    22cb:	85 d2                	test   %edx,%edx
    22cd:	0f 85 8d 00 00 00    	jne    2360 <pci_read_bar+0x380>
    22d3:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    22d6:	c7 01 02 00 00 00    	movl   $0x2,(%ecx)
    22dc:	89 59 04             	mov    %ebx,0x4(%ecx)
    22df:	89 71 08             	mov    %esi,0x8(%ecx)
    22e2:	89 51 0c             	mov    %edx,0xc(%ecx)
    22e5:	c6 41 10 00          	movb   $0x0,0x10(%ecx)
    22e9:	c7 41 14 00 00 00 00 	movl   $0x0,0x14(%ecx)
    22f0:	40                   	inc    %eax
    22f1:	89 47 20             	mov    %eax,0x20(%edi)
    22f4:	8b 45 0c             	mov    0xc(%ebp),%eax
    22f7:	83 c0 04             	add    $0x4,%eax
    22fa:	80 7d dc 00          	cmpb   $0x0,-0x24(%ebp)
    22fe:	0f 84 66 fe ff ff    	je     216a <pci_read_bar+0x18a>
    2304:	8b 45 0c             	mov    0xc(%ebp),%eax
    2307:	83 c0 08             	add    $0x8,%eax
    230a:	e9 5b fe ff ff       	jmp    216a <pci_read_bar+0x18a>
    230f:	90                   	nop
    2310:	50                   	push   %eax
    2311:	50                   	push   %eax
    2312:	8b 46 0c             	mov    0xc(%esi),%eax
    2315:	6a ff                	push   $0xffffffff
    2317:	01 c3                	add    %eax,%ebx
    2319:	53                   	push   %ebx
    231a:	e8 41 d3 00 00       	call   f660 <pio_write_32@plt>
    231f:	83 c4 10             	add    $0x10,%esp
    2322:	e9 bd fd ff ff       	jmp    20e4 <pci_read_bar+0x104>
    2327:	90                   	nop
    2328:	83 ec 0c             	sub    $0xc,%esp
    232b:	8b 43 0c             	mov    0xc(%ebx),%eax
    232e:	01 c6                	add    %eax,%esi
    2330:	56                   	push   %esi
    2331:	e8 7a d1 00 00       	call   f4b0 <pio_read_32@plt>
    2336:	83 c4 10             	add    $0x10,%esp
    2339:	89 45 e0             	mov    %eax,-0x20(%ebp)
    233c:	e9 09 fd ff ff       	jmp    204a <pci_read_bar+0x6a>
    2341:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    2348:	83 ec 0c             	sub    $0xc,%esp
    234b:	8b 46 0c             	mov    0xc(%esi),%eax
    234e:	01 c3                	add    %eax,%ebx
    2350:	53                   	push   %ebx
    2351:	e8 5a d1 00 00       	call   f4b0 <pio_read_32@plt>
    2356:	83 c4 10             	add    $0x10,%esp
    2359:	89 c3                	mov    %eax,%ebx
    235b:	e9 e7 fd ff ff       	jmp    2147 <pci_read_bar+0x167>
    2360:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    2363:	c7 01 01 00 00 00    	movl   $0x1,(%ecx)
    2369:	89 59 04             	mov    %ebx,0x4(%ecx)
    236c:	89 71 08             	mov    %esi,0x8(%ecx)
    236f:	89 51 0c             	mov    %edx,0xc(%ecx)
    2372:	c6 41 10 01          	movb   $0x1,0x10(%ecx)
    2376:	c7 41 14 00 00 00 00 	movl   $0x0,0x14(%ecx)
    237d:	e9 6e ff ff ff       	jmp    22f0 <pci_read_bar+0x310>
    2382:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2388:	83 ec 0c             	sub    $0xc,%esp
    238b:	8b 47 04             	mov    0x4(%edi),%eax
    238e:	50                   	push   %eax
    238f:	e8 1c 28 00 00       	call   4bb0 <ddf_fun_get_name>
    2394:	5a                   	pop    %edx
    2395:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    2398:	59                   	pop    %ecx
    2399:	52                   	push   %edx
    239a:	56                   	push   %esi
    239b:	53                   	push   %ebx
    239c:	50                   	push   %eax
    239d:	68 64 d3 00 00       	push   $0xd364
    23a2:	6a 04                	push   $0x4
    23a4:	e8 57 2e 00 00       	call   5200 <ddf_msg>
    23a9:	83 c4 20             	add    $0x20,%esp
    23ac:	e9 fa fe ff ff       	jmp    22ab <pci_read_bar+0x2cb>
    23b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    23b8:	8b 4f 08             	mov    0x8(%edi),%ecx
    23bb:	8b 47 0c             	mov    0xc(%edi),%eax
    23be:	c1 e1 10             	shl    $0x10,%ecx
    23c1:	8b 37                	mov    (%edi),%esi
    23c3:	c1 e0 0b             	shl    $0xb,%eax
    23c6:	83 ec 0c             	sub    $0xc,%esp
    23c9:	09 c8                	or     %ecx,%eax
    23cb:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    23ce:	83 c1 04             	add    $0x4,%ecx
    23d1:	8d 5e 20             	lea    0x20(%esi),%ebx
    23d4:	83 e1 fc             	and    $0xfffffffc,%ecx
    23d7:	09 c8                	or     %ecx,%eax
    23d9:	8b 4f 10             	mov    0x10(%edi),%ecx
    23dc:	c1 e1 08             	shl    $0x8,%ecx
    23df:	53                   	push   %ebx
    23e0:	09 c8                	or     %ecx,%eax
    23e2:	89 45 d8             	mov    %eax,-0x28(%ebp)
    23e5:	e8 96 d4 00 00       	call   f880 <fibril_mutex_lock@plt>
    23ea:	8b 46 04             	mov    0x4(%esi),%eax
    23ed:	83 c4 10             	add    $0x10,%esp
    23f0:	85 c0                	test   %eax,%eax
    23f2:	74 7d                	je     2471 <pci_read_bar+0x491>
    23f4:	8b 4d d8             	mov    -0x28(%ebp),%ecx
    23f7:	52                   	push   %edx
    23f8:	81 c9 00 00 00 80    	or     $0x80000000,%ecx
    23fe:	52                   	push   %edx
    23ff:	51                   	push   %ecx
    2400:	50                   	push   %eax
    2401:	e8 5a d2 00 00       	call   f660 <pio_write_32@plt>
    2406:	8b 76 08             	mov    0x8(%esi),%esi
    2409:	59                   	pop    %ecx
    240a:	56                   	push   %esi
    240b:	e8 a0 d0 00 00       	call   f4b0 <pio_read_32@plt>
    2410:	83 c4 10             	add    $0x10,%esp
    2413:	83 ec 0c             	sub    $0xc,%esp
    2416:	89 45 d8             	mov    %eax,-0x28(%ebp)
    2419:	53                   	push   %ebx
    241a:	e8 d1 d1 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    241f:	8b 45 e0             	mov    -0x20(%ebp),%eax
    2422:	83 c4 10             	add    $0x10,%esp
    2425:	83 e0 f0             	and    $0xfffffff0,%eax
    2428:	89 c3                	mov    %eax,%ebx
    242a:	8b 45 d8             	mov    -0x28(%ebp),%eax
    242d:	89 c6                	mov    %eax,%esi
    242f:	e9 6d fe ff ff       	jmp    22a1 <pci_read_bar+0x2c1>
    2434:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2438:	52                   	push   %edx
    2439:	52                   	push   %edx
    243a:	8b 50 0c             	mov    0xc(%eax),%edx
    243d:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    2440:	01 d3                	add    %edx,%ebx
    2442:	51                   	push   %ecx
    2443:	53                   	push   %ebx
    2444:	e8 17 d2 00 00       	call   f660 <pio_write_32@plt>
    2449:	83 c4 10             	add    $0x10,%esp
    244c:	e9 c0 fd ff ff       	jmp    2211 <pci_read_bar+0x231>
    2451:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    2458:	83 ec 0c             	sub    $0xc,%esp
    245b:	8b 46 0c             	mov    0xc(%esi),%eax
    245e:	01 c3                	add    %eax,%ebx
    2460:	53                   	push   %ebx
    2461:	e8 4a d0 00 00       	call   f4b0 <pio_read_32@plt>
    2466:	83 c4 10             	add    $0x10,%esp
    2469:	89 45 e0             	mov    %eax,-0x20(%ebp)
    246c:	e9 01 fe ff ff       	jmp    2272 <pci_read_bar+0x292>
    2471:	83 ec 0c             	sub    $0xc,%esp
    2474:	8b 46 0c             	mov    0xc(%esi),%eax
    2477:	8b 4d d8             	mov    -0x28(%ebp),%ecx
    247a:	01 c1                	add    %eax,%ecx
    247c:	51                   	push   %ecx
    247d:	e8 2e d0 00 00       	call   f4b0 <pio_read_32@plt>
    2482:	83 c4 10             	add    $0x10,%esp
    2485:	eb 8c                	jmp    2413 <pci_read_bar+0x433>
    2487:	51                   	push   %ecx
    2488:	68 b8 01 00 00       	push   $0x1b8
    248d:	68 97 ef 00 00       	push   $0xef97
    2492:	68 ac d1 00 00       	push   $0xd1ac
    2497:	e8 c4 d0 00 00       	call   f560 <assert_abort@plt>
    249c:	53                   	push   %ebx
    249d:	68 b7 01 00 00       	push   $0x1b7
    24a2:	68 97 ef 00 00       	push   $0xef97
    24a7:	68 97 d1 00 00       	push   $0xd197
    24ac:	e8 af d0 00 00       	call   f560 <assert_abort@plt>
    24b1:	eb 0d                	jmp    24c0 <pci_add_interrupt>
    24b3:	90                   	nop
    24b4:	90                   	nop
    24b5:	90                   	nop
    24b6:	90                   	nop
    24b7:	90                   	nop
    24b8:	90                   	nop
    24b9:	90                   	nop
    24ba:	90                   	nop
    24bb:	90                   	nop
    24bc:	90                   	nop
    24bd:	90                   	nop
    24be:	90                   	nop
    24bf:	90                   	nop

000024c0 <pci_add_interrupt>:
    24c0:	55                   	push   %ebp
    24c1:	89 e5                	mov    %esp,%ebp
    24c3:	56                   	push   %esi
    24c4:	53                   	push   %ebx
    24c5:	8b 55 08             	mov    0x8(%ebp),%edx
    24c8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    24cb:	8b 4a 24             	mov    0x24(%edx),%ecx
    24ce:	8b 42 20             	mov    0x20(%edx),%eax
    24d1:	85 c9                	test   %ecx,%ecx
    24d3:	74 3c                	je     2511 <pci_add_interrupt+0x51>
    24d5:	83 f8 09             	cmp    $0x9,%eax
    24d8:	77 4c                	ja     2526 <pci_add_interrupt+0x66>
    24da:	8d 34 40             	lea    (%eax,%eax,2),%esi
    24dd:	83 ec 0c             	sub    $0xc,%esp
    24e0:	40                   	inc    %eax
    24e1:	8d 0c f1             	lea    (%ecx,%esi,8),%ecx
    24e4:	89 59 04             	mov    %ebx,0x4(%ecx)
    24e7:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)
    24ed:	89 42 20             	mov    %eax,0x20(%edx)
    24f0:	8b 42 04             	mov    0x4(%edx),%eax
    24f3:	50                   	push   %eax
    24f4:	e8 b7 26 00 00       	call   4bb0 <ddf_fun_get_name>
    24f9:	53                   	push   %ebx
    24fa:	50                   	push   %eax
    24fb:	68 d8 d1 00 00       	push   $0xd1d8
    2500:	6a 03                	push   $0x3
    2502:	e8 f9 2c 00 00       	call   5200 <ddf_msg>
    2507:	83 c4 20             	add    $0x20,%esp
    250a:	8d 65 f8             	lea    -0x8(%ebp),%esp
    250d:	5b                   	pop    %ebx
    250e:	5e                   	pop    %esi
    250f:	5d                   	pop    %ebp
    2510:	c3                   	ret    
    2511:	51                   	push   %ecx
    2512:	68 2a 02 00 00       	push   $0x22a
    2517:	68 97 ef 00 00       	push   $0xef97
    251c:	68 c3 d1 00 00       	push   $0xd1c3
    2521:	e8 3a d0 00 00       	call   f560 <assert_abort@plt>
    2526:	52                   	push   %edx
    2527:	68 2b 02 00 00       	push   $0x22b
    252c:	68 97 ef 00 00       	push   $0xef97
    2531:	68 ac d1 00 00       	push   $0xd1ac
    2536:	e8 25 d0 00 00       	call   f560 <assert_abort@plt>
    253b:	90                   	nop
    253c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00002540 <pci_read_interrupt>:
    2540:	55                   	push   %ebp
    2541:	89 e5                	mov    %esp,%ebp
    2543:	57                   	push   %edi
    2544:	56                   	push   %esi
    2545:	53                   	push   %ebx
    2546:	83 ec 28             	sub    $0x28,%esp
    2549:	8b 5d 08             	mov    0x8(%ebp),%ebx
    254c:	8b 43 08             	mov    0x8(%ebx),%eax
    254f:	8b 53 0c             	mov    0xc(%ebx),%edx
    2552:	c1 e2 0b             	shl    $0xb,%edx
    2555:	8b 73 10             	mov    0x10(%ebx),%esi
    2558:	c1 e0 10             	shl    $0x10,%eax
    255b:	c1 e6 08             	shl    $0x8,%esi
    255e:	09 d0                	or     %edx,%eax
    2560:	83 c8 3c             	or     $0x3c,%eax
    2563:	09 f0                	or     %esi,%eax
    2565:	8b 33                	mov    (%ebx),%esi
    2567:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    256a:	8d 7e 20             	lea    0x20(%esi),%edi
    256d:	57                   	push   %edi
    256e:	e8 0d d3 00 00       	call   f880 <fibril_mutex_lock@plt>
    2573:	8b 4e 04             	mov    0x4(%esi),%ecx
    2576:	83 c4 10             	add    $0x10,%esp
    2579:	85 c9                	test   %ecx,%ecx
    257b:	0f 84 1f 01 00 00    	je     26a0 <pci_read_interrupt+0x160>
    2581:	50                   	push   %eax
    2582:	50                   	push   %eax
    2583:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    2586:	0d 00 00 00 80       	or     $0x80000000,%eax
    258b:	50                   	push   %eax
    258c:	51                   	push   %ecx
    258d:	e8 ce d0 00 00       	call   f660 <pio_write_32@plt>
    2592:	58                   	pop    %eax
    2593:	8b 46 08             	mov    0x8(%esi),%eax
    2596:	50                   	push   %eax
    2597:	e8 14 cf 00 00       	call   f4b0 <pio_read_32@plt>
    259c:	83 c4 10             	add    $0x10,%esp
    259f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    25a2:	83 ec 0c             	sub    $0xc,%esp
    25a5:	8a 45 e4             	mov    -0x1c(%ebp),%al
    25a8:	88 45 df             	mov    %al,-0x21(%ebp)
    25ab:	57                   	push   %edi
    25ac:	e8 3f d0 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    25b1:	8b 4b 08             	mov    0x8(%ebx),%ecx
    25b4:	8b 43 0c             	mov    0xc(%ebx),%eax
    25b7:	c1 e0 0b             	shl    $0xb,%eax
    25ba:	8b 33                	mov    (%ebx),%esi
    25bc:	c1 e1 10             	shl    $0x10,%ecx
    25bf:	09 c1                	or     %eax,%ecx
    25c1:	8b 43 10             	mov    0x10(%ebx),%eax
    25c4:	c1 e0 08             	shl    $0x8,%eax
    25c7:	83 c9 3c             	or     $0x3c,%ecx
    25ca:	09 c1                	or     %eax,%ecx
    25cc:	8d 7e 20             	lea    0x20(%esi),%edi
    25cf:	89 3c 24             	mov    %edi,(%esp)
    25d2:	89 4d e0             	mov    %ecx,-0x20(%ebp)
    25d5:	e8 a6 d2 00 00       	call   f880 <fibril_mutex_lock@plt>
    25da:	8b 56 04             	mov    0x4(%esi),%edx
    25dd:	83 c4 10             	add    $0x10,%esp
    25e0:	85 d2                	test   %edx,%edx
    25e2:	0f 84 98 00 00 00    	je     2680 <pci_read_interrupt+0x140>
    25e8:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    25eb:	50                   	push   %eax
    25ec:	81 c9 00 00 00 80    	or     $0x80000000,%ecx
    25f2:	50                   	push   %eax
    25f3:	51                   	push   %ecx
    25f4:	52                   	push   %edx
    25f5:	e8 66 d0 00 00       	call   f660 <pio_write_32@plt>
    25fa:	58                   	pop    %eax
    25fb:	8b 46 08             	mov    0x8(%esi),%eax
    25fe:	50                   	push   %eax
    25ff:	e8 ac ce 00 00       	call   f4b0 <pio_read_32@plt>
    2604:	83 c4 10             	add    $0x10,%esp
    2607:	83 ec 0c             	sub    $0xc,%esp
    260a:	89 45 e0             	mov    %eax,-0x20(%ebp)
    260d:	57                   	push   %edi
    260e:	e8 dd cf 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    2613:	8b 45 e0             	mov    -0x20(%ebp),%eax
    2616:	83 c4 10             	add    $0x10,%esp
    2619:	c1 e8 08             	shr    $0x8,%eax
    261c:	84 c0                	test   %al,%al
    261e:	74 53                	je     2673 <pci_read_interrupt+0x133>
    2620:	80 7d df ff          	cmpb   $0xff,-0x21(%ebp)
    2624:	74 4d                	je     2673 <pci_read_interrupt+0x133>
    2626:	0f b6 75 e4          	movzbl -0x1c(%ebp),%esi
    262a:	8b 53 24             	mov    0x24(%ebx),%edx
    262d:	81 e6 ff 00 00 00    	and    $0xff,%esi
    2633:	8b 43 20             	mov    0x20(%ebx),%eax
    2636:	85 d2                	test   %edx,%edx
    2638:	0f 84 93 00 00 00    	je     26d1 <pci_read_interrupt+0x191>
    263e:	83 f8 09             	cmp    $0x9,%eax
    2641:	77 79                	ja     26bc <pci_read_interrupt+0x17c>
    2643:	8d 0c 40             	lea    (%eax,%eax,2),%ecx
    2646:	83 ec 0c             	sub    $0xc,%esp
    2649:	40                   	inc    %eax
    264a:	8d 14 ca             	lea    (%edx,%ecx,8),%edx
    264d:	89 72 04             	mov    %esi,0x4(%edx)
    2650:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
    2656:	89 43 20             	mov    %eax,0x20(%ebx)
    2659:	8b 43 04             	mov    0x4(%ebx),%eax
    265c:	50                   	push   %eax
    265d:	e8 4e 25 00 00       	call   4bb0 <ddf_fun_get_name>
    2662:	56                   	push   %esi
    2663:	50                   	push   %eax
    2664:	68 d8 d1 00 00       	push   $0xd1d8
    2669:	6a 03                	push   $0x3
    266b:	e8 90 2b 00 00       	call   5200 <ddf_msg>
    2670:	83 c4 20             	add    $0x20,%esp
    2673:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2676:	5b                   	pop    %ebx
    2677:	5e                   	pop    %esi
    2678:	5f                   	pop    %edi
    2679:	5d                   	pop    %ebp
    267a:	c3                   	ret    
    267b:	90                   	nop
    267c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2680:	83 ec 0c             	sub    $0xc,%esp
    2683:	8b 46 0c             	mov    0xc(%esi),%eax
    2686:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    2689:	01 c1                	add    %eax,%ecx
    268b:	51                   	push   %ecx
    268c:	e8 1f ce 00 00       	call   f4b0 <pio_read_32@plt>
    2691:	83 c4 10             	add    $0x10,%esp
    2694:	e9 6e ff ff ff       	jmp    2607 <pci_read_interrupt+0xc7>
    2699:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    26a0:	83 ec 0c             	sub    $0xc,%esp
    26a3:	8b 56 0c             	mov    0xc(%esi),%edx
    26a6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    26a9:	01 d0                	add    %edx,%eax
    26ab:	50                   	push   %eax
    26ac:	e8 ff cd 00 00       	call   f4b0 <pio_read_32@plt>
    26b1:	83 c4 10             	add    $0x10,%esp
    26b4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    26b7:	e9 e6 fe ff ff       	jmp    25a2 <pci_read_interrupt+0x62>
    26bc:	52                   	push   %edx
    26bd:	68 2b 02 00 00       	push   $0x22b
    26c2:	68 97 ef 00 00       	push   $0xef97
    26c7:	68 ac d1 00 00       	push   $0xd1ac
    26cc:	e8 8f ce 00 00       	call   f560 <assert_abort@plt>
    26d1:	51                   	push   %ecx
    26d2:	68 2a 02 00 00       	push   $0x22a
    26d7:	68 97 ef 00 00       	push   $0xef97
    26dc:	68 c3 d1 00 00       	push   $0xd1c3
    26e1:	e8 7a ce 00 00       	call   f560 <assert_abort@plt>
    26e6:	8d 76 00             	lea    0x0(%esi),%esi
    26e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000026f0 <pci_fun_new>:
    26f0:	55                   	push   %ebp
    26f1:	89 e5                	mov    %esp,%ebp
    26f3:	56                   	push   %esi
    26f4:	53                   	push   %ebx
    26f5:	52                   	push   %edx
    26f6:	8b 75 08             	mov    0x8(%ebp),%esi
    26f9:	6a 00                	push   $0x0
    26fb:	6a 01                	push   $0x1
    26fd:	8b 0e                	mov    (%esi),%ecx
    26ff:	51                   	push   %ecx
    2700:	e8 2b 23 00 00       	call   4a30 <ddf_fun_create>
    2705:	83 c4 10             	add    $0x10,%esp
    2708:	85 c0                	test   %eax,%eax
    270a:	74 24                	je     2730 <pci_fun_new+0x40>
    270c:	89 c3                	mov    %eax,%ebx
    270e:	50                   	push   %eax
    270f:	50                   	push   %eax
    2710:	68 28 01 00 00       	push   $0x128
    2715:	53                   	push   %ebx
    2716:	e8 25 24 00 00       	call   4b40 <ddf_fun_data_alloc>
    271b:	83 c4 10             	add    $0x10,%esp
    271e:	85 c0                	test   %eax,%eax
    2720:	74 05                	je     2727 <pci_fun_new+0x37>
    2722:	89 30                	mov    %esi,(%eax)
    2724:	89 58 04             	mov    %ebx,0x4(%eax)
    2727:	8d 65 f8             	lea    -0x8(%ebp),%esp
    272a:	5b                   	pop    %ebx
    272b:	5e                   	pop    %esi
    272c:	5d                   	pop    %ebp
    272d:	c3                   	ret    
    272e:	66 90                	xchg   %ax,%ax
    2730:	31 c0                	xor    %eax,%eax
    2732:	eb f3                	jmp    2727 <pci_fun_new+0x37>
    2734:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    273a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00002740 <pci_fun_init>:
    2740:	55                   	push   %ebp
    2741:	89 e5                	mov    %esp,%ebp
    2743:	57                   	push   %edi
    2744:	56                   	push   %esi
    2745:	53                   	push   %ebx
    2746:	83 ec 28             	sub    $0x28,%esp
    2749:	8b 75 08             	mov    0x8(%ebp),%esi
    274c:	8b 45 10             	mov    0x10(%ebp),%eax
    274f:	8b 4d 14             	mov    0x14(%ebp),%ecx
    2752:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    2755:	8b 3e                	mov    (%esi),%edi
    2757:	89 46 0c             	mov    %eax,0xc(%esi)
    275a:	89 4e 10             	mov    %ecx,0x10(%esi)
    275d:	89 5e 08             	mov    %ebx,0x8(%esi)
    2760:	c1 e1 08             	shl    $0x8,%ecx
    2763:	c1 e0 0b             	shl    $0xb,%eax
    2766:	c1 e3 10             	shl    $0x10,%ebx
    2769:	09 c8                	or     %ecx,%eax
    276b:	09 c3                	or     %eax,%ebx
    276d:	8d 47 20             	lea    0x20(%edi),%eax
    2770:	50                   	push   %eax
    2771:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    2774:	e8 07 d1 00 00       	call   f880 <fibril_mutex_lock@plt>
    2779:	8b 4f 04             	mov    0x4(%edi),%ecx
    277c:	83 c4 10             	add    $0x10,%esp
    277f:	85 c9                	test   %ecx,%ecx
    2781:	0f 84 11 04 00 00    	je     2b98 <pci_fun_init+0x458>
    2787:	50                   	push   %eax
    2788:	50                   	push   %eax
    2789:	89 d8                	mov    %ebx,%eax
    278b:	0d 00 00 00 80       	or     $0x80000000,%eax
    2790:	50                   	push   %eax
    2791:	51                   	push   %ecx
    2792:	e8 c9 ce 00 00       	call   f660 <pio_write_32@plt>
    2797:	8b 57 08             	mov    0x8(%edi),%edx
    279a:	58                   	pop    %eax
    279b:	52                   	push   %edx
    279c:	e8 0f cd 00 00       	call   f4b0 <pio_read_32@plt>
    27a1:	83 c4 10             	add    $0x10,%esp
    27a4:	89 c3                	mov    %eax,%ebx
    27a6:	83 ec 0c             	sub    $0xc,%esp
    27a9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    27ac:	50                   	push   %eax
    27ad:	e8 3e ce 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    27b2:	8b 46 08             	mov    0x8(%esi),%eax
    27b5:	8b 4e 0c             	mov    0xc(%esi),%ecx
    27b8:	c1 e1 0b             	shl    $0xb,%ecx
    27bb:	8b 3e                	mov    (%esi),%edi
    27bd:	c1 e0 10             	shl    $0x10,%eax
    27c0:	66 89 5e 14          	mov    %bx,0x14(%esi)
    27c4:	8b 5e 10             	mov    0x10(%esi),%ebx
    27c7:	09 c8                	or     %ecx,%eax
    27c9:	c1 e3 08             	shl    $0x8,%ebx
    27cc:	09 d8                	or     %ebx,%eax
    27ce:	8d 5f 20             	lea    0x20(%edi),%ebx
    27d1:	89 1c 24             	mov    %ebx,(%esp)
    27d4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    27d7:	e8 a4 d0 00 00       	call   f880 <fibril_mutex_lock@plt>
    27dc:	8b 4f 04             	mov    0x4(%edi),%ecx
    27df:	83 c4 10             	add    $0x10,%esp
    27e2:	85 c9                	test   %ecx,%ecx
    27e4:	0f 84 c6 03 00 00    	je     2bb0 <pci_fun_init+0x470>
    27ea:	50                   	push   %eax
    27eb:	50                   	push   %eax
    27ec:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    27ef:	0d 00 00 00 80       	or     $0x80000000,%eax
    27f4:	50                   	push   %eax
    27f5:	51                   	push   %ecx
    27f6:	e8 65 ce 00 00       	call   f660 <pio_write_32@plt>
    27fb:	58                   	pop    %eax
    27fc:	8b 47 08             	mov    0x8(%edi),%eax
    27ff:	50                   	push   %eax
    2800:	e8 ab cc 00 00       	call   f4b0 <pio_read_32@plt>
    2805:	83 c4 10             	add    $0x10,%esp
    2808:	83 ec 0c             	sub    $0xc,%esp
    280b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    280e:	53                   	push   %ebx
    280f:	e8 dc cd 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    2814:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    2817:	8b 4e 0c             	mov    0xc(%esi),%ecx
    281a:	c1 e8 10             	shr    $0x10,%eax
    281d:	8b 3e                	mov    (%esi),%edi
    281f:	66 89 46 16          	mov    %ax,0x16(%esi)
    2823:	8b 46 08             	mov    0x8(%esi),%eax
    2826:	c1 e1 0b             	shl    $0xb,%ecx
    2829:	8b 5e 10             	mov    0x10(%esi),%ebx
    282c:	c1 e0 10             	shl    $0x10,%eax
    282f:	c1 e3 08             	shl    $0x8,%ebx
    2832:	09 c8                	or     %ecx,%eax
    2834:	83 c8 04             	or     $0x4,%eax
    2837:	09 c3                	or     %eax,%ebx
    2839:	8d 47 20             	lea    0x20(%edi),%eax
    283c:	89 04 24             	mov    %eax,(%esp)
    283f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    2842:	e8 39 d0 00 00       	call   f880 <fibril_mutex_lock@plt>
    2847:	8b 4f 04             	mov    0x4(%edi),%ecx
    284a:	83 c4 10             	add    $0x10,%esp
    284d:	85 c9                	test   %ecx,%ecx
    284f:	0f 84 7b 03 00 00    	je     2bd0 <pci_fun_init+0x490>
    2855:	50                   	push   %eax
    2856:	50                   	push   %eax
    2857:	89 d8                	mov    %ebx,%eax
    2859:	0d 00 00 00 80       	or     $0x80000000,%eax
    285e:	50                   	push   %eax
    285f:	51                   	push   %ecx
    2860:	e8 fb cd 00 00       	call   f660 <pio_write_32@plt>
    2865:	58                   	pop    %eax
    2866:	8b 47 08             	mov    0x8(%edi),%eax
    2869:	50                   	push   %eax
    286a:	e8 41 cc 00 00       	call   f4b0 <pio_read_32@plt>
    286f:	83 c4 10             	add    $0x10,%esp
    2872:	89 c3                	mov    %eax,%ebx
    2874:	83 ec 0c             	sub    $0xc,%esp
    2877:	8b 7d e4             	mov    -0x1c(%ebp),%edi
    287a:	57                   	push   %edi
    287b:	e8 70 cd 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    2880:	89 d8                	mov    %ebx,%eax
    2882:	8b 4e 0c             	mov    0xc(%esi),%ecx
    2885:	83 c8 04             	or     $0x4,%eax
    2888:	8b 3e                	mov    (%esi),%edi
    288a:	66 89 46 18          	mov    %ax,0x18(%esi)
    288e:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)
    2892:	c1 e1 0b             	shl    $0xb,%ecx
    2895:	8b 46 08             	mov    0x8(%esi),%eax
    2898:	c1 e0 10             	shl    $0x10,%eax
    289b:	09 c8                	or     %ecx,%eax
    289d:	8b 4e 10             	mov    0x10(%esi),%ecx
    28a0:	c1 e1 08             	shl    $0x8,%ecx
    28a3:	83 c8 04             	or     $0x4,%eax
    28a6:	09 c8                	or     %ecx,%eax
    28a8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    28ab:	89 c3                	mov    %eax,%ebx
    28ad:	8d 47 20             	lea    0x20(%edi),%eax
    28b0:	89 04 24             	mov    %eax,(%esp)
    28b3:	89 45 dc             	mov    %eax,-0x24(%ebp)
    28b6:	e8 c5 cf 00 00       	call   f880 <fibril_mutex_lock@plt>
    28bb:	8b 47 04             	mov    0x4(%edi),%eax
    28be:	83 c4 10             	add    $0x10,%esp
    28c1:	85 c0                	test   %eax,%eax
    28c3:	0f 84 37 02 00 00    	je     2b00 <pci_fun_init+0x3c0>
    28c9:	89 d9                	mov    %ebx,%ecx
    28cb:	52                   	push   %edx
    28cc:	81 c9 00 00 00 80    	or     $0x80000000,%ecx
    28d2:	52                   	push   %edx
    28d3:	51                   	push   %ecx
    28d4:	50                   	push   %eax
    28d5:	e8 86 cd 00 00       	call   f660 <pio_write_32@plt>
    28da:	8b 5f 08             	mov    0x8(%edi),%ebx
    28dd:	59                   	pop    %ecx
    28de:	53                   	push   %ebx
    28df:	e8 cc cb 00 00       	call   f4b0 <pio_read_32@plt>
    28e4:	83 c4 10             	add    $0x10,%esp
    28e7:	31 db                	xor    %ebx,%ebx
    28e9:	25 00 00 ff ff       	and    $0xffff0000,%eax
    28ee:	66 8b 5d e2          	mov    -0x1e(%ebp),%bx
    28f2:	09 c3                	or     %eax,%ebx
    28f4:	8b 47 04             	mov    0x4(%edi),%eax
    28f7:	85 c0                	test   %eax,%eax
    28f9:	0f 84 e1 01 00 00    	je     2ae0 <pci_fun_init+0x3a0>
    28ff:	51                   	push   %ecx
    2900:	51                   	push   %ecx
    2901:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    2904:	81 c9 00 00 00 80    	or     $0x80000000,%ecx
    290a:	51                   	push   %ecx
    290b:	50                   	push   %eax
    290c:	e8 4f cd 00 00       	call   f660 <pio_write_32@plt>
    2911:	8b 4f 08             	mov    0x8(%edi),%ecx
    2914:	58                   	pop    %eax
    2915:	5a                   	pop    %edx
    2916:	53                   	push   %ebx
    2917:	51                   	push   %ecx
    2918:	e8 43 cd 00 00       	call   f660 <pio_write_32@plt>
    291d:	83 c4 10             	add    $0x10,%esp
    2920:	83 ec 0c             	sub    $0xc,%esp
    2923:	8b 45 dc             	mov    -0x24(%ebp),%eax
    2926:	50                   	push   %eax
    2927:	e8 c4 cc 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    292c:	8b 46 08             	mov    0x8(%esi),%eax
    292f:	8b 4e 0c             	mov    0xc(%esi),%ecx
    2932:	c1 e1 0b             	shl    $0xb,%ecx
    2935:	8b 3e                	mov    (%esi),%edi
    2937:	c1 e0 10             	shl    $0x10,%eax
    293a:	8b 5e 10             	mov    0x10(%esi),%ebx
    293d:	c1 e3 08             	shl    $0x8,%ebx
    2940:	09 c8                	or     %ecx,%eax
    2942:	83 c8 08             	or     $0x8,%eax
    2945:	09 d8                	or     %ebx,%eax
    2947:	8d 5f 20             	lea    0x20(%edi),%ebx
    294a:	89 1c 24             	mov    %ebx,(%esp)
    294d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    2950:	e8 2b cf 00 00       	call   f880 <fibril_mutex_lock@plt>
    2955:	8b 4f 04             	mov    0x4(%edi),%ecx
    2958:	83 c4 10             	add    $0x10,%esp
    295b:	85 c9                	test   %ecx,%ecx
    295d:	0f 84 bd 01 00 00    	je     2b20 <pci_fun_init+0x3e0>
    2963:	50                   	push   %eax
    2964:	50                   	push   %eax
    2965:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    2968:	0d 00 00 00 80       	or     $0x80000000,%eax
    296d:	50                   	push   %eax
    296e:	51                   	push   %ecx
    296f:	e8 ec cc 00 00       	call   f660 <pio_write_32@plt>
    2974:	58                   	pop    %eax
    2975:	8b 47 08             	mov    0x8(%edi),%eax
    2978:	50                   	push   %eax
    2979:	e8 32 cb 00 00       	call   f4b0 <pio_read_32@plt>
    297e:	83 c4 10             	add    $0x10,%esp
    2981:	83 ec 0c             	sub    $0xc,%esp
    2984:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    2987:	53                   	push   %ebx
    2988:	e8 63 cc 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    298d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    2990:	8b 4e 0c             	mov    0xc(%esi),%ecx
    2993:	c1 e8 18             	shr    $0x18,%eax
    2996:	8b 3e                	mov    (%esi),%edi
    2998:	88 46 1a             	mov    %al,0x1a(%esi)
    299b:	8b 46 08             	mov    0x8(%esi),%eax
    299e:	c1 e1 0b             	shl    $0xb,%ecx
    29a1:	8b 5e 10             	mov    0x10(%esi),%ebx
    29a4:	c1 e0 10             	shl    $0x10,%eax
    29a7:	c1 e3 08             	shl    $0x8,%ebx
    29aa:	09 c8                	or     %ecx,%eax
    29ac:	83 c8 08             	or     $0x8,%eax
    29af:	09 d8                	or     %ebx,%eax
    29b1:	8d 5f 20             	lea    0x20(%edi),%ebx
    29b4:	89 1c 24             	mov    %ebx,(%esp)
    29b7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    29ba:	e8 c1 ce 00 00       	call   f880 <fibril_mutex_lock@plt>
    29bf:	8b 4f 04             	mov    0x4(%edi),%ecx
    29c2:	83 c4 10             	add    $0x10,%esp
    29c5:	85 c9                	test   %ecx,%ecx
    29c7:	0f 84 73 01 00 00    	je     2b40 <pci_fun_init+0x400>
    29cd:	50                   	push   %eax
    29ce:	50                   	push   %eax
    29cf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    29d2:	0d 00 00 00 80       	or     $0x80000000,%eax
    29d7:	50                   	push   %eax
    29d8:	51                   	push   %ecx
    29d9:	e8 82 cc 00 00       	call   f660 <pio_write_32@plt>
    29de:	58                   	pop    %eax
    29df:	8b 47 08             	mov    0x8(%edi),%eax
    29e2:	50                   	push   %eax
    29e3:	e8 c8 ca 00 00       	call   f4b0 <pio_read_32@plt>
    29e8:	83 c4 10             	add    $0x10,%esp
    29eb:	83 ec 0c             	sub    $0xc,%esp
    29ee:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    29f1:	53                   	push   %ebx
    29f2:	e8 f9 cb 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    29f7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    29fa:	8b 4e 0c             	mov    0xc(%esi),%ecx
    29fd:	c1 e8 10             	shr    $0x10,%eax
    2a00:	8b 3e                	mov    (%esi),%edi
    2a02:	88 46 1b             	mov    %al,0x1b(%esi)
    2a05:	8b 46 08             	mov    0x8(%esi),%eax
    2a08:	c1 e1 0b             	shl    $0xb,%ecx
    2a0b:	8b 5e 10             	mov    0x10(%esi),%ebx
    2a0e:	c1 e0 10             	shl    $0x10,%eax
    2a11:	c1 e3 08             	shl    $0x8,%ebx
    2a14:	09 c8                	or     %ecx,%eax
    2a16:	83 c8 08             	or     $0x8,%eax
    2a19:	09 d8                	or     %ebx,%eax
    2a1b:	8d 5f 20             	lea    0x20(%edi),%ebx
    2a1e:	89 1c 24             	mov    %ebx,(%esp)
    2a21:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    2a24:	e8 57 ce 00 00       	call   f880 <fibril_mutex_lock@plt>
    2a29:	8b 4f 04             	mov    0x4(%edi),%ecx
    2a2c:	83 c4 10             	add    $0x10,%esp
    2a2f:	85 c9                	test   %ecx,%ecx
    2a31:	0f 84 29 01 00 00    	je     2b60 <pci_fun_init+0x420>
    2a37:	50                   	push   %eax
    2a38:	50                   	push   %eax
    2a39:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    2a3c:	0d 00 00 00 80       	or     $0x80000000,%eax
    2a41:	50                   	push   %eax
    2a42:	51                   	push   %ecx
    2a43:	e8 18 cc 00 00       	call   f660 <pio_write_32@plt>
    2a48:	58                   	pop    %eax
    2a49:	8b 47 08             	mov    0x8(%edi),%eax
    2a4c:	50                   	push   %eax
    2a4d:	e8 5e ca 00 00       	call   f4b0 <pio_read_32@plt>
    2a52:	83 c4 10             	add    $0x10,%esp
    2a55:	83 ec 0c             	sub    $0xc,%esp
    2a58:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    2a5b:	53                   	push   %ebx
    2a5c:	e8 8f cb 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    2a61:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    2a64:	8b 4e 0c             	mov    0xc(%esi),%ecx
    2a67:	c1 e8 08             	shr    $0x8,%eax
    2a6a:	8b 3e                	mov    (%esi),%edi
    2a6c:	88 46 1c             	mov    %al,0x1c(%esi)
    2a6f:	8b 46 08             	mov    0x8(%esi),%eax
    2a72:	c1 e1 0b             	shl    $0xb,%ecx
    2a75:	8b 5e 10             	mov    0x10(%esi),%ebx
    2a78:	c1 e0 10             	shl    $0x10,%eax
    2a7b:	c1 e3 08             	shl    $0x8,%ebx
    2a7e:	09 c8                	or     %ecx,%eax
    2a80:	83 c8 08             	or     $0x8,%eax
    2a83:	09 c3                	or     %eax,%ebx
    2a85:	8d 47 20             	lea    0x20(%edi),%eax
    2a88:	89 04 24             	mov    %eax,(%esp)
    2a8b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    2a8e:	e8 ed cd 00 00       	call   f880 <fibril_mutex_lock@plt>
    2a93:	8b 4f 04             	mov    0x4(%edi),%ecx
    2a96:	83 c4 10             	add    $0x10,%esp
    2a99:	85 c9                	test   %ecx,%ecx
    2a9b:	0f 84 df 00 00 00    	je     2b80 <pci_fun_init+0x440>
    2aa1:	89 d8                	mov    %ebx,%eax
    2aa3:	52                   	push   %edx
    2aa4:	0d 00 00 00 80       	or     $0x80000000,%eax
    2aa9:	52                   	push   %edx
    2aaa:	50                   	push   %eax
    2aab:	51                   	push   %ecx
    2aac:	e8 af cb 00 00       	call   f660 <pio_write_32@plt>
    2ab1:	8b 5f 08             	mov    0x8(%edi),%ebx
    2ab4:	59                   	pop    %ecx
    2ab5:	53                   	push   %ebx
    2ab6:	e8 f5 c9 00 00       	call   f4b0 <pio_read_32@plt>
    2abb:	83 c4 10             	add    $0x10,%esp
    2abe:	89 c3                	mov    %eax,%ebx
    2ac0:	83 ec 0c             	sub    $0xc,%esp
    2ac3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    2ac6:	50                   	push   %eax
    2ac7:	e8 24 cb 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    2acc:	88 5e 1d             	mov    %bl,0x1d(%esi)
    2acf:	83 c4 10             	add    $0x10,%esp
    2ad2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2ad5:	5b                   	pop    %ebx
    2ad6:	5e                   	pop    %esi
    2ad7:	5f                   	pop    %edi
    2ad8:	5d                   	pop    %ebp
    2ad9:	c3                   	ret    
    2ada:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2ae0:	50                   	push   %eax
    2ae1:	50                   	push   %eax
    2ae2:	8b 57 0c             	mov    0xc(%edi),%edx
    2ae5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    2ae8:	01 d0                	add    %edx,%eax
    2aea:	53                   	push   %ebx
    2aeb:	50                   	push   %eax
    2aec:	e8 6f cb 00 00       	call   f660 <pio_write_32@plt>
    2af1:	83 c4 10             	add    $0x10,%esp
    2af4:	e9 27 fe ff ff       	jmp    2920 <pci_fun_init+0x1e0>
    2af9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    2b00:	83 ec 0c             	sub    $0xc,%esp
    2b03:	8b 5f 0c             	mov    0xc(%edi),%ebx
    2b06:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    2b09:	01 d8                	add    %ebx,%eax
    2b0b:	50                   	push   %eax
    2b0c:	e8 9f c9 00 00       	call   f4b0 <pio_read_32@plt>
    2b11:	83 c4 10             	add    $0x10,%esp
    2b14:	e9 ce fd ff ff       	jmp    28e7 <pci_fun_init+0x1a7>
    2b19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    2b20:	83 ec 0c             	sub    $0xc,%esp
    2b23:	8b 57 0c             	mov    0xc(%edi),%edx
    2b26:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    2b29:	01 d0                	add    %edx,%eax
    2b2b:	50                   	push   %eax
    2b2c:	e8 7f c9 00 00       	call   f4b0 <pio_read_32@plt>
    2b31:	83 c4 10             	add    $0x10,%esp
    2b34:	e9 48 fe ff ff       	jmp    2981 <pci_fun_init+0x241>
    2b39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    2b40:	83 ec 0c             	sub    $0xc,%esp
    2b43:	8b 57 0c             	mov    0xc(%edi),%edx
    2b46:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    2b49:	01 d0                	add    %edx,%eax
    2b4b:	50                   	push   %eax
    2b4c:	e8 5f c9 00 00       	call   f4b0 <pio_read_32@plt>
    2b51:	83 c4 10             	add    $0x10,%esp
    2b54:	e9 92 fe ff ff       	jmp    29eb <pci_fun_init+0x2ab>
    2b59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    2b60:	83 ec 0c             	sub    $0xc,%esp
    2b63:	8b 57 0c             	mov    0xc(%edi),%edx
    2b66:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    2b69:	01 d0                	add    %edx,%eax
    2b6b:	50                   	push   %eax
    2b6c:	e8 3f c9 00 00       	call   f4b0 <pio_read_32@plt>
    2b71:	83 c4 10             	add    $0x10,%esp
    2b74:	e9 dc fe ff ff       	jmp    2a55 <pci_fun_init+0x315>
    2b79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    2b80:	83 ec 0c             	sub    $0xc,%esp
    2b83:	8b 47 0c             	mov    0xc(%edi),%eax
    2b86:	01 d8                	add    %ebx,%eax
    2b88:	50                   	push   %eax
    2b89:	e8 22 c9 00 00       	call   f4b0 <pio_read_32@plt>
    2b8e:	83 c4 10             	add    $0x10,%esp
    2b91:	89 c3                	mov    %eax,%ebx
    2b93:	e9 28 ff ff ff       	jmp    2ac0 <pci_fun_init+0x380>
    2b98:	83 ec 0c             	sub    $0xc,%esp
    2b9b:	8b 47 0c             	mov    0xc(%edi),%eax
    2b9e:	01 d8                	add    %ebx,%eax
    2ba0:	50                   	push   %eax
    2ba1:	e8 0a c9 00 00       	call   f4b0 <pio_read_32@plt>
    2ba6:	83 c4 10             	add    $0x10,%esp
    2ba9:	89 c3                	mov    %eax,%ebx
    2bab:	e9 f6 fb ff ff       	jmp    27a6 <pci_fun_init+0x66>
    2bb0:	83 ec 0c             	sub    $0xc,%esp
    2bb3:	8b 57 0c             	mov    0xc(%edi),%edx
    2bb6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    2bb9:	01 d0                	add    %edx,%eax
    2bbb:	50                   	push   %eax
    2bbc:	e8 ef c8 00 00       	call   f4b0 <pio_read_32@plt>
    2bc1:	83 c4 10             	add    $0x10,%esp
    2bc4:	e9 3f fc ff ff       	jmp    2808 <pci_fun_init+0xc8>
    2bc9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    2bd0:	83 ec 0c             	sub    $0xc,%esp
    2bd3:	8b 47 0c             	mov    0xc(%edi),%eax
    2bd6:	01 d8                	add    %ebx,%eax
    2bd8:	50                   	push   %eax
    2bd9:	e8 d2 c8 00 00       	call   f4b0 <pio_read_32@plt>
    2bde:	83 c4 10             	add    $0x10,%esp
    2be1:	89 c3                	mov    %eax,%ebx
    2be3:	e9 8c fc ff ff       	jmp    2874 <pci_fun_init+0x134>
    2be8:	90                   	nop
    2be9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00002bf0 <pci_bus_scan>:
    2bf0:	55                   	push   %ebp
    2bf1:	89 e5                	mov    %esp,%ebp
    2bf3:	57                   	push   %edi
    2bf4:	56                   	push   %esi
    2bf5:	53                   	push   %ebx
    2bf6:	83 ec 5c             	sub    $0x5c,%esp
    2bf9:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%ebp)
    2c00:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
    2c07:	90                   	nop
    2c08:	8b 45 08             	mov    0x8(%ebp),%eax
    2c0b:	52                   	push   %edx
    2c0c:	6a 00                	push   $0x0
    2c0e:	6a 01                	push   $0x1
    2c10:	8b 08                	mov    (%eax),%ecx
    2c12:	51                   	push   %ecx
    2c13:	e8 18 1e 00 00       	call   4a30 <ddf_fun_create>
    2c18:	83 c4 10             	add    $0x10,%esp
    2c1b:	89 c6                	mov    %eax,%esi
    2c1d:	85 c0                	test   %eax,%eax
    2c1f:	0f 84 94 06 00 00    	je     32b9 <pci_bus_scan+0x6c9>
    2c25:	50                   	push   %eax
    2c26:	50                   	push   %eax
    2c27:	68 28 01 00 00       	push   $0x128
    2c2c:	56                   	push   %esi
    2c2d:	e8 0e 1f 00 00       	call   4b40 <ddf_fun_data_alloc>
    2c32:	83 c4 10             	add    $0x10,%esp
    2c35:	89 c3                	mov    %eax,%ebx
    2c37:	85 c0                	test   %eax,%eax
    2c39:	0f 84 7a 06 00 00    	je     32b9 <pci_bus_scan+0x6c9>
    2c3f:	8b 45 08             	mov    0x8(%ebp),%eax
    2c42:	89 73 04             	mov    %esi,0x4(%ebx)
    2c45:	89 03                	mov    %eax,(%ebx)
    2c47:	8b 45 b8             	mov    -0x48(%ebp),%eax
    2c4a:	50                   	push   %eax
    2c4b:	8b 45 ac             	mov    -0x54(%ebp),%eax
    2c4e:	50                   	push   %eax
    2c4f:	8b 45 0c             	mov    0xc(%ebp),%eax
    2c52:	50                   	push   %eax
    2c53:	53                   	push   %ebx
    2c54:	e8 e7 fa ff ff       	call   2740 <pci_fun_init>
    2c59:	83 c4 10             	add    $0x10,%esp
    2c5c:	66 83 7b 14 ff       	cmpw   $0xffff,0x14(%ebx)
    2c61:	0f 84 91 07 00 00    	je     33f8 <pci_bus_scan+0x808>
    2c67:	8b 53 08             	mov    0x8(%ebx),%edx
    2c6a:	8b 43 0c             	mov    0xc(%ebx),%eax
    2c6d:	c1 e2 10             	shl    $0x10,%edx
    2c70:	8b 3b                	mov    (%ebx),%edi
    2c72:	c1 e0 0b             	shl    $0xb,%eax
    2c75:	83 ec 0c             	sub    $0xc,%esp
    2c78:	09 d0                	or     %edx,%eax
    2c7a:	8d 77 20             	lea    0x20(%edi),%esi
    2c7d:	83 c8 0c             	or     $0xc,%eax
    2c80:	89 c2                	mov    %eax,%edx
    2c82:	8b 43 10             	mov    0x10(%ebx),%eax
    2c85:	c1 e0 08             	shl    $0x8,%eax
    2c88:	56                   	push   %esi
    2c89:	09 c2                	or     %eax,%edx
    2c8b:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    2c8e:	e8 ed cb 00 00       	call   f880 <fibril_mutex_lock@plt>
    2c93:	8b 47 04             	mov    0x4(%edi),%eax
    2c96:	83 c4 10             	add    $0x10,%esp
    2c99:	85 c0                	test   %eax,%eax
    2c9b:	0f 84 e7 07 00 00    	je     3488 <pci_bus_scan+0x898>
    2ca1:	52                   	push   %edx
    2ca2:	52                   	push   %edx
    2ca3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    2ca6:	81 ca 00 00 00 80    	or     $0x80000000,%edx
    2cac:	52                   	push   %edx
    2cad:	50                   	push   %eax
    2cae:	e8 ad c9 00 00       	call   f660 <pio_write_32@plt>
    2cb3:	8b 7f 08             	mov    0x8(%edi),%edi
    2cb6:	59                   	pop    %ecx
    2cb7:	57                   	push   %edi
    2cb8:	e8 f3 c7 00 00       	call   f4b0 <pio_read_32@plt>
    2cbd:	83 c4 10             	add    $0x10,%esp
    2cc0:	c1 e8 10             	shr    $0x10,%eax
    2cc3:	83 ec 0c             	sub    $0xc,%esp
    2cc6:	89 c7                	mov    %eax,%edi
    2cc8:	89 45 a4             	mov    %eax,-0x5c(%ebp)
    2ccb:	56                   	push   %esi
    2ccc:	e8 1f c9 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    2cd1:	8b 55 b8             	mov    -0x48(%ebp),%edx
    2cd4:	83 c4 10             	add    $0x10,%esp
    2cd7:	b0 01                	mov    $0x1,%al
    2cd9:	85 d2                	test   %edx,%edx
    2cdb:	75 05                	jne    2ce2 <pci_bus_scan+0xf2>
    2cdd:	89 f8                	mov    %edi,%eax
    2cdf:	c0 e8 07             	shr    $0x7,%al
    2ce2:	83 ec 0c             	sub    $0xc,%esp
    2ce5:	83 e0 01             	and    $0x1,%eax
    2ce8:	88 45 ab             	mov    %al,-0x55(%ebp)
    2ceb:	8b 43 10             	mov    0x10(%ebx),%eax
    2cee:	50                   	push   %eax
    2cef:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    2cf6:	8b 43 0c             	mov    0xc(%ebx),%eax
    2cf9:	50                   	push   %eax
    2cfa:	8b 43 08             	mov    0x8(%ebx),%eax
    2cfd:	50                   	push   %eax
    2cfe:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    2d01:	68 f1 d1 00 00       	push   $0xd1f1
    2d06:	50                   	push   %eax
    2d07:	e8 f4 c9 00 00       	call   f700 <asprintf@plt>
    2d0c:	8b 7d e4             	mov    -0x1c(%ebp),%edi
    2d0f:	83 c4 20             	add    $0x20,%esp
    2d12:	85 ff                	test   %edi,%edi
    2d14:	0f 84 c8 08 00 00    	je     35e2 <pci_bus_scan+0x9f2>
    2d1a:	50                   	push   %eax
    2d1b:	50                   	push   %eax
    2d1c:	8b 43 04             	mov    0x4(%ebx),%eax
    2d1f:	57                   	push   %edi
    2d20:	50                   	push   %eax
    2d21:	e8 9a 1c 00 00       	call   49c0 <ddf_fun_set_name>
    2d26:	89 c6                	mov    %eax,%esi
    2d28:	89 3c 24             	mov    %edi,(%esp)
    2d2b:	e8 30 cb 00 00       	call   f860 <free@plt>
    2d30:	83 c4 10             	add    $0x10,%esp
    2d33:	85 f6                	test   %esi,%esi
    2d35:	0f 85 56 08 00 00    	jne    3591 <pci_bus_scan+0x9a1>
    2d3b:	8d 43 28             	lea    0x28(%ebx),%eax
    2d3e:	c7 45 d4 10 00 00 00 	movl   $0x10,-0x2c(%ebp)
    2d45:	89 43 24             	mov    %eax,0x24(%ebx)
    2d48:	89 df                	mov    %ebx,%edi
    2d4a:	e9 12 01 00 00       	jmp    2e61 <pci_bus_scan+0x271>
    2d4f:	90                   	nop
    2d50:	89 d0                	mov    %edx,%eax
    2d52:	d1 e8                	shr    %eax
    2d54:	83 e0 03             	and    $0x3,%eax
    2d57:	0f 84 0b 05 00 00    	je     3268 <pci_bus_scan+0x678>
    2d5d:	83 f8 02             	cmp    $0x2,%eax
    2d60:	0f 85 f7 02 00 00    	jne    305d <pci_bus_scan+0x46d>
    2d66:	c6 45 c8 01          	movb   $0x1,-0x38(%ebp)
    2d6a:	c7 45 bc f0 ff ff ff 	movl   $0xfffffff0,-0x44(%ebp)
    2d71:	8b 77 08             	mov    0x8(%edi),%esi
    2d74:	8b 47 0c             	mov    0xc(%edi),%eax
    2d77:	c1 e0 0b             	shl    $0xb,%eax
    2d7a:	8b 5d d0             	mov    -0x30(%ebp),%ebx
    2d7d:	c1 e6 10             	shl    $0x10,%esi
    2d80:	83 ec 0c             	sub    $0xc,%esp
    2d83:	09 c6                	or     %eax,%esi
    2d85:	8b 47 10             	mov    0x10(%edi),%eax
    2d88:	c1 e0 08             	shl    $0x8,%eax
    2d8b:	09 c6                	or     %eax,%esi
    2d8d:	09 de                	or     %ebx,%esi
    2d8f:	8b 1f                	mov    (%edi),%ebx
    2d91:	8d 43 20             	lea    0x20(%ebx),%eax
    2d94:	50                   	push   %eax
    2d95:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    2d98:	e8 e3 ca 00 00       	call   f880 <fibril_mutex_lock@plt>
    2d9d:	8b 4b 04             	mov    0x4(%ebx),%ecx
    2da0:	83 c4 10             	add    $0x10,%esp
    2da3:	85 c9                	test   %ecx,%ecx
    2da5:	0f 84 dd 04 00 00    	je     3288 <pci_bus_scan+0x698>
    2dab:	81 ce 00 00 00 80    	or     $0x80000000,%esi
    2db1:	50                   	push   %eax
    2db2:	50                   	push   %eax
    2db3:	56                   	push   %esi
    2db4:	51                   	push   %ecx
    2db5:	e8 a6 c8 00 00       	call   f660 <pio_write_32@plt>
    2dba:	8b 4b 08             	mov    0x8(%ebx),%ecx
    2dbd:	58                   	pop    %eax
    2dbe:	5a                   	pop    %edx
    2dbf:	6a ff                	push   $0xffffffff
    2dc1:	51                   	push   %ecx
    2dc2:	e8 99 c8 00 00       	call   f660 <pio_write_32@plt>
    2dc7:	83 c4 10             	add    $0x10,%esp
    2dca:	83 ec 0c             	sub    $0xc,%esp
    2dcd:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
    2dd0:	51                   	push   %ecx
    2dd1:	e8 1a c8 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    2dd6:	8b 77 08             	mov    0x8(%edi),%esi
    2dd9:	8b 47 0c             	mov    0xc(%edi),%eax
    2ddc:	c1 e0 0b             	shl    $0xb,%eax
    2ddf:	8b 5d d0             	mov    -0x30(%ebp),%ebx
    2de2:	c1 e6 10             	shl    $0x10,%esi
    2de5:	09 c6                	or     %eax,%esi
    2de7:	8b 47 10             	mov    0x10(%edi),%eax
    2dea:	c1 e0 08             	shl    $0x8,%eax
    2ded:	09 c6                	or     %eax,%esi
    2def:	09 de                	or     %ebx,%esi
    2df1:	8b 1f                	mov    (%edi),%ebx
    2df3:	8d 43 20             	lea    0x20(%ebx),%eax
    2df6:	89 04 24             	mov    %eax,(%esp)
    2df9:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    2dfc:	e8 7f ca 00 00       	call   f880 <fibril_mutex_lock@plt>
    2e01:	8b 4b 04             	mov    0x4(%ebx),%ecx
    2e04:	83 c4 10             	add    $0x10,%esp
    2e07:	85 c9                	test   %ecx,%ecx
    2e09:	0f 84 c9 04 00 00    	je     32d8 <pci_bus_scan+0x6e8>
    2e0f:	81 ce 00 00 00 80    	or     $0x80000000,%esi
    2e15:	50                   	push   %eax
    2e16:	50                   	push   %eax
    2e17:	56                   	push   %esi
    2e18:	51                   	push   %ecx
    2e19:	e8 42 c8 00 00       	call   f660 <pio_write_32@plt>
    2e1e:	8b 53 08             	mov    0x8(%ebx),%edx
    2e21:	58                   	pop    %eax
    2e22:	52                   	push   %edx
    2e23:	e8 88 c6 00 00       	call   f4b0 <pio_read_32@plt>
    2e28:	83 c4 10             	add    $0x10,%esp
    2e2b:	89 c6                	mov    %eax,%esi
    2e2d:	83 ec 0c             	sub    $0xc,%esp
    2e30:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    2e33:	50                   	push   %eax
    2e34:	e8 b7 c7 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    2e39:	83 c4 10             	add    $0x10,%esp
    2e3c:	85 f6                	test   %esi,%esi
    2e3e:	0f 85 b4 00 00 00    	jne    2ef8 <pci_bus_scan+0x308>
    2e44:	80 7d c8 01          	cmpb   $0x1,-0x38(%ebp)
    2e48:	19 c0                	sbb    %eax,%eax
    2e4a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    2e4d:	83 e0 fc             	and    $0xfffffffc,%eax
    2e50:	8d 44 10 08          	lea    0x8(%eax,%edx,1),%eax
    2e54:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    2e57:	83 7d d4 24          	cmpl   $0x24,-0x2c(%ebp)
    2e5b:	0f 8f 0f 02 00 00    	jg     3070 <pci_bus_scan+0x480>
    2e61:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    2e64:	8b 77 08             	mov    0x8(%edi),%esi
    2e67:	83 e0 fc             	and    $0xfffffffc,%eax
    2e6a:	8b 1f                	mov    (%edi),%ebx
    2e6c:	89 c2                	mov    %eax,%edx
    2e6e:	89 45 d0             	mov    %eax,-0x30(%ebp)
    2e71:	8b 47 0c             	mov    0xc(%edi),%eax
    2e74:	83 ec 0c             	sub    $0xc,%esp
    2e77:	c1 e0 0b             	shl    $0xb,%eax
    2e7a:	c1 e6 10             	shl    $0x10,%esi
    2e7d:	09 c6                	or     %eax,%esi
    2e7f:	8b 47 10             	mov    0x10(%edi),%eax
    2e82:	c1 e0 08             	shl    $0x8,%eax
    2e85:	09 c6                	or     %eax,%esi
    2e87:	8d 43 20             	lea    0x20(%ebx),%eax
    2e8a:	50                   	push   %eax
    2e8b:	09 d6                	or     %edx,%esi
    2e8d:	89 45 c8             	mov    %eax,-0x38(%ebp)
    2e90:	e8 eb c9 00 00       	call   f880 <fibril_mutex_lock@plt>
    2e95:	8b 43 04             	mov    0x4(%ebx),%eax
    2e98:	83 c4 10             	add    $0x10,%esp
    2e9b:	85 c0                	test   %eax,%eax
    2e9d:	0f 84 fd 03 00 00    	je     32a0 <pci_bus_scan+0x6b0>
    2ea3:	81 ce 00 00 00 80    	or     $0x80000000,%esi
    2ea9:	52                   	push   %edx
    2eaa:	52                   	push   %edx
    2eab:	56                   	push   %esi
    2eac:	50                   	push   %eax
    2ead:	e8 ae c7 00 00       	call   f660 <pio_write_32@plt>
    2eb2:	8b 5b 08             	mov    0x8(%ebx),%ebx
    2eb5:	59                   	pop    %ecx
    2eb6:	53                   	push   %ebx
    2eb7:	e8 f4 c5 00 00       	call   f4b0 <pio_read_32@plt>
    2ebc:	83 c4 10             	add    $0x10,%esp
    2ebf:	89 45 cc             	mov    %eax,-0x34(%ebp)
    2ec2:	83 ec 0c             	sub    $0xc,%esp
    2ec5:	8b 75 c8             	mov    -0x38(%ebp),%esi
    2ec8:	56                   	push   %esi
    2ec9:	e8 22 c7 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    2ece:	8b 55 cc             	mov    -0x34(%ebp),%edx
    2ed1:	83 c4 10             	add    $0x10,%esp
    2ed4:	89 d0                	mov    %edx,%eax
    2ed6:	83 e0 01             	and    $0x1,%eax
    2ed9:	89 45 c0             	mov    %eax,-0x40(%ebp)
    2edc:	0f 84 6e fe ff ff    	je     2d50 <pci_bus_scan+0x160>
    2ee2:	c6 45 c8 00          	movb   $0x0,-0x38(%ebp)
    2ee6:	c7 45 bc fc ff ff ff 	movl   $0xfffffffc,-0x44(%ebp)
    2eed:	e9 7f fe ff ff       	jmp    2d71 <pci_bus_scan+0x181>
    2ef2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2ef8:	8b 45 bc             	mov    -0x44(%ebp),%eax
    2efb:	8b 1f                	mov    (%edi),%ebx
    2efd:	21 c6                	and    %eax,%esi
    2eff:	8b 47 0c             	mov    0xc(%edi),%eax
    2f02:	89 75 c4             	mov    %esi,-0x3c(%ebp)
    2f05:	8b 77 08             	mov    0x8(%edi),%esi
    2f08:	c1 e0 0b             	shl    $0xb,%eax
    2f0b:	83 ec 0c             	sub    $0xc,%esp
    2f0e:	c1 e6 10             	shl    $0x10,%esi
    2f11:	09 c6                	or     %eax,%esi
    2f13:	8b 47 10             	mov    0x10(%edi),%eax
    2f16:	c1 e0 08             	shl    $0x8,%eax
    2f19:	09 c6                	or     %eax,%esi
    2f1b:	8b 45 d0             	mov    -0x30(%ebp),%eax
    2f1e:	09 c6                	or     %eax,%esi
    2f20:	8d 43 20             	lea    0x20(%ebx),%eax
    2f23:	50                   	push   %eax
    2f24:	89 45 bc             	mov    %eax,-0x44(%ebp)
    2f27:	e8 54 c9 00 00       	call   f880 <fibril_mutex_lock@plt>
    2f2c:	8b 4b 04             	mov    0x4(%ebx),%ecx
    2f2f:	83 c4 10             	add    $0x10,%esp
    2f32:	85 c9                	test   %ecx,%ecx
    2f34:	0f 84 9e 04 00 00    	je     33d8 <pci_bus_scan+0x7e8>
    2f3a:	81 ce 00 00 00 80    	or     $0x80000000,%esi
    2f40:	50                   	push   %eax
    2f41:	50                   	push   %eax
    2f42:	56                   	push   %esi
    2f43:	51                   	push   %ecx
    2f44:	e8 17 c7 00 00       	call   f660 <pio_write_32@plt>
    2f49:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    2f4c:	8b 5b 08             	mov    0x8(%ebx),%ebx
    2f4f:	58                   	pop    %eax
    2f50:	5a                   	pop    %edx
    2f51:	51                   	push   %ecx
    2f52:	53                   	push   %ebx
    2f53:	e8 08 c7 00 00       	call   f660 <pio_write_32@plt>
    2f58:	83 c4 10             	add    $0x10,%esp
    2f5b:	83 ec 0c             	sub    $0xc,%esp
    2f5e:	8b 75 bc             	mov    -0x44(%ebp),%esi
    2f61:	56                   	push   %esi
    2f62:	e8 89 c6 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    2f67:	8b 5f 08             	mov    0x8(%edi),%ebx
    2f6a:	8b 47 0c             	mov    0xc(%edi),%eax
    2f6d:	c1 e0 0b             	shl    $0xb,%eax
    2f70:	8b 37                	mov    (%edi),%esi
    2f72:	c1 e3 10             	shl    $0x10,%ebx
    2f75:	09 c3                	or     %eax,%ebx
    2f77:	8b 47 10             	mov    0x10(%edi),%eax
    2f7a:	c1 e0 08             	shl    $0x8,%eax
    2f7d:	09 c3                	or     %eax,%ebx
    2f7f:	8b 45 d0             	mov    -0x30(%ebp),%eax
    2f82:	09 c3                	or     %eax,%ebx
    2f84:	8d 46 20             	lea    0x20(%esi),%eax
    2f87:	89 04 24             	mov    %eax,(%esp)
    2f8a:	89 45 d0             	mov    %eax,-0x30(%ebp)
    2f8d:	e8 ee c8 00 00       	call   f880 <fibril_mutex_lock@plt>
    2f92:	8b 46 04             	mov    0x4(%esi),%eax
    2f95:	83 c4 10             	add    $0x10,%esp
    2f98:	85 c0                	test   %eax,%eax
    2f9a:	0f 84 a0 04 00 00    	je     3440 <pci_bus_scan+0x850>
    2fa0:	81 cb 00 00 00 80    	or     $0x80000000,%ebx
    2fa6:	52                   	push   %edx
    2fa7:	52                   	push   %edx
    2fa8:	53                   	push   %ebx
    2fa9:	50                   	push   %eax
    2faa:	e8 b1 c6 00 00       	call   f660 <pio_write_32@plt>
    2faf:	8b 5e 08             	mov    0x8(%esi),%ebx
    2fb2:	59                   	pop    %ecx
    2fb3:	53                   	push   %ebx
    2fb4:	e8 f7 c4 00 00       	call   f4b0 <pio_read_32@plt>
    2fb9:	83 c4 10             	add    $0x10,%esp
    2fbc:	89 c3                	mov    %eax,%ebx
    2fbe:	83 ec 0c             	sub    $0xc,%esp
    2fc1:	8b 45 d0             	mov    -0x30(%ebp),%eax
    2fc4:	50                   	push   %eax
    2fc5:	e8 26 c6 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    2fca:	8b 75 c4             	mov    -0x3c(%ebp),%esi
    2fcd:	83 c4 10             	add    $0x10,%esp
    2fd0:	89 f0                	mov    %esi,%eax
    2fd2:	f7 d8                	neg    %eax
    2fd4:	21 c6                	and    %eax,%esi
    2fd6:	89 75 d0             	mov    %esi,-0x30(%ebp)
    2fd9:	80 7d c8 00          	cmpb   $0x0,-0x38(%ebp)
    2fdd:	0f 85 65 03 00 00    	jne    3348 <pci_bus_scan+0x758>
    2fe3:	89 d8                	mov    %ebx,%eax
    2fe5:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%ebp)
    2fec:	83 e0 f0             	and    $0xfffffff0,%eax
    2fef:	89 45 b0             	mov    %eax,-0x50(%ebp)
    2ff2:	8b 4d b0             	mov    -0x50(%ebp),%ecx
    2ff5:	8b 5d b4             	mov    -0x4c(%ebp),%ebx
    2ff8:	89 c8                	mov    %ecx,%eax
    2ffa:	89 d9                	mov    %ebx,%ecx
    2ffc:	09 c1                	or     %eax,%ecx
    2ffe:	0f 85 14 03 00 00    	jne    3318 <pci_bus_scan+0x728>
    3004:	8b 4f 24             	mov    0x24(%edi),%ecx
    3007:	8b 47 20             	mov    0x20(%edi),%eax
    300a:	85 c9                	test   %ecx,%ecx
    300c:	0f 84 09 06 00 00    	je     361b <pci_bus_scan+0xa2b>
    3012:	83 f8 09             	cmp    $0x9,%eax
    3015:	0f 87 eb 05 00 00    	ja     3606 <pci_bus_scan+0xa16>
    301b:	8d 1c 40             	lea    (%eax,%eax,2),%ebx
    301e:	8b 55 c0             	mov    -0x40(%ebp),%edx
    3021:	85 d2                	test   %edx,%edx
    3023:	8d 0c d9             	lea    (%ecx,%ebx,8),%ecx
    3026:	0f 85 c4 02 00 00    	jne    32f0 <pci_bus_scan+0x700>
    302c:	8b 5d b0             	mov    -0x50(%ebp),%ebx
    302f:	8b 75 b4             	mov    -0x4c(%ebp),%esi
    3032:	8b 55 d0             	mov    -0x30(%ebp),%edx
    3035:	c7 01 02 00 00 00    	movl   $0x2,(%ecx)
    303b:	89 59 04             	mov    %ebx,0x4(%ecx)
    303e:	89 71 08             	mov    %esi,0x8(%ecx)
    3041:	89 51 0c             	mov    %edx,0xc(%ecx)
    3044:	c6 41 10 00          	movb   $0x0,0x10(%ecx)
    3048:	c7 41 14 00 00 00 00 	movl   $0x0,0x14(%ecx)
    304f:	40                   	inc    %eax
    3050:	89 47 20             	mov    %eax,0x20(%edi)
    3053:	80 7d c8 00          	cmpb   $0x0,-0x38(%ebp)
    3057:	0f 85 1b 02 00 00    	jne    3278 <pci_bus_scan+0x688>
    305d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3060:	83 c0 04             	add    $0x4,%eax
    3063:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    3066:	83 7d d4 24          	cmpl   $0x24,-0x2c(%ebp)
    306a:	0f 8e f1 fd ff ff    	jle    2e61 <pci_bus_scan+0x271>
    3070:	8b 77 08             	mov    0x8(%edi),%esi
    3073:	8b 47 0c             	mov    0xc(%edi),%eax
    3076:	c1 e0 0b             	shl    $0xb,%eax
    3079:	89 fb                	mov    %edi,%ebx
    307b:	c1 e6 10             	shl    $0x10,%esi
    307e:	83 ec 0c             	sub    $0xc,%esp
    3081:	09 c6                	or     %eax,%esi
    3083:	8b 47 10             	mov    0x10(%edi),%eax
    3086:	8b 3f                	mov    (%edi),%edi
    3088:	83 ce 3c             	or     $0x3c,%esi
    308b:	c1 e0 08             	shl    $0x8,%eax
    308e:	09 c6                	or     %eax,%esi
    3090:	8d 47 20             	lea    0x20(%edi),%eax
    3093:	50                   	push   %eax
    3094:	89 45 d0             	mov    %eax,-0x30(%ebp)
    3097:	e8 e4 c7 00 00       	call   f880 <fibril_mutex_lock@plt>
    309c:	8b 47 04             	mov    0x4(%edi),%eax
    309f:	83 c4 10             	add    $0x10,%esp
    30a2:	85 c0                	test   %eax,%eax
    30a4:	0f 84 1e 04 00 00    	je     34c8 <pci_bus_scan+0x8d8>
    30aa:	81 ce 00 00 00 80    	or     $0x80000000,%esi
    30b0:	52                   	push   %edx
    30b1:	52                   	push   %edx
    30b2:	56                   	push   %esi
    30b3:	50                   	push   %eax
    30b4:	e8 a7 c5 00 00       	call   f660 <pio_write_32@plt>
    30b9:	8b 77 08             	mov    0x8(%edi),%esi
    30bc:	59                   	pop    %ecx
    30bd:	56                   	push   %esi
    30be:	e8 ed c3 00 00       	call   f4b0 <pio_read_32@plt>
    30c3:	83 c4 10             	add    $0x10,%esp
    30c6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    30c9:	83 ec 0c             	sub    $0xc,%esp
    30cc:	8a 45 d4             	mov    -0x2c(%ebp),%al
    30cf:	88 45 cc             	mov    %al,-0x34(%ebp)
    30d2:	8b 45 d0             	mov    -0x30(%ebp),%eax
    30d5:	50                   	push   %eax
    30d6:	e8 15 c5 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    30db:	8b 53 08             	mov    0x8(%ebx),%edx
    30de:	8b 43 0c             	mov    0xc(%ebx),%eax
    30e1:	c1 e2 10             	shl    $0x10,%edx
    30e4:	8b 3b                	mov    (%ebx),%edi
    30e6:	c1 e0 0b             	shl    $0xb,%eax
    30e9:	09 d0                	or     %edx,%eax
    30eb:	8d 77 20             	lea    0x20(%edi),%esi
    30ee:	83 c8 3c             	or     $0x3c,%eax
    30f1:	89 c2                	mov    %eax,%edx
    30f3:	8b 43 10             	mov    0x10(%ebx),%eax
    30f6:	c1 e0 08             	shl    $0x8,%eax
    30f9:	89 34 24             	mov    %esi,(%esp)
    30fc:	09 c2                	or     %eax,%edx
    30fe:	89 55 d0             	mov    %edx,-0x30(%ebp)
    3101:	e8 7a c7 00 00       	call   f880 <fibril_mutex_lock@plt>
    3106:	8b 57 04             	mov    0x4(%edi),%edx
    3109:	83 c4 10             	add    $0x10,%esp
    310c:	85 d2                	test   %edx,%edx
    310e:	0f 84 94 03 00 00    	je     34a8 <pci_bus_scan+0x8b8>
    3114:	50                   	push   %eax
    3115:	50                   	push   %eax
    3116:	8b 45 d0             	mov    -0x30(%ebp),%eax
    3119:	0d 00 00 00 80       	or     $0x80000000,%eax
    311e:	50                   	push   %eax
    311f:	52                   	push   %edx
    3120:	e8 3b c5 00 00       	call   f660 <pio_write_32@plt>
    3125:	58                   	pop    %eax
    3126:	8b 47 08             	mov    0x8(%edi),%eax
    3129:	50                   	push   %eax
    312a:	e8 81 c3 00 00       	call   f4b0 <pio_read_32@plt>
    312f:	83 c4 10             	add    $0x10,%esp
    3132:	83 ec 0c             	sub    $0xc,%esp
    3135:	89 45 d0             	mov    %eax,-0x30(%ebp)
    3138:	56                   	push   %esi
    3139:	e8 b2 c4 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    313e:	8b 45 d0             	mov    -0x30(%ebp),%eax
    3141:	83 c4 10             	add    $0x10,%esp
    3144:	c1 e8 08             	shr    $0x8,%eax
    3147:	84 c0                	test   %al,%al
    3149:	74 57                	je     31a2 <pci_bus_scan+0x5b2>
    314b:	80 7d cc ff          	cmpb   $0xff,-0x34(%ebp)
    314f:	74 51                	je     31a2 <pci_bus_scan+0x5b2>
    3151:	0f b6 7d d4          	movzbl -0x2c(%ebp),%edi
    3155:	8b 53 24             	mov    0x24(%ebx),%edx
    3158:	81 e7 ff 00 00 00    	and    $0xff,%edi
    315e:	8b 43 20             	mov    0x20(%ebx),%eax
    3161:	85 d2                	test   %edx,%edx
    3163:	0f 84 dc 04 00 00    	je     3645 <pci_bus_scan+0xa55>
    3169:	83 f8 09             	cmp    $0x9,%eax
    316c:	0f 87 be 04 00 00    	ja     3630 <pci_bus_scan+0xa40>
    3172:	8d 0c 40             	lea    (%eax,%eax,2),%ecx
    3175:	83 ec 0c             	sub    $0xc,%esp
    3178:	40                   	inc    %eax
    3179:	8d 14 ca             	lea    (%edx,%ecx,8),%edx
    317c:	89 7a 04             	mov    %edi,0x4(%edx)
    317f:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
    3185:	89 43 20             	mov    %eax,0x20(%ebx)
    3188:	8b 43 04             	mov    0x4(%ebx),%eax
    318b:	50                   	push   %eax
    318c:	e8 1f 1a 00 00       	call   4bb0 <ddf_fun_get_name>
    3191:	57                   	push   %edi
    3192:	50                   	push   %eax
    3193:	68 d8 d1 00 00       	push   $0xd1d8
    3198:	6a 03                	push   $0x3
    319a:	e8 61 20 00 00       	call   5200 <ddf_msg>
    319f:	83 c4 20             	add    $0x20,%esp
    31a2:	8b 45 08             	mov    0x8(%ebp),%eax
    31a5:	8b 40 10             	mov    0x10(%eax),%eax
    31a8:	89 83 18 01 00 00    	mov    %eax,0x118(%ebx)
    31ae:	8b 45 08             	mov    0x8(%ebp),%eax
    31b1:	8b 40 14             	mov    0x14(%eax),%eax
    31b4:	89 83 1c 01 00 00    	mov    %eax,0x11c(%ebx)
    31ba:	8b 45 08             	mov    0x8(%ebp),%eax
    31bd:	8b 40 18             	mov    0x18(%eax),%eax
    31c0:	89 83 20 01 00 00    	mov    %eax,0x120(%ebx)
    31c6:	8b 45 08             	mov    0x8(%ebp),%eax
    31c9:	8b 40 1c             	mov    0x1c(%eax),%eax
    31cc:	89 83 24 01 00 00    	mov    %eax,0x124(%ebx)
    31d2:	56                   	push   %esi
    31d3:	56                   	push   %esi
    31d4:	68 a0 17 01 00       	push   $0x117a0
    31d9:	8b 7b 04             	mov    0x4(%ebx),%edi
    31dc:	57                   	push   %edi
    31dd:	e8 fe 1d 00 00       	call   4fe0 <ddf_fun_set_ops>
    31e2:	58                   	pop    %eax
    31e3:	8b 43 04             	mov    0x4(%ebx),%eax
    31e6:	50                   	push   %eax
    31e7:	e8 c4 19 00 00       	call   4bb0 <ddf_fun_get_name>
    31ec:	83 c4 0c             	add    $0xc,%esp
    31ef:	50                   	push   %eax
    31f0:	68 2d d2 00 00       	push   $0xd22d
    31f5:	6a 04                	push   $0x4
    31f7:	e8 04 20 00 00       	call   5200 <ddf_msg>
    31fc:	89 1c 24             	mov    %ebx,(%esp)
    31ff:	e8 3c ea ff ff       	call   1c40 <pci_fun_create_match_ids>
    3204:	58                   	pop    %eax
    3205:	8b 43 04             	mov    0x4(%ebx),%eax
    3208:	50                   	push   %eax
    3209:	e8 e2 1a 00 00       	call   4cf0 <ddf_fun_bind>
    320e:	83 c4 10             	add    $0x10,%esp
    3211:	85 c0                	test   %eax,%eax
    3213:	0f 85 3f 02 00 00    	jne    3458 <pci_bus_scan+0x868>
    3219:	8a 45 a4             	mov    -0x5c(%ebp),%al
    321c:	83 e0 7f             	and    $0x7f,%eax
    321f:	48                   	dec    %eax
    3220:	3c 01                	cmp    $0x1,%al
    3222:	0f 86 cf 02 00 00    	jbe    34f7 <pci_bus_scan+0x907>
    3228:	8b 5d b8             	mov    -0x48(%ebp),%ebx
    322b:	43                   	inc    %ebx
    322c:	89 5d b8             	mov    %ebx,-0x48(%ebp)
    322f:	8b 45 b8             	mov    -0x48(%ebp),%eax
    3232:	83 f8 07             	cmp    $0x7,%eax
    3235:	7f 11                	jg     3248 <pci_bus_scan+0x658>
    3237:	80 7d ab 00          	cmpb   $0x0,-0x55(%ebp)
    323b:	0f 85 c7 f9 ff ff    	jne    2c08 <pci_bus_scan+0x18>
    3241:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3248:	8b 45 ac             	mov    -0x54(%ebp),%eax
    324b:	40                   	inc    %eax
    324c:	89 45 ac             	mov    %eax,-0x54(%ebp)
    324f:	8b 45 ac             	mov    -0x54(%ebp),%eax
    3252:	83 f8 20             	cmp    $0x20,%eax
    3255:	0f 85 a5 f9 ff ff    	jne    2c00 <pci_bus_scan+0x10>
    325b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    325e:	5b                   	pop    %ebx
    325f:	5e                   	pop    %esi
    3260:	5f                   	pop    %edi
    3261:	5d                   	pop    %ebp
    3262:	c3                   	ret    
    3263:	90                   	nop
    3264:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3268:	c6 45 c8 00          	movb   $0x0,-0x38(%ebp)
    326c:	c7 45 bc f0 ff ff ff 	movl   $0xfffffff0,-0x44(%ebp)
    3273:	e9 f9 fa ff ff       	jmp    2d71 <pci_bus_scan+0x181>
    3278:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    327b:	83 c0 08             	add    $0x8,%eax
    327e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    3281:	e9 d1 fb ff ff       	jmp    2e57 <pci_bus_scan+0x267>
    3286:	66 90                	xchg   %ax,%ax
    3288:	50                   	push   %eax
    3289:	50                   	push   %eax
    328a:	8b 43 0c             	mov    0xc(%ebx),%eax
    328d:	6a ff                	push   $0xffffffff
    328f:	01 c6                	add    %eax,%esi
    3291:	56                   	push   %esi
    3292:	e8 c9 c3 00 00       	call   f660 <pio_write_32@plt>
    3297:	83 c4 10             	add    $0x10,%esp
    329a:	e9 2b fb ff ff       	jmp    2dca <pci_bus_scan+0x1da>
    329f:	90                   	nop
    32a0:	83 ec 0c             	sub    $0xc,%esp
    32a3:	8b 43 0c             	mov    0xc(%ebx),%eax
    32a6:	01 c6                	add    %eax,%esi
    32a8:	56                   	push   %esi
    32a9:	e8 02 c2 00 00       	call   f4b0 <pio_read_32@plt>
    32ae:	83 c4 10             	add    $0x10,%esp
    32b1:	89 45 cc             	mov    %eax,-0x34(%ebp)
    32b4:	e9 09 fc ff ff       	jmp    2ec2 <pci_bus_scan+0x2d2>
    32b9:	8b 45 b8             	mov    -0x48(%ebp),%eax
    32bc:	8b 55 ac             	mov    -0x54(%ebp),%edx
    32bf:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    32c2:	50                   	push   %eax
    32c3:	52                   	push   %edx
    32c4:	51                   	push   %ecx
    32c5:	6a 00                	push   $0x0
    32c7:	e8 74 f4 ff ff       	call   2740 <pci_fun_init>
    32cc:	66 a1 14 00 00 00    	mov    0x14,%ax
    32d2:	0f 0b                	ud2    
    32d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    32d8:	83 ec 0c             	sub    $0xc,%esp
    32db:	8b 43 0c             	mov    0xc(%ebx),%eax
    32de:	01 c6                	add    %eax,%esi
    32e0:	56                   	push   %esi
    32e1:	e8 ca c1 00 00       	call   f4b0 <pio_read_32@plt>
    32e6:	83 c4 10             	add    $0x10,%esp
    32e9:	89 c6                	mov    %eax,%esi
    32eb:	e9 3d fb ff ff       	jmp    2e2d <pci_bus_scan+0x23d>
    32f0:	8b 5d b0             	mov    -0x50(%ebp),%ebx
    32f3:	8b 75 b4             	mov    -0x4c(%ebp),%esi
    32f6:	8b 55 d0             	mov    -0x30(%ebp),%edx
    32f9:	c7 01 01 00 00 00    	movl   $0x1,(%ecx)
    32ff:	89 59 04             	mov    %ebx,0x4(%ecx)
    3302:	89 71 08             	mov    %esi,0x8(%ecx)
    3305:	89 51 0c             	mov    %edx,0xc(%ecx)
    3308:	c6 41 10 01          	movb   $0x1,0x10(%ecx)
    330c:	c7 41 14 00 00 00 00 	movl   $0x0,0x14(%ecx)
    3313:	e9 37 fd ff ff       	jmp    304f <pci_bus_scan+0x45f>
    3318:	83 ec 0c             	sub    $0xc,%esp
    331b:	8b 77 04             	mov    0x4(%edi),%esi
    331e:	56                   	push   %esi
    331f:	e8 8c 18 00 00       	call   4bb0 <ddf_fun_get_name>
    3324:	5a                   	pop    %edx
    3325:	8b 5d d0             	mov    -0x30(%ebp),%ebx
    3328:	8b 75 b4             	mov    -0x4c(%ebp),%esi
    332b:	8b 55 b0             	mov    -0x50(%ebp),%edx
    332e:	59                   	pop    %ecx
    332f:	53                   	push   %ebx
    3330:	56                   	push   %esi
    3331:	52                   	push   %edx
    3332:	50                   	push   %eax
    3333:	68 64 d3 00 00       	push   $0xd364
    3338:	6a 04                	push   $0x4
    333a:	e8 c1 1e 00 00       	call   5200 <ddf_msg>
    333f:	83 c4 20             	add    $0x20,%esp
    3342:	e9 bd fc ff ff       	jmp    3004 <pci_bus_scan+0x414>
    3347:	90                   	nop
    3348:	8b 4f 08             	mov    0x8(%edi),%ecx
    334b:	8b 47 0c             	mov    0xc(%edi),%eax
    334e:	c1 e0 0b             	shl    $0xb,%eax
    3351:	8b 17                	mov    (%edi),%edx
    3353:	c1 e1 10             	shl    $0x10,%ecx
    3356:	83 ec 0c             	sub    $0xc,%esp
    3359:	09 c1                	or     %eax,%ecx
    335b:	8b 47 10             	mov    0x10(%edi),%eax
    335e:	c1 e0 08             	shl    $0x8,%eax
    3361:	89 55 c4             	mov    %edx,-0x3c(%ebp)
    3364:	09 c1                	or     %eax,%ecx
    3366:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3369:	83 c0 04             	add    $0x4,%eax
    336c:	83 e0 fc             	and    $0xfffffffc,%eax
    336f:	09 c1                	or     %eax,%ecx
    3371:	8d 42 20             	lea    0x20(%edx),%eax
    3374:	50                   	push   %eax
    3375:	89 45 cc             	mov    %eax,-0x34(%ebp)
    3378:	89 ce                	mov    %ecx,%esi
    337a:	e8 01 c5 00 00       	call   f880 <fibril_mutex_lock@plt>
    337f:	8b 55 c4             	mov    -0x3c(%ebp),%edx
    3382:	83 c4 10             	add    $0x10,%esp
    3385:	8b 42 04             	mov    0x4(%edx),%eax
    3388:	85 c0                	test   %eax,%eax
    338a:	0f 84 51 01 00 00    	je     34e1 <pci_bus_scan+0x8f1>
    3390:	89 f1                	mov    %esi,%ecx
    3392:	52                   	push   %edx
    3393:	81 c9 00 00 00 80    	or     $0x80000000,%ecx
    3399:	52                   	push   %edx
    339a:	51                   	push   %ecx
    339b:	50                   	push   %eax
    339c:	e8 bf c2 00 00       	call   f660 <pio_write_32@plt>
    33a1:	8b 55 c4             	mov    -0x3c(%ebp),%edx
    33a4:	8b 72 08             	mov    0x8(%edx),%esi
    33a7:	59                   	pop    %ecx
    33a8:	56                   	push   %esi
    33a9:	e8 02 c1 00 00       	call   f4b0 <pio_read_32@plt>
    33ae:	83 c4 10             	add    $0x10,%esp
    33b1:	83 ec 0c             	sub    $0xc,%esp
    33b4:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    33b7:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    33ba:	83 e3 f0             	and    $0xfffffff0,%ebx
    33bd:	51                   	push   %ecx
    33be:	e8 2d c2 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    33c3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    33c6:	89 5d b0             	mov    %ebx,-0x50(%ebp)
    33c9:	89 45 b4             	mov    %eax,-0x4c(%ebp)
    33cc:	83 c4 10             	add    $0x10,%esp
    33cf:	e9 1e fc ff ff       	jmp    2ff2 <pci_bus_scan+0x402>
    33d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    33d8:	50                   	push   %eax
    33d9:	50                   	push   %eax
    33da:	8b 45 cc             	mov    -0x34(%ebp),%eax
    33dd:	50                   	push   %eax
    33de:	8b 43 0c             	mov    0xc(%ebx),%eax
    33e1:	01 c6                	add    %eax,%esi
    33e3:	56                   	push   %esi
    33e4:	e8 77 c2 00 00       	call   f660 <pio_write_32@plt>
    33e9:	83 c4 10             	add    $0x10,%esp
    33ec:	e9 6a fb ff ff       	jmp    2f5b <pci_bus_scan+0x36b>
    33f1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    33f8:	8b 43 24             	mov    0x24(%ebx),%eax
    33fb:	85 c0                	test   %eax,%eax
    33fd:	74 13                	je     3412 <pci_bus_scan+0x822>
    33ff:	83 ec 0c             	sub    $0xc,%esp
    3402:	50                   	push   %eax
    3403:	e8 58 c4 00 00       	call   f860 <free@plt>
    3408:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
    340f:	83 c4 10             	add    $0x10,%esp
    3412:	8b 43 04             	mov    0x4(%ebx),%eax
    3415:	c7 43 20 00 00 00 00 	movl   $0x0,0x20(%ebx)
    341c:	85 c0                	test   %eax,%eax
    341e:	74 0c                	je     342c <pci_bus_scan+0x83c>
    3420:	83 ec 0c             	sub    $0xc,%esp
    3423:	50                   	push   %eax
    3424:	e8 97 17 00 00       	call   4bc0 <ddf_fun_destroy>
    3429:	83 c4 10             	add    $0x10,%esp
    342c:	8b 45 b8             	mov    -0x48(%ebp),%eax
    342f:	85 c0                	test   %eax,%eax
    3431:	0f 84 11 fe ff ff    	je     3248 <pci_bus_scan+0x658>
    3437:	c6 45 ab 01          	movb   $0x1,-0x55(%ebp)
    343b:	e9 e8 fd ff ff       	jmp    3228 <pci_bus_scan+0x638>
    3440:	83 ec 0c             	sub    $0xc,%esp
    3443:	8b 46 0c             	mov    0xc(%esi),%eax
    3446:	01 c3                	add    %eax,%ebx
    3448:	53                   	push   %ebx
    3449:	e8 62 c0 00 00       	call   f4b0 <pio_read_32@plt>
    344e:	83 c4 10             	add    $0x10,%esp
    3451:	89 c3                	mov    %eax,%ebx
    3453:	e9 66 fb ff ff       	jmp    2fbe <pci_bus_scan+0x3ce>
    3458:	8b 43 04             	mov    0x4(%ebx),%eax
    345b:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
    3462:	c7 43 20 00 00 00 00 	movl   $0x0,0x20(%ebx)
    3469:	85 c0                	test   %eax,%eax
    346b:	0f 84 b7 fd ff ff    	je     3228 <pci_bus_scan+0x638>
    3471:	83 ec 0c             	sub    $0xc,%esp
    3474:	50                   	push   %eax
    3475:	e8 46 17 00 00       	call   4bc0 <ddf_fun_destroy>
    347a:	83 c4 10             	add    $0x10,%esp
    347d:	e9 a6 fd ff ff       	jmp    3228 <pci_bus_scan+0x638>
    3482:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3488:	83 ec 0c             	sub    $0xc,%esp
    348b:	8b 4f 0c             	mov    0xc(%edi),%ecx
    348e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3491:	01 c8                	add    %ecx,%eax
    3493:	50                   	push   %eax
    3494:	e8 17 c0 00 00       	call   f4b0 <pio_read_32@plt>
    3499:	83 c4 10             	add    $0x10,%esp
    349c:	e9 1f f8 ff ff       	jmp    2cc0 <pci_bus_scan+0xd0>
    34a1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    34a8:	83 ec 0c             	sub    $0xc,%esp
    34ab:	8b 4f 0c             	mov    0xc(%edi),%ecx
    34ae:	8b 45 d0             	mov    -0x30(%ebp),%eax
    34b1:	01 c8                	add    %ecx,%eax
    34b3:	50                   	push   %eax
    34b4:	e8 f7 bf 00 00       	call   f4b0 <pio_read_32@plt>
    34b9:	83 c4 10             	add    $0x10,%esp
    34bc:	e9 71 fc ff ff       	jmp    3132 <pci_bus_scan+0x542>
    34c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    34c8:	83 ec 0c             	sub    $0xc,%esp
    34cb:	8b 47 0c             	mov    0xc(%edi),%eax
    34ce:	01 c6                	add    %eax,%esi
    34d0:	56                   	push   %esi
    34d1:	e8 da bf 00 00       	call   f4b0 <pio_read_32@plt>
    34d6:	83 c4 10             	add    $0x10,%esp
    34d9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    34dc:	e9 e8 fb ff ff       	jmp    30c9 <pci_bus_scan+0x4d9>
    34e1:	83 ec 0c             	sub    $0xc,%esp
    34e4:	8b 4a 0c             	mov    0xc(%edx),%ecx
    34e7:	01 f1                	add    %esi,%ecx
    34e9:	51                   	push   %ecx
    34ea:	e8 c1 bf 00 00       	call   f4b0 <pio_read_32@plt>
    34ef:	83 c4 10             	add    $0x10,%esp
    34f2:	e9 ba fe ff ff       	jmp    33b1 <pci_bus_scan+0x7c1>
    34f7:	8b 53 08             	mov    0x8(%ebx),%edx
    34fa:	8b 43 0c             	mov    0xc(%ebx),%eax
    34fd:	c1 e2 10             	shl    $0x10,%edx
    3500:	8b 3b                	mov    (%ebx),%edi
    3502:	c1 e0 0b             	shl    $0xb,%eax
    3505:	83 ec 0c             	sub    $0xc,%esp
    3508:	09 d0                	or     %edx,%eax
    350a:	8d 77 20             	lea    0x20(%edi),%esi
    350d:	83 c8 18             	or     $0x18,%eax
    3510:	89 c2                	mov    %eax,%edx
    3512:	8b 43 10             	mov    0x10(%ebx),%eax
    3515:	c1 e0 08             	shl    $0x8,%eax
    3518:	56                   	push   %esi
    3519:	09 c2                	or     %eax,%edx
    351b:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    351e:	e8 5d c3 00 00       	call   f880 <fibril_mutex_lock@plt>
    3523:	8b 47 04             	mov    0x4(%edi),%eax
    3526:	83 c4 10             	add    $0x10,%esp
    3529:	85 c0                	test   %eax,%eax
    352b:	0f 84 ba 00 00 00    	je     35eb <pci_bus_scan+0x9fb>
    3531:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
    3534:	52                   	push   %edx
    3535:	81 cb 00 00 00 80    	or     $0x80000000,%ebx
    353b:	52                   	push   %edx
    353c:	53                   	push   %ebx
    353d:	50                   	push   %eax
    353e:	e8 1d c1 00 00       	call   f660 <pio_write_32@plt>
    3543:	8b 5f 08             	mov    0x8(%edi),%ebx
    3546:	59                   	pop    %ecx
    3547:	53                   	push   %ebx
    3548:	e8 63 bf 00 00       	call   f4b0 <pio_read_32@plt>
    354d:	83 c4 10             	add    $0x10,%esp
    3550:	89 c3                	mov    %eax,%ebx
    3552:	83 ec 0c             	sub    $0xc,%esp
    3555:	0f b6 df             	movzbl %bh,%ebx
    3558:	56                   	push   %esi
    3559:	e8 92 c0 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    355e:	83 c4 0c             	add    $0xc,%esp
    3561:	8b 45 0c             	mov    0xc(%ebp),%eax
    3564:	50                   	push   %eax
    3565:	68 8c d3 00 00       	push   $0xd38c
    356a:	6a 04                	push   $0x4
    356c:	e8 8f 1c 00 00       	call   5200 <ddf_msg>
    3571:	83 c4 10             	add    $0x10,%esp
    3574:	39 5d 0c             	cmp    %ebx,0xc(%ebp)
    3577:	0f 8d ab fc ff ff    	jge    3228 <pci_bus_scan+0x638>
    357d:	8b 7d 08             	mov    0x8(%ebp),%edi
    3580:	56                   	push   %esi
    3581:	56                   	push   %esi
    3582:	53                   	push   %ebx
    3583:	57                   	push   %edi
    3584:	e8 67 f6 ff ff       	call   2bf0 <pci_bus_scan>
    3589:	83 c4 10             	add    $0x10,%esp
    358c:	e9 97 fc ff ff       	jmp    3228 <pci_bus_scan+0x638>
    3591:	56                   	push   %esi
    3592:	56                   	push   %esi
    3593:	68 0f d2 00 00       	push   $0xd20f
    3598:	6a 01                	push   $0x1
    359a:	e8 61 1c 00 00       	call   5200 <ddf_msg>
    359f:	8b 43 24             	mov    0x24(%ebx),%eax
    35a2:	83 c4 10             	add    $0x10,%esp
    35a5:	85 c0                	test   %eax,%eax
    35a7:	74 13                	je     35bc <pci_bus_scan+0x9cc>
    35a9:	83 ec 0c             	sub    $0xc,%esp
    35ac:	50                   	push   %eax
    35ad:	e8 ae c2 00 00       	call   f860 <free@plt>
    35b2:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
    35b9:	83 c4 10             	add    $0x10,%esp
    35bc:	8b 43 04             	mov    0x4(%ebx),%eax
    35bf:	c7 43 20 00 00 00 00 	movl   $0x0,0x20(%ebx)
    35c6:	85 c0                	test   %eax,%eax
    35c8:	0f 84 8d fc ff ff    	je     325b <pci_bus_scan+0x66b>
    35ce:	83 ec 0c             	sub    $0xc,%esp
    35d1:	50                   	push   %eax
    35d2:	e8 e9 15 00 00       	call   4bc0 <ddf_fun_destroy>
    35d7:	83 c4 10             	add    $0x10,%esp
    35da:	8d 65 f4             	lea    -0xc(%ebp),%esp
    35dd:	5b                   	pop    %ebx
    35de:	5e                   	pop    %esi
    35df:	5f                   	pop    %edi
    35e0:	5d                   	pop    %ebp
    35e1:	c3                   	ret    
    35e2:	50                   	push   %eax
    35e3:	50                   	push   %eax
    35e4:	68 00 d2 00 00       	push   $0xd200
    35e9:	eb ad                	jmp    3598 <pci_bus_scan+0x9a8>
    35eb:	83 ec 0c             	sub    $0xc,%esp
    35ee:	8b 47 0c             	mov    0xc(%edi),%eax
    35f1:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
    35f4:	01 c3                	add    %eax,%ebx
    35f6:	53                   	push   %ebx
    35f7:	e8 b4 be 00 00       	call   f4b0 <pio_read_32@plt>
    35fc:	83 c4 10             	add    $0x10,%esp
    35ff:	89 c3                	mov    %eax,%ebx
    3601:	e9 4c ff ff ff       	jmp    3552 <pci_bus_scan+0x962>
    3606:	51                   	push   %ecx
    3607:	68 b8 01 00 00       	push   $0x1b8
    360c:	68 97 ef 00 00       	push   $0xef97
    3611:	68 ac d1 00 00       	push   $0xd1ac
    3616:	e8 45 bf 00 00       	call   f560 <assert_abort@plt>
    361b:	53                   	push   %ebx
    361c:	68 b7 01 00 00       	push   $0x1b7
    3621:	68 97 ef 00 00       	push   $0xef97
    3626:	68 97 d1 00 00       	push   $0xd197
    362b:	e8 30 bf 00 00       	call   f560 <assert_abort@plt>
    3630:	50                   	push   %eax
    3631:	68 2b 02 00 00       	push   $0x22b
    3636:	68 97 ef 00 00       	push   $0xef97
    363b:	68 ac d1 00 00       	push   $0xd1ac
    3640:	e8 1b bf 00 00       	call   f560 <assert_abort@plt>
    3645:	52                   	push   %edx
    3646:	68 2a 02 00 00       	push   $0x22a
    364b:	68 97 ef 00 00       	push   $0xef97
    3650:	68 c3 d1 00 00       	push   $0xd1c3
    3655:	e8 06 bf 00 00       	call   f560 <assert_abort@plt>
    365a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00003660 <pci_dev_add>:
    3660:	55                   	push   %ebp
    3661:	89 e5                	mov    %esp,%ebp
    3663:	57                   	push   %edi
    3664:	56                   	push   %esi
    3665:	53                   	push   %ebx
    3666:	83 ec 34             	sub    $0x34,%esp
    3669:	8b 75 08             	mov    0x8(%ebp),%esi
    366c:	68 45 d2 00 00       	push   $0xd245
    3671:	6a 04                	push   $0x4
    3673:	e8 88 1b 00 00       	call   5200 <ddf_msg>
    3678:	5f                   	pop    %edi
    3679:	58                   	pop    %eax
    367a:	6a 30                	push   $0x30
    367c:	56                   	push   %esi
    367d:	e8 7e 12 00 00       	call   4900 <ddf_dev_data_alloc>
    3682:	83 c4 10             	add    $0x10,%esp
    3685:	85 c0                	test   %eax,%eax
    3687:	0f 84 e3 01 00 00    	je     3870 <pci_dev_add+0x210>
    368d:	83 ec 0c             	sub    $0xc,%esp
    3690:	89 c3                	mov    %eax,%ebx
    3692:	8d 40 20             	lea    0x20(%eax),%eax
    3695:	50                   	push   %eax
    3696:	e8 85 bf 00 00       	call   f620 <fibril_mutex_initialize@plt>
    369b:	89 33                	mov    %esi,(%ebx)
    369d:	89 34 24             	mov    %esi,(%esp)
    36a0:	e8 cb 12 00 00       	call   4970 <ddf_dev_parent_sess_create>
    36a5:	83 c4 10             	add    $0x10,%esp
    36a8:	85 c0                	test   %eax,%eax
    36aa:	0f 84 e0 01 00 00    	je     3890 <pci_dev_add+0x230>
    36b0:	8d 7b 10             	lea    0x10(%ebx),%edi
    36b3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    36b6:	51                   	push   %ecx
    36b7:	51                   	push   %ecx
    36b8:	57                   	push   %edi
    36b9:	50                   	push   %eax
    36ba:	e8 e1 bd 00 00       	call   f4a0 <pio_window_get@plt>
    36bf:	83 c4 10             	add    $0x10,%esp
    36c2:	89 c6                	mov    %eax,%esi
    36c4:	85 c0                	test   %eax,%eax
    36c6:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    36c9:	0f 85 29 01 00 00    	jne    37f8 <pci_dev_add+0x198>
    36cf:	50                   	push   %eax
    36d0:	50                   	push   %eax
    36d1:	8d 45 e0             	lea    -0x20(%ebp),%eax
    36d4:	50                   	push   %eax
    36d5:	52                   	push   %edx
    36d6:	e8 d5 be 00 00       	call   f5b0 <hw_res_get_resource_list@plt>
    36db:	83 c4 10             	add    $0x10,%esp
    36de:	89 c6                	mov    %eax,%esi
    36e0:	85 c0                	test   %eax,%eax
    36e2:	0f 85 28 02 00 00    	jne    3910 <pci_dev_add+0x2b0>
    36e8:	8b 45 e0             	mov    -0x20(%ebp),%eax
    36eb:	85 c0                	test   %eax,%eax
    36ed:	0f 84 9d 02 00 00    	je     3990 <pci_dev_add+0x330>
    36f3:	48                   	dec    %eax
    36f4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    36f7:	0f 84 1b 01 00 00    	je     3818 <pci_dev_add+0x1b8>
    36fd:	83 38 01             	cmpl   $0x1,(%eax)
    3700:	0f 85 75 02 00 00    	jne    397b <pci_dev_add+0x31b>
    3706:	83 78 0c 03          	cmpl   $0x3,0xc(%eax)
    370a:	0f 86 bf 02 00 00    	jbe    39cf <pci_dev_add+0x36f>
    3710:	83 78 18 01          	cmpl   $0x1,0x18(%eax)
    3714:	0f 85 a0 02 00 00    	jne    39ba <pci_dev_add+0x35a>
    371a:	83 78 24 03          	cmpl   $0x3,0x24(%eax)
    371e:	0f 86 81 02 00 00    	jbe    39a5 <pci_dev_add+0x345>
    3724:	8b 50 08             	mov    0x8(%eax),%edx
    3727:	52                   	push   %edx
    3728:	8b 48 04             	mov    0x4(%eax),%ecx
    372b:	51                   	push   %ecx
    372c:	68 81 d2 00 00       	push   $0xd281
    3731:	6a 04                	push   $0x4
    3733:	e8 c8 1a 00 00       	call   5200 <ddf_msg>
    3738:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    373b:	8b 70 20             	mov    0x20(%eax),%esi
    373e:	56                   	push   %esi
    373f:	8b 40 1c             	mov    0x1c(%eax),%eax
    3742:	50                   	push   %eax
    3743:	68 93 d2 00 00       	push   $0xd293
    3748:	6a 04                	push   $0x4
    374a:	e8 b1 1a 00 00       	call   5200 <ddf_msg>
    374f:	83 c4 1c             	add    $0x1c,%esp
    3752:	8d 43 04             	lea    0x4(%ebx),%eax
    3755:	50                   	push   %eax
    3756:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    3759:	50                   	push   %eax
    375a:	57                   	push   %edi
    375b:	e8 20 bd 00 00       	call   f480 <pio_enable_resource@plt>
    3760:	83 c4 10             	add    $0x10,%esp
    3763:	85 c0                	test   %eax,%eax
    3765:	0f 85 45 01 00 00    	jne    38b0 <pci_dev_add+0x250>
    376b:	50                   	push   %eax
    376c:	8d 43 08             	lea    0x8(%ebx),%eax
    376f:	50                   	push   %eax
    3770:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    3773:	83 c0 18             	add    $0x18,%eax
    3776:	50                   	push   %eax
    3777:	57                   	push   %edi
    3778:	e8 03 bd 00 00       	call   f480 <pio_enable_resource@plt>
    377d:	83 c4 10             	add    $0x10,%esp
    3780:	85 c0                	test   %eax,%eax
    3782:	0f 85 28 01 00 00    	jne    38b0 <pci_dev_add+0x250>
    3788:	57                   	push   %edi
    3789:	57                   	push   %edi
    378a:	68 a5 d2 00 00       	push   $0xd2a5
    378f:	6a 04                	push   $0x4
    3791:	e8 6a 1a 00 00       	call   5200 <ddf_msg>
    3796:	83 c4 0c             	add    $0xc,%esp
    3799:	8b 03                	mov    (%ebx),%eax
    379b:	68 bd d2 00 00       	push   $0xd2bd
    37a0:	6a 02                	push   $0x2
    37a2:	50                   	push   %eax
    37a3:	e8 88 12 00 00       	call   4a30 <ddf_fun_create>
    37a8:	83 c4 10             	add    $0x10,%esp
    37ab:	89 c7                	mov    %eax,%edi
    37ad:	85 c0                	test   %eax,%eax
    37af:	0f 84 ab 01 00 00    	je     3960 <pci_dev_add+0x300>
    37b5:	83 ec 0c             	sub    $0xc,%esp
    37b8:	50                   	push   %eax
    37b9:	e8 32 15 00 00       	call   4cf0 <ddf_fun_bind>
    37be:	83 c4 10             	add    $0x10,%esp
    37c1:	89 c6                	mov    %eax,%esi
    37c3:	85 c0                	test   %eax,%eax
    37c5:	0f 84 5d 01 00 00    	je     3928 <pci_dev_add+0x2c8>
    37cb:	53                   	push   %ebx
    37cc:	53                   	push   %ebx
    37cd:	68 e4 d5 00 00       	push   $0xd5e4
    37d2:	6a 01                	push   $0x1
    37d4:	e8 27 1a 00 00       	call   5200 <ddf_msg>
    37d9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    37dc:	83 c4 10             	add    $0x10,%esp
    37df:	85 c0                	test   %eax,%eax
    37e1:	0f 85 ec 00 00 00    	jne    38d3 <pci_dev_add+0x273>
    37e7:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    37ee:	e9 02 01 00 00       	jmp    38f5 <pci_dev_add+0x295>
    37f3:	90                   	nop
    37f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    37f8:	50                   	push   %eax
    37f9:	50                   	push   %eax
    37fa:	68 18 d4 00 00       	push   $0xd418
    37ff:	6a 01                	push   $0x1
    3801:	e8 fa 19 00 00       	call   5200 <ddf_msg>
    3806:	83 c4 10             	add    $0x10,%esp
    3809:	8d 65 f4             	lea    -0xc(%ebp),%esp
    380c:	89 f0                	mov    %esi,%eax
    380e:	5b                   	pop    %ebx
    380f:	5e                   	pop    %esi
    3810:	5f                   	pop    %edi
    3811:	5d                   	pop    %ebp
    3812:	c3                   	ret    
    3813:	90                   	nop
    3814:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3818:	83 38 02             	cmpl   $0x2,(%eax)
    381b:	0f 85 c3 01 00 00    	jne    39e4 <pci_dev_add+0x384>
    3821:	8b 48 08             	mov    0x8(%eax),%ecx
    3824:	51                   	push   %ecx
    3825:	8b 70 04             	mov    0x4(%eax),%esi
    3828:	56                   	push   %esi
    3829:	68 69 d2 00 00       	push   $0xd269
    382e:	6a 04                	push   $0x4
    3830:	e8 cb 19 00 00       	call   5200 <ddf_msg>
    3835:	83 c4 0c             	add    $0xc,%esp
    3838:	8d 43 0c             	lea    0xc(%ebx),%eax
    383b:	50                   	push   %eax
    383c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    383f:	50                   	push   %eax
    3840:	57                   	push   %edi
    3841:	e8 3a bc 00 00       	call   f480 <pio_enable_resource@plt>
    3846:	83 c4 10             	add    $0x10,%esp
    3849:	85 c0                	test   %eax,%eax
    384b:	0f 84 37 ff ff ff    	je     3788 <pci_dev_add+0x128>
    3851:	52                   	push   %edx
    3852:	52                   	push   %edx
    3853:	68 b4 d4 00 00       	push   $0xd4b4
    3858:	6a 01                	push   $0x1
    385a:	be f4 ff ff ff       	mov    $0xfffffff4,%esi
    385f:	e8 9c 19 00 00       	call   5200 <ddf_msg>
    3864:	83 c4 10             	add    $0x10,%esp
    3867:	eb 5d                	jmp    38c6 <pci_dev_add+0x266>
    3869:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3870:	56                   	push   %esi
    3871:	56                   	push   %esi
    3872:	68 c4 d3 00 00       	push   $0xd3c4
    3877:	6a 01                	push   $0x1
    3879:	e8 82 19 00 00       	call   5200 <ddf_msg>
    387e:	83 c4 10             	add    $0x10,%esp
    3881:	8d 65 f4             	lea    -0xc(%ebp),%esp
    3884:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    3889:	89 f0                	mov    %esi,%eax
    388b:	5b                   	pop    %ebx
    388c:	5e                   	pop    %esi
    388d:	5f                   	pop    %edi
    388e:	5d                   	pop    %ebp
    388f:	c3                   	ret    
    3890:	53                   	push   %ebx
    3891:	53                   	push   %ebx
    3892:	68 e4 d3 00 00       	push   $0xd3e4
    3897:	6a 01                	push   $0x1
    3899:	e8 62 19 00 00       	call   5200 <ddf_msg>
    389e:	83 c4 10             	add    $0x10,%esp
    38a1:	8d 65 f4             	lea    -0xc(%ebp),%esp
    38a4:	83 ce ff             	or     $0xffffffff,%esi
    38a7:	89 f0                	mov    %esi,%eax
    38a9:	5b                   	pop    %ebx
    38aa:	5e                   	pop    %esi
    38ab:	5f                   	pop    %edi
    38ac:	5d                   	pop    %ebp
    38ad:	c3                   	ret    
    38ae:	66 90                	xchg   %ax,%ax
    38b0:	50                   	push   %eax
    38b1:	50                   	push   %eax
    38b2:	68 98 d5 00 00       	push   $0xd598
    38b7:	6a 01                	push   $0x1
    38b9:	be f4 ff ff ff       	mov    $0xfffffff4,%esi
    38be:	e8 3d 19 00 00       	call   5200 <ddf_msg>
    38c3:	83 c4 10             	add    $0x10,%esp
    38c6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    38c9:	85 c0                	test   %eax,%eax
    38cb:	0f 84 38 ff ff ff    	je     3809 <pci_dev_add+0x1a9>
    38d1:	31 ff                	xor    %edi,%edi
    38d3:	83 ec 0c             	sub    $0xc,%esp
    38d6:	50                   	push   %eax
    38d7:	e8 84 bf 00 00       	call   f860 <free@plt>
    38dc:	83 c4 10             	add    $0x10,%esp
    38df:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    38e6:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    38ed:	85 ff                	test   %edi,%edi
    38ef:	0f 84 14 ff ff ff    	je     3809 <pci_dev_add+0x1a9>
    38f5:	83 ec 0c             	sub    $0xc,%esp
    38f8:	57                   	push   %edi
    38f9:	e8 c2 12 00 00       	call   4bc0 <ddf_fun_destroy>
    38fe:	83 c4 10             	add    $0x10,%esp
    3901:	8d 65 f4             	lea    -0xc(%ebp),%esp
    3904:	89 f0                	mov    %esi,%eax
    3906:	5b                   	pop    %ebx
    3907:	5e                   	pop    %esi
    3908:	5f                   	pop    %edi
    3909:	5d                   	pop    %ebp
    390a:	c3                   	ret    
    390b:	90                   	nop
    390c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3910:	50                   	push   %eax
    3911:	50                   	push   %eax
    3912:	68 50 d4 00 00       	push   $0xd450
    3917:	6a 01                	push   $0x1
    3919:	e8 e2 18 00 00       	call   5200 <ddf_msg>
    391e:	83 c4 10             	add    $0x10,%esp
    3921:	e9 e3 fe ff ff       	jmp    3809 <pci_dev_add+0x1a9>
    3926:	66 90                	xchg   %ax,%ax
    3928:	50                   	push   %eax
    3929:	50                   	push   %eax
    392a:	68 c1 d2 00 00       	push   $0xd2c1
    392f:	6a 04                	push   $0x4
    3931:	e8 ca 18 00 00       	call   5200 <ddf_msg>
    3936:	5a                   	pop    %edx
    3937:	59                   	pop    %ecx
    3938:	6a 00                	push   $0x0
    393a:	53                   	push   %ebx
    393b:	e8 b0 f2 ff ff       	call   2bf0 <pci_bus_scan>
    3940:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    3943:	83 c4 10             	add    $0x10,%esp
    3946:	85 c0                	test   %eax,%eax
    3948:	0f 84 bb fe ff ff    	je     3809 <pci_dev_add+0x1a9>
    394e:	83 ec 0c             	sub    $0xc,%esp
    3951:	50                   	push   %eax
    3952:	e8 09 bf 00 00       	call   f860 <free@plt>
    3957:	83 c4 10             	add    $0x10,%esp
    395a:	e9 aa fe ff ff       	jmp    3809 <pci_dev_add+0x1a9>
    395f:	90                   	nop
    3960:	56                   	push   %esi
    3961:	56                   	push   %esi
    3962:	68 c0 d5 00 00       	push   $0xd5c0
    3967:	6a 01                	push   $0x1
    3969:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    396e:	e8 8d 18 00 00       	call   5200 <ddf_msg>
    3973:	83 c4 10             	add    $0x10,%esp
    3976:	e9 4b ff ff ff       	jmp    38c6 <pci_dev_add+0x266>
    397b:	50                   	push   %eax
    397c:	68 d7 02 00 00       	push   $0x2d7
    3981:	68 97 ef 00 00       	push   $0xef97
    3986:	68 d8 d4 00 00       	push   $0xd4d8
    398b:	e8 d0 bb 00 00       	call   f560 <assert_abort@plt>
    3990:	50                   	push   %eax
    3991:	68 c5 02 00 00       	push   $0x2c5
    3996:	68 97 ef 00 00       	push   $0xef97
    399b:	68 51 d2 00 00       	push   $0xd251
    39a0:	e8 bb bb 00 00       	call   f560 <assert_abort@plt>
    39a5:	50                   	push   %eax
    39a6:	68 db 02 00 00       	push   $0x2db
    39ab:	68 97 ef 00 00       	push   $0xef97
    39b0:	68 64 d5 00 00       	push   $0xd564
    39b5:	e8 a6 bb 00 00       	call   f560 <assert_abort@plt>
    39ba:	50                   	push   %eax
    39bb:	68 da 02 00 00       	push   $0x2da
    39c0:	68 97 ef 00 00       	push   $0xef97
    39c5:	68 38 d5 00 00       	push   $0xd538
    39ca:	e8 91 bb 00 00       	call   f560 <assert_abort@plt>
    39cf:	50                   	push   %eax
    39d0:	68 d8 02 00 00       	push   $0x2d8
    39d5:	68 97 ef 00 00       	push   $0xef97
    39da:	68 04 d5 00 00       	push   $0xd504
    39df:	e8 7c bb 00 00       	call   f560 <assert_abort@plt>
    39e4:	50                   	push   %eax
    39e5:	68 c8 02 00 00       	push   $0x2c8
    39ea:	68 97 ef 00 00       	push   $0xef97
    39ef:	68 88 d4 00 00       	push   $0xd488
    39f4:	e8 67 bb 00 00       	call   f560 <assert_abort@plt>
    39f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00003a00 <pci_fun_delete>:
    3a00:	55                   	push   %ebp
    3a01:	89 e5                	mov    %esp,%ebp
    3a03:	53                   	push   %ebx
    3a04:	50                   	push   %eax
    3a05:	8b 5d 08             	mov    0x8(%ebp),%ebx
    3a08:	8b 43 24             	mov    0x24(%ebx),%eax
    3a0b:	85 c0                	test   %eax,%eax
    3a0d:	74 13                	je     3a22 <pci_fun_delete+0x22>
    3a0f:	83 ec 0c             	sub    $0xc,%esp
    3a12:	50                   	push   %eax
    3a13:	e8 48 be 00 00       	call   f860 <free@plt>
    3a18:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
    3a1f:	83 c4 10             	add    $0x10,%esp
    3a22:	8b 43 04             	mov    0x4(%ebx),%eax
    3a25:	c7 43 20 00 00 00 00 	movl   $0x0,0x20(%ebx)
    3a2c:	85 c0                	test   %eax,%eax
    3a2e:	74 10                	je     3a40 <pci_fun_delete+0x40>
    3a30:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    3a33:	89 45 08             	mov    %eax,0x8(%ebp)
    3a36:	c9                   	leave  
    3a37:	e9 84 11 00 00       	jmp    4bc0 <ddf_fun_destroy>
    3a3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3a40:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    3a43:	c9                   	leave  
    3a44:	c3                   	ret    
    3a45:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3a49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00003a50 <pci_fun_create_name>:
    3a50:	55                   	push   %ebp
    3a51:	89 e5                	mov    %esp,%ebp
    3a53:	83 ec 24             	sub    $0x24,%esp
    3a56:	8b 45 08             	mov    0x8(%ebp),%eax
    3a59:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    3a60:	8b 50 10             	mov    0x10(%eax),%edx
    3a63:	52                   	push   %edx
    3a64:	8b 48 0c             	mov    0xc(%eax),%ecx
    3a67:	51                   	push   %ecx
    3a68:	8b 40 08             	mov    0x8(%eax),%eax
    3a6b:	50                   	push   %eax
    3a6c:	8d 45 f4             	lea    -0xc(%ebp),%eax
    3a6f:	68 f1 d1 00 00       	push   $0xd1f1
    3a74:	50                   	push   %eax
    3a75:	e8 86 bc 00 00       	call   f700 <asprintf@plt>
    3a7a:	8b 45 f4             	mov    -0xc(%ebp),%eax
    3a7d:	c9                   	leave  
    3a7e:	c3                   	ret    
    3a7f:	90                   	nop

00003a80 <pci_alloc_resource_list>:
    3a80:	55                   	push   %ebp
    3a81:	89 e5                	mov    %esp,%ebp
    3a83:	8b 45 08             	mov    0x8(%ebp),%eax
    3a86:	8d 50 28             	lea    0x28(%eax),%edx
    3a89:	89 50 24             	mov    %edx,0x24(%eax)
    3a8c:	b0 01                	mov    $0x1,%al
    3a8e:	5d                   	pop    %ebp
    3a8f:	c3                   	ret    

00003a90 <pci_clean_resource_list>:
    3a90:	55                   	push   %ebp
    3a91:	89 e5                	mov    %esp,%ebp
    3a93:	8b 45 08             	mov    0x8(%ebp),%eax
    3a96:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
    3a9d:	5d                   	pop    %ebp
    3a9e:	c3                   	ret    
    3a9f:	90                   	nop

00003aa0 <pci_read_bars>:
    3aa0:	55                   	push   %ebp
    3aa1:	89 e5                	mov    %esp,%ebp
    3aa3:	57                   	push   %edi
    3aa4:	56                   	push   %esi
    3aa5:	53                   	push   %ebx
    3aa6:	83 ec 3c             	sub    $0x3c,%esp
    3aa9:	c7 45 e4 10 00 00 00 	movl   $0x10,-0x1c(%ebp)
    3ab0:	8b 5d 08             	mov    0x8(%ebp),%ebx
    3ab3:	89 df                	mov    %ebx,%edi
    3ab5:	e9 17 01 00 00       	jmp    3bd1 <pci_read_bars+0x131>
    3aba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3ac0:	89 d0                	mov    %edx,%eax
    3ac2:	d1 e8                	shr    %eax
    3ac4:	83 e0 03             	and    $0x3,%eax
    3ac7:	0f 84 13 03 00 00    	je     3de0 <pci_read_bars+0x340>
    3acd:	83 f8 02             	cmp    $0x2,%eax
    3ad0:	0f 85 ef 02 00 00    	jne    3dc5 <pci_read_bars+0x325>
    3ad6:	c6 45 d8 01          	movb   $0x1,-0x28(%ebp)
    3ada:	c7 45 cc f0 ff ff ff 	movl   $0xfffffff0,-0x34(%ebp)
    3ae1:	8b 77 08             	mov    0x8(%edi),%esi
    3ae4:	8b 47 0c             	mov    0xc(%edi),%eax
    3ae7:	c1 e0 0b             	shl    $0xb,%eax
    3aea:	8b 5d e0             	mov    -0x20(%ebp),%ebx
    3aed:	c1 e6 10             	shl    $0x10,%esi
    3af0:	83 ec 0c             	sub    $0xc,%esp
    3af3:	09 c6                	or     %eax,%esi
    3af5:	8b 47 10             	mov    0x10(%edi),%eax
    3af8:	c1 e0 08             	shl    $0x8,%eax
    3afb:	09 c6                	or     %eax,%esi
    3afd:	09 de                	or     %ebx,%esi
    3aff:	8b 1f                	mov    (%edi),%ebx
    3b01:	8d 43 20             	lea    0x20(%ebx),%eax
    3b04:	50                   	push   %eax
    3b05:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    3b08:	e8 73 bd 00 00       	call   f880 <fibril_mutex_lock@plt>
    3b0d:	8b 4b 04             	mov    0x4(%ebx),%ecx
    3b10:	83 c4 10             	add    $0x10,%esp
    3b13:	85 c9                	test   %ecx,%ecx
    3b15:	0f 84 e5 02 00 00    	je     3e00 <pci_read_bars+0x360>
    3b1b:	81 ce 00 00 00 80    	or     $0x80000000,%esi
    3b21:	50                   	push   %eax
    3b22:	50                   	push   %eax
    3b23:	56                   	push   %esi
    3b24:	51                   	push   %ecx
    3b25:	e8 36 bb 00 00       	call   f660 <pio_write_32@plt>
    3b2a:	8b 4b 08             	mov    0x8(%ebx),%ecx
    3b2d:	58                   	pop    %eax
    3b2e:	5a                   	pop    %edx
    3b2f:	6a ff                	push   $0xffffffff
    3b31:	51                   	push   %ecx
    3b32:	e8 29 bb 00 00       	call   f660 <pio_write_32@plt>
    3b37:	83 c4 10             	add    $0x10,%esp
    3b3a:	83 ec 0c             	sub    $0xc,%esp
    3b3d:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    3b40:	51                   	push   %ecx
    3b41:	e8 aa ba 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    3b46:	8b 77 08             	mov    0x8(%edi),%esi
    3b49:	8b 47 0c             	mov    0xc(%edi),%eax
    3b4c:	c1 e0 0b             	shl    $0xb,%eax
    3b4f:	8b 5d e0             	mov    -0x20(%ebp),%ebx
    3b52:	c1 e6 10             	shl    $0x10,%esi
    3b55:	09 c6                	or     %eax,%esi
    3b57:	8b 47 10             	mov    0x10(%edi),%eax
    3b5a:	c1 e0 08             	shl    $0x8,%eax
    3b5d:	09 c6                	or     %eax,%esi
    3b5f:	09 de                	or     %ebx,%esi
    3b61:	8b 1f                	mov    (%edi),%ebx
    3b63:	8d 43 20             	lea    0x20(%ebx),%eax
    3b66:	89 04 24             	mov    %eax,(%esp)
    3b69:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    3b6c:	e8 0f bd 00 00       	call   f880 <fibril_mutex_lock@plt>
    3b71:	8b 4b 04             	mov    0x4(%ebx),%ecx
    3b74:	83 c4 10             	add    $0x10,%esp
    3b77:	85 c9                	test   %ecx,%ecx
    3b79:	0f 84 b9 02 00 00    	je     3e38 <pci_read_bars+0x398>
    3b7f:	81 ce 00 00 00 80    	or     $0x80000000,%esi
    3b85:	50                   	push   %eax
    3b86:	50                   	push   %eax
    3b87:	56                   	push   %esi
    3b88:	51                   	push   %ecx
    3b89:	e8 d2 ba 00 00       	call   f660 <pio_write_32@plt>
    3b8e:	8b 53 08             	mov    0x8(%ebx),%edx
    3b91:	58                   	pop    %eax
    3b92:	52                   	push   %edx
    3b93:	e8 18 b9 00 00       	call   f4b0 <pio_read_32@plt>
    3b98:	83 c4 10             	add    $0x10,%esp
    3b9b:	89 c6                	mov    %eax,%esi
    3b9d:	83 ec 0c             	sub    $0xc,%esp
    3ba0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3ba3:	50                   	push   %eax
    3ba4:	e8 47 ba 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    3ba9:	83 c4 10             	add    $0x10,%esp
    3bac:	85 f6                	test   %esi,%esi
    3bae:	0f 85 b4 00 00 00    	jne    3c68 <pci_read_bars+0x1c8>
    3bb4:	80 7d d8 01          	cmpb   $0x1,-0x28(%ebp)
    3bb8:	19 c0                	sbb    %eax,%eax
    3bba:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    3bbd:	83 e0 fc             	and    $0xfffffffc,%eax
    3bc0:	8d 44 10 08          	lea    0x8(%eax,%edx,1),%eax
    3bc4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    3bc7:	83 7d e4 24          	cmpl   $0x24,-0x1c(%ebp)
    3bcb:	0f 8f 07 02 00 00    	jg     3dd8 <pci_read_bars+0x338>
    3bd1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    3bd4:	8b 77 08             	mov    0x8(%edi),%esi
    3bd7:	83 e0 fc             	and    $0xfffffffc,%eax
    3bda:	8b 1f                	mov    (%edi),%ebx
    3bdc:	89 c2                	mov    %eax,%edx
    3bde:	89 45 e0             	mov    %eax,-0x20(%ebp)
    3be1:	8b 47 0c             	mov    0xc(%edi),%eax
    3be4:	83 ec 0c             	sub    $0xc,%esp
    3be7:	c1 e0 0b             	shl    $0xb,%eax
    3bea:	c1 e6 10             	shl    $0x10,%esi
    3bed:	09 c6                	or     %eax,%esi
    3bef:	8b 47 10             	mov    0x10(%edi),%eax
    3bf2:	c1 e0 08             	shl    $0x8,%eax
    3bf5:	09 c6                	or     %eax,%esi
    3bf7:	8d 43 20             	lea    0x20(%ebx),%eax
    3bfa:	50                   	push   %eax
    3bfb:	09 d6                	or     %edx,%esi
    3bfd:	89 45 d8             	mov    %eax,-0x28(%ebp)
    3c00:	e8 7b bc 00 00       	call   f880 <fibril_mutex_lock@plt>
    3c05:	8b 43 04             	mov    0x4(%ebx),%eax
    3c08:	83 c4 10             	add    $0x10,%esp
    3c0b:	85 c0                	test   %eax,%eax
    3c0d:	0f 84 05 02 00 00    	je     3e18 <pci_read_bars+0x378>
    3c13:	81 ce 00 00 00 80    	or     $0x80000000,%esi
    3c19:	52                   	push   %edx
    3c1a:	52                   	push   %edx
    3c1b:	56                   	push   %esi
    3c1c:	50                   	push   %eax
    3c1d:	e8 3e ba 00 00       	call   f660 <pio_write_32@plt>
    3c22:	8b 5b 08             	mov    0x8(%ebx),%ebx
    3c25:	59                   	pop    %ecx
    3c26:	53                   	push   %ebx
    3c27:	e8 84 b8 00 00       	call   f4b0 <pio_read_32@plt>
    3c2c:	83 c4 10             	add    $0x10,%esp
    3c2f:	89 45 dc             	mov    %eax,-0x24(%ebp)
    3c32:	83 ec 0c             	sub    $0xc,%esp
    3c35:	8b 75 d8             	mov    -0x28(%ebp),%esi
    3c38:	56                   	push   %esi
    3c39:	e8 b2 b9 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    3c3e:	8b 55 dc             	mov    -0x24(%ebp),%edx
    3c41:	83 c4 10             	add    $0x10,%esp
    3c44:	89 d0                	mov    %edx,%eax
    3c46:	83 e0 01             	and    $0x1,%eax
    3c49:	89 45 d0             	mov    %eax,-0x30(%ebp)
    3c4c:	0f 84 6e fe ff ff    	je     3ac0 <pci_read_bars+0x20>
    3c52:	c6 45 d8 00          	movb   $0x0,-0x28(%ebp)
    3c56:	c7 45 cc fc ff ff ff 	movl   $0xfffffffc,-0x34(%ebp)
    3c5d:	e9 7f fe ff ff       	jmp    3ae1 <pci_read_bars+0x41>
    3c62:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3c68:	8b 45 cc             	mov    -0x34(%ebp),%eax
    3c6b:	8b 1f                	mov    (%edi),%ebx
    3c6d:	21 c6                	and    %eax,%esi
    3c6f:	8b 47 0c             	mov    0xc(%edi),%eax
    3c72:	89 75 d4             	mov    %esi,-0x2c(%ebp)
    3c75:	8b 77 08             	mov    0x8(%edi),%esi
    3c78:	c1 e0 0b             	shl    $0xb,%eax
    3c7b:	83 ec 0c             	sub    $0xc,%esp
    3c7e:	c1 e6 10             	shl    $0x10,%esi
    3c81:	09 c6                	or     %eax,%esi
    3c83:	8b 47 10             	mov    0x10(%edi),%eax
    3c86:	c1 e0 08             	shl    $0x8,%eax
    3c89:	09 c6                	or     %eax,%esi
    3c8b:	8b 45 e0             	mov    -0x20(%ebp),%eax
    3c8e:	09 c6                	or     %eax,%esi
    3c90:	8d 43 20             	lea    0x20(%ebx),%eax
    3c93:	50                   	push   %eax
    3c94:	89 45 cc             	mov    %eax,-0x34(%ebp)
    3c97:	e8 e4 bb 00 00       	call   f880 <fibril_mutex_lock@plt>
    3c9c:	8b 4b 04             	mov    0x4(%ebx),%ecx
    3c9f:	83 c4 10             	add    $0x10,%esp
    3ca2:	85 c9                	test   %ecx,%ecx
    3ca4:	0f 84 86 02 00 00    	je     3f30 <pci_read_bars+0x490>
    3caa:	81 ce 00 00 00 80    	or     $0x80000000,%esi
    3cb0:	50                   	push   %eax
    3cb1:	50                   	push   %eax
    3cb2:	56                   	push   %esi
    3cb3:	51                   	push   %ecx
    3cb4:	e8 a7 b9 00 00       	call   f660 <pio_write_32@plt>
    3cb9:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    3cbc:	8b 5b 08             	mov    0x8(%ebx),%ebx
    3cbf:	58                   	pop    %eax
    3cc0:	5a                   	pop    %edx
    3cc1:	51                   	push   %ecx
    3cc2:	53                   	push   %ebx
    3cc3:	e8 98 b9 00 00       	call   f660 <pio_write_32@plt>
    3cc8:	83 c4 10             	add    $0x10,%esp
    3ccb:	83 ec 0c             	sub    $0xc,%esp
    3cce:	8b 75 cc             	mov    -0x34(%ebp),%esi
    3cd1:	56                   	push   %esi
    3cd2:	e8 19 b9 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    3cd7:	8b 5f 08             	mov    0x8(%edi),%ebx
    3cda:	8b 47 0c             	mov    0xc(%edi),%eax
    3cdd:	c1 e0 0b             	shl    $0xb,%eax
    3ce0:	8b 37                	mov    (%edi),%esi
    3ce2:	c1 e3 10             	shl    $0x10,%ebx
    3ce5:	09 c3                	or     %eax,%ebx
    3ce7:	8b 47 10             	mov    0x10(%edi),%eax
    3cea:	c1 e0 08             	shl    $0x8,%eax
    3ced:	09 c3                	or     %eax,%ebx
    3cef:	8b 45 e0             	mov    -0x20(%ebp),%eax
    3cf2:	09 c3                	or     %eax,%ebx
    3cf4:	8d 46 20             	lea    0x20(%esi),%eax
    3cf7:	89 04 24             	mov    %eax,(%esp)
    3cfa:	89 45 e0             	mov    %eax,-0x20(%ebp)
    3cfd:	e8 7e bb 00 00       	call   f880 <fibril_mutex_lock@plt>
    3d02:	8b 46 04             	mov    0x4(%esi),%eax
    3d05:	83 c4 10             	add    $0x10,%esp
    3d08:	85 c0                	test   %eax,%eax
    3d0a:	0f 84 40 02 00 00    	je     3f50 <pci_read_bars+0x4b0>
    3d10:	81 cb 00 00 00 80    	or     $0x80000000,%ebx
    3d16:	52                   	push   %edx
    3d17:	52                   	push   %edx
    3d18:	53                   	push   %ebx
    3d19:	50                   	push   %eax
    3d1a:	e8 41 b9 00 00       	call   f660 <pio_write_32@plt>
    3d1f:	8b 5e 08             	mov    0x8(%esi),%ebx
    3d22:	59                   	pop    %ecx
    3d23:	53                   	push   %ebx
    3d24:	e8 87 b7 00 00       	call   f4b0 <pio_read_32@plt>
    3d29:	83 c4 10             	add    $0x10,%esp
    3d2c:	89 c3                	mov    %eax,%ebx
    3d2e:	83 ec 0c             	sub    $0xc,%esp
    3d31:	8b 45 e0             	mov    -0x20(%ebp),%eax
    3d34:	50                   	push   %eax
    3d35:	e8 b6 b8 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    3d3a:	8b 75 d4             	mov    -0x2c(%ebp),%esi
    3d3d:	83 c4 10             	add    $0x10,%esp
    3d40:	89 f0                	mov    %esi,%eax
    3d42:	f7 d8                	neg    %eax
    3d44:	21 c6                	and    %eax,%esi
    3d46:	89 75 e0             	mov    %esi,-0x20(%ebp)
    3d49:	80 7d d8 00          	cmpb   $0x0,-0x28(%ebp)
    3d4d:	0f 85 55 01 00 00    	jne    3ea8 <pci_read_bars+0x408>
    3d53:	89 d8                	mov    %ebx,%eax
    3d55:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
    3d5c:	83 e0 f0             	and    $0xfffffff0,%eax
    3d5f:	89 45 c0             	mov    %eax,-0x40(%ebp)
    3d62:	8b 55 c0             	mov    -0x40(%ebp),%edx
    3d65:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
    3d68:	09 d1                	or     %edx,%ecx
    3d6a:	0f 85 08 01 00 00    	jne    3e78 <pci_read_bars+0x3d8>
    3d70:	8b 4f 24             	mov    0x24(%edi),%ecx
    3d73:	8b 47 20             	mov    0x20(%edi),%eax
    3d76:	85 c9                	test   %ecx,%ecx
    3d78:	0f 84 12 02 00 00    	je     3f90 <pci_read_bars+0x4f0>
    3d7e:	83 f8 09             	cmp    $0x9,%eax
    3d81:	0f 87 f4 01 00 00    	ja     3f7b <pci_read_bars+0x4db>
    3d87:	8d 1c 40             	lea    (%eax,%eax,2),%ebx
    3d8a:	8d 0c d9             	lea    (%ecx,%ebx,8),%ecx
    3d8d:	8b 5d d0             	mov    -0x30(%ebp),%ebx
    3d90:	85 db                	test   %ebx,%ebx
    3d92:	0f 85 b8 00 00 00    	jne    3e50 <pci_read_bars+0x3b0>
    3d98:	8b 5d c0             	mov    -0x40(%ebp),%ebx
    3d9b:	8b 75 c4             	mov    -0x3c(%ebp),%esi
    3d9e:	8b 55 e0             	mov    -0x20(%ebp),%edx
    3da1:	c7 01 02 00 00 00    	movl   $0x2,(%ecx)
    3da7:	89 59 04             	mov    %ebx,0x4(%ecx)
    3daa:	89 71 08             	mov    %esi,0x8(%ecx)
    3dad:	89 51 0c             	mov    %edx,0xc(%ecx)
    3db0:	c6 41 10 00          	movb   $0x0,0x10(%ecx)
    3db4:	c7 41 14 00 00 00 00 	movl   $0x0,0x14(%ecx)
    3dbb:	40                   	inc    %eax
    3dbc:	89 47 20             	mov    %eax,0x20(%edi)
    3dbf:	80 7d d8 00          	cmpb   $0x0,-0x28(%ebp)
    3dc3:	75 2b                	jne    3df0 <pci_read_bars+0x350>
    3dc5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    3dc8:	83 c0 04             	add    $0x4,%eax
    3dcb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    3dce:	83 7d e4 24          	cmpl   $0x24,-0x1c(%ebp)
    3dd2:	0f 8e f9 fd ff ff    	jle    3bd1 <pci_read_bars+0x131>
    3dd8:	8d 65 f4             	lea    -0xc(%ebp),%esp
    3ddb:	5b                   	pop    %ebx
    3ddc:	5e                   	pop    %esi
    3ddd:	5f                   	pop    %edi
    3dde:	5d                   	pop    %ebp
    3ddf:	c3                   	ret    
    3de0:	c6 45 d8 00          	movb   $0x0,-0x28(%ebp)
    3de4:	c7 45 cc f0 ff ff ff 	movl   $0xfffffff0,-0x34(%ebp)
    3deb:	e9 f1 fc ff ff       	jmp    3ae1 <pci_read_bars+0x41>
    3df0:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    3df3:	83 c2 08             	add    $0x8,%edx
    3df6:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    3df9:	e9 c9 fd ff ff       	jmp    3bc7 <pci_read_bars+0x127>
    3dfe:	66 90                	xchg   %ax,%ax
    3e00:	50                   	push   %eax
    3e01:	50                   	push   %eax
    3e02:	8b 43 0c             	mov    0xc(%ebx),%eax
    3e05:	6a ff                	push   $0xffffffff
    3e07:	01 c6                	add    %eax,%esi
    3e09:	56                   	push   %esi
    3e0a:	e8 51 b8 00 00       	call   f660 <pio_write_32@plt>
    3e0f:	83 c4 10             	add    $0x10,%esp
    3e12:	e9 23 fd ff ff       	jmp    3b3a <pci_read_bars+0x9a>
    3e17:	90                   	nop
    3e18:	83 ec 0c             	sub    $0xc,%esp
    3e1b:	8b 43 0c             	mov    0xc(%ebx),%eax
    3e1e:	01 c6                	add    %eax,%esi
    3e20:	56                   	push   %esi
    3e21:	e8 8a b6 00 00       	call   f4b0 <pio_read_32@plt>
    3e26:	83 c4 10             	add    $0x10,%esp
    3e29:	89 45 dc             	mov    %eax,-0x24(%ebp)
    3e2c:	e9 01 fe ff ff       	jmp    3c32 <pci_read_bars+0x192>
    3e31:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3e38:	83 ec 0c             	sub    $0xc,%esp
    3e3b:	8b 43 0c             	mov    0xc(%ebx),%eax
    3e3e:	01 c6                	add    %eax,%esi
    3e40:	56                   	push   %esi
    3e41:	e8 6a b6 00 00       	call   f4b0 <pio_read_32@plt>
    3e46:	83 c4 10             	add    $0x10,%esp
    3e49:	89 c6                	mov    %eax,%esi
    3e4b:	e9 4d fd ff ff       	jmp    3b9d <pci_read_bars+0xfd>
    3e50:	8b 5d c0             	mov    -0x40(%ebp),%ebx
    3e53:	8b 75 c4             	mov    -0x3c(%ebp),%esi
    3e56:	8b 55 e0             	mov    -0x20(%ebp),%edx
    3e59:	c7 01 01 00 00 00    	movl   $0x1,(%ecx)
    3e5f:	89 59 04             	mov    %ebx,0x4(%ecx)
    3e62:	89 71 08             	mov    %esi,0x8(%ecx)
    3e65:	89 51 0c             	mov    %edx,0xc(%ecx)
    3e68:	c6 41 10 01          	movb   $0x1,0x10(%ecx)
    3e6c:	c7 41 14 00 00 00 00 	movl   $0x0,0x14(%ecx)
    3e73:	e9 43 ff ff ff       	jmp    3dbb <pci_read_bars+0x31b>
    3e78:	83 ec 0c             	sub    $0xc,%esp
    3e7b:	8b 47 04             	mov    0x4(%edi),%eax
    3e7e:	50                   	push   %eax
    3e7f:	e8 2c 0d 00 00       	call   4bb0 <ddf_fun_get_name>
    3e84:	5a                   	pop    %edx
    3e85:	8b 5d e0             	mov    -0x20(%ebp),%ebx
    3e88:	8b 75 c4             	mov    -0x3c(%ebp),%esi
    3e8b:	8b 55 c0             	mov    -0x40(%ebp),%edx
    3e8e:	59                   	pop    %ecx
    3e8f:	53                   	push   %ebx
    3e90:	56                   	push   %esi
    3e91:	52                   	push   %edx
    3e92:	50                   	push   %eax
    3e93:	68 64 d3 00 00       	push   $0xd364
    3e98:	6a 04                	push   $0x4
    3e9a:	e8 61 13 00 00       	call   5200 <ddf_msg>
    3e9f:	83 c4 20             	add    $0x20,%esp
    3ea2:	e9 c9 fe ff ff       	jmp    3d70 <pci_read_bars+0x2d0>
    3ea7:	90                   	nop
    3ea8:	8b 4f 08             	mov    0x8(%edi),%ecx
    3eab:	8b 47 0c             	mov    0xc(%edi),%eax
    3eae:	c1 e0 0b             	shl    $0xb,%eax
    3eb1:	8b 17                	mov    (%edi),%edx
    3eb3:	c1 e1 10             	shl    $0x10,%ecx
    3eb6:	83 ec 0c             	sub    $0xc,%esp
    3eb9:	09 c1                	or     %eax,%ecx
    3ebb:	8b 47 10             	mov    0x10(%edi),%eax
    3ebe:	c1 e0 08             	shl    $0x8,%eax
    3ec1:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    3ec4:	09 c1                	or     %eax,%ecx
    3ec6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    3ec9:	83 c0 04             	add    $0x4,%eax
    3ecc:	83 e0 fc             	and    $0xfffffffc,%eax
    3ecf:	09 c1                	or     %eax,%ecx
    3ed1:	8d 42 20             	lea    0x20(%edx),%eax
    3ed4:	50                   	push   %eax
    3ed5:	89 45 dc             	mov    %eax,-0x24(%ebp)
    3ed8:	89 ce                	mov    %ecx,%esi
    3eda:	e8 a1 b9 00 00       	call   f880 <fibril_mutex_lock@plt>
    3edf:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    3ee2:	83 c4 10             	add    $0x10,%esp
    3ee5:	8b 42 04             	mov    0x4(%edx),%eax
    3ee8:	85 c0                	test   %eax,%eax
    3eea:	74 7c                	je     3f68 <pci_read_bars+0x4c8>
    3eec:	89 f1                	mov    %esi,%ecx
    3eee:	52                   	push   %edx
    3eef:	81 c9 00 00 00 80    	or     $0x80000000,%ecx
    3ef5:	52                   	push   %edx
    3ef6:	51                   	push   %ecx
    3ef7:	50                   	push   %eax
    3ef8:	e8 63 b7 00 00       	call   f660 <pio_write_32@plt>
    3efd:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    3f00:	8b 72 08             	mov    0x8(%edx),%esi
    3f03:	59                   	pop    %ecx
    3f04:	56                   	push   %esi
    3f05:	e8 a6 b5 00 00       	call   f4b0 <pio_read_32@plt>
    3f0a:	83 c4 10             	add    $0x10,%esp
    3f0d:	83 ec 0c             	sub    $0xc,%esp
    3f10:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    3f13:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    3f16:	83 e3 f0             	and    $0xfffffff0,%ebx
    3f19:	51                   	push   %ecx
    3f1a:	e8 d1 b6 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    3f1f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3f22:	89 5d c0             	mov    %ebx,-0x40(%ebp)
    3f25:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    3f28:	83 c4 10             	add    $0x10,%esp
    3f2b:	e9 32 fe ff ff       	jmp    3d62 <pci_read_bars+0x2c2>
    3f30:	50                   	push   %eax
    3f31:	50                   	push   %eax
    3f32:	8b 45 dc             	mov    -0x24(%ebp),%eax
    3f35:	50                   	push   %eax
    3f36:	8b 43 0c             	mov    0xc(%ebx),%eax
    3f39:	01 c6                	add    %eax,%esi
    3f3b:	56                   	push   %esi
    3f3c:	e8 1f b7 00 00       	call   f660 <pio_write_32@plt>
    3f41:	83 c4 10             	add    $0x10,%esp
    3f44:	e9 82 fd ff ff       	jmp    3ccb <pci_read_bars+0x22b>
    3f49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3f50:	83 ec 0c             	sub    $0xc,%esp
    3f53:	8b 46 0c             	mov    0xc(%esi),%eax
    3f56:	01 c3                	add    %eax,%ebx
    3f58:	53                   	push   %ebx
    3f59:	e8 52 b5 00 00       	call   f4b0 <pio_read_32@plt>
    3f5e:	83 c4 10             	add    $0x10,%esp
    3f61:	89 c3                	mov    %eax,%ebx
    3f63:	e9 c6 fd ff ff       	jmp    3d2e <pci_read_bars+0x28e>
    3f68:	83 ec 0c             	sub    $0xc,%esp
    3f6b:	8b 4a 0c             	mov    0xc(%edx),%ecx
    3f6e:	01 f1                	add    %esi,%ecx
    3f70:	51                   	push   %ecx
    3f71:	e8 3a b5 00 00       	call   f4b0 <pio_read_32@plt>
    3f76:	83 c4 10             	add    $0x10,%esp
    3f79:	eb 92                	jmp    3f0d <pci_read_bars+0x46d>
    3f7b:	56                   	push   %esi
    3f7c:	68 b8 01 00 00       	push   $0x1b8
    3f81:	68 97 ef 00 00       	push   $0xef97
    3f86:	68 ac d1 00 00       	push   $0xd1ac
    3f8b:	e8 d0 b5 00 00       	call   f560 <assert_abort@plt>
    3f90:	57                   	push   %edi
    3f91:	68 b7 01 00 00       	push   $0x1b7
    3f96:	68 97 ef 00 00       	push   $0xef97
    3f9b:	68 97 d1 00 00       	push   $0xd197
    3fa0:	e8 bb b5 00 00       	call   f560 <assert_abort@plt>
    3fa5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3fa9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00003fb0 <pci_bar_mask_to_size>:
    3fb0:	55                   	push   %ebp
    3fb1:	89 e5                	mov    %esp,%ebp
    3fb3:	8b 55 08             	mov    0x8(%ebp),%edx
    3fb6:	5d                   	pop    %ebp
    3fb7:	89 d0                	mov    %edx,%eax
    3fb9:	f7 d8                	neg    %eax
    3fbb:	21 d0                	and    %edx,%eax
    3fbd:	c3                   	ret    
    3fbe:	66 90                	xchg   %ax,%ax

00003fc0 <main>:
    3fc0:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    3fc4:	83 e4 f0             	and    $0xfffffff0,%esp
    3fc7:	ff 71 fc             	pushl  -0x4(%ecx)
    3fca:	55                   	push   %ebp
    3fcb:	89 e5                	mov    %esp,%ebp
    3fcd:	51                   	push   %ecx
    3fce:	83 ec 10             	sub    $0x10,%esp
    3fd1:	68 08 d6 00 00       	push   $0xd608
    3fd6:	e8 d5 b3 00 00       	call   f3b0 <printf@plt>
    3fdb:	c7 04 24 d2 d2 00 00 	movl   $0xd2d2,(%esp)
    3fe2:	e8 09 12 00 00       	call   51f0 <ddf_log_init>
    3fe7:	c7 04 24 80 17 01 00 	movl   $0x11780,(%esp)
    3fee:	e8 9d 10 00 00       	call   5090 <ddf_driver_main>
    3ff3:	8b 4d fc             	mov    -0x4(%ebp),%ecx
    3ff6:	c9                   	leave  
    3ff7:	8d 61 fc             	lea    -0x4(%ecx),%esp
    3ffa:	c3                   	ret    
    3ffb:	66 90                	xchg   %ax,%ax
    3ffd:	66 90                	xchg   %ax,%ax
    3fff:	90                   	nop

00004000 <fun_del_ref>:
    4000:	55                   	push   %ebp
    4001:	83 ca ff             	or     $0xffffffff,%edx
    4004:	89 e5                	mov    %esp,%ebp
    4006:	57                   	push   %edi
    4007:	56                   	push   %esi
    4008:	53                   	push   %ebx
    4009:	83 ec 1c             	sub    $0x1c,%esp
    400c:	8b 70 0c             	mov    0xc(%eax),%esi
    400f:	f0 0f c1 50 08       	lock xadd %edx,0x8(%eax)
    4014:	4a                   	dec    %edx
    4015:	74 69                	je     4080 <fun_del_ref+0x80>
    4017:	83 c8 ff             	or     $0xffffffff,%eax
    401a:	f0 0f c1 46 04       	lock xadd %eax,0x4(%esi)
    401f:	48                   	dec    %eax
    4020:	74 0e                	je     4030 <fun_del_ref+0x30>
    4022:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4025:	5b                   	pop    %ebx
    4026:	5e                   	pop    %esi
    4027:	5f                   	pop    %edi
    4028:	5d                   	pop    %ebp
    4029:	c3                   	ret    
    402a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4030:	8b 46 08             	mov    0x8(%esi),%eax
    4033:	85 c0                	test   %eax,%eax
    4035:	74 0c                	je     4043 <fun_del_ref+0x43>
    4037:	83 ec 0c             	sub    $0xc,%esp
    403a:	50                   	push   %eax
    403b:	e8 80 b3 00 00       	call   f3c0 <async_hangup@plt>
    4040:	83 c4 10             	add    $0x10,%esp
    4043:	8b 46 10             	mov    0x10(%esi),%eax
    4046:	85 c0                	test   %eax,%eax
    4048:	74 0c                	je     4056 <fun_del_ref+0x56>
    404a:	83 ec 0c             	sub    $0xc,%esp
    404d:	50                   	push   %eax
    404e:	e8 0d b8 00 00       	call   f860 <free@plt>
    4053:	83 c4 10             	add    $0x10,%esp
    4056:	8b 46 0c             	mov    0xc(%esi),%eax
    4059:	85 c0                	test   %eax,%eax
    405b:	74 0c                	je     4069 <fun_del_ref+0x69>
    405d:	83 ec 0c             	sub    $0xc,%esp
    4060:	50                   	push   %eax
    4061:	e8 fa b7 00 00       	call   f860 <free@plt>
    4066:	83 c4 10             	add    $0x10,%esp
    4069:	83 ec 0c             	sub    $0xc,%esp
    406c:	56                   	push   %esi
    406d:	e8 ee b7 00 00       	call   f860 <free@plt>
    4072:	83 c4 10             	add    $0x10,%esp
    4075:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4078:	5b                   	pop    %ebx
    4079:	5e                   	pop    %esi
    407a:	5f                   	pop    %edi
    407b:	5d                   	pop    %ebp
    407c:	c3                   	ret    
    407d:	8d 76 00             	lea    0x0(%esi),%esi
    4080:	8b 58 1c             	mov    0x1c(%eax),%ebx
    4083:	89 c7                	mov    %eax,%edi
    4085:	8d 40 18             	lea    0x18(%eax),%eax
    4088:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    408b:	39 d8                	cmp    %ebx,%eax
    408d:	74 49                	je     40d8 <fun_del_ref+0xd8>
    408f:	90                   	nop
    4090:	8b 0b                	mov    (%ebx),%ecx
    4092:	85 c9                	test   %ecx,%ecx
    4094:	74 0e                	je     40a4 <fun_del_ref+0xa4>
    4096:	8b 53 04             	mov    0x4(%ebx),%edx
    4099:	85 d2                	test   %edx,%edx
    409b:	74 07                	je     40a4 <fun_del_ref+0xa4>
    409d:	89 0a                	mov    %ecx,(%edx)
    409f:	8b 0b                	mov    (%ebx),%ecx
    40a1:	89 51 04             	mov    %edx,0x4(%ecx)
    40a4:	8b 53 08             	mov    0x8(%ebx),%edx
    40a7:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
    40ad:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
    40b4:	85 d2                	test   %edx,%edx
    40b6:	74 0c                	je     40c4 <fun_del_ref+0xc4>
    40b8:	83 ec 0c             	sub    $0xc,%esp
    40bb:	52                   	push   %edx
    40bc:	e8 9f b7 00 00       	call   f860 <free@plt>
    40c1:	83 c4 10             	add    $0x10,%esp
    40c4:	83 ec 0c             	sub    $0xc,%esp
    40c7:	53                   	push   %ebx
    40c8:	e8 93 b7 00 00       	call   f860 <free@plt>
    40cd:	8b 5f 1c             	mov    0x1c(%edi),%ebx
    40d0:	83 c4 10             	add    $0x10,%esp
    40d3:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx
    40d6:	75 b8                	jne    4090 <fun_del_ref+0x90>
    40d8:	8b 57 20             	mov    0x20(%edi),%edx
    40db:	85 d2                	test   %edx,%edx
    40dd:	74 0c                	je     40eb <fun_del_ref+0xeb>
    40df:	83 ec 0c             	sub    $0xc,%esp
    40e2:	52                   	push   %edx
    40e3:	e8 78 b7 00 00       	call   f860 <free@plt>
    40e8:	83 c4 10             	add    $0x10,%esp
    40eb:	8b 57 14             	mov    0x14(%edi),%edx
    40ee:	85 d2                	test   %edx,%edx
    40f0:	74 0c                	je     40fe <fun_del_ref+0xfe>
    40f2:	83 ec 0c             	sub    $0xc,%esp
    40f5:	52                   	push   %edx
    40f6:	e8 65 b7 00 00       	call   f860 <free@plt>
    40fb:	83 c4 10             	add    $0x10,%esp
    40fe:	83 ec 0c             	sub    $0xc,%esp
    4101:	57                   	push   %edi
    4102:	e8 59 b7 00 00       	call   f860 <free@plt>
    4107:	83 c4 10             	add    $0x10,%esp
    410a:	e9 08 ff ff ff       	jmp    4017 <fun_del_ref+0x17>
    410f:	90                   	nop

00004110 <driver_connection_gen.constprop.7>:
    4110:	55                   	push   %ebp
    4111:	89 e5                	mov    %esp,%ebp
    4113:	57                   	push   %edi
    4114:	56                   	push   %esi
    4115:	53                   	push   %ebx
    4116:	83 ec 58             	sub    $0x58,%esp
    4119:	89 d3                	mov    %edx,%ebx
    411b:	8b 72 08             	mov    0x8(%edx),%esi
    411e:	89 45 b4             	mov    %eax,-0x4c(%ebp)
    4121:	68 14 18 01 00       	push   $0x11814
    4126:	e8 55 b7 00 00       	call   f880 <fibril_mutex_lock@plt>
    412b:	c7 04 24 14 18 01 00 	movl   $0x11814,(%esp)
    4132:	e8 f9 b2 00 00       	call   f430 <fibril_mutex_is_locked@plt>
    4137:	83 c4 10             	add    $0x10,%esp
    413a:	84 c0                	test   %al,%al
    413c:	0f 84 71 02 00 00    	je     43b3 <driver_connection_gen.constprop.7+0x2a3>
    4142:	a1 28 18 01 00       	mov    0x11828,%eax
    4147:	3d 24 18 01 00       	cmp    $0x11824,%eax
    414c:	8d 78 d4             	lea    -0x2c(%eax),%edi
    414f:	75 18                	jne    4169 <driver_connection_gen.constprop.7+0x59>
    4151:	e9 22 02 00 00       	jmp    4378 <driver_connection_gen.constprop.7+0x268>
    4156:	66 90                	xchg   %ax,%ax
    4158:	8b 40 04             	mov    0x4(%eax),%eax
    415b:	3d 24 18 01 00       	cmp    $0x11824,%eax
    4160:	8d 78 d4             	lea    -0x2c(%eax),%edi
    4163:	0f 84 0f 02 00 00    	je     4378 <driver_connection_gen.constprop.7+0x268>
    4169:	3b 77 04             	cmp    0x4(%edi),%esi
    416c:	75 ea                	jne    4158 <driver_connection_gen.constprop.7+0x48>
    416e:	8b 47 0c             	mov    0xc(%edi),%eax
    4171:	f0 ff 40 04          	lock incl 0x4(%eax)
    4175:	f0 ff 47 08          	lock incl 0x8(%edi)
    4179:	83 ec 0c             	sub    $0xc,%esp
    417c:	68 14 18 01 00       	push   $0x11814
    4181:	e8 6a b4 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    4186:	8b 47 28             	mov    0x28(%edi),%eax
    4189:	83 c4 10             	add    $0x10,%esp
    418c:	85 c0                	test   %eax,%eax
    418e:	74 20                	je     41b0 <driver_connection_gen.constprop.7+0xa0>
    4190:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    4193:	56                   	push   %esi
    4194:	57                   	push   %edi
    4195:	53                   	push   %ebx
    4196:	52                   	push   %edx
    4197:	ff d0                	call   *%eax
    4199:	89 f8                	mov    %edi,%eax
    419b:	e8 60 fe ff ff       	call   4000 <fun_del_ref>
    41a0:	83 c4 10             	add    $0x10,%esp
    41a3:	8d 65 f4             	lea    -0xc(%ebp),%esp
    41a6:	5b                   	pop    %ebx
    41a7:	5e                   	pop    %esi
    41a8:	5f                   	pop    %edi
    41a9:	5d                   	pop    %ebp
    41aa:	c3                   	ret    
    41ab:	90                   	nop
    41ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    41b0:	8b 47 24             	mov    0x24(%edi),%eax
    41b3:	85 c0                	test   %eax,%eax
    41b5:	0f 84 a5 01 00 00    	je     4360 <driver_connection_gen.constprop.7+0x250>
    41bb:	8b 00                	mov    (%eax),%eax
    41bd:	85 c0                	test   %eax,%eax
    41bf:	0f 84 9b 01 00 00    	je     4360 <driver_connection_gen.constprop.7+0x250>
    41c5:	83 ec 0c             	sub    $0xc,%esp
    41c8:	57                   	push   %edi
    41c9:	ff d0                	call   *%eax
    41cb:	8b 4d b4             	mov    -0x4c(%ebp),%ecx
    41ce:	89 c3                	mov    %eax,%ebx
    41d0:	58                   	pop    %eax
    41d1:	5a                   	pop    %edx
    41d2:	53                   	push   %ebx
    41d3:	51                   	push   %ecx
    41d4:	e8 27 b3 00 00       	call   f500 <async_answer_0@plt>
    41d9:	83 c4 10             	add    $0x10,%esp
    41dc:	85 db                	test   %ebx,%ebx
    41de:	0f 85 70 01 00 00    	jne    4354 <driver_connection_gen.constprop.7+0x244>
    41e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    41e8:	50                   	push   %eax
    41e9:	50                   	push   %eax
    41ea:	8d 45 c4             	lea    -0x3c(%ebp),%eax
    41ed:	6a 00                	push   $0x0
    41ef:	50                   	push   %eax
    41f0:	e8 3b b5 00 00       	call   f730 <async_get_call_timeout@plt>
    41f5:	8b 5d c4             	mov    -0x3c(%ebp),%ebx
    41f8:	83 c4 10             	add    $0x10,%esp
    41fb:	89 45 b4             	mov    %eax,-0x4c(%ebp)
    41fe:	85 db                	test   %ebx,%ebx
    4200:	0f 84 e2 00 00 00    	je     42e8 <driver_connection_gen.constprop.7+0x1d8>
    4206:	83 ec 0c             	sub    $0xc,%esp
    4209:	81 eb 00 04 00 00    	sub    $0x400,%ebx
    420f:	53                   	push   %ebx
    4210:	e8 cb 0f 00 00       	call   51e0 <is_valid_iface_idx>
    4215:	83 c4 10             	add    $0x10,%esp
    4218:	84 c0                	test   %al,%al
    421a:	75 2c                	jne    4248 <driver_connection_gen.constprop.7+0x138>
    421c:	8b 47 24             	mov    0x24(%edi),%eax
    421f:	85 c0                	test   %eax,%eax
    4221:	0f 84 91 00 00 00    	je     42b8 <driver_connection_gen.constprop.7+0x1a8>
    4227:	8b 40 44             	mov    0x44(%eax),%eax
    422a:	85 c0                	test   %eax,%eax
    422c:	0f 84 86 00 00 00    	je     42b8 <driver_connection_gen.constprop.7+0x1a8>
    4232:	8d 4d c4             	lea    -0x3c(%ebp),%ecx
    4235:	52                   	push   %edx
    4236:	51                   	push   %ecx
    4237:	8b 4d b4             	mov    -0x4c(%ebp),%ecx
    423a:	51                   	push   %ecx
    423b:	57                   	push   %edi
    423c:	ff d0                	call   *%eax
    423e:	83 c4 10             	add    $0x10,%esp
    4241:	eb a5                	jmp    41e8 <driver_connection_gen.constprop.7+0xd8>
    4243:	90                   	nop
    4244:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4248:	83 ec 0c             	sub    $0xc,%esp
    424b:	53                   	push   %ebx
    424c:	e8 8f 0f 00 00       	call   51e0 <is_valid_iface_idx>
    4251:	83 c4 10             	add    $0x10,%esp
    4254:	84 c0                	test   %al,%al
    4256:	0f 84 69 01 00 00    	je     43c5 <driver_connection_gen.constprop.7+0x2b5>
    425c:	8b 47 24             	mov    0x24(%edi),%eax
    425f:	85 c0                	test   %eax,%eax
    4261:	0f 84 b9 00 00 00    	je     4320 <driver_connection_gen.constprop.7+0x210>
    4267:	8b 44 98 08          	mov    0x8(%eax,%ebx,4),%eax
    426b:	89 45 b0             	mov    %eax,-0x50(%ebp)
    426e:	85 c0                	test   %eax,%eax
    4270:	0f 84 aa 00 00 00    	je     4320 <driver_connection_gen.constprop.7+0x210>
    4276:	83 ec 0c             	sub    $0xc,%esp
    4279:	53                   	push   %ebx
    427a:	e8 11 0f 00 00       	call   5190 <get_remote_iface>
    427f:	83 c4 10             	add    $0x10,%esp
    4282:	85 c0                	test   %eax,%eax
    4284:	0f 84 50 01 00 00    	je     43da <driver_connection_gen.constprop.7+0x2ca>
    428a:	8b 4d c8             	mov    -0x38(%ebp),%ecx
    428d:	52                   	push   %edx
    428e:	52                   	push   %edx
    428f:	51                   	push   %ecx
    4290:	50                   	push   %eax
    4291:	e8 2a 0f 00 00       	call   51c0 <get_remote_method>
    4296:	83 c4 10             	add    $0x10,%esp
    4299:	85 c0                	test   %eax,%eax
    429b:	0f 84 9f 00 00 00    	je     4340 <driver_connection_gen.constprop.7+0x230>
    42a1:	8d 55 c4             	lea    -0x3c(%ebp),%edx
    42a4:	8b 4d b0             	mov    -0x50(%ebp),%ecx
    42a7:	52                   	push   %edx
    42a8:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    42ab:	52                   	push   %edx
    42ac:	51                   	push   %ecx
    42ad:	57                   	push   %edi
    42ae:	ff d0                	call   *%eax
    42b0:	83 c4 10             	add    $0x10,%esp
    42b3:	e9 30 ff ff ff       	jmp    41e8 <driver_connection_gen.constprop.7+0xd8>
    42b8:	50                   	push   %eax
    42b9:	a1 ac 19 01 00       	mov    0x119ac,%eax
    42be:	53                   	push   %ebx
    42bf:	8b 00                	mov    (%eax),%eax
    42c1:	50                   	push   %eax
    42c2:	68 c0 d7 00 00       	push   $0xd7c0
    42c7:	e8 e4 b0 00 00       	call   f3b0 <printf@plt>
    42cc:	5b                   	pop    %ebx
    42cd:	58                   	pop    %eax
    42ce:	8b 45 b4             	mov    -0x4c(%ebp),%eax
    42d1:	6a f5                	push   $0xfffffff5
    42d3:	50                   	push   %eax
    42d4:	e8 27 b2 00 00       	call   f500 <async_answer_0@plt>
    42d9:	83 c4 10             	add    $0x10,%esp
    42dc:	e9 07 ff ff ff       	jmp    41e8 <driver_connection_gen.constprop.7+0xd8>
    42e1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    42e8:	8b 47 24             	mov    0x24(%edi),%eax
    42eb:	85 c0                	test   %eax,%eax
    42ed:	74 10                	je     42ff <driver_connection_gen.constprop.7+0x1ef>
    42ef:	8b 40 04             	mov    0x4(%eax),%eax
    42f2:	85 c0                	test   %eax,%eax
    42f4:	74 09                	je     42ff <driver_connection_gen.constprop.7+0x1ef>
    42f6:	83 ec 0c             	sub    $0xc,%esp
    42f9:	57                   	push   %edi
    42fa:	ff d0                	call   *%eax
    42fc:	83 c4 10             	add    $0x10,%esp
    42ff:	8b 75 b4             	mov    -0x4c(%ebp),%esi
    4302:	53                   	push   %ebx
    4303:	53                   	push   %ebx
    4304:	6a 00                	push   $0x0
    4306:	56                   	push   %esi
    4307:	e8 f4 b1 00 00       	call   f500 <async_answer_0@plt>
    430c:	89 f8                	mov    %edi,%eax
    430e:	e8 ed fc ff ff       	call   4000 <fun_del_ref>
    4313:	83 c4 10             	add    $0x10,%esp
    4316:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4319:	5b                   	pop    %ebx
    431a:	5e                   	pop    %esi
    431b:	5f                   	pop    %edi
    431c:	5d                   	pop    %ebp
    431d:	c3                   	ret    
    431e:	66 90                	xchg   %ax,%ax
    4320:	50                   	push   %eax
    4321:	50                   	push   %eax
    4322:	a1 ac 19 01 00       	mov    0x119ac,%eax
    4327:	8b 00                	mov    (%eax),%eax
    4329:	50                   	push   %eax
    432a:	68 fc d7 00 00       	push   $0xd7fc
    432f:	e8 7c b0 00 00       	call   f3b0 <printf@plt>
    4334:	83 c4 0c             	add    $0xc,%esp
    4337:	53                   	push   %ebx
    4338:	56                   	push   %esi
    4339:	68 20 d8 00 00       	push   $0xd820
    433e:	eb 87                	jmp    42c7 <driver_connection_gen.constprop.7+0x1b7>
    4340:	50                   	push   %eax
    4341:	50                   	push   %eax
    4342:	a1 ac 19 01 00       	mov    0x119ac,%eax
    4347:	8b 00                	mov    (%eax),%eax
    4349:	50                   	push   %eax
    434a:	68 58 d8 00 00       	push   $0xd858
    434f:	e9 73 ff ff ff       	jmp    42c7 <driver_connection_gen.constprop.7+0x1b7>
    4354:	89 f8                	mov    %edi,%eax
    4356:	e8 a5 fc ff ff       	call   4000 <fun_del_ref>
    435b:	e9 43 fe ff ff       	jmp    41a3 <driver_connection_gen.constprop.7+0x93>
    4360:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    4363:	50                   	push   %eax
    4364:	50                   	push   %eax
    4365:	6a 00                	push   $0x0
    4367:	52                   	push   %edx
    4368:	e8 93 b1 00 00       	call   f500 <async_answer_0@plt>
    436d:	83 c4 10             	add    $0x10,%esp
    4370:	e9 73 fe ff ff       	jmp    41e8 <driver_connection_gen.constprop.7+0xd8>
    4375:	8d 76 00             	lea    0x0(%esi),%esi
    4378:	83 ec 0c             	sub    $0xc,%esp
    437b:	68 14 18 01 00       	push   $0x11814
    4380:	e8 6b b2 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    4385:	a1 ac 19 01 00       	mov    0x119ac,%eax
    438a:	83 c4 0c             	add    $0xc,%esp
    438d:	8b 08                	mov    (%eax),%ecx
    438f:	56                   	push   %esi
    4390:	51                   	push   %ecx
    4391:	68 94 d8 00 00       	push   $0xd894
    4396:	e8 15 b0 00 00       	call   f3b0 <printf@plt>
    439b:	8b 7d b4             	mov    -0x4c(%ebp),%edi
    439e:	5b                   	pop    %ebx
    439f:	5e                   	pop    %esi
    43a0:	6a ff                	push   $0xffffffff
    43a2:	57                   	push   %edi
    43a3:	e8 58 b1 00 00       	call   f500 <async_answer_0@plt>
    43a8:	83 c4 10             	add    $0x10,%esp
    43ab:	8d 65 f4             	lea    -0xc(%ebp),%esp
    43ae:	5b                   	pop    %ebx
    43af:	5e                   	pop    %esi
    43b0:	5f                   	pop    %edi
    43b1:	5d                   	pop    %ebp
    43b2:	c3                   	ret    
    43b3:	51                   	push   %ecx
    43b4:	6a 6b                	push   $0x6b
    43b6:	68 3c d6 00 00       	push   $0xd63c
    43bb:	68 94 d7 00 00       	push   $0xd794
    43c0:	e8 9b b1 00 00       	call   f560 <assert_abort@plt>
    43c5:	50                   	push   %eax
    43c6:	68 fb 02 00 00       	push   $0x2fb
    43cb:	68 3c d6 00 00       	push   $0xd63c
    43d0:	68 4d d6 00 00       	push   $0xd64d
    43d5:	e8 86 b1 00 00       	call   f560 <assert_abort@plt>
    43da:	53                   	push   %ebx
    43db:	68 aa 01 00 00       	push   $0x1aa
    43e0:	68 3c d6 00 00       	push   $0xd63c
    43e5:	68 65 d6 00 00       	push   $0xd665
    43ea:	e8 71 b1 00 00       	call   f560 <assert_abort@plt>
    43ef:	90                   	nop

000043f0 <driver_connection_driver>:
    43f0:	55                   	push   %ebp
    43f1:	89 e5                	mov    %esp,%ebp
    43f3:	8b 55 0c             	mov    0xc(%ebp),%edx
    43f6:	8b 45 08             	mov    0x8(%ebp),%eax
    43f9:	5d                   	pop    %ebp
    43fa:	e9 11 fd ff ff       	jmp    4110 <driver_connection_gen.constprop.7>
    43ff:	90                   	nop

00004400 <driver_connection_client>:
    4400:	55                   	push   %ebp
    4401:	89 e5                	mov    %esp,%ebp
    4403:	8b 55 0c             	mov    0xc(%ebp),%edx
    4406:	8b 45 08             	mov    0x8(%ebp),%eax
    4409:	5d                   	pop    %ebp
    440a:	e9 01 fd ff ff       	jmp    4110 <driver_connection_gen.constprop.7>
    440f:	90                   	nop

00004410 <driver_connection_devman>:
    4410:	55                   	push   %ebp
    4411:	89 e5                	mov    %esp,%ebp
    4413:	57                   	push   %edi
    4414:	56                   	push   %esi
    4415:	53                   	push   %ebx
    4416:	83 ec 54             	sub    $0x54,%esp
    4419:	8d 75 c4             	lea    -0x3c(%ebp),%esi
    441c:	8b 45 08             	mov    0x8(%ebp),%eax
    441f:	6a 00                	push   $0x0
    4421:	50                   	push   %eax
    4422:	e8 d9 b0 00 00       	call   f500 <async_answer_0@plt>
    4427:	83 c4 10             	add    $0x10,%esp
    442a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4430:	50                   	push   %eax
    4431:	50                   	push   %eax
    4432:	6a 00                	push   $0x0
    4434:	56                   	push   %esi
    4435:	e8 f6 b2 00 00       	call   f730 <async_get_call_timeout@plt>
    443a:	83 c4 10             	add    $0x10,%esp
    443d:	89 c3                	mov    %eax,%ebx
    443f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    4442:	85 c0                	test   %eax,%eax
    4444:	0f 84 de 03 00 00    	je     4828 <driver_connection_devman+0x418>
    444a:	2d 00 04 00 00       	sub    $0x400,%eax
    444f:	83 f8 04             	cmp    $0x4,%eax
    4452:	0f 87 b8 03 00 00    	ja     4810 <driver_connection_devman+0x400>
    4458:	8b 7d c8             	mov    -0x38(%ebp),%edi
    445b:	ff 24 85 44 d9 00 00 	jmp    *0xd944(,%eax,4)
    4462:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4468:	83 ec 0c             	sub    $0xc,%esp
    446b:	68 14 18 01 00       	push   $0x11814
    4470:	e8 0b b4 00 00       	call   f880 <fibril_mutex_lock@plt>
    4475:	c7 04 24 14 18 01 00 	movl   $0x11814,(%esp)
    447c:	e8 af af 00 00       	call   f430 <fibril_mutex_is_locked@plt>
    4481:	83 c4 10             	add    $0x10,%esp
    4484:	84 c0                	test   %al,%al
    4486:	0f 84 5a 04 00 00    	je     48e6 <driver_connection_devman+0x4d6>
    448c:	a1 28 18 01 00       	mov    0x11828,%eax
    4491:	3d 24 18 01 00       	cmp    $0x11824,%eax
    4496:	8d 50 d4             	lea    -0x2c(%eax),%edx
    4499:	75 16                	jne    44b1 <driver_connection_devman+0xa1>
    449b:	e9 90 03 00 00       	jmp    4830 <driver_connection_devman+0x420>
    44a0:	8b 40 04             	mov    0x4(%eax),%eax
    44a3:	3d 24 18 01 00       	cmp    $0x11824,%eax
    44a8:	8d 50 d4             	lea    -0x2c(%eax),%edx
    44ab:	0f 84 7f 03 00 00    	je     4830 <driver_connection_devman+0x420>
    44b1:	3b 7a 04             	cmp    0x4(%edx),%edi
    44b4:	75 ea                	jne    44a0 <driver_connection_devman+0x90>
    44b6:	8b 42 0c             	mov    0xc(%edx),%eax
    44b9:	f0 ff 40 04          	lock incl 0x4(%eax)
    44bd:	f0 ff 42 08          	lock incl 0x8(%edx)
    44c1:	83 ec 0c             	sub    $0xc,%esp
    44c4:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    44c7:	68 14 18 01 00       	push   $0x11814
    44cc:	e8 1f b1 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    44d1:	a1 ac 19 01 00       	mov    0x119ac,%eax
    44d6:	83 c4 10             	add    $0x10,%esp
    44d9:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    44dc:	8b 40 04             	mov    0x4(%eax),%eax
    44df:	8b 40 0c             	mov    0xc(%eax),%eax
    44e2:	85 c0                	test   %eax,%eax
    44e4:	0f 84 76 03 00 00    	je     4860 <driver_connection_devman+0x450>
    44ea:	83 ec 0c             	sub    $0xc,%esp
    44ed:	52                   	push   %edx
    44ee:	ff d0                	call   *%eax
    44f0:	83 c4 10             	add    $0x10,%esp
    44f3:	89 c7                	mov    %eax,%edi
    44f5:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    44f8:	89 d0                	mov    %edx,%eax
    44fa:	e8 01 fb ff ff       	call   4000 <fun_del_ref>
    44ff:	51                   	push   %ecx
    4500:	51                   	push   %ecx
    4501:	57                   	push   %edi
    4502:	53                   	push   %ebx
    4503:	e8 f8 af 00 00       	call   f500 <async_answer_0@plt>
    4508:	83 c4 10             	add    $0x10,%esp
    450b:	e9 20 ff ff ff       	jmp    4430 <driver_connection_devman+0x20>
    4510:	83 ec 0c             	sub    $0xc,%esp
    4513:	68 2c 18 01 00       	push   $0x1182c
    4518:	e8 63 b3 00 00       	call   f880 <fibril_mutex_lock@plt>
    451d:	c7 04 24 2c 18 01 00 	movl   $0x1182c,(%esp)
    4524:	e8 07 af 00 00       	call   f430 <fibril_mutex_is_locked@plt>
    4529:	83 c4 10             	add    $0x10,%esp
    452c:	84 c0                	test   %al,%al
    452e:	0f 84 a0 03 00 00    	je     48d4 <driver_connection_devman+0x4c4>
    4534:	a1 40 18 01 00       	mov    0x11840,%eax
    4539:	3d 3c 18 01 00       	cmp    $0x1183c,%eax
    453e:	8d 50 ec             	lea    -0x14(%eax),%edx
    4541:	75 16                	jne    4559 <driver_connection_devman+0x149>
    4543:	e9 08 03 00 00       	jmp    4850 <driver_connection_devman+0x440>
    4548:	8b 40 04             	mov    0x4(%eax),%eax
    454b:	3d 3c 18 01 00       	cmp    $0x1183c,%eax
    4550:	8d 50 ec             	lea    -0x14(%eax),%edx
    4553:	0f 84 f7 02 00 00    	je     4850 <driver_connection_devman+0x440>
    4559:	3b 78 ec             	cmp    -0x14(%eax),%edi
    455c:	75 ea                	jne    4548 <driver_connection_devman+0x138>
    455e:	8d 7a 04             	lea    0x4(%edx),%edi
    4561:	f0 ff 42 04          	lock incl 0x4(%edx)
    4565:	83 ec 0c             	sub    $0xc,%esp
    4568:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    456b:	68 2c 18 01 00       	push   $0x1182c
    4570:	e8 7b b0 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    4575:	a1 ac 19 01 00       	mov    0x119ac,%eax
    457a:	83 c4 10             	add    $0x10,%esp
    457d:	8b 40 04             	mov    0x4(%eax),%eax
    4580:	8b 40 08             	mov    0x8(%eax),%eax
    4583:	85 c0                	test   %eax,%eax
    4585:	0f 85 88 00 00 00    	jne    4613 <driver_connection_devman+0x203>
    458b:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    4590:	e9 63 02 00 00       	jmp    47f8 <driver_connection_devman+0x3e8>
    4595:	8d 76 00             	lea    0x0(%esi),%esi
    4598:	83 ec 0c             	sub    $0xc,%esp
    459b:	68 2c 18 01 00       	push   $0x1182c
    45a0:	e8 db b2 00 00       	call   f880 <fibril_mutex_lock@plt>
    45a5:	c7 04 24 2c 18 01 00 	movl   $0x1182c,(%esp)
    45ac:	e8 7f ae 00 00       	call   f430 <fibril_mutex_is_locked@plt>
    45b1:	83 c4 10             	add    $0x10,%esp
    45b4:	84 c0                	test   %al,%al
    45b6:	0f 84 18 03 00 00    	je     48d4 <driver_connection_devman+0x4c4>
    45bc:	a1 40 18 01 00       	mov    0x11840,%eax
    45c1:	3d 3c 18 01 00       	cmp    $0x1183c,%eax
    45c6:	8d 50 ec             	lea    -0x14(%eax),%edx
    45c9:	75 16                	jne    45e1 <driver_connection_devman+0x1d1>
    45cb:	e9 80 02 00 00       	jmp    4850 <driver_connection_devman+0x440>
    45d0:	8b 40 04             	mov    0x4(%eax),%eax
    45d3:	3d 3c 18 01 00       	cmp    $0x1183c,%eax
    45d8:	8d 50 ec             	lea    -0x14(%eax),%edx
    45db:	0f 84 6f 02 00 00    	je     4850 <driver_connection_devman+0x440>
    45e1:	3b 78 ec             	cmp    -0x14(%eax),%edi
    45e4:	75 ea                	jne    45d0 <driver_connection_devman+0x1c0>
    45e6:	8d 7a 04             	lea    0x4(%edx),%edi
    45e9:	f0 ff 42 04          	lock incl 0x4(%edx)
    45ed:	83 ec 0c             	sub    $0xc,%esp
    45f0:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    45f3:	68 2c 18 01 00       	push   $0x1182c
    45f8:	e8 f3 af 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    45fd:	a1 ac 19 01 00       	mov    0x119ac,%eax
    4602:	83 c4 10             	add    $0x10,%esp
    4605:	8b 40 04             	mov    0x4(%eax),%eax
    4608:	8b 40 04             	mov    0x4(%eax),%eax
    460b:	85 c0                	test   %eax,%eax
    460d:	0f 84 78 ff ff ff    	je     458b <driver_connection_devman+0x17b>
    4613:	83 ec 0c             	sub    $0xc,%esp
    4616:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    4619:	52                   	push   %edx
    461a:	ff d0                	call   *%eax
    461c:	83 c4 10             	add    $0x10,%esp
    461f:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    4622:	85 c0                	test   %eax,%eax
    4624:	0f 85 ce 01 00 00    	jne    47f8 <driver_connection_devman+0x3e8>
    462a:	83 c9 ff             	or     $0xffffffff,%ecx
    462d:	f0 0f c1 0f          	lock xadd %ecx,(%edi)
    4631:	49                   	dec    %ecx
    4632:	0f 85 c0 01 00 00    	jne    47f8 <driver_connection_devman+0x3e8>
    4638:	8b 42 08             	mov    0x8(%edx),%eax
    463b:	85 c0                	test   %eax,%eax
    463d:	74 0f                	je     464e <driver_connection_devman+0x23e>
    463f:	83 ec 0c             	sub    $0xc,%esp
    4642:	50                   	push   %eax
    4643:	e8 78 ad 00 00       	call   f3c0 <async_hangup@plt>
    4648:	83 c4 10             	add    $0x10,%esp
    464b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    464e:	8b 42 10             	mov    0x10(%edx),%eax
    4651:	85 c0                	test   %eax,%eax
    4653:	74 12                	je     4667 <driver_connection_devman+0x257>
    4655:	83 ec 0c             	sub    $0xc,%esp
    4658:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    465b:	50                   	push   %eax
    465c:	e8 ff b1 00 00       	call   f860 <free@plt>
    4661:	83 c4 10             	add    $0x10,%esp
    4664:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    4667:	8b 42 0c             	mov    0xc(%edx),%eax
    466a:	85 c0                	test   %eax,%eax
    466c:	74 12                	je     4680 <driver_connection_devman+0x270>
    466e:	83 ec 0c             	sub    $0xc,%esp
    4671:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    4674:	50                   	push   %eax
    4675:	e8 e6 b1 00 00       	call   f860 <free@plt>
    467a:	83 c4 10             	add    $0x10,%esp
    467d:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    4680:	83 ec 0c             	sub    $0xc,%esp
    4683:	52                   	push   %edx
    4684:	e8 d7 b1 00 00       	call   f860 <free@plt>
    4689:	83 c4 10             	add    $0x10,%esp
    468c:	31 c0                	xor    %eax,%eax
    468e:	e9 65 01 00 00       	jmp    47f8 <driver_connection_devman+0x3e8>
    4693:	90                   	nop
    4694:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4698:	50                   	push   %eax
    4699:	50                   	push   %eax
    469a:	8d 45 c0             	lea    -0x40(%ebp),%eax
    469d:	6a 00                	push   $0x0
    469f:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
    46a6:	6a 00                	push   $0x0
    46a8:	6a 00                	push   $0x0
    46aa:	6a 00                	push   $0x0
    46ac:	6a 01                	push   $0x1
    46ae:	50                   	push   %eax
    46af:	e8 3c b1 00 00       	call   f7f0 <async_data_write_accept@plt>
    46b4:	83 c4 20             	add    $0x20,%esp
    46b7:	85 c0                	test   %eax,%eax
    46b9:	0f 85 39 01 00 00    	jne    47f8 <driver_connection_devman+0x3e8>
    46bf:	50                   	push   %eax
    46c0:	50                   	push   %eax
    46c1:	6a 1c                	push   $0x1c
    46c3:	6a 01                	push   $0x1
    46c5:	e8 b6 ae 00 00       	call   f580 <calloc@plt>
    46ca:	83 c4 10             	add    $0x10,%esp
    46cd:	89 c2                	mov    %eax,%edx
    46cf:	85 c0                	test   %eax,%eax
    46d1:	0f 84 df 01 00 00    	je     48b6 <driver_connection_devman+0x4a6>
    46d7:	f0 ff 40 04          	lock incl 0x4(%eax)
    46db:	89 38                	mov    %edi,(%eax)
    46dd:	8b 45 c0             	mov    -0x40(%ebp),%eax
    46e0:	89 42 0c             	mov    %eax,0xc(%edx)
    46e3:	a1 ac 19 01 00       	mov    0x119ac,%eax
    46e8:	83 ec 0c             	sub    $0xc,%esp
    46eb:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    46ee:	8b 40 04             	mov    0x4(%eax),%eax
    46f1:	52                   	push   %edx
    46f2:	ff 10                	call   *(%eax)
    46f4:	83 c4 10             	add    $0x10,%esp
    46f7:	89 c7                	mov    %eax,%edi
    46f9:	85 c0                	test   %eax,%eax
    46fb:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    46fe:	0f 84 66 01 00 00    	je     486a <driver_connection_devman+0x45a>
    4704:	83 c8 ff             	or     $0xffffffff,%eax
    4707:	f0 0f c1 42 04       	lock xadd %eax,0x4(%edx)
    470c:	48                   	dec    %eax
    470d:	0f 85 ec fd ff ff    	jne    44ff <driver_connection_devman+0xef>
    4713:	8b 42 08             	mov    0x8(%edx),%eax
    4716:	85 c0                	test   %eax,%eax
    4718:	74 12                	je     472c <driver_connection_devman+0x31c>
    471a:	83 ec 0c             	sub    $0xc,%esp
    471d:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    4720:	50                   	push   %eax
    4721:	e8 9a ac 00 00       	call   f3c0 <async_hangup@plt>
    4726:	83 c4 10             	add    $0x10,%esp
    4729:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    472c:	8b 42 10             	mov    0x10(%edx),%eax
    472f:	85 c0                	test   %eax,%eax
    4731:	74 12                	je     4745 <driver_connection_devman+0x335>
    4733:	83 ec 0c             	sub    $0xc,%esp
    4736:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    4739:	50                   	push   %eax
    473a:	e8 21 b1 00 00       	call   f860 <free@plt>
    473f:	83 c4 10             	add    $0x10,%esp
    4742:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    4745:	8b 42 0c             	mov    0xc(%edx),%eax
    4748:	85 c0                	test   %eax,%eax
    474a:	74 12                	je     475e <driver_connection_devman+0x34e>
    474c:	83 ec 0c             	sub    $0xc,%esp
    474f:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    4752:	50                   	push   %eax
    4753:	e8 08 b1 00 00       	call   f860 <free@plt>
    4758:	83 c4 10             	add    $0x10,%esp
    475b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    475e:	83 ec 0c             	sub    $0xc,%esp
    4761:	52                   	push   %edx
    4762:	e8 f9 b0 00 00       	call   f860 <free@plt>
    4767:	83 c4 10             	add    $0x10,%esp
    476a:	e9 90 fd ff ff       	jmp    44ff <driver_connection_devman+0xef>
    476f:	90                   	nop
    4770:	83 ec 0c             	sub    $0xc,%esp
    4773:	68 14 18 01 00       	push   $0x11814
    4778:	e8 03 b1 00 00       	call   f880 <fibril_mutex_lock@plt>
    477d:	c7 04 24 14 18 01 00 	movl   $0x11814,(%esp)
    4784:	e8 a7 ac 00 00       	call   f430 <fibril_mutex_is_locked@plt>
    4789:	83 c4 10             	add    $0x10,%esp
    478c:	84 c0                	test   %al,%al
    478e:	0f 84 52 01 00 00    	je     48e6 <driver_connection_devman+0x4d6>
    4794:	a1 28 18 01 00       	mov    0x11828,%eax
    4799:	3d 24 18 01 00       	cmp    $0x11824,%eax
    479e:	8d 50 d4             	lea    -0x2c(%eax),%edx
    47a1:	75 12                	jne    47b5 <driver_connection_devman+0x3a5>
    47a3:	e9 88 00 00 00       	jmp    4830 <driver_connection_devman+0x420>
    47a8:	8b 40 04             	mov    0x4(%eax),%eax
    47ab:	3d 24 18 01 00       	cmp    $0x11824,%eax
    47b0:	8d 50 d4             	lea    -0x2c(%eax),%edx
    47b3:	74 7b                	je     4830 <driver_connection_devman+0x420>
    47b5:	3b 7a 04             	cmp    0x4(%edx),%edi
    47b8:	75 ee                	jne    47a8 <driver_connection_devman+0x398>
    47ba:	8b 42 0c             	mov    0xc(%edx),%eax
    47bd:	f0 ff 40 04          	lock incl 0x4(%eax)
    47c1:	f0 ff 42 08          	lock incl 0x8(%edx)
    47c5:	83 ec 0c             	sub    $0xc,%esp
    47c8:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    47cb:	68 14 18 01 00       	push   $0x11814
    47d0:	e8 1b ae 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    47d5:	a1 ac 19 01 00       	mov    0x119ac,%eax
    47da:	83 c4 10             	add    $0x10,%esp
    47dd:	8b 40 04             	mov    0x4(%eax),%eax
    47e0:	8b 40 10             	mov    0x10(%eax),%eax
    47e3:	85 c0                	test   %eax,%eax
    47e5:	0f 84 a0 fd ff ff    	je     458b <driver_connection_devman+0x17b>
    47eb:	83 ec 0c             	sub    $0xc,%esp
    47ee:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    47f1:	52                   	push   %edx
    47f2:	ff d0                	call   *%eax
    47f4:	83 c4 10             	add    $0x10,%esp
    47f7:	90                   	nop
    47f8:	52                   	push   %edx
    47f9:	52                   	push   %edx
    47fa:	50                   	push   %eax
    47fb:	53                   	push   %ebx
    47fc:	e8 ff ac 00 00       	call   f500 <async_answer_0@plt>
    4801:	83 c4 10             	add    $0x10,%esp
    4804:	e9 27 fc ff ff       	jmp    4430 <driver_connection_devman+0x20>
    4809:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4810:	50                   	push   %eax
    4811:	50                   	push   %eax
    4812:	6a f5                	push   $0xfffffff5
    4814:	53                   	push   %ebx
    4815:	e8 e6 ac 00 00       	call   f500 <async_answer_0@plt>
    481a:	83 c4 10             	add    $0x10,%esp
    481d:	e9 0e fc ff ff       	jmp    4430 <driver_connection_devman+0x20>
    4822:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4828:	8d 65 f4             	lea    -0xc(%ebp),%esp
    482b:	5b                   	pop    %ebx
    482c:	5e                   	pop    %esi
    482d:	5f                   	pop    %edi
    482e:	5d                   	pop    %ebp
    482f:	c3                   	ret    
    4830:	83 ec 0c             	sub    $0xc,%esp
    4833:	68 14 18 01 00       	push   $0x11814
    4838:	e8 b3 ad 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    483d:	58                   	pop    %eax
    483e:	5a                   	pop    %edx
    483f:	6a ff                	push   $0xffffffff
    4841:	53                   	push   %ebx
    4842:	e8 b9 ac 00 00       	call   f500 <async_answer_0@plt>
    4847:	83 c4 10             	add    $0x10,%esp
    484a:	e9 e1 fb ff ff       	jmp    4430 <driver_connection_devman+0x20>
    484f:	90                   	nop
    4850:	83 ec 0c             	sub    $0xc,%esp
    4853:	68 2c 18 01 00       	push   $0x1182c
    4858:	eb de                	jmp    4838 <driver_connection_devman+0x428>
    485a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4860:	bf f5 ff ff ff       	mov    $0xfffffff5,%edi
    4865:	e9 8e fc ff ff       	jmp    44f8 <driver_connection_devman+0xe8>
    486a:	83 ec 0c             	sub    $0xc,%esp
    486d:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    4870:	68 2c 18 01 00       	push   $0x1182c
    4875:	e8 06 b0 00 00       	call   f880 <fibril_mutex_lock@plt>
    487a:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    487d:	8b 0d 3c 18 01 00    	mov    0x1183c,%ecx
    4883:	8d 42 14             	lea    0x14(%edx),%eax
    4886:	c7 42 18 3c 18 01 00 	movl   $0x1183c,0x18(%edx)
    488d:	89 4a 14             	mov    %ecx,0x14(%edx)
    4890:	89 41 04             	mov    %eax,0x4(%ecx)
    4893:	a3 3c 18 01 00       	mov    %eax,0x1183c
    4898:	c7 04 24 2c 18 01 00 	movl   $0x1182c,(%esp)
    489f:	e8 4c ad 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    48a4:	5f                   	pop    %edi
    48a5:	58                   	pop    %eax
    48a6:	6a 00                	push   $0x0
    48a8:	53                   	push   %ebx
    48a9:	e8 52 ac 00 00       	call   f500 <async_answer_0@plt>
    48ae:	83 c4 10             	add    $0x10,%esp
    48b1:	e9 7a fb ff ff       	jmp    4430 <driver_connection_devman+0x20>
    48b6:	83 ec 0c             	sub    $0xc,%esp
    48b9:	8b 4d c0             	mov    -0x40(%ebp),%ecx
    48bc:	51                   	push   %ecx
    48bd:	e8 9e af 00 00       	call   f860 <free@plt>
    48c2:	5f                   	pop    %edi
    48c3:	58                   	pop    %eax
    48c4:	6a fe                	push   $0xfffffffe
    48c6:	53                   	push   %ebx
    48c7:	e8 34 ac 00 00       	call   f500 <async_answer_0@plt>
    48cc:	83 c4 10             	add    $0x10,%esp
    48cf:	e9 5c fb ff ff       	jmp    4430 <driver_connection_devman+0x20>
    48d4:	56                   	push   %esi
    48d5:	6a 5f                	push   $0x5f
    48d7:	68 3c d6 00 00       	push   $0xd63c
    48dc:	68 e0 d8 00 00       	push   $0xd8e0
    48e1:	e8 7a ac 00 00       	call   f560 <assert_abort@plt>
    48e6:	53                   	push   %ebx
    48e7:	6a 6b                	push   $0x6b
    48e9:	68 3c d6 00 00       	push   $0xd63c
    48ee:	68 94 d7 00 00       	push   $0xd794
    48f3:	e8 68 ac 00 00       	call   f560 <assert_abort@plt>
    48f8:	90                   	nop
    48f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00004900 <ddf_dev_data_alloc>:
    4900:	55                   	push   %ebp
    4901:	89 e5                	mov    %esp,%ebp
    4903:	53                   	push   %ebx
    4904:	53                   	push   %ebx
    4905:	8b 5d 08             	mov    0x8(%ebp),%ebx
    4908:	8b 43 10             	mov    0x10(%ebx),%eax
    490b:	85 c0                	test   %eax,%eax
    490d:	75 1c                	jne    492b <ddf_dev_data_alloc+0x2b>
    490f:	8b 55 0c             	mov    0xc(%ebp),%edx
    4912:	50                   	push   %eax
    4913:	50                   	push   %eax
    4914:	52                   	push   %edx
    4915:	6a 01                	push   $0x1
    4917:	e8 64 ac 00 00       	call   f580 <calloc@plt>
    491c:	83 c4 10             	add    $0x10,%esp
    491f:	85 c0                	test   %eax,%eax
    4921:	74 03                	je     4926 <ddf_dev_data_alloc+0x26>
    4923:	89 43 10             	mov    %eax,0x10(%ebx)
    4926:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    4929:	c9                   	leave  
    492a:	c3                   	ret    
    492b:	51                   	push   %ecx
    492c:	68 39 02 00 00       	push   $0x239
    4931:	68 3c d6 00 00       	push   $0xd63c
    4936:	68 77 d6 00 00       	push   $0xd677
    493b:	e8 20 ac 00 00       	call   f560 <assert_abort@plt>

00004940 <ddf_dev_data_get>:
    4940:	55                   	push   %ebp
    4941:	89 e5                	mov    %esp,%ebp
    4943:	8b 45 08             	mov    0x8(%ebp),%eax
    4946:	5d                   	pop    %ebp
    4947:	8b 40 10             	mov    0x10(%eax),%eax
    494a:	c3                   	ret    
    494b:	90                   	nop
    494c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004950 <ddf_dev_get_handle>:
    4950:	55                   	push   %ebp
    4951:	89 e5                	mov    %esp,%ebp
    4953:	8b 45 08             	mov    0x8(%ebp),%eax
    4956:	5d                   	pop    %ebp
    4957:	8b 00                	mov    (%eax),%eax
    4959:	c3                   	ret    
    495a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00004960 <ddf_dev_get_name>:
    4960:	55                   	push   %ebp
    4961:	89 e5                	mov    %esp,%ebp
    4963:	8b 45 08             	mov    0x8(%ebp),%eax
    4966:	5d                   	pop    %ebp
    4967:	8b 40 0c             	mov    0xc(%eax),%eax
    496a:	c3                   	ret    
    496b:	90                   	nop
    496c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004970 <ddf_dev_parent_sess_create>:
    4970:	55                   	push   %ebp
    4971:	89 e5                	mov    %esp,%ebp
    4973:	53                   	push   %ebx
    4974:	53                   	push   %ebx
    4975:	8b 5d 08             	mov    0x8(%ebp),%ebx
    4978:	8b 43 08             	mov    0x8(%ebx),%eax
    497b:	85 c0                	test   %eax,%eax
    497d:	75 14                	jne    4993 <ddf_dev_parent_sess_create+0x23>
    497f:	50                   	push   %eax
    4980:	50                   	push   %eax
    4981:	6a 01                	push   $0x1
    4983:	8b 13                	mov    (%ebx),%edx
    4985:	52                   	push   %edx
    4986:	e8 65 aa 00 00       	call   f3f0 <devman_parent_device_connect@plt>
    498b:	89 43 08             	mov    %eax,0x8(%ebx)
    498e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    4991:	c9                   	leave  
    4992:	c3                   	ret    
    4993:	51                   	push   %ecx
    4994:	68 64 02 00 00       	push   $0x264
    4999:	68 3c d6 00 00       	push   $0xd63c
    499e:	68 90 d6 00 00       	push   $0xd690
    49a3:	e8 b8 ab 00 00       	call   f560 <assert_abort@plt>
    49a8:	90                   	nop
    49a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000049b0 <ddf_dev_parent_sess_get>:
    49b0:	55                   	push   %ebp
    49b1:	89 e5                	mov    %esp,%ebp
    49b3:	8b 45 08             	mov    0x8(%ebp),%eax
    49b6:	5d                   	pop    %ebp
    49b7:	8b 40 08             	mov    0x8(%eax),%eax
    49ba:	c3                   	ret    
    49bb:	90                   	nop
    49bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000049c0 <ddf_fun_set_name>:
    49c0:	55                   	push   %ebp
    49c1:	89 e5                	mov    %esp,%ebp
    49c3:	53                   	push   %ebx
    49c4:	51                   	push   %ecx
    49c5:	8b 5d 08             	mov    0x8(%ebp),%ebx
    49c8:	8b 43 14             	mov    0x14(%ebx),%eax
    49cb:	85 c0                	test   %eax,%eax
    49cd:	75 23                	jne    49f2 <ddf_fun_set_name+0x32>
    49cf:	83 ec 0c             	sub    $0xc,%esp
    49d2:	8b 45 0c             	mov    0xc(%ebp),%eax
    49d5:	50                   	push   %eax
    49d6:	e8 35 ac 00 00       	call   f610 <str_dup@plt>
    49db:	83 c4 10             	add    $0x10,%esp
    49de:	89 43 14             	mov    %eax,0x14(%ebx)
    49e1:	85 c0                	test   %eax,%eax
    49e3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    49e6:	0f 94 c0             	sete   %al
    49e9:	25 ff 00 00 00       	and    $0xff,%eax
    49ee:	c9                   	leave  
    49ef:	f7 d8                	neg    %eax
    49f1:	c3                   	ret    
    49f2:	52                   	push   %edx
    49f3:	68 7d 02 00 00       	push   $0x27d
    49f8:	68 3c d6 00 00       	push   $0xd63c
    49fd:	68 a9 d6 00 00       	push   $0xd6a9
    4a02:	e8 59 ab 00 00       	call   f560 <assert_abort@plt>
    4a07:	89 f6                	mov    %esi,%esi
    4a09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00004a10 <ddf_fun_get_dev>:
    4a10:	55                   	push   %ebp
    4a11:	89 e5                	mov    %esp,%ebp
    4a13:	8b 45 08             	mov    0x8(%ebp),%eax
    4a16:	5d                   	pop    %ebp
    4a17:	8b 40 0c             	mov    0xc(%eax),%eax
    4a1a:	c3                   	ret    
    4a1b:	90                   	nop
    4a1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004a20 <ddf_fun_get_handle>:
    4a20:	55                   	push   %ebp
    4a21:	89 e5                	mov    %esp,%ebp
    4a23:	8b 45 08             	mov    0x8(%ebp),%eax
    4a26:	5d                   	pop    %ebp
    4a27:	8b 40 04             	mov    0x4(%eax),%eax
    4a2a:	c3                   	ret    
    4a2b:	90                   	nop
    4a2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004a30 <ddf_fun_create>:
    4a30:	55                   	push   %ebp
    4a31:	89 e5                	mov    %esp,%ebp
    4a33:	57                   	push   %edi
    4a34:	56                   	push   %esi
    4a35:	53                   	push   %ebx
    4a36:	83 ec 14             	sub    $0x14,%esp
    4a39:	8b 75 08             	mov    0x8(%ebp),%esi
    4a3c:	6a 34                	push   $0x34
    4a3e:	6a 01                	push   $0x1
    4a40:	e8 3b ab 00 00       	call   f580 <calloc@plt>
    4a45:	83 c4 10             	add    $0x10,%esp
    4a48:	89 c3                	mov    %eax,%ebx
    4a4a:	85 c0                	test   %eax,%eax
    4a4c:	74 48                	je     4a96 <ddf_fun_create+0x66>
    4a4e:	8d 78 18             	lea    0x18(%eax),%edi
    4a51:	c7 40 2c 00 00 00 00 	movl   $0x0,0x2c(%eax)
    4a58:	89 78 18             	mov    %edi,0x18(%eax)
    4a5b:	89 78 1c             	mov    %edi,0x1c(%eax)
    4a5e:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
    4a65:	89 70 0c             	mov    %esi,0xc(%eax)
    4a68:	f0 ff 46 04          	lock incl 0x4(%esi)
    4a6c:	f0 ff 40 08          	lock incl 0x8(%eax)
    4a70:	c6 00 00             	movb   $0x0,(%eax)
    4a73:	8b 55 10             	mov    0x10(%ebp),%edx
    4a76:	8b 45 0c             	mov    0xc(%ebp),%eax
    4a79:	85 d2                	test   %edx,%edx
    4a7b:	89 43 10             	mov    %eax,0x10(%ebx)
    4a7e:	74 16                	je     4a96 <ddf_fun_create+0x66>
    4a80:	83 ec 0c             	sub    $0xc,%esp
    4a83:	8b 45 10             	mov    0x10(%ebp),%eax
    4a86:	50                   	push   %eax
    4a87:	e8 84 ab 00 00       	call   f610 <str_dup@plt>
    4a8c:	83 c4 10             	add    $0x10,%esp
    4a8f:	89 43 14             	mov    %eax,0x14(%ebx)
    4a92:	85 c0                	test   %eax,%eax
    4a94:	74 0a                	je     4aa0 <ddf_fun_create+0x70>
    4a96:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4a99:	89 d8                	mov    %ebx,%eax
    4a9b:	5b                   	pop    %ebx
    4a9c:	5e                   	pop    %esi
    4a9d:	5f                   	pop    %edi
    4a9e:	5d                   	pop    %ebp
    4a9f:	c3                   	ret    
    4aa0:	8b 73 1c             	mov    0x1c(%ebx),%esi
    4aa3:	39 f7                	cmp    %esi,%edi
    4aa5:	0f 84 85 00 00 00    	je     4b30 <ddf_fun_create+0x100>
    4aab:	90                   	nop
    4aac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4ab0:	8b 0e                	mov    (%esi),%ecx
    4ab2:	85 c9                	test   %ecx,%ecx
    4ab4:	74 0e                	je     4ac4 <ddf_fun_create+0x94>
    4ab6:	8b 46 04             	mov    0x4(%esi),%eax
    4ab9:	85 c0                	test   %eax,%eax
    4abb:	74 07                	je     4ac4 <ddf_fun_create+0x94>
    4abd:	89 08                	mov    %ecx,(%eax)
    4abf:	8b 0e                	mov    (%esi),%ecx
    4ac1:	89 41 04             	mov    %eax,0x4(%ecx)
    4ac4:	8b 46 08             	mov    0x8(%esi),%eax
    4ac7:	c7 06 00 00 00 00    	movl   $0x0,(%esi)
    4acd:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)
    4ad4:	85 c0                	test   %eax,%eax
    4ad6:	74 0c                	je     4ae4 <ddf_fun_create+0xb4>
    4ad8:	83 ec 0c             	sub    $0xc,%esp
    4adb:	50                   	push   %eax
    4adc:	e8 7f ad 00 00       	call   f860 <free@plt>
    4ae1:	83 c4 10             	add    $0x10,%esp
    4ae4:	83 ec 0c             	sub    $0xc,%esp
    4ae7:	56                   	push   %esi
    4ae8:	e8 73 ad 00 00       	call   f860 <free@plt>
    4aed:	8b 73 1c             	mov    0x1c(%ebx),%esi
    4af0:	83 c4 10             	add    $0x10,%esp
    4af3:	39 f7                	cmp    %esi,%edi
    4af5:	75 b9                	jne    4ab0 <ddf_fun_create+0x80>
    4af7:	8b 43 20             	mov    0x20(%ebx),%eax
    4afa:	85 c0                	test   %eax,%eax
    4afc:	74 0c                	je     4b0a <ddf_fun_create+0xda>
    4afe:	83 ec 0c             	sub    $0xc,%esp
    4b01:	50                   	push   %eax
    4b02:	e8 59 ad 00 00       	call   f860 <free@plt>
    4b07:	83 c4 10             	add    $0x10,%esp
    4b0a:	8b 43 14             	mov    0x14(%ebx),%eax
    4b0d:	85 c0                	test   %eax,%eax
    4b0f:	74 0c                	je     4b1d <ddf_fun_create+0xed>
    4b11:	83 ec 0c             	sub    $0xc,%esp
    4b14:	50                   	push   %eax
    4b15:	e8 46 ad 00 00       	call   f860 <free@plt>
    4b1a:	83 c4 10             	add    $0x10,%esp
    4b1d:	83 ec 0c             	sub    $0xc,%esp
    4b20:	53                   	push   %ebx
    4b21:	31 db                	xor    %ebx,%ebx
    4b23:	e8 38 ad 00 00       	call   f860 <free@plt>
    4b28:	83 c4 10             	add    $0x10,%esp
    4b2b:	e9 66 ff ff ff       	jmp    4a96 <ddf_fun_create+0x66>
    4b30:	8b 43 20             	mov    0x20(%ebx),%eax
    4b33:	85 c0                	test   %eax,%eax
    4b35:	75 c7                	jne    4afe <ddf_fun_create+0xce>
    4b37:	eb e4                	jmp    4b1d <ddf_fun_create+0xed>
    4b39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00004b40 <ddf_fun_data_alloc>:
    4b40:	55                   	push   %ebp
    4b41:	89 e5                	mov    %esp,%ebp
    4b43:	53                   	push   %ebx
    4b44:	50                   	push   %eax
    4b45:	8b 5d 08             	mov    0x8(%ebp),%ebx
    4b48:	80 3b 00             	cmpb   $0x0,(%ebx)
    4b4b:	75 23                	jne    4b70 <ddf_fun_data_alloc+0x30>
    4b4d:	8b 43 20             	mov    0x20(%ebx),%eax
    4b50:	85 c0                	test   %eax,%eax
    4b52:	75 31                	jne    4b85 <ddf_fun_data_alloc+0x45>
    4b54:	8b 55 0c             	mov    0xc(%ebp),%edx
    4b57:	50                   	push   %eax
    4b58:	50                   	push   %eax
    4b59:	52                   	push   %edx
    4b5a:	6a 01                	push   $0x1
    4b5c:	e8 1f aa 00 00       	call   f580 <calloc@plt>
    4b61:	83 c4 10             	add    $0x10,%esp
    4b64:	85 c0                	test   %eax,%eax
    4b66:	74 03                	je     4b6b <ddf_fun_data_alloc+0x2b>
    4b68:	89 43 20             	mov    %eax,0x20(%ebx)
    4b6b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    4b6e:	c9                   	leave  
    4b6f:	c3                   	ret    
    4b70:	50                   	push   %eax
    4b71:	68 c9 02 00 00       	push   $0x2c9
    4b76:	68 3c d6 00 00       	push   $0xd63c
    4b7b:	68 bb d6 00 00       	push   $0xd6bb
    4b80:	e8 db a9 00 00       	call   f560 <assert_abort@plt>
    4b85:	51                   	push   %ecx
    4b86:	68 ca 02 00 00       	push   $0x2ca
    4b8b:	68 3c d6 00 00       	push   $0xd63c
    4b90:	68 cf d6 00 00       	push   $0xd6cf
    4b95:	e8 c6 a9 00 00       	call   f560 <assert_abort@plt>
    4b9a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00004ba0 <ddf_fun_data_get>:
    4ba0:	55                   	push   %ebp
    4ba1:	89 e5                	mov    %esp,%ebp
    4ba3:	8b 45 08             	mov    0x8(%ebp),%eax
    4ba6:	5d                   	pop    %ebp
    4ba7:	8b 40 20             	mov    0x20(%eax),%eax
    4baa:	c3                   	ret    
    4bab:	90                   	nop
    4bac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004bb0 <ddf_fun_get_name>:
    4bb0:	55                   	push   %ebp
    4bb1:	89 e5                	mov    %esp,%ebp
    4bb3:	8b 45 08             	mov    0x8(%ebp),%eax
    4bb6:	5d                   	pop    %ebp
    4bb7:	8b 40 14             	mov    0x14(%eax),%eax
    4bba:	c3                   	ret    
    4bbb:	90                   	nop
    4bbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004bc0 <ddf_fun_destroy>:
    4bc0:	55                   	push   %ebp
    4bc1:	89 e5                	mov    %esp,%ebp
    4bc3:	57                   	push   %edi
    4bc4:	56                   	push   %esi
    4bc5:	53                   	push   %ebx
    4bc6:	83 ec 1c             	sub    $0x1c,%esp
    4bc9:	8b 7d 08             	mov    0x8(%ebp),%edi
    4bcc:	80 3f 00             	cmpb   $0x0,(%edi)
    4bcf:	0f 85 fa 00 00 00    	jne    4ccf <ddf_fun_destroy+0x10f>
    4bd5:	8b 77 0c             	mov    0xc(%edi),%esi
    4bd8:	83 ca ff             	or     $0xffffffff,%edx
    4bdb:	f0 0f c1 57 08       	lock xadd %edx,0x8(%edi)
    4be0:	4a                   	dec    %edx
    4be1:	74 5d                	je     4c40 <ddf_fun_destroy+0x80>
    4be3:	83 c8 ff             	or     $0xffffffff,%eax
    4be6:	f0 0f c1 46 04       	lock xadd %eax,0x4(%esi)
    4beb:	48                   	dec    %eax
    4bec:	74 0a                	je     4bf8 <ddf_fun_destroy+0x38>
    4bee:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4bf1:	5b                   	pop    %ebx
    4bf2:	5e                   	pop    %esi
    4bf3:	5f                   	pop    %edi
    4bf4:	5d                   	pop    %ebp
    4bf5:	c3                   	ret    
    4bf6:	66 90                	xchg   %ax,%ax
    4bf8:	8b 46 08             	mov    0x8(%esi),%eax
    4bfb:	85 c0                	test   %eax,%eax
    4bfd:	74 0c                	je     4c0b <ddf_fun_destroy+0x4b>
    4bff:	83 ec 0c             	sub    $0xc,%esp
    4c02:	50                   	push   %eax
    4c03:	e8 b8 a7 00 00       	call   f3c0 <async_hangup@plt>
    4c08:	83 c4 10             	add    $0x10,%esp
    4c0b:	8b 46 10             	mov    0x10(%esi),%eax
    4c0e:	85 c0                	test   %eax,%eax
    4c10:	74 0c                	je     4c1e <ddf_fun_destroy+0x5e>
    4c12:	83 ec 0c             	sub    $0xc,%esp
    4c15:	50                   	push   %eax
    4c16:	e8 45 ac 00 00       	call   f860 <free@plt>
    4c1b:	83 c4 10             	add    $0x10,%esp
    4c1e:	8b 46 0c             	mov    0xc(%esi),%eax
    4c21:	85 c0                	test   %eax,%eax
    4c23:	74 0c                	je     4c31 <ddf_fun_destroy+0x71>
    4c25:	83 ec 0c             	sub    $0xc,%esp
    4c28:	50                   	push   %eax
    4c29:	e8 32 ac 00 00       	call   f860 <free@plt>
    4c2e:	83 c4 10             	add    $0x10,%esp
    4c31:	89 75 08             	mov    %esi,0x8(%ebp)
    4c34:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4c37:	5b                   	pop    %ebx
    4c38:	5e                   	pop    %esi
    4c39:	5f                   	pop    %edi
    4c3a:	5d                   	pop    %ebp
    4c3b:	e9 20 ac 00 00       	jmp    f860 <free@plt>
    4c40:	8d 47 18             	lea    0x18(%edi),%eax
    4c43:	8b 5f 1c             	mov    0x1c(%edi),%ebx
    4c46:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    4c49:	39 d8                	cmp    %ebx,%eax
    4c4b:	74 4b                	je     4c98 <ddf_fun_destroy+0xd8>
    4c4d:	8d 76 00             	lea    0x0(%esi),%esi
    4c50:	8b 0b                	mov    (%ebx),%ecx
    4c52:	85 c9                	test   %ecx,%ecx
    4c54:	74 0e                	je     4c64 <ddf_fun_destroy+0xa4>
    4c56:	8b 53 04             	mov    0x4(%ebx),%edx
    4c59:	85 d2                	test   %edx,%edx
    4c5b:	74 07                	je     4c64 <ddf_fun_destroy+0xa4>
    4c5d:	89 0a                	mov    %ecx,(%edx)
    4c5f:	8b 0b                	mov    (%ebx),%ecx
    4c61:	89 51 04             	mov    %edx,0x4(%ecx)
    4c64:	8b 53 08             	mov    0x8(%ebx),%edx
    4c67:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
    4c6d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
    4c74:	85 d2                	test   %edx,%edx
    4c76:	74 0c                	je     4c84 <ddf_fun_destroy+0xc4>
    4c78:	83 ec 0c             	sub    $0xc,%esp
    4c7b:	52                   	push   %edx
    4c7c:	e8 df ab 00 00       	call   f860 <free@plt>
    4c81:	83 c4 10             	add    $0x10,%esp
    4c84:	83 ec 0c             	sub    $0xc,%esp
    4c87:	53                   	push   %ebx
    4c88:	e8 d3 ab 00 00       	call   f860 <free@plt>
    4c8d:	8b 5f 1c             	mov    0x1c(%edi),%ebx
    4c90:	83 c4 10             	add    $0x10,%esp
    4c93:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx
    4c96:	75 b8                	jne    4c50 <ddf_fun_destroy+0x90>
    4c98:	8b 57 20             	mov    0x20(%edi),%edx
    4c9b:	85 d2                	test   %edx,%edx
    4c9d:	74 0c                	je     4cab <ddf_fun_destroy+0xeb>
    4c9f:	83 ec 0c             	sub    $0xc,%esp
    4ca2:	52                   	push   %edx
    4ca3:	e8 b8 ab 00 00       	call   f860 <free@plt>
    4ca8:	83 c4 10             	add    $0x10,%esp
    4cab:	8b 57 14             	mov    0x14(%edi),%edx
    4cae:	85 d2                	test   %edx,%edx
    4cb0:	74 0c                	je     4cbe <ddf_fun_destroy+0xfe>
    4cb2:	83 ec 0c             	sub    $0xc,%esp
    4cb5:	52                   	push   %edx
    4cb6:	e8 a5 ab 00 00       	call   f860 <free@plt>
    4cbb:	83 c4 10             	add    $0x10,%esp
    4cbe:	83 ec 0c             	sub    $0xc,%esp
    4cc1:	57                   	push   %edi
    4cc2:	e8 99 ab 00 00       	call   f860 <free@plt>
    4cc7:	83 c4 10             	add    $0x10,%esp
    4cca:	e9 14 ff ff ff       	jmp    4be3 <ddf_fun_destroy+0x23>
    4ccf:	50                   	push   %eax
    4cd0:	68 ee 02 00 00       	push   $0x2ee
    4cd5:	68 3c d6 00 00       	push   $0xd63c
    4cda:	68 bb d6 00 00       	push   $0xd6bb
    4cdf:	e8 7c a8 00 00       	call   f560 <assert_abort@plt>
    4ce4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4cea:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00004cf0 <ddf_fun_bind>:
    4cf0:	55                   	push   %ebp
    4cf1:	89 e5                	mov    %esp,%ebp
    4cf3:	53                   	push   %ebx
    4cf4:	83 ec 14             	sub    $0x14,%esp
    4cf7:	8b 5d 08             	mov    0x8(%ebp),%ebx
    4cfa:	80 3b 00             	cmpb   $0x0,(%ebx)
    4cfd:	0f 85 d2 00 00 00    	jne    4dd5 <ddf_fun_bind+0xe5>
    4d03:	8b 43 14             	mov    0x14(%ebx),%eax
    4d06:	85 c0                	test   %eax,%eax
    4d08:	0f 84 f1 00 00 00    	je     4dff <ddf_fun_bind+0x10f>
    4d0e:	8b 43 0c             	mov    0xc(%ebx),%eax
    4d11:	85 c0                	test   %eax,%eax
    4d13:	0f 84 d1 00 00 00    	je     4dea <ddf_fun_bind+0xfa>
    4d19:	83 ec 0c             	sub    $0xc,%esp
    4d1c:	68 14 18 01 00       	push   $0x11814
    4d21:	e8 5a ab 00 00       	call   f880 <fibril_mutex_lock@plt>
    4d26:	8b 15 24 18 01 00    	mov    0x11824,%edx
    4d2c:	8d 43 2c             	lea    0x2c(%ebx),%eax
    4d2f:	89 53 2c             	mov    %edx,0x2c(%ebx)
    4d32:	c7 43 30 24 18 01 00 	movl   $0x11824,0x30(%ebx)
    4d39:	89 42 04             	mov    %eax,0x4(%edx)
    4d3c:	a3 24 18 01 00       	mov    %eax,0x11824
    4d41:	c7 04 24 14 18 01 00 	movl   $0x11814,(%esp)
    4d48:	e8 a3 a8 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    4d4d:	8d 43 04             	lea    0x4(%ebx),%eax
    4d50:	8b 53 10             	mov    0x10(%ebx),%edx
    4d53:	89 04 24             	mov    %eax,(%esp)
    4d56:	8b 43 0c             	mov    0xc(%ebx),%eax
    4d59:	8b 4b 14             	mov    0x14(%ebx),%ecx
    4d5c:	8b 00                	mov    (%eax),%eax
    4d5e:	50                   	push   %eax
    4d5f:	8d 43 18             	lea    0x18(%ebx),%eax
    4d62:	50                   	push   %eax
    4d63:	52                   	push   %edx
    4d64:	51                   	push   %ecx
    4d65:	e8 d6 a7 00 00       	call   f540 <devman_add_function@plt>
    4d6a:	83 c4 20             	add    $0x20,%esp
    4d6d:	85 c0                	test   %eax,%eax
    4d6f:	75 0f                	jne    4d80 <ddf_fun_bind+0x90>
    4d71:	c6 03 01             	movb   $0x1,(%ebx)
    4d74:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    4d77:	c9                   	leave  
    4d78:	c3                   	ret    
    4d79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4d80:	83 ec 0c             	sub    $0xc,%esp
    4d83:	89 45 f4             	mov    %eax,-0xc(%ebp)
    4d86:	68 14 18 01 00       	push   $0x11814
    4d8b:	e8 f0 aa 00 00       	call   f880 <fibril_mutex_lock@plt>
    4d90:	8b 4b 2c             	mov    0x2c(%ebx),%ecx
    4d93:	83 c4 10             	add    $0x10,%esp
    4d96:	8b 45 f4             	mov    -0xc(%ebp),%eax
    4d99:	85 c9                	test   %ecx,%ecx
    4d9b:	74 0f                	je     4dac <ddf_fun_bind+0xbc>
    4d9d:	8b 53 30             	mov    0x30(%ebx),%edx
    4da0:	85 d2                	test   %edx,%edx
    4da2:	74 08                	je     4dac <ddf_fun_bind+0xbc>
    4da4:	89 0a                	mov    %ecx,(%edx)
    4da6:	8b 4b 2c             	mov    0x2c(%ebx),%ecx
    4da9:	89 51 04             	mov    %edx,0x4(%ecx)
    4dac:	83 ec 0c             	sub    $0xc,%esp
    4daf:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
    4db6:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
    4dbd:	89 45 f4             	mov    %eax,-0xc(%ebp)
    4dc0:	68 14 18 01 00       	push   $0x11814
    4dc5:	e8 26 a8 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    4dca:	8b 45 f4             	mov    -0xc(%ebp),%eax
    4dcd:	83 c4 10             	add    $0x10,%esp
    4dd0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    4dd3:	c9                   	leave  
    4dd4:	c3                   	ret    
    4dd5:	50                   	push   %eax
    4dd6:	68 12 03 00 00       	push   $0x312
    4ddb:	68 3c d6 00 00       	push   $0xd63c
    4de0:	68 bb d6 00 00       	push   $0xd6bb
    4de5:	e8 76 a7 00 00       	call   f560 <assert_abort@plt>
    4dea:	53                   	push   %ebx
    4deb:	68 14 03 00 00       	push   $0x314
    4df0:	68 3c d6 00 00       	push   $0xd63c
    4df5:	68 fa d6 00 00       	push   $0xd6fa
    4dfa:	e8 61 a7 00 00       	call   f560 <assert_abort@plt>
    4dff:	50                   	push   %eax
    4e00:	68 13 03 00 00       	push   $0x313
    4e05:	68 3c d6 00 00       	push   $0xd63c
    4e0a:	68 e8 d6 00 00       	push   $0xd6e8
    4e0f:	e8 4c a7 00 00       	call   f560 <assert_abort@plt>
    4e14:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4e1a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00004e20 <ddf_fun_unbind>:
    4e20:	55                   	push   %ebp
    4e21:	89 e5                	mov    %esp,%ebp
    4e23:	53                   	push   %ebx
    4e24:	83 ec 14             	sub    $0x14,%esp
    4e27:	8b 5d 08             	mov    0x8(%ebp),%ebx
    4e2a:	80 3b 00             	cmpb   $0x0,(%ebx)
    4e2d:	74 71                	je     4ea0 <ddf_fun_unbind+0x80>
    4e2f:	83 ec 0c             	sub    $0xc,%esp
    4e32:	8b 43 04             	mov    0x4(%ebx),%eax
    4e35:	50                   	push   %eax
    4e36:	e8 65 a7 00 00       	call   f5a0 <devman_remove_function@plt>
    4e3b:	83 c4 10             	add    $0x10,%esp
    4e3e:	85 c0                	test   %eax,%eax
    4e40:	74 06                	je     4e48 <ddf_fun_unbind+0x28>
    4e42:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    4e45:	c9                   	leave  
    4e46:	c3                   	ret    
    4e47:	90                   	nop
    4e48:	83 ec 0c             	sub    $0xc,%esp
    4e4b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    4e4e:	68 14 18 01 00       	push   $0x11814
    4e53:	e8 28 aa 00 00       	call   f880 <fibril_mutex_lock@plt>
    4e58:	8b 4b 2c             	mov    0x2c(%ebx),%ecx
    4e5b:	83 c4 10             	add    $0x10,%esp
    4e5e:	8b 45 f4             	mov    -0xc(%ebp),%eax
    4e61:	85 c9                	test   %ecx,%ecx
    4e63:	74 0f                	je     4e74 <ddf_fun_unbind+0x54>
    4e65:	8b 53 30             	mov    0x30(%ebx),%edx
    4e68:	85 d2                	test   %edx,%edx
    4e6a:	74 08                	je     4e74 <ddf_fun_unbind+0x54>
    4e6c:	89 0a                	mov    %ecx,(%edx)
    4e6e:	8b 4b 2c             	mov    0x2c(%ebx),%ecx
    4e71:	89 51 04             	mov    %edx,0x4(%ecx)
    4e74:	83 ec 0c             	sub    $0xc,%esp
    4e77:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
    4e7e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
    4e85:	89 45 f4             	mov    %eax,-0xc(%ebp)
    4e88:	68 14 18 01 00       	push   $0x11814
    4e8d:	e8 5e a7 00 00       	call   f5f0 <fibril_mutex_unlock@plt>
    4e92:	c6 03 00             	movb   $0x0,(%ebx)
    4e95:	8b 45 f4             	mov    -0xc(%ebp),%eax
    4e98:	83 c4 10             	add    $0x10,%esp
    4e9b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    4e9e:	c9                   	leave  
    4e9f:	c3                   	ret    
    4ea0:	52                   	push   %edx
    4ea1:	68 2e 03 00 00       	push   $0x32e
    4ea6:	68 3c d6 00 00       	push   $0xd63c
    4eab:	68 0b d7 00 00       	push   $0xd70b
    4eb0:	e8 ab a6 00 00       	call   f560 <assert_abort@plt>
    4eb5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4eb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00004ec0 <ddf_fun_online>:
    4ec0:	55                   	push   %ebp
    4ec1:	89 e5                	mov    %esp,%ebp
    4ec3:	83 ec 08             	sub    $0x8,%esp
    4ec6:	8b 45 08             	mov    0x8(%ebp),%eax
    4ec9:	80 38 00             	cmpb   $0x0,(%eax)
    4ecc:	74 0c                	je     4eda <ddf_fun_online+0x1a>
    4ece:	8b 40 04             	mov    0x4(%eax),%eax
    4ed1:	89 45 08             	mov    %eax,0x8(%ebp)
    4ed4:	c9                   	leave  
    4ed5:	e9 76 a5 00 00       	jmp    f450 <devman_drv_fun_online@plt>
    4eda:	50                   	push   %eax
    4edb:	68 43 03 00 00       	push   $0x343
    4ee0:	68 3c d6 00 00       	push   $0xd63c
    4ee5:	68 0b d7 00 00       	push   $0xd70b
    4eea:	e8 71 a6 00 00       	call   f560 <assert_abort@plt>
    4eef:	90                   	nop

00004ef0 <ddf_fun_offline>:
    4ef0:	55                   	push   %ebp
    4ef1:	89 e5                	mov    %esp,%ebp
    4ef3:	83 ec 08             	sub    $0x8,%esp
    4ef6:	8b 45 08             	mov    0x8(%ebp),%eax
    4ef9:	80 38 00             	cmpb   $0x0,(%eax)
    4efc:	74 0c                	je     4f0a <ddf_fun_offline+0x1a>
    4efe:	8b 40 04             	mov    0x4(%eax),%eax
    4f01:	89 45 08             	mov    %eax,0x8(%ebp)
    4f04:	c9                   	leave  
    4f05:	e9 76 a7 00 00       	jmp    f680 <devman_drv_fun_offline@plt>
    4f0a:	50                   	push   %eax
    4f0b:	68 55 03 00 00       	push   $0x355
    4f10:	68 3c d6 00 00       	push   $0xd63c
    4f15:	68 0b d7 00 00       	push   $0xd70b
    4f1a:	e8 41 a6 00 00       	call   f560 <assert_abort@plt>
    4f1f:	90                   	nop

00004f20 <ddf_fun_add_match_id>:
    4f20:	55                   	push   %ebp
    4f21:	89 e5                	mov    %esp,%ebp
    4f23:	57                   	push   %edi
    4f24:	56                   	push   %esi
    4f25:	53                   	push   %ebx
    4f26:	83 ec 0c             	sub    $0xc,%esp
    4f29:	8b 5d 08             	mov    0x8(%ebp),%ebx
    4f2c:	8b 75 10             	mov    0x10(%ebp),%esi
    4f2f:	80 3b 00             	cmpb   $0x0,(%ebx)
    4f32:	0f 85 89 00 00 00    	jne    4fc1 <ddf_fun_add_match_id+0xa1>
    4f38:	83 7b 10 01          	cmpl   $0x1,0x10(%ebx)
    4f3c:	75 6e                	jne    4fac <ddf_fun_add_match_id+0x8c>
    4f3e:	83 ec 0c             	sub    $0xc,%esp
    4f41:	6a 10                	push   $0x10
    4f43:	e8 78 a5 00 00       	call   f4c0 <malloc@plt>
    4f48:	83 c4 0c             	add    $0xc,%esp
    4f4b:	89 c7                	mov    %eax,%edi
    4f4d:	6a 10                	push   $0x10
    4f4f:	6a 00                	push   $0x0
    4f51:	50                   	push   %eax
    4f52:	e8 69 a7 00 00       	call   f6c0 <memset@plt>
    4f57:	8b 55 0c             	mov    0xc(%ebp),%edx
    4f5a:	58                   	pop    %eax
    4f5b:	52                   	push   %edx
    4f5c:	e8 af a6 00 00       	call   f610 <str_dup@plt>
    4f61:	8d 53 18             	lea    0x18(%ebx),%edx
    4f64:	89 47 08             	mov    %eax,0x8(%edi)
    4f67:	8b 43 1c             	mov    0x1c(%ebx),%eax
    4f6a:	83 c4 10             	add    $0x10,%esp
    4f6d:	89 77 0c             	mov    %esi,0xc(%edi)
    4f70:	39 c2                	cmp    %eax,%edx
    4f72:	74 18                	je     4f8c <ddf_fun_add_match_id+0x6c>
    4f74:	39 70 0c             	cmp    %esi,0xc(%eax)
    4f77:	73 0c                	jae    4f85 <ddf_fun_add_match_id+0x65>
    4f79:	eb 2d                	jmp    4fa8 <ddf_fun_add_match_id+0x88>
    4f7b:	90                   	nop
    4f7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4f80:	3b 70 0c             	cmp    0xc(%eax),%esi
    4f83:	77 23                	ja     4fa8 <ddf_fun_add_match_id+0x88>
    4f85:	8b 40 04             	mov    0x4(%eax),%eax
    4f88:	39 c2                	cmp    %eax,%edx
    4f8a:	75 f4                	jne    4f80 <ddf_fun_add_match_id+0x60>
    4f8c:	8b 02                	mov    (%edx),%eax
    4f8e:	89 57 04             	mov    %edx,0x4(%edi)
    4f91:	89 07                	mov    %eax,(%edi)
    4f93:	8b 02                	mov    (%edx),%eax
    4f95:	89 78 04             	mov    %edi,0x4(%eax)
    4f98:	89 3a                	mov    %edi,(%edx)
    4f9a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4f9d:	31 c0                	xor    %eax,%eax
    4f9f:	5b                   	pop    %ebx
    4fa0:	5e                   	pop    %esi
    4fa1:	5f                   	pop    %edi
    4fa2:	5d                   	pop    %ebp
    4fa3:	c3                   	ret    
    4fa4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4fa8:	89 c2                	mov    %eax,%edx
    4faa:	eb e0                	jmp    4f8c <ddf_fun_add_match_id+0x6c>
    4fac:	51                   	push   %ecx
    4fad:	68 6f 03 00 00       	push   $0x36f
    4fb2:	68 3c d6 00 00       	push   $0xd63c
    4fb7:	68 1e d7 00 00       	push   $0xd71e
    4fbc:	e8 9f a5 00 00       	call   f560 <assert_abort@plt>
    4fc1:	53                   	push   %ebx
    4fc2:	68 6e 03 00 00       	push   $0x36e
    4fc7:	68 3c d6 00 00       	push   $0xd63c
    4fcc:	68 bb d6 00 00       	push   $0xd6bb
    4fd1:	e8 8a a5 00 00       	call   f560 <assert_abort@plt>
    4fd6:	8d 76 00             	lea    0x0(%esi),%esi
    4fd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00004fe0 <ddf_fun_set_ops>:
    4fe0:	55                   	push   %ebp
    4fe1:	89 e5                	mov    %esp,%ebp
    4fe3:	83 ec 08             	sub    $0x8,%esp
    4fe6:	8b 45 08             	mov    0x8(%ebp),%eax
    4fe9:	8b 48 28             	mov    0x28(%eax),%ecx
    4fec:	85 c9                	test   %ecx,%ecx
    4fee:	75 08                	jne    4ff8 <ddf_fun_set_ops+0x18>
    4ff0:	8b 55 0c             	mov    0xc(%ebp),%edx
    4ff3:	89 50 24             	mov    %edx,0x24(%eax)
    4ff6:	c9                   	leave  
    4ff7:	c3                   	ret    
    4ff8:	50                   	push   %eax
    4ff9:	68 7f 03 00 00       	push   $0x37f
    4ffe:	68 3c d6 00 00       	push   $0xd63c
    5003:	68 36 d7 00 00       	push   $0xd736
    5008:	e8 53 a5 00 00       	call   f560 <assert_abort@plt>
    500d:	8d 76 00             	lea    0x0(%esi),%esi

00005010 <ddf_fun_set_conn_handler>:
    5010:	55                   	push   %ebp
    5011:	89 e5                	mov    %esp,%ebp
    5013:	83 ec 08             	sub    $0x8,%esp
    5016:	8b 45 08             	mov    0x8(%ebp),%eax
    5019:	8b 48 24             	mov    0x24(%eax),%ecx
    501c:	85 c9                	test   %ecx,%ecx
    501e:	75 08                	jne    5028 <ddf_fun_set_conn_handler+0x18>
    5020:	8b 55 0c             	mov    0xc(%ebp),%edx
    5023:	89 50 28             	mov    %edx,0x28(%eax)
    5026:	c9                   	leave  
    5027:	c3                   	ret    
    5028:	50                   	push   %eax
    5029:	68 89 03 00 00       	push   $0x389
    502e:	68 3c d6 00 00       	push   $0xd63c
    5033:	68 50 d7 00 00       	push   $0xd750
    5038:	e8 23 a5 00 00       	call   f560 <assert_abort@plt>
    503d:	8d 76 00             	lea    0x0(%esi),%esi

00005040 <ddf_fun_add_to_category>:
    5040:	55                   	push   %ebp
    5041:	89 e5                	mov    %esp,%ebp
    5043:	83 ec 08             	sub    $0x8,%esp
    5046:	8b 45 08             	mov    0x8(%ebp),%eax
    5049:	8b 55 0c             	mov    0xc(%ebp),%edx
    504c:	80 38 00             	cmpb   $0x0,(%eax)
    504f:	74 15                	je     5066 <ddf_fun_add_to_category+0x26>
    5051:	83 78 10 02          	cmpl   $0x2,0x10(%eax)
    5055:	75 24                	jne    507b <ddf_fun_add_to_category+0x3b>
    5057:	89 55 0c             	mov    %edx,0xc(%ebp)
    505a:	8b 40 04             	mov    0x4(%eax),%eax
    505d:	89 45 08             	mov    %eax,0x8(%ebp)
    5060:	c9                   	leave  
    5061:	e9 6a a4 00 00       	jmp    f4d0 <devman_add_device_to_category@plt>
    5066:	52                   	push   %edx
    5067:	68 9c 03 00 00       	push   $0x39c
    506c:	68 3c d6 00 00       	push   $0xd63c
    5071:	68 0b d7 00 00       	push   $0xd70b
    5076:	e8 e5 a4 00 00       	call   f560 <assert_abort@plt>
    507b:	50                   	push   %eax
    507c:	68 9d 03 00 00       	push   $0x39d
    5081:	68 3c d6 00 00       	push   $0xd63c
    5086:	68 61 d7 00 00       	push   $0xd761
    508b:	e8 d0 a4 00 00       	call   f560 <assert_abort@plt>

00005090 <ddf_driver_main>:
    5090:	55                   	push   %ebp
    5091:	89 e5                	mov    %esp,%ebp
    5093:	56                   	push   %esi
    5094:	53                   	push   %ebx
    5095:	83 ec 10             	sub    $0x10,%esp
    5098:	8d 75 f4             	lea    -0xc(%ebp),%esi
    509b:	8b 45 08             	mov    0x8(%ebp),%eax
    509e:	56                   	push   %esi
    509f:	a3 ac 19 01 00       	mov    %eax,0x119ac
    50a4:	6a 00                	push   $0x0
    50a6:	68 f0 43 00 00       	push   $0x43f0
    50ab:	68 41 26 9b c9       	push   $0xc99b2641
    50b0:	e8 1b a7 00 00       	call   f7d0 <async_create_port@plt>
    50b5:	83 c4 10             	add    $0x10,%esp
    50b8:	89 c3                	mov    %eax,%ebx
    50ba:	85 c0                	test   %eax,%eax
    50bc:	74 0a                	je     50c8 <ddf_driver_main+0x38>
    50be:	8d 65 f8             	lea    -0x8(%ebp),%esp
    50c1:	89 d8                	mov    %ebx,%eax
    50c3:	5b                   	pop    %ebx
    50c4:	5e                   	pop    %esi
    50c5:	5d                   	pop    %ebp
    50c6:	c3                   	ret    
    50c7:	90                   	nop
    50c8:	56                   	push   %esi
    50c9:	6a 00                	push   $0x0
    50cb:	68 10 44 00 00       	push   $0x4410
    50d0:	68 41 26 9b db       	push   $0xdb9b2641
    50d5:	e8 f6 a6 00 00       	call   f7d0 <async_create_port@plt>
    50da:	83 c4 10             	add    $0x10,%esp
    50dd:	89 c3                	mov    %eax,%ebx
    50df:	85 c0                	test   %eax,%eax
    50e1:	75 db                	jne    50be <ddf_driver_main+0x2e>
    50e3:	51                   	push   %ecx
    50e4:	51                   	push   %ecx
    50e5:	6a 00                	push   $0x0
    50e7:	68 00 44 00 00       	push   $0x4400
    50ec:	e8 4f a7 00 00       	call   f840 <async_set_fallback_port_handler@plt>
    50f1:	a1 ac 19 01 00       	mov    0x119ac,%eax
    50f6:	8b 30                	mov    (%eax),%esi
    50f8:	5b                   	pop    %ebx
    50f9:	56                   	push   %esi
    50fa:	e8 b1 a5 00 00       	call   f6b0 <devman_driver_register@plt>
    50ff:	83 c4 10             	add    $0x10,%esp
    5102:	89 c3                	mov    %eax,%ebx
    5104:	85 c0                	test   %eax,%eax
    5106:	74 30                	je     5138 <ddf_driver_main+0xa8>
    5108:	b8 7b d7 00 00       	mov    $0xd77b,%eax
    510d:	83 fb f7             	cmp    $0xfffffff7,%ebx
    5110:	74 0c                	je     511e <ddf_driver_main+0x8e>
    5112:	83 ec 0c             	sub    $0xc,%esp
    5115:	53                   	push   %ebx
    5116:	e8 65 a6 00 00       	call   f780 <str_error@plt>
    511b:	83 c4 10             	add    $0x10,%esp
    511e:	52                   	push   %edx
    511f:	52                   	push   %edx
    5120:	50                   	push   %eax
    5121:	68 08 d9 00 00       	push   $0xd908
    5126:	e8 85 a2 00 00       	call   f3b0 <printf@plt>
    512b:	83 c4 10             	add    $0x10,%esp
    512e:	8d 65 f8             	lea    -0x8(%ebp),%esp
    5131:	89 d8                	mov    %ebx,%eax
    5133:	5b                   	pop    %ebx
    5134:	5e                   	pop    %esi
    5135:	5d                   	pop    %ebp
    5136:	c3                   	ret    
    5137:	90                   	nop
    5138:	83 ec 0c             	sub    $0xc,%esp
    513b:	6a 00                	push   $0x0
    513d:	e8 3e a2 00 00       	call   f380 <task_retval@plt>
    5142:	83 c4 10             	add    $0x10,%esp
    5145:	89 c3                	mov    %eax,%ebx
    5147:	85 c0                	test   %eax,%eax
    5149:	0f 85 6f ff ff ff    	jne    50be <ddf_driver_main+0x2e>
    514f:	83 c8 ff             	or     $0xffffffff,%eax
    5152:	f0 0f c1 05 a4 19 01 	lock xadd %eax,0x119a4
    5159:	00 
    515a:	48                   	dec    %eax
    515b:	78 12                	js     516f <ddf_driver_main+0xdf>
    515d:	83 ec 0c             	sub    $0xc,%esp
    5160:	6a 03                	push   $0x3
    5162:	e8 a9 a6 00 00       	call   f810 <fibril_switch@plt>
    5167:	83 c4 10             	add    $0x10,%esp
    516a:	e9 4f ff ff ff       	jmp    50be <ddf_driver_main+0x2e>
    516f:	50                   	push   %eax
    5170:	6a 0b                	push   $0xb
    5172:	6a 00                	push   $0x0
    5174:	6a 00                	push   $0x0
    5176:	6a 00                	push   $0x0
    5178:	6a 00                	push   $0x0
    517a:	6a 00                	push   $0x0
    517c:	68 a4 19 01 00       	push   $0x119a4
    5181:	ff 15 a0 19 01 00    	call   *0x119a0
    5187:	83 c4 20             	add    $0x20,%esp
    518a:	eb d1                	jmp    515d <ddf_driver_main+0xcd>
    518c:	66 90                	xchg   %ax,%ax
    518e:	66 90                	xchg   %ax,%ax

00005190 <get_remote_iface>:
    5190:	55                   	push   %ebp
    5191:	89 e5                	mov    %esp,%ebp
    5193:	83 ec 08             	sub    $0x8,%esp
    5196:	8b 45 08             	mov    0x8(%ebp),%eax
    5199:	83 f8 0e             	cmp    $0xe,%eax
    519c:	77 09                	ja     51a7 <get_remote_iface+0x17>
    519e:	8b 04 85 80 d9 00 00 	mov    0xd980(,%eax,4),%eax
    51a5:	c9                   	leave  
    51a6:	c3                   	ret    
    51a7:	50                   	push   %eax
    51a8:	6a 4f                	push   $0x4f
    51aa:	68 58 d9 00 00       	push   $0xd958
    51af:	68 4d d6 00 00       	push   $0xd64d
    51b4:	e8 a7 a3 00 00       	call   f560 <assert_abort@plt>
    51b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000051c0 <get_remote_method>:
    51c0:	55                   	push   %ebp
    51c1:	89 e5                	mov    %esp,%ebp
    51c3:	8b 55 08             	mov    0x8(%ebp),%edx
    51c6:	8b 45 0c             	mov    0xc(%ebp),%eax
    51c9:	39 02                	cmp    %eax,(%edx)
    51cb:	76 0b                	jbe    51d8 <get_remote_method+0x18>
    51cd:	8b 52 04             	mov    0x4(%edx),%edx
    51d0:	5d                   	pop    %ebp
    51d1:	8b 04 82             	mov    (%edx,%eax,4),%eax
    51d4:	c3                   	ret    
    51d5:	8d 76 00             	lea    0x0(%esi),%esi
    51d8:	31 c0                	xor    %eax,%eax
    51da:	5d                   	pop    %ebp
    51db:	c3                   	ret    
    51dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000051e0 <is_valid_iface_idx>:
    51e0:	55                   	push   %ebp
    51e1:	89 e5                	mov    %esp,%ebp
    51e3:	83 7d 08 0e          	cmpl   $0xe,0x8(%ebp)
    51e7:	5d                   	pop    %ebp
    51e8:	0f 96 c0             	setbe  %al
    51eb:	c3                   	ret    
    51ec:	66 90                	xchg   %ax,%ax
    51ee:	66 90                	xchg   %ax,%ax

000051f0 <ddf_log_init>:
    51f0:	55                   	push   %ebp
    51f1:	89 e5                	mov    %esp,%ebp
    51f3:	5d                   	pop    %ebp
    51f4:	e9 17 a2 00 00       	jmp    f410 <log_init@plt>
    51f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00005200 <ddf_msg>:
    5200:	55                   	push   %ebp
    5201:	89 e5                	mov    %esp,%ebp
    5203:	83 ec 08             	sub    $0x8,%esp
    5206:	8d 45 10             	lea    0x10(%ebp),%eax
    5209:	8b 55 0c             	mov    0xc(%ebp),%edx
    520c:	8b 4d 08             	mov    0x8(%ebp),%ecx
    520f:	50                   	push   %eax
    5210:	52                   	push   %edx
    5211:	51                   	push   %ecx
    5212:	6a ff                	push   $0xffffffff
    5214:	e8 17 a3 00 00       	call   f530 <log_msgv@plt>
    5219:	83 c4 10             	add    $0x10,%esp
    521c:	c9                   	leave  
    521d:	c3                   	ret    
    521e:	66 90                	xchg   %ax,%ax

00005220 <remote_audio_mixer_set_item_level>:
    5220:	55                   	push   %ebp
    5221:	89 e5                	mov    %esp,%ebp
    5223:	53                   	push   %ebx
    5224:	51                   	push   %ecx
    5225:	8b 45 0c             	mov    0xc(%ebp),%eax
    5228:	8b 4d 08             	mov    0x8(%ebp),%ecx
    522b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    522e:	8b 55 14             	mov    0x14(%ebp),%edx
    5231:	8b 40 0c             	mov    0xc(%eax),%eax
    5234:	85 c0                	test   %eax,%eax
    5236:	74 20                	je     5258 <remote_audio_mixer_set_item_level+0x38>
    5238:	83 ec 04             	sub    $0x4,%esp
    523b:	ff 72 0c             	pushl  0xc(%edx)
    523e:	8b 52 08             	mov    0x8(%edx),%edx
    5241:	52                   	push   %edx
    5242:	51                   	push   %ecx
    5243:	ff d0                	call   *%eax
    5245:	89 5d 08             	mov    %ebx,0x8(%ebp)
    5248:	83 c4 10             	add    $0x10,%esp
    524b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    524e:	89 45 0c             	mov    %eax,0xc(%ebp)
    5251:	c9                   	leave  
    5252:	e9 a9 a2 00 00       	jmp    f500 <async_answer_0@plt>
    5257:	90                   	nop
    5258:	89 5d 08             	mov    %ebx,0x8(%ebp)
    525b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    525e:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    5265:	c9                   	leave  
    5266:	e9 95 a2 00 00       	jmp    f500 <async_answer_0@plt>
    526b:	90                   	nop
    526c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00005270 <remote_audio_mixer_get_item_level>:
    5270:	55                   	push   %ebp
    5271:	89 e5                	mov    %esp,%ebp
    5273:	83 ec 18             	sub    $0x18,%esp
    5276:	8b 45 0c             	mov    0xc(%ebp),%eax
    5279:	8b 40 08             	mov    0x8(%eax),%eax
    527c:	85 c0                	test   %eax,%eax
    527e:	74 30                	je     52b0 <remote_audio_mixer_get_item_level+0x40>
    5280:	8b 55 14             	mov    0x14(%ebp),%edx
    5283:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    528a:	8b 52 08             	mov    0x8(%edx),%edx
    528d:	51                   	push   %ecx
    528e:	8d 4d f4             	lea    -0xc(%ebp),%ecx
    5291:	51                   	push   %ecx
    5292:	52                   	push   %edx
    5293:	8b 55 08             	mov    0x8(%ebp),%edx
    5296:	52                   	push   %edx
    5297:	ff d0                	call   *%eax
    5299:	83 c4 0c             	add    $0xc,%esp
    529c:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    529f:	51                   	push   %ecx
    52a0:	50                   	push   %eax
    52a1:	8b 45 10             	mov    0x10(%ebp),%eax
    52a4:	50                   	push   %eax
    52a5:	e8 b6 a4 00 00       	call   f760 <async_answer_1@plt>
    52aa:	83 c4 10             	add    $0x10,%esp
    52ad:	c9                   	leave  
    52ae:	c3                   	ret    
    52af:	90                   	nop
    52b0:	50                   	push   %eax
    52b1:	50                   	push   %eax
    52b2:	8b 45 10             	mov    0x10(%ebp),%eax
    52b5:	6a f5                	push   $0xfffffff5
    52b7:	50                   	push   %eax
    52b8:	e8 43 a2 00 00       	call   f500 <async_answer_0@plt>
    52bd:	83 c4 10             	add    $0x10,%esp
    52c0:	c9                   	leave  
    52c1:	c3                   	ret    
    52c2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    52c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000052d0 <remote_audio_mixer_get_item_info>:
    52d0:	55                   	push   %ebp
    52d1:	89 e5                	mov    %esp,%ebp
    52d3:	56                   	push   %esi
    52d4:	53                   	push   %ebx
    52d5:	83 ec 10             	sub    $0x10,%esp
    52d8:	8b 45 0c             	mov    0xc(%ebp),%eax
    52db:	8b 40 04             	mov    0x4(%eax),%eax
    52de:	85 c0                	test   %eax,%eax
    52e0:	0f 84 c2 00 00 00    	je     53a8 <remote_audio_mixer_get_item_info+0xd8>
    52e6:	8b 55 14             	mov    0x14(%ebp),%edx
    52e9:	8d 4d ec             	lea    -0x14(%ebp),%ecx
    52ec:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
    52f3:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    52fa:	8b 52 08             	mov    0x8(%edx),%edx
    52fd:	51                   	push   %ecx
    52fe:	8d 4d e8             	lea    -0x18(%ebp),%ecx
    5301:	51                   	push   %ecx
    5302:	8b 4d 08             	mov    0x8(%ebp),%ecx
    5305:	52                   	push   %edx
    5306:	51                   	push   %ecx
    5307:	ff d0                	call   *%eax
    5309:	83 c4 10             	add    $0x10,%esp
    530c:	89 c6                	mov    %eax,%esi
    530e:	8b 45 e8             	mov    -0x18(%ebp),%eax
    5311:	85 c0                	test   %eax,%eax
    5313:	74 5b                	je     5370 <remote_audio_mixer_get_item_info+0xa0>
    5315:	83 ec 0c             	sub    $0xc,%esp
    5318:	50                   	push   %eax
    5319:	e8 22 a4 00 00       	call   f740 <str_size@plt>
    531e:	8b 55 10             	mov    0x10(%ebp),%edx
    5321:	8d 58 01             	lea    0x1(%eax),%ebx
    5324:	8b 45 ec             	mov    -0x14(%ebp),%eax
    5327:	50                   	push   %eax
    5328:	53                   	push   %ebx
    5329:	56                   	push   %esi
    532a:	52                   	push   %edx
    532b:	e8 b0 a2 00 00       	call   f5e0 <async_answer_2@plt>
    5330:	83 c4 20             	add    $0x20,%esp
    5333:	85 f6                	test   %esi,%esi
    5335:	75 2f                	jne    5366 <remote_audio_mixer_get_item_info+0x96>
    5337:	85 db                	test   %ebx,%ebx
    5339:	74 2b                	je     5366 <remote_audio_mixer_get_item_info+0x96>
    533b:	50                   	push   %eax
    533c:	50                   	push   %eax
    533d:	8d 45 f0             	lea    -0x10(%ebp),%eax
    5340:	50                   	push   %eax
    5341:	8d 45 f4             	lea    -0xc(%ebp),%eax
    5344:	50                   	push   %eax
    5345:	e8 86 a3 00 00       	call   f6d0 <async_data_read_receive@plt>
    534a:	83 c4 10             	add    $0x10,%esp
    534d:	84 c0                	test   %al,%al
    534f:	74 6f                	je     53c0 <remote_audio_mixer_get_item_info+0xf0>
    5351:	3b 5d f0             	cmp    -0x10(%ebp),%ebx
    5354:	74 3a                	je     5390 <remote_audio_mixer_get_item_info+0xc0>
    5356:	50                   	push   %eax
    5357:	50                   	push   %eax
    5358:	8b 45 f4             	mov    -0xc(%ebp),%eax
    535b:	6a fd                	push   $0xfffffffd
    535d:	50                   	push   %eax
    535e:	e8 9d a1 00 00       	call   f500 <async_answer_0@plt>
    5363:	83 c4 10             	add    $0x10,%esp
    5366:	8d 65 f8             	lea    -0x8(%ebp),%esp
    5369:	5b                   	pop    %ebx
    536a:	5e                   	pop    %esi
    536b:	5d                   	pop    %ebp
    536c:	c3                   	ret    
    536d:	8d 76 00             	lea    0x0(%esi),%esi
    5370:	8b 45 ec             	mov    -0x14(%ebp),%eax
    5373:	8b 55 10             	mov    0x10(%ebp),%edx
    5376:	50                   	push   %eax
    5377:	6a 00                	push   $0x0
    5379:	56                   	push   %esi
    537a:	52                   	push   %edx
    537b:	e8 60 a2 00 00       	call   f5e0 <async_answer_2@plt>
    5380:	83 c4 10             	add    $0x10,%esp
    5383:	8d 65 f8             	lea    -0x8(%ebp),%esp
    5386:	5b                   	pop    %ebx
    5387:	5e                   	pop    %esi
    5388:	5d                   	pop    %ebp
    5389:	c3                   	ret    
    538a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5390:	8b 75 f4             	mov    -0xc(%ebp),%esi
    5393:	51                   	push   %ecx
    5394:	53                   	push   %ebx
    5395:	8b 5d e8             	mov    -0x18(%ebp),%ebx
    5398:	53                   	push   %ebx
    5399:	56                   	push   %esi
    539a:	e8 c1 a0 00 00       	call   f460 <async_data_read_finalize@plt>
    539f:	83 c4 10             	add    $0x10,%esp
    53a2:	eb c2                	jmp    5366 <remote_audio_mixer_get_item_info+0x96>
    53a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    53a8:	8b 75 10             	mov    0x10(%ebp),%esi
    53ab:	53                   	push   %ebx
    53ac:	53                   	push   %ebx
    53ad:	6a f5                	push   $0xfffffff5
    53af:	56                   	push   %esi
    53b0:	e8 4b a1 00 00       	call   f500 <async_answer_0@plt>
    53b5:	83 c4 10             	add    $0x10,%esp
    53b8:	8d 65 f8             	lea    -0x8(%ebp),%esp
    53bb:	5b                   	pop    %ebx
    53bc:	5e                   	pop    %esi
    53bd:	5d                   	pop    %ebp
    53be:	c3                   	ret    
    53bf:	90                   	nop
    53c0:	50                   	push   %eax
    53c1:	50                   	push   %eax
    53c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
    53c5:	6a f8                	push   $0xfffffff8
    53c7:	50                   	push   %eax
    53c8:	e8 33 a1 00 00       	call   f500 <async_answer_0@plt>
    53cd:	83 c4 10             	add    $0x10,%esp
    53d0:	eb 94                	jmp    5366 <remote_audio_mixer_get_item_info+0x96>
    53d2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    53d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000053e0 <remote_audio_mixer_get_info>:
    53e0:	55                   	push   %ebp
    53e1:	89 e5                	mov    %esp,%ebp
    53e3:	56                   	push   %esi
    53e4:	53                   	push   %ebx
    53e5:	83 ec 10             	sub    $0x10,%esp
    53e8:	8b 45 0c             	mov    0xc(%ebp),%eax
    53eb:	8b 00                	mov    (%eax),%eax
    53ed:	85 c0                	test   %eax,%eax
    53ef:	0f 84 bb 00 00 00    	je     54b0 <remote_audio_mixer_get_info+0xd0>
    53f5:	8d 55 ec             	lea    -0x14(%ebp),%edx
    53f8:	8b 5d 08             	mov    0x8(%ebp),%ebx
    53fb:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
    5402:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    5409:	51                   	push   %ecx
    540a:	52                   	push   %edx
    540b:	8d 55 e8             	lea    -0x18(%ebp),%edx
    540e:	52                   	push   %edx
    540f:	53                   	push   %ebx
    5410:	ff d0                	call   *%eax
    5412:	83 c4 10             	add    $0x10,%esp
    5415:	89 c6                	mov    %eax,%esi
    5417:	8b 45 e8             	mov    -0x18(%ebp),%eax
    541a:	85 c0                	test   %eax,%eax
    541c:	74 5a                	je     5478 <remote_audio_mixer_get_info+0x98>
    541e:	83 ec 0c             	sub    $0xc,%esp
    5421:	50                   	push   %eax
    5422:	e8 19 a3 00 00       	call   f740 <str_size@plt>
    5427:	8b 55 10             	mov    0x10(%ebp),%edx
    542a:	8d 58 01             	lea    0x1(%eax),%ebx
    542d:	8b 45 ec             	mov    -0x14(%ebp),%eax
    5430:	50                   	push   %eax
    5431:	53                   	push   %ebx
    5432:	56                   	push   %esi
    5433:	52                   	push   %edx
    5434:	e8 a7 a1 00 00       	call   f5e0 <async_answer_2@plt>
    5439:	83 c4 20             	add    $0x20,%esp
    543c:	85 f6                	test   %esi,%esi
    543e:	75 2f                	jne    546f <remote_audio_mixer_get_info+0x8f>
    5440:	85 db                	test   %ebx,%ebx
    5442:	74 2b                	je     546f <remote_audio_mixer_get_info+0x8f>
    5444:	50                   	push   %eax
    5445:	50                   	push   %eax
    5446:	8d 45 f0             	lea    -0x10(%ebp),%eax
    5449:	50                   	push   %eax
    544a:	8d 45 f4             	lea    -0xc(%ebp),%eax
    544d:	50                   	push   %eax
    544e:	e8 7d a2 00 00       	call   f6d0 <async_data_read_receive@plt>
    5453:	83 c4 10             	add    $0x10,%esp
    5456:	84 c0                	test   %al,%al
    5458:	74 6e                	je     54c8 <remote_audio_mixer_get_info+0xe8>
    545a:	3b 5d f0             	cmp    -0x10(%ebp),%ebx
    545d:	74 39                	je     5498 <remote_audio_mixer_get_info+0xb8>
    545f:	50                   	push   %eax
    5460:	50                   	push   %eax
    5461:	8b 45 f4             	mov    -0xc(%ebp),%eax
    5464:	6a fd                	push   $0xfffffffd
    5466:	50                   	push   %eax
    5467:	e8 94 a0 00 00       	call   f500 <async_answer_0@plt>
    546c:	83 c4 10             	add    $0x10,%esp
    546f:	8d 65 f8             	lea    -0x8(%ebp),%esp
    5472:	5b                   	pop    %ebx
    5473:	5e                   	pop    %esi
    5474:	5d                   	pop    %ebp
    5475:	c3                   	ret    
    5476:	66 90                	xchg   %ax,%ax
    5478:	8b 45 ec             	mov    -0x14(%ebp),%eax
    547b:	8b 55 10             	mov    0x10(%ebp),%edx
    547e:	50                   	push   %eax
    547f:	6a 00                	push   $0x0
    5481:	56                   	push   %esi
    5482:	52                   	push   %edx
    5483:	e8 58 a1 00 00       	call   f5e0 <async_answer_2@plt>
    5488:	83 c4 10             	add    $0x10,%esp
    548b:	8d 65 f8             	lea    -0x8(%ebp),%esp
    548e:	5b                   	pop    %ebx
    548f:	5e                   	pop    %esi
    5490:	5d                   	pop    %ebp
    5491:	c3                   	ret    
    5492:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5498:	8b 75 f4             	mov    -0xc(%ebp),%esi
    549b:	51                   	push   %ecx
    549c:	53                   	push   %ebx
    549d:	8b 5d e8             	mov    -0x18(%ebp),%ebx
    54a0:	53                   	push   %ebx
    54a1:	56                   	push   %esi
    54a2:	e8 b9 9f 00 00       	call   f460 <async_data_read_finalize@plt>
    54a7:	83 c4 10             	add    $0x10,%esp
    54aa:	eb c3                	jmp    546f <remote_audio_mixer_get_info+0x8f>
    54ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    54b0:	8b 45 10             	mov    0x10(%ebp),%eax
    54b3:	56                   	push   %esi
    54b4:	56                   	push   %esi
    54b5:	6a f5                	push   $0xfffffff5
    54b7:	50                   	push   %eax
    54b8:	e8 43 a0 00 00       	call   f500 <async_answer_0@plt>
    54bd:	83 c4 10             	add    $0x10,%esp
    54c0:	8d 65 f8             	lea    -0x8(%ebp),%esp
    54c3:	5b                   	pop    %ebx
    54c4:	5e                   	pop    %esi
    54c5:	5d                   	pop    %ebp
    54c6:	c3                   	ret    
    54c7:	90                   	nop
    54c8:	50                   	push   %eax
    54c9:	50                   	push   %eax
    54ca:	8b 45 f4             	mov    -0xc(%ebp),%eax
    54cd:	6a f8                	push   $0xfffffff8
    54cf:	50                   	push   %eax
    54d0:	e8 2b a0 00 00       	call   f500 <async_answer_0@plt>
    54d5:	83 c4 10             	add    $0x10,%esp
    54d8:	eb 95                	jmp    546f <remote_audio_mixer_get_info+0x8f>
    54da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000054e0 <audio_mixer_get_info>:
    54e0:	55                   	push   %ebp
    54e1:	89 e5                	mov    %esp,%ebp
    54e3:	57                   	push   %edi
    54e4:	56                   	push   %esi
    54e5:	53                   	push   %ebx
    54e6:	83 ec 2c             	sub    $0x2c,%esp
    54e9:	8b 75 08             	mov    0x8(%ebp),%esi
    54ec:	85 f6                	test   %esi,%esi
    54ee:	0f 84 bc 00 00 00    	je     55b0 <audio_mixer_get_info+0xd0>
    54f4:	50                   	push   %eax
    54f5:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    54f8:	6a 00                	push   $0x0
    54fa:	6a 00                	push   $0x0
    54fc:	6a 00                	push   $0x0
    54fe:	50                   	push   %eax
    54ff:	8d 45 e0             	lea    -0x20(%ebp),%eax
    5502:	50                   	push   %eax
    5503:	6a 00                	push   $0x0
    5505:	6a 00                	push   $0x0
    5507:	6a 00                	push   $0x0
    5509:	6a 00                	push   $0x0
    550b:	68 03 04 00 00       	push   $0x403
    5510:	56                   	push   %esi
    5511:	e8 da 9f 00 00       	call   f4f0 <async_req_fast@plt>
    5516:	83 c4 30             	add    $0x30,%esp
    5519:	89 c3                	mov    %eax,%ebx
    551b:	85 c0                	test   %eax,%eax
    551d:	8b 45 0c             	mov    0xc(%ebp),%eax
    5520:	0f 94 c2             	sete   %dl
    5523:	85 c0                	test   %eax,%eax
    5525:	74 04                	je     552b <audio_mixer_get_info+0x4b>
    5527:	84 d2                	test   %dl,%dl
    5529:	75 1d                	jne    5548 <audio_mixer_get_info+0x68>
    552b:	8b 45 10             	mov    0x10(%ebp),%eax
    552e:	85 c0                	test   %eax,%eax
    5530:	74 57                	je     5589 <audio_mixer_get_info+0xa9>
    5532:	84 d2                	test   %dl,%dl
    5534:	74 53                	je     5589 <audio_mixer_get_info+0xa9>
    5536:	8b 4d 10             	mov    0x10(%ebp),%ecx
    5539:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    553c:	89 01                	mov    %eax,(%ecx)
    553e:	89 d8                	mov    %ebx,%eax
    5540:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5543:	5b                   	pop    %ebx
    5544:	5e                   	pop    %esi
    5545:	5f                   	pop    %edi
    5546:	5d                   	pop    %ebp
    5547:	c3                   	ret    
    5548:	8b 45 e0             	mov    -0x20(%ebp),%eax
    554b:	88 55 d4             	mov    %dl,-0x2c(%ebp)
    554e:	57                   	push   %edi
    554f:	57                   	push   %edi
    5550:	50                   	push   %eax
    5551:	6a 01                	push   $0x1
    5553:	e8 28 a0 00 00       	call   f580 <calloc@plt>
    5558:	83 c4 10             	add    $0x10,%esp
    555b:	89 c7                	mov    %eax,%edi
    555d:	85 c0                	test   %eax,%eax
    555f:	8a 55 d4             	mov    -0x2c(%ebp),%dl
    5562:	74 53                	je     55b7 <audio_mixer_get_info+0xd7>
    5564:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    5567:	88 55 d4             	mov    %dl,-0x2c(%ebp)
    556a:	52                   	push   %edx
    556b:	51                   	push   %ecx
    556c:	50                   	push   %eax
    556d:	56                   	push   %esi
    556e:	e8 6d a1 00 00       	call   f6e0 <async_data_read_start@plt>
    5573:	83 c4 10             	add    $0x10,%esp
    5576:	8a 55 d4             	mov    -0x2c(%ebp),%dl
    5579:	85 c0                	test   %eax,%eax
    557b:	75 1b                	jne    5598 <audio_mixer_get_info+0xb8>
    557d:	8b 45 0c             	mov    0xc(%ebp),%eax
    5580:	89 38                	mov    %edi,(%eax)
    5582:	8b 45 10             	mov    0x10(%ebp),%eax
    5585:	85 c0                	test   %eax,%eax
    5587:	75 a9                	jne    5532 <audio_mixer_get_info+0x52>
    5589:	8d 65 f4             	lea    -0xc(%ebp),%esp
    558c:	89 d8                	mov    %ebx,%eax
    558e:	5b                   	pop    %ebx
    558f:	5e                   	pop    %esi
    5590:	5f                   	pop    %edi
    5591:	5d                   	pop    %ebp
    5592:	c3                   	ret    
    5593:	90                   	nop
    5594:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5598:	83 ec 0c             	sub    $0xc,%esp
    559b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    559e:	57                   	push   %edi
    559f:	e8 bc a2 00 00       	call   f860 <free@plt>
    55a4:	83 c4 10             	add    $0x10,%esp
    55a7:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    55aa:	eb 94                	jmp    5540 <audio_mixer_get_info+0x60>
    55ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    55b0:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    55b5:	eb 89                	jmp    5540 <audio_mixer_get_info+0x60>
    55b7:	53                   	push   %ebx
    55b8:	6a 00                	push   $0x0
    55ba:	6a ff                	push   $0xffffffff
    55bc:	56                   	push   %esi
    55bd:	e8 1e a1 00 00       	call   f6e0 <async_data_read_start@plt>
    55c2:	83 c4 10             	add    $0x10,%esp
    55c5:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    55ca:	e9 71 ff ff ff       	jmp    5540 <audio_mixer_get_info+0x60>
    55cf:	90                   	nop

000055d0 <audio_mixer_get_item_info>:
    55d0:	55                   	push   %ebp
    55d1:	89 e5                	mov    %esp,%ebp
    55d3:	57                   	push   %edi
    55d4:	56                   	push   %esi
    55d5:	53                   	push   %ebx
    55d6:	83 ec 2c             	sub    $0x2c,%esp
    55d9:	8b 75 08             	mov    0x8(%ebp),%esi
    55dc:	85 f6                	test   %esi,%esi
    55de:	0f 84 c4 00 00 00    	je     56a8 <audio_mixer_get_item_info+0xd8>
    55e4:	50                   	push   %eax
    55e5:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    55e8:	6a 00                	push   $0x0
    55ea:	6a 00                	push   $0x0
    55ec:	6a 00                	push   $0x0
    55ee:	50                   	push   %eax
    55ef:	8d 45 e0             	lea    -0x20(%ebp),%eax
    55f2:	50                   	push   %eax
    55f3:	8b 45 0c             	mov    0xc(%ebp),%eax
    55f6:	6a 00                	push   $0x0
    55f8:	6a 00                	push   $0x0
    55fa:	50                   	push   %eax
    55fb:	6a 01                	push   $0x1
    55fd:	68 03 04 00 00       	push   $0x403
    5602:	56                   	push   %esi
    5603:	e8 e8 9e 00 00       	call   f4f0 <async_req_fast@plt>
    5608:	83 c4 30             	add    $0x30,%esp
    560b:	89 c3                	mov    %eax,%ebx
    560d:	85 c0                	test   %eax,%eax
    560f:	8b 45 10             	mov    0x10(%ebp),%eax
    5612:	0f 94 c2             	sete   %dl
    5615:	85 c0                	test   %eax,%eax
    5617:	74 04                	je     561d <audio_mixer_get_item_info+0x4d>
    5619:	84 d2                	test   %dl,%dl
    561b:	75 23                	jne    5640 <audio_mixer_get_item_info+0x70>
    561d:	8b 45 14             	mov    0x14(%ebp),%eax
    5620:	85 c0                	test   %eax,%eax
    5622:	74 5d                	je     5681 <audio_mixer_get_item_info+0xb1>
    5624:	84 d2                	test   %dl,%dl
    5626:	74 59                	je     5681 <audio_mixer_get_item_info+0xb1>
    5628:	8b 4d 14             	mov    0x14(%ebp),%ecx
    562b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    562e:	89 01                	mov    %eax,(%ecx)
    5630:	89 d8                	mov    %ebx,%eax
    5632:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5635:	5b                   	pop    %ebx
    5636:	5e                   	pop    %esi
    5637:	5f                   	pop    %edi
    5638:	5d                   	pop    %ebp
    5639:	c3                   	ret    
    563a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5640:	8b 45 e0             	mov    -0x20(%ebp),%eax
    5643:	88 55 d4             	mov    %dl,-0x2c(%ebp)
    5646:	57                   	push   %edi
    5647:	57                   	push   %edi
    5648:	50                   	push   %eax
    5649:	6a 01                	push   $0x1
    564b:	e8 30 9f 00 00       	call   f580 <calloc@plt>
    5650:	83 c4 10             	add    $0x10,%esp
    5653:	89 c7                	mov    %eax,%edi
    5655:	85 c0                	test   %eax,%eax
    5657:	8a 55 d4             	mov    -0x2c(%ebp),%dl
    565a:	74 53                	je     56af <audio_mixer_get_item_info+0xdf>
    565c:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    565f:	88 55 d4             	mov    %dl,-0x2c(%ebp)
    5662:	52                   	push   %edx
    5663:	51                   	push   %ecx
    5664:	50                   	push   %eax
    5665:	56                   	push   %esi
    5666:	e8 75 a0 00 00       	call   f6e0 <async_data_read_start@plt>
    566b:	83 c4 10             	add    $0x10,%esp
    566e:	8a 55 d4             	mov    -0x2c(%ebp),%dl
    5671:	85 c0                	test   %eax,%eax
    5673:	75 1b                	jne    5690 <audio_mixer_get_item_info+0xc0>
    5675:	8b 45 10             	mov    0x10(%ebp),%eax
    5678:	89 38                	mov    %edi,(%eax)
    567a:	8b 45 14             	mov    0x14(%ebp),%eax
    567d:	85 c0                	test   %eax,%eax
    567f:	75 a3                	jne    5624 <audio_mixer_get_item_info+0x54>
    5681:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5684:	89 d8                	mov    %ebx,%eax
    5686:	5b                   	pop    %ebx
    5687:	5e                   	pop    %esi
    5688:	5f                   	pop    %edi
    5689:	5d                   	pop    %ebp
    568a:	c3                   	ret    
    568b:	90                   	nop
    568c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5690:	83 ec 0c             	sub    $0xc,%esp
    5693:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    5696:	57                   	push   %edi
    5697:	e8 c4 a1 00 00       	call   f860 <free@plt>
    569c:	83 c4 10             	add    $0x10,%esp
    569f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    56a2:	eb 8e                	jmp    5632 <audio_mixer_get_item_info+0x62>
    56a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    56a8:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    56ad:	eb 83                	jmp    5632 <audio_mixer_get_item_info+0x62>
    56af:	53                   	push   %ebx
    56b0:	6a 00                	push   $0x0
    56b2:	6a ff                	push   $0xffffffff
    56b4:	56                   	push   %esi
    56b5:	e8 26 a0 00 00       	call   f6e0 <async_data_read_start@plt>
    56ba:	83 c4 10             	add    $0x10,%esp
    56bd:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    56c2:	e9 6b ff ff ff       	jmp    5632 <audio_mixer_get_item_info+0x62>
    56c7:	89 f6                	mov    %esi,%esi
    56c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000056d0 <audio_mixer_set_item_level>:
    56d0:	55                   	push   %ebp
    56d1:	89 e5                	mov    %esp,%ebp
    56d3:	83 ec 08             	sub    $0x8,%esp
    56d6:	8b 45 08             	mov    0x8(%ebp),%eax
    56d9:	85 c0                	test   %eax,%eax
    56db:	74 2b                	je     5708 <audio_mixer_set_item_level+0x38>
    56dd:	8b 4d 10             	mov    0x10(%ebp),%ecx
    56e0:	52                   	push   %edx
    56e1:	8b 55 0c             	mov    0xc(%ebp),%edx
    56e4:	6a 00                	push   $0x0
    56e6:	6a 00                	push   $0x0
    56e8:	6a 00                	push   $0x0
    56ea:	6a 00                	push   $0x0
    56ec:	6a 00                	push   $0x0
    56ee:	6a 00                	push   $0x0
    56f0:	51                   	push   %ecx
    56f1:	52                   	push   %edx
    56f2:	6a 02                	push   $0x2
    56f4:	68 03 04 00 00       	push   $0x403
    56f9:	50                   	push   %eax
    56fa:	e8 f1 9d 00 00       	call   f4f0 <async_req_fast@plt>
    56ff:	83 c4 30             	add    $0x30,%esp
    5702:	c9                   	leave  
    5703:	c3                   	ret    
    5704:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5708:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    570d:	c9                   	leave  
    570e:	c3                   	ret    
    570f:	90                   	nop

00005710 <audio_mixer_get_item_level>:
    5710:	55                   	push   %ebp
    5711:	89 e5                	mov    %esp,%ebp
    5713:	53                   	push   %ebx
    5714:	83 ec 14             	sub    $0x14,%esp
    5717:	8b 45 08             	mov    0x8(%ebp),%eax
    571a:	8b 5d 10             	mov    0x10(%ebp),%ebx
    571d:	85 c0                	test   %eax,%eax
    571f:	74 37                	je     5758 <audio_mixer_get_item_level+0x48>
    5721:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    5724:	52                   	push   %edx
    5725:	8d 55 f4             	lea    -0xc(%ebp),%edx
    5728:	6a 00                	push   $0x0
    572a:	6a 00                	push   $0x0
    572c:	6a 00                	push   $0x0
    572e:	6a 00                	push   $0x0
    5730:	52                   	push   %edx
    5731:	6a 00                	push   $0x0
    5733:	6a 00                	push   $0x0
    5735:	51                   	push   %ecx
    5736:	6a 03                	push   $0x3
    5738:	68 03 04 00 00       	push   $0x403
    573d:	50                   	push   %eax
    573e:	e8 ad 9d 00 00       	call   f4f0 <async_req_fast@plt>
    5743:	83 c4 30             	add    $0x30,%esp
    5746:	85 c0                	test   %eax,%eax
    5748:	75 09                	jne    5753 <audio_mixer_get_item_level+0x43>
    574a:	85 db                	test   %ebx,%ebx
    574c:	74 05                	je     5753 <audio_mixer_get_item_level+0x43>
    574e:	8b 55 f4             	mov    -0xc(%ebp),%edx
    5751:	89 13                	mov    %edx,(%ebx)
    5753:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5756:	c9                   	leave  
    5757:	c3                   	ret    
    5758:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    575d:	eb f4                	jmp    5753 <audio_mixer_get_item_level+0x43>
    575f:	90                   	nop

00005760 <remote_audio_pcm_stop_capture>:
    5760:	55                   	push   %ebp
    5761:	89 e5                	mov    %esp,%ebp
    5763:	53                   	push   %ebx
    5764:	50                   	push   %eax
    5765:	8b 45 14             	mov    0x14(%ebp),%eax
    5768:	8b 4d 08             	mov    0x8(%ebp),%ecx
    576b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    576e:	8b 50 08             	mov    0x8(%eax),%edx
    5771:	85 d2                	test   %edx,%edx
    5773:	8b 55 0c             	mov    0xc(%ebp),%edx
    5776:	0f 95 c0             	setne  %al
    5779:	8b 52 2c             	mov    0x2c(%edx),%edx
    577c:	85 d2                	test   %edx,%edx
    577e:	74 20                	je     57a0 <remote_audio_pcm_stop_capture+0x40>
    5780:	83 ec 08             	sub    $0x8,%esp
    5783:	25 ff 00 00 00       	and    $0xff,%eax
    5788:	50                   	push   %eax
    5789:	51                   	push   %ecx
    578a:	ff d2                	call   *%edx
    578c:	89 5d 08             	mov    %ebx,0x8(%ebp)
    578f:	83 c4 10             	add    $0x10,%esp
    5792:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5795:	89 45 0c             	mov    %eax,0xc(%ebp)
    5798:	c9                   	leave  
    5799:	e9 62 9d 00 00       	jmp    f500 <async_answer_0@plt>
    579e:	66 90                	xchg   %ax,%ax
    57a0:	89 5d 08             	mov    %ebx,0x8(%ebp)
    57a3:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    57a8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    57ab:	89 45 0c             	mov    %eax,0xc(%ebp)
    57ae:	c9                   	leave  
    57af:	e9 4c 9d 00 00       	jmp    f500 <async_answer_0@plt>
    57b4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    57ba:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000057c0 <remote_audio_pcm_start_capture>:
    57c0:	55                   	push   %ebp
    57c1:	89 e5                	mov    %esp,%ebp
    57c3:	57                   	push   %edi
    57c4:	56                   	push   %esi
    57c5:	53                   	push   %ebx
    57c6:	83 ec 0c             	sub    $0xc,%esp
    57c9:	8b 55 14             	mov    0x14(%ebp),%edx
    57cc:	8b 7d 0c             	mov    0xc(%ebp),%edi
    57cf:	8b 4d 08             	mov    0x8(%ebp),%ecx
    57d2:	8b 5d 10             	mov    0x10(%ebp),%ebx
    57d5:	8b 42 10             	mov    0x10(%edx),%eax
    57d8:	8b 7f 28             	mov    0x28(%edi),%edi
    57db:	89 c6                	mov    %eax,%esi
    57dd:	25 ff ff 00 00       	and    $0xffff,%eax
    57e2:	c1 ee 10             	shr    $0x10,%esi
    57e5:	85 ff                	test   %edi,%edi
    57e7:	74 27                	je     5810 <remote_audio_pcm_start_capture+0x50>
    57e9:	83 ec 0c             	sub    $0xc,%esp
    57ec:	50                   	push   %eax
    57ed:	8b 42 0c             	mov    0xc(%edx),%eax
    57f0:	50                   	push   %eax
    57f1:	56                   	push   %esi
    57f2:	8b 52 08             	mov    0x8(%edx),%edx
    57f5:	52                   	push   %edx
    57f6:	51                   	push   %ecx
    57f7:	ff d7                	call   *%edi
    57f9:	83 c4 20             	add    $0x20,%esp
    57fc:	89 5d 08             	mov    %ebx,0x8(%ebp)
    57ff:	89 45 0c             	mov    %eax,0xc(%ebp)
    5802:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5805:	5b                   	pop    %ebx
    5806:	5e                   	pop    %esi
    5807:	5f                   	pop    %edi
    5808:	5d                   	pop    %ebp
    5809:	e9 f2 9c 00 00       	jmp    f500 <async_answer_0@plt>
    580e:	66 90                	xchg   %ax,%ax
    5810:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    5815:	eb e5                	jmp    57fc <remote_audio_pcm_start_capture+0x3c>
    5817:	89 f6                	mov    %esi,%esi
    5819:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00005820 <remote_audio_pcm_stop_playback>:
    5820:	55                   	push   %ebp
    5821:	89 e5                	mov    %esp,%ebp
    5823:	53                   	push   %ebx
    5824:	50                   	push   %eax
    5825:	8b 45 14             	mov    0x14(%ebp),%eax
    5828:	8b 4d 08             	mov    0x8(%ebp),%ecx
    582b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    582e:	8b 50 08             	mov    0x8(%eax),%edx
    5831:	85 d2                	test   %edx,%edx
    5833:	8b 55 0c             	mov    0xc(%ebp),%edx
    5836:	0f 95 c0             	setne  %al
    5839:	8b 52 24             	mov    0x24(%edx),%edx
    583c:	85 d2                	test   %edx,%edx
    583e:	74 20                	je     5860 <remote_audio_pcm_stop_playback+0x40>
    5840:	83 ec 08             	sub    $0x8,%esp
    5843:	25 ff 00 00 00       	and    $0xff,%eax
    5848:	50                   	push   %eax
    5849:	51                   	push   %ecx
    584a:	ff d2                	call   *%edx
    584c:	89 5d 08             	mov    %ebx,0x8(%ebp)
    584f:	83 c4 10             	add    $0x10,%esp
    5852:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5855:	89 45 0c             	mov    %eax,0xc(%ebp)
    5858:	c9                   	leave  
    5859:	e9 a2 9c 00 00       	jmp    f500 <async_answer_0@plt>
    585e:	66 90                	xchg   %ax,%ax
    5860:	89 5d 08             	mov    %ebx,0x8(%ebp)
    5863:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    5868:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    586b:	89 45 0c             	mov    %eax,0xc(%ebp)
    586e:	c9                   	leave  
    586f:	e9 8c 9c 00 00       	jmp    f500 <async_answer_0@plt>
    5874:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    587a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00005880 <remote_audio_pcm_start_playback>:
    5880:	55                   	push   %ebp
    5881:	89 e5                	mov    %esp,%ebp
    5883:	57                   	push   %edi
    5884:	56                   	push   %esi
    5885:	53                   	push   %ebx
    5886:	83 ec 0c             	sub    $0xc,%esp
    5889:	8b 4d 14             	mov    0x14(%ebp),%ecx
    588c:	8b 7d 0c             	mov    0xc(%ebp),%edi
    588f:	8b 75 08             	mov    0x8(%ebp),%esi
    5892:	8b 5d 10             	mov    0x10(%ebp),%ebx
    5895:	8b 41 10             	mov    0x10(%ecx),%eax
    5898:	8b 7f 20             	mov    0x20(%edi),%edi
    589b:	89 c2                	mov    %eax,%edx
    589d:	25 ff ff 00 00       	and    $0xffff,%eax
    58a2:	c1 ea 10             	shr    $0x10,%edx
    58a5:	81 e2 ff 00 00 00    	and    $0xff,%edx
    58ab:	85 ff                	test   %edi,%edi
    58ad:	74 29                	je     58d8 <remote_audio_pcm_start_playback+0x58>
    58af:	83 ec 0c             	sub    $0xc,%esp
    58b2:	50                   	push   %eax
    58b3:	8b 41 0c             	mov    0xc(%ecx),%eax
    58b6:	50                   	push   %eax
    58b7:	52                   	push   %edx
    58b8:	8b 51 08             	mov    0x8(%ecx),%edx
    58bb:	52                   	push   %edx
    58bc:	56                   	push   %esi
    58bd:	ff d7                	call   *%edi
    58bf:	83 c4 20             	add    $0x20,%esp
    58c2:	89 5d 08             	mov    %ebx,0x8(%ebp)
    58c5:	89 45 0c             	mov    %eax,0xc(%ebp)
    58c8:	8d 65 f4             	lea    -0xc(%ebp),%esp
    58cb:	5b                   	pop    %ebx
    58cc:	5e                   	pop    %esi
    58cd:	5f                   	pop    %edi
    58ce:	5d                   	pop    %ebp
    58cf:	e9 2c 9c 00 00       	jmp    f500 <async_answer_0@plt>
    58d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    58d8:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    58dd:	eb e3                	jmp    58c2 <remote_audio_pcm_start_playback+0x42>
    58df:	90                   	nop

000058e0 <remote_audio_pcm_release_buffer>:
    58e0:	55                   	push   %ebp
    58e1:	89 e5                	mov    %esp,%ebp
    58e3:	53                   	push   %ebx
    58e4:	50                   	push   %eax
    58e5:	8b 45 0c             	mov    0xc(%ebp),%eax
    58e8:	8b 55 08             	mov    0x8(%ebp),%edx
    58eb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    58ee:	8b 40 14             	mov    0x14(%eax),%eax
    58f1:	85 c0                	test   %eax,%eax
    58f3:	74 1b                	je     5910 <remote_audio_pcm_release_buffer+0x30>
    58f5:	83 ec 0c             	sub    $0xc,%esp
    58f8:	52                   	push   %edx
    58f9:	ff d0                	call   *%eax
    58fb:	89 5d 08             	mov    %ebx,0x8(%ebp)
    58fe:	83 c4 10             	add    $0x10,%esp
    5901:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5904:	89 45 0c             	mov    %eax,0xc(%ebp)
    5907:	c9                   	leave  
    5908:	e9 f3 9b 00 00       	jmp    f500 <async_answer_0@plt>
    590d:	8d 76 00             	lea    0x0(%esi),%esi
    5910:	89 5d 08             	mov    %ebx,0x8(%ebp)
    5913:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    5918:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    591b:	89 45 0c             	mov    %eax,0xc(%ebp)
    591e:	c9                   	leave  
    591f:	e9 dc 9b 00 00       	jmp    f500 <async_answer_0@plt>
    5924:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    592a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00005930 <remote_audio_pcm_events_unregister>:
    5930:	55                   	push   %ebp
    5931:	89 e5                	mov    %esp,%ebp
    5933:	57                   	push   %edi
    5934:	56                   	push   %esi
    5935:	53                   	push   %ebx
    5936:	83 ec 0c             	sub    $0xc,%esp
    5939:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    593c:	8b 75 08             	mov    0x8(%ebp),%esi
    593f:	8b 7d 10             	mov    0x10(%ebp),%edi
    5942:	8b 43 1c             	mov    0x1c(%ebx),%eax
    5945:	85 c0                	test   %eax,%eax
    5947:	74 3f                	je     5988 <remote_audio_pcm_events_unregister+0x58>
    5949:	8b 4b 18             	mov    0x18(%ebx),%ecx
    594c:	85 c9                	test   %ecx,%ecx
    594e:	74 38                	je     5988 <remote_audio_pcm_events_unregister+0x58>
    5950:	83 ec 0c             	sub    $0xc,%esp
    5953:	56                   	push   %esi
    5954:	ff d0                	call   *%eax
    5956:	83 c4 10             	add    $0x10,%esp
    5959:	85 c0                	test   %eax,%eax
    595b:	74 14                	je     5971 <remote_audio_pcm_events_unregister+0x41>
    595d:	83 ec 0c             	sub    $0xc,%esp
    5960:	50                   	push   %eax
    5961:	e8 5a 9a 00 00       	call   f3c0 <async_hangup@plt>
    5966:	58                   	pop    %eax
    5967:	5a                   	pop    %edx
    5968:	6a 00                	push   $0x0
    596a:	56                   	push   %esi
    596b:	ff 53 18             	call   *0x18(%ebx)
    596e:	83 c4 10             	add    $0x10,%esp
    5971:	89 7d 08             	mov    %edi,0x8(%ebp)
    5974:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
    597b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    597e:	5b                   	pop    %ebx
    597f:	5e                   	pop    %esi
    5980:	5f                   	pop    %edi
    5981:	5d                   	pop    %ebp
    5982:	e9 79 9b 00 00       	jmp    f500 <async_answer_0@plt>
    5987:	90                   	nop
    5988:	89 7d 08             	mov    %edi,0x8(%ebp)
    598b:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    5992:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5995:	5b                   	pop    %ebx
    5996:	5e                   	pop    %esi
    5997:	5f                   	pop    %edi
    5998:	5d                   	pop    %ebp
    5999:	e9 62 9b 00 00       	jmp    f500 <async_answer_0@plt>
    599e:	66 90                	xchg   %ax,%ax

000059a0 <remote_audio_pcm_get_buffer_pos>:
    59a0:	55                   	push   %ebp
    59a1:	89 e5                	mov    %esp,%ebp
    59a3:	83 ec 18             	sub    $0x18,%esp
    59a6:	8b 45 0c             	mov    0xc(%ebp),%eax
    59a9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    59b0:	8b 40 0c             	mov    0xc(%eax),%eax
    59b3:	85 c0                	test   %eax,%eax
    59b5:	74 29                	je     59e0 <remote_audio_pcm_get_buffer_pos+0x40>
    59b7:	8b 4d 08             	mov    0x8(%ebp),%ecx
    59ba:	52                   	push   %edx
    59bb:	52                   	push   %edx
    59bc:	8d 55 f4             	lea    -0xc(%ebp),%edx
    59bf:	52                   	push   %edx
    59c0:	51                   	push   %ecx
    59c1:	ff d0                	call   *%eax
    59c3:	8b 55 f4             	mov    -0xc(%ebp),%edx
    59c6:	83 c4 10             	add    $0x10,%esp
    59c9:	51                   	push   %ecx
    59ca:	52                   	push   %edx
    59cb:	50                   	push   %eax
    59cc:	8b 45 10             	mov    0x10(%ebp),%eax
    59cf:	50                   	push   %eax
    59d0:	e8 8b 9d 00 00       	call   f760 <async_answer_1@plt>
    59d5:	83 c4 10             	add    $0x10,%esp
    59d8:	c9                   	leave  
    59d9:	c3                   	ret    
    59da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    59e0:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    59e5:	31 d2                	xor    %edx,%edx
    59e7:	eb e0                	jmp    59c9 <remote_audio_pcm_get_buffer_pos+0x29>
    59e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000059f0 <remote_audio_pcm_query_caps>:
    59f0:	55                   	push   %ebp
    59f1:	89 e5                	mov    %esp,%ebp
    59f3:	53                   	push   %ebx
    59f4:	53                   	push   %ebx
    59f5:	8b 45 0c             	mov    0xc(%ebp),%eax
    59f8:	8b 55 08             	mov    0x8(%ebp),%edx
    59fb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    59fe:	8b 4d 14             	mov    0x14(%ebp),%ecx
    5a01:	8b 40 08             	mov    0x8(%eax),%eax
    5a04:	85 c0                	test   %eax,%eax
    5a06:	74 28                	je     5a30 <remote_audio_pcm_query_caps+0x40>
    5a08:	83 ec 08             	sub    $0x8,%esp
    5a0b:	8b 49 08             	mov    0x8(%ecx),%ecx
    5a0e:	51                   	push   %ecx
    5a0f:	52                   	push   %edx
    5a10:	ff d0                	call   *%eax
    5a12:	89 5d 08             	mov    %ebx,0x8(%ebp)
    5a15:	83 c4 10             	add    $0x10,%esp
    5a18:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5a1b:	89 45 10             	mov    %eax,0x10(%ebp)
    5a1e:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
    5a25:	c9                   	leave  
    5a26:	e9 35 9d 00 00       	jmp    f760 <async_answer_1@plt>
    5a2b:	90                   	nop
    5a2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5a30:	89 5d 08             	mov    %ebx,0x8(%ebp)
    5a33:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5a36:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    5a3d:	c9                   	leave  
    5a3e:	e9 bd 9a 00 00       	jmp    f500 <async_answer_0@plt>
    5a43:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5a49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00005a50 <remote_audio_pcm_get_buffer>:
    5a50:	55                   	push   %ebp
    5a51:	89 e5                	mov    %esp,%ebp
    5a53:	56                   	push   %esi
    5a54:	53                   	push   %ebx
    5a55:	83 ec 10             	sub    $0x10,%esp
    5a58:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    5a5b:	8b 43 10             	mov    0x10(%ebx),%eax
    5a5e:	85 c0                	test   %eax,%eax
    5a60:	0f 84 d2 00 00 00    	je     5b38 <remote_audio_pcm_get_buffer+0xe8>
    5a66:	8b 53 14             	mov    0x14(%ebx),%edx
    5a69:	85 d2                	test   %edx,%edx
    5a6b:	0f 84 c7 00 00 00    	je     5b38 <remote_audio_pcm_get_buffer+0xe8>
    5a71:	8b 55 14             	mov    0x14(%ebp),%edx
    5a74:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
    5a7b:	8b 52 08             	mov    0x8(%edx),%edx
    5a7e:	56                   	push   %esi
    5a7f:	89 55 ec             	mov    %edx,-0x14(%ebp)
    5a82:	8d 55 ec             	lea    -0x14(%ebp),%edx
    5a85:	52                   	push   %edx
    5a86:	8d 55 e8             	lea    -0x18(%ebp),%edx
    5a89:	52                   	push   %edx
    5a8a:	8b 55 08             	mov    0x8(%ebp),%edx
    5a8d:	52                   	push   %edx
    5a8e:	ff d0                	call   *%eax
    5a90:	83 c4 0c             	add    $0xc,%esp
    5a93:	8b 4d ec             	mov    -0x14(%ebp),%ecx
    5a96:	89 c6                	mov    %eax,%esi
    5a98:	51                   	push   %ecx
    5a99:	50                   	push   %eax
    5a9a:	8b 45 10             	mov    0x10(%ebp),%eax
    5a9d:	50                   	push   %eax
    5a9e:	e8 bd 9c 00 00       	call   f760 <async_answer_1@plt>
    5aa3:	83 c4 10             	add    $0x10,%esp
    5aa6:	85 f6                	test   %esi,%esi
    5aa8:	74 0e                	je     5ab8 <remote_audio_pcm_get_buffer+0x68>
    5aaa:	8d 65 f8             	lea    -0x8(%ebp),%esp
    5aad:	5b                   	pop    %ebx
    5aae:	5e                   	pop    %esi
    5aaf:	5d                   	pop    %ebp
    5ab0:	c3                   	ret    
    5ab1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5ab8:	8b 4d ec             	mov    -0x14(%ebp),%ecx
    5abb:	85 c9                	test   %ecx,%ecx
    5abd:	74 eb                	je     5aaa <remote_audio_pcm_get_buffer+0x5a>
    5abf:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
    5ac6:	56                   	push   %esi
    5ac7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    5ace:	56                   	push   %esi
    5acf:	68 d4 d9 00 00       	push   $0xd9d4
    5ad4:	6a 05                	push   $0x5
    5ad6:	e8 25 f7 ff ff       	call   5200 <ddf_msg>
    5adb:	58                   	pop    %eax
    5adc:	8d 45 f0             	lea    -0x10(%ebp),%eax
    5adf:	5a                   	pop    %edx
    5ae0:	50                   	push   %eax
    5ae1:	8d 45 f4             	lea    -0xc(%ebp),%eax
    5ae4:	50                   	push   %eax
    5ae5:	e8 06 9c 00 00       	call   f6f0 <async_share_in_receive@plt>
    5aea:	83 c4 10             	add    $0x10,%esp
    5aed:	84 c0                	test   %al,%al
    5aef:	74 5f                	je     5b50 <remote_audio_pcm_get_buffer+0x100>
    5af1:	50                   	push   %eax
    5af2:	50                   	push   %eax
    5af3:	68 98 db 00 00       	push   $0xdb98
    5af8:	6a 05                	push   $0x5
    5afa:	e8 01 f7 ff ff       	call   5200 <ddf_msg>
    5aff:	8b 45 ec             	mov    -0x14(%ebp),%eax
    5b02:	83 c4 10             	add    $0x10,%esp
    5b05:	39 45 f0             	cmp    %eax,-0x10(%ebp)
    5b08:	74 76                	je     5b80 <remote_audio_pcm_get_buffer+0x130>
    5b0a:	50                   	push   %eax
    5b0b:	50                   	push   %eax
    5b0c:	68 b8 db 00 00       	push   $0xdbb8
    5b11:	6a 04                	push   $0x4
    5b13:	e8 e8 f6 ff ff       	call   5200 <ddf_msg>
    5b18:	8b 55 08             	mov    0x8(%ebp),%edx
    5b1b:	58                   	pop    %eax
    5b1c:	52                   	push   %edx
    5b1d:	ff 53 14             	call   *0x14(%ebx)
    5b20:	8b 75 f4             	mov    -0xc(%ebp),%esi
    5b23:	59                   	pop    %ecx
    5b24:	5b                   	pop    %ebx
    5b25:	6a fd                	push   $0xfffffffd
    5b27:	56                   	push   %esi
    5b28:	e8 d3 99 00 00       	call   f500 <async_answer_0@plt>
    5b2d:	83 c4 10             	add    $0x10,%esp
    5b30:	e9 75 ff ff ff       	jmp    5aaa <remote_audio_pcm_get_buffer+0x5a>
    5b35:	8d 76 00             	lea    0x0(%esi),%esi
    5b38:	50                   	push   %eax
    5b39:	50                   	push   %eax
    5b3a:	8b 45 10             	mov    0x10(%ebp),%eax
    5b3d:	6a f5                	push   $0xfffffff5
    5b3f:	50                   	push   %eax
    5b40:	e8 bb 99 00 00       	call   f500 <async_answer_0@plt>
    5b45:	83 c4 10             	add    $0x10,%esp
    5b48:	8d 65 f8             	lea    -0x8(%ebp),%esp
    5b4b:	5b                   	pop    %ebx
    5b4c:	5e                   	pop    %esi
    5b4d:	5d                   	pop    %ebp
    5b4e:	c3                   	ret    
    5b4f:	90                   	nop
    5b50:	50                   	push   %eax
    5b51:	50                   	push   %eax
    5b52:	68 ed d9 00 00       	push   $0xd9ed
    5b57:	6a 04                	push   $0x4
    5b59:	e8 a2 f6 ff ff       	call   5200 <ddf_msg>
    5b5e:	58                   	pop    %eax
    5b5f:	8b 45 08             	mov    0x8(%ebp),%eax
    5b62:	50                   	push   %eax
    5b63:	ff 53 14             	call   *0x14(%ebx)
    5b66:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    5b69:	58                   	pop    %eax
    5b6a:	5a                   	pop    %edx
    5b6b:	6a f8                	push   $0xfffffff8
    5b6d:	51                   	push   %ecx
    5b6e:	e8 8d 99 00 00       	call   f500 <async_answer_0@plt>
    5b73:	83 c4 10             	add    $0x10,%esp
    5b76:	e9 2f ff ff ff       	jmp    5aaa <remote_audio_pcm_get_buffer+0x5a>
    5b7b:	90                   	nop
    5b7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5b80:	50                   	push   %eax
    5b81:	50                   	push   %eax
    5b82:	68 09 da 00 00       	push   $0xda09
    5b87:	6a 05                	push   $0x5
    5b89:	e8 72 f6 ff ff       	call   5200 <ddf_msg>
    5b8e:	83 c4 0c             	add    $0xc,%esp
    5b91:	8b 45 e8             	mov    -0x18(%ebp),%eax
    5b94:	6a 03                	push   $0x3
    5b96:	50                   	push   %eax
    5b97:	8b 45 f4             	mov    -0xc(%ebp),%eax
    5b9a:	50                   	push   %eax
    5b9b:	e8 00 9c 00 00       	call   f7a0 <async_share_in_finalize@plt>
    5ba0:	83 c4 10             	add    $0x10,%esp
    5ba3:	85 c0                	test   %eax,%eax
    5ba5:	74 1e                	je     5bc5 <remote_audio_pcm_get_buffer+0x175>
    5ba7:	51                   	push   %ecx
    5ba8:	51                   	push   %ecx
    5ba9:	68 21 da 00 00       	push   $0xda21
    5bae:	6a 04                	push   $0x4
    5bb0:	e8 4b f6 ff ff       	call   5200 <ddf_msg>
    5bb5:	8b 45 08             	mov    0x8(%ebp),%eax
    5bb8:	5e                   	pop    %esi
    5bb9:	50                   	push   %eax
    5bba:	ff 53 14             	call   *0x14(%ebx)
    5bbd:	83 c4 10             	add    $0x10,%esp
    5bc0:	e9 e5 fe ff ff       	jmp    5aaa <remote_audio_pcm_get_buffer+0x5a>
    5bc5:	8b 55 f0             	mov    -0x10(%ebp),%edx
    5bc8:	50                   	push   %eax
    5bc9:	52                   	push   %edx
    5bca:	68 39 da 00 00       	push   $0xda39
    5bcf:	6a 05                	push   $0x5
    5bd1:	e8 2a f6 ff ff       	call   5200 <ddf_msg>
    5bd6:	83 c4 10             	add    $0x10,%esp
    5bd9:	e9 cc fe ff ff       	jmp    5aaa <remote_audio_pcm_get_buffer+0x5a>
    5bde:	66 90                	xchg   %ax,%ax

00005be0 <remote_audio_pcm_test_format>:
    5be0:	55                   	push   %ebp
    5be1:	89 e5                	mov    %esp,%ebp
    5be3:	53                   	push   %ebx
    5be4:	83 ec 14             	sub    $0x14,%esp
    5be7:	8b 45 14             	mov    0x14(%ebp),%eax
    5bea:	8b 55 0c             	mov    0xc(%ebp),%edx
    5bed:	8b 48 08             	mov    0x8(%eax),%ecx
    5bf0:	8b 58 0c             	mov    0xc(%eax),%ebx
    5bf3:	8b 52 04             	mov    0x4(%edx),%edx
    5bf6:	8b 40 10             	mov    0x10(%eax),%eax
    5bf9:	89 4d ec             	mov    %ecx,-0x14(%ebp)
    5bfc:	89 5d f0             	mov    %ebx,-0x10(%ebp)
    5bff:	89 45 f4             	mov    %eax,-0xc(%ebp)
    5c02:	85 d2                	test   %edx,%edx
    5c04:	74 3a                	je     5c40 <remote_audio_pcm_test_format+0x60>
    5c06:	8d 45 f4             	lea    -0xc(%ebp),%eax
    5c09:	8b 4d 08             	mov    0x8(%ebp),%ecx
    5c0c:	50                   	push   %eax
    5c0d:	8d 45 f0             	lea    -0x10(%ebp),%eax
    5c10:	50                   	push   %eax
    5c11:	8d 45 ec             	lea    -0x14(%ebp),%eax
    5c14:	50                   	push   %eax
    5c15:	51                   	push   %ecx
    5c16:	ff d2                	call   *%edx
    5c18:	8b 55 f4             	mov    -0xc(%ebp),%edx
    5c1b:	8b 5d f0             	mov    -0x10(%ebp),%ebx
    5c1e:	8b 4d ec             	mov    -0x14(%ebp),%ecx
    5c21:	83 c4 10             	add    $0x10,%esp
    5c24:	83 ec 0c             	sub    $0xc,%esp
    5c27:	52                   	push   %edx
    5c28:	53                   	push   %ebx
    5c29:	51                   	push   %ecx
    5c2a:	50                   	push   %eax
    5c2b:	8b 45 10             	mov    0x10(%ebp),%eax
    5c2e:	50                   	push   %eax
    5c2f:	e8 7c 9b 00 00       	call   f7b0 <async_answer_3@plt>
    5c34:	83 c4 20             	add    $0x20,%esp
    5c37:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    5c3a:	c9                   	leave  
    5c3b:	c3                   	ret    
    5c3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5c40:	89 c2                	mov    %eax,%edx
    5c42:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    5c47:	eb db                	jmp    5c24 <remote_audio_pcm_test_format+0x44>
    5c49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00005c50 <remote_audio_pcm_events_register>:
    5c50:	55                   	push   %ebp
    5c51:	89 e5                	mov    %esp,%ebp
    5c53:	57                   	push   %edi
    5c54:	56                   	push   %esi
    5c55:	53                   	push   %ebx
    5c56:	83 ec 3c             	sub    $0x3c,%esp
    5c59:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    5c5c:	8b 7b 1c             	mov    0x1c(%ebx),%edi
    5c5f:	85 ff                	test   %edi,%edi
    5c61:	0f 84 91 00 00 00    	je     5cf8 <remote_audio_pcm_events_register+0xa8>
    5c67:	8b 73 18             	mov    0x18(%ebx),%esi
    5c6a:	85 f6                	test   %esi,%esi
    5c6c:	0f 84 86 00 00 00    	je     5cf8 <remote_audio_pcm_events_register+0xa8>
    5c72:	8b 75 10             	mov    0x10(%ebp),%esi
    5c75:	51                   	push   %ecx
    5c76:	51                   	push   %ecx
    5c77:	6a 00                	push   $0x0
    5c79:	56                   	push   %esi
    5c7a:	8d 75 c4             	lea    -0x3c(%ebp),%esi
    5c7d:	e8 7e 98 00 00       	call   f500 <async_answer_0@plt>
    5c82:	5f                   	pop    %edi
    5c83:	58                   	pop    %eax
    5c84:	6a 00                	push   $0x0
    5c86:	56                   	push   %esi
    5c87:	e8 a4 9a 00 00       	call   f730 <async_get_call_timeout@plt>
    5c8c:	89 c7                	mov    %eax,%edi
    5c8e:	58                   	pop    %eax
    5c8f:	5a                   	pop    %edx
    5c90:	56                   	push   %esi
    5c91:	6a 00                	push   $0x0
    5c93:	e8 68 99 00 00       	call   f600 <async_callback_receive_start@plt>
    5c98:	83 c4 10             	add    $0x10,%esp
    5c9b:	89 c6                	mov    %eax,%esi
    5c9d:	85 c0                	test   %eax,%eax
    5c9f:	74 6f                	je     5d10 <remote_audio_pcm_events_register+0xc0>
    5ca1:	50                   	push   %eax
    5ca2:	50                   	push   %eax
    5ca3:	8b 45 08             	mov    0x8(%ebp),%eax
    5ca6:	56                   	push   %esi
    5ca7:	50                   	push   %eax
    5ca8:	ff 53 18             	call   *0x18(%ebx)
    5cab:	83 c4 10             	add    $0x10,%esp
    5cae:	89 c3                	mov    %eax,%ebx
    5cb0:	85 c0                	test   %eax,%eax
    5cb2:	74 2c                	je     5ce0 <remote_audio_pcm_events_register+0x90>
    5cb4:	52                   	push   %edx
    5cb5:	52                   	push   %edx
    5cb6:	68 56 da 00 00       	push   $0xda56
    5cbb:	6a 04                	push   $0x4
    5cbd:	e8 3e f5 ff ff       	call   5200 <ddf_msg>
    5cc2:	89 34 24             	mov    %esi,(%esp)
    5cc5:	e8 f6 96 00 00       	call   f3c0 <async_hangup@plt>
    5cca:	59                   	pop    %ecx
    5ccb:	5e                   	pop    %esi
    5ccc:	53                   	push   %ebx
    5ccd:	57                   	push   %edi
    5cce:	e8 2d 98 00 00       	call   f500 <async_answer_0@plt>
    5cd3:	83 c4 10             	add    $0x10,%esp
    5cd6:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5cd9:	5b                   	pop    %ebx
    5cda:	5e                   	pop    %esi
    5cdb:	5f                   	pop    %edi
    5cdc:	5d                   	pop    %ebp
    5cdd:	c3                   	ret    
    5cde:	66 90                	xchg   %ax,%ax
    5ce0:	50                   	push   %eax
    5ce1:	50                   	push   %eax
    5ce2:	6a 00                	push   $0x0
    5ce4:	57                   	push   %edi
    5ce5:	e8 16 98 00 00       	call   f500 <async_answer_0@plt>
    5cea:	83 c4 10             	add    $0x10,%esp
    5ced:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5cf0:	5b                   	pop    %ebx
    5cf1:	5e                   	pop    %esi
    5cf2:	5f                   	pop    %edi
    5cf3:	5d                   	pop    %ebp
    5cf4:	c3                   	ret    
    5cf5:	8d 76 00             	lea    0x0(%esi),%esi
    5cf8:	8b 5d 10             	mov    0x10(%ebp),%ebx
    5cfb:	51                   	push   %ecx
    5cfc:	51                   	push   %ecx
    5cfd:	6a f5                	push   $0xfffffff5
    5cff:	53                   	push   %ebx
    5d00:	e8 fb 97 00 00       	call   f500 <async_answer_0@plt>
    5d05:	83 c4 10             	add    $0x10,%esp
    5d08:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5d0b:	5b                   	pop    %ebx
    5d0c:	5e                   	pop    %esi
    5d0d:	5f                   	pop    %edi
    5d0e:	5d                   	pop    %ebp
    5d0f:	c3                   	ret    
    5d10:	50                   	push   %eax
    5d11:	50                   	push   %eax
    5d12:	68 e0 db 00 00       	push   $0xdbe0
    5d17:	6a 04                	push   $0x4
    5d19:	e8 e2 f4 ff ff       	call   5200 <ddf_msg>
    5d1e:	58                   	pop    %eax
    5d1f:	5a                   	pop    %edx
    5d20:	68 06 d5 ff ff       	push   $0xffffd506
    5d25:	57                   	push   %edi
    5d26:	e8 d5 97 00 00       	call   f500 <async_answer_0@plt>
    5d2b:	83 c4 10             	add    $0x10,%esp
    5d2e:	eb a6                	jmp    5cd6 <remote_audio_pcm_events_register+0x86>

00005d30 <remote_audio_pcm_get_info_str>:
    5d30:	55                   	push   %ebp
    5d31:	89 e5                	mov    %esp,%ebp
    5d33:	56                   	push   %esi
    5d34:	53                   	push   %ebx
    5d35:	83 ec 10             	sub    $0x10,%esp
    5d38:	8b 45 0c             	mov    0xc(%ebp),%eax
    5d3b:	8b 00                	mov    (%eax),%eax
    5d3d:	85 c0                	test   %eax,%eax
    5d3f:	0f 84 ab 00 00 00    	je     5df0 <remote_audio_pcm_get_info_str+0xc0>
    5d45:	8b 4d 08             	mov    0x8(%ebp),%ecx
    5d48:	52                   	push   %edx
    5d49:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    5d50:	52                   	push   %edx
    5d51:	8d 55 ec             	lea    -0x14(%ebp),%edx
    5d54:	52                   	push   %edx
    5d55:	51                   	push   %ecx
    5d56:	ff d0                	call   *%eax
    5d58:	83 c4 10             	add    $0x10,%esp
    5d5b:	89 c6                	mov    %eax,%esi
    5d5d:	8b 45 ec             	mov    -0x14(%ebp),%eax
    5d60:	85 c0                	test   %eax,%eax
    5d62:	74 5c                	je     5dc0 <remote_audio_pcm_get_info_str+0x90>
    5d64:	83 ec 0c             	sub    $0xc,%esp
    5d67:	50                   	push   %eax
    5d68:	e8 d3 99 00 00       	call   f740 <str_size@plt>
    5d6d:	83 c4 0c             	add    $0xc,%esp
    5d70:	8d 58 01             	lea    0x1(%eax),%ebx
    5d73:	8b 45 10             	mov    0x10(%ebp),%eax
    5d76:	53                   	push   %ebx
    5d77:	56                   	push   %esi
    5d78:	50                   	push   %eax
    5d79:	e8 e2 99 00 00       	call   f760 <async_answer_1@plt>
    5d7e:	83 c4 10             	add    $0x10,%esp
    5d81:	85 f6                	test   %esi,%esi
    5d83:	75 2f                	jne    5db4 <remote_audio_pcm_get_info_str+0x84>
    5d85:	85 db                	test   %ebx,%ebx
    5d87:	74 2b                	je     5db4 <remote_audio_pcm_get_info_str+0x84>
    5d89:	50                   	push   %eax
    5d8a:	50                   	push   %eax
    5d8b:	8d 45 f0             	lea    -0x10(%ebp),%eax
    5d8e:	50                   	push   %eax
    5d8f:	8d 45 f4             	lea    -0xc(%ebp),%eax
    5d92:	50                   	push   %eax
    5d93:	e8 38 99 00 00       	call   f6d0 <async_data_read_receive@plt>
    5d98:	83 c4 10             	add    $0x10,%esp
    5d9b:	84 c0                	test   %al,%al
    5d9d:	74 69                	je     5e08 <remote_audio_pcm_get_info_str+0xd8>
    5d9f:	3b 5d f0             	cmp    -0x10(%ebp),%ebx
    5da2:	74 34                	je     5dd8 <remote_audio_pcm_get_info_str+0xa8>
    5da4:	50                   	push   %eax
    5da5:	50                   	push   %eax
    5da6:	8b 45 f4             	mov    -0xc(%ebp),%eax
    5da9:	6a fd                	push   $0xfffffffd
    5dab:	50                   	push   %eax
    5dac:	e8 4f 97 00 00       	call   f500 <async_answer_0@plt>
    5db1:	83 c4 10             	add    $0x10,%esp
    5db4:	8d 65 f8             	lea    -0x8(%ebp),%esp
    5db7:	5b                   	pop    %ebx
    5db8:	5e                   	pop    %esi
    5db9:	5d                   	pop    %ebp
    5dba:	c3                   	ret    
    5dbb:	90                   	nop
    5dbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5dc0:	8b 55 10             	mov    0x10(%ebp),%edx
    5dc3:	50                   	push   %eax
    5dc4:	6a 00                	push   $0x0
    5dc6:	56                   	push   %esi
    5dc7:	52                   	push   %edx
    5dc8:	e8 93 99 00 00       	call   f760 <async_answer_1@plt>
    5dcd:	83 c4 10             	add    $0x10,%esp
    5dd0:	8d 65 f8             	lea    -0x8(%ebp),%esp
    5dd3:	5b                   	pop    %ebx
    5dd4:	5e                   	pop    %esi
    5dd5:	5d                   	pop    %ebp
    5dd6:	c3                   	ret    
    5dd7:	90                   	nop
    5dd8:	8b 75 f4             	mov    -0xc(%ebp),%esi
    5ddb:	51                   	push   %ecx
    5ddc:	53                   	push   %ebx
    5ddd:	8b 5d ec             	mov    -0x14(%ebp),%ebx
    5de0:	53                   	push   %ebx
    5de1:	56                   	push   %esi
    5de2:	e8 79 96 00 00       	call   f460 <async_data_read_finalize@plt>
    5de7:	83 c4 10             	add    $0x10,%esp
    5dea:	eb c8                	jmp    5db4 <remote_audio_pcm_get_info_str+0x84>
    5dec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5df0:	8b 75 10             	mov    0x10(%ebp),%esi
    5df3:	53                   	push   %ebx
    5df4:	53                   	push   %ebx
    5df5:	6a f5                	push   $0xfffffff5
    5df7:	56                   	push   %esi
    5df8:	e8 03 97 00 00       	call   f500 <async_answer_0@plt>
    5dfd:	83 c4 10             	add    $0x10,%esp
    5e00:	8d 65 f8             	lea    -0x8(%ebp),%esp
    5e03:	5b                   	pop    %ebx
    5e04:	5e                   	pop    %esi
    5e05:	5d                   	pop    %ebp
    5e06:	c3                   	ret    
    5e07:	90                   	nop
    5e08:	50                   	push   %eax
    5e09:	50                   	push   %eax
    5e0a:	8b 45 f4             	mov    -0xc(%ebp),%eax
    5e0d:	6a f8                	push   $0xfffffff8
    5e0f:	50                   	push   %eax
    5e10:	e8 eb 96 00 00       	call   f500 <async_answer_0@plt>
    5e15:	83 c4 10             	add    $0x10,%esp
    5e18:	eb 9a                	jmp    5db4 <remote_audio_pcm_get_info_str+0x84>
    5e1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00005e20 <audio_pcm_cap_str>:
    5e20:	55                   	push   %ebp
    5e21:	b8 74 da 00 00       	mov    $0xda74,%eax
    5e26:	89 e5                	mov    %esp,%ebp
    5e28:	8b 55 08             	mov    0x8(%ebp),%edx
    5e2b:	83 fa 06             	cmp    $0x6,%edx
    5e2e:	77 07                	ja     5e37 <audio_pcm_cap_str+0x17>
    5e30:	8b 04 95 38 ec 00 00 	mov    0xec38(,%edx,4),%eax
    5e37:	5d                   	pop    %ebp
    5e38:	c3                   	ret    
    5e39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00005e40 <audio_pcm_event_str>:
    5e40:	55                   	push   %ebp
    5e41:	b8 80 da 00 00       	mov    $0xda80,%eax
    5e46:	89 e5                	mov    %esp,%ebp
    5e48:	8b 55 08             	mov    0x8(%ebp),%edx
    5e4b:	81 fa 05 04 00 00    	cmp    $0x405,%edx
    5e51:	77 07                	ja     5e5a <audio_pcm_event_str+0x1a>
    5e53:	8b 04 95 20 dc 00 00 	mov    0xdc20(,%edx,4),%eax
    5e5a:	5d                   	pop    %ebp
    5e5b:	c3                   	ret    
    5e5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00005e60 <audio_pcm_open_default>:
    5e60:	55                   	push   %ebp
    5e61:	89 e5                	mov    %esp,%ebp
    5e63:	83 ec 28             	sub    $0x28,%esp
    5e66:	80 3d b4 19 01 00 00 	cmpb   $0x0,0x119b4
    5e6d:	75 20                	jne    5e8f <audio_pcm_open_default+0x2f>
    5e6f:	50                   	push   %eax
    5e70:	6a 01                	push   $0x1
    5e72:	68 b0 19 01 00       	push   $0x119b0
    5e77:	68 8e da 00 00       	push   $0xda8e
    5e7c:	e8 df 94 00 00       	call   f360 <loc_category_get_id@plt>
    5e81:	83 c4 10             	add    $0x10,%esp
    5e84:	85 c0                	test   %eax,%eax
    5e86:	75 68                	jne    5ef0 <audio_pcm_open_default+0x90>
    5e88:	c6 05 b4 19 01 00 01 	movb   $0x1,0x119b4
    5e8f:	8d 45 f4             	lea    -0xc(%ebp),%eax
    5e92:	51                   	push   %ecx
    5e93:	50                   	push   %eax
    5e94:	8d 45 f0             	lea    -0x10(%ebp),%eax
    5e97:	50                   	push   %eax
    5e98:	a1 b0 19 01 00       	mov    0x119b0,%eax
    5e9d:	50                   	push   %eax
    5e9e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
    5ea5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    5eac:	e8 6f 98 00 00       	call   f720 <loc_category_get_svcs@plt>
    5eb1:	83 c4 10             	add    $0x10,%esp
    5eb4:	85 c0                	test   %eax,%eax
    5eb6:	75 38                	jne    5ef0 <audio_pcm_open_default+0x90>
    5eb8:	8b 55 f4             	mov    -0xc(%ebp),%edx
    5ebb:	85 d2                	test   %edx,%edx
    5ebd:	75 19                	jne    5ed8 <audio_pcm_open_default+0x78>
    5ebf:	83 ec 0c             	sub    $0xc,%esp
    5ec2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    5ec5:	8b 45 f0             	mov    -0x10(%ebp),%eax
    5ec8:	50                   	push   %eax
    5ec9:	e8 92 99 00 00       	call   f860 <free@plt>
    5ece:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    5ed1:	83 c4 10             	add    $0x10,%esp
    5ed4:	c9                   	leave  
    5ed5:	c3                   	ret    
    5ed6:	66 90                	xchg   %ax,%ax
    5ed8:	8b 45 f0             	mov    -0x10(%ebp),%eax
    5edb:	52                   	push   %edx
    5edc:	6a 01                	push   $0x1
    5ede:	68 41 26 9b 41       	push   $0x419b2641
    5ee3:	8b 08                	mov    (%eax),%ecx
    5ee5:	51                   	push   %ecx
    5ee6:	e8 a5 94 00 00       	call   f390 <loc_service_connect@plt>
    5eeb:	83 c4 10             	add    $0x10,%esp
    5eee:	eb cf                	jmp    5ebf <audio_pcm_open_default+0x5f>
    5ef0:	31 c0                	xor    %eax,%eax
    5ef2:	c9                   	leave  
    5ef3:	c3                   	ret    
    5ef4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5efa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00005f00 <audio_pcm_open>:
    5f00:	55                   	push   %ebp
    5f01:	89 e5                	mov    %esp,%ebp
    5f03:	83 ec 1c             	sub    $0x1c,%esp
    5f06:	8d 45 f4             	lea    -0xc(%ebp),%eax
    5f09:	8b 4d 08             	mov    0x8(%ebp),%ecx
    5f0c:	6a 00                	push   $0x0
    5f0e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    5f15:	50                   	push   %eax
    5f16:	51                   	push   %ecx
    5f17:	e8 74 98 00 00       	call   f790 <devman_fun_get_handle@plt>
    5f1c:	83 c4 10             	add    $0x10,%esp
    5f1f:	85 c0                	test   %eax,%eax
    5f21:	75 15                	jne    5f38 <audio_pcm_open+0x38>
    5f23:	8b 55 f4             	mov    -0xc(%ebp),%edx
    5f26:	50                   	push   %eax
    5f27:	50                   	push   %eax
    5f28:	6a 01                	push   $0x1
    5f2a:	52                   	push   %edx
    5f2b:	e8 40 94 00 00       	call   f370 <devman_device_connect@plt>
    5f30:	83 c4 10             	add    $0x10,%esp
    5f33:	c9                   	leave  
    5f34:	c3                   	ret    
    5f35:	8d 76 00             	lea    0x0(%esi),%esi
    5f38:	31 c0                	xor    %eax,%eax
    5f3a:	c9                   	leave  
    5f3b:	c3                   	ret    
    5f3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00005f40 <audio_pcm_open_service>:
    5f40:	55                   	push   %ebp
    5f41:	89 e5                	mov    %esp,%ebp
    5f43:	83 ec 0c             	sub    $0xc,%esp
    5f46:	8b 45 08             	mov    0x8(%ebp),%eax
    5f49:	6a 01                	push   $0x1
    5f4b:	68 41 26 9b 41       	push   $0x419b2641
    5f50:	50                   	push   %eax
    5f51:	e8 3a 94 00 00       	call   f390 <loc_service_connect@plt>
    5f56:	c9                   	leave  
    5f57:	c3                   	ret    
    5f58:	90                   	nop
    5f59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00005f60 <audio_pcm_close>:
    5f60:	55                   	push   %ebp
    5f61:	89 e5                	mov    %esp,%ebp
    5f63:	8b 45 08             	mov    0x8(%ebp),%eax
    5f66:	85 c0                	test   %eax,%eax
    5f68:	74 06                	je     5f70 <audio_pcm_close+0x10>
    5f6a:	5d                   	pop    %ebp
    5f6b:	e9 50 94 00 00       	jmp    f3c0 <async_hangup@plt>
    5f70:	5d                   	pop    %ebp
    5f71:	c3                   	ret    
    5f72:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5f79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00005f80 <audio_pcm_get_info_str>:
    5f80:	55                   	push   %ebp
    5f81:	89 e5                	mov    %esp,%ebp
    5f83:	57                   	push   %edi
    5f84:	56                   	push   %esi
    5f85:	53                   	push   %ebx
    5f86:	83 ec 2c             	sub    $0x2c,%esp
    5f89:	8b 45 0c             	mov    0xc(%ebp),%eax
    5f8c:	85 c0                	test   %eax,%eax
    5f8e:	0f 84 ac 00 00 00    	je     6040 <audio_pcm_get_info_str+0xc0>
    5f94:	83 ec 0c             	sub    $0xc,%esp
    5f97:	8b 45 08             	mov    0x8(%ebp),%eax
    5f9a:	50                   	push   %eax
    5f9b:	e8 d0 97 00 00       	call   f770 <async_exchange_begin@plt>
    5fa0:	83 c4 0c             	add    $0xc,%esp
    5fa3:	89 c6                	mov    %eax,%esi
    5fa5:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    5fa8:	6a 00                	push   $0x0
    5faa:	6a 00                	push   $0x0
    5fac:	6a 00                	push   $0x0
    5fae:	6a 00                	push   $0x0
    5fb0:	50                   	push   %eax
    5fb1:	6a 00                	push   $0x0
    5fb3:	6a 00                	push   $0x0
    5fb5:	6a 00                	push   $0x0
    5fb7:	6a 00                	push   $0x0
    5fb9:	68 04 04 00 00       	push   $0x404
    5fbe:	56                   	push   %esi
    5fbf:	e8 2c 95 00 00       	call   f4f0 <async_req_fast@plt>
    5fc4:	83 c4 30             	add    $0x30,%esp
    5fc7:	89 c3                	mov    %eax,%ebx
    5fc9:	85 c0                	test   %eax,%eax
    5fcb:	75 2e                	jne    5ffb <audio_pcm_get_info_str+0x7b>
    5fcd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    5fd0:	57                   	push   %edi
    5fd1:	57                   	push   %edi
    5fd2:	50                   	push   %eax
    5fd3:	6a 01                	push   $0x1
    5fd5:	e8 a6 95 00 00       	call   f580 <calloc@plt>
    5fda:	83 c4 10             	add    $0x10,%esp
    5fdd:	89 c7                	mov    %eax,%edi
    5fdf:	85 c0                	test   %eax,%eax
    5fe1:	74 64                	je     6047 <audio_pcm_get_info_str+0xc7>
    5fe3:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    5fe6:	50                   	push   %eax
    5fe7:	52                   	push   %edx
    5fe8:	57                   	push   %edi
    5fe9:	56                   	push   %esi
    5fea:	e8 f1 96 00 00       	call   f6e0 <async_data_read_start@plt>
    5fef:	83 c4 10             	add    $0x10,%esp
    5ff2:	85 c0                	test   %eax,%eax
    5ff4:	75 22                	jne    6018 <audio_pcm_get_info_str+0x98>
    5ff6:	8b 45 0c             	mov    0xc(%ebp),%eax
    5ff9:	89 38                	mov    %edi,(%eax)
    5ffb:	83 ec 0c             	sub    $0xc,%esp
    5ffe:	56                   	push   %esi
    5fff:	e8 4c 95 00 00       	call   f550 <async_exchange_end@plt>
    6004:	83 c4 10             	add    $0x10,%esp
    6007:	89 d8                	mov    %ebx,%eax
    6009:	8d 65 f4             	lea    -0xc(%ebp),%esp
    600c:	5b                   	pop    %ebx
    600d:	5e                   	pop    %esi
    600e:	5f                   	pop    %edi
    600f:	5d                   	pop    %ebp
    6010:	c3                   	ret    
    6011:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6018:	83 ec 0c             	sub    $0xc,%esp
    601b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    601e:	57                   	push   %edi
    601f:	e8 3c 98 00 00       	call   f860 <free@plt>
    6024:	89 34 24             	mov    %esi,(%esp)
    6027:	e8 24 95 00 00       	call   f550 <async_exchange_end@plt>
    602c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    602f:	83 c4 10             	add    $0x10,%esp
    6032:	8d 65 f4             	lea    -0xc(%ebp),%esp
    6035:	5b                   	pop    %ebx
    6036:	5e                   	pop    %esi
    6037:	5f                   	pop    %edi
    6038:	5d                   	pop    %ebp
    6039:	c3                   	ret    
    603a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6040:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    6045:	eb c2                	jmp    6009 <audio_pcm_get_info_str+0x89>
    6047:	51                   	push   %ecx
    6048:	6a 00                	push   $0x0
    604a:	6a ff                	push   $0xffffffff
    604c:	56                   	push   %esi
    604d:	e8 8e 96 00 00       	call   f6e0 <async_data_read_start@plt>
    6052:	89 34 24             	mov    %esi,(%esp)
    6055:	e8 f6 94 00 00       	call   f550 <async_exchange_end@plt>
    605a:	83 c4 10             	add    $0x10,%esp
    605d:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    6062:	eb a5                	jmp    6009 <audio_pcm_get_info_str+0x89>
    6064:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    606a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00006070 <audio_pcm_query_cap>:
    6070:	55                   	push   %ebp
    6071:	89 e5                	mov    %esp,%ebp
    6073:	53                   	push   %ebx
    6074:	83 ec 30             	sub    $0x30,%esp
    6077:	8b 45 08             	mov    0x8(%ebp),%eax
    607a:	50                   	push   %eax
    607b:	e8 f0 96 00 00       	call   f770 <async_exchange_begin@plt>
    6080:	83 c4 0c             	add    $0xc,%esp
    6083:	89 c3                	mov    %eax,%ebx
    6085:	8b 55 0c             	mov    0xc(%ebp),%edx
    6088:	8d 45 f4             	lea    -0xc(%ebp),%eax
    608b:	6a 00                	push   $0x0
    608d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    6094:	6a 00                	push   $0x0
    6096:	6a 00                	push   $0x0
    6098:	6a 00                	push   $0x0
    609a:	50                   	push   %eax
    609b:	6a 00                	push   $0x0
    609d:	6a 00                	push   $0x0
    609f:	52                   	push   %edx
    60a0:	6a 01                	push   $0x1
    60a2:	68 04 04 00 00       	push   $0x404
    60a7:	53                   	push   %ebx
    60a8:	e8 43 94 00 00       	call   f4f0 <async_req_fast@plt>
    60ad:	83 c4 24             	add    $0x24,%esp
    60b0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    60b3:	53                   	push   %ebx
    60b4:	e8 97 94 00 00       	call   f550 <async_exchange_end@plt>
    60b9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    60bc:	83 c4 10             	add    $0x10,%esp
    60bf:	85 c0                	test   %eax,%eax
    60c1:	75 03                	jne    60c6 <audio_pcm_query_cap+0x56>
    60c3:	8b 45 f4             	mov    -0xc(%ebp),%eax
    60c6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    60c9:	c9                   	leave  
    60ca:	c3                   	ret    
    60cb:	90                   	nop
    60cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000060d0 <audio_pcm_get_buffer_pos>:
    60d0:	55                   	push   %ebp
    60d1:	89 e5                	mov    %esp,%ebp
    60d3:	56                   	push   %esi
    60d4:	53                   	push   %ebx
    60d5:	83 ec 20             	sub    $0x20,%esp
    60d8:	8b 75 0c             	mov    0xc(%ebp),%esi
    60db:	85 f6                	test   %esi,%esi
    60dd:	74 61                	je     6140 <audio_pcm_get_buffer_pos+0x70>
    60df:	83 ec 0c             	sub    $0xc,%esp
    60e2:	8b 45 08             	mov    0x8(%ebp),%eax
    60e5:	50                   	push   %eax
    60e6:	e8 85 96 00 00       	call   f770 <async_exchange_begin@plt>
    60eb:	83 c4 0c             	add    $0xc,%esp
    60ee:	89 c3                	mov    %eax,%ebx
    60f0:	8d 45 f4             	lea    -0xc(%ebp),%eax
    60f3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    60fa:	6a 00                	push   $0x0
    60fc:	6a 00                	push   $0x0
    60fe:	6a 00                	push   $0x0
    6100:	6a 00                	push   $0x0
    6102:	50                   	push   %eax
    6103:	6a 00                	push   $0x0
    6105:	6a 00                	push   $0x0
    6107:	6a 00                	push   $0x0
    6109:	6a 07                	push   $0x7
    610b:	68 04 04 00 00       	push   $0x404
    6110:	53                   	push   %ebx
    6111:	e8 da 93 00 00       	call   f4f0 <async_req_fast@plt>
    6116:	83 c4 30             	add    $0x30,%esp
    6119:	85 c0                	test   %eax,%eax
    611b:	74 1b                	je     6138 <audio_pcm_get_buffer_pos+0x68>
    611d:	83 ec 0c             	sub    $0xc,%esp
    6120:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    6123:	53                   	push   %ebx
    6124:	e8 27 94 00 00       	call   f550 <async_exchange_end@plt>
    6129:	83 c4 10             	add    $0x10,%esp
    612c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    612f:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6132:	5b                   	pop    %ebx
    6133:	5e                   	pop    %esi
    6134:	5d                   	pop    %ebp
    6135:	c3                   	ret    
    6136:	66 90                	xchg   %ax,%ax
    6138:	8b 55 f4             	mov    -0xc(%ebp),%edx
    613b:	89 16                	mov    %edx,(%esi)
    613d:	eb de                	jmp    611d <audio_pcm_get_buffer_pos+0x4d>
    613f:	90                   	nop
    6140:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    6145:	eb e8                	jmp    612f <audio_pcm_get_buffer_pos+0x5f>
    6147:	89 f6                	mov    %esi,%esi
    6149:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006150 <audio_pcm_test_format>:
    6150:	55                   	push   %ebp
    6151:	89 e5                	mov    %esp,%ebp
    6153:	57                   	push   %edi
    6154:	56                   	push   %esi
    6155:	53                   	push   %ebx
    6156:	83 ec 38             	sub    $0x38,%esp
    6159:	8b 45 08             	mov    0x8(%ebp),%eax
    615c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    615f:	50                   	push   %eax
    6160:	e8 0b 96 00 00       	call   f770 <async_exchange_begin@plt>
    6165:	83 c4 10             	add    $0x10,%esp
    6168:	89 c6                	mov    %eax,%esi
    616a:	85 db                	test   %ebx,%ebx
    616c:	0f 84 be 00 00 00    	je     6230 <audio_pcm_test_format+0xe0>
    6172:	8b 03                	mov    (%ebx),%eax
    6174:	8b 7d 10             	mov    0x10(%ebp),%edi
    6177:	89 45 dc             	mov    %eax,-0x24(%ebp)
    617a:	85 ff                	test   %edi,%edi
    617c:	0f 84 be 00 00 00    	je     6240 <audio_pcm_test_format+0xf0>
    6182:	8b 4d 10             	mov    0x10(%ebp),%ecx
    6185:	8b 11                	mov    (%ecx),%edx
    6187:	8b 4d 14             	mov    0x14(%ebp),%ecx
    618a:	89 55 e0             	mov    %edx,-0x20(%ebp)
    618d:	85 c9                	test   %ecx,%ecx
    618f:	0f 84 bb 00 00 00    	je     6250 <audio_pcm_test_format+0x100>
    6195:	8b 7d 14             	mov    0x14(%ebp),%edi
    6198:	8b 0f                	mov    (%edi),%ecx
    619a:	57                   	push   %edi
    619b:	8d 7d e4             	lea    -0x1c(%ebp),%edi
    619e:	6a 00                	push   $0x0
    61a0:	6a 00                	push   $0x0
    61a2:	57                   	push   %edi
    61a3:	8d 7d e0             	lea    -0x20(%ebp),%edi
    61a6:	57                   	push   %edi
    61a7:	8d 7d dc             	lea    -0x24(%ebp),%edi
    61aa:	57                   	push   %edi
    61ab:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
    61ae:	51                   	push   %ecx
    61af:	52                   	push   %edx
    61b0:	50                   	push   %eax
    61b1:	6a 04                	push   $0x4
    61b3:	68 04 04 00 00       	push   $0x404
    61b8:	56                   	push   %esi
    61b9:	e8 32 93 00 00       	call   f4f0 <async_req_fast@plt>
    61be:	83 c4 24             	add    $0x24,%esp
    61c1:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    61c4:	56                   	push   %esi
    61c5:	e8 86 93 00 00       	call   f550 <async_exchange_end@plt>
    61ca:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    61cd:	83 c4 10             	add    $0x10,%esp
    61d0:	85 c0                	test   %eax,%eax
    61d2:	74 34                	je     6208 <audio_pcm_test_format+0xb8>
    61d4:	83 f8 fd             	cmp    $0xfffffffd,%eax
    61d7:	74 2f                	je     6208 <audio_pcm_test_format+0xb8>
    61d9:	85 db                	test   %ebx,%ebx
    61db:	74 05                	je     61e2 <audio_pcm_test_format+0x92>
    61dd:	8b 55 dc             	mov    -0x24(%ebp),%edx
    61e0:	89 13                	mov    %edx,(%ebx)
    61e2:	8b 4d 10             	mov    0x10(%ebp),%ecx
    61e5:	85 c9                	test   %ecx,%ecx
    61e7:	74 08                	je     61f1 <audio_pcm_test_format+0xa1>
    61e9:	8b 55 e0             	mov    -0x20(%ebp),%edx
    61ec:	8b 75 10             	mov    0x10(%ebp),%esi
    61ef:	89 16                	mov    %edx,(%esi)
    61f1:	8b 55 14             	mov    0x14(%ebp),%edx
    61f4:	85 d2                	test   %edx,%edx
    61f6:	74 08                	je     6200 <audio_pcm_test_format+0xb0>
    61f8:	8b 4d 14             	mov    0x14(%ebp),%ecx
    61fb:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    61fe:	89 11                	mov    %edx,(%ecx)
    6200:	8d 65 f4             	lea    -0xc(%ebp),%esp
    6203:	5b                   	pop    %ebx
    6204:	5e                   	pop    %esi
    6205:	5f                   	pop    %edi
    6206:	5d                   	pop    %ebp
    6207:	c3                   	ret    
    6208:	85 db                	test   %ebx,%ebx
    620a:	74 07                	je     6213 <audio_pcm_test_format+0xc3>
    620c:	8b 55 dc             	mov    -0x24(%ebp),%edx
    620f:	39 13                	cmp    %edx,(%ebx)
    6211:	75 cd                	jne    61e0 <audio_pcm_test_format+0x90>
    6213:	8b 7d 10             	mov    0x10(%ebp),%edi
    6216:	85 ff                	test   %edi,%edi
    6218:	74 3e                	je     6258 <audio_pcm_test_format+0x108>
    621a:	8b 75 10             	mov    0x10(%ebp),%esi
    621d:	8b 55 e0             	mov    -0x20(%ebp),%edx
    6220:	39 16                	cmp    %edx,(%esi)
    6222:	74 34                	je     6258 <audio_pcm_test_format+0x108>
    6224:	85 db                	test   %ebx,%ebx
    6226:	75 b5                	jne    61dd <audio_pcm_test_format+0x8d>
    6228:	eb c5                	jmp    61ef <audio_pcm_test_format+0x9f>
    622a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6230:	31 c0                	xor    %eax,%eax
    6232:	8b 7d 10             	mov    0x10(%ebp),%edi
    6235:	89 45 dc             	mov    %eax,-0x24(%ebp)
    6238:	85 ff                	test   %edi,%edi
    623a:	0f 85 42 ff ff ff    	jne    6182 <audio_pcm_test_format+0x32>
    6240:	31 d2                	xor    %edx,%edx
    6242:	8b 4d 14             	mov    0x14(%ebp),%ecx
    6245:	89 55 e0             	mov    %edx,-0x20(%ebp)
    6248:	85 c9                	test   %ecx,%ecx
    624a:	0f 85 45 ff ff ff    	jne    6195 <audio_pcm_test_format+0x45>
    6250:	31 c9                	xor    %ecx,%ecx
    6252:	e9 43 ff ff ff       	jmp    619a <audio_pcm_test_format+0x4a>
    6257:	90                   	nop
    6258:	8b 75 14             	mov    0x14(%ebp),%esi
    625b:	85 f6                	test   %esi,%esi
    625d:	74 0e                	je     626d <audio_pcm_test_format+0x11d>
    625f:	8b 75 14             	mov    0x14(%ebp),%esi
    6262:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    6265:	39 0e                	cmp    %ecx,(%esi)
    6267:	0f 85 6c ff ff ff    	jne    61d9 <audio_pcm_test_format+0x89>
    626d:	31 c0                	xor    %eax,%eax
    626f:	eb 8f                	jmp    6200 <audio_pcm_test_format+0xb0>
    6271:	eb 0d                	jmp    6280 <audio_pcm_register_event_callback>
    6273:	90                   	nop
    6274:	90                   	nop
    6275:	90                   	nop
    6276:	90                   	nop
    6277:	90                   	nop
    6278:	90                   	nop
    6279:	90                   	nop
    627a:	90                   	nop
    627b:	90                   	nop
    627c:	90                   	nop
    627d:	90                   	nop
    627e:	90                   	nop
    627f:	90                   	nop

00006280 <audio_pcm_register_event_callback>:
    6280:	55                   	push   %ebp
    6281:	89 e5                	mov    %esp,%ebp
    6283:	56                   	push   %esi
    6284:	53                   	push   %ebx
    6285:	83 ec 20             	sub    $0x20,%esp
    6288:	8b 75 0c             	mov    0xc(%ebp),%esi
    628b:	85 f6                	test   %esi,%esi
    628d:	74 71                	je     6300 <audio_pcm_register_event_callback+0x80>
    628f:	83 ec 0c             	sub    $0xc,%esp
    6292:	8b 4d 08             	mov    0x8(%ebp),%ecx
    6295:	51                   	push   %ecx
    6296:	e8 d5 94 00 00       	call   f770 <async_exchange_begin@plt>
    629b:	83 c4 0c             	add    $0xc,%esp
    629e:	89 c3                	mov    %eax,%ebx
    62a0:	6a 00                	push   $0x0
    62a2:	6a 00                	push   $0x0
    62a4:	6a 00                	push   $0x0
    62a6:	6a 00                	push   $0x0
    62a8:	6a 00                	push   $0x0
    62aa:	6a 00                	push   $0x0
    62ac:	6a 00                	push   $0x0
    62ae:	6a 00                	push   $0x0
    62b0:	6a 02                	push   $0x2
    62b2:	68 04 04 00 00       	push   $0x404
    62b7:	50                   	push   %eax
    62b8:	e8 33 92 00 00       	call   f4f0 <async_req_fast@plt>
    62bd:	83 c4 30             	add    $0x30,%esp
    62c0:	85 c0                	test   %eax,%eax
    62c2:	74 1c                	je     62e0 <audio_pcm_register_event_callback+0x60>
    62c4:	83 ec 0c             	sub    $0xc,%esp
    62c7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    62ca:	53                   	push   %ebx
    62cb:	e8 80 92 00 00       	call   f550 <async_exchange_end@plt>
    62d0:	83 c4 10             	add    $0x10,%esp
    62d3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    62d6:	8d 65 f8             	lea    -0x8(%ebp),%esp
    62d9:	5b                   	pop    %ebx
    62da:	5e                   	pop    %esi
    62db:	5d                   	pop    %ebp
    62dc:	c3                   	ret    
    62dd:	8d 76 00             	lea    0x0(%esi),%esi
    62e0:	8b 55 10             	mov    0x10(%ebp),%edx
    62e3:	50                   	push   %eax
    62e4:	8d 45 f4             	lea    -0xc(%ebp),%eax
    62e7:	50                   	push   %eax
    62e8:	52                   	push   %edx
    62e9:	56                   	push   %esi
    62ea:	6a 00                	push   $0x0
    62ec:	6a 00                	push   $0x0
    62ee:	68 16 86 8f db       	push   $0xdb8f8616
    62f3:	53                   	push   %ebx
    62f4:	e8 97 93 00 00       	call   f690 <async_create_callback_port@plt>
    62f9:	83 c4 20             	add    $0x20,%esp
    62fc:	eb c6                	jmp    62c4 <audio_pcm_register_event_callback+0x44>
    62fe:	66 90                	xchg   %ax,%ax
    6300:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    6305:	eb cf                	jmp    62d6 <audio_pcm_register_event_callback+0x56>
    6307:	89 f6                	mov    %esi,%esi
    6309:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006310 <audio_pcm_unregister_event_callback>:
    6310:	55                   	push   %ebp
    6311:	89 e5                	mov    %esp,%ebp
    6313:	53                   	push   %ebx
    6314:	83 ec 20             	sub    $0x20,%esp
    6317:	8b 45 08             	mov    0x8(%ebp),%eax
    631a:	50                   	push   %eax
    631b:	e8 50 94 00 00       	call   f770 <async_exchange_begin@plt>
    6320:	83 c4 0c             	add    $0xc,%esp
    6323:	89 c3                	mov    %eax,%ebx
    6325:	6a 00                	push   $0x0
    6327:	6a 00                	push   $0x0
    6329:	6a 00                	push   $0x0
    632b:	6a 00                	push   $0x0
    632d:	6a 00                	push   $0x0
    632f:	6a 00                	push   $0x0
    6331:	6a 00                	push   $0x0
    6333:	6a 00                	push   $0x0
    6335:	6a 03                	push   $0x3
    6337:	68 04 04 00 00       	push   $0x404
    633c:	50                   	push   %eax
    633d:	e8 ae 91 00 00       	call   f4f0 <async_req_fast@plt>
    6342:	83 c4 24             	add    $0x24,%esp
    6345:	89 45 f4             	mov    %eax,-0xc(%ebp)
    6348:	53                   	push   %ebx
    6349:	e8 02 92 00 00       	call   f550 <async_exchange_end@plt>
    634e:	8b 45 f4             	mov    -0xc(%ebp),%eax
    6351:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6354:	c9                   	leave  
    6355:	c3                   	ret    
    6356:	8d 76 00             	lea    0x0(%esi),%esi
    6359:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006360 <audio_pcm_get_buffer>:
    6360:	55                   	push   %ebp
    6361:	89 e5                	mov    %esp,%ebp
    6363:	57                   	push   %edi
    6364:	56                   	push   %esi
    6365:	53                   	push   %ebx
    6366:	83 ec 2c             	sub    $0x2c,%esp
    6369:	8b 75 0c             	mov    0xc(%ebp),%esi
    636c:	8b 5d 10             	mov    0x10(%ebp),%ebx
    636f:	85 f6                	test   %esi,%esi
    6371:	0f 84 91 00 00 00    	je     6408 <audio_pcm_get_buffer+0xa8>
    6377:	85 db                	test   %ebx,%ebx
    6379:	0f 84 89 00 00 00    	je     6408 <audio_pcm_get_buffer+0xa8>
    637f:	83 ec 0c             	sub    $0xc,%esp
    6382:	8b 55 08             	mov    0x8(%ebp),%edx
    6385:	52                   	push   %edx
    6386:	e8 e5 93 00 00       	call   f770 <async_exchange_begin@plt>
    638b:	83 c4 0c             	add    $0xc,%esp
    638e:	89 c7                	mov    %eax,%edi
    6390:	8d 55 e0             	lea    -0x20(%ebp),%edx
    6393:	8b 03                	mov    (%ebx),%eax
    6395:	89 45 e0             	mov    %eax,-0x20(%ebp)
    6398:	6a 00                	push   $0x0
    639a:	6a 00                	push   $0x0
    639c:	6a 00                	push   $0x0
    639e:	6a 00                	push   $0x0
    63a0:	52                   	push   %edx
    63a1:	6a 00                	push   $0x0
    63a3:	6a 00                	push   $0x0
    63a5:	50                   	push   %eax
    63a6:	6a 05                	push   $0x5
    63a8:	68 04 04 00 00       	push   $0x404
    63ad:	57                   	push   %edi
    63ae:	e8 3d 91 00 00       	call   f4f0 <async_req_fast@plt>
    63b3:	83 c4 30             	add    $0x30,%esp
    63b6:	85 c0                	test   %eax,%eax
    63b8:	75 2d                	jne    63e7 <audio_pcm_get_buffer+0x87>
    63ba:	83 ec 0c             	sub    $0xc,%esp
    63bd:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    63c0:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    63c7:	50                   	push   %eax
    63c8:	8b 45 e0             	mov    -0x20(%ebp),%eax
    63cb:	6a 00                	push   $0x0
    63cd:	6a 00                	push   $0x0
    63cf:	50                   	push   %eax
    63d0:	57                   	push   %edi
    63d1:	e8 9a 90 00 00       	call   f470 <async_share_in_start@plt>
    63d6:	83 c4 20             	add    $0x20,%esp
    63d9:	85 c0                	test   %eax,%eax
    63db:	75 0a                	jne    63e7 <audio_pcm_get_buffer+0x87>
    63dd:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    63e0:	89 16                	mov    %edx,(%esi)
    63e2:	8b 55 e0             	mov    -0x20(%ebp),%edx
    63e5:	89 13                	mov    %edx,(%ebx)
    63e7:	83 ec 0c             	sub    $0xc,%esp
    63ea:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    63ed:	57                   	push   %edi
    63ee:	e8 5d 91 00 00       	call   f550 <async_exchange_end@plt>
    63f3:	83 c4 10             	add    $0x10,%esp
    63f6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    63f9:	8d 65 f4             	lea    -0xc(%ebp),%esp
    63fc:	5b                   	pop    %ebx
    63fd:	5e                   	pop    %esi
    63fe:	5f                   	pop    %edi
    63ff:	5d                   	pop    %ebp
    6400:	c3                   	ret    
    6401:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6408:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    640d:	eb ea                	jmp    63f9 <audio_pcm_get_buffer+0x99>
    640f:	90                   	nop

00006410 <audio_pcm_release_buffer>:
    6410:	55                   	push   %ebp
    6411:	89 e5                	mov    %esp,%ebp
    6413:	53                   	push   %ebx
    6414:	83 ec 20             	sub    $0x20,%esp
    6417:	8b 45 08             	mov    0x8(%ebp),%eax
    641a:	50                   	push   %eax
    641b:	e8 50 93 00 00       	call   f770 <async_exchange_begin@plt>
    6420:	83 c4 0c             	add    $0xc,%esp
    6423:	89 c3                	mov    %eax,%ebx
    6425:	6a 00                	push   $0x0
    6427:	6a 00                	push   $0x0
    6429:	6a 00                	push   $0x0
    642b:	6a 00                	push   $0x0
    642d:	6a 00                	push   $0x0
    642f:	6a 00                	push   $0x0
    6431:	6a 00                	push   $0x0
    6433:	6a 00                	push   $0x0
    6435:	6a 06                	push   $0x6
    6437:	68 04 04 00 00       	push   $0x404
    643c:	50                   	push   %eax
    643d:	e8 ae 90 00 00       	call   f4f0 <async_req_fast@plt>
    6442:	83 c4 24             	add    $0x24,%esp
    6445:	89 45 f4             	mov    %eax,-0xc(%ebp)
    6448:	53                   	push   %ebx
    6449:	e8 02 91 00 00       	call   f550 <async_exchange_end@plt>
    644e:	8b 45 f4             	mov    -0xc(%ebp),%eax
    6451:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6454:	c9                   	leave  
    6455:	c3                   	ret    
    6456:	8d 76 00             	lea    0x0(%esi),%esi
    6459:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006460 <audio_pcm_start_playback_fragment>:
    6460:	55                   	push   %ebp
    6461:	89 e5                	mov    %esp,%ebp
    6463:	56                   	push   %esi
    6464:	53                   	push   %ebx
    6465:	83 ec 10             	sub    $0x10,%esp
    6468:	81 7d 10 ff ff 00 00 	cmpl   $0xffff,0x10(%ebp)
    646f:	77 5f                	ja     64d0 <audio_pcm_start_playback_fragment+0x70>
    6471:	f7 45 18 00 00 ff ff 	testl  $0xffff0000,0x18(%ebp)
    6478:	75 5d                	jne    64d7 <audio_pcm_start_playback_fragment+0x77>
    647a:	83 ec 0c             	sub    $0xc,%esp
    647d:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6480:	8b 55 08             	mov    0x8(%ebp),%edx
    6483:	8b 45 18             	mov    0x18(%ebp),%eax
    6486:	c1 e3 10             	shl    $0x10,%ebx
    6489:	52                   	push   %edx
    648a:	09 c3                	or     %eax,%ebx
    648c:	e8 df 92 00 00       	call   f770 <async_exchange_begin@plt>
    6491:	83 c4 0c             	add    $0xc,%esp
    6494:	8b 4d 14             	mov    0x14(%ebp),%ecx
    6497:	89 c6                	mov    %eax,%esi
    6499:	6a 00                	push   $0x0
    649b:	6a 00                	push   $0x0
    649d:	6a 00                	push   $0x0
    649f:	6a 00                	push   $0x0
    64a1:	6a 00                	push   $0x0
    64a3:	53                   	push   %ebx
    64a4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    64a7:	51                   	push   %ecx
    64a8:	53                   	push   %ebx
    64a9:	6a 08                	push   $0x8
    64ab:	68 04 04 00 00       	push   $0x404
    64b0:	50                   	push   %eax
    64b1:	e8 3a 90 00 00       	call   f4f0 <async_req_fast@plt>
    64b6:	83 c4 24             	add    $0x24,%esp
    64b9:	56                   	push   %esi
    64ba:	89 45 f4             	mov    %eax,-0xc(%ebp)
    64bd:	e8 8e 90 00 00       	call   f550 <async_exchange_end@plt>
    64c2:	83 c4 10             	add    $0x10,%esp
    64c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
    64c8:	8d 65 f8             	lea    -0x8(%ebp),%esp
    64cb:	5b                   	pop    %ebx
    64cc:	5e                   	pop    %esi
    64cd:	5d                   	pop    %ebp
    64ce:	c3                   	ret    
    64cf:	90                   	nop
    64d0:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    64d5:	eb f1                	jmp    64c8 <audio_pcm_start_playback_fragment+0x68>
    64d7:	56                   	push   %esi
    64d8:	68 a6 01 00 00       	push   $0x1a6
    64dd:	68 98 da 00 00       	push   $0xda98
    64e2:	68 00 dc 00 00       	push   $0xdc00
    64e7:	e8 74 90 00 00       	call   f560 <assert_abort@plt>
    64ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000064f0 <audio_pcm_last_playback_fragment>:
    64f0:	55                   	push   %ebp
    64f1:	89 e5                	mov    %esp,%ebp
    64f3:	53                   	push   %ebx
    64f4:	83 ec 20             	sub    $0x20,%esp
    64f7:	8b 45 08             	mov    0x8(%ebp),%eax
    64fa:	50                   	push   %eax
    64fb:	e8 70 92 00 00       	call   f770 <async_exchange_begin@plt>
    6500:	83 c4 0c             	add    $0xc,%esp
    6503:	89 c3                	mov    %eax,%ebx
    6505:	6a 00                	push   $0x0
    6507:	6a 00                	push   $0x0
    6509:	6a 00                	push   $0x0
    650b:	6a 00                	push   $0x0
    650d:	6a 00                	push   $0x0
    650f:	6a 00                	push   $0x0
    6511:	6a 00                	push   $0x0
    6513:	6a 00                	push   $0x0
    6515:	6a 09                	push   $0x9
    6517:	68 04 04 00 00       	push   $0x404
    651c:	50                   	push   %eax
    651d:	e8 ce 8f 00 00       	call   f4f0 <async_req_fast@plt>
    6522:	83 c4 24             	add    $0x24,%esp
    6525:	89 45 f4             	mov    %eax,-0xc(%ebp)
    6528:	53                   	push   %ebx
    6529:	e8 22 90 00 00       	call   f550 <async_exchange_end@plt>
    652e:	8b 45 f4             	mov    -0xc(%ebp),%eax
    6531:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6534:	c9                   	leave  
    6535:	c3                   	ret    
    6536:	8d 76 00             	lea    0x0(%esi),%esi
    6539:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006540 <audio_pcm_start_playback>:
    6540:	55                   	push   %ebp
    6541:	89 e5                	mov    %esp,%ebp
    6543:	56                   	push   %esi
    6544:	53                   	push   %ebx
    6545:	83 ec 10             	sub    $0x10,%esp
    6548:	81 7d 0c ff ff 00 00 	cmpl   $0xffff,0xc(%ebp)
    654f:	77 5f                	ja     65b0 <audio_pcm_start_playback+0x70>
    6551:	f7 45 14 00 00 ff ff 	testl  $0xffff0000,0x14(%ebp)
    6558:	75 5d                	jne    65b7 <audio_pcm_start_playback+0x77>
    655a:	83 ec 0c             	sub    $0xc,%esp
    655d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    6560:	8b 55 08             	mov    0x8(%ebp),%edx
    6563:	8b 45 14             	mov    0x14(%ebp),%eax
    6566:	c1 e3 10             	shl    $0x10,%ebx
    6569:	52                   	push   %edx
    656a:	09 c3                	or     %eax,%ebx
    656c:	e8 ff 91 00 00       	call   f770 <async_exchange_begin@plt>
    6571:	83 c4 0c             	add    $0xc,%esp
    6574:	8b 4d 10             	mov    0x10(%ebp),%ecx
    6577:	89 c6                	mov    %eax,%esi
    6579:	6a 00                	push   $0x0
    657b:	6a 00                	push   $0x0
    657d:	6a 00                	push   $0x0
    657f:	6a 00                	push   $0x0
    6581:	6a 00                	push   $0x0
    6583:	53                   	push   %ebx
    6584:	51                   	push   %ecx
    6585:	6a 00                	push   $0x0
    6587:	6a 08                	push   $0x8
    6589:	68 04 04 00 00       	push   $0x404
    658e:	50                   	push   %eax
    658f:	e8 5c 8f 00 00       	call   f4f0 <async_req_fast@plt>
    6594:	83 c4 24             	add    $0x24,%esp
    6597:	89 45 f4             	mov    %eax,-0xc(%ebp)
    659a:	56                   	push   %esi
    659b:	e8 b0 8f 00 00       	call   f550 <async_exchange_end@plt>
    65a0:	83 c4 10             	add    $0x10,%esp
    65a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
    65a6:	8d 65 f8             	lea    -0x8(%ebp),%esp
    65a9:	5b                   	pop    %ebx
    65aa:	5e                   	pop    %esi
    65ab:	5d                   	pop    %ebp
    65ac:	c3                   	ret    
    65ad:	8d 76 00             	lea    0x0(%esi),%esi
    65b0:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    65b5:	eb ef                	jmp    65a6 <audio_pcm_start_playback+0x66>
    65b7:	53                   	push   %ebx
    65b8:	68 a6 01 00 00       	push   $0x1a6
    65bd:	68 98 da 00 00       	push   $0xda98
    65c2:	68 00 dc 00 00       	push   $0xdc00
    65c7:	e8 94 8f 00 00       	call   f560 <assert_abort@plt>
    65cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000065d0 <audio_pcm_stop_playback_immediate>:
    65d0:	55                   	push   %ebp
    65d1:	89 e5                	mov    %esp,%ebp
    65d3:	53                   	push   %ebx
    65d4:	83 ec 20             	sub    $0x20,%esp
    65d7:	8b 45 08             	mov    0x8(%ebp),%eax
    65da:	50                   	push   %eax
    65db:	e8 90 91 00 00       	call   f770 <async_exchange_begin@plt>
    65e0:	83 c4 0c             	add    $0xc,%esp
    65e3:	89 c3                	mov    %eax,%ebx
    65e5:	6a 00                	push   $0x0
    65e7:	6a 00                	push   $0x0
    65e9:	6a 00                	push   $0x0
    65eb:	6a 00                	push   $0x0
    65ed:	6a 00                	push   $0x0
    65ef:	6a 00                	push   $0x0
    65f1:	6a 00                	push   $0x0
    65f3:	6a 01                	push   $0x1
    65f5:	6a 09                	push   $0x9
    65f7:	68 04 04 00 00       	push   $0x404
    65fc:	50                   	push   %eax
    65fd:	e8 ee 8e 00 00       	call   f4f0 <async_req_fast@plt>
    6602:	83 c4 24             	add    $0x24,%esp
    6605:	89 45 f4             	mov    %eax,-0xc(%ebp)
    6608:	53                   	push   %ebx
    6609:	e8 42 8f 00 00       	call   f550 <async_exchange_end@plt>
    660e:	8b 45 f4             	mov    -0xc(%ebp),%eax
    6611:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6614:	c9                   	leave  
    6615:	c3                   	ret    
    6616:	8d 76 00             	lea    0x0(%esi),%esi
    6619:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006620 <audio_pcm_stop_playback>:
    6620:	55                   	push   %ebp
    6621:	89 e5                	mov    %esp,%ebp
    6623:	53                   	push   %ebx
    6624:	83 ec 20             	sub    $0x20,%esp
    6627:	8b 45 08             	mov    0x8(%ebp),%eax
    662a:	50                   	push   %eax
    662b:	e8 40 91 00 00       	call   f770 <async_exchange_begin@plt>
    6630:	83 c4 0c             	add    $0xc,%esp
    6633:	89 c3                	mov    %eax,%ebx
    6635:	6a 00                	push   $0x0
    6637:	6a 00                	push   $0x0
    6639:	6a 00                	push   $0x0
    663b:	6a 00                	push   $0x0
    663d:	6a 00                	push   $0x0
    663f:	6a 00                	push   $0x0
    6641:	6a 00                	push   $0x0
    6643:	6a 00                	push   $0x0
    6645:	6a 09                	push   $0x9
    6647:	68 04 04 00 00       	push   $0x404
    664c:	50                   	push   %eax
    664d:	e8 9e 8e 00 00       	call   f4f0 <async_req_fast@plt>
    6652:	83 c4 24             	add    $0x24,%esp
    6655:	89 45 f4             	mov    %eax,-0xc(%ebp)
    6658:	53                   	push   %ebx
    6659:	e8 f2 8e 00 00       	call   f550 <async_exchange_end@plt>
    665e:	8b 45 f4             	mov    -0xc(%ebp),%eax
    6661:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6664:	c9                   	leave  
    6665:	c3                   	ret    
    6666:	8d 76 00             	lea    0x0(%esi),%esi
    6669:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006670 <audio_pcm_start_capture_fragment>:
    6670:	55                   	push   %ebp
    6671:	89 e5                	mov    %esp,%ebp
    6673:	56                   	push   %esi
    6674:	53                   	push   %ebx
    6675:	83 ec 10             	sub    $0x10,%esp
    6678:	81 7d 10 ff ff 00 00 	cmpl   $0xffff,0x10(%ebp)
    667f:	77 5f                	ja     66e0 <audio_pcm_start_capture_fragment+0x70>
    6681:	f7 45 18 00 00 ff ff 	testl  $0xffff0000,0x18(%ebp)
    6688:	75 5d                	jne    66e7 <audio_pcm_start_capture_fragment+0x77>
    668a:	83 ec 0c             	sub    $0xc,%esp
    668d:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6690:	8b 55 08             	mov    0x8(%ebp),%edx
    6693:	8b 45 18             	mov    0x18(%ebp),%eax
    6696:	c1 e3 10             	shl    $0x10,%ebx
    6699:	52                   	push   %edx
    669a:	09 c3                	or     %eax,%ebx
    669c:	e8 cf 90 00 00       	call   f770 <async_exchange_begin@plt>
    66a1:	83 c4 0c             	add    $0xc,%esp
    66a4:	8b 4d 14             	mov    0x14(%ebp),%ecx
    66a7:	89 c6                	mov    %eax,%esi
    66a9:	6a 00                	push   $0x0
    66ab:	6a 00                	push   $0x0
    66ad:	6a 00                	push   $0x0
    66af:	6a 00                	push   $0x0
    66b1:	6a 00                	push   $0x0
    66b3:	53                   	push   %ebx
    66b4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    66b7:	51                   	push   %ecx
    66b8:	53                   	push   %ebx
    66b9:	6a 0a                	push   $0xa
    66bb:	68 04 04 00 00       	push   $0x404
    66c0:	50                   	push   %eax
    66c1:	e8 2a 8e 00 00       	call   f4f0 <async_req_fast@plt>
    66c6:	83 c4 24             	add    $0x24,%esp
    66c9:	56                   	push   %esi
    66ca:	89 45 f4             	mov    %eax,-0xc(%ebp)
    66cd:	e8 7e 8e 00 00       	call   f550 <async_exchange_end@plt>
    66d2:	83 c4 10             	add    $0x10,%esp
    66d5:	8b 45 f4             	mov    -0xc(%ebp),%eax
    66d8:	8d 65 f8             	lea    -0x8(%ebp),%esp
    66db:	5b                   	pop    %ebx
    66dc:	5e                   	pop    %esi
    66dd:	5d                   	pop    %ebp
    66de:	c3                   	ret    
    66df:	90                   	nop
    66e0:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    66e5:	eb f1                	jmp    66d8 <audio_pcm_start_capture_fragment+0x68>
    66e7:	56                   	push   %esi
    66e8:	68 07 02 00 00       	push   $0x207
    66ed:	68 98 da 00 00       	push   $0xda98
    66f2:	68 00 dc 00 00       	push   $0xdc00
    66f7:	e8 64 8e 00 00       	call   f560 <assert_abort@plt>
    66fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00006700 <audio_pcm_start_capture>:
    6700:	55                   	push   %ebp
    6701:	89 e5                	mov    %esp,%ebp
    6703:	56                   	push   %esi
    6704:	53                   	push   %ebx
    6705:	83 ec 10             	sub    $0x10,%esp
    6708:	81 7d 0c ff ff 00 00 	cmpl   $0xffff,0xc(%ebp)
    670f:	77 5f                	ja     6770 <audio_pcm_start_capture+0x70>
    6711:	f7 45 14 00 00 ff ff 	testl  $0xffff0000,0x14(%ebp)
    6718:	75 5d                	jne    6777 <audio_pcm_start_capture+0x77>
    671a:	83 ec 0c             	sub    $0xc,%esp
    671d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    6720:	8b 55 08             	mov    0x8(%ebp),%edx
    6723:	8b 45 14             	mov    0x14(%ebp),%eax
    6726:	c1 e3 10             	shl    $0x10,%ebx
    6729:	52                   	push   %edx
    672a:	09 c3                	or     %eax,%ebx
    672c:	e8 3f 90 00 00       	call   f770 <async_exchange_begin@plt>
    6731:	83 c4 0c             	add    $0xc,%esp
    6734:	8b 4d 10             	mov    0x10(%ebp),%ecx
    6737:	89 c6                	mov    %eax,%esi
    6739:	6a 00                	push   $0x0
    673b:	6a 00                	push   $0x0
    673d:	6a 00                	push   $0x0
    673f:	6a 00                	push   $0x0
    6741:	6a 00                	push   $0x0
    6743:	53                   	push   %ebx
    6744:	51                   	push   %ecx
    6745:	6a 00                	push   $0x0
    6747:	6a 0a                	push   $0xa
    6749:	68 04 04 00 00       	push   $0x404
    674e:	50                   	push   %eax
    674f:	e8 9c 8d 00 00       	call   f4f0 <async_req_fast@plt>
    6754:	83 c4 24             	add    $0x24,%esp
    6757:	89 45 f4             	mov    %eax,-0xc(%ebp)
    675a:	56                   	push   %esi
    675b:	e8 f0 8d 00 00       	call   f550 <async_exchange_end@plt>
    6760:	83 c4 10             	add    $0x10,%esp
    6763:	8b 45 f4             	mov    -0xc(%ebp),%eax
    6766:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6769:	5b                   	pop    %ebx
    676a:	5e                   	pop    %esi
    676b:	5d                   	pop    %ebp
    676c:	c3                   	ret    
    676d:	8d 76 00             	lea    0x0(%esi),%esi
    6770:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    6775:	eb ef                	jmp    6766 <audio_pcm_start_capture+0x66>
    6777:	53                   	push   %ebx
    6778:	68 07 02 00 00       	push   $0x207
    677d:	68 98 da 00 00       	push   $0xda98
    6782:	68 00 dc 00 00       	push   $0xdc00
    6787:	e8 d4 8d 00 00       	call   f560 <assert_abort@plt>
    678c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00006790 <audio_pcm_last_capture_fragment>:
    6790:	55                   	push   %ebp
    6791:	89 e5                	mov    %esp,%ebp
    6793:	53                   	push   %ebx
    6794:	83 ec 20             	sub    $0x20,%esp
    6797:	8b 45 08             	mov    0x8(%ebp),%eax
    679a:	50                   	push   %eax
    679b:	e8 d0 8f 00 00       	call   f770 <async_exchange_begin@plt>
    67a0:	83 c4 0c             	add    $0xc,%esp
    67a3:	89 c3                	mov    %eax,%ebx
    67a5:	6a 00                	push   $0x0
    67a7:	6a 00                	push   $0x0
    67a9:	6a 00                	push   $0x0
    67ab:	6a 00                	push   $0x0
    67ad:	6a 00                	push   $0x0
    67af:	6a 00                	push   $0x0
    67b1:	6a 00                	push   $0x0
    67b3:	6a 00                	push   $0x0
    67b5:	6a 0b                	push   $0xb
    67b7:	68 04 04 00 00       	push   $0x404
    67bc:	50                   	push   %eax
    67bd:	e8 2e 8d 00 00       	call   f4f0 <async_req_fast@plt>
    67c2:	83 c4 24             	add    $0x24,%esp
    67c5:	89 45 f4             	mov    %eax,-0xc(%ebp)
    67c8:	53                   	push   %ebx
    67c9:	e8 82 8d 00 00       	call   f550 <async_exchange_end@plt>
    67ce:	8b 45 f4             	mov    -0xc(%ebp),%eax
    67d1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    67d4:	c9                   	leave  
    67d5:	c3                   	ret    
    67d6:	8d 76 00             	lea    0x0(%esi),%esi
    67d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000067e0 <audio_pcm_stop_capture_immediate>:
    67e0:	55                   	push   %ebp
    67e1:	89 e5                	mov    %esp,%ebp
    67e3:	53                   	push   %ebx
    67e4:	83 ec 20             	sub    $0x20,%esp
    67e7:	8b 45 08             	mov    0x8(%ebp),%eax
    67ea:	50                   	push   %eax
    67eb:	e8 80 8f 00 00       	call   f770 <async_exchange_begin@plt>
    67f0:	83 c4 0c             	add    $0xc,%esp
    67f3:	89 c3                	mov    %eax,%ebx
    67f5:	6a 00                	push   $0x0
    67f7:	6a 00                	push   $0x0
    67f9:	6a 00                	push   $0x0
    67fb:	6a 00                	push   $0x0
    67fd:	6a 00                	push   $0x0
    67ff:	6a 00                	push   $0x0
    6801:	6a 00                	push   $0x0
    6803:	6a 01                	push   $0x1
    6805:	6a 0b                	push   $0xb
    6807:	68 04 04 00 00       	push   $0x404
    680c:	50                   	push   %eax
    680d:	e8 de 8c 00 00       	call   f4f0 <async_req_fast@plt>
    6812:	83 c4 24             	add    $0x24,%esp
    6815:	89 45 f4             	mov    %eax,-0xc(%ebp)
    6818:	53                   	push   %ebx
    6819:	e8 32 8d 00 00       	call   f550 <async_exchange_end@plt>
    681e:	8b 45 f4             	mov    -0xc(%ebp),%eax
    6821:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6824:	c9                   	leave  
    6825:	c3                   	ret    
    6826:	8d 76 00             	lea    0x0(%esi),%esi
    6829:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006830 <audio_pcm_stop_capture>:
    6830:	55                   	push   %ebp
    6831:	89 e5                	mov    %esp,%ebp
    6833:	53                   	push   %ebx
    6834:	83 ec 20             	sub    $0x20,%esp
    6837:	8b 45 08             	mov    0x8(%ebp),%eax
    683a:	50                   	push   %eax
    683b:	e8 30 8f 00 00       	call   f770 <async_exchange_begin@plt>
    6840:	83 c4 0c             	add    $0xc,%esp
    6843:	89 c3                	mov    %eax,%ebx
    6845:	6a 00                	push   $0x0
    6847:	6a 00                	push   $0x0
    6849:	6a 00                	push   $0x0
    684b:	6a 00                	push   $0x0
    684d:	6a 00                	push   $0x0
    684f:	6a 00                	push   $0x0
    6851:	6a 00                	push   $0x0
    6853:	6a 00                	push   $0x0
    6855:	6a 0b                	push   $0xb
    6857:	68 04 04 00 00       	push   $0x404
    685c:	50                   	push   %eax
    685d:	e8 8e 8c 00 00       	call   f4f0 <async_req_fast@plt>
    6862:	83 c4 24             	add    $0x24,%esp
    6865:	89 45 f4             	mov    %eax,-0xc(%ebp)
    6868:	53                   	push   %ebx
    6869:	e8 e2 8c 00 00       	call   f550 <async_exchange_end@plt>
    686e:	8b 45 f4             	mov    -0xc(%ebp),%eax
    6871:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6874:	c9                   	leave  
    6875:	c3                   	ret    
    6876:	66 90                	xchg   %ax,%ax
    6878:	66 90                	xchg   %ax,%ax
    687a:	66 90                	xchg   %ax,%ax
    687c:	66 90                	xchg   %ax,%ax
    687e:	66 90                	xchg   %ax,%ax

00006880 <remote_hw_res_dma_channel_setup>:
    6880:	55                   	push   %ebp
    6881:	89 e5                	mov    %esp,%ebp
    6883:	57                   	push   %edi
    6884:	56                   	push   %esi
    6885:	53                   	push   %ebx
    6886:	83 ec 0c             	sub    $0xc,%esp
    6889:	8b 45 0c             	mov    0xc(%ebp),%eax
    688c:	8b 75 08             	mov    0x8(%ebp),%esi
    688f:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6892:	8b 55 14             	mov    0x14(%ebp),%edx
    6895:	8b 48 08             	mov    0x8(%eax),%ecx
    6898:	85 c9                	test   %ecx,%ecx
    689a:	74 3c                	je     68d8 <remote_hw_res_dma_channel_setup+0x58>
    689c:	8b 42 08             	mov    0x8(%edx),%eax
    689f:	83 ec 0c             	sub    $0xc,%esp
    68a2:	89 c7                	mov    %eax,%edi
    68a4:	25 ff ff 00 00       	and    $0xffff,%eax
    68a9:	c1 ef 10             	shr    $0x10,%edi
    68ac:	81 e7 ff 00 00 00    	and    $0xff,%edi
    68b2:	57                   	push   %edi
    68b3:	8b 7a 10             	mov    0x10(%edx),%edi
    68b6:	57                   	push   %edi
    68b7:	8b 52 0c             	mov    0xc(%edx),%edx
    68ba:	52                   	push   %edx
    68bb:	50                   	push   %eax
    68bc:	56                   	push   %esi
    68bd:	ff d1                	call   *%ecx
    68bf:	89 5d 08             	mov    %ebx,0x8(%ebp)
    68c2:	89 45 0c             	mov    %eax,0xc(%ebp)
    68c5:	83 c4 20             	add    $0x20,%esp
    68c8:	8d 65 f4             	lea    -0xc(%ebp),%esp
    68cb:	5b                   	pop    %ebx
    68cc:	5e                   	pop    %esi
    68cd:	5f                   	pop    %edi
    68ce:	5d                   	pop    %ebp
    68cf:	e9 2c 8c 00 00       	jmp    f500 <async_answer_0@plt>
    68d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    68d8:	89 5d 08             	mov    %ebx,0x8(%ebp)
    68db:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    68e2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    68e5:	5b                   	pop    %ebx
    68e6:	5e                   	pop    %esi
    68e7:	5f                   	pop    %edi
    68e8:	5d                   	pop    %ebp
    68e9:	e9 12 8c 00 00       	jmp    f500 <async_answer_0@plt>
    68ee:	66 90                	xchg   %ax,%ax

000068f0 <remote_hw_res_enable_interrupt>:
    68f0:	55                   	push   %ebp
    68f1:	89 e5                	mov    %esp,%ebp
    68f3:	53                   	push   %ebx
    68f4:	50                   	push   %eax
    68f5:	8b 45 0c             	mov    0xc(%ebp),%eax
    68f8:	8b 55 08             	mov    0x8(%ebp),%edx
    68fb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    68fe:	8b 40 04             	mov    0x4(%eax),%eax
    6901:	85 c0                	test   %eax,%eax
    6903:	74 3b                	je     6940 <remote_hw_res_enable_interrupt+0x50>
    6905:	83 ec 0c             	sub    $0xc,%esp
    6908:	52                   	push   %edx
    6909:	ff d0                	call   *%eax
    690b:	83 c4 10             	add    $0x10,%esp
    690e:	84 c0                	test   %al,%al
    6910:	75 16                	jne    6928 <remote_hw_res_enable_interrupt+0x38>
    6912:	89 5d 08             	mov    %ebx,0x8(%ebp)
    6915:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6918:	c7 45 0c fc ff ff ff 	movl   $0xfffffffc,0xc(%ebp)
    691f:	c9                   	leave  
    6920:	e9 db 8b 00 00       	jmp    f500 <async_answer_0@plt>
    6925:	8d 76 00             	lea    0x0(%esi),%esi
    6928:	89 5d 08             	mov    %ebx,0x8(%ebp)
    692b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    692e:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
    6935:	c9                   	leave  
    6936:	e9 c5 8b 00 00       	jmp    f500 <async_answer_0@plt>
    693b:	90                   	nop
    693c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6940:	89 5d 08             	mov    %ebx,0x8(%ebp)
    6943:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6946:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    694d:	c9                   	leave  
    694e:	e9 ad 8b 00 00       	jmp    f500 <async_answer_0@plt>
    6953:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6959:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006960 <remote_hw_res_dma_channel_remain>:
    6960:	55                   	push   %ebp
    6961:	89 e5                	mov    %esp,%ebp
    6963:	83 ec 18             	sub    $0x18,%esp
    6966:	8b 45 0c             	mov    0xc(%ebp),%eax
    6969:	8b 50 08             	mov    0x8(%eax),%edx
    696c:	85 d2                	test   %edx,%edx
    696e:	74 30                	je     69a0 <remote_hw_res_dma_channel_remain+0x40>
    6970:	8b 55 14             	mov    0x14(%ebp),%edx
    6973:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    697a:	8b 52 08             	mov    0x8(%edx),%edx
    697d:	51                   	push   %ecx
    697e:	8d 4d f4             	lea    -0xc(%ebp),%ecx
    6981:	51                   	push   %ecx
    6982:	52                   	push   %edx
    6983:	8b 55 08             	mov    0x8(%ebp),%edx
    6986:	52                   	push   %edx
    6987:	ff 50 0c             	call   *0xc(%eax)
    698a:	83 c4 0c             	add    $0xc,%esp
    698d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    6990:	51                   	push   %ecx
    6991:	50                   	push   %eax
    6992:	8b 45 10             	mov    0x10(%ebp),%eax
    6995:	50                   	push   %eax
    6996:	e8 c5 8d 00 00       	call   f760 <async_answer_1@plt>
    699b:	83 c4 10             	add    $0x10,%esp
    699e:	c9                   	leave  
    699f:	c3                   	ret    
    69a0:	50                   	push   %eax
    69a1:	50                   	push   %eax
    69a2:	8b 45 10             	mov    0x10(%ebp),%eax
    69a5:	6a f5                	push   $0xfffffff5
    69a7:	50                   	push   %eax
    69a8:	e8 53 8b 00 00       	call   f500 <async_answer_0@plt>
    69ad:	83 c4 10             	add    $0x10,%esp
    69b0:	c9                   	leave  
    69b1:	c3                   	ret    
    69b2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    69b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000069c0 <remote_hw_res_get_resource_list>:
    69c0:	55                   	push   %ebp
    69c1:	89 e5                	mov    %esp,%ebp
    69c3:	53                   	push   %ebx
    69c4:	83 ec 14             	sub    $0x14,%esp
    69c7:	8b 45 0c             	mov    0xc(%ebp),%eax
    69ca:	8b 00                	mov    (%eax),%eax
    69cc:	85 c0                	test   %eax,%eax
    69ce:	74 40                	je     6a10 <remote_hw_res_get_resource_list+0x50>
    69d0:	83 ec 0c             	sub    $0xc,%esp
    69d3:	8b 55 08             	mov    0x8(%ebp),%edx
    69d6:	52                   	push   %edx
    69d7:	ff d0                	call   *%eax
    69d9:	83 c4 10             	add    $0x10,%esp
    69dc:	89 c3                	mov    %eax,%ebx
    69de:	85 c0                	test   %eax,%eax
    69e0:	74 66                	je     6a48 <remote_hw_res_get_resource_list+0x88>
    69e2:	50                   	push   %eax
    69e3:	8b 03                	mov    (%ebx),%eax
    69e5:	50                   	push   %eax
    69e6:	8b 45 10             	mov    0x10(%ebp),%eax
    69e9:	6a 00                	push   $0x0
    69eb:	50                   	push   %eax
    69ec:	e8 6f 8d 00 00       	call   f760 <async_answer_1@plt>
    69f1:	58                   	pop    %eax
    69f2:	8d 45 f4             	lea    -0xc(%ebp),%eax
    69f5:	5a                   	pop    %edx
    69f6:	50                   	push   %eax
    69f7:	8d 45 10             	lea    0x10(%ebp),%eax
    69fa:	50                   	push   %eax
    69fb:	e8 d0 8c 00 00       	call   f6d0 <async_data_read_receive@plt>
    6a00:	83 c4 10             	add    $0x10,%esp
    6a03:	84 c0                	test   %al,%al
    6a05:	75 21                	jne    6a28 <remote_hw_res_get_resource_list+0x68>
    6a07:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6a0a:	c9                   	leave  
    6a0b:	c3                   	ret    
    6a0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6a10:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6a13:	51                   	push   %ecx
    6a14:	51                   	push   %ecx
    6a15:	6a f5                	push   $0xfffffff5
    6a17:	53                   	push   %ebx
    6a18:	e8 e3 8a 00 00       	call   f500 <async_answer_0@plt>
    6a1d:	83 c4 10             	add    $0x10,%esp
    6a20:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6a23:	c9                   	leave  
    6a24:	c3                   	ret    
    6a25:	8d 76 00             	lea    0x0(%esi),%esi
    6a28:	50                   	push   %eax
    6a29:	8b 55 f4             	mov    -0xc(%ebp),%edx
    6a2c:	8b 4b 04             	mov    0x4(%ebx),%ecx
    6a2f:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6a32:	52                   	push   %edx
    6a33:	51                   	push   %ecx
    6a34:	53                   	push   %ebx
    6a35:	e8 26 8a 00 00       	call   f460 <async_data_read_finalize@plt>
    6a3a:	83 c4 10             	add    $0x10,%esp
    6a3d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6a40:	c9                   	leave  
    6a41:	c3                   	ret    
    6a42:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6a48:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6a4b:	51                   	push   %ecx
    6a4c:	51                   	push   %ecx
    6a4d:	6a ff                	push   $0xffffffff
    6a4f:	53                   	push   %ebx
    6a50:	e8 ab 8a 00 00       	call   f500 <async_answer_0@plt>
    6a55:	83 c4 10             	add    $0x10,%esp
    6a58:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6a5b:	c9                   	leave  
    6a5c:	c3                   	ret    
    6a5d:	66 90                	xchg   %ax,%ax
    6a5f:	90                   	nop

00006a60 <remote_pio_window_get>:
    6a60:	55                   	push   %ebp
    6a61:	89 e5                	mov    %esp,%ebp
    6a63:	53                   	push   %ebx
    6a64:	83 ec 14             	sub    $0x14,%esp
    6a67:	8b 45 0c             	mov    0xc(%ebp),%eax
    6a6a:	8b 00                	mov    (%eax),%eax
    6a6c:	85 c0                	test   %eax,%eax
    6a6e:	74 40                	je     6ab0 <remote_pio_window_get+0x50>
    6a70:	83 ec 0c             	sub    $0xc,%esp
    6a73:	8b 55 08             	mov    0x8(%ebp),%edx
    6a76:	52                   	push   %edx
    6a77:	ff d0                	call   *%eax
    6a79:	83 c4 10             	add    $0x10,%esp
    6a7c:	89 c3                	mov    %eax,%ebx
    6a7e:	85 c0                	test   %eax,%eax
    6a80:	74 5e                	je     6ae0 <remote_pio_window_get+0x80>
    6a82:	50                   	push   %eax
    6a83:	50                   	push   %eax
    6a84:	8b 45 10             	mov    0x10(%ebp),%eax
    6a87:	6a 00                	push   $0x0
    6a89:	50                   	push   %eax
    6a8a:	e8 71 8a 00 00       	call   f500 <async_answer_0@plt>
    6a8f:	58                   	pop    %eax
    6a90:	8d 45 f4             	lea    -0xc(%ebp),%eax
    6a93:	5a                   	pop    %edx
    6a94:	50                   	push   %eax
    6a95:	8d 45 10             	lea    0x10(%ebp),%eax
    6a98:	50                   	push   %eax
    6a99:	e8 32 8c 00 00       	call   f6d0 <async_data_read_receive@plt>
    6a9e:	83 c4 10             	add    $0x10,%esp
    6aa1:	84 c0                	test   %al,%al
    6aa3:	75 23                	jne    6ac8 <remote_pio_window_get+0x68>
    6aa5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6aa8:	c9                   	leave  
    6aa9:	c3                   	ret    
    6aaa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6ab0:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6ab3:	51                   	push   %ecx
    6ab4:	51                   	push   %ecx
    6ab5:	6a f5                	push   $0xfffffff5
    6ab7:	53                   	push   %ebx
    6ab8:	e8 43 8a 00 00       	call   f500 <async_answer_0@plt>
    6abd:	83 c4 10             	add    $0x10,%esp
    6ac0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6ac3:	c9                   	leave  
    6ac4:	c3                   	ret    
    6ac5:	8d 76 00             	lea    0x0(%esi),%esi
    6ac8:	8b 55 f4             	mov    -0xc(%ebp),%edx
    6acb:	8b 4d 10             	mov    0x10(%ebp),%ecx
    6ace:	50                   	push   %eax
    6acf:	52                   	push   %edx
    6ad0:	53                   	push   %ebx
    6ad1:	51                   	push   %ecx
    6ad2:	e8 89 89 00 00       	call   f460 <async_data_read_finalize@plt>
    6ad7:	83 c4 10             	add    $0x10,%esp
    6ada:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6add:	c9                   	leave  
    6ade:	c3                   	ret    
    6adf:	90                   	nop
    6ae0:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6ae3:	51                   	push   %ecx
    6ae4:	51                   	push   %ecx
    6ae5:	6a ff                	push   $0xffffffff
    6ae7:	53                   	push   %ebx
    6ae8:	e8 13 8a 00 00       	call   f500 <async_answer_0@plt>
    6aed:	83 c4 10             	add    $0x10,%esp
    6af0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6af3:	c9                   	leave  
    6af4:	c3                   	ret    
    6af5:	66 90                	xchg   %ax,%ax
    6af7:	66 90                	xchg   %ax,%ax
    6af9:	66 90                	xchg   %ax,%ax
    6afb:	66 90                	xchg   %ax,%ax
    6afd:	66 90                	xchg   %ax,%ax
    6aff:	90                   	nop

00006b00 <remote_char_write>:
    6b00:	55                   	push   %ebp
    6b01:	89 e5                	mov    %esp,%ebp
    6b03:	56                   	push   %esi
    6b04:	53                   	push   %ebx
    6b05:	81 ec 18 01 00 00    	sub    $0x118,%esp
    6b0b:	8d 85 f4 fe ff ff    	lea    -0x10c(%ebp),%eax
    6b11:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    6b14:	50                   	push   %eax
    6b15:	8d 85 f0 fe ff ff    	lea    -0x110(%ebp),%eax
    6b1b:	50                   	push   %eax
    6b1c:	e8 2f 8d 00 00       	call   f850 <async_data_write_receive@plt>
    6b21:	83 c4 10             	add    $0x10,%esp
    6b24:	84 c0                	test   %al,%al
    6b26:	74 70                	je     6b98 <remote_char_write+0x98>
    6b28:	8b 73 04             	mov    0x4(%ebx),%esi
    6b2b:	85 f6                	test   %esi,%esi
    6b2d:	0f 84 95 00 00 00    	je     6bc8 <remote_char_write+0xc8>
    6b33:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
    6b39:	3d 00 01 00 00       	cmp    $0x100,%eax
    6b3e:	76 0f                	jbe    6b4f <remote_char_write+0x4f>
    6b40:	c7 85 f4 fe ff ff 00 	movl   $0x100,-0x10c(%ebp)
    6b47:	01 00 00 
    6b4a:	b8 00 01 00 00       	mov    $0x100,%eax
    6b4f:	8b 8d f0 fe ff ff    	mov    -0x110(%ebp),%ecx
    6b55:	8d b5 f8 fe ff ff    	lea    -0x108(%ebp),%esi
    6b5b:	52                   	push   %edx
    6b5c:	50                   	push   %eax
    6b5d:	56                   	push   %esi
    6b5e:	51                   	push   %ecx
    6b5f:	e8 7c 8c 00 00       	call   f7e0 <async_data_write_finalize@plt>
    6b64:	83 c4 0c             	add    $0xc,%esp
    6b67:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
    6b6d:	50                   	push   %eax
    6b6e:	8b 45 08             	mov    0x8(%ebp),%eax
    6b71:	56                   	push   %esi
    6b72:	50                   	push   %eax
    6b73:	ff 53 04             	call   *0x4(%ebx)
    6b76:	83 c4 10             	add    $0x10,%esp
    6b79:	85 c0                	test   %eax,%eax
    6b7b:	78 33                	js     6bb0 <remote_char_write+0xb0>
    6b7d:	8b 4d 10             	mov    0x10(%ebp),%ecx
    6b80:	52                   	push   %edx
    6b81:	50                   	push   %eax
    6b82:	6a 00                	push   $0x0
    6b84:	51                   	push   %ecx
    6b85:	e8 d6 8b 00 00       	call   f760 <async_answer_1@plt>
    6b8a:	83 c4 10             	add    $0x10,%esp
    6b8d:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6b90:	5b                   	pop    %ebx
    6b91:	5e                   	pop    %esi
    6b92:	5d                   	pop    %ebp
    6b93:	c3                   	ret    
    6b94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6b98:	50                   	push   %eax
    6b99:	50                   	push   %eax
    6b9a:	8b 45 10             	mov    0x10(%ebp),%eax
    6b9d:	6a f2                	push   $0xfffffff2
    6b9f:	50                   	push   %eax
    6ba0:	e8 5b 89 00 00       	call   f500 <async_answer_0@plt>
    6ba5:	83 c4 10             	add    $0x10,%esp
    6ba8:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6bab:	5b                   	pop    %ebx
    6bac:	5e                   	pop    %esi
    6bad:	5d                   	pop    %ebp
    6bae:	c3                   	ret    
    6baf:	90                   	nop
    6bb0:	8b 75 10             	mov    0x10(%ebp),%esi
    6bb3:	53                   	push   %ebx
    6bb4:	53                   	push   %ebx
    6bb5:	50                   	push   %eax
    6bb6:	56                   	push   %esi
    6bb7:	e8 44 89 00 00       	call   f500 <async_answer_0@plt>
    6bbc:	83 c4 10             	add    $0x10,%esp
    6bbf:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6bc2:	5b                   	pop    %ebx
    6bc3:	5e                   	pop    %esi
    6bc4:	5d                   	pop    %ebp
    6bc5:	c3                   	ret    
    6bc6:	66 90                	xchg   %ax,%ax
    6bc8:	50                   	push   %eax
    6bc9:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
    6bcf:	6a 00                	push   $0x0
    6bd1:	6a 00                	push   $0x0
    6bd3:	50                   	push   %eax
    6bd4:	e8 07 8c 00 00       	call   f7e0 <async_data_write_finalize@plt>
    6bd9:	8b 4d 10             	mov    0x10(%ebp),%ecx
    6bdc:	58                   	pop    %eax
    6bdd:	5a                   	pop    %edx
    6bde:	6a f5                	push   $0xfffffff5
    6be0:	51                   	push   %ecx
    6be1:	e8 1a 89 00 00       	call   f500 <async_answer_0@plt>
    6be6:	83 c4 10             	add    $0x10,%esp
    6be9:	eb a2                	jmp    6b8d <remote_char_write+0x8d>
    6beb:	90                   	nop
    6bec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00006bf0 <remote_char_read>:
    6bf0:	55                   	push   %ebp
    6bf1:	89 e5                	mov    %esp,%ebp
    6bf3:	56                   	push   %esi
    6bf4:	53                   	push   %ebx
    6bf5:	81 ec 18 01 00 00    	sub    $0x118,%esp
    6bfb:	8d 85 f4 fe ff ff    	lea    -0x10c(%ebp),%eax
    6c01:	50                   	push   %eax
    6c02:	8d 85 f0 fe ff ff    	lea    -0x110(%ebp),%eax
    6c08:	50                   	push   %eax
    6c09:	e8 c2 8a 00 00       	call   f6d0 <async_data_read_receive@plt>
    6c0e:	83 c4 10             	add    $0x10,%esp
    6c11:	84 c0                	test   %al,%al
    6c13:	0f 84 97 00 00 00    	je     6cb0 <remote_char_read+0xc0>
    6c19:	8b 45 0c             	mov    0xc(%ebp),%eax
    6c1c:	8b 10                	mov    (%eax),%edx
    6c1e:	85 d2                	test   %edx,%edx
    6c20:	0f 84 a2 00 00 00    	je     6cc8 <remote_char_read+0xd8>
    6c26:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
    6c2c:	3d 00 01 00 00       	cmp    $0x100,%eax
    6c31:	76 0f                	jbe    6c42 <remote_char_read+0x52>
    6c33:	c7 85 f4 fe ff ff 00 	movl   $0x100,-0x10c(%ebp)
    6c3a:	01 00 00 
    6c3d:	b8 00 01 00 00       	mov    $0x100,%eax
    6c42:	8d b5 f8 fe ff ff    	lea    -0x108(%ebp),%esi
    6c48:	53                   	push   %ebx
    6c49:	50                   	push   %eax
    6c4a:	8b 45 08             	mov    0x8(%ebp),%eax
    6c4d:	56                   	push   %esi
    6c4e:	50                   	push   %eax
    6c4f:	ff d2                	call   *%edx
    6c51:	83 c4 10             	add    $0x10,%esp
    6c54:	89 c3                	mov    %eax,%ebx
    6c56:	85 c0                	test   %eax,%eax
    6c58:	78 2e                	js     6c88 <remote_char_read+0x98>
    6c5a:	8b 95 f0 fe ff ff    	mov    -0x110(%ebp),%edx
    6c60:	50                   	push   %eax
    6c61:	53                   	push   %ebx
    6c62:	56                   	push   %esi
    6c63:	52                   	push   %edx
    6c64:	e8 f7 87 00 00       	call   f460 <async_data_read_finalize@plt>
    6c69:	83 c4 0c             	add    $0xc,%esp
    6c6c:	8b 4d 10             	mov    0x10(%ebp),%ecx
    6c6f:	53                   	push   %ebx
    6c70:	6a 00                	push   $0x0
    6c72:	51                   	push   %ecx
    6c73:	e8 e8 8a 00 00       	call   f760 <async_answer_1@plt>
    6c78:	83 c4 10             	add    $0x10,%esp
    6c7b:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6c7e:	5b                   	pop    %ebx
    6c7f:	5e                   	pop    %esi
    6c80:	5d                   	pop    %ebp
    6c81:	c3                   	ret    
    6c82:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6c88:	50                   	push   %eax
    6c89:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
    6c8f:	6a 00                	push   $0x0
    6c91:	56                   	push   %esi
    6c92:	50                   	push   %eax
    6c93:	e8 c8 87 00 00       	call   f460 <async_data_read_finalize@plt>
    6c98:	8b 4d 10             	mov    0x10(%ebp),%ecx
    6c9b:	58                   	pop    %eax
    6c9c:	5a                   	pop    %edx
    6c9d:	53                   	push   %ebx
    6c9e:	51                   	push   %ecx
    6c9f:	e8 5c 88 00 00       	call   f500 <async_answer_0@plt>
    6ca4:	83 c4 10             	add    $0x10,%esp
    6ca7:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6caa:	5b                   	pop    %ebx
    6cab:	5e                   	pop    %esi
    6cac:	5d                   	pop    %ebp
    6cad:	c3                   	ret    
    6cae:	66 90                	xchg   %ax,%ax
    6cb0:	8b 75 10             	mov    0x10(%ebp),%esi
    6cb3:	53                   	push   %ebx
    6cb4:	53                   	push   %ebx
    6cb5:	6a f2                	push   $0xfffffff2
    6cb7:	56                   	push   %esi
    6cb8:	e8 43 88 00 00       	call   f500 <async_answer_0@plt>
    6cbd:	83 c4 10             	add    $0x10,%esp
    6cc0:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6cc3:	5b                   	pop    %ebx
    6cc4:	5e                   	pop    %esi
    6cc5:	5d                   	pop    %ebp
    6cc6:	c3                   	ret    
    6cc7:	90                   	nop
    6cc8:	50                   	push   %eax
    6cc9:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
    6ccf:	6a 00                	push   $0x0
    6cd1:	6a 00                	push   $0x0
    6cd3:	50                   	push   %eax
    6cd4:	e8 87 87 00 00       	call   f460 <async_data_read_finalize@plt>
    6cd9:	8b 4d 10             	mov    0x10(%ebp),%ecx
    6cdc:	58                   	pop    %eax
    6cdd:	5a                   	pop    %edx
    6cde:	6a f5                	push   $0xfffffff5
    6ce0:	51                   	push   %ecx
    6ce1:	e8 1a 88 00 00       	call   f500 <async_answer_0@plt>
    6ce6:	83 c4 10             	add    $0x10,%esp
    6ce9:	eb 90                	jmp    6c7b <remote_char_read+0x8b>
    6ceb:	90                   	nop
    6cec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00006cf0 <char_dev_read>:
    6cf0:	55                   	push   %ebp
    6cf1:	89 e5                	mov    %esp,%ebp
    6cf3:	56                   	push   %esi
    6cf4:	53                   	push   %ebx
    6cf5:	83 ec 4c             	sub    $0x4c,%esp
    6cf8:	8b 4d 08             	mov    0x8(%ebp),%ecx
    6cfb:	51                   	push   %ecx
    6cfc:	e8 6f 8a 00 00       	call   f770 <async_exchange_begin@plt>
    6d01:	83 c4 0c             	add    $0xc,%esp
    6d04:	89 c3                	mov    %eax,%ebx
    6d06:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    6d09:	50                   	push   %eax
    6d0a:	6a 00                	push   $0x0
    6d0c:	6a 00                	push   $0x0
    6d0e:	6a 00                	push   $0x0
    6d10:	6a 00                	push   $0x0
    6d12:	68 02 04 00 00       	push   $0x402
    6d17:	53                   	push   %ebx
    6d18:	e8 f3 87 00 00       	call   f510 <async_send_fast@plt>
    6d1d:	83 c4 1c             	add    $0x1c,%esp
    6d20:	89 c6                	mov    %eax,%esi
    6d22:	8b 45 10             	mov    0x10(%ebp),%eax
    6d25:	50                   	push   %eax
    6d26:	8b 45 0c             	mov    0xc(%ebp),%eax
    6d29:	50                   	push   %eax
    6d2a:	53                   	push   %ebx
    6d2b:	e8 b0 89 00 00       	call   f6e0 <async_data_read_start@plt>
    6d30:	89 1c 24             	mov    %ebx,(%esp)
    6d33:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    6d36:	e8 15 88 00 00       	call   f550 <async_exchange_end@plt>
    6d3b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    6d3e:	83 c4 10             	add    $0x10,%esp
    6d41:	85 c0                	test   %eax,%eax
    6d43:	74 23                	je     6d68 <char_dev_read+0x78>
    6d45:	52                   	push   %edx
    6d46:	52                   	push   %edx
    6d47:	8d 55 d0             	lea    -0x30(%ebp),%edx
    6d4a:	52                   	push   %edx
    6d4b:	56                   	push   %esi
    6d4c:	e8 7f 86 00 00       	call   f3d0 <async_wait_for@plt>
    6d51:	8b 55 d0             	mov    -0x30(%ebp),%edx
    6d54:	83 c4 10             	add    $0x10,%esp
    6d57:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    6d5a:	85 d2                	test   %edx,%edx
    6d5c:	75 2a                	jne    6d88 <char_dev_read+0x98>
    6d5e:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6d61:	5b                   	pop    %ebx
    6d62:	5e                   	pop    %esi
    6d63:	5d                   	pop    %ebp
    6d64:	c3                   	ret    
    6d65:	8d 76 00             	lea    0x0(%esi),%esi
    6d68:	50                   	push   %eax
    6d69:	50                   	push   %eax
    6d6a:	8d 45 d0             	lea    -0x30(%ebp),%eax
    6d6d:	50                   	push   %eax
    6d6e:	56                   	push   %esi
    6d6f:	e8 5c 86 00 00       	call   f3d0 <async_wait_for@plt>
    6d74:	8b 45 d0             	mov    -0x30(%ebp),%eax
    6d77:	83 c4 10             	add    $0x10,%esp
    6d7a:	85 c0                	test   %eax,%eax
    6d7c:	75 e0                	jne    6d5e <char_dev_read+0x6e>
    6d7e:	8b 45 d8             	mov    -0x28(%ebp),%eax
    6d81:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6d84:	5b                   	pop    %ebx
    6d85:	5e                   	pop    %esi
    6d86:	5d                   	pop    %ebp
    6d87:	c3                   	ret    
    6d88:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6d8b:	89 d0                	mov    %edx,%eax
    6d8d:	5b                   	pop    %ebx
    6d8e:	5e                   	pop    %esi
    6d8f:	5d                   	pop    %ebp
    6d90:	c3                   	ret    
    6d91:	eb 0d                	jmp    6da0 <char_dev_write>
    6d93:	90                   	nop
    6d94:	90                   	nop
    6d95:	90                   	nop
    6d96:	90                   	nop
    6d97:	90                   	nop
    6d98:	90                   	nop
    6d99:	90                   	nop
    6d9a:	90                   	nop
    6d9b:	90                   	nop
    6d9c:	90                   	nop
    6d9d:	90                   	nop
    6d9e:	90                   	nop
    6d9f:	90                   	nop

00006da0 <char_dev_write>:
    6da0:	55                   	push   %ebp
    6da1:	89 e5                	mov    %esp,%ebp
    6da3:	56                   	push   %esi
    6da4:	53                   	push   %ebx
    6da5:	83 ec 4c             	sub    $0x4c,%esp
    6da8:	8b 4d 08             	mov    0x8(%ebp),%ecx
    6dab:	51                   	push   %ecx
    6dac:	e8 bf 89 00 00       	call   f770 <async_exchange_begin@plt>
    6db1:	83 c4 0c             	add    $0xc,%esp
    6db4:	89 c3                	mov    %eax,%ebx
    6db6:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    6db9:	50                   	push   %eax
    6dba:	6a 00                	push   $0x0
    6dbc:	6a 00                	push   $0x0
    6dbe:	6a 00                	push   $0x0
    6dc0:	6a 01                	push   $0x1
    6dc2:	68 02 04 00 00       	push   $0x402
    6dc7:	53                   	push   %ebx
    6dc8:	e8 43 87 00 00       	call   f510 <async_send_fast@plt>
    6dcd:	83 c4 1c             	add    $0x1c,%esp
    6dd0:	89 c6                	mov    %eax,%esi
    6dd2:	8b 45 10             	mov    0x10(%ebp),%eax
    6dd5:	50                   	push   %eax
    6dd6:	8b 45 0c             	mov    0xc(%ebp),%eax
    6dd9:	50                   	push   %eax
    6dda:	53                   	push   %ebx
    6ddb:	e8 40 86 00 00       	call   f420 <async_data_write_start@plt>
    6de0:	89 1c 24             	mov    %ebx,(%esp)
    6de3:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    6de6:	e8 65 87 00 00       	call   f550 <async_exchange_end@plt>
    6deb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    6dee:	83 c4 10             	add    $0x10,%esp
    6df1:	85 c0                	test   %eax,%eax
    6df3:	74 23                	je     6e18 <char_dev_write+0x78>
    6df5:	52                   	push   %edx
    6df6:	52                   	push   %edx
    6df7:	8d 55 d0             	lea    -0x30(%ebp),%edx
    6dfa:	52                   	push   %edx
    6dfb:	56                   	push   %esi
    6dfc:	e8 cf 85 00 00       	call   f3d0 <async_wait_for@plt>
    6e01:	8b 55 d0             	mov    -0x30(%ebp),%edx
    6e04:	83 c4 10             	add    $0x10,%esp
    6e07:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    6e0a:	85 d2                	test   %edx,%edx
    6e0c:	75 2a                	jne    6e38 <char_dev_write+0x98>
    6e0e:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6e11:	5b                   	pop    %ebx
    6e12:	5e                   	pop    %esi
    6e13:	5d                   	pop    %ebp
    6e14:	c3                   	ret    
    6e15:	8d 76 00             	lea    0x0(%esi),%esi
    6e18:	50                   	push   %eax
    6e19:	50                   	push   %eax
    6e1a:	8d 45 d0             	lea    -0x30(%ebp),%eax
    6e1d:	50                   	push   %eax
    6e1e:	56                   	push   %esi
    6e1f:	e8 ac 85 00 00       	call   f3d0 <async_wait_for@plt>
    6e24:	8b 45 d0             	mov    -0x30(%ebp),%eax
    6e27:	83 c4 10             	add    $0x10,%esp
    6e2a:	85 c0                	test   %eax,%eax
    6e2c:	75 e0                	jne    6e0e <char_dev_write+0x6e>
    6e2e:	8b 45 d8             	mov    -0x28(%ebp),%eax
    6e31:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6e34:	5b                   	pop    %ebx
    6e35:	5e                   	pop    %esi
    6e36:	5d                   	pop    %ebp
    6e37:	c3                   	ret    
    6e38:	8d 65 f8             	lea    -0x8(%ebp),%esp
    6e3b:	89 d0                	mov    %edx,%eax
    6e3d:	5b                   	pop    %ebx
    6e3e:	5e                   	pop    %esi
    6e3f:	5d                   	pop    %ebp
    6e40:	c3                   	ret    
    6e41:	66 90                	xchg   %ax,%ax
    6e43:	66 90                	xchg   %ax,%ax
    6e45:	66 90                	xchg   %ax,%ax
    6e47:	66 90                	xchg   %ax,%ax
    6e49:	66 90                	xchg   %ax,%ax
    6e4b:	66 90                	xchg   %ax,%ax
    6e4d:	66 90                	xchg   %ax,%ax
    6e4f:	90                   	nop

00006e50 <remote_nic_poll_now>:
    6e50:	55                   	push   %ebp
    6e51:	89 e5                	mov    %esp,%ebp
    6e53:	53                   	push   %ebx
    6e54:	50                   	push   %eax
    6e55:	8b 45 0c             	mov    0xc(%ebp),%eax
    6e58:	8b 55 08             	mov    0x8(%ebp),%edx
    6e5b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6e5e:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
    6e64:	85 c0                	test   %eax,%eax
    6e66:	74 18                	je     6e80 <remote_nic_poll_now+0x30>
    6e68:	83 ec 0c             	sub    $0xc,%esp
    6e6b:	52                   	push   %edx
    6e6c:	ff d0                	call   *%eax
    6e6e:	89 5d 08             	mov    %ebx,0x8(%ebp)
    6e71:	83 c4 10             	add    $0x10,%esp
    6e74:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6e77:	89 45 0c             	mov    %eax,0xc(%ebp)
    6e7a:	c9                   	leave  
    6e7b:	e9 80 86 00 00       	jmp    f500 <async_answer_0@plt>
    6e80:	89 5d 08             	mov    %ebx,0x8(%ebp)
    6e83:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6e86:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    6e8d:	c9                   	leave  
    6e8e:	e9 6d 86 00 00       	jmp    f500 <async_answer_0@plt>
    6e93:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6e99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006ea0 <remote_nic_offload_set>:
    6ea0:	55                   	push   %ebp
    6ea1:	89 e5                	mov    %esp,%ebp
    6ea3:	53                   	push   %ebx
    6ea4:	51                   	push   %ecx
    6ea5:	8b 45 0c             	mov    0xc(%ebp),%eax
    6ea8:	8b 4d 08             	mov    0x8(%ebp),%ecx
    6eab:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6eae:	8b 55 14             	mov    0x14(%ebp),%edx
    6eb1:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax
    6eb7:	85 c0                	test   %eax,%eax
    6eb9:	74 25                	je     6ee0 <remote_nic_offload_set+0x40>
    6ebb:	83 ec 04             	sub    $0x4,%esp
    6ebe:	ff 72 0c             	pushl  0xc(%edx)
    6ec1:	8b 52 08             	mov    0x8(%edx),%edx
    6ec4:	52                   	push   %edx
    6ec5:	51                   	push   %ecx
    6ec6:	ff d0                	call   *%eax
    6ec8:	89 5d 08             	mov    %ebx,0x8(%ebp)
    6ecb:	83 c4 10             	add    $0x10,%esp
    6ece:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6ed1:	89 45 0c             	mov    %eax,0xc(%ebp)
    6ed4:	c9                   	leave  
    6ed5:	e9 26 86 00 00       	jmp    f500 <async_answer_0@plt>
    6eda:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6ee0:	89 5d 08             	mov    %ebx,0x8(%ebp)
    6ee3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6ee6:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    6eed:	c9                   	leave  
    6eee:	e9 0d 86 00 00       	jmp    f500 <async_answer_0@plt>
    6ef3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6ef9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006f00 <remote_nic_wol_virtue_remove>:
    6f00:	55                   	push   %ebp
    6f01:	89 e5                	mov    %esp,%ebp
    6f03:	53                   	push   %ebx
    6f04:	53                   	push   %ebx
    6f05:	8b 45 0c             	mov    0xc(%ebp),%eax
    6f08:	8b 55 08             	mov    0x8(%ebp),%edx
    6f0b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6f0e:	8b 4d 14             	mov    0x14(%ebp),%ecx
    6f11:	8b 40 7c             	mov    0x7c(%eax),%eax
    6f14:	85 c0                	test   %eax,%eax
    6f16:	74 20                	je     6f38 <remote_nic_wol_virtue_remove+0x38>
    6f18:	83 ec 08             	sub    $0x8,%esp
    6f1b:	8b 49 08             	mov    0x8(%ecx),%ecx
    6f1e:	51                   	push   %ecx
    6f1f:	52                   	push   %edx
    6f20:	ff d0                	call   *%eax
    6f22:	89 5d 08             	mov    %ebx,0x8(%ebp)
    6f25:	83 c4 10             	add    $0x10,%esp
    6f28:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6f2b:	89 45 0c             	mov    %eax,0xc(%ebp)
    6f2e:	c9                   	leave  
    6f2f:	e9 cc 85 00 00       	jmp    f500 <async_answer_0@plt>
    6f34:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6f38:	89 5d 08             	mov    %ebx,0x8(%ebp)
    6f3b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6f3e:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    6f45:	c9                   	leave  
    6f46:	e9 b5 85 00 00       	jmp    f500 <async_answer_0@plt>
    6f4b:	90                   	nop
    6f4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00006f50 <remote_nic_vlan_set_tag>:
    6f50:	55                   	push   %ebp
    6f51:	89 e5                	mov    %esp,%ebp
    6f53:	57                   	push   %edi
    6f54:	56                   	push   %esi
    6f55:	53                   	push   %ebx
    6f56:	83 ec 0c             	sub    $0xc,%esp
    6f59:	8b 55 0c             	mov    0xc(%ebp),%edx
    6f5c:	8b 7d 08             	mov    0x8(%ebp),%edi
    6f5f:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6f62:	8b 45 14             	mov    0x14(%ebp),%eax
    6f65:	8b 52 74             	mov    0x74(%edx),%edx
    6f68:	85 d2                	test   %edx,%edx
    6f6a:	74 3c                	je     6fa8 <remote_nic_vlan_set_tag+0x58>
    6f6c:	8b 70 10             	mov    0x10(%eax),%esi
    6f6f:	31 c9                	xor    %ecx,%ecx
    6f71:	85 f6                	test   %esi,%esi
    6f73:	0f 95 c1             	setne  %cl
    6f76:	89 ce                	mov    %ecx,%esi
    6f78:	31 c9                	xor    %ecx,%ecx
    6f7a:	56                   	push   %esi
    6f7b:	8b 70 0c             	mov    0xc(%eax),%esi
    6f7e:	85 f6                	test   %esi,%esi
    6f80:	0f 95 c1             	setne  %cl
    6f83:	89 ce                	mov    %ecx,%esi
    6f85:	56                   	push   %esi
    6f86:	8b 48 08             	mov    0x8(%eax),%ecx
    6f89:	81 e1 ff ff 00 00    	and    $0xffff,%ecx
    6f8f:	51                   	push   %ecx
    6f90:	57                   	push   %edi
    6f91:	ff d2                	call   *%edx
    6f93:	89 5d 08             	mov    %ebx,0x8(%ebp)
    6f96:	89 45 0c             	mov    %eax,0xc(%ebp)
    6f99:	83 c4 10             	add    $0x10,%esp
    6f9c:	8d 65 f4             	lea    -0xc(%ebp),%esp
    6f9f:	5b                   	pop    %ebx
    6fa0:	5e                   	pop    %esi
    6fa1:	5f                   	pop    %edi
    6fa2:	5d                   	pop    %ebp
    6fa3:	e9 58 85 00 00       	jmp    f500 <async_answer_0@plt>
    6fa8:	89 5d 08             	mov    %ebx,0x8(%ebp)
    6fab:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    6fb2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    6fb5:	5b                   	pop    %ebx
    6fb6:	5e                   	pop    %esi
    6fb7:	5f                   	pop    %edi
    6fb8:	5d                   	pop    %ebp
    6fb9:	e9 42 85 00 00       	jmp    f500 <async_answer_0@plt>
    6fbe:	66 90                	xchg   %ax,%ax

00006fc0 <remote_nic_defective_set_mode>:
    6fc0:	55                   	push   %ebp
    6fc1:	89 e5                	mov    %esp,%ebp
    6fc3:	53                   	push   %ebx
    6fc4:	53                   	push   %ebx
    6fc5:	8b 45 0c             	mov    0xc(%ebp),%eax
    6fc8:	8b 55 08             	mov    0x8(%ebp),%edx
    6fcb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6fce:	8b 4d 14             	mov    0x14(%ebp),%ecx
    6fd1:	8b 40 60             	mov    0x60(%eax),%eax
    6fd4:	85 c0                	test   %eax,%eax
    6fd6:	74 20                	je     6ff8 <remote_nic_defective_set_mode+0x38>
    6fd8:	83 ec 08             	sub    $0x8,%esp
    6fdb:	8b 49 08             	mov    0x8(%ecx),%ecx
    6fde:	51                   	push   %ecx
    6fdf:	52                   	push   %edx
    6fe0:	ff d0                	call   *%eax
    6fe2:	89 5d 08             	mov    %ebx,0x8(%ebp)
    6fe5:	83 c4 10             	add    $0x10,%esp
    6fe8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6feb:	89 45 0c             	mov    %eax,0xc(%ebp)
    6fee:	c9                   	leave  
    6fef:	e9 0c 85 00 00       	jmp    f500 <async_answer_0@plt>
    6ff4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6ff8:	89 5d 08             	mov    %ebx,0x8(%ebp)
    6ffb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    6ffe:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    7005:	c9                   	leave  
    7006:	e9 f5 84 00 00       	jmp    f500 <async_answer_0@plt>
    700b:	90                   	nop
    700c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00007010 <remote_nic_broadcast_set_mode>:
    7010:	55                   	push   %ebp
    7011:	89 e5                	mov    %esp,%ebp
    7013:	53                   	push   %ebx
    7014:	53                   	push   %ebx
    7015:	8b 45 0c             	mov    0xc(%ebp),%eax
    7018:	8b 55 08             	mov    0x8(%ebp),%edx
    701b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    701e:	8b 4d 14             	mov    0x14(%ebp),%ecx
    7021:	8b 40 58             	mov    0x58(%eax),%eax
    7024:	85 c0                	test   %eax,%eax
    7026:	74 20                	je     7048 <remote_nic_broadcast_set_mode+0x38>
    7028:	83 ec 08             	sub    $0x8,%esp
    702b:	8b 49 08             	mov    0x8(%ecx),%ecx
    702e:	51                   	push   %ecx
    702f:	52                   	push   %edx
    7030:	ff d0                	call   *%eax
    7032:	89 5d 08             	mov    %ebx,0x8(%ebp)
    7035:	83 c4 10             	add    $0x10,%esp
    7038:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    703b:	89 45 0c             	mov    %eax,0xc(%ebp)
    703e:	c9                   	leave  
    703f:	e9 bc 84 00 00       	jmp    f500 <async_answer_0@plt>
    7044:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7048:	89 5d 08             	mov    %ebx,0x8(%ebp)
    704b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    704e:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    7055:	c9                   	leave  
    7056:	e9 a5 84 00 00       	jmp    f500 <async_answer_0@plt>
    705b:	90                   	nop
    705c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00007060 <remote_nic_set_pause>:
    7060:	55                   	push   %ebp
    7061:	89 e5                	mov    %esp,%ebp
    7063:	56                   	push   %esi
    7064:	53                   	push   %ebx
    7065:	8b 55 0c             	mov    0xc(%ebp),%edx
    7068:	8b 4d 08             	mov    0x8(%ebp),%ecx
    706b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    706e:	8b 45 14             	mov    0x14(%ebp),%eax
    7071:	8b 52 40             	mov    0x40(%edx),%edx
    7074:	85 d2                	test   %edx,%edx
    7076:	74 28                	je     70a0 <remote_nic_set_pause+0x40>
    7078:	31 f6                	xor    %esi,%esi
    707a:	66 8b 70 10          	mov    0x10(%eax),%si
    707e:	56                   	push   %esi
    707f:	8b 70 0c             	mov    0xc(%eax),%esi
    7082:	56                   	push   %esi
    7083:	8b 40 08             	mov    0x8(%eax),%eax
    7086:	50                   	push   %eax
    7087:	51                   	push   %ecx
    7088:	ff d2                	call   *%edx
    708a:	89 5d 08             	mov    %ebx,0x8(%ebp)
    708d:	89 45 0c             	mov    %eax,0xc(%ebp)
    7090:	83 c4 10             	add    $0x10,%esp
    7093:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7096:	5b                   	pop    %ebx
    7097:	5e                   	pop    %esi
    7098:	5d                   	pop    %ebp
    7099:	e9 62 84 00 00       	jmp    f500 <async_answer_0@plt>
    709e:	66 90                	xchg   %ax,%ax
    70a0:	89 5d 08             	mov    %ebx,0x8(%ebp)
    70a3:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    70aa:	8d 65 f8             	lea    -0x8(%ebp),%esp
    70ad:	5b                   	pop    %ebx
    70ae:	5e                   	pop    %esi
    70af:	5d                   	pop    %ebp
    70b0:	e9 4b 84 00 00       	jmp    f500 <async_answer_0@plt>
    70b5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    70b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000070c0 <remote_nic_autoneg_restart>:
    70c0:	55                   	push   %ebp
    70c1:	89 e5                	mov    %esp,%ebp
    70c3:	53                   	push   %ebx
    70c4:	50                   	push   %eax
    70c5:	8b 45 0c             	mov    0xc(%ebp),%eax
    70c8:	8b 55 08             	mov    0x8(%ebp),%edx
    70cb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    70ce:	8b 40 38             	mov    0x38(%eax),%eax
    70d1:	85 c0                	test   %eax,%eax
    70d3:	74 1b                	je     70f0 <remote_nic_autoneg_restart+0x30>
    70d5:	83 ec 0c             	sub    $0xc,%esp
    70d8:	52                   	push   %edx
    70d9:	ff d0                	call   *%eax
    70db:	89 5d 08             	mov    %ebx,0x8(%ebp)
    70de:	83 c4 10             	add    $0x10,%esp
    70e1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    70e4:	89 45 0c             	mov    %eax,0xc(%ebp)
    70e7:	c9                   	leave  
    70e8:	e9 13 84 00 00       	jmp    f500 <async_answer_0@plt>
    70ed:	8d 76 00             	lea    0x0(%esi),%esi
    70f0:	89 5d 08             	mov    %ebx,0x8(%ebp)
    70f3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    70f6:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    70fd:	c9                   	leave  
    70fe:	e9 fd 83 00 00       	jmp    f500 <async_answer_0@plt>
    7103:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7109:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007110 <remote_nic_autoneg_disable>:
    7110:	55                   	push   %ebp
    7111:	89 e5                	mov    %esp,%ebp
    7113:	53                   	push   %ebx
    7114:	50                   	push   %eax
    7115:	8b 45 0c             	mov    0xc(%ebp),%eax
    7118:	8b 55 08             	mov    0x8(%ebp),%edx
    711b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    711e:	8b 40 30             	mov    0x30(%eax),%eax
    7121:	85 c0                	test   %eax,%eax
    7123:	74 1b                	je     7140 <remote_nic_autoneg_disable+0x30>
    7125:	83 ec 0c             	sub    $0xc,%esp
    7128:	52                   	push   %edx
    7129:	ff d0                	call   *%eax
    712b:	89 5d 08             	mov    %ebx,0x8(%ebp)
    712e:	83 c4 10             	add    $0x10,%esp
    7131:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    7134:	89 45 0c             	mov    %eax,0xc(%ebp)
    7137:	c9                   	leave  
    7138:	e9 c3 83 00 00       	jmp    f500 <async_answer_0@plt>
    713d:	8d 76 00             	lea    0x0(%esi),%esi
    7140:	89 5d 08             	mov    %ebx,0x8(%ebp)
    7143:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    7146:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    714d:	c9                   	leave  
    714e:	e9 ad 83 00 00       	jmp    f500 <async_answer_0@plt>
    7153:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7159:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007160 <remote_nic_autoneg_enable>:
    7160:	55                   	push   %ebp
    7161:	89 e5                	mov    %esp,%ebp
    7163:	53                   	push   %ebx
    7164:	53                   	push   %ebx
    7165:	8b 45 0c             	mov    0xc(%ebp),%eax
    7168:	8b 55 08             	mov    0x8(%ebp),%edx
    716b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    716e:	8b 4d 14             	mov    0x14(%ebp),%ecx
    7171:	8b 40 2c             	mov    0x2c(%eax),%eax
    7174:	85 c0                	test   %eax,%eax
    7176:	74 20                	je     7198 <remote_nic_autoneg_enable+0x38>
    7178:	83 ec 08             	sub    $0x8,%esp
    717b:	8b 49 08             	mov    0x8(%ecx),%ecx
    717e:	51                   	push   %ecx
    717f:	52                   	push   %edx
    7180:	ff d0                	call   *%eax
    7182:	89 5d 08             	mov    %ebx,0x8(%ebp)
    7185:	83 c4 10             	add    $0x10,%esp
    7188:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    718b:	89 45 0c             	mov    %eax,0xc(%ebp)
    718e:	c9                   	leave  
    718f:	e9 6c 83 00 00       	jmp    f500 <async_answer_0@plt>
    7194:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7198:	89 5d 08             	mov    %ebx,0x8(%ebp)
    719b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    719e:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    71a5:	c9                   	leave  
    71a6:	e9 55 83 00 00       	jmp    f500 <async_answer_0@plt>
    71ab:	90                   	nop
    71ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000071b0 <remote_nic_set_operation_mode>:
    71b0:	55                   	push   %ebp
    71b1:	89 e5                	mov    %esp,%ebp
    71b3:	53                   	push   %ebx
    71b4:	52                   	push   %edx
    71b5:	8b 55 0c             	mov    0xc(%ebp),%edx
    71b8:	8b 4d 08             	mov    0x8(%ebp),%ecx
    71bb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    71be:	8b 45 14             	mov    0x14(%ebp),%eax
    71c1:	8b 52 28             	mov    0x28(%edx),%edx
    71c4:	85 d2                	test   %edx,%edx
    71c6:	74 20                	je     71e8 <remote_nic_set_operation_mode+0x38>
    71c8:	ff 70 10             	pushl  0x10(%eax)
    71cb:	ff 70 0c             	pushl  0xc(%eax)
    71ce:	8b 40 08             	mov    0x8(%eax),%eax
    71d1:	50                   	push   %eax
    71d2:	51                   	push   %ecx
    71d3:	ff d2                	call   *%edx
    71d5:	89 5d 08             	mov    %ebx,0x8(%ebp)
    71d8:	83 c4 10             	add    $0x10,%esp
    71db:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    71de:	89 45 0c             	mov    %eax,0xc(%ebp)
    71e1:	c9                   	leave  
    71e2:	e9 19 83 00 00       	jmp    f500 <async_answer_0@plt>
    71e7:	90                   	nop
    71e8:	89 5d 08             	mov    %ebx,0x8(%ebp)
    71eb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    71ee:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    71f5:	c9                   	leave  
    71f6:	e9 05 83 00 00       	jmp    f500 <async_answer_0@plt>
    71fb:	90                   	nop
    71fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00007200 <remote_nic_poll_set_mode>:
    7200:	55                   	push   %ebp
    7201:	31 d2                	xor    %edx,%edx
    7203:	89 e5                	mov    %esp,%ebp
    7205:	56                   	push   %esi
    7206:	53                   	push   %ebx
    7207:	83 ec 10             	sub    $0x10,%esp
    720a:	8b 45 14             	mov    0x14(%ebp),%eax
    720d:	8b 70 08             	mov    0x8(%eax),%esi
    7210:	8b 40 0c             	mov    0xc(%eax),%eax
    7213:	85 c0                	test   %eax,%eax
    7215:	75 31                	jne    7248 <remote_nic_poll_set_mode+0x48>
    7217:	8b 45 0c             	mov    0xc(%ebp),%eax
    721a:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax
    7220:	85 c0                	test   %eax,%eax
    7222:	0f 84 90 00 00 00    	je     72b8 <remote_nic_poll_set_mode+0xb8>
    7228:	8b 5d 08             	mov    0x8(%ebp),%ebx
    722b:	51                   	push   %ecx
    722c:	52                   	push   %edx
    722d:	56                   	push   %esi
    722e:	53                   	push   %ebx
    722f:	ff d0                	call   *%eax
    7231:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7234:	5e                   	pop    %esi
    7235:	5a                   	pop    %edx
    7236:	50                   	push   %eax
    7237:	51                   	push   %ecx
    7238:	e8 c3 82 00 00       	call   f500 <async_answer_0@plt>
    723d:	83 c4 10             	add    $0x10,%esp
    7240:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7243:	5b                   	pop    %ebx
    7244:	5e                   	pop    %esi
    7245:	5d                   	pop    %ebp
    7246:	c3                   	ret    
    7247:	90                   	nop
    7248:	8d 45 e8             	lea    -0x18(%ebp),%eax
    724b:	53                   	push   %ebx
    724c:	53                   	push   %ebx
    724d:	50                   	push   %eax
    724e:	8d 45 ec             	lea    -0x14(%ebp),%eax
    7251:	50                   	push   %eax
    7252:	e8 f9 85 00 00       	call   f850 <async_data_write_receive@plt>
    7257:	83 c4 10             	add    $0x10,%esp
    725a:	84 c0                	test   %al,%al
    725c:	74 72                	je     72d0 <remote_nic_poll_set_mode+0xd0>
    725e:	83 7d e8 08          	cmpl   $0x8,-0x18(%ebp)
    7262:	74 24                	je     7288 <remote_nic_poll_set_mode+0x88>
    7264:	50                   	push   %eax
    7265:	50                   	push   %eax
    7266:	8b 45 ec             	mov    -0x14(%ebp),%eax
    7269:	6a fd                	push   $0xfffffffd
    726b:	50                   	push   %eax
    726c:	e8 8f 82 00 00       	call   f500 <async_answer_0@plt>
    7271:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7274:	58                   	pop    %eax
    7275:	5a                   	pop    %edx
    7276:	6a fd                	push   $0xfffffffd
    7278:	51                   	push   %ecx
    7279:	e8 82 82 00 00       	call   f500 <async_answer_0@plt>
    727e:	83 c4 10             	add    $0x10,%esp
    7281:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7284:	5b                   	pop    %ebx
    7285:	5e                   	pop    %esi
    7286:	5d                   	pop    %ebp
    7287:	c3                   	ret    
    7288:	8d 5d f0             	lea    -0x10(%ebp),%ebx
    728b:	50                   	push   %eax
    728c:	8b 45 ec             	mov    -0x14(%ebp),%eax
    728f:	6a 08                	push   $0x8
    7291:	53                   	push   %ebx
    7292:	50                   	push   %eax
    7293:	e8 48 85 00 00       	call   f7e0 <async_data_write_finalize@plt>
    7298:	83 c4 10             	add    $0x10,%esp
    729b:	89 da                	mov    %ebx,%edx
    729d:	85 c0                	test   %eax,%eax
    729f:	0f 84 72 ff ff ff    	je     7217 <remote_nic_poll_set_mode+0x17>
    72a5:	8b 75 10             	mov    0x10(%ebp),%esi
    72a8:	53                   	push   %ebx
    72a9:	53                   	push   %ebx
    72aa:	6a f2                	push   $0xfffffff2
    72ac:	56                   	push   %esi
    72ad:	e8 4e 82 00 00       	call   f500 <async_answer_0@plt>
    72b2:	83 c4 10             	add    $0x10,%esp
    72b5:	eb 89                	jmp    7240 <remote_nic_poll_set_mode+0x40>
    72b7:	90                   	nop
    72b8:	8b 55 10             	mov    0x10(%ebp),%edx
    72bb:	50                   	push   %eax
    72bc:	50                   	push   %eax
    72bd:	6a f5                	push   $0xfffffff5
    72bf:	52                   	push   %edx
    72c0:	e8 3b 82 00 00       	call   f500 <async_answer_0@plt>
    72c5:	83 c4 10             	add    $0x10,%esp
    72c8:	8d 65 f8             	lea    -0x8(%ebp),%esp
    72cb:	5b                   	pop    %ebx
    72cc:	5e                   	pop    %esi
    72cd:	5d                   	pop    %ebp
    72ce:	c3                   	ret    
    72cf:	90                   	nop
    72d0:	8b 75 ec             	mov    -0x14(%ebp),%esi
    72d3:	53                   	push   %ebx
    72d4:	53                   	push   %ebx
    72d5:	6a f2                	push   $0xfffffff2
    72d7:	56                   	push   %esi
    72d8:	e8 23 82 00 00       	call   f500 <async_answer_0@plt>
    72dd:	8b 4d 10             	mov    0x10(%ebp),%ecx
    72e0:	58                   	pop    %eax
    72e1:	5a                   	pop    %edx
    72e2:	6a f2                	push   $0xfffffff2
    72e4:	51                   	push   %ecx
    72e5:	e8 16 82 00 00       	call   f500 <async_answer_0@plt>
    72ea:	83 c4 10             	add    $0x10,%esp
    72ed:	e9 4e ff ff ff       	jmp    7240 <remote_nic_poll_set_mode+0x40>
    72f2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    72f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007300 <remote_nic_vlan_set_mask>:
    7300:	55                   	push   %ebp
    7301:	31 d2                	xor    %edx,%edx
    7303:	89 e5                	mov    %esp,%ebp
    7305:	53                   	push   %ebx
    7306:	81 ec 14 02 00 00    	sub    $0x214,%esp
    730c:	8b 45 14             	mov    0x14(%ebp),%eax
    730f:	8b 40 08             	mov    0x8(%eax),%eax
    7312:	85 c0                	test   %eax,%eax
    7314:	75 32                	jne    7348 <remote_nic_vlan_set_mask+0x48>
    7316:	8b 45 0c             	mov    0xc(%ebp),%eax
    7319:	8b 40 70             	mov    0x70(%eax),%eax
    731c:	85 c0                	test   %eax,%eax
    731e:	0f 84 bc 00 00 00    	je     73e0 <remote_nic_vlan_set_mask+0xe0>
    7324:	8b 5d 08             	mov    0x8(%ebp),%ebx
    7327:	51                   	push   %ecx
    7328:	51                   	push   %ecx
    7329:	52                   	push   %edx
    732a:	53                   	push   %ebx
    732b:	ff d0                	call   *%eax
    732d:	8b 5d 10             	mov    0x10(%ebp),%ebx
    7330:	5a                   	pop    %edx
    7331:	59                   	pop    %ecx
    7332:	50                   	push   %eax
    7333:	53                   	push   %ebx
    7334:	e8 c7 81 00 00       	call   f500 <async_answer_0@plt>
    7339:	83 c4 10             	add    $0x10,%esp
    733c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    733f:	c9                   	leave  
    7340:	c3                   	ret    
    7341:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7348:	8d 85 f4 fd ff ff    	lea    -0x20c(%ebp),%eax
    734e:	53                   	push   %ebx
    734f:	53                   	push   %ebx
    7350:	50                   	push   %eax
    7351:	8d 85 f0 fd ff ff    	lea    -0x210(%ebp),%eax
    7357:	50                   	push   %eax
    7358:	e8 f3 84 00 00       	call   f850 <async_data_write_receive@plt>
    735d:	83 c4 10             	add    $0x10,%esp
    7360:	84 c0                	test   %al,%al
    7362:	0f 84 90 00 00 00    	je     73f8 <remote_nic_vlan_set_mask+0xf8>
    7368:	81 bd f4 fd ff ff 00 	cmpl   $0x200,-0x20c(%ebp)
    736f:	02 00 00 
    7372:	74 2c                	je     73a0 <remote_nic_vlan_set_mask+0xa0>
    7374:	50                   	push   %eax
    7375:	50                   	push   %eax
    7376:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
    737c:	6a fd                	push   $0xfffffffd
    737e:	50                   	push   %eax
    737f:	e8 7c 81 00 00       	call   f500 <async_answer_0@plt>
    7384:	8b 5d 10             	mov    0x10(%ebp),%ebx
    7387:	5a                   	pop    %edx
    7388:	59                   	pop    %ecx
    7389:	6a fd                	push   $0xfffffffd
    738b:	53                   	push   %ebx
    738c:	e8 6f 81 00 00       	call   f500 <async_answer_0@plt>
    7391:	83 c4 10             	add    $0x10,%esp
    7394:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    7397:	c9                   	leave  
    7398:	c3                   	ret    
    7399:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    73a0:	8d 9d f8 fd ff ff    	lea    -0x208(%ebp),%ebx
    73a6:	50                   	push   %eax
    73a7:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
    73ad:	68 00 02 00 00       	push   $0x200
    73b2:	53                   	push   %ebx
    73b3:	50                   	push   %eax
    73b4:	e8 27 84 00 00       	call   f7e0 <async_data_write_finalize@plt>
    73b9:	83 c4 10             	add    $0x10,%esp
    73bc:	89 da                	mov    %ebx,%edx
    73be:	85 c0                	test   %eax,%eax
    73c0:	0f 84 50 ff ff ff    	je     7316 <remote_nic_vlan_set_mask+0x16>
    73c6:	50                   	push   %eax
    73c7:	50                   	push   %eax
    73c8:	8b 45 10             	mov    0x10(%ebp),%eax
    73cb:	6a f2                	push   $0xfffffff2
    73cd:	50                   	push   %eax
    73ce:	e8 2d 81 00 00       	call   f500 <async_answer_0@plt>
    73d3:	83 c4 10             	add    $0x10,%esp
    73d6:	e9 61 ff ff ff       	jmp    733c <remote_nic_vlan_set_mask+0x3c>
    73db:	90                   	nop
    73dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    73e0:	8b 55 10             	mov    0x10(%ebp),%edx
    73e3:	50                   	push   %eax
    73e4:	50                   	push   %eax
    73e5:	6a f5                	push   $0xfffffff5
    73e7:	52                   	push   %edx
    73e8:	e8 13 81 00 00       	call   f500 <async_answer_0@plt>
    73ed:	83 c4 10             	add    $0x10,%esp
    73f0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    73f3:	c9                   	leave  
    73f4:	c3                   	ret    
    73f5:	8d 76 00             	lea    0x0(%esi),%esi
    73f8:	50                   	push   %eax
    73f9:	50                   	push   %eax
    73fa:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
    7400:	6a f2                	push   $0xfffffff2
    7402:	50                   	push   %eax
    7403:	e8 f8 80 00 00       	call   f500 <async_answer_0@plt>
    7408:	8b 4d 10             	mov    0x10(%ebp),%ecx
    740b:	58                   	pop    %eax
    740c:	5a                   	pop    %edx
    740d:	6a f2                	push   $0xfffffff2
    740f:	51                   	push   %ecx
    7410:	e8 eb 80 00 00       	call   f500 <async_answer_0@plt>
    7415:	83 c4 10             	add    $0x10,%esp
    7418:	e9 1f ff ff ff       	jmp    733c <remote_nic_vlan_set_mask+0x3c>
    741d:	8d 76 00             	lea    0x0(%esi),%esi

00007420 <remote_nic_set_address>:
    7420:	55                   	push   %ebp
    7421:	89 e5                	mov    %esp,%ebp
    7423:	53                   	push   %ebx
    7424:	83 ec 1c             	sub    $0x1c,%esp
    7427:	8d 45 e8             	lea    -0x18(%ebp),%eax
    742a:	50                   	push   %eax
    742b:	8d 45 ec             	lea    -0x14(%ebp),%eax
    742e:	50                   	push   %eax
    742f:	e8 1c 84 00 00       	call   f850 <async_data_write_receive@plt>
    7434:	83 c4 10             	add    $0x10,%esp
    7437:	84 c0                	test   %al,%al
    7439:	74 75                	je     74b0 <remote_nic_set_address+0x90>
    743b:	8b 45 e8             	mov    -0x18(%ebp),%eax
    743e:	83 f8 06             	cmp    $0x6,%eax
    7441:	77 45                	ja     7488 <remote_nic_set_address+0x68>
    7443:	8b 4d ec             	mov    -0x14(%ebp),%ecx
    7446:	8d 5d f2             	lea    -0xe(%ebp),%ebx
    7449:	52                   	push   %edx
    744a:	50                   	push   %eax
    744b:	53                   	push   %ebx
    744c:	51                   	push   %ecx
    744d:	e8 8e 83 00 00       	call   f7e0 <async_data_write_finalize@plt>
    7452:	83 c4 10             	add    $0x10,%esp
    7455:	85 c0                	test   %eax,%eax
    7457:	75 7f                	jne    74d8 <remote_nic_set_address+0xb8>
    7459:	8b 45 0c             	mov    0xc(%ebp),%eax
    745c:	8b 40 14             	mov    0x14(%eax),%eax
    745f:	85 c0                	test   %eax,%eax
    7461:	0f 84 89 00 00 00    	je     74f0 <remote_nic_set_address+0xd0>
    7467:	51                   	push   %ecx
    7468:	51                   	push   %ecx
    7469:	53                   	push   %ebx
    746a:	8b 5d 08             	mov    0x8(%ebp),%ebx
    746d:	53                   	push   %ebx
    746e:	ff d0                	call   *%eax
    7470:	8b 5d 10             	mov    0x10(%ebp),%ebx
    7473:	5a                   	pop    %edx
    7474:	59                   	pop    %ecx
    7475:	50                   	push   %eax
    7476:	53                   	push   %ebx
    7477:	e8 84 80 00 00       	call   f500 <async_answer_0@plt>
    747c:	83 c4 10             	add    $0x10,%esp
    747f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    7482:	c9                   	leave  
    7483:	c3                   	ret    
    7484:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7488:	8b 45 ec             	mov    -0x14(%ebp),%eax
    748b:	53                   	push   %ebx
    748c:	53                   	push   %ebx
    748d:	6a fd                	push   $0xfffffffd
    748f:	50                   	push   %eax
    7490:	e8 6b 80 00 00       	call   f500 <async_answer_0@plt>
    7495:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7498:	58                   	pop    %eax
    7499:	5a                   	pop    %edx
    749a:	6a fd                	push   $0xfffffffd
    749c:	51                   	push   %ecx
    749d:	e8 5e 80 00 00       	call   f500 <async_answer_0@plt>
    74a2:	83 c4 10             	add    $0x10,%esp
    74a5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    74a8:	c9                   	leave  
    74a9:	c3                   	ret    
    74aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    74b0:	8b 45 ec             	mov    -0x14(%ebp),%eax
    74b3:	53                   	push   %ebx
    74b4:	53                   	push   %ebx
    74b5:	6a f2                	push   $0xfffffff2
    74b7:	50                   	push   %eax
    74b8:	e8 43 80 00 00       	call   f500 <async_answer_0@plt>
    74bd:	8b 4d 10             	mov    0x10(%ebp),%ecx
    74c0:	58                   	pop    %eax
    74c1:	5a                   	pop    %edx
    74c2:	6a f2                	push   $0xfffffff2
    74c4:	51                   	push   %ecx
    74c5:	e8 36 80 00 00       	call   f500 <async_answer_0@plt>
    74ca:	83 c4 10             	add    $0x10,%esp
    74cd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    74d0:	c9                   	leave  
    74d1:	c3                   	ret    
    74d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    74d8:	50                   	push   %eax
    74d9:	50                   	push   %eax
    74da:	8b 45 10             	mov    0x10(%ebp),%eax
    74dd:	6a f2                	push   $0xfffffff2
    74df:	50                   	push   %eax
    74e0:	e8 1b 80 00 00       	call   f500 <async_answer_0@plt>
    74e5:	83 c4 10             	add    $0x10,%esp
    74e8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    74eb:	c9                   	leave  
    74ec:	c3                   	ret    
    74ed:	8d 76 00             	lea    0x0(%esi),%esi
    74f0:	8b 55 10             	mov    0x10(%ebp),%edx
    74f3:	50                   	push   %eax
    74f4:	50                   	push   %eax
    74f5:	6a f5                	push   $0xfffffff5
    74f7:	52                   	push   %edx
    74f8:	e8 03 80 00 00       	call   f500 <async_answer_0@plt>
    74fd:	83 c4 10             	add    $0x10,%esp
    7500:	e9 7a ff ff ff       	jmp    747f <remote_nic_set_address+0x5f>
    7505:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7509:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007510 <remote_nic_poll_get_mode>:
    7510:	55                   	push   %ebp
    7511:	89 e5                	mov    %esp,%ebp
    7513:	57                   	push   %edi
    7514:	56                   	push   %esi
    7515:	53                   	push   %ebx
    7516:	83 ec 2c             	sub    $0x2c,%esp
    7519:	8b 45 0c             	mov    0xc(%ebp),%eax
    751c:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax
    7522:	85 c0                	test   %eax,%eax
    7524:	0f 84 d6 00 00 00    	je     7600 <remote_nic_poll_get_mode+0xf0>
    752a:	8b 55 14             	mov    0x14(%ebp),%edx
    752d:	8b 4d 08             	mov    0x8(%ebp),%ecx
    7530:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
    7537:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    753e:	8b 72 08             	mov    0x8(%edx),%esi
    7541:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    7548:	8d 5d e0             	lea    -0x20(%ebp),%ebx
    754b:	52                   	push   %edx
    754c:	8d 55 d4             	lea    -0x2c(%ebp),%edx
    754f:	53                   	push   %ebx
    7550:	52                   	push   %edx
    7551:	51                   	push   %ecx
    7552:	ff d0                	call   *%eax
    7554:	83 c4 10             	add    $0x10,%esp
    7557:	89 c7                	mov    %eax,%edi
    7559:	85 c0                	test   %eax,%eax
    755b:	75 5b                	jne    75b8 <remote_nic_poll_get_mode+0xa8>
    755d:	85 f6                	test   %esi,%esi
    755f:	74 57                	je     75b8 <remote_nic_poll_get_mode+0xa8>
    7561:	50                   	push   %eax
    7562:	50                   	push   %eax
    7563:	8d 45 d8             	lea    -0x28(%ebp),%eax
    7566:	50                   	push   %eax
    7567:	8d 45 dc             	lea    -0x24(%ebp),%eax
    756a:	50                   	push   %eax
    756b:	e8 60 81 00 00       	call   f6d0 <async_data_read_receive@plt>
    7570:	83 c4 10             	add    $0x10,%esp
    7573:	84 c0                	test   %al,%al
    7575:	74 61                	je     75d8 <remote_nic_poll_get_mode+0xc8>
    7577:	83 7d d8 08          	cmpl   $0x8,-0x28(%ebp)
    757b:	74 2b                	je     75a8 <remote_nic_poll_get_mode+0x98>
    757d:	50                   	push   %eax
    757e:	50                   	push   %eax
    757f:	8b 45 dc             	mov    -0x24(%ebp),%eax
    7582:	6a fd                	push   $0xfffffffd
    7584:	50                   	push   %eax
    7585:	e8 76 7f 00 00       	call   f500 <async_answer_0@plt>
    758a:	8b 4d 10             	mov    0x10(%ebp),%ecx
    758d:	58                   	pop    %eax
    758e:	5a                   	pop    %edx
    758f:	6a fd                	push   $0xfffffffd
    7591:	51                   	push   %ecx
    7592:	e8 69 7f 00 00       	call   f500 <async_answer_0@plt>
    7597:	83 c4 10             	add    $0x10,%esp
    759a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    759d:	5b                   	pop    %ebx
    759e:	5e                   	pop    %esi
    759f:	5f                   	pop    %edi
    75a0:	5d                   	pop    %ebp
    75a1:	c3                   	ret    
    75a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    75a8:	8b 45 dc             	mov    -0x24(%ebp),%eax
    75ab:	56                   	push   %esi
    75ac:	6a 08                	push   $0x8
    75ae:	53                   	push   %ebx
    75af:	50                   	push   %eax
    75b0:	e8 ab 7e 00 00       	call   f460 <async_data_read_finalize@plt>
    75b5:	83 c4 10             	add    $0x10,%esp
    75b8:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    75bb:	8b 4d 10             	mov    0x10(%ebp),%ecx
    75be:	50                   	push   %eax
    75bf:	52                   	push   %edx
    75c0:	57                   	push   %edi
    75c1:	51                   	push   %ecx
    75c2:	e8 99 81 00 00       	call   f760 <async_answer_1@plt>
    75c7:	83 c4 10             	add    $0x10,%esp
    75ca:	8d 65 f4             	lea    -0xc(%ebp),%esp
    75cd:	5b                   	pop    %ebx
    75ce:	5e                   	pop    %esi
    75cf:	5f                   	pop    %edi
    75d0:	5d                   	pop    %ebp
    75d1:	c3                   	ret    
    75d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    75d8:	8b 75 dc             	mov    -0x24(%ebp),%esi
    75db:	53                   	push   %ebx
    75dc:	53                   	push   %ebx
    75dd:	6a f2                	push   $0xfffffff2
    75df:	56                   	push   %esi
    75e0:	e8 1b 7f 00 00       	call   f500 <async_answer_0@plt>
    75e5:	5f                   	pop    %edi
    75e6:	58                   	pop    %eax
    75e7:	8b 45 10             	mov    0x10(%ebp),%eax
    75ea:	6a f2                	push   $0xfffffff2
    75ec:	50                   	push   %eax
    75ed:	e8 0e 7f 00 00       	call   f500 <async_answer_0@plt>
    75f2:	83 c4 10             	add    $0x10,%esp
    75f5:	8d 65 f4             	lea    -0xc(%ebp),%esp
    75f8:	5b                   	pop    %ebx
    75f9:	5e                   	pop    %esi
    75fa:	5f                   	pop    %edi
    75fb:	5d                   	pop    %ebp
    75fc:	c3                   	ret    
    75fd:	8d 76 00             	lea    0x0(%esi),%esi
    7600:	8b 75 10             	mov    0x10(%ebp),%esi
    7603:	53                   	push   %ebx
    7604:	53                   	push   %ebx
    7605:	6a f5                	push   $0xfffffff5
    7607:	56                   	push   %esi
    7608:	e8 f3 7e 00 00       	call   f500 <async_answer_0@plt>
    760d:	83 c4 10             	add    $0x10,%esp
    7610:	8d 65 f4             	lea    -0xc(%ebp),%esp
    7613:	5b                   	pop    %ebx
    7614:	5e                   	pop    %esi
    7615:	5f                   	pop    %edi
    7616:	5d                   	pop    %ebp
    7617:	c3                   	ret    
    7618:	90                   	nop
    7619:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00007620 <remote_nic_wol_virtue_get_caps>:
    7620:	55                   	push   %ebp
    7621:	89 e5                	mov    %esp,%ebp
    7623:	83 ec 18             	sub    $0x18,%esp
    7626:	8b 45 0c             	mov    0xc(%ebp),%eax
    7629:	8b 80 88 00 00 00    	mov    0x88(%eax),%eax
    762f:	85 c0                	test   %eax,%eax
    7631:	74 35                	je     7668 <remote_nic_wol_virtue_get_caps+0x48>
    7633:	52                   	push   %edx
    7634:	8d 55 f4             	lea    -0xc(%ebp),%edx
    7637:	52                   	push   %edx
    7638:	8b 55 14             	mov    0x14(%ebp),%edx
    763b:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
    7642:	8b 4a 08             	mov    0x8(%edx),%ecx
    7645:	8b 55 08             	mov    0x8(%ebp),%edx
    7648:	51                   	push   %ecx
    7649:	52                   	push   %edx
    764a:	ff d0                	call   *%eax
    764c:	83 c4 0c             	add    $0xc,%esp
    764f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    7652:	51                   	push   %ecx
    7653:	50                   	push   %eax
    7654:	8b 45 10             	mov    0x10(%ebp),%eax
    7657:	50                   	push   %eax
    7658:	e8 03 81 00 00       	call   f760 <async_answer_1@plt>
    765d:	83 c4 10             	add    $0x10,%esp
    7660:	c9                   	leave  
    7661:	c3                   	ret    
    7662:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7668:	50                   	push   %eax
    7669:	50                   	push   %eax
    766a:	8b 45 10             	mov    0x10(%ebp),%eax
    766d:	6a f5                	push   $0xfffffff5
    766f:	50                   	push   %eax
    7670:	e8 8b 7e 00 00       	call   f500 <async_answer_0@plt>
    7675:	83 c4 10             	add    $0x10,%esp
    7678:	c9                   	leave  
    7679:	c3                   	ret    
    767a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00007680 <remote_nic_defective_get_mode>:
    7680:	55                   	push   %ebp
    7681:	89 e5                	mov    %esp,%ebp
    7683:	83 ec 18             	sub    $0x18,%esp
    7686:	8b 45 0c             	mov    0xc(%ebp),%eax
    7689:	8b 40 5c             	mov    0x5c(%eax),%eax
    768c:	85 c0                	test   %eax,%eax
    768e:	74 30                	je     76c0 <remote_nic_defective_get_mode+0x40>
    7690:	8b 4d 08             	mov    0x8(%ebp),%ecx
    7693:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    769a:	52                   	push   %edx
    769b:	52                   	push   %edx
    769c:	8d 55 f4             	lea    -0xc(%ebp),%edx
    769f:	52                   	push   %edx
    76a0:	51                   	push   %ecx
    76a1:	ff d0                	call   *%eax
    76a3:	83 c4 0c             	add    $0xc,%esp
    76a6:	8b 55 f4             	mov    -0xc(%ebp),%edx
    76a9:	8b 4d 10             	mov    0x10(%ebp),%ecx
    76ac:	52                   	push   %edx
    76ad:	50                   	push   %eax
    76ae:	51                   	push   %ecx
    76af:	e8 ac 80 00 00       	call   f760 <async_answer_1@plt>
    76b4:	83 c4 10             	add    $0x10,%esp
    76b7:	c9                   	leave  
    76b8:	c3                   	ret    
    76b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    76c0:	50                   	push   %eax
    76c1:	50                   	push   %eax
    76c2:	8b 45 10             	mov    0x10(%ebp),%eax
    76c5:	6a f5                	push   $0xfffffff5
    76c7:	50                   	push   %eax
    76c8:	e8 33 7e 00 00       	call   f500 <async_answer_0@plt>
    76cd:	83 c4 10             	add    $0x10,%esp
    76d0:	c9                   	leave  
    76d1:	c3                   	ret    
    76d2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    76d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000076e0 <remote_nic_broadcast_get_mode>:
    76e0:	55                   	push   %ebp
    76e1:	89 e5                	mov    %esp,%ebp
    76e3:	83 ec 18             	sub    $0x18,%esp
    76e6:	8b 45 0c             	mov    0xc(%ebp),%eax
    76e9:	8b 40 54             	mov    0x54(%eax),%eax
    76ec:	85 c0                	test   %eax,%eax
    76ee:	74 30                	je     7720 <remote_nic_broadcast_get_mode+0x40>
    76f0:	8b 4d 08             	mov    0x8(%ebp),%ecx
    76f3:	c7 45 f4 02 00 00 00 	movl   $0x2,-0xc(%ebp)
    76fa:	52                   	push   %edx
    76fb:	52                   	push   %edx
    76fc:	8d 55 f4             	lea    -0xc(%ebp),%edx
    76ff:	52                   	push   %edx
    7700:	51                   	push   %ecx
    7701:	ff d0                	call   *%eax
    7703:	83 c4 0c             	add    $0xc,%esp
    7706:	8b 55 f4             	mov    -0xc(%ebp),%edx
    7709:	8b 4d 10             	mov    0x10(%ebp),%ecx
    770c:	52                   	push   %edx
    770d:	50                   	push   %eax
    770e:	51                   	push   %ecx
    770f:	e8 4c 80 00 00       	call   f760 <async_answer_1@plt>
    7714:	83 c4 10             	add    $0x10,%esp
    7717:	c9                   	leave  
    7718:	c3                   	ret    
    7719:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7720:	50                   	push   %eax
    7721:	50                   	push   %eax
    7722:	8b 45 10             	mov    0x10(%ebp),%eax
    7725:	6a f5                	push   $0xfffffff5
    7727:	50                   	push   %eax
    7728:	e8 d3 7d 00 00       	call   f500 <async_answer_0@plt>
    772d:	83 c4 10             	add    $0x10,%esp
    7730:	c9                   	leave  
    7731:	c3                   	ret    
    7732:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7739:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007740 <remote_nic_get_cable_state>:
    7740:	55                   	push   %ebp
    7741:	89 e5                	mov    %esp,%ebp
    7743:	83 ec 18             	sub    $0x18,%esp
    7746:	8b 45 0c             	mov    0xc(%ebp),%eax
    7749:	8b 40 20             	mov    0x20(%eax),%eax
    774c:	85 c0                	test   %eax,%eax
    774e:	74 30                	je     7780 <remote_nic_get_cable_state+0x40>
    7750:	8b 4d 08             	mov    0x8(%ebp),%ecx
    7753:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    775a:	52                   	push   %edx
    775b:	52                   	push   %edx
    775c:	8d 55 f4             	lea    -0xc(%ebp),%edx
    775f:	52                   	push   %edx
    7760:	51                   	push   %ecx
    7761:	ff d0                	call   *%eax
    7763:	83 c4 0c             	add    $0xc,%esp
    7766:	8b 55 f4             	mov    -0xc(%ebp),%edx
    7769:	8b 4d 10             	mov    0x10(%ebp),%ecx
    776c:	52                   	push   %edx
    776d:	50                   	push   %eax
    776e:	51                   	push   %ecx
    776f:	e8 ec 7f 00 00       	call   f760 <async_answer_1@plt>
    7774:	83 c4 10             	add    $0x10,%esp
    7777:	c9                   	leave  
    7778:	c3                   	ret    
    7779:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7780:	50                   	push   %eax
    7781:	50                   	push   %eax
    7782:	8b 45 10             	mov    0x10(%ebp),%eax
    7785:	6a f5                	push   $0xfffffff5
    7787:	50                   	push   %eax
    7788:	e8 73 7d 00 00       	call   f500 <async_answer_0@plt>
    778d:	83 c4 10             	add    $0x10,%esp
    7790:	c9                   	leave  
    7791:	c3                   	ret    
    7792:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7799:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000077a0 <remote_nic_offload_probe>:
    77a0:	55                   	push   %ebp
    77a1:	89 e5                	mov    %esp,%ebp
    77a3:	83 ec 18             	sub    $0x18,%esp
    77a6:	8b 45 0c             	mov    0xc(%ebp),%eax
    77a9:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax
    77af:	85 c0                	test   %eax,%eax
    77b1:	74 35                	je     77e8 <remote_nic_offload_probe+0x48>
    77b3:	52                   	push   %edx
    77b4:	8d 55 f4             	lea    -0xc(%ebp),%edx
    77b7:	52                   	push   %edx
    77b8:	8b 4d 08             	mov    0x8(%ebp),%ecx
    77bb:	8d 55 f0             	lea    -0x10(%ebp),%edx
    77be:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
    77c5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    77cc:	52                   	push   %edx
    77cd:	51                   	push   %ecx
    77ce:	ff d0                	call   *%eax
    77d0:	8b 55 f4             	mov    -0xc(%ebp),%edx
    77d3:	8b 4d f0             	mov    -0x10(%ebp),%ecx
    77d6:	52                   	push   %edx
    77d7:	51                   	push   %ecx
    77d8:	50                   	push   %eax
    77d9:	8b 45 10             	mov    0x10(%ebp),%eax
    77dc:	50                   	push   %eax
    77dd:	e8 fe 7d 00 00       	call   f5e0 <async_answer_2@plt>
    77e2:	83 c4 20             	add    $0x20,%esp
    77e5:	c9                   	leave  
    77e6:	c3                   	ret    
    77e7:	90                   	nop
    77e8:	50                   	push   %eax
    77e9:	50                   	push   %eax
    77ea:	8b 45 10             	mov    0x10(%ebp),%eax
    77ed:	6a f5                	push   $0xfffffff5
    77ef:	50                   	push   %eax
    77f0:	e8 0b 7d 00 00       	call   f500 <async_answer_0@plt>
    77f5:	83 c4 10             	add    $0x10,%esp
    77f8:	c9                   	leave  
    77f9:	c3                   	ret    
    77fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00007800 <remote_nic_vlan_get_mask>:
    7800:	55                   	push   %ebp
    7801:	89 e5                	mov    %esp,%ebp
    7803:	56                   	push   %esi
    7804:	53                   	push   %ebx
    7805:	81 ec 10 02 00 00    	sub    $0x210,%esp
    780b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    780e:	8b 43 6c             	mov    0x6c(%ebx),%eax
    7811:	85 c0                	test   %eax,%eax
    7813:	0f 84 a7 00 00 00    	je     78c0 <remote_nic_vlan_get_mask+0xc0>
    7819:	8d b5 f8 fd ff ff    	lea    -0x208(%ebp),%esi
    781f:	50                   	push   %eax
    7820:	68 00 02 00 00       	push   $0x200
    7825:	6a 00                	push   $0x0
    7827:	56                   	push   %esi
    7828:	e8 93 7e 00 00       	call   f6c0 <memset@plt>
    782d:	8b 4d 08             	mov    0x8(%ebp),%ecx
    7830:	58                   	pop    %eax
    7831:	5a                   	pop    %edx
    7832:	56                   	push   %esi
    7833:	51                   	push   %ecx
    7834:	ff 53 6c             	call   *0x6c(%ebx)
    7837:	83 c4 10             	add    $0x10,%esp
    783a:	89 c3                	mov    %eax,%ebx
    783c:	85 c0                	test   %eax,%eax
    783e:	75 66                	jne    78a6 <remote_nic_vlan_get_mask+0xa6>
    7840:	50                   	push   %eax
    7841:	50                   	push   %eax
    7842:	8d 85 f4 fd ff ff    	lea    -0x20c(%ebp),%eax
    7848:	50                   	push   %eax
    7849:	8d 85 f0 fd ff ff    	lea    -0x210(%ebp),%eax
    784f:	50                   	push   %eax
    7850:	e8 7b 7e 00 00       	call   f6d0 <async_data_read_receive@plt>
    7855:	83 c4 10             	add    $0x10,%esp
    7858:	84 c0                	test   %al,%al
    785a:	74 0c                	je     7868 <remote_nic_vlan_get_mask+0x68>
    785c:	81 bd f4 fd ff ff 00 	cmpl   $0x200,-0x20c(%ebp)
    7863:	02 00 00 
    7866:	74 28                	je     7890 <remote_nic_vlan_get_mask+0x90>
    7868:	50                   	push   %eax
    7869:	50                   	push   %eax
    786a:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
    7870:	6a f2                	push   $0xfffffff2
    7872:	50                   	push   %eax
    7873:	e8 88 7c 00 00       	call   f500 <async_answer_0@plt>
    7878:	8b 4d 10             	mov    0x10(%ebp),%ecx
    787b:	58                   	pop    %eax
    787c:	5a                   	pop    %edx
    787d:	6a f2                	push   $0xfffffff2
    787f:	51                   	push   %ecx
    7880:	e8 7b 7c 00 00       	call   f500 <async_answer_0@plt>
    7885:	83 c4 10             	add    $0x10,%esp
    7888:	8d 65 f8             	lea    -0x8(%ebp),%esp
    788b:	5b                   	pop    %ebx
    788c:	5e                   	pop    %esi
    788d:	5d                   	pop    %ebp
    788e:	c3                   	ret    
    788f:	90                   	nop
    7890:	51                   	push   %ecx
    7891:	68 00 02 00 00       	push   $0x200
    7896:	56                   	push   %esi
    7897:	8b b5 f0 fd ff ff    	mov    -0x210(%ebp),%esi
    789d:	56                   	push   %esi
    789e:	e8 bd 7b 00 00       	call   f460 <async_data_read_finalize@plt>
    78a3:	83 c4 10             	add    $0x10,%esp
    78a6:	8b 55 10             	mov    0x10(%ebp),%edx
    78a9:	50                   	push   %eax
    78aa:	50                   	push   %eax
    78ab:	53                   	push   %ebx
    78ac:	52                   	push   %edx
    78ad:	e8 4e 7c 00 00       	call   f500 <async_answer_0@plt>
    78b2:	83 c4 10             	add    $0x10,%esp
    78b5:	8d 65 f8             	lea    -0x8(%ebp),%esp
    78b8:	5b                   	pop    %ebx
    78b9:	5e                   	pop    %esi
    78ba:	5d                   	pop    %ebp
    78bb:	c3                   	ret    
    78bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    78c0:	8b 75 10             	mov    0x10(%ebp),%esi
    78c3:	53                   	push   %ebx
    78c4:	53                   	push   %ebx
    78c5:	6a f5                	push   $0xfffffff5
    78c7:	56                   	push   %esi
    78c8:	e8 33 7c 00 00       	call   f500 <async_answer_0@plt>
    78cd:	83 c4 10             	add    $0x10,%esp
    78d0:	8d 65 f8             	lea    -0x8(%ebp),%esp
    78d3:	5b                   	pop    %ebx
    78d4:	5e                   	pop    %esi
    78d5:	5d                   	pop    %ebp
    78d6:	c3                   	ret    
    78d7:	89 f6                	mov    %esi,%esi
    78d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000078e0 <remote_nic_get_device_info>:
    78e0:	55                   	push   %ebp
    78e1:	89 e5                	mov    %esp,%ebp
    78e3:	56                   	push   %esi
    78e4:	53                   	push   %ebx
    78e5:	81 ec 30 01 00 00    	sub    $0x130,%esp
    78eb:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    78ee:	8b 43 1c             	mov    0x1c(%ebx),%eax
    78f1:	85 c0                	test   %eax,%eax
    78f3:	0f 84 cf 00 00 00    	je     79c8 <remote_nic_get_device_info+0xe8>
    78f9:	8d b5 dc fe ff ff    	lea    -0x124(%ebp),%esi
    78ff:	50                   	push   %eax
    7900:	68 1c 01 00 00       	push   $0x11c
    7905:	6a 00                	push   $0x0
    7907:	56                   	push   %esi
    7908:	e8 b3 7d 00 00       	call   f6c0 <memset@plt>
    790d:	8b 4d 08             	mov    0x8(%ebp),%ecx
    7910:	58                   	pop    %eax
    7911:	5a                   	pop    %edx
    7912:	56                   	push   %esi
    7913:	51                   	push   %ecx
    7914:	ff 53 1c             	call   *0x1c(%ebx)
    7917:	83 c4 10             	add    $0x10,%esp
    791a:	89 c3                	mov    %eax,%ebx
    791c:	85 c0                	test   %eax,%eax
    791e:	75 66                	jne    7986 <remote_nic_get_device_info+0xa6>
    7920:	50                   	push   %eax
    7921:	50                   	push   %eax
    7922:	8d 85 d8 fe ff ff    	lea    -0x128(%ebp),%eax
    7928:	50                   	push   %eax
    7929:	8d 85 d4 fe ff ff    	lea    -0x12c(%ebp),%eax
    792f:	50                   	push   %eax
    7930:	e8 9b 7d 00 00       	call   f6d0 <async_data_read_receive@plt>
    7935:	83 c4 10             	add    $0x10,%esp
    7938:	84 c0                	test   %al,%al
    793a:	74 64                	je     79a0 <remote_nic_get_device_info+0xc0>
    793c:	81 bd d8 fe ff ff 1b 	cmpl   $0x11b,-0x128(%ebp)
    7943:	01 00 00 
    7946:	77 28                	ja     7970 <remote_nic_get_device_info+0x90>
    7948:	50                   	push   %eax
    7949:	50                   	push   %eax
    794a:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
    7950:	6a fd                	push   $0xfffffffd
    7952:	50                   	push   %eax
    7953:	e8 a8 7b 00 00       	call   f500 <async_answer_0@plt>
    7958:	8b 4d 10             	mov    0x10(%ebp),%ecx
    795b:	58                   	pop    %eax
    795c:	5a                   	pop    %edx
    795d:	6a fd                	push   $0xfffffffd
    795f:	51                   	push   %ecx
    7960:	e8 9b 7b 00 00       	call   f500 <async_answer_0@plt>
    7965:	83 c4 10             	add    $0x10,%esp
    7968:	8d 65 f8             	lea    -0x8(%ebp),%esp
    796b:	5b                   	pop    %ebx
    796c:	5e                   	pop    %esi
    796d:	5d                   	pop    %ebp
    796e:	c3                   	ret    
    796f:	90                   	nop
    7970:	51                   	push   %ecx
    7971:	68 1c 01 00 00       	push   $0x11c
    7976:	56                   	push   %esi
    7977:	8b b5 d4 fe ff ff    	mov    -0x12c(%ebp),%esi
    797d:	56                   	push   %esi
    797e:	e8 dd 7a 00 00       	call   f460 <async_data_read_finalize@plt>
    7983:	83 c4 10             	add    $0x10,%esp
    7986:	8b 55 10             	mov    0x10(%ebp),%edx
    7989:	50                   	push   %eax
    798a:	50                   	push   %eax
    798b:	53                   	push   %ebx
    798c:	52                   	push   %edx
    798d:	e8 6e 7b 00 00       	call   f500 <async_answer_0@plt>
    7992:	83 c4 10             	add    $0x10,%esp
    7995:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7998:	5b                   	pop    %ebx
    7999:	5e                   	pop    %esi
    799a:	5d                   	pop    %ebp
    799b:	c3                   	ret    
    799c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    79a0:	8b b5 d4 fe ff ff    	mov    -0x12c(%ebp),%esi
    79a6:	53                   	push   %ebx
    79a7:	53                   	push   %ebx
    79a8:	6a f2                	push   $0xfffffff2
    79aa:	56                   	push   %esi
    79ab:	e8 50 7b 00 00       	call   f500 <async_answer_0@plt>
    79b0:	8b 4d 10             	mov    0x10(%ebp),%ecx
    79b3:	58                   	pop    %eax
    79b4:	5a                   	pop    %edx
    79b5:	6a f2                	push   $0xfffffff2
    79b7:	51                   	push   %ecx
    79b8:	e8 43 7b 00 00       	call   f500 <async_answer_0@plt>
    79bd:	83 c4 10             	add    $0x10,%esp
    79c0:	8d 65 f8             	lea    -0x8(%ebp),%esp
    79c3:	5b                   	pop    %ebx
    79c4:	5e                   	pop    %esi
    79c5:	5d                   	pop    %ebp
    79c6:	c3                   	ret    
    79c7:	90                   	nop
    79c8:	8b 75 10             	mov    0x10(%ebp),%esi
    79cb:	53                   	push   %ebx
    79cc:	53                   	push   %ebx
    79cd:	6a f5                	push   $0xfffffff5
    79cf:	56                   	push   %esi
    79d0:	e8 2b 7b 00 00       	call   f500 <async_answer_0@plt>
    79d5:	83 c4 10             	add    $0x10,%esp
    79d8:	8d 65 f8             	lea    -0x8(%ebp),%esp
    79db:	5b                   	pop    %ebx
    79dc:	5e                   	pop    %esi
    79dd:	5d                   	pop    %ebp
    79de:	c3                   	ret    
    79df:	90                   	nop

000079e0 <remote_nic_get_stats>:
    79e0:	55                   	push   %ebp
    79e1:	89 e5                	mov    %esp,%ebp
    79e3:	56                   	push   %esi
    79e4:	53                   	push   %ebx
    79e5:	83 c4 80             	add    $0xffffff80,%esp
    79e8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    79eb:	8b 43 18             	mov    0x18(%ebx),%eax
    79ee:	85 c0                	test   %eax,%eax
    79f0:	0f 84 b2 00 00 00    	je     7aa8 <remote_nic_get_stats+0xc8>
    79f6:	8d 75 8c             	lea    -0x74(%ebp),%esi
    79f9:	50                   	push   %eax
    79fa:	6a 6c                	push   $0x6c
    79fc:	6a 00                	push   $0x0
    79fe:	56                   	push   %esi
    79ff:	e8 bc 7c 00 00       	call   f6c0 <memset@plt>
    7a04:	8b 4d 08             	mov    0x8(%ebp),%ecx
    7a07:	58                   	pop    %eax
    7a08:	5a                   	pop    %edx
    7a09:	56                   	push   %esi
    7a0a:	51                   	push   %ecx
    7a0b:	ff 53 18             	call   *0x18(%ebx)
    7a0e:	83 c4 10             	add    $0x10,%esp
    7a11:	89 c3                	mov    %eax,%ebx
    7a13:	85 c0                	test   %eax,%eax
    7a15:	75 51                	jne    7a68 <remote_nic_get_stats+0x88>
    7a17:	50                   	push   %eax
    7a18:	50                   	push   %eax
    7a19:	8d 45 88             	lea    -0x78(%ebp),%eax
    7a1c:	50                   	push   %eax
    7a1d:	8d 45 84             	lea    -0x7c(%ebp),%eax
    7a20:	50                   	push   %eax
    7a21:	e8 aa 7c 00 00       	call   f6d0 <async_data_read_receive@plt>
    7a26:	83 c4 10             	add    $0x10,%esp
    7a29:	84 c0                	test   %al,%al
    7a2b:	74 53                	je     7a80 <remote_nic_get_stats+0xa0>
    7a2d:	83 7d 88 6b          	cmpl   $0x6b,-0x78(%ebp)
    7a31:	77 25                	ja     7a58 <remote_nic_get_stats+0x78>
    7a33:	50                   	push   %eax
    7a34:	50                   	push   %eax
    7a35:	8b 45 84             	mov    -0x7c(%ebp),%eax
    7a38:	6a fd                	push   $0xfffffffd
    7a3a:	50                   	push   %eax
    7a3b:	e8 c0 7a 00 00       	call   f500 <async_answer_0@plt>
    7a40:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7a43:	58                   	pop    %eax
    7a44:	5a                   	pop    %edx
    7a45:	6a fd                	push   $0xfffffffd
    7a47:	51                   	push   %ecx
    7a48:	e8 b3 7a 00 00       	call   f500 <async_answer_0@plt>
    7a4d:	83 c4 10             	add    $0x10,%esp
    7a50:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7a53:	5b                   	pop    %ebx
    7a54:	5e                   	pop    %esi
    7a55:	5d                   	pop    %ebp
    7a56:	c3                   	ret    
    7a57:	90                   	nop
    7a58:	51                   	push   %ecx
    7a59:	6a 6c                	push   $0x6c
    7a5b:	56                   	push   %esi
    7a5c:	8b 75 84             	mov    -0x7c(%ebp),%esi
    7a5f:	56                   	push   %esi
    7a60:	e8 fb 79 00 00       	call   f460 <async_data_read_finalize@plt>
    7a65:	83 c4 10             	add    $0x10,%esp
    7a68:	8b 55 10             	mov    0x10(%ebp),%edx
    7a6b:	50                   	push   %eax
    7a6c:	50                   	push   %eax
    7a6d:	53                   	push   %ebx
    7a6e:	52                   	push   %edx
    7a6f:	e8 8c 7a 00 00       	call   f500 <async_answer_0@plt>
    7a74:	83 c4 10             	add    $0x10,%esp
    7a77:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7a7a:	5b                   	pop    %ebx
    7a7b:	5e                   	pop    %esi
    7a7c:	5d                   	pop    %ebp
    7a7d:	c3                   	ret    
    7a7e:	66 90                	xchg   %ax,%ax
    7a80:	8b 75 84             	mov    -0x7c(%ebp),%esi
    7a83:	53                   	push   %ebx
    7a84:	53                   	push   %ebx
    7a85:	6a f2                	push   $0xfffffff2
    7a87:	56                   	push   %esi
    7a88:	e8 73 7a 00 00       	call   f500 <async_answer_0@plt>
    7a8d:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7a90:	58                   	pop    %eax
    7a91:	5a                   	pop    %edx
    7a92:	6a f2                	push   $0xfffffff2
    7a94:	51                   	push   %ecx
    7a95:	e8 66 7a 00 00       	call   f500 <async_answer_0@plt>
    7a9a:	83 c4 10             	add    $0x10,%esp
    7a9d:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7aa0:	5b                   	pop    %ebx
    7aa1:	5e                   	pop    %esi
    7aa2:	5d                   	pop    %ebp
    7aa3:	c3                   	ret    
    7aa4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7aa8:	8b 75 10             	mov    0x10(%ebp),%esi
    7aab:	53                   	push   %ebx
    7aac:	53                   	push   %ebx
    7aad:	6a f5                	push   $0xfffffff5
    7aaf:	56                   	push   %esi
    7ab0:	e8 4b 7a 00 00       	call   f500 <async_answer_0@plt>
    7ab5:	83 c4 10             	add    $0x10,%esp
    7ab8:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7abb:	5b                   	pop    %ebx
    7abc:	5e                   	pop    %esi
    7abd:	5d                   	pop    %ebp
    7abe:	c3                   	ret    
    7abf:	90                   	nop

00007ac0 <remote_nic_get_address>:
    7ac0:	55                   	push   %ebp
    7ac1:	89 e5                	mov    %esp,%ebp
    7ac3:	56                   	push   %esi
    7ac4:	53                   	push   %ebx
    7ac5:	83 ec 10             	sub    $0x10,%esp
    7ac8:	8b 75 0c             	mov    0xc(%ebp),%esi
    7acb:	8b 46 10             	mov    0x10(%esi),%eax
    7ace:	85 c0                	test   %eax,%eax
    7ad0:	0f 84 ae 00 00 00    	je     7b84 <remote_nic_get_address+0xc4>
    7ad6:	8d 5d f2             	lea    -0xe(%ebp),%ebx
    7ad9:	50                   	push   %eax
    7ada:	6a 06                	push   $0x6
    7adc:	6a 00                	push   $0x0
    7ade:	53                   	push   %ebx
    7adf:	e8 dc 7b 00 00       	call   f6c0 <memset@plt>
    7ae4:	8b 4d 08             	mov    0x8(%ebp),%ecx
    7ae7:	58                   	pop    %eax
    7ae8:	5a                   	pop    %edx
    7ae9:	53                   	push   %ebx
    7aea:	51                   	push   %ecx
    7aeb:	ff 56 10             	call   *0x10(%esi)
    7aee:	83 c4 10             	add    $0x10,%esp
    7af1:	89 c6                	mov    %eax,%esi
    7af3:	85 c0                	test   %eax,%eax
    7af5:	75 51                	jne    7b48 <remote_nic_get_address+0x88>
    7af7:	50                   	push   %eax
    7af8:	50                   	push   %eax
    7af9:	8d 45 e8             	lea    -0x18(%ebp),%eax
    7afc:	50                   	push   %eax
    7afd:	8d 45 ec             	lea    -0x14(%ebp),%eax
    7b00:	50                   	push   %eax
    7b01:	e8 ca 7b 00 00       	call   f6d0 <async_data_read_receive@plt>
    7b06:	83 c4 10             	add    $0x10,%esp
    7b09:	84 c0                	test   %al,%al
    7b0b:	74 53                	je     7b60 <remote_nic_get_address+0xa0>
    7b0d:	83 7d e8 06          	cmpl   $0x6,-0x18(%ebp)
    7b11:	74 25                	je     7b38 <remote_nic_get_address+0x78>
    7b13:	8b 45 ec             	mov    -0x14(%ebp),%eax
    7b16:	56                   	push   %esi
    7b17:	56                   	push   %esi
    7b18:	6a fd                	push   $0xfffffffd
    7b1a:	50                   	push   %eax
    7b1b:	e8 e0 79 00 00       	call   f500 <async_answer_0@plt>
    7b20:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7b23:	58                   	pop    %eax
    7b24:	5a                   	pop    %edx
    7b25:	6a fd                	push   $0xfffffffd
    7b27:	51                   	push   %ecx
    7b28:	e8 d3 79 00 00       	call   f500 <async_answer_0@plt>
    7b2d:	83 c4 10             	add    $0x10,%esp
    7b30:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7b33:	5b                   	pop    %ebx
    7b34:	5e                   	pop    %esi
    7b35:	5d                   	pop    %ebp
    7b36:	c3                   	ret    
    7b37:	90                   	nop
    7b38:	51                   	push   %ecx
    7b39:	6a 06                	push   $0x6
    7b3b:	53                   	push   %ebx
    7b3c:	8b 5d ec             	mov    -0x14(%ebp),%ebx
    7b3f:	53                   	push   %ebx
    7b40:	e8 1b 79 00 00       	call   f460 <async_data_read_finalize@plt>
    7b45:	83 c4 10             	add    $0x10,%esp
    7b48:	8b 55 10             	mov    0x10(%ebp),%edx
    7b4b:	50                   	push   %eax
    7b4c:	50                   	push   %eax
    7b4d:	56                   	push   %esi
    7b4e:	52                   	push   %edx
    7b4f:	e8 ac 79 00 00       	call   f500 <async_answer_0@plt>
    7b54:	83 c4 10             	add    $0x10,%esp
    7b57:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7b5a:	5b                   	pop    %ebx
    7b5b:	5e                   	pop    %esi
    7b5c:	5d                   	pop    %ebp
    7b5d:	c3                   	ret    
    7b5e:	66 90                	xchg   %ax,%ax
    7b60:	8b 75 ec             	mov    -0x14(%ebp),%esi
    7b63:	53                   	push   %ebx
    7b64:	53                   	push   %ebx
    7b65:	6a f2                	push   $0xfffffff2
    7b67:	56                   	push   %esi
    7b68:	e8 93 79 00 00       	call   f500 <async_answer_0@plt>
    7b6d:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7b70:	58                   	pop    %eax
    7b71:	5a                   	pop    %edx
    7b72:	6a f2                	push   $0xfffffff2
    7b74:	51                   	push   %ecx
    7b75:	e8 86 79 00 00       	call   f500 <async_answer_0@plt>
    7b7a:	83 c4 10             	add    $0x10,%esp
    7b7d:	8d 65 f8             	lea    -0x8(%ebp),%esp
    7b80:	5b                   	pop    %ebx
    7b81:	5e                   	pop    %esi
    7b82:	5d                   	pop    %ebp
    7b83:	c3                   	ret    
    7b84:	53                   	push   %ebx
    7b85:	68 75 05 00 00       	push   $0x575
    7b8a:	68 c4 ec 00 00       	push   $0xecc4
    7b8f:	68 d9 ec 00 00       	push   $0xecd9
    7b94:	e8 c7 79 00 00       	call   f560 <assert_abort@plt>
    7b99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00007ba0 <remote_nic_wol_load_info>:
    7ba0:	55                   	push   %ebp
    7ba1:	89 e5                	mov    %esp,%ebp
    7ba3:	57                   	push   %edi
    7ba4:	56                   	push   %esi
    7ba5:	53                   	push   %ebx
    7ba6:	83 ec 1c             	sub    $0x1c,%esp
    7ba9:	8b 7d 0c             	mov    0xc(%ebp),%edi
    7bac:	8b 8f 8c 00 00 00    	mov    0x8c(%edi),%ecx
    7bb2:	85 c9                	test   %ecx,%ecx
    7bb4:	0f 84 06 01 00 00    	je     7cc0 <remote_nic_wol_load_info+0x120>
    7bba:	8b 45 14             	mov    0x14(%ebp),%eax
    7bbd:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
    7bc4:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    7bcb:	8b 70 08             	mov    0x8(%eax),%esi
    7bce:	85 f6                	test   %esi,%esi
    7bd0:	75 76                	jne    7c48 <remote_nic_wol_load_info+0xa8>
    7bd2:	31 db                	xor    %ebx,%ebx
    7bd4:	50                   	push   %eax
    7bd5:	56                   	push   %esi
    7bd6:	6a 00                	push   $0x0
    7bd8:	53                   	push   %ebx
    7bd9:	e8 e2 7a 00 00       	call   f6c0 <memset@plt>
    7bde:	8d 45 d8             	lea    -0x28(%ebp),%eax
    7be1:	89 04 24             	mov    %eax,(%esp)
    7be4:	8d 45 dc             	lea    -0x24(%ebp),%eax
    7be7:	53                   	push   %ebx
    7be8:	56                   	push   %esi
    7be9:	50                   	push   %eax
    7bea:	8b 45 08             	mov    0x8(%ebp),%eax
    7bed:	50                   	push   %eax
    7bee:	ff 97 8c 00 00 00    	call   *0x8c(%edi)
    7bf4:	83 c4 20             	add    $0x20,%esp
    7bf7:	89 c7                	mov    %eax,%edi
    7bf9:	85 c0                	test   %eax,%eax
    7bfb:	0f 85 93 00 00 00    	jne    7c94 <remote_nic_wol_load_info+0xf4>
    7c01:	50                   	push   %eax
    7c02:	50                   	push   %eax
    7c03:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    7c06:	50                   	push   %eax
    7c07:	8d 45 e0             	lea    -0x20(%ebp),%eax
    7c0a:	50                   	push   %eax
    7c0b:	e8 c0 7a 00 00       	call   f6d0 <async_data_read_receive@plt>
    7c10:	83 c4 10             	add    $0x10,%esp
    7c13:	84 c0                	test   %al,%al
    7c15:	75 59                	jne    7c70 <remote_nic_wol_load_info+0xd0>
    7c17:	50                   	push   %eax
    7c18:	50                   	push   %eax
    7c19:	8b 45 e0             	mov    -0x20(%ebp),%eax
    7c1c:	6a f2                	push   $0xfffffff2
    7c1e:	50                   	push   %eax
    7c1f:	e8 dc 78 00 00       	call   f500 <async_answer_0@plt>
    7c24:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7c27:	58                   	pop    %eax
    7c28:	5a                   	pop    %edx
    7c29:	6a f2                	push   $0xfffffff2
    7c2b:	51                   	push   %ecx
    7c2c:	e8 cf 78 00 00       	call   f500 <async_answer_0@plt>
    7c31:	89 1c 24             	mov    %ebx,(%esp)
    7c34:	e8 27 7c 00 00       	call   f860 <free@plt>
    7c39:	83 c4 10             	add    $0x10,%esp
    7c3c:	8d 65 f4             	lea    -0xc(%ebp),%esp
    7c3f:	5b                   	pop    %ebx
    7c40:	5e                   	pop    %esi
    7c41:	5f                   	pop    %edi
    7c42:	5d                   	pop    %ebp
    7c43:	c3                   	ret    
    7c44:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7c48:	83 ec 0c             	sub    $0xc,%esp
    7c4b:	56                   	push   %esi
    7c4c:	e8 6f 78 00 00       	call   f4c0 <malloc@plt>
    7c51:	83 c4 10             	add    $0x10,%esp
    7c54:	89 c3                	mov    %eax,%ebx
    7c56:	85 c0                	test   %eax,%eax
    7c58:	0f 85 76 ff ff ff    	jne    7bd4 <remote_nic_wol_load_info+0x34>
    7c5e:	50                   	push   %eax
    7c5f:	50                   	push   %eax
    7c60:	8b 45 10             	mov    0x10(%ebp),%eax
    7c63:	6a fe                	push   $0xfffffffe
    7c65:	50                   	push   %eax
    7c66:	e8 95 78 00 00       	call   f500 <async_answer_0@plt>
    7c6b:	83 c4 10             	add    $0x10,%esp
    7c6e:	eb cc                	jmp    7c3c <remote_nic_wol_load_info+0x9c>
    7c70:	8b 55 d8             	mov    -0x28(%ebp),%edx
    7c73:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    7c76:	39 d0                	cmp    %edx,%eax
    7c78:	76 02                	jbe    7c7c <remote_nic_wol_load_info+0xdc>
    7c7a:	89 d0                	mov    %edx,%eax
    7c7c:	39 f0                	cmp    %esi,%eax
    7c7e:	76 02                	jbe    7c82 <remote_nic_wol_load_info+0xe2>
    7c80:	89 f0                	mov    %esi,%eax
    7c82:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    7c85:	56                   	push   %esi
    7c86:	50                   	push   %eax
    7c87:	8b 45 e0             	mov    -0x20(%ebp),%eax
    7c8a:	53                   	push   %ebx
    7c8b:	50                   	push   %eax
    7c8c:	e8 cf 77 00 00       	call   f460 <async_data_read_finalize@plt>
    7c91:	83 c4 10             	add    $0x10,%esp
    7c94:	8b 55 dc             	mov    -0x24(%ebp),%edx
    7c97:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7c9a:	8b 45 d8             	mov    -0x28(%ebp),%eax
    7c9d:	50                   	push   %eax
    7c9e:	52                   	push   %edx
    7c9f:	57                   	push   %edi
    7ca0:	51                   	push   %ecx
    7ca1:	e8 3a 79 00 00       	call   f5e0 <async_answer_2@plt>
    7ca6:	89 1c 24             	mov    %ebx,(%esp)
    7ca9:	e8 b2 7b 00 00       	call   f860 <free@plt>
    7cae:	83 c4 10             	add    $0x10,%esp
    7cb1:	8d 65 f4             	lea    -0xc(%ebp),%esp
    7cb4:	5b                   	pop    %ebx
    7cb5:	5e                   	pop    %esi
    7cb6:	5f                   	pop    %edi
    7cb7:	5d                   	pop    %ebp
    7cb8:	c3                   	ret    
    7cb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7cc0:	8b 55 10             	mov    0x10(%ebp),%edx
    7cc3:	50                   	push   %eax
    7cc4:	50                   	push   %eax
    7cc5:	6a f5                	push   $0xfffffff5
    7cc7:	52                   	push   %edx
    7cc8:	e8 33 78 00 00       	call   f500 <async_answer_0@plt>
    7ccd:	83 c4 10             	add    $0x10,%esp
    7cd0:	e9 67 ff ff ff       	jmp    7c3c <remote_nic_wol_load_info+0x9c>
    7cd5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7cd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007ce0 <remote_nic_wol_virtue_list>:
    7ce0:	55                   	push   %ebp
    7ce1:	89 e5                	mov    %esp,%ebp
    7ce3:	57                   	push   %edi
    7ce4:	56                   	push   %esi
    7ce5:	53                   	push   %ebx
    7ce6:	83 ec 2c             	sub    $0x2c,%esp
    7ce9:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    7cec:	8b 45 14             	mov    0x14(%ebp),%eax
    7cef:	8b 91 84 00 00 00    	mov    0x84(%ecx),%edx
    7cf5:	85 d2                	test   %edx,%edx
    7cf7:	0f 84 2b 01 00 00    	je     7e28 <remote_nic_wol_virtue_list+0x148>
    7cfd:	8b 78 0c             	mov    0xc(%eax),%edi
    7d00:	8b 70 08             	mov    0x8(%eax),%esi
    7d03:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    7d0a:	85 ff                	test   %edi,%edi
    7d0c:	0f 84 9e 00 00 00    	je     7db0 <remote_nic_wol_virtue_list+0xd0>
    7d12:	83 ec 0c             	sub    $0xc,%esp
    7d15:	8d 04 bd 00 00 00 00 	lea    0x0(,%edi,4),%eax
    7d1c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    7d1f:	50                   	push   %eax
    7d20:	e8 9b 77 00 00       	call   f4c0 <malloc@plt>
    7d25:	83 c4 10             	add    $0x10,%esp
    7d28:	89 c3                	mov    %eax,%ebx
    7d2a:	85 c0                	test   %eax,%eax
    7d2c:	0f 84 0e 01 00 00    	je     7e40 <remote_nic_wol_virtue_list+0x160>
    7d32:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    7d35:	51                   	push   %ecx
    7d36:	50                   	push   %eax
    7d37:	6a 00                	push   $0x0
    7d39:	53                   	push   %ebx
    7d3a:	e8 81 79 00 00       	call   f6c0 <memset@plt>
    7d3f:	8d 45 dc             	lea    -0x24(%ebp),%eax
    7d42:	89 04 24             	mov    %eax,(%esp)
    7d45:	8b 45 08             	mov    0x8(%ebp),%eax
    7d48:	53                   	push   %ebx
    7d49:	57                   	push   %edi
    7d4a:	56                   	push   %esi
    7d4b:	50                   	push   %eax
    7d4c:	8b 45 0c             	mov    0xc(%ebp),%eax
    7d4f:	ff 90 84 00 00 00    	call   *0x84(%eax)
    7d55:	8b 55 dc             	mov    -0x24(%ebp),%edx
    7d58:	83 c4 20             	add    $0x20,%esp
    7d5b:	85 d2                	test   %edx,%edx
    7d5d:	74 7d                	je     7ddc <remote_nic_wol_virtue_list+0xfc>
    7d5f:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    7d62:	56                   	push   %esi
    7d63:	56                   	push   %esi
    7d64:	50                   	push   %eax
    7d65:	8d 45 e0             	lea    -0x20(%ebp),%eax
    7d68:	50                   	push   %eax
    7d69:	e8 62 79 00 00       	call   f6d0 <async_data_read_receive@plt>
    7d6e:	83 c4 10             	add    $0x10,%esp
    7d71:	84 c0                	test   %al,%al
    7d73:	0f 84 87 00 00 00    	je     7e00 <remote_nic_wol_virtue_list+0x120>
    7d79:	8b 45 dc             	mov    -0x24(%ebp),%eax
    7d7c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
    7d83:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    7d86:	39 c2                	cmp    %eax,%edx
    7d88:	73 05                	jae    7d8f <remote_nic_wol_virtue_list+0xaf>
    7d8a:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    7d8d:	89 d0                	mov    %edx,%eax
    7d8f:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    7d92:	39 c1                	cmp    %eax,%ecx
    7d94:	73 05                	jae    7d9b <remote_nic_wol_virtue_list+0xbb>
    7d96:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
    7d99:	89 c8                	mov    %ecx,%eax
    7d9b:	57                   	push   %edi
    7d9c:	50                   	push   %eax
    7d9d:	8b 45 e0             	mov    -0x20(%ebp),%eax
    7da0:	53                   	push   %ebx
    7da1:	50                   	push   %eax
    7da2:	e8 b9 76 00 00       	call   f460 <async_data_read_finalize@plt>
    7da7:	8b 55 dc             	mov    -0x24(%ebp),%edx
    7daa:	83 c4 10             	add    $0x10,%esp
    7dad:	eb 2d                	jmp    7ddc <remote_nic_wol_virtue_list+0xfc>
    7daf:	90                   	nop
    7db0:	50                   	push   %eax
    7db1:	6a 00                	push   $0x0
    7db3:	6a 00                	push   $0x0
    7db5:	6a 00                	push   $0x0
    7db7:	e8 04 79 00 00       	call   f6c0 <memset@plt>
    7dbc:	8d 45 dc             	lea    -0x24(%ebp),%eax
    7dbf:	89 04 24             	mov    %eax,(%esp)
    7dc2:	8b 55 08             	mov    0x8(%ebp),%edx
    7dc5:	8b 45 0c             	mov    0xc(%ebp),%eax
    7dc8:	6a 00                	push   $0x0
    7dca:	6a 00                	push   $0x0
    7dcc:	56                   	push   %esi
    7dcd:	52                   	push   %edx
    7dce:	31 db                	xor    %ebx,%ebx
    7dd0:	ff 90 84 00 00 00    	call   *0x84(%eax)
    7dd6:	8b 55 dc             	mov    -0x24(%ebp),%edx
    7dd9:	83 c4 20             	add    $0x20,%esp
    7ddc:	8b 75 10             	mov    0x10(%ebp),%esi
    7ddf:	51                   	push   %ecx
    7de0:	52                   	push   %edx
    7de1:	50                   	push   %eax
    7de2:	56                   	push   %esi
    7de3:	e8 78 79 00 00       	call   f760 <async_answer_1@plt>
    7de8:	89 1c 24             	mov    %ebx,(%esp)
    7deb:	e8 70 7a 00 00       	call   f860 <free@plt>
    7df0:	83 c4 10             	add    $0x10,%esp
    7df3:	8d 65 f4             	lea    -0xc(%ebp),%esp
    7df6:	5b                   	pop    %ebx
    7df7:	5e                   	pop    %esi
    7df8:	5f                   	pop    %edi
    7df9:	5d                   	pop    %ebp
    7dfa:	c3                   	ret    
    7dfb:	90                   	nop
    7dfc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7e00:	50                   	push   %eax
    7e01:	50                   	push   %eax
    7e02:	8b 45 e0             	mov    -0x20(%ebp),%eax
    7e05:	6a f2                	push   $0xfffffff2
    7e07:	50                   	push   %eax
    7e08:	e8 f3 76 00 00       	call   f500 <async_answer_0@plt>
    7e0d:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7e10:	58                   	pop    %eax
    7e11:	5a                   	pop    %edx
    7e12:	6a f2                	push   $0xfffffff2
    7e14:	51                   	push   %ecx
    7e15:	e8 e6 76 00 00       	call   f500 <async_answer_0@plt>
    7e1a:	89 1c 24             	mov    %ebx,(%esp)
    7e1d:	e8 3e 7a 00 00       	call   f860 <free@plt>
    7e22:	83 c4 10             	add    $0x10,%esp
    7e25:	eb cc                	jmp    7df3 <remote_nic_wol_virtue_list+0x113>
    7e27:	90                   	nop
    7e28:	50                   	push   %eax
    7e29:	50                   	push   %eax
    7e2a:	8b 45 10             	mov    0x10(%ebp),%eax
    7e2d:	6a f5                	push   $0xfffffff5
    7e2f:	50                   	push   %eax
    7e30:	e8 cb 76 00 00       	call   f500 <async_answer_0@plt>
    7e35:	83 c4 10             	add    $0x10,%esp
    7e38:	eb b9                	jmp    7df3 <remote_nic_wol_virtue_list+0x113>
    7e3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7e40:	8b 45 10             	mov    0x10(%ebp),%eax
    7e43:	57                   	push   %edi
    7e44:	57                   	push   %edi
    7e45:	6a fe                	push   $0xfffffffe
    7e47:	50                   	push   %eax
    7e48:	e8 b3 76 00 00       	call   f500 <async_answer_0@plt>
    7e4d:	83 c4 10             	add    $0x10,%esp
    7e50:	eb a1                	jmp    7df3 <remote_nic_wol_virtue_list+0x113>
    7e52:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7e59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007e60 <remote_nic_wol_virtue_probe>:
    7e60:	55                   	push   %ebp
    7e61:	89 e5                	mov    %esp,%ebp
    7e63:	57                   	push   %edi
    7e64:	56                   	push   %esi
    7e65:	53                   	push   %ebx
    7e66:	83 ec 1c             	sub    $0x1c,%esp
    7e69:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    7e6c:	8b 45 14             	mov    0x14(%ebp),%eax
    7e6f:	8b 91 80 00 00 00    	mov    0x80(%ecx),%edx
    7e75:	85 d2                	test   %edx,%edx
    7e77:	0f 84 2b 01 00 00    	je     7fa8 <remote_nic_wol_virtue_probe+0x148>
    7e7d:	8b 58 0c             	mov    0xc(%eax),%ebx
    7e80:	8b 78 08             	mov    0x8(%eax),%edi
    7e83:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
    7e8a:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    7e91:	85 db                	test   %ebx,%ebx
    7e93:	0f 84 8f 00 00 00    	je     7f28 <remote_nic_wol_virtue_probe+0xc8>
    7e99:	83 ec 0c             	sub    $0xc,%esp
    7e9c:	53                   	push   %ebx
    7e9d:	e8 1e 76 00 00       	call   f4c0 <malloc@plt>
    7ea2:	83 c4 10             	add    $0x10,%esp
    7ea5:	89 c6                	mov    %eax,%esi
    7ea7:	85 c0                	test   %eax,%eax
    7ea9:	0f 84 11 01 00 00    	je     7fc0 <remote_nic_wol_virtue_probe+0x160>
    7eaf:	50                   	push   %eax
    7eb0:	53                   	push   %ebx
    7eb1:	6a 00                	push   $0x0
    7eb3:	56                   	push   %esi
    7eb4:	e8 07 78 00 00       	call   f6c0 <memset@plt>
    7eb9:	58                   	pop    %eax
    7eba:	8d 45 dc             	lea    -0x24(%ebp),%eax
    7ebd:	5a                   	pop    %edx
    7ebe:	50                   	push   %eax
    7ebf:	8d 45 d8             	lea    -0x28(%ebp),%eax
    7ec2:	56                   	push   %esi
    7ec3:	53                   	push   %ebx
    7ec4:	50                   	push   %eax
    7ec5:	8b 45 0c             	mov    0xc(%ebp),%eax
    7ec8:	8b 4d 08             	mov    0x8(%ebp),%ecx
    7ecb:	57                   	push   %edi
    7ecc:	51                   	push   %ecx
    7ecd:	ff 90 80 00 00 00    	call   *0x80(%eax)
    7ed3:	89 c7                	mov    %eax,%edi
    7ed5:	8b 45 dc             	mov    -0x24(%ebp),%eax
    7ed8:	83 c4 20             	add    $0x20,%esp
    7edb:	85 c0                	test   %eax,%eax
    7edd:	74 7b                	je     7f5a <remote_nic_wol_virtue_probe+0xfa>
    7edf:	50                   	push   %eax
    7ee0:	50                   	push   %eax
    7ee1:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    7ee4:	50                   	push   %eax
    7ee5:	8d 45 e0             	lea    -0x20(%ebp),%eax
    7ee8:	50                   	push   %eax
    7ee9:	e8 e2 77 00 00       	call   f6d0 <async_data_read_receive@plt>
    7eee:	83 c4 10             	add    $0x10,%esp
    7ef1:	84 c0                	test   %al,%al
    7ef3:	0f 84 87 00 00 00    	je     7f80 <remote_nic_wol_virtue_probe+0x120>
    7ef9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    7efc:	8b 55 dc             	mov    -0x24(%ebp),%edx
    7eff:	39 d0                	cmp    %edx,%eax
    7f01:	76 05                	jbe    7f08 <remote_nic_wol_virtue_probe+0xa8>
    7f03:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    7f06:	89 d0                	mov    %edx,%eax
    7f08:	39 c3                	cmp    %eax,%ebx
    7f0a:	73 05                	jae    7f11 <remote_nic_wol_virtue_probe+0xb1>
    7f0c:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
    7f0f:	89 d8                	mov    %ebx,%eax
    7f11:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    7f14:	52                   	push   %edx
    7f15:	50                   	push   %eax
    7f16:	56                   	push   %esi
    7f17:	51                   	push   %ecx
    7f18:	e8 43 75 00 00       	call   f460 <async_data_read_finalize@plt>
    7f1d:	8b 45 dc             	mov    -0x24(%ebp),%eax
    7f20:	83 c4 10             	add    $0x10,%esp
    7f23:	eb 35                	jmp    7f5a <remote_nic_wol_virtue_probe+0xfa>
    7f25:	8d 76 00             	lea    0x0(%esi),%esi
    7f28:	50                   	push   %eax
    7f29:	6a 00                	push   $0x0
    7f2b:	6a 00                	push   $0x0
    7f2d:	6a 00                	push   $0x0
    7f2f:	e8 8c 77 00 00       	call   f6c0 <memset@plt>
    7f34:	8d 45 dc             	lea    -0x24(%ebp),%eax
    7f37:	5a                   	pop    %edx
    7f38:	59                   	pop    %ecx
    7f39:	50                   	push   %eax
    7f3a:	8d 45 d8             	lea    -0x28(%ebp),%eax
    7f3d:	6a 00                	push   $0x0
    7f3f:	6a 00                	push   $0x0
    7f41:	50                   	push   %eax
    7f42:	8b 45 0c             	mov    0xc(%ebp),%eax
    7f45:	8b 5d 08             	mov    0x8(%ebp),%ebx
    7f48:	57                   	push   %edi
    7f49:	53                   	push   %ebx
    7f4a:	ff 90 80 00 00 00    	call   *0x80(%eax)
    7f50:	31 f6                	xor    %esi,%esi
    7f52:	89 c7                	mov    %eax,%edi
    7f54:	83 c4 20             	add    $0x20,%esp
    7f57:	8b 45 dc             	mov    -0x24(%ebp),%eax
    7f5a:	8b 5d d8             	mov    -0x28(%ebp),%ebx
    7f5d:	50                   	push   %eax
    7f5e:	53                   	push   %ebx
    7f5f:	57                   	push   %edi
    7f60:	8b 7d 10             	mov    0x10(%ebp),%edi
    7f63:	57                   	push   %edi
    7f64:	e8 77 76 00 00       	call   f5e0 <async_answer_2@plt>
    7f69:	89 34 24             	mov    %esi,(%esp)
    7f6c:	e8 ef 78 00 00       	call   f860 <free@plt>
    7f71:	83 c4 10             	add    $0x10,%esp
    7f74:	8d 65 f4             	lea    -0xc(%ebp),%esp
    7f77:	5b                   	pop    %ebx
    7f78:	5e                   	pop    %esi
    7f79:	5f                   	pop    %edi
    7f7a:	5d                   	pop    %ebp
    7f7b:	c3                   	ret    
    7f7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7f80:	8b 7d e0             	mov    -0x20(%ebp),%edi
    7f83:	53                   	push   %ebx
    7f84:	53                   	push   %ebx
    7f85:	6a f2                	push   $0xfffffff2
    7f87:	57                   	push   %edi
    7f88:	e8 73 75 00 00       	call   f500 <async_answer_0@plt>
    7f8d:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7f90:	58                   	pop    %eax
    7f91:	5a                   	pop    %edx
    7f92:	6a f2                	push   $0xfffffff2
    7f94:	51                   	push   %ecx
    7f95:	e8 66 75 00 00       	call   f500 <async_answer_0@plt>
    7f9a:	89 34 24             	mov    %esi,(%esp)
    7f9d:	e8 be 78 00 00       	call   f860 <free@plt>
    7fa2:	83 c4 10             	add    $0x10,%esp
    7fa5:	eb cd                	jmp    7f74 <remote_nic_wol_virtue_probe+0x114>
    7fa7:	90                   	nop
    7fa8:	50                   	push   %eax
    7fa9:	50                   	push   %eax
    7faa:	8b 45 10             	mov    0x10(%ebp),%eax
    7fad:	6a f5                	push   $0xfffffff5
    7faf:	50                   	push   %eax
    7fb0:	e8 4b 75 00 00       	call   f500 <async_answer_0@plt>
    7fb5:	83 c4 10             	add    $0x10,%esp
    7fb8:	eb ba                	jmp    7f74 <remote_nic_wol_virtue_probe+0x114>
    7fba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7fc0:	50                   	push   %eax
    7fc1:	50                   	push   %eax
    7fc2:	8b 45 10             	mov    0x10(%ebp),%eax
    7fc5:	6a fe                	push   $0xfffffffe
    7fc7:	50                   	push   %eax
    7fc8:	e8 33 75 00 00       	call   f500 <async_answer_0@plt>
    7fcd:	83 c4 10             	add    $0x10,%esp
    7fd0:	eb a2                	jmp    7f74 <remote_nic_wol_virtue_probe+0x114>
    7fd2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7fd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007fe0 <remote_nic_wol_virtue_add>:
    7fe0:	55                   	push   %ebp
    7fe1:	89 e5                	mov    %esp,%ebp
    7fe3:	57                   	push   %edi
    7fe4:	56                   	push   %esi
    7fe5:	53                   	push   %ebx
    7fe6:	83 ec 1c             	sub    $0x1c,%esp
    7fe9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    7fec:	8b 75 14             	mov    0x14(%ebp),%esi
    7fef:	8b 43 78             	mov    0x78(%ebx),%eax
    7ff2:	8b 7e 0c             	mov    0xc(%esi),%edi
    7ff5:	85 c0                	test   %eax,%eax
    7ff7:	0f 84 eb 00 00 00    	je     80e8 <remote_nic_wol_virtue_add+0x108>
    7ffd:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    8004:	85 ff                	test   %edi,%edi
    8006:	74 78                	je     8080 <remote_nic_wol_virtue_add+0xa0>
    8008:	8d 45 e0             	lea    -0x20(%ebp),%eax
    800b:	57                   	push   %edi
    800c:	57                   	push   %edi
    800d:	50                   	push   %eax
    800e:	8d 45 dc             	lea    -0x24(%ebp),%eax
    8011:	50                   	push   %eax
    8012:	e8 39 78 00 00       	call   f850 <async_data_write_receive@plt>
    8017:	83 c4 10             	add    $0x10,%esp
    801a:	84 c0                	test   %al,%al
    801c:	75 2a                	jne    8048 <remote_nic_wol_virtue_add+0x68>
    801e:	50                   	push   %eax
    801f:	50                   	push   %eax
    8020:	8b 45 dc             	mov    -0x24(%ebp),%eax
    8023:	6a f2                	push   $0xfffffff2
    8025:	50                   	push   %eax
    8026:	e8 d5 74 00 00       	call   f500 <async_answer_0@plt>
    802b:	8b 4d 10             	mov    0x10(%ebp),%ecx
    802e:	58                   	pop    %eax
    802f:	5a                   	pop    %edx
    8030:	6a f2                	push   $0xfffffff2
    8032:	51                   	push   %ecx
    8033:	e8 c8 74 00 00       	call   f500 <async_answer_0@plt>
    8038:	83 c4 10             	add    $0x10,%esp
    803b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    803e:	5b                   	pop    %ebx
    803f:	5e                   	pop    %esi
    8040:	5f                   	pop    %edi
    8041:	5d                   	pop    %ebp
    8042:	c3                   	ret    
    8043:	90                   	nop
    8044:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8048:	83 ec 0c             	sub    $0xc,%esp
    804b:	8b 7d e0             	mov    -0x20(%ebp),%edi
    804e:	57                   	push   %edi
    804f:	e8 6c 74 00 00       	call   f4c0 <malloc@plt>
    8054:	83 c4 10             	add    $0x10,%esp
    8057:	89 c7                	mov    %eax,%edi
    8059:	85 c0                	test   %eax,%eax
    805b:	0f 84 a7 00 00 00    	je     8108 <remote_nic_wol_virtue_add+0x128>
    8061:	50                   	push   %eax
    8062:	8b 45 e0             	mov    -0x20(%ebp),%eax
    8065:	50                   	push   %eax
    8066:	8b 45 dc             	mov    -0x24(%ebp),%eax
    8069:	57                   	push   %edi
    806a:	50                   	push   %eax
    806b:	e8 70 77 00 00       	call   f7e0 <async_data_write_finalize@plt>
    8070:	83 c4 10             	add    $0x10,%esp
    8073:	85 c0                	test   %eax,%eax
    8075:	75 51                	jne    80c8 <remote_nic_wol_virtue_add+0xe8>
    8077:	8b 45 e0             	mov    -0x20(%ebp),%eax
    807a:	eb 08                	jmp    8084 <remote_nic_wol_virtue_add+0xa4>
    807c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8080:	31 c0                	xor    %eax,%eax
    8082:	31 ff                	xor    %edi,%edi
    8084:	83 ec 0c             	sub    $0xc,%esp
    8087:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    808a:	8b 55 08             	mov    0x8(%ebp),%edx
    808d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    8094:	51                   	push   %ecx
    8095:	50                   	push   %eax
    8096:	8b 46 08             	mov    0x8(%esi),%eax
    8099:	57                   	push   %edi
    809a:	50                   	push   %eax
    809b:	52                   	push   %edx
    809c:	ff 53 78             	call   *0x78(%ebx)
    809f:	83 c4 1c             	add    $0x1c,%esp
    80a2:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    80a5:	8b 5d 10             	mov    0x10(%ebp),%ebx
    80a8:	51                   	push   %ecx
    80a9:	50                   	push   %eax
    80aa:	53                   	push   %ebx
    80ab:	e8 b0 76 00 00       	call   f760 <async_answer_1@plt>
    80b0:	89 3c 24             	mov    %edi,(%esp)
    80b3:	e8 a8 77 00 00       	call   f860 <free@plt>
    80b8:	83 c4 10             	add    $0x10,%esp
    80bb:	8d 65 f4             	lea    -0xc(%ebp),%esp
    80be:	5b                   	pop    %ebx
    80bf:	5e                   	pop    %esi
    80c0:	5f                   	pop    %edi
    80c1:	5d                   	pop    %ebp
    80c2:	c3                   	ret    
    80c3:	90                   	nop
    80c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    80c8:	8b 45 10             	mov    0x10(%ebp),%eax
    80cb:	56                   	push   %esi
    80cc:	56                   	push   %esi
    80cd:	6a f2                	push   $0xfffffff2
    80cf:	50                   	push   %eax
    80d0:	e8 2b 74 00 00       	call   f500 <async_answer_0@plt>
    80d5:	89 3c 24             	mov    %edi,(%esp)
    80d8:	e8 83 77 00 00       	call   f860 <free@plt>
    80dd:	83 c4 10             	add    $0x10,%esp
    80e0:	8d 65 f4             	lea    -0xc(%ebp),%esp
    80e3:	5b                   	pop    %ebx
    80e4:	5e                   	pop    %esi
    80e5:	5f                   	pop    %edi
    80e6:	5d                   	pop    %ebp
    80e7:	c3                   	ret    
    80e8:	85 ff                	test   %edi,%edi
    80ea:	75 44                	jne    8130 <remote_nic_wol_virtue_add+0x150>
    80ec:	50                   	push   %eax
    80ed:	50                   	push   %eax
    80ee:	8b 45 10             	mov    0x10(%ebp),%eax
    80f1:	6a f5                	push   $0xfffffff5
    80f3:	50                   	push   %eax
    80f4:	e8 07 74 00 00       	call   f500 <async_answer_0@plt>
    80f9:	83 c4 10             	add    $0x10,%esp
    80fc:	e9 fc fe ff ff       	jmp    7ffd <remote_nic_wol_virtue_add+0x1d>
    8101:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8108:	50                   	push   %eax
    8109:	50                   	push   %eax
    810a:	8b 45 dc             	mov    -0x24(%ebp),%eax
    810d:	6a fe                	push   $0xfffffffe
    810f:	50                   	push   %eax
    8110:	e8 eb 73 00 00       	call   f500 <async_answer_0@plt>
    8115:	8b 5d 10             	mov    0x10(%ebp),%ebx
    8118:	5a                   	pop    %edx
    8119:	59                   	pop    %ecx
    811a:	6a fe                	push   $0xfffffffe
    811c:	53                   	push   %ebx
    811d:	e8 de 73 00 00       	call   f500 <async_answer_0@plt>
    8122:	83 c4 10             	add    $0x10,%esp
    8125:	e9 11 ff ff ff       	jmp    803b <remote_nic_wol_virtue_add+0x5b>
    812a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8130:	50                   	push   %eax
    8131:	50                   	push   %eax
    8132:	8d 45 dc             	lea    -0x24(%ebp),%eax
    8135:	6a 00                	push   $0x0
    8137:	50                   	push   %eax
    8138:	e8 13 77 00 00       	call   f850 <async_data_write_receive@plt>
    813d:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    8140:	58                   	pop    %eax
    8141:	5a                   	pop    %edx
    8142:	6a f5                	push   $0xfffffff5
    8144:	51                   	push   %ecx
    8145:	e8 b6 73 00 00       	call   f500 <async_answer_0@plt>
    814a:	83 c4 10             	add    $0x10,%esp
    814d:	eb 9d                	jmp    80ec <remote_nic_wol_virtue_add+0x10c>
    814f:	90                   	nop

00008150 <remote_nic_blocked_sources_set>:
    8150:	55                   	push   %ebp
    8151:	89 e5                	mov    %esp,%ebp
    8153:	57                   	push   %edi
    8154:	56                   	push   %esi
    8155:	53                   	push   %ebx
    8156:	83 ec 1c             	sub    $0x1c,%esp
    8159:	31 f6                	xor    %esi,%esi
    815b:	8b 45 14             	mov    0x14(%ebp),%eax
    815e:	8b 58 08             	mov    0x8(%eax),%ebx
    8161:	85 db                	test   %ebx,%ebx
    8163:	75 3b                	jne    81a0 <remote_nic_blocked_sources_set+0x50>
    8165:	8b 45 0c             	mov    0xc(%ebp),%eax
    8168:	8b 40 68             	mov    0x68(%eax),%eax
    816b:	85 c0                	test   %eax,%eax
    816d:	0f 84 cd 00 00 00    	je     8240 <remote_nic_blocked_sources_set+0xf0>
    8173:	51                   	push   %ecx
    8174:	53                   	push   %ebx
    8175:	8b 5d 08             	mov    0x8(%ebp),%ebx
    8178:	56                   	push   %esi
    8179:	53                   	push   %ebx
    817a:	ff d0                	call   *%eax
    817c:	8b 4d 10             	mov    0x10(%ebp),%ecx
    817f:	5f                   	pop    %edi
    8180:	5a                   	pop    %edx
    8181:	50                   	push   %eax
    8182:	51                   	push   %ecx
    8183:	e8 78 73 00 00       	call   f500 <async_answer_0@plt>
    8188:	83 c4 10             	add    $0x10,%esp
    818b:	83 ec 0c             	sub    $0xc,%esp
    818e:	56                   	push   %esi
    818f:	e8 cc 76 00 00       	call   f860 <free@plt>
    8194:	83 c4 10             	add    $0x10,%esp
    8197:	8d 65 f4             	lea    -0xc(%ebp),%esp
    819a:	5b                   	pop    %ebx
    819b:	5e                   	pop    %esi
    819c:	5f                   	pop    %edi
    819d:	5d                   	pop    %ebp
    819e:	c3                   	ret    
    819f:	90                   	nop
    81a0:	8d 45 e0             	lea    -0x20(%ebp),%eax
    81a3:	56                   	push   %esi
    81a4:	56                   	push   %esi
    81a5:	50                   	push   %eax
    81a6:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    81a9:	50                   	push   %eax
    81aa:	e8 a1 76 00 00       	call   f850 <async_data_write_receive@plt>
    81af:	83 c4 10             	add    $0x10,%esp
    81b2:	84 c0                	test   %al,%al
    81b4:	0f 84 9e 00 00 00    	je     8258 <remote_nic_blocked_sources_set+0x108>
    81ba:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    81bd:	01 c0                	add    %eax,%eax
    81bf:	3b 45 e0             	cmp    -0x20(%ebp),%eax
    81c2:	74 2c                	je     81f0 <remote_nic_blocked_sources_set+0xa0>
    81c4:	8b 75 e4             	mov    -0x1c(%ebp),%esi
    81c7:	53                   	push   %ebx
    81c8:	53                   	push   %ebx
    81c9:	6a fd                	push   $0xfffffffd
    81cb:	56                   	push   %esi
    81cc:	e8 2f 73 00 00       	call   f500 <async_answer_0@plt>
    81d1:	5f                   	pop    %edi
    81d2:	58                   	pop    %eax
    81d3:	8b 45 10             	mov    0x10(%ebp),%eax
    81d6:	6a fd                	push   $0xfffffffd
    81d8:	50                   	push   %eax
    81d9:	e8 22 73 00 00       	call   f500 <async_answer_0@plt>
    81de:	83 c4 10             	add    $0x10,%esp
    81e1:	8d 65 f4             	lea    -0xc(%ebp),%esp
    81e4:	5b                   	pop    %ebx
    81e5:	5e                   	pop    %esi
    81e6:	5f                   	pop    %edi
    81e7:	5d                   	pop    %ebp
    81e8:	c3                   	ret    
    81e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    81f0:	83 ec 0c             	sub    $0xc,%esp
    81f3:	50                   	push   %eax
    81f4:	e8 c7 72 00 00       	call   f4c0 <malloc@plt>
    81f9:	83 c4 10             	add    $0x10,%esp
    81fc:	89 c7                	mov    %eax,%edi
    81fe:	89 c6                	mov    %eax,%esi
    8200:	85 c0                	test   %eax,%eax
    8202:	74 76                	je     827a <remote_nic_blocked_sources_set+0x12a>
    8204:	50                   	push   %eax
    8205:	8b 45 e0             	mov    -0x20(%ebp),%eax
    8208:	50                   	push   %eax
    8209:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    820c:	57                   	push   %edi
    820d:	50                   	push   %eax
    820e:	e8 cd 75 00 00       	call   f7e0 <async_data_write_finalize@plt>
    8213:	83 c4 10             	add    $0x10,%esp
    8216:	85 c0                	test   %eax,%eax
    8218:	0f 84 47 ff ff ff    	je     8165 <remote_nic_blocked_sources_set+0x15>
    821e:	8b 75 10             	mov    0x10(%ebp),%esi
    8221:	53                   	push   %ebx
    8222:	53                   	push   %ebx
    8223:	6a f2                	push   $0xfffffff2
    8225:	56                   	push   %esi
    8226:	e8 d5 72 00 00       	call   f500 <async_answer_0@plt>
    822b:	89 3c 24             	mov    %edi,(%esp)
    822e:	e8 2d 76 00 00       	call   f860 <free@plt>
    8233:	83 c4 10             	add    $0x10,%esp
    8236:	e9 5c ff ff ff       	jmp    8197 <remote_nic_blocked_sources_set+0x47>
    823b:	90                   	nop
    823c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8240:	8b 55 10             	mov    0x10(%ebp),%edx
    8243:	50                   	push   %eax
    8244:	50                   	push   %eax
    8245:	6a f5                	push   $0xfffffff5
    8247:	52                   	push   %edx
    8248:	e8 b3 72 00 00       	call   f500 <async_answer_0@plt>
    824d:	83 c4 10             	add    $0x10,%esp
    8250:	e9 36 ff ff ff       	jmp    818b <remote_nic_blocked_sources_set+0x3b>
    8255:	8d 76 00             	lea    0x0(%esi),%esi
    8258:	50                   	push   %eax
    8259:	50                   	push   %eax
    825a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    825d:	6a f2                	push   $0xfffffff2
    825f:	50                   	push   %eax
    8260:	e8 9b 72 00 00       	call   f500 <async_answer_0@plt>
    8265:	8b 4d 10             	mov    0x10(%ebp),%ecx
    8268:	58                   	pop    %eax
    8269:	5a                   	pop    %edx
    826a:	6a f2                	push   $0xfffffff2
    826c:	51                   	push   %ecx
    826d:	e8 8e 72 00 00       	call   f500 <async_answer_0@plt>
    8272:	83 c4 10             	add    $0x10,%esp
    8275:	e9 1d ff ff ff       	jmp    8197 <remote_nic_blocked_sources_set+0x47>
    827a:	50                   	push   %eax
    827b:	50                   	push   %eax
    827c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    827f:	6a fe                	push   $0xfffffffe
    8281:	50                   	push   %eax
    8282:	e8 79 72 00 00       	call   f500 <async_answer_0@plt>
    8287:	8b 4d 10             	mov    0x10(%ebp),%ecx
    828a:	58                   	pop    %eax
    828b:	5a                   	pop    %edx
    828c:	6a fe                	push   $0xfffffffe
    828e:	51                   	push   %ecx
    828f:	e8 6c 72 00 00       	call   f500 <async_answer_0@plt>
    8294:	83 c4 10             	add    $0x10,%esp
    8297:	e9 fb fe ff ff       	jmp    8197 <remote_nic_blocked_sources_set+0x47>
    829c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000082a0 <remote_nic_blocked_sources_get>:
    82a0:	55                   	push   %ebp
    82a1:	89 e5                	mov    %esp,%ebp
    82a3:	57                   	push   %edi
    82a4:	56                   	push   %esi
    82a5:	53                   	push   %ebx
    82a6:	83 ec 1c             	sub    $0x1c,%esp
    82a9:	8b 45 0c             	mov    0xc(%ebp),%eax
    82ac:	8b 50 64             	mov    0x64(%eax),%edx
    82af:	85 d2                	test   %edx,%edx
    82b1:	0f 84 19 01 00 00    	je     83d0 <remote_nic_blocked_sources_get+0x130>
    82b7:	8b 45 14             	mov    0x14(%ebp),%eax
    82ba:	8b 70 08             	mov    0x8(%eax),%esi
    82bd:	85 f6                	test   %esi,%esi
    82bf:	75 4f                	jne    8310 <remote_nic_blocked_sources_get+0x70>
    82c1:	50                   	push   %eax
    82c2:	6a 00                	push   $0x0
    82c4:	6a 00                	push   $0x0
    82c6:	6a 00                	push   $0x0
    82c8:	e8 f3 73 00 00       	call   f6c0 <memset@plt>
    82cd:	8d 45 dc             	lea    -0x24(%ebp),%eax
    82d0:	50                   	push   %eax
    82d1:	8b 55 08             	mov    0x8(%ebp),%edx
    82d4:	8b 45 0c             	mov    0xc(%ebp),%eax
    82d7:	6a 00                	push   $0x0
    82d9:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    82e0:	6a 00                	push   $0x0
    82e2:	52                   	push   %edx
    82e3:	31 db                	xor    %ebx,%ebx
    82e5:	ff 50 64             	call   *0x64(%eax)
    82e8:	8b 55 dc             	mov    -0x24(%ebp),%edx
    82eb:	83 c4 20             	add    $0x20,%esp
    82ee:	57                   	push   %edi
    82ef:	52                   	push   %edx
    82f0:	50                   	push   %eax
    82f1:	8b 45 10             	mov    0x10(%ebp),%eax
    82f4:	50                   	push   %eax
    82f5:	e8 66 74 00 00       	call   f760 <async_answer_1@plt>
    82fa:	89 1c 24             	mov    %ebx,(%esp)
    82fd:	e8 5e 75 00 00       	call   f860 <free@plt>
    8302:	83 c4 10             	add    $0x10,%esp
    8305:	8d 65 f4             	lea    -0xc(%ebp),%esp
    8308:	5b                   	pop    %ebx
    8309:	5e                   	pop    %esi
    830a:	5f                   	pop    %edi
    830b:	5d                   	pop    %ebp
    830c:	c3                   	ret    
    830d:	8d 76 00             	lea    0x0(%esi),%esi
    8310:	83 ec 0c             	sub    $0xc,%esp
    8313:	8d 3c 76             	lea    (%esi,%esi,2),%edi
    8316:	01 ff                	add    %edi,%edi
    8318:	57                   	push   %edi
    8319:	e8 a2 71 00 00       	call   f4c0 <malloc@plt>
    831e:	83 c4 10             	add    $0x10,%esp
    8321:	89 c3                	mov    %eax,%ebx
    8323:	85 c0                	test   %eax,%eax
    8325:	0f 84 dd 00 00 00    	je     8408 <remote_nic_blocked_sources_get+0x168>
    832b:	50                   	push   %eax
    832c:	57                   	push   %edi
    832d:	6a 00                	push   $0x0
    832f:	53                   	push   %ebx
    8330:	e8 8b 73 00 00       	call   f6c0 <memset@plt>
    8335:	8d 45 dc             	lea    -0x24(%ebp),%eax
    8338:	50                   	push   %eax
    8339:	8b 45 08             	mov    0x8(%ebp),%eax
    833c:	53                   	push   %ebx
    833d:	56                   	push   %esi
    833e:	50                   	push   %eax
    833f:	8b 45 0c             	mov    0xc(%ebp),%eax
    8342:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    8349:	ff 50 64             	call   *0x64(%eax)
    834c:	83 c4 20             	add    $0x20,%esp
    834f:	8b 55 dc             	mov    -0x24(%ebp),%edx
    8352:	85 c0                	test   %eax,%eax
    8354:	75 98                	jne    82ee <remote_nic_blocked_sources_get+0x4e>
    8356:	85 d2                	test   %edx,%edx
    8358:	74 94                	je     82ee <remote_nic_blocked_sources_get+0x4e>
    835a:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    835d:	56                   	push   %esi
    835e:	56                   	push   %esi
    835f:	50                   	push   %eax
    8360:	8d 45 e0             	lea    -0x20(%ebp),%eax
    8363:	50                   	push   %eax
    8364:	e8 67 73 00 00       	call   f6d0 <async_data_read_receive@plt>
    8369:	83 c4 10             	add    $0x10,%esp
    836c:	84 c0                	test   %al,%al
    836e:	74 78                	je     83e8 <remote_nic_blocked_sources_get+0x148>
    8370:	8b 45 dc             	mov    -0x24(%ebp),%eax
    8373:	8d 14 40             	lea    (%eax,%eax,2),%edx
    8376:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    8379:	01 d2                	add    %edx,%edx
    837b:	39 c2                	cmp    %eax,%edx
    837d:	73 05                	jae    8384 <remote_nic_blocked_sources_get+0xe4>
    837f:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    8382:	89 d0                	mov    %edx,%eax
    8384:	39 f8                	cmp    %edi,%eax
    8386:	76 05                	jbe    838d <remote_nic_blocked_sources_get+0xed>
    8388:	89 7d e4             	mov    %edi,-0x1c(%ebp)
    838b:	89 f8                	mov    %edi,%eax
    838d:	8b 75 e0             	mov    -0x20(%ebp),%esi
    8390:	51                   	push   %ecx
    8391:	50                   	push   %eax
    8392:	53                   	push   %ebx
    8393:	56                   	push   %esi
    8394:	e8 c7 70 00 00       	call   f460 <async_data_read_finalize@plt>
    8399:	5f                   	pop    %edi
    839a:	58                   	pop    %eax
    839b:	8b 45 e0             	mov    -0x20(%ebp),%eax
    839e:	6a f2                	push   $0xfffffff2
    83a0:	50                   	push   %eax
    83a1:	e8 5a 71 00 00       	call   f500 <async_answer_0@plt>
    83a6:	89 1c 24             	mov    %ebx,(%esp)
    83a9:	e8 b2 74 00 00       	call   f860 <free@plt>
    83ae:	83 c4 0c             	add    $0xc,%esp
    83b1:	8b 45 dc             	mov    -0x24(%ebp),%eax
    83b4:	50                   	push   %eax
    83b5:	8b 45 10             	mov    0x10(%ebp),%eax
    83b8:	6a 00                	push   $0x0
    83ba:	50                   	push   %eax
    83bb:	e8 a0 73 00 00       	call   f760 <async_answer_1@plt>
    83c0:	83 c4 10             	add    $0x10,%esp
    83c3:	8d 65 f4             	lea    -0xc(%ebp),%esp
    83c6:	5b                   	pop    %ebx
    83c7:	5e                   	pop    %esi
    83c8:	5f                   	pop    %edi
    83c9:	5d                   	pop    %ebp
    83ca:	c3                   	ret    
    83cb:	90                   	nop
    83cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    83d0:	50                   	push   %eax
    83d1:	50                   	push   %eax
    83d2:	8b 45 10             	mov    0x10(%ebp),%eax
    83d5:	6a f5                	push   $0xfffffff5
    83d7:	50                   	push   %eax
    83d8:	e8 23 71 00 00       	call   f500 <async_answer_0@plt>
    83dd:	83 c4 10             	add    $0x10,%esp
    83e0:	e9 20 ff ff ff       	jmp    8305 <remote_nic_blocked_sources_get+0x65>
    83e5:	8d 76 00             	lea    0x0(%esi),%esi
    83e8:	8b 55 e0             	mov    -0x20(%ebp),%edx
    83eb:	50                   	push   %eax
    83ec:	50                   	push   %eax
    83ed:	6a f2                	push   $0xfffffff2
    83ef:	52                   	push   %edx
    83f0:	e8 0b 71 00 00       	call   f500 <async_answer_0@plt>
    83f5:	83 c4 0c             	add    $0xc,%esp
    83f8:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    83fb:	51                   	push   %ecx
    83fc:	6a 00                	push   $0x0
    83fe:	e9 ee fe ff ff       	jmp    82f1 <remote_nic_blocked_sources_get+0x51>
    8403:	90                   	nop
    8404:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8408:	50                   	push   %eax
    8409:	50                   	push   %eax
    840a:	8b 45 10             	mov    0x10(%ebp),%eax
    840d:	6a fe                	push   $0xfffffffe
    840f:	50                   	push   %eax
    8410:	e8 eb 70 00 00       	call   f500 <async_answer_0@plt>
    8415:	83 c4 10             	add    $0x10,%esp
    8418:	e9 e8 fe ff ff       	jmp    8305 <remote_nic_blocked_sources_get+0x65>
    841d:	8d 76 00             	lea    0x0(%esi),%esi

00008420 <remote_nic_multicast_set_mode>:
    8420:	55                   	push   %ebp
    8421:	89 e5                	mov    %esp,%ebp
    8423:	57                   	push   %edi
    8424:	56                   	push   %esi
    8425:	53                   	push   %ebx
    8426:	83 ec 2c             	sub    $0x2c,%esp
    8429:	31 f6                	xor    %esi,%esi
    842b:	8b 45 14             	mov    0x14(%ebp),%eax
    842e:	8b 58 0c             	mov    0xc(%eax),%ebx
    8431:	8b 78 08             	mov    0x8(%eax),%edi
    8434:	85 db                	test   %ebx,%ebx
    8436:	75 40                	jne    8478 <remote_nic_multicast_set_mode+0x58>
    8438:	8b 45 0c             	mov    0xc(%ebp),%eax
    843b:	8b 40 50             	mov    0x50(%eax),%eax
    843e:	85 c0                	test   %eax,%eax
    8440:	0f 84 da 00 00 00    	je     8520 <remote_nic_multicast_set_mode+0x100>
    8446:	8b 4d 08             	mov    0x8(%ebp),%ecx
    8449:	53                   	push   %ebx
    844a:	56                   	push   %esi
    844b:	57                   	push   %edi
    844c:	51                   	push   %ecx
    844d:	ff d0                	call   *%eax
    844f:	5b                   	pop    %ebx
    8450:	5f                   	pop    %edi
    8451:	50                   	push   %eax
    8452:	8b 45 10             	mov    0x10(%ebp),%eax
    8455:	50                   	push   %eax
    8456:	e8 a5 70 00 00       	call   f500 <async_answer_0@plt>
    845b:	83 c4 10             	add    $0x10,%esp
    845e:	83 ec 0c             	sub    $0xc,%esp
    8461:	56                   	push   %esi
    8462:	e8 f9 73 00 00       	call   f860 <free@plt>
    8467:	83 c4 10             	add    $0x10,%esp
    846a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    846d:	5b                   	pop    %ebx
    846e:	5e                   	pop    %esi
    846f:	5f                   	pop    %edi
    8470:	5d                   	pop    %ebp
    8471:	c3                   	ret    
    8472:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8478:	50                   	push   %eax
    8479:	50                   	push   %eax
    847a:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    847d:	50                   	push   %eax
    847e:	8d 45 e0             	lea    -0x20(%ebp),%eax
    8481:	50                   	push   %eax
    8482:	e8 c9 73 00 00       	call   f850 <async_data_write_receive@plt>
    8487:	83 c4 10             	add    $0x10,%esp
    848a:	84 c0                	test   %al,%al
    848c:	0f 84 a6 00 00 00    	je     8538 <remote_nic_multicast_set_mode+0x118>
    8492:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    8495:	01 c0                	add    %eax,%eax
    8497:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
    849a:	74 2c                	je     84c8 <remote_nic_multicast_set_mode+0xa8>
    849c:	50                   	push   %eax
    849d:	50                   	push   %eax
    849e:	8b 45 e0             	mov    -0x20(%ebp),%eax
    84a1:	6a fd                	push   $0xfffffffd
    84a3:	50                   	push   %eax
    84a4:	e8 57 70 00 00       	call   f500 <async_answer_0@plt>
    84a9:	8b 4d 10             	mov    0x10(%ebp),%ecx
    84ac:	58                   	pop    %eax
    84ad:	5a                   	pop    %edx
    84ae:	6a fd                	push   $0xfffffffd
    84b0:	51                   	push   %ecx
    84b1:	e8 4a 70 00 00       	call   f500 <async_answer_0@plt>
    84b6:	83 c4 10             	add    $0x10,%esp
    84b9:	8d 65 f4             	lea    -0xc(%ebp),%esp
    84bc:	5b                   	pop    %ebx
    84bd:	5e                   	pop    %esi
    84be:	5f                   	pop    %edi
    84bf:	5d                   	pop    %ebp
    84c0:	c3                   	ret    
    84c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    84c8:	83 ec 0c             	sub    $0xc,%esp
    84cb:	50                   	push   %eax
    84cc:	e8 ef 6f 00 00       	call   f4c0 <malloc@plt>
    84d1:	83 c4 10             	add    $0x10,%esp
    84d4:	89 c2                	mov    %eax,%edx
    84d6:	89 c6                	mov    %eax,%esi
    84d8:	85 c0                	test   %eax,%eax
    84da:	74 7e                	je     855a <remote_nic_multicast_set_mode+0x13a>
    84dc:	50                   	push   %eax
    84dd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    84e0:	50                   	push   %eax
    84e1:	8b 45 e0             	mov    -0x20(%ebp),%eax
    84e4:	52                   	push   %edx
    84e5:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    84e8:	50                   	push   %eax
    84e9:	e8 f2 72 00 00       	call   f7e0 <async_data_write_finalize@plt>
    84ee:	83 c4 10             	add    $0x10,%esp
    84f1:	85 c0                	test   %eax,%eax
    84f3:	0f 84 3f ff ff ff    	je     8438 <remote_nic_multicast_set_mode+0x18>
    84f9:	50                   	push   %eax
    84fa:	50                   	push   %eax
    84fb:	8b 45 10             	mov    0x10(%ebp),%eax
    84fe:	6a f2                	push   $0xfffffff2
    8500:	50                   	push   %eax
    8501:	e8 fa 6f 00 00       	call   f500 <async_answer_0@plt>
    8506:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    8509:	89 14 24             	mov    %edx,(%esp)
    850c:	e8 4f 73 00 00       	call   f860 <free@plt>
    8511:	83 c4 10             	add    $0x10,%esp
    8514:	e9 51 ff ff ff       	jmp    846a <remote_nic_multicast_set_mode+0x4a>
    8519:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8520:	8b 55 10             	mov    0x10(%ebp),%edx
    8523:	50                   	push   %eax
    8524:	50                   	push   %eax
    8525:	6a f5                	push   $0xfffffff5
    8527:	52                   	push   %edx
    8528:	e8 d3 6f 00 00       	call   f500 <async_answer_0@plt>
    852d:	83 c4 10             	add    $0x10,%esp
    8530:	e9 29 ff ff ff       	jmp    845e <remote_nic_multicast_set_mode+0x3e>
    8535:	8d 76 00             	lea    0x0(%esi),%esi
    8538:	8b 75 e0             	mov    -0x20(%ebp),%esi
    853b:	53                   	push   %ebx
    853c:	53                   	push   %ebx
    853d:	6a f2                	push   $0xfffffff2
    853f:	56                   	push   %esi
    8540:	e8 bb 6f 00 00       	call   f500 <async_answer_0@plt>
    8545:	5f                   	pop    %edi
    8546:	58                   	pop    %eax
    8547:	8b 45 10             	mov    0x10(%ebp),%eax
    854a:	6a f2                	push   $0xfffffff2
    854c:	50                   	push   %eax
    854d:	e8 ae 6f 00 00       	call   f500 <async_answer_0@plt>
    8552:	83 c4 10             	add    $0x10,%esp
    8555:	e9 10 ff ff ff       	jmp    846a <remote_nic_multicast_set_mode+0x4a>
    855a:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    855d:	52                   	push   %edx
    855e:	52                   	push   %edx
    855f:	6a fe                	push   $0xfffffffe
    8561:	51                   	push   %ecx
    8562:	e8 99 6f 00 00       	call   f500 <async_answer_0@plt>
    8567:	8b 7d 10             	mov    0x10(%ebp),%edi
    856a:	5b                   	pop    %ebx
    856b:	5e                   	pop    %esi
    856c:	6a fe                	push   $0xfffffffe
    856e:	57                   	push   %edi
    856f:	e8 8c 6f 00 00       	call   f500 <async_answer_0@plt>
    8574:	83 c4 10             	add    $0x10,%esp
    8577:	e9 ee fe ff ff       	jmp    846a <remote_nic_multicast_set_mode+0x4a>
    857c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00008580 <remote_nic_multicast_get_mode>:
    8580:	55                   	push   %ebp
    8581:	89 e5                	mov    %esp,%ebp
    8583:	57                   	push   %edi
    8584:	56                   	push   %esi
    8585:	53                   	push   %ebx
    8586:	83 ec 1c             	sub    $0x1c,%esp
    8589:	8b 45 0c             	mov    0xc(%ebp),%eax
    858c:	8b 58 4c             	mov    0x4c(%eax),%ebx
    858f:	85 db                	test   %ebx,%ebx
    8591:	0f 84 39 01 00 00    	je     86d0 <remote_nic_multicast_get_mode+0x150>
    8597:	8b 45 14             	mov    0x14(%ebp),%eax
    859a:	8b 70 08             	mov    0x8(%eax),%esi
    859d:	85 f6                	test   %esi,%esi
    859f:	0f 84 cb 00 00 00    	je     8670 <remote_nic_multicast_get_mode+0xf0>
    85a5:	83 ec 0c             	sub    $0xc,%esp
    85a8:	8d 3c 76             	lea    (%esi,%esi,2),%edi
    85ab:	01 ff                	add    %edi,%edi
    85ad:	57                   	push   %edi
    85ae:	e8 0d 6f 00 00       	call   f4c0 <malloc@plt>
    85b3:	83 c4 10             	add    $0x10,%esp
    85b6:	89 c3                	mov    %eax,%ebx
    85b8:	85 c0                	test   %eax,%eax
    85ba:	0f 84 58 01 00 00    	je     8718 <remote_nic_multicast_get_mode+0x198>
    85c0:	50                   	push   %eax
    85c1:	57                   	push   %edi
    85c2:	6a 00                	push   $0x0
    85c4:	53                   	push   %ebx
    85c5:	e8 f6 70 00 00       	call   f6c0 <memset@plt>
    85ca:	8d 45 dc             	lea    -0x24(%ebp),%eax
    85cd:	89 04 24             	mov    %eax,(%esp)
    85d0:	8d 45 d8             	lea    -0x28(%ebp),%eax
    85d3:	53                   	push   %ebx
    85d4:	56                   	push   %esi
    85d5:	50                   	push   %eax
    85d6:	8b 45 08             	mov    0x8(%ebp),%eax
    85d9:	50                   	push   %eax
    85da:	8b 45 0c             	mov    0xc(%ebp),%eax
    85dd:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
    85e4:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    85eb:	ff 50 4c             	call   *0x4c(%eax)
    85ee:	83 c4 20             	add    $0x20,%esp
    85f1:	89 c6                	mov    %eax,%esi
    85f3:	85 c0                	test   %eax,%eax
    85f5:	0f 85 ae 00 00 00    	jne    86a9 <remote_nic_multicast_get_mode+0x129>
    85fb:	8b 45 dc             	mov    -0x24(%ebp),%eax
    85fe:	85 c0                	test   %eax,%eax
    8600:	0f 84 a3 00 00 00    	je     86a9 <remote_nic_multicast_get_mode+0x129>
    8606:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    8609:	51                   	push   %ecx
    860a:	51                   	push   %ecx
    860b:	50                   	push   %eax
    860c:	8d 45 e0             	lea    -0x20(%ebp),%eax
    860f:	50                   	push   %eax
    8610:	e8 bb 70 00 00       	call   f6d0 <async_data_read_receive@plt>
    8615:	83 c4 10             	add    $0x10,%esp
    8618:	84 c0                	test   %al,%al
    861a:	0f 84 c8 00 00 00    	je     86e8 <remote_nic_multicast_get_mode+0x168>
    8620:	8b 45 dc             	mov    -0x24(%ebp),%eax
    8623:	8d 14 40             	lea    (%eax,%eax,2),%edx
    8626:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    8629:	01 d2                	add    %edx,%edx
    862b:	39 c2                	cmp    %eax,%edx
    862d:	73 05                	jae    8634 <remote_nic_multicast_get_mode+0xb4>
    862f:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    8632:	89 d0                	mov    %edx,%eax
    8634:	39 c7                	cmp    %eax,%edi
    8636:	73 05                	jae    863d <remote_nic_multicast_get_mode+0xbd>
    8638:	89 7d e4             	mov    %edi,-0x1c(%ebp)
    863b:	89 f8                	mov    %edi,%eax
    863d:	8b 75 e0             	mov    -0x20(%ebp),%esi
    8640:	51                   	push   %ecx
    8641:	50                   	push   %eax
    8642:	53                   	push   %ebx
    8643:	56                   	push   %esi
    8644:	e8 17 6e 00 00       	call   f460 <async_data_read_finalize@plt>
    8649:	89 1c 24             	mov    %ebx,(%esp)
    864c:	e8 0f 72 00 00       	call   f860 <free@plt>
    8651:	8b 7d dc             	mov    -0x24(%ebp),%edi
    8654:	8b 45 d8             	mov    -0x28(%ebp),%eax
    8657:	57                   	push   %edi
    8658:	50                   	push   %eax
    8659:	8b 45 10             	mov    0x10(%ebp),%eax
    865c:	6a 00                	push   $0x0
    865e:	50                   	push   %eax
    865f:	e8 7c 6f 00 00       	call   f5e0 <async_answer_2@plt>
    8664:	83 c4 20             	add    $0x20,%esp
    8667:	8d 65 f4             	lea    -0xc(%ebp),%esp
    866a:	5b                   	pop    %ebx
    866b:	5e                   	pop    %esi
    866c:	5f                   	pop    %edi
    866d:	5d                   	pop    %ebp
    866e:	c3                   	ret    
    866f:	90                   	nop
    8670:	50                   	push   %eax
    8671:	6a 00                	push   $0x0
    8673:	6a 00                	push   $0x0
    8675:	6a 00                	push   $0x0
    8677:	e8 44 70 00 00       	call   f6c0 <memset@plt>
    867c:	8d 45 dc             	lea    -0x24(%ebp),%eax
    867f:	89 04 24             	mov    %eax,(%esp)
    8682:	8d 45 d8             	lea    -0x28(%ebp),%eax
    8685:	6a 00                	push   $0x0
    8687:	6a 00                	push   $0x0
    8689:	50                   	push   %eax
    868a:	8b 45 0c             	mov    0xc(%ebp),%eax
    868d:	8b 55 08             	mov    0x8(%ebp),%edx
    8690:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
    8697:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    869e:	52                   	push   %edx
    869f:	ff 50 4c             	call   *0x4c(%eax)
    86a2:	31 db                	xor    %ebx,%ebx
    86a4:	89 c6                	mov    %eax,%esi
    86a6:	83 c4 20             	add    $0x20,%esp
    86a9:	83 ec 0c             	sub    $0xc,%esp
    86ac:	53                   	push   %ebx
    86ad:	e8 ae 71 00 00       	call   f860 <free@plt>
    86b2:	8b 5d dc             	mov    -0x24(%ebp),%ebx
    86b5:	8b 7d d8             	mov    -0x28(%ebp),%edi
    86b8:	8b 45 10             	mov    0x10(%ebp),%eax
    86bb:	53                   	push   %ebx
    86bc:	57                   	push   %edi
    86bd:	56                   	push   %esi
    86be:	50                   	push   %eax
    86bf:	e8 1c 6f 00 00       	call   f5e0 <async_answer_2@plt>
    86c4:	83 c4 20             	add    $0x20,%esp
    86c7:	8d 65 f4             	lea    -0xc(%ebp),%esp
    86ca:	5b                   	pop    %ebx
    86cb:	5e                   	pop    %esi
    86cc:	5f                   	pop    %edi
    86cd:	5d                   	pop    %ebp
    86ce:	c3                   	ret    
    86cf:	90                   	nop
    86d0:	8b 4d 10             	mov    0x10(%ebp),%ecx
    86d3:	52                   	push   %edx
    86d4:	52                   	push   %edx
    86d5:	6a f5                	push   $0xfffffff5
    86d7:	51                   	push   %ecx
    86d8:	e8 23 6e 00 00       	call   f500 <async_answer_0@plt>
    86dd:	83 c4 10             	add    $0x10,%esp
    86e0:	eb e5                	jmp    86c7 <remote_nic_multicast_get_mode+0x147>
    86e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    86e8:	50                   	push   %eax
    86e9:	50                   	push   %eax
    86ea:	8b 45 e0             	mov    -0x20(%ebp),%eax
    86ed:	6a f2                	push   $0xfffffff2
    86ef:	50                   	push   %eax
    86f0:	e8 0b 6e 00 00       	call   f500 <async_answer_0@plt>
    86f5:	8b 45 dc             	mov    -0x24(%ebp),%eax
    86f8:	8b 55 10             	mov    0x10(%ebp),%edx
    86fb:	50                   	push   %eax
    86fc:	8b 45 d8             	mov    -0x28(%ebp),%eax
    86ff:	50                   	push   %eax
    8700:	6a 00                	push   $0x0
    8702:	52                   	push   %edx
    8703:	e8 d8 6e 00 00       	call   f5e0 <async_answer_2@plt>
    8708:	83 c4 14             	add    $0x14,%esp
    870b:	53                   	push   %ebx
    870c:	e8 4f 71 00 00       	call   f860 <free@plt>
    8711:	83 c4 10             	add    $0x10,%esp
    8714:	eb b1                	jmp    86c7 <remote_nic_multicast_get_mode+0x147>
    8716:	66 90                	xchg   %ax,%ax
    8718:	50                   	push   %eax
    8719:	50                   	push   %eax
    871a:	8b 45 10             	mov    0x10(%ebp),%eax
    871d:	6a fe                	push   $0xfffffffe
    871f:	50                   	push   %eax
    8720:	e8 db 6d 00 00       	call   f500 <async_answer_0@plt>
    8725:	83 c4 10             	add    $0x10,%esp
    8728:	eb 9d                	jmp    86c7 <remote_nic_multicast_get_mode+0x147>
    872a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00008730 <remote_nic_unicast_set_mode>:
    8730:	55                   	push   %ebp
    8731:	89 e5                	mov    %esp,%ebp
    8733:	57                   	push   %edi
    8734:	56                   	push   %esi
    8735:	53                   	push   %ebx
    8736:	83 ec 2c             	sub    $0x2c,%esp
    8739:	31 f6                	xor    %esi,%esi
    873b:	8b 45 14             	mov    0x14(%ebp),%eax
    873e:	8b 58 0c             	mov    0xc(%eax),%ebx
    8741:	8b 78 08             	mov    0x8(%eax),%edi
    8744:	85 db                	test   %ebx,%ebx
    8746:	75 40                	jne    8788 <remote_nic_unicast_set_mode+0x58>
    8748:	8b 45 0c             	mov    0xc(%ebp),%eax
    874b:	8b 40 48             	mov    0x48(%eax),%eax
    874e:	85 c0                	test   %eax,%eax
    8750:	0f 84 da 00 00 00    	je     8830 <remote_nic_unicast_set_mode+0x100>
    8756:	8b 4d 08             	mov    0x8(%ebp),%ecx
    8759:	53                   	push   %ebx
    875a:	56                   	push   %esi
    875b:	57                   	push   %edi
    875c:	51                   	push   %ecx
    875d:	ff d0                	call   *%eax
    875f:	5b                   	pop    %ebx
    8760:	5f                   	pop    %edi
    8761:	50                   	push   %eax
    8762:	8b 45 10             	mov    0x10(%ebp),%eax
    8765:	50                   	push   %eax
    8766:	e8 95 6d 00 00       	call   f500 <async_answer_0@plt>
    876b:	83 c4 10             	add    $0x10,%esp
    876e:	83 ec 0c             	sub    $0xc,%esp
    8771:	56                   	push   %esi
    8772:	e8 e9 70 00 00       	call   f860 <free@plt>
    8777:	83 c4 10             	add    $0x10,%esp
    877a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    877d:	5b                   	pop    %ebx
    877e:	5e                   	pop    %esi
    877f:	5f                   	pop    %edi
    8780:	5d                   	pop    %ebp
    8781:	c3                   	ret    
    8782:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8788:	50                   	push   %eax
    8789:	50                   	push   %eax
    878a:	8d 45 e0             	lea    -0x20(%ebp),%eax
    878d:	50                   	push   %eax
    878e:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    8791:	50                   	push   %eax
    8792:	e8 b9 70 00 00       	call   f850 <async_data_write_receive@plt>
    8797:	83 c4 10             	add    $0x10,%esp
    879a:	84 c0                	test   %al,%al
    879c:	0f 84 a6 00 00 00    	je     8848 <remote_nic_unicast_set_mode+0x118>
    87a2:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    87a5:	01 c0                	add    %eax,%eax
    87a7:	3b 45 e0             	cmp    -0x20(%ebp),%eax
    87aa:	74 2c                	je     87d8 <remote_nic_unicast_set_mode+0xa8>
    87ac:	50                   	push   %eax
    87ad:	50                   	push   %eax
    87ae:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    87b1:	6a fd                	push   $0xfffffffd
    87b3:	50                   	push   %eax
    87b4:	e8 47 6d 00 00       	call   f500 <async_answer_0@plt>
    87b9:	8b 4d 10             	mov    0x10(%ebp),%ecx
    87bc:	58                   	pop    %eax
    87bd:	5a                   	pop    %edx
    87be:	6a fd                	push   $0xfffffffd
    87c0:	51                   	push   %ecx
    87c1:	e8 3a 6d 00 00       	call   f500 <async_answer_0@plt>
    87c6:	83 c4 10             	add    $0x10,%esp
    87c9:	8d 65 f4             	lea    -0xc(%ebp),%esp
    87cc:	5b                   	pop    %ebx
    87cd:	5e                   	pop    %esi
    87ce:	5f                   	pop    %edi
    87cf:	5d                   	pop    %ebp
    87d0:	c3                   	ret    
    87d1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    87d8:	83 ec 0c             	sub    $0xc,%esp
    87db:	50                   	push   %eax
    87dc:	e8 df 6c 00 00       	call   f4c0 <malloc@plt>
    87e1:	83 c4 10             	add    $0x10,%esp
    87e4:	89 c2                	mov    %eax,%edx
    87e6:	89 c6                	mov    %eax,%esi
    87e8:	85 c0                	test   %eax,%eax
    87ea:	74 7e                	je     886a <remote_nic_unicast_set_mode+0x13a>
    87ec:	50                   	push   %eax
    87ed:	8b 45 e0             	mov    -0x20(%ebp),%eax
    87f0:	50                   	push   %eax
    87f1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    87f4:	52                   	push   %edx
    87f5:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    87f8:	50                   	push   %eax
    87f9:	e8 e2 6f 00 00       	call   f7e0 <async_data_write_finalize@plt>
    87fe:	83 c4 10             	add    $0x10,%esp
    8801:	85 c0                	test   %eax,%eax
    8803:	0f 84 3f ff ff ff    	je     8748 <remote_nic_unicast_set_mode+0x18>
    8809:	50                   	push   %eax
    880a:	50                   	push   %eax
    880b:	8b 45 10             	mov    0x10(%ebp),%eax
    880e:	6a f2                	push   $0xfffffff2
    8810:	50                   	push   %eax
    8811:	e8 ea 6c 00 00       	call   f500 <async_answer_0@plt>
    8816:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    8819:	89 14 24             	mov    %edx,(%esp)
    881c:	e8 3f 70 00 00       	call   f860 <free@plt>
    8821:	83 c4 10             	add    $0x10,%esp
    8824:	e9 51 ff ff ff       	jmp    877a <remote_nic_unicast_set_mode+0x4a>
    8829:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8830:	8b 55 10             	mov    0x10(%ebp),%edx
    8833:	50                   	push   %eax
    8834:	50                   	push   %eax
    8835:	6a f5                	push   $0xfffffff5
    8837:	52                   	push   %edx
    8838:	e8 c3 6c 00 00       	call   f500 <async_answer_0@plt>
    883d:	83 c4 10             	add    $0x10,%esp
    8840:	e9 29 ff ff ff       	jmp    876e <remote_nic_unicast_set_mode+0x3e>
    8845:	8d 76 00             	lea    0x0(%esi),%esi
    8848:	8b 75 e4             	mov    -0x1c(%ebp),%esi
    884b:	53                   	push   %ebx
    884c:	53                   	push   %ebx
    884d:	6a f2                	push   $0xfffffff2
    884f:	56                   	push   %esi
    8850:	e8 ab 6c 00 00       	call   f500 <async_answer_0@plt>
    8855:	5f                   	pop    %edi
    8856:	58                   	pop    %eax
    8857:	8b 45 10             	mov    0x10(%ebp),%eax
    885a:	6a f2                	push   $0xfffffff2
    885c:	50                   	push   %eax
    885d:	e8 9e 6c 00 00       	call   f500 <async_answer_0@plt>
    8862:	83 c4 10             	add    $0x10,%esp
    8865:	e9 10 ff ff ff       	jmp    877a <remote_nic_unicast_set_mode+0x4a>
    886a:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    886d:	52                   	push   %edx
    886e:	52                   	push   %edx
    886f:	6a fe                	push   $0xfffffffe
    8871:	51                   	push   %ecx
    8872:	e8 89 6c 00 00       	call   f500 <async_answer_0@plt>
    8877:	8b 7d 10             	mov    0x10(%ebp),%edi
    887a:	5b                   	pop    %ebx
    887b:	5e                   	pop    %esi
    887c:	6a fe                	push   $0xfffffffe
    887e:	57                   	push   %edi
    887f:	e8 7c 6c 00 00       	call   f500 <async_answer_0@plt>
    8884:	83 c4 10             	add    $0x10,%esp
    8887:	e9 ee fe ff ff       	jmp    877a <remote_nic_unicast_set_mode+0x4a>
    888c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00008890 <remote_nic_unicast_get_mode>:
    8890:	55                   	push   %ebp
    8891:	89 e5                	mov    %esp,%ebp
    8893:	57                   	push   %edi
    8894:	56                   	push   %esi
    8895:	53                   	push   %ebx
    8896:	83 ec 1c             	sub    $0x1c,%esp
    8899:	8b 45 0c             	mov    0xc(%ebp),%eax
    889c:	8b 40 44             	mov    0x44(%eax),%eax
    889f:	85 c0                	test   %eax,%eax
    88a1:	0f 84 49 01 00 00    	je     89f0 <remote_nic_unicast_get_mode+0x160>
    88a7:	8b 45 14             	mov    0x14(%ebp),%eax
    88aa:	8b 70 08             	mov    0x8(%eax),%esi
    88ad:	85 f6                	test   %esi,%esi
    88af:	0f 84 db 00 00 00    	je     8990 <remote_nic_unicast_get_mode+0x100>
    88b5:	83 ec 0c             	sub    $0xc,%esp
    88b8:	8d 3c 76             	lea    (%esi,%esi,2),%edi
    88bb:	01 ff                	add    %edi,%edi
    88bd:	57                   	push   %edi
    88be:	e8 fd 6b 00 00       	call   f4c0 <malloc@plt>
    88c3:	83 c4 10             	add    $0x10,%esp
    88c6:	89 c3                	mov    %eax,%ebx
    88c8:	85 c0                	test   %eax,%eax
    88ca:	0f 84 68 01 00 00    	je     8a38 <remote_nic_unicast_get_mode+0x1a8>
    88d0:	50                   	push   %eax
    88d1:	57                   	push   %edi
    88d2:	6a 00                	push   $0x0
    88d4:	53                   	push   %ebx
    88d5:	e8 e6 6d 00 00       	call   f6c0 <memset@plt>
    88da:	8d 45 dc             	lea    -0x24(%ebp),%eax
    88dd:	89 04 24             	mov    %eax,(%esp)
    88e0:	8d 45 d8             	lea    -0x28(%ebp),%eax
    88e3:	53                   	push   %ebx
    88e4:	56                   	push   %esi
    88e5:	50                   	push   %eax
    88e6:	8b 45 0c             	mov    0xc(%ebp),%eax
    88e9:	8b 55 08             	mov    0x8(%ebp),%edx
    88ec:	c7 45 d8 02 00 00 00 	movl   $0x2,-0x28(%ebp)
    88f3:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    88fa:	52                   	push   %edx
    88fb:	ff 50 44             	call   *0x44(%eax)
    88fe:	83 c4 20             	add    $0x20,%esp
    8901:	89 c6                	mov    %eax,%esi
    8903:	85 c0                	test   %eax,%eax
    8905:	0f 85 be 00 00 00    	jne    89c9 <remote_nic_unicast_get_mode+0x139>
    890b:	8b 45 dc             	mov    -0x24(%ebp),%eax
    890e:	85 c0                	test   %eax,%eax
    8910:	0f 84 b3 00 00 00    	je     89c9 <remote_nic_unicast_get_mode+0x139>
    8916:	50                   	push   %eax
    8917:	50                   	push   %eax
    8918:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    891b:	50                   	push   %eax
    891c:	8d 45 e0             	lea    -0x20(%ebp),%eax
    891f:	50                   	push   %eax
    8920:	e8 ab 6d 00 00       	call   f6d0 <async_data_read_receive@plt>
    8925:	83 c4 10             	add    $0x10,%esp
    8928:	84 c0                	test   %al,%al
    892a:	0f 84 d8 00 00 00    	je     8a08 <remote_nic_unicast_get_mode+0x178>
    8930:	8b 45 dc             	mov    -0x24(%ebp),%eax
    8933:	8d 14 40             	lea    (%eax,%eax,2),%edx
    8936:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    8939:	01 d2                	add    %edx,%edx
    893b:	39 c2                	cmp    %eax,%edx
    893d:	73 05                	jae    8944 <remote_nic_unicast_get_mode+0xb4>
    893f:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    8942:	89 d0                	mov    %edx,%eax
    8944:	39 c7                	cmp    %eax,%edi
    8946:	73 05                	jae    894d <remote_nic_unicast_get_mode+0xbd>
    8948:	89 7d e4             	mov    %edi,-0x1c(%ebp)
    894b:	89 f8                	mov    %edi,%eax
    894d:	8b 75 e0             	mov    -0x20(%ebp),%esi
    8950:	51                   	push   %ecx
    8951:	50                   	push   %eax
    8952:	53                   	push   %ebx
    8953:	56                   	push   %esi
    8954:	e8 07 6b 00 00       	call   f460 <async_data_read_finalize@plt>
    8959:	5f                   	pop    %edi
    895a:	58                   	pop    %eax
    895b:	8b 45 e0             	mov    -0x20(%ebp),%eax
    895e:	6a f2                	push   $0xfffffff2
    8960:	50                   	push   %eax
    8961:	e8 9a 6b 00 00       	call   f500 <async_answer_0@plt>
    8966:	89 1c 24             	mov    %ebx,(%esp)
    8969:	e8 f2 6e 00 00       	call   f860 <free@plt>
    896e:	8b 45 dc             	mov    -0x24(%ebp),%eax
    8971:	50                   	push   %eax
    8972:	8b 45 d8             	mov    -0x28(%ebp),%eax
    8975:	50                   	push   %eax
    8976:	8b 45 10             	mov    0x10(%ebp),%eax
    8979:	6a 00                	push   $0x0
    897b:	50                   	push   %eax
    897c:	e8 5f 6c 00 00       	call   f5e0 <async_answer_2@plt>
    8981:	83 c4 20             	add    $0x20,%esp
    8984:	8d 65 f4             	lea    -0xc(%ebp),%esp
    8987:	5b                   	pop    %ebx
    8988:	5e                   	pop    %esi
    8989:	5f                   	pop    %edi
    898a:	5d                   	pop    %ebp
    898b:	c3                   	ret    
    898c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8990:	50                   	push   %eax
    8991:	6a 00                	push   $0x0
    8993:	6a 00                	push   $0x0
    8995:	6a 00                	push   $0x0
    8997:	e8 24 6d 00 00       	call   f6c0 <memset@plt>
    899c:	8d 45 dc             	lea    -0x24(%ebp),%eax
    899f:	89 04 24             	mov    %eax,(%esp)
    89a2:	8d 45 d8             	lea    -0x28(%ebp),%eax
    89a5:	6a 00                	push   $0x0
    89a7:	6a 00                	push   $0x0
    89a9:	50                   	push   %eax
    89aa:	8b 45 0c             	mov    0xc(%ebp),%eax
    89ad:	8b 55 08             	mov    0x8(%ebp),%edx
    89b0:	c7 45 d8 02 00 00 00 	movl   $0x2,-0x28(%ebp)
    89b7:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    89be:	52                   	push   %edx
    89bf:	ff 50 44             	call   *0x44(%eax)
    89c2:	31 db                	xor    %ebx,%ebx
    89c4:	89 c6                	mov    %eax,%esi
    89c6:	83 c4 20             	add    $0x20,%esp
    89c9:	83 ec 0c             	sub    $0xc,%esp
    89cc:	53                   	push   %ebx
    89cd:	e8 8e 6e 00 00       	call   f860 <free@plt>
    89d2:	8b 45 dc             	mov    -0x24(%ebp),%eax
    89d5:	50                   	push   %eax
    89d6:	8b 45 d8             	mov    -0x28(%ebp),%eax
    89d9:	50                   	push   %eax
    89da:	8b 45 10             	mov    0x10(%ebp),%eax
    89dd:	56                   	push   %esi
    89de:	50                   	push   %eax
    89df:	e8 fc 6b 00 00       	call   f5e0 <async_answer_2@plt>
    89e4:	83 c4 20             	add    $0x20,%esp
    89e7:	8d 65 f4             	lea    -0xc(%ebp),%esp
    89ea:	5b                   	pop    %ebx
    89eb:	5e                   	pop    %esi
    89ec:	5f                   	pop    %edi
    89ed:	5d                   	pop    %ebp
    89ee:	c3                   	ret    
    89ef:	90                   	nop
    89f0:	8b 7d 10             	mov    0x10(%ebp),%edi
    89f3:	56                   	push   %esi
    89f4:	56                   	push   %esi
    89f5:	6a f5                	push   $0xfffffff5
    89f7:	57                   	push   %edi
    89f8:	e8 03 6b 00 00       	call   f500 <async_answer_0@plt>
    89fd:	83 c4 10             	add    $0x10,%esp
    8a00:	eb e5                	jmp    89e7 <remote_nic_unicast_get_mode+0x157>
    8a02:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8a08:	8b 55 e0             	mov    -0x20(%ebp),%edx
    8a0b:	50                   	push   %eax
    8a0c:	50                   	push   %eax
    8a0d:	6a f2                	push   $0xfffffff2
    8a0f:	52                   	push   %edx
    8a10:	e8 eb 6a 00 00       	call   f500 <async_answer_0@plt>
    8a15:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    8a18:	8b 75 d8             	mov    -0x28(%ebp),%esi
    8a1b:	8b 7d 10             	mov    0x10(%ebp),%edi
    8a1e:	51                   	push   %ecx
    8a1f:	56                   	push   %esi
    8a20:	6a 00                	push   $0x0
    8a22:	57                   	push   %edi
    8a23:	e8 b8 6b 00 00       	call   f5e0 <async_answer_2@plt>
    8a28:	83 c4 14             	add    $0x14,%esp
    8a2b:	53                   	push   %ebx
    8a2c:	e8 2f 6e 00 00       	call   f860 <free@plt>
    8a31:	83 c4 10             	add    $0x10,%esp
    8a34:	eb b1                	jmp    89e7 <remote_nic_unicast_get_mode+0x157>
    8a36:	66 90                	xchg   %ax,%ax
    8a38:	8b 5d 10             	mov    0x10(%ebp),%ebx
    8a3b:	51                   	push   %ecx
    8a3c:	51                   	push   %ecx
    8a3d:	6a fe                	push   $0xfffffffe
    8a3f:	53                   	push   %ebx
    8a40:	e8 bb 6a 00 00       	call   f500 <async_answer_0@plt>
    8a45:	83 c4 10             	add    $0x10,%esp
    8a48:	eb 9d                	jmp    89e7 <remote_nic_unicast_get_mode+0x157>
    8a4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00008a50 <remote_nic_get_pause>:
    8a50:	55                   	push   %ebp
    8a51:	89 e5                	mov    %esp,%ebp
    8a53:	83 ec 18             	sub    $0x18,%esp
    8a56:	8b 45 0c             	mov    0xc(%ebp),%eax
    8a59:	8b 40 3c             	mov    0x3c(%eax),%eax
    8a5c:	85 c0                	test   %eax,%eax
    8a5e:	74 38                	je     8a98 <remote_nic_get_pause+0x48>
    8a60:	8d 55 ee             	lea    -0x12(%ebp),%edx
    8a63:	52                   	push   %edx
    8a64:	8d 55 f4             	lea    -0xc(%ebp),%edx
    8a67:	52                   	push   %edx
    8a68:	8d 55 f0             	lea    -0x10(%ebp),%edx
    8a6b:	52                   	push   %edx
    8a6c:	8b 55 08             	mov    0x8(%ebp),%edx
    8a6f:	52                   	push   %edx
    8a70:	ff d0                	call   *%eax
    8a72:	31 d2                	xor    %edx,%edx
    8a74:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    8a77:	66 8b 55 ee          	mov    -0x12(%ebp),%dx
    8a7b:	89 14 24             	mov    %edx,(%esp)
    8a7e:	51                   	push   %ecx
    8a7f:	8b 55 f0             	mov    -0x10(%ebp),%edx
    8a82:	8b 4d 10             	mov    0x10(%ebp),%ecx
    8a85:	52                   	push   %edx
    8a86:	50                   	push   %eax
    8a87:	51                   	push   %ecx
    8a88:	e8 23 6d 00 00       	call   f7b0 <async_answer_3@plt>
    8a8d:	83 c4 20             	add    $0x20,%esp
    8a90:	c9                   	leave  
    8a91:	c3                   	ret    
    8a92:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8a98:	50                   	push   %eax
    8a99:	50                   	push   %eax
    8a9a:	8b 45 10             	mov    0x10(%ebp),%eax
    8a9d:	6a f5                	push   $0xfffffff5
    8a9f:	50                   	push   %eax
    8aa0:	e8 5b 6a 00 00       	call   f500 <async_answer_0@plt>
    8aa5:	83 c4 10             	add    $0x10,%esp
    8aa8:	c9                   	leave  
    8aa9:	c3                   	ret    
    8aaa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00008ab0 <remote_nic_get_operation_mode>:
    8ab0:	55                   	push   %ebp
    8ab1:	89 e5                	mov    %esp,%ebp
    8ab3:	83 ec 18             	sub    $0x18,%esp
    8ab6:	8b 45 0c             	mov    0xc(%ebp),%eax
    8ab9:	8b 40 24             	mov    0x24(%eax),%eax
    8abc:	85 c0                	test   %eax,%eax
    8abe:	74 48                	je     8b08 <remote_nic_get_operation_mode+0x58>
    8ac0:	8d 55 f4             	lea    -0xc(%ebp),%edx
    8ac3:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    8aca:	52                   	push   %edx
    8acb:	8d 55 f0             	lea    -0x10(%ebp),%edx
    8ace:	52                   	push   %edx
    8acf:	8d 55 ec             	lea    -0x14(%ebp),%edx
    8ad2:	52                   	push   %edx
    8ad3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
    8ada:	8b 55 08             	mov    0x8(%ebp),%edx
    8add:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    8ae4:	52                   	push   %edx
    8ae5:	ff d0                	call   *%eax
    8ae7:	59                   	pop    %ecx
    8ae8:	8b 55 f4             	mov    -0xc(%ebp),%edx
    8aeb:	8b 4d f0             	mov    -0x10(%ebp),%ecx
    8aee:	52                   	push   %edx
    8aef:	8b 55 ec             	mov    -0x14(%ebp),%edx
    8af2:	51                   	push   %ecx
    8af3:	8b 4d 10             	mov    0x10(%ebp),%ecx
    8af6:	52                   	push   %edx
    8af7:	50                   	push   %eax
    8af8:	51                   	push   %ecx
    8af9:	e8 b2 6c 00 00       	call   f7b0 <async_answer_3@plt>
    8afe:	83 c4 20             	add    $0x20,%esp
    8b01:	c9                   	leave  
    8b02:	c3                   	ret    
    8b03:	90                   	nop
    8b04:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8b08:	50                   	push   %eax
    8b09:	50                   	push   %eax
    8b0a:	8b 45 10             	mov    0x10(%ebp),%eax
    8b0d:	6a f5                	push   $0xfffffff5
    8b0f:	50                   	push   %eax
    8b10:	e8 eb 69 00 00       	call   f500 <async_answer_0@plt>
    8b15:	83 c4 10             	add    $0x10,%esp
    8b18:	c9                   	leave  
    8b19:	c3                   	ret    
    8b1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00008b20 <remote_nic_autoneg_probe>:
    8b20:	55                   	push   %ebp
    8b21:	89 e5                	mov    %esp,%ebp
    8b23:	83 ec 18             	sub    $0x18,%esp
    8b26:	8b 45 0c             	mov    0xc(%ebp),%eax
    8b29:	8b 40 34             	mov    0x34(%eax),%eax
    8b2c:	85 c0                	test   %eax,%eax
    8b2e:	74 58                	je     8b88 <remote_nic_autoneg_probe+0x68>
    8b30:	83 ec 0c             	sub    $0xc,%esp
    8b33:	8d 55 f4             	lea    -0xc(%ebp),%edx
    8b36:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
    8b3d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    8b44:	52                   	push   %edx
    8b45:	8d 55 f0             	lea    -0x10(%ebp),%edx
    8b48:	52                   	push   %edx
    8b49:	8d 55 ec             	lea    -0x14(%ebp),%edx
    8b4c:	52                   	push   %edx
    8b4d:	8d 55 e8             	lea    -0x18(%ebp),%edx
    8b50:	52                   	push   %edx
    8b51:	c7 45 f0 03 00 00 00 	movl   $0x3,-0x10(%ebp)
    8b58:	8b 55 08             	mov    0x8(%ebp),%edx
    8b5b:	c7 45 f4 03 00 00 00 	movl   $0x3,-0xc(%ebp)
    8b62:	52                   	push   %edx
    8b63:	ff d0                	call   *%eax
    8b65:	83 c4 18             	add    $0x18,%esp
    8b68:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    8b6b:	8b 55 f0             	mov    -0x10(%ebp),%edx
    8b6e:	51                   	push   %ecx
    8b6f:	8b 4d ec             	mov    -0x14(%ebp),%ecx
    8b72:	52                   	push   %edx
    8b73:	8b 55 e8             	mov    -0x18(%ebp),%edx
    8b76:	51                   	push   %ecx
    8b77:	8b 4d 10             	mov    0x10(%ebp),%ecx
    8b7a:	52                   	push   %edx
    8b7b:	50                   	push   %eax
    8b7c:	51                   	push   %ecx
    8b7d:	e8 ae 6a 00 00       	call   f630 <async_answer_4@plt>
    8b82:	83 c4 20             	add    $0x20,%esp
    8b85:	c9                   	leave  
    8b86:	c3                   	ret    
    8b87:	90                   	nop
    8b88:	50                   	push   %eax
    8b89:	50                   	push   %eax
    8b8a:	8b 45 10             	mov    0x10(%ebp),%eax
    8b8d:	6a f5                	push   $0xfffffff5
    8b8f:	50                   	push   %eax
    8b90:	e8 6b 69 00 00       	call   f500 <async_answer_0@plt>
    8b95:	83 c4 10             	add    $0x10,%esp
    8b98:	c9                   	leave  
    8b99:	c3                   	ret    
    8b9a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00008ba0 <remote_nic_set_state>:
    8ba0:	55                   	push   %ebp
    8ba1:	89 e5                	mov    %esp,%ebp
    8ba3:	53                   	push   %ebx
    8ba4:	50                   	push   %eax
    8ba5:	8b 45 0c             	mov    0xc(%ebp),%eax
    8ba8:	8b 55 08             	mov    0x8(%ebp),%edx
    8bab:	8b 5d 10             	mov    0x10(%ebp),%ebx
    8bae:	8b 4d 14             	mov    0x14(%ebp),%ecx
    8bb1:	8b 40 0c             	mov    0xc(%eax),%eax
    8bb4:	85 c0                	test   %eax,%eax
    8bb6:	74 1c                	je     8bd4 <remote_nic_set_state+0x34>
    8bb8:	83 ec 08             	sub    $0x8,%esp
    8bbb:	8b 49 08             	mov    0x8(%ecx),%ecx
    8bbe:	51                   	push   %ecx
    8bbf:	52                   	push   %edx
    8bc0:	ff d0                	call   *%eax
    8bc2:	89 5d 08             	mov    %ebx,0x8(%ebp)
    8bc5:	83 c4 10             	add    $0x10,%esp
    8bc8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    8bcb:	89 45 0c             	mov    %eax,0xc(%ebp)
    8bce:	c9                   	leave  
    8bcf:	e9 2c 69 00 00       	jmp    f500 <async_answer_0@plt>
    8bd4:	53                   	push   %ebx
    8bd5:	68 69 05 00 00       	push   $0x569
    8bda:	68 c4 ec 00 00       	push   $0xecc4
    8bdf:	68 f0 ec 00 00       	push   $0xecf0
    8be4:	e8 77 69 00 00       	call   f560 <assert_abort@plt>
    8be9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00008bf0 <remote_nic_callback_create>:
    8bf0:	55                   	push   %ebp
    8bf1:	89 e5                	mov    %esp,%ebp
    8bf3:	53                   	push   %ebx
    8bf4:	52                   	push   %edx
    8bf5:	8b 45 0c             	mov    0xc(%ebp),%eax
    8bf8:	8b 55 08             	mov    0x8(%ebp),%edx
    8bfb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    8bfe:	8b 40 04             	mov    0x4(%eax),%eax
    8c01:	85 c0                	test   %eax,%eax
    8c03:	74 18                	je     8c1d <remote_nic_callback_create+0x2d>
    8c05:	83 ec 0c             	sub    $0xc,%esp
    8c08:	52                   	push   %edx
    8c09:	ff d0                	call   *%eax
    8c0b:	89 5d 08             	mov    %ebx,0x8(%ebp)
    8c0e:	83 c4 10             	add    $0x10,%esp
    8c11:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    8c14:	89 45 0c             	mov    %eax,0xc(%ebp)
    8c17:	c9                   	leave  
    8c18:	e9 e3 68 00 00       	jmp    f500 <async_answer_0@plt>
    8c1d:	50                   	push   %eax
    8c1e:	68 53 05 00 00       	push   $0x553
    8c23:	68 c4 ec 00 00       	push   $0xecc4
    8c28:	68 05 ed 00 00       	push   $0xed05
    8c2d:	e8 2e 69 00 00       	call   f560 <assert_abort@plt>
    8c32:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8c39:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00008c40 <remote_nic_get_state>:
    8c40:	55                   	push   %ebp
    8c41:	89 e5                	mov    %esp,%ebp
    8c43:	83 ec 18             	sub    $0x18,%esp
    8c46:	8b 45 0c             	mov    0xc(%ebp),%eax
    8c49:	8b 40 08             	mov    0x8(%eax),%eax
    8c4c:	85 c0                	test   %eax,%eax
    8c4e:	74 29                	je     8c79 <remote_nic_get_state+0x39>
    8c50:	8b 4d 08             	mov    0x8(%ebp),%ecx
    8c53:	c7 45 f4 03 00 00 00 	movl   $0x3,-0xc(%ebp)
    8c5a:	52                   	push   %edx
    8c5b:	52                   	push   %edx
    8c5c:	8d 55 f4             	lea    -0xc(%ebp),%edx
    8c5f:	52                   	push   %edx
    8c60:	51                   	push   %ecx
    8c61:	ff d0                	call   *%eax
    8c63:	83 c4 0c             	add    $0xc,%esp
    8c66:	8b 55 f4             	mov    -0xc(%ebp),%edx
    8c69:	8b 4d 10             	mov    0x10(%ebp),%ecx
    8c6c:	52                   	push   %edx
    8c6d:	50                   	push   %eax
    8c6e:	51                   	push   %ecx
    8c6f:	e8 ec 6a 00 00       	call   f760 <async_answer_1@plt>
    8c74:	83 c4 10             	add    $0x10,%esp
    8c77:	c9                   	leave  
    8c78:	c3                   	ret    
    8c79:	50                   	push   %eax
    8c7a:	68 5d 05 00 00       	push   $0x55d
    8c7f:	68 c4 ec 00 00       	push   $0xecc4
    8c84:	68 20 ed 00 00       	push   $0xed20
    8c89:	e8 d2 68 00 00       	call   f560 <assert_abort@plt>
    8c8e:	66 90                	xchg   %ax,%ax

00008c90 <remote_nic_send_frame>:
    8c90:	55                   	push   %ebp
    8c91:	89 e5                	mov    %esp,%ebp
    8c93:	53                   	push   %ebx
    8c94:	83 ec 14             	sub    $0x14,%esp
    8c97:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    8c9a:	8b 13                	mov    (%ebx),%edx
    8c9c:	85 d2                	test   %edx,%edx
    8c9e:	74 65                	je     8d05 <remote_nic_send_frame+0x75>
    8ca0:	50                   	push   %eax
    8ca1:	50                   	push   %eax
    8ca2:	8d 45 f4             	lea    -0xc(%ebp),%eax
    8ca5:	50                   	push   %eax
    8ca6:	8d 45 f0             	lea    -0x10(%ebp),%eax
    8ca9:	6a 00                	push   $0x0
    8cab:	6a 00                	push   $0x0
    8cad:	6a 00                	push   $0x0
    8caf:	6a 00                	push   $0x0
    8cb1:	50                   	push   %eax
    8cb2:	e8 39 6b 00 00       	call   f7f0 <async_data_write_accept@plt>
    8cb7:	83 c4 20             	add    $0x20,%esp
    8cba:	85 c0                	test   %eax,%eax
    8cbc:	75 32                	jne    8cf0 <remote_nic_send_frame+0x60>
    8cbe:	8b 55 f4             	mov    -0xc(%ebp),%edx
    8cc1:	8b 4d f0             	mov    -0x10(%ebp),%ecx
    8cc4:	50                   	push   %eax
    8cc5:	8b 45 08             	mov    0x8(%ebp),%eax
    8cc8:	52                   	push   %edx
    8cc9:	51                   	push   %ecx
    8cca:	50                   	push   %eax
    8ccb:	ff 13                	call   *(%ebx)
    8ccd:	8b 5d 10             	mov    0x10(%ebp),%ebx
    8cd0:	5a                   	pop    %edx
    8cd1:	59                   	pop    %ecx
    8cd2:	50                   	push   %eax
    8cd3:	53                   	push   %ebx
    8cd4:	e8 27 68 00 00       	call   f500 <async_answer_0@plt>
    8cd9:	58                   	pop    %eax
    8cda:	8b 45 f0             	mov    -0x10(%ebp),%eax
    8cdd:	50                   	push   %eax
    8cde:	e8 7d 6b 00 00       	call   f860 <free@plt>
    8ce3:	83 c4 10             	add    $0x10,%esp
    8ce6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    8ce9:	c9                   	leave  
    8cea:	c3                   	ret    
    8ceb:	90                   	nop
    8cec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8cf0:	50                   	push   %eax
    8cf1:	50                   	push   %eax
    8cf2:	8b 45 10             	mov    0x10(%ebp),%eax
    8cf5:	6a f2                	push   $0xfffffff2
    8cf7:	50                   	push   %eax
    8cf8:	e8 03 68 00 00       	call   f500 <async_answer_0@plt>
    8cfd:	83 c4 10             	add    $0x10,%esp
    8d00:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    8d03:	c9                   	leave  
    8d04:	c3                   	ret    
    8d05:	50                   	push   %eax
    8d06:	68 3e 05 00 00       	push   $0x53e
    8d0b:	68 c4 ec 00 00       	push   $0xecc4
    8d10:	68 35 ed 00 00       	push   $0xed35
    8d15:	e8 46 68 00 00       	call   f560 <assert_abort@plt>
    8d1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00008d20 <nic_send_frame>:
    8d20:	55                   	push   %ebp
    8d21:	89 e5                	mov    %esp,%ebp
    8d23:	56                   	push   %esi
    8d24:	53                   	push   %ebx
    8d25:	83 ec 3c             	sub    $0x3c,%esp
    8d28:	8b 55 08             	mov    0x8(%ebp),%edx
    8d2b:	52                   	push   %edx
    8d2c:	e8 3f 6a 00 00       	call   f770 <async_exchange_begin@plt>
    8d31:	83 c4 0c             	add    $0xc,%esp
    8d34:	89 c3                	mov    %eax,%ebx
    8d36:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    8d39:	50                   	push   %eax
    8d3a:	6a 00                	push   $0x0
    8d3c:	6a 00                	push   $0x0
    8d3e:	6a 00                	push   $0x0
    8d40:	6a 00                	push   $0x0
    8d42:	68 05 04 00 00       	push   $0x405
    8d47:	53                   	push   %ebx
    8d48:	e8 c3 67 00 00       	call   f510 <async_send_fast@plt>
    8d4d:	83 c4 1c             	add    $0x1c,%esp
    8d50:	8b 4d 10             	mov    0x10(%ebp),%ecx
    8d53:	89 c6                	mov    %eax,%esi
    8d55:	8b 45 0c             	mov    0xc(%ebp),%eax
    8d58:	51                   	push   %ecx
    8d59:	50                   	push   %eax
    8d5a:	53                   	push   %ebx
    8d5b:	e8 c0 66 00 00       	call   f420 <async_data_write_start@plt>
    8d60:	89 1c 24             	mov    %ebx,(%esp)
    8d63:	89 45 d0             	mov    %eax,-0x30(%ebp)
    8d66:	e8 e5 67 00 00       	call   f550 <async_exchange_end@plt>
    8d6b:	8b 45 d0             	mov    -0x30(%ebp),%eax
    8d6e:	83 c4 10             	add    $0x10,%esp
    8d71:	85 c0                	test   %eax,%eax
    8d73:	75 1b                	jne    8d90 <nic_send_frame+0x70>
    8d75:	50                   	push   %eax
    8d76:	50                   	push   %eax
    8d77:	8d 45 d0             	lea    -0x30(%ebp),%eax
    8d7a:	50                   	push   %eax
    8d7b:	56                   	push   %esi
    8d7c:	e8 4f 66 00 00       	call   f3d0 <async_wait_for@plt>
    8d81:	8b 45 d0             	mov    -0x30(%ebp),%eax
    8d84:	83 c4 10             	add    $0x10,%esp
    8d87:	8d 65 f8             	lea    -0x8(%ebp),%esp
    8d8a:	5b                   	pop    %ebx
    8d8b:	5e                   	pop    %esi
    8d8c:	5d                   	pop    %ebp
    8d8d:	c3                   	ret    
    8d8e:	66 90                	xchg   %ax,%ax
    8d90:	83 ec 0c             	sub    $0xc,%esp
    8d93:	56                   	push   %esi
    8d94:	e8 67 6a 00 00       	call   f800 <async_forget@plt>
    8d99:	8b 45 d0             	mov    -0x30(%ebp),%eax
    8d9c:	83 c4 10             	add    $0x10,%esp
    8d9f:	8d 65 f8             	lea    -0x8(%ebp),%esp
    8da2:	5b                   	pop    %ebx
    8da3:	5e                   	pop    %esi
    8da4:	5d                   	pop    %ebp
    8da5:	c3                   	ret    
    8da6:	8d 76 00             	lea    0x0(%esi),%esi
    8da9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00008db0 <nic_callback_create>:
    8db0:	55                   	push   %ebp
    8db1:	89 e5                	mov    %esp,%ebp
    8db3:	56                   	push   %esi
    8db4:	53                   	push   %ebx
    8db5:	83 ec 4c             	sub    $0x4c,%esp
    8db8:	8b 4d 08             	mov    0x8(%ebp),%ecx
    8dbb:	51                   	push   %ecx
    8dbc:	e8 af 69 00 00       	call   f770 <async_exchange_begin@plt>
    8dc1:	83 c4 0c             	add    $0xc,%esp
    8dc4:	89 c3                	mov    %eax,%ebx
    8dc6:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    8dc9:	50                   	push   %eax
    8dca:	6a 00                	push   $0x0
    8dcc:	6a 00                	push   $0x0
    8dce:	6a 00                	push   $0x0
    8dd0:	6a 01                	push   $0x1
    8dd2:	68 05 04 00 00       	push   $0x405
    8dd7:	53                   	push   %ebx
    8dd8:	e8 33 67 00 00       	call   f510 <async_send_fast@plt>
    8ddd:	83 c4 1c             	add    $0x1c,%esp
    8de0:	89 c6                	mov    %eax,%esi
    8de2:	8d 45 d0             	lea    -0x30(%ebp),%eax
    8de5:	50                   	push   %eax
    8de6:	8b 45 10             	mov    0x10(%ebp),%eax
    8de9:	50                   	push   %eax
    8dea:	8b 45 0c             	mov    0xc(%ebp),%eax
    8ded:	50                   	push   %eax
    8dee:	6a 00                	push   $0x0
    8df0:	6a 00                	push   $0x0
    8df2:	68 e5 4e 8f 41       	push   $0x418f4ee5
    8df7:	53                   	push   %ebx
    8df8:	e8 93 68 00 00       	call   f690 <async_create_callback_port@plt>
    8dfd:	83 c4 20             	add    $0x20,%esp
    8e00:	85 c0                	test   %eax,%eax
    8e02:	75 24                	jne    8e28 <nic_callback_create+0x78>
    8e04:	83 ec 0c             	sub    $0xc,%esp
    8e07:	53                   	push   %ebx
    8e08:	e8 43 67 00 00       	call   f550 <async_exchange_end@plt>
    8e0d:	58                   	pop    %eax
    8e0e:	8d 45 cc             	lea    -0x34(%ebp),%eax
    8e11:	5a                   	pop    %edx
    8e12:	50                   	push   %eax
    8e13:	56                   	push   %esi
    8e14:	e8 b7 65 00 00       	call   f3d0 <async_wait_for@plt>
    8e19:	8b 45 cc             	mov    -0x34(%ebp),%eax
    8e1c:	83 c4 10             	add    $0x10,%esp
    8e1f:	8d 65 f8             	lea    -0x8(%ebp),%esp
    8e22:	5b                   	pop    %ebx
    8e23:	5e                   	pop    %esi
    8e24:	5d                   	pop    %ebp
    8e25:	c3                   	ret    
    8e26:	66 90                	xchg   %ax,%ax
    8e28:	83 ec 0c             	sub    $0xc,%esp
    8e2b:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    8e2e:	56                   	push   %esi
    8e2f:	e8 cc 69 00 00       	call   f800 <async_forget@plt>
    8e34:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    8e37:	83 c4 10             	add    $0x10,%esp
    8e3a:	8d 65 f8             	lea    -0x8(%ebp),%esp
    8e3d:	5b                   	pop    %ebx
    8e3e:	5e                   	pop    %esi
    8e3f:	5d                   	pop    %ebp
    8e40:	c3                   	ret    
    8e41:	eb 0d                	jmp    8e50 <nic_get_state>
    8e43:	90                   	nop
    8e44:	90                   	nop
    8e45:	90                   	nop
    8e46:	90                   	nop
    8e47:	90                   	nop
    8e48:	90                   	nop
    8e49:	90                   	nop
    8e4a:	90                   	nop
    8e4b:	90                   	nop
    8e4c:	90                   	nop
    8e4d:	90                   	nop
    8e4e:	90                   	nop
    8e4f:	90                   	nop

00008e50 <nic_get_state>:
    8e50:	55                   	push   %ebp
    8e51:	89 e5                	mov    %esp,%ebp
    8e53:	56                   	push   %esi
    8e54:	53                   	push   %ebx
    8e55:	83 ec 20             	sub    $0x20,%esp
    8e58:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    8e5b:	85 db                	test   %ebx,%ebx
    8e5d:	74 4b                	je     8eaa <nic_get_state+0x5a>
    8e5f:	83 ec 0c             	sub    $0xc,%esp
    8e62:	8b 45 08             	mov    0x8(%ebp),%eax
    8e65:	50                   	push   %eax
    8e66:	e8 05 69 00 00       	call   f770 <async_exchange_begin@plt>
    8e6b:	83 c4 0c             	add    $0xc,%esp
    8e6e:	89 c6                	mov    %eax,%esi
    8e70:	8d 45 f4             	lea    -0xc(%ebp),%eax
    8e73:	6a 00                	push   $0x0
    8e75:	6a 00                	push   $0x0
    8e77:	6a 00                	push   $0x0
    8e79:	6a 00                	push   $0x0
    8e7b:	50                   	push   %eax
    8e7c:	6a 00                	push   $0x0
    8e7e:	6a 00                	push   $0x0
    8e80:	6a 00                	push   $0x0
    8e82:	6a 02                	push   $0x2
    8e84:	68 05 04 00 00       	push   $0x405
    8e89:	56                   	push   %esi
    8e8a:	e8 61 66 00 00       	call   f4f0 <async_req_fast@plt>
    8e8f:	83 c4 24             	add    $0x24,%esp
    8e92:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    8e95:	56                   	push   %esi
    8e96:	e8 b5 66 00 00       	call   f550 <async_exchange_end@plt>
    8e9b:	8b 55 f4             	mov    -0xc(%ebp),%edx
    8e9e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    8ea1:	89 13                	mov    %edx,(%ebx)
    8ea3:	8d 65 f8             	lea    -0x8(%ebp),%esp
    8ea6:	5b                   	pop    %ebx
    8ea7:	5e                   	pop    %esi
    8ea8:	5d                   	pop    %ebp
    8ea9:	c3                   	ret    
    8eaa:	52                   	push   %edx
    8eab:	68 a2 00 00 00       	push   $0xa2
    8eb0:	68 c4 ec 00 00       	push   $0xecc4
    8eb5:	68 63 ed 00 00       	push   $0xed63
    8eba:	e8 a1 66 00 00       	call   f560 <assert_abort@plt>
    8ebf:	90                   	nop

00008ec0 <nic_set_state>:
    8ec0:	55                   	push   %ebp
    8ec1:	89 e5                	mov    %esp,%ebp
    8ec3:	53                   	push   %ebx
    8ec4:	83 ec 20             	sub    $0x20,%esp
    8ec7:	8b 45 08             	mov    0x8(%ebp),%eax
    8eca:	50                   	push   %eax
    8ecb:	e8 a0 68 00 00       	call   f770 <async_exchange_begin@plt>
    8ed0:	83 c4 0c             	add    $0xc,%esp
    8ed3:	8b 55 0c             	mov    0xc(%ebp),%edx
    8ed6:	89 c3                	mov    %eax,%ebx
    8ed8:	6a 00                	push   $0x0
    8eda:	6a 00                	push   $0x0
    8edc:	6a 00                	push   $0x0
    8ede:	6a 00                	push   $0x0
    8ee0:	6a 00                	push   $0x0
    8ee2:	6a 00                	push   $0x0
    8ee4:	6a 00                	push   $0x0
    8ee6:	52                   	push   %edx
    8ee7:	6a 03                	push   $0x3
    8ee9:	68 05 04 00 00       	push   $0x405
    8eee:	50                   	push   %eax
    8eef:	e8 fc 65 00 00       	call   f4f0 <async_req_fast@plt>
    8ef4:	83 c4 24             	add    $0x24,%esp
    8ef7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    8efa:	53                   	push   %ebx
    8efb:	e8 50 66 00 00       	call   f550 <async_exchange_end@plt>
    8f00:	8b 45 f4             	mov    -0xc(%ebp),%eax
    8f03:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    8f06:	c9                   	leave  
    8f07:	c3                   	ret    
    8f08:	90                   	nop
    8f09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00008f10 <nic_get_address>:
    8f10:	55                   	push   %ebp
    8f11:	89 e5                	mov    %esp,%ebp
    8f13:	57                   	push   %edi
    8f14:	56                   	push   %esi
    8f15:	53                   	push   %ebx
    8f16:	83 ec 2c             	sub    $0x2c,%esp
    8f19:	8b 75 0c             	mov    0xc(%ebp),%esi
    8f1c:	85 f6                	test   %esi,%esi
    8f1e:	74 60                	je     8f80 <nic_get_address+0x70>
    8f20:	83 ec 0c             	sub    $0xc,%esp
    8f23:	8b 45 08             	mov    0x8(%ebp),%eax
    8f26:	50                   	push   %eax
    8f27:	e8 44 68 00 00       	call   f770 <async_exchange_begin@plt>
    8f2c:	83 c4 0c             	add    $0xc,%esp
    8f2f:	89 c3                	mov    %eax,%ebx
    8f31:	6a 00                	push   $0x0
    8f33:	6a 00                	push   $0x0
    8f35:	6a 00                	push   $0x0
    8f37:	6a 00                	push   $0x0
    8f39:	6a 04                	push   $0x4
    8f3b:	68 05 04 00 00       	push   $0x405
    8f40:	50                   	push   %eax
    8f41:	e8 ca 65 00 00       	call   f510 <async_send_fast@plt>
    8f46:	83 c4 1c             	add    $0x1c,%esp
    8f49:	89 c7                	mov    %eax,%edi
    8f4b:	6a 06                	push   $0x6
    8f4d:	56                   	push   %esi
    8f4e:	53                   	push   %ebx
    8f4f:	e8 8c 67 00 00       	call   f6e0 <async_data_read_start@plt>
    8f54:	89 1c 24             	mov    %ebx,(%esp)
    8f57:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    8f5a:	e8 f1 65 00 00       	call   f550 <async_exchange_end@plt>
    8f5f:	5a                   	pop    %edx
    8f60:	8d 55 e4             	lea    -0x1c(%ebp),%edx
    8f63:	59                   	pop    %ecx
    8f64:	52                   	push   %edx
    8f65:	57                   	push   %edi
    8f66:	e8 65 64 00 00       	call   f3d0 <async_wait_for@plt>
    8f6b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    8f6e:	83 c4 10             	add    $0x10,%esp
    8f71:	85 c0                	test   %eax,%eax
    8f73:	75 03                	jne    8f78 <nic_get_address+0x68>
    8f75:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    8f78:	8d 65 f4             	lea    -0xc(%ebp),%esp
    8f7b:	5b                   	pop    %ebx
    8f7c:	5e                   	pop    %esi
    8f7d:	5f                   	pop    %edi
    8f7e:	5d                   	pop    %ebp
    8f7f:	c3                   	ret    
    8f80:	53                   	push   %ebx
    8f81:	68 cc 00 00 00       	push   $0xcc
    8f86:	68 c4 ec 00 00       	push   $0xecc4
    8f8b:	68 e8 ec 00 00       	push   $0xece8
    8f90:	e8 cb 65 00 00       	call   f560 <assert_abort@plt>
    8f95:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8f99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00008fa0 <nic_set_address>:
    8fa0:	55                   	push   %ebp
    8fa1:	89 e5                	mov    %esp,%ebp
    8fa3:	57                   	push   %edi
    8fa4:	56                   	push   %esi
    8fa5:	53                   	push   %ebx
    8fa6:	83 ec 2c             	sub    $0x2c,%esp
    8fa9:	8b 75 0c             	mov    0xc(%ebp),%esi
    8fac:	85 f6                	test   %esi,%esi
    8fae:	74 60                	je     9010 <nic_set_address+0x70>
    8fb0:	83 ec 0c             	sub    $0xc,%esp
    8fb3:	8b 45 08             	mov    0x8(%ebp),%eax
    8fb6:	50                   	push   %eax
    8fb7:	e8 b4 67 00 00       	call   f770 <async_exchange_begin@plt>
    8fbc:	83 c4 0c             	add    $0xc,%esp
    8fbf:	89 c3                	mov    %eax,%ebx
    8fc1:	6a 00                	push   $0x0
    8fc3:	6a 00                	push   $0x0
    8fc5:	6a 00                	push   $0x0
    8fc7:	6a 00                	push   $0x0
    8fc9:	6a 05                	push   $0x5
    8fcb:	68 05 04 00 00       	push   $0x405
    8fd0:	50                   	push   %eax
    8fd1:	e8 3a 65 00 00       	call   f510 <async_send_fast@plt>
    8fd6:	83 c4 1c             	add    $0x1c,%esp
    8fd9:	89 c7                	mov    %eax,%edi
    8fdb:	6a 06                	push   $0x6
    8fdd:	56                   	push   %esi
    8fde:	53                   	push   %ebx
    8fdf:	e8 3c 64 00 00       	call   f420 <async_data_write_start@plt>
    8fe4:	89 1c 24             	mov    %ebx,(%esp)
    8fe7:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    8fea:	e8 61 65 00 00       	call   f550 <async_exchange_end@plt>
    8fef:	5a                   	pop    %edx
    8ff0:	8d 55 e4             	lea    -0x1c(%ebp),%edx
    8ff3:	59                   	pop    %ecx
    8ff4:	52                   	push   %edx
    8ff5:	57                   	push   %edi
    8ff6:	e8 d5 63 00 00       	call   f3d0 <async_wait_for@plt>
    8ffb:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    8ffe:	83 c4 10             	add    $0x10,%esp
    9001:	85 c0                	test   %eax,%eax
    9003:	75 03                	jne    9008 <nic_set_address+0x68>
    9005:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    9008:	8d 65 f4             	lea    -0xc(%ebp),%esp
    900b:	5b                   	pop    %ebx
    900c:	5e                   	pop    %esi
    900d:	5f                   	pop    %edi
    900e:	5d                   	pop    %ebp
    900f:	c3                   	ret    
    9010:	53                   	push   %ebx
    9011:	68 e7 00 00 00       	push   $0xe7
    9016:	68 c4 ec 00 00       	push   $0xecc4
    901b:	68 e8 ec 00 00       	push   $0xece8
    9020:	e8 3b 65 00 00       	call   f560 <assert_abort@plt>
    9025:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9029:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009030 <nic_get_stats>:
    9030:	55                   	push   %ebp
    9031:	89 e5                	mov    %esp,%ebp
    9033:	56                   	push   %esi
    9034:	53                   	push   %ebx
    9035:	83 ec 10             	sub    $0x10,%esp
    9038:	8b 75 0c             	mov    0xc(%ebp),%esi
    903b:	85 f6                	test   %esi,%esi
    903d:	74 72                	je     90b1 <nic_get_stats+0x81>
    903f:	83 ec 0c             	sub    $0xc,%esp
    9042:	8b 55 08             	mov    0x8(%ebp),%edx
    9045:	52                   	push   %edx
    9046:	e8 25 67 00 00       	call   f770 <async_exchange_begin@plt>
    904b:	83 c4 0c             	add    $0xc,%esp
    904e:	89 c3                	mov    %eax,%ebx
    9050:	6a 00                	push   $0x0
    9052:	6a 00                	push   $0x0
    9054:	6a 00                	push   $0x0
    9056:	6a 00                	push   $0x0
    9058:	6a 00                	push   $0x0
    905a:	6a 00                	push   $0x0
    905c:	6a 00                	push   $0x0
    905e:	6a 00                	push   $0x0
    9060:	6a 06                	push   $0x6
    9062:	68 05 04 00 00       	push   $0x405
    9067:	50                   	push   %eax
    9068:	e8 83 64 00 00       	call   f4f0 <async_req_fast@plt>
    906d:	83 c4 30             	add    $0x30,%esp
    9070:	85 c0                	test   %eax,%eax
    9072:	75 24                	jne    9098 <nic_get_stats+0x68>
    9074:	50                   	push   %eax
    9075:	6a 6c                	push   $0x6c
    9077:	56                   	push   %esi
    9078:	53                   	push   %ebx
    9079:	e8 62 66 00 00       	call   f6e0 <async_data_read_start@plt>
    907e:	89 1c 24             	mov    %ebx,(%esp)
    9081:	89 45 f4             	mov    %eax,-0xc(%ebp)
    9084:	e8 c7 64 00 00       	call   f550 <async_exchange_end@plt>
    9089:	8b 45 f4             	mov    -0xc(%ebp),%eax
    908c:	83 c4 10             	add    $0x10,%esp
    908f:	8d 65 f8             	lea    -0x8(%ebp),%esp
    9092:	5b                   	pop    %ebx
    9093:	5e                   	pop    %esi
    9094:	5d                   	pop    %ebp
    9095:	c3                   	ret    
    9096:	66 90                	xchg   %ax,%ax
    9098:	83 ec 0c             	sub    $0xc,%esp
    909b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    909e:	53                   	push   %ebx
    909f:	e8 ac 64 00 00       	call   f550 <async_exchange_end@plt>
    90a4:	8b 45 f4             	mov    -0xc(%ebp),%eax
    90a7:	83 c4 10             	add    $0x10,%esp
    90aa:	8d 65 f8             	lea    -0x8(%ebp),%esp
    90ad:	5b                   	pop    %ebx
    90ae:	5e                   	pop    %esi
    90af:	5d                   	pop    %ebp
    90b0:	c3                   	ret    
    90b1:	51                   	push   %ecx
    90b2:	68 02 01 00 00       	push   $0x102
    90b7:	68 c4 ec 00 00       	push   $0xecc4
    90bc:	68 4b ed 00 00       	push   $0xed4b
    90c1:	e8 9a 64 00 00       	call   f560 <assert_abort@plt>
    90c6:	8d 76 00             	lea    0x0(%esi),%esi
    90c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000090d0 <nic_get_device_info>:
    90d0:	55                   	push   %ebp
    90d1:	89 e5                	mov    %esp,%ebp
    90d3:	57                   	push   %edi
    90d4:	56                   	push   %esi
    90d5:	53                   	push   %ebx
    90d6:	83 ec 2c             	sub    $0x2c,%esp
    90d9:	8b 75 0c             	mov    0xc(%ebp),%esi
    90dc:	85 f6                	test   %esi,%esi
    90de:	74 63                	je     9143 <nic_get_device_info+0x73>
    90e0:	83 ec 0c             	sub    $0xc,%esp
    90e3:	8b 45 08             	mov    0x8(%ebp),%eax
    90e6:	50                   	push   %eax
    90e7:	e8 84 66 00 00       	call   f770 <async_exchange_begin@plt>
    90ec:	83 c4 0c             	add    $0xc,%esp
    90ef:	89 c3                	mov    %eax,%ebx
    90f1:	6a 00                	push   $0x0
    90f3:	6a 00                	push   $0x0
    90f5:	6a 00                	push   $0x0
    90f7:	6a 00                	push   $0x0
    90f9:	6a 07                	push   $0x7
    90fb:	68 05 04 00 00       	push   $0x405
    9100:	50                   	push   %eax
    9101:	e8 0a 64 00 00       	call   f510 <async_send_fast@plt>
    9106:	83 c4 1c             	add    $0x1c,%esp
    9109:	89 c7                	mov    %eax,%edi
    910b:	68 1c 01 00 00       	push   $0x11c
    9110:	56                   	push   %esi
    9111:	53                   	push   %ebx
    9112:	e8 c9 65 00 00       	call   f6e0 <async_data_read_start@plt>
    9117:	89 1c 24             	mov    %ebx,(%esp)
    911a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    911d:	e8 2e 64 00 00       	call   f550 <async_exchange_end@plt>
    9122:	5a                   	pop    %edx
    9123:	8d 55 e4             	lea    -0x1c(%ebp),%edx
    9126:	59                   	pop    %ecx
    9127:	52                   	push   %edx
    9128:	57                   	push   %edi
    9129:	e8 a2 62 00 00       	call   f3d0 <async_wait_for@plt>
    912e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9131:	83 c4 10             	add    $0x10,%esp
    9134:	85 c0                	test   %eax,%eax
    9136:	75 03                	jne    913b <nic_get_device_info+0x6b>
    9138:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    913b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    913e:	5b                   	pop    %ebx
    913f:	5e                   	pop    %esi
    9140:	5f                   	pop    %edi
    9141:	5d                   	pop    %ebp
    9142:	c3                   	ret    
    9143:	53                   	push   %ebx
    9144:	68 20 01 00 00       	push   $0x120
    9149:	68 c4 ec 00 00       	push   $0xecc4
    914e:	68 51 ed 00 00       	push   $0xed51
    9153:	e8 08 64 00 00       	call   f560 <assert_abort@plt>
    9158:	90                   	nop
    9159:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00009160 <nic_get_cable_state>:
    9160:	55                   	push   %ebp
    9161:	89 e5                	mov    %esp,%ebp
    9163:	56                   	push   %esi
    9164:	53                   	push   %ebx
    9165:	83 ec 20             	sub    $0x20,%esp
    9168:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    916b:	85 db                	test   %ebx,%ebx
    916d:	74 4b                	je     91ba <nic_get_cable_state+0x5a>
    916f:	83 ec 0c             	sub    $0xc,%esp
    9172:	8b 45 08             	mov    0x8(%ebp),%eax
    9175:	50                   	push   %eax
    9176:	e8 f5 65 00 00       	call   f770 <async_exchange_begin@plt>
    917b:	83 c4 0c             	add    $0xc,%esp
    917e:	89 c6                	mov    %eax,%esi
    9180:	8d 45 f4             	lea    -0xc(%ebp),%eax
    9183:	6a 00                	push   $0x0
    9185:	6a 00                	push   $0x0
    9187:	6a 00                	push   $0x0
    9189:	6a 00                	push   $0x0
    918b:	50                   	push   %eax
    918c:	6a 00                	push   $0x0
    918e:	6a 00                	push   $0x0
    9190:	6a 00                	push   $0x0
    9192:	6a 08                	push   $0x8
    9194:	68 05 04 00 00       	push   $0x405
    9199:	56                   	push   %esi
    919a:	e8 51 63 00 00       	call   f4f0 <async_req_fast@plt>
    919f:	83 c4 24             	add    $0x24,%esp
    91a2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    91a5:	56                   	push   %esi
    91a6:	e8 a5 63 00 00       	call   f550 <async_exchange_end@plt>
    91ab:	8b 55 f4             	mov    -0xc(%ebp),%edx
    91ae:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    91b1:	89 13                	mov    %edx,(%ebx)
    91b3:	8d 65 f8             	lea    -0x8(%ebp),%esp
    91b6:	5b                   	pop    %ebx
    91b7:	5e                   	pop    %esi
    91b8:	5d                   	pop    %ebp
    91b9:	c3                   	ret    
    91ba:	52                   	push   %edx
    91bb:	68 3c 01 00 00       	push   $0x13c
    91c0:	68 c4 ec 00 00       	push   $0xecc4
    91c5:	68 5d ed 00 00       	push   $0xed5d
    91ca:	e8 91 63 00 00       	call   f560 <assert_abort@plt>
    91cf:	90                   	nop

000091d0 <nic_get_operation_mode>:
    91d0:	55                   	push   %ebp
    91d1:	89 e5                	mov    %esp,%ebp
    91d3:	57                   	push   %edi
    91d4:	56                   	push   %esi
    91d5:	53                   	push   %ebx
    91d6:	83 ec 38             	sub    $0x38,%esp
    91d9:	8b 4d 08             	mov    0x8(%ebp),%ecx
    91dc:	8b 7d 0c             	mov    0xc(%ebp),%edi
    91df:	51                   	push   %ecx
    91e0:	8b 5d 14             	mov    0x14(%ebp),%ebx
    91e3:	e8 88 65 00 00       	call   f770 <async_exchange_begin@plt>
    91e8:	83 c4 0c             	add    $0xc,%esp
    91eb:	89 c6                	mov    %eax,%esi
    91ed:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    91f0:	6a 00                	push   $0x0
    91f2:	6a 00                	push   $0x0
    91f4:	50                   	push   %eax
    91f5:	8d 45 e0             	lea    -0x20(%ebp),%eax
    91f8:	50                   	push   %eax
    91f9:	8d 45 dc             	lea    -0x24(%ebp),%eax
    91fc:	50                   	push   %eax
    91fd:	6a 00                	push   $0x0
    91ff:	6a 00                	push   $0x0
    9201:	6a 00                	push   $0x0
    9203:	6a 09                	push   $0x9
    9205:	68 05 04 00 00       	push   $0x405
    920a:	56                   	push   %esi
    920b:	e8 e0 62 00 00       	call   f4f0 <async_req_fast@plt>
    9210:	83 c4 24             	add    $0x24,%esp
    9213:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    9216:	56                   	push   %esi
    9217:	e8 34 63 00 00       	call   f550 <async_exchange_end@plt>
    921c:	83 c4 10             	add    $0x10,%esp
    921f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9222:	85 ff                	test   %edi,%edi
    9224:	74 05                	je     922b <nic_get_operation_mode+0x5b>
    9226:	8b 55 dc             	mov    -0x24(%ebp),%edx
    9229:	89 17                	mov    %edx,(%edi)
    922b:	8b 55 10             	mov    0x10(%ebp),%edx
    922e:	85 d2                	test   %edx,%edx
    9230:	74 08                	je     923a <nic_get_operation_mode+0x6a>
    9232:	8b 4d 10             	mov    0x10(%ebp),%ecx
    9235:	8b 55 e0             	mov    -0x20(%ebp),%edx
    9238:	89 11                	mov    %edx,(%ecx)
    923a:	85 db                	test   %ebx,%ebx
    923c:	74 05                	je     9243 <nic_get_operation_mode+0x73>
    923e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    9241:	89 13                	mov    %edx,(%ebx)
    9243:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9246:	5b                   	pop    %ebx
    9247:	5e                   	pop    %esi
    9248:	5f                   	pop    %edi
    9249:	5d                   	pop    %ebp
    924a:	c3                   	ret    
    924b:	90                   	nop
    924c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00009250 <nic_set_operation_mode>:
    9250:	55                   	push   %ebp
    9251:	89 e5                	mov    %esp,%ebp
    9253:	53                   	push   %ebx
    9254:	83 ec 20             	sub    $0x20,%esp
    9257:	8b 45 08             	mov    0x8(%ebp),%eax
    925a:	50                   	push   %eax
    925b:	e8 10 65 00 00       	call   f770 <async_exchange_begin@plt>
    9260:	83 c4 0c             	add    $0xc,%esp
    9263:	89 c3                	mov    %eax,%ebx
    9265:	8b 55 14             	mov    0x14(%ebp),%edx
    9268:	8b 4d 10             	mov    0x10(%ebp),%ecx
    926b:	8b 45 0c             	mov    0xc(%ebp),%eax
    926e:	6a 00                	push   $0x0
    9270:	6a 00                	push   $0x0
    9272:	6a 00                	push   $0x0
    9274:	6a 00                	push   $0x0
    9276:	6a 00                	push   $0x0
    9278:	52                   	push   %edx
    9279:	51                   	push   %ecx
    927a:	50                   	push   %eax
    927b:	6a 0a                	push   $0xa
    927d:	68 05 04 00 00       	push   $0x405
    9282:	53                   	push   %ebx
    9283:	e8 68 62 00 00       	call   f4f0 <async_req_fast@plt>
    9288:	83 c4 24             	add    $0x24,%esp
    928b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    928e:	53                   	push   %ebx
    928f:	e8 bc 62 00 00       	call   f550 <async_exchange_end@plt>
    9294:	8b 45 f4             	mov    -0xc(%ebp),%eax
    9297:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    929a:	c9                   	leave  
    929b:	c3                   	ret    
    929c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000092a0 <nic_autoneg_enable>:
    92a0:	55                   	push   %ebp
    92a1:	89 e5                	mov    %esp,%ebp
    92a3:	53                   	push   %ebx
    92a4:	83 ec 20             	sub    $0x20,%esp
    92a7:	8b 45 08             	mov    0x8(%ebp),%eax
    92aa:	50                   	push   %eax
    92ab:	e8 c0 64 00 00       	call   f770 <async_exchange_begin@plt>
    92b0:	83 c4 0c             	add    $0xc,%esp
    92b3:	8b 55 0c             	mov    0xc(%ebp),%edx
    92b6:	89 c3                	mov    %eax,%ebx
    92b8:	6a 00                	push   $0x0
    92ba:	6a 00                	push   $0x0
    92bc:	6a 00                	push   $0x0
    92be:	6a 00                	push   $0x0
    92c0:	6a 00                	push   $0x0
    92c2:	6a 00                	push   $0x0
    92c4:	6a 00                	push   $0x0
    92c6:	52                   	push   %edx
    92c7:	6a 0b                	push   $0xb
    92c9:	68 05 04 00 00       	push   $0x405
    92ce:	50                   	push   %eax
    92cf:	e8 1c 62 00 00       	call   f4f0 <async_req_fast@plt>
    92d4:	83 c4 24             	add    $0x24,%esp
    92d7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    92da:	53                   	push   %ebx
    92db:	e8 70 62 00 00       	call   f550 <async_exchange_end@plt>
    92e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
    92e3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    92e6:	c9                   	leave  
    92e7:	c3                   	ret    
    92e8:	90                   	nop
    92e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000092f0 <nic_autoneg_disable>:
    92f0:	55                   	push   %ebp
    92f1:	89 e5                	mov    %esp,%ebp
    92f3:	53                   	push   %ebx
    92f4:	83 ec 20             	sub    $0x20,%esp
    92f7:	8b 45 08             	mov    0x8(%ebp),%eax
    92fa:	50                   	push   %eax
    92fb:	e8 70 64 00 00       	call   f770 <async_exchange_begin@plt>
    9300:	83 c4 0c             	add    $0xc,%esp
    9303:	89 c3                	mov    %eax,%ebx
    9305:	6a 00                	push   $0x0
    9307:	6a 00                	push   $0x0
    9309:	6a 00                	push   $0x0
    930b:	6a 00                	push   $0x0
    930d:	6a 00                	push   $0x0
    930f:	6a 00                	push   $0x0
    9311:	6a 00                	push   $0x0
    9313:	6a 00                	push   $0x0
    9315:	6a 0c                	push   $0xc
    9317:	68 05 04 00 00       	push   $0x405
    931c:	50                   	push   %eax
    931d:	e8 ce 61 00 00       	call   f4f0 <async_req_fast@plt>
    9322:	83 c4 24             	add    $0x24,%esp
    9325:	89 45 f4             	mov    %eax,-0xc(%ebp)
    9328:	53                   	push   %ebx
    9329:	e8 22 62 00 00       	call   f550 <async_exchange_end@plt>
    932e:	8b 45 f4             	mov    -0xc(%ebp),%eax
    9331:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    9334:	c9                   	leave  
    9335:	c3                   	ret    
    9336:	8d 76 00             	lea    0x0(%esi),%esi
    9339:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009340 <nic_autoneg_probe>:
    9340:	55                   	push   %ebp
    9341:	89 e5                	mov    %esp,%ebp
    9343:	57                   	push   %edi
    9344:	56                   	push   %esi
    9345:	53                   	push   %ebx
    9346:	83 ec 38             	sub    $0x38,%esp
    9349:	8b 45 08             	mov    0x8(%ebp),%eax
    934c:	8b 7d 0c             	mov    0xc(%ebp),%edi
    934f:	50                   	push   %eax
    9350:	8b 5d 18             	mov    0x18(%ebp),%ebx
    9353:	e8 18 64 00 00       	call   f770 <async_exchange_begin@plt>
    9358:	83 c4 0c             	add    $0xc,%esp
    935b:	89 c6                	mov    %eax,%esi
    935d:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9360:	6a 00                	push   $0x0
    9362:	50                   	push   %eax
    9363:	8d 45 e0             	lea    -0x20(%ebp),%eax
    9366:	50                   	push   %eax
    9367:	8d 45 dc             	lea    -0x24(%ebp),%eax
    936a:	50                   	push   %eax
    936b:	8d 45 d8             	lea    -0x28(%ebp),%eax
    936e:	50                   	push   %eax
    936f:	6a 00                	push   $0x0
    9371:	6a 00                	push   $0x0
    9373:	6a 00                	push   $0x0
    9375:	6a 0d                	push   $0xd
    9377:	68 05 04 00 00       	push   $0x405
    937c:	56                   	push   %esi
    937d:	e8 6e 61 00 00       	call   f4f0 <async_req_fast@plt>
    9382:	83 c4 24             	add    $0x24,%esp
    9385:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    9388:	56                   	push   %esi
    9389:	e8 c2 61 00 00       	call   f550 <async_exchange_end@plt>
    938e:	83 c4 10             	add    $0x10,%esp
    9391:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9394:	85 ff                	test   %edi,%edi
    9396:	74 05                	je     939d <nic_autoneg_probe+0x5d>
    9398:	8b 55 d8             	mov    -0x28(%ebp),%edx
    939b:	89 17                	mov    %edx,(%edi)
    939d:	8b 4d 10             	mov    0x10(%ebp),%ecx
    93a0:	8b 31                	mov    (%ecx),%esi
    93a2:	85 f6                	test   %esi,%esi
    93a4:	74 05                	je     93ab <nic_autoneg_probe+0x6b>
    93a6:	8b 55 dc             	mov    -0x24(%ebp),%edx
    93a9:	89 11                	mov    %edx,(%ecx)
    93ab:	8b 55 14             	mov    0x14(%ebp),%edx
    93ae:	85 d2                	test   %edx,%edx
    93b0:	74 08                	je     93ba <nic_autoneg_probe+0x7a>
    93b2:	8b 4d 14             	mov    0x14(%ebp),%ecx
    93b5:	8b 55 e0             	mov    -0x20(%ebp),%edx
    93b8:	89 11                	mov    %edx,(%ecx)
    93ba:	85 db                	test   %ebx,%ebx
    93bc:	74 05                	je     93c3 <nic_autoneg_probe+0x83>
    93be:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    93c1:	89 13                	mov    %edx,(%ebx)
    93c3:	8d 65 f4             	lea    -0xc(%ebp),%esp
    93c6:	5b                   	pop    %ebx
    93c7:	5e                   	pop    %esi
    93c8:	5f                   	pop    %edi
    93c9:	5d                   	pop    %ebp
    93ca:	c3                   	ret    
    93cb:	90                   	nop
    93cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000093d0 <nic_autoneg_restart>:
    93d0:	55                   	push   %ebp
    93d1:	89 e5                	mov    %esp,%ebp
    93d3:	53                   	push   %ebx
    93d4:	83 ec 20             	sub    $0x20,%esp
    93d7:	8b 45 08             	mov    0x8(%ebp),%eax
    93da:	50                   	push   %eax
    93db:	e8 90 63 00 00       	call   f770 <async_exchange_begin@plt>
    93e0:	83 c4 0c             	add    $0xc,%esp
    93e3:	89 c3                	mov    %eax,%ebx
    93e5:	6a 00                	push   $0x0
    93e7:	6a 00                	push   $0x0
    93e9:	6a 00                	push   $0x0
    93eb:	6a 00                	push   $0x0
    93ed:	6a 00                	push   $0x0
    93ef:	6a 00                	push   $0x0
    93f1:	6a 00                	push   $0x0
    93f3:	6a 00                	push   $0x0
    93f5:	6a 0e                	push   $0xe
    93f7:	68 05 04 00 00       	push   $0x405
    93fc:	50                   	push   %eax
    93fd:	e8 ee 60 00 00       	call   f4f0 <async_req_fast@plt>
    9402:	83 c4 24             	add    $0x24,%esp
    9405:	89 45 f4             	mov    %eax,-0xc(%ebp)
    9408:	53                   	push   %ebx
    9409:	e8 42 61 00 00       	call   f550 <async_exchange_end@plt>
    940e:	8b 45 f4             	mov    -0xc(%ebp),%eax
    9411:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    9414:	c9                   	leave  
    9415:	c3                   	ret    
    9416:	8d 76 00             	lea    0x0(%esi),%esi
    9419:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009420 <nic_get_pause>:
    9420:	55                   	push   %ebp
    9421:	89 e5                	mov    %esp,%ebp
    9423:	57                   	push   %edi
    9424:	56                   	push   %esi
    9425:	53                   	push   %ebx
    9426:	83 ec 38             	sub    $0x38,%esp
    9429:	8b 4d 08             	mov    0x8(%ebp),%ecx
    942c:	8b 7d 0c             	mov    0xc(%ebp),%edi
    942f:	51                   	push   %ecx
    9430:	8b 5d 14             	mov    0x14(%ebp),%ebx
    9433:	e8 38 63 00 00       	call   f770 <async_exchange_begin@plt>
    9438:	83 c4 0c             	add    $0xc,%esp
    943b:	89 c6                	mov    %eax,%esi
    943d:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9440:	6a 00                	push   $0x0
    9442:	6a 00                	push   $0x0
    9444:	50                   	push   %eax
    9445:	8d 45 e0             	lea    -0x20(%ebp),%eax
    9448:	50                   	push   %eax
    9449:	8d 45 dc             	lea    -0x24(%ebp),%eax
    944c:	50                   	push   %eax
    944d:	6a 00                	push   $0x0
    944f:	6a 00                	push   $0x0
    9451:	6a 00                	push   $0x0
    9453:	6a 0f                	push   $0xf
    9455:	68 05 04 00 00       	push   $0x405
    945a:	56                   	push   %esi
    945b:	e8 90 60 00 00       	call   f4f0 <async_req_fast@plt>
    9460:	83 c4 24             	add    $0x24,%esp
    9463:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    9466:	56                   	push   %esi
    9467:	e8 e4 60 00 00       	call   f550 <async_exchange_end@plt>
    946c:	83 c4 10             	add    $0x10,%esp
    946f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9472:	85 ff                	test   %edi,%edi
    9474:	74 05                	je     947b <nic_get_pause+0x5b>
    9476:	8b 55 dc             	mov    -0x24(%ebp),%edx
    9479:	89 17                	mov    %edx,(%edi)
    947b:	8b 55 10             	mov    0x10(%ebp),%edx
    947e:	85 d2                	test   %edx,%edx
    9480:	74 08                	je     948a <nic_get_pause+0x6a>
    9482:	8b 4d 10             	mov    0x10(%ebp),%ecx
    9485:	8b 55 e0             	mov    -0x20(%ebp),%edx
    9488:	89 11                	mov    %edx,(%ecx)
    948a:	85 db                	test   %ebx,%ebx
    948c:	74 06                	je     9494 <nic_get_pause+0x74>
    948e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    9491:	66 89 13             	mov    %dx,(%ebx)
    9494:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9497:	5b                   	pop    %ebx
    9498:	5e                   	pop    %esi
    9499:	5f                   	pop    %edi
    949a:	5d                   	pop    %ebp
    949b:	c3                   	ret    
    949c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000094a0 <nic_set_pause>:
    94a0:	55                   	push   %ebp
    94a1:	89 e5                	mov    %esp,%ebp
    94a3:	56                   	push   %esi
    94a4:	53                   	push   %ebx
    94a5:	83 ec 1c             	sub    $0x1c,%esp
    94a8:	8b 45 08             	mov    0x8(%ebp),%eax
    94ab:	8b 5d 14             	mov    0x14(%ebp),%ebx
    94ae:	50                   	push   %eax
    94af:	e8 bc 62 00 00       	call   f770 <async_exchange_begin@plt>
    94b4:	83 c4 0c             	add    $0xc,%esp
    94b7:	8b 55 10             	mov    0x10(%ebp),%edx
    94ba:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    94bd:	81 e3 ff ff 00 00    	and    $0xffff,%ebx
    94c3:	6a 00                	push   $0x0
    94c5:	89 c6                	mov    %eax,%esi
    94c7:	6a 00                	push   $0x0
    94c9:	6a 00                	push   $0x0
    94cb:	6a 00                	push   $0x0
    94cd:	6a 00                	push   $0x0
    94cf:	53                   	push   %ebx
    94d0:	52                   	push   %edx
    94d1:	51                   	push   %ecx
    94d2:	6a 10                	push   $0x10
    94d4:	68 05 04 00 00       	push   $0x405
    94d9:	50                   	push   %eax
    94da:	e8 11 60 00 00       	call   f4f0 <async_req_fast@plt>
    94df:	83 c4 24             	add    $0x24,%esp
    94e2:	89 45 f4             	mov    %eax,-0xc(%ebp)
    94e5:	56                   	push   %esi
    94e6:	e8 65 60 00 00       	call   f550 <async_exchange_end@plt>
    94eb:	8b 45 f4             	mov    -0xc(%ebp),%eax
    94ee:	8d 65 f8             	lea    -0x8(%ebp),%esp
    94f1:	5b                   	pop    %ebx
    94f2:	5e                   	pop    %esi
    94f3:	5d                   	pop    %ebp
    94f4:	c3                   	ret    
    94f5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    94f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009500 <nic_unicast_get_mode>:
    9500:	55                   	push   %ebp
    9501:	89 e5                	mov    %esp,%ebp
    9503:	57                   	push   %edi
    9504:	56                   	push   %esi
    9505:	53                   	push   %ebx
    9506:	83 ec 2c             	sub    $0x2c,%esp
    9509:	8b 75 0c             	mov    0xc(%ebp),%esi
    950c:	8b 5d 10             	mov    0x10(%ebp),%ebx
    950f:	85 f6                	test   %esi,%esi
    9511:	0f 84 a0 00 00 00    	je     95b7 <nic_unicast_get_mode+0xb7>
    9517:	8b 45 14             	mov    0x14(%ebp),%eax
    951a:	85 c0                	test   %eax,%eax
    951c:	0f 84 8e 00 00 00    	je     95b0 <nic_unicast_get_mode+0xb0>
    9522:	83 ec 0c             	sub    $0xc,%esp
    9525:	8b 7d 08             	mov    0x8(%ebp),%edi
    9528:	57                   	push   %edi
    9529:	e8 42 62 00 00       	call   f770 <async_exchange_begin@plt>
    952e:	83 c4 0c             	add    $0xc,%esp
    9531:	89 c7                	mov    %eax,%edi
    9533:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9536:	6a 00                	push   $0x0
    9538:	6a 00                	push   $0x0
    953a:	6a 00                	push   $0x0
    953c:	50                   	push   %eax
    953d:	8d 45 e0             	lea    -0x20(%ebp),%eax
    9540:	50                   	push   %eax
    9541:	6a 00                	push   $0x0
    9543:	6a 00                	push   $0x0
    9545:	53                   	push   %ebx
    9546:	6a 11                	push   $0x11
    9548:	68 05 04 00 00       	push   $0x405
    954d:	57                   	push   %edi
    954e:	e8 9d 5f 00 00       	call   f4f0 <async_req_fast@plt>
    9553:	83 c4 30             	add    $0x30,%esp
    9556:	85 c0                	test   %eax,%eax
    9558:	75 1f                	jne    9579 <nic_unicast_get_mode+0x79>
    955a:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    955d:	89 0e                	mov    %ecx,(%esi)
    955f:	8b 75 18             	mov    0x18(%ebp),%esi
    9562:	85 f6                	test   %esi,%esi
    9564:	74 08                	je     956e <nic_unicast_get_mode+0x6e>
    9566:	8b 55 18             	mov    0x18(%ebp),%edx
    9569:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    956c:	89 0a                	mov    %ecx,(%edx)
    956e:	85 db                	test   %ebx,%ebx
    9570:	74 07                	je     9579 <nic_unicast_get_mode+0x79>
    9572:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    9575:	85 c9                	test   %ecx,%ecx
    9577:	75 1f                	jne    9598 <nic_unicast_get_mode+0x98>
    9579:	83 ec 0c             	sub    $0xc,%esp
    957c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    957f:	57                   	push   %edi
    9580:	e8 cb 5f 00 00       	call   f550 <async_exchange_end@plt>
    9585:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9588:	83 c4 10             	add    $0x10,%esp
    958b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    958e:	5b                   	pop    %ebx
    958f:	5e                   	pop    %esi
    9590:	5f                   	pop    %edi
    9591:	5d                   	pop    %ebp
    9592:	c3                   	ret    
    9593:	90                   	nop
    9594:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9598:	50                   	push   %eax
    9599:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    959c:	01 c0                	add    %eax,%eax
    959e:	8b 55 14             	mov    0x14(%ebp),%edx
    95a1:	50                   	push   %eax
    95a2:	52                   	push   %edx
    95a3:	57                   	push   %edi
    95a4:	e8 37 61 00 00       	call   f6e0 <async_data_read_start@plt>
    95a9:	83 c4 10             	add    $0x10,%esp
    95ac:	eb cb                	jmp    9579 <nic_unicast_get_mode+0x79>
    95ae:	66 90                	xchg   %ax,%ax
    95b0:	31 db                	xor    %ebx,%ebx
    95b2:	e9 6b ff ff ff       	jmp    9522 <nic_unicast_get_mode+0x22>
    95b7:	50                   	push   %eax
    95b8:	68 3b 02 00 00       	push   $0x23b
    95bd:	68 c4 ec 00 00       	push   $0xecc4
    95c2:	68 69 ed 00 00       	push   $0xed69
    95c7:	e8 94 5f 00 00       	call   f560 <assert_abort@plt>
    95cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000095d0 <nic_unicast_set_mode>:
    95d0:	55                   	push   %ebp
    95d1:	89 e5                	mov    %esp,%ebp
    95d3:	57                   	push   %edi
    95d4:	56                   	push   %esi
    95d5:	53                   	push   %ebx
    95d6:	83 ec 2c             	sub    $0x2c,%esp
    95d9:	8b 75 10             	mov    0x10(%ebp),%esi
    95dc:	8b 45 08             	mov    0x8(%ebp),%eax
    95df:	8b 5d 14             	mov    0x14(%ebp),%ebx
    95e2:	85 f6                	test   %esi,%esi
    95e4:	0f 84 96 00 00 00    	je     9680 <nic_unicast_set_mode+0xb0>
    95ea:	83 ec 0c             	sub    $0xc,%esp
    95ed:	50                   	push   %eax
    95ee:	e8 7d 61 00 00       	call   f770 <async_exchange_begin@plt>
    95f3:	83 c4 0c             	add    $0xc,%esp
    95f6:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    95f9:	89 c7                	mov    %eax,%edi
    95fb:	6a 00                	push   $0x0
    95fd:	6a 00                	push   $0x0
    95ff:	53                   	push   %ebx
    9600:	51                   	push   %ecx
    9601:	6a 12                	push   $0x12
    9603:	68 05 04 00 00       	push   $0x405
    9608:	50                   	push   %eax
    9609:	e8 02 5f 00 00       	call   f510 <async_send_fast@plt>
    960e:	83 c4 20             	add    $0x20,%esp
    9611:	89 c6                	mov    %eax,%esi
    9613:	85 db                	test   %ebx,%ebx
    9615:	75 29                	jne    9640 <nic_unicast_set_mode+0x70>
    9617:	83 ec 0c             	sub    $0xc,%esp
    961a:	57                   	push   %edi
    961b:	e8 30 5f 00 00       	call   f550 <async_exchange_end@plt>
    9620:	58                   	pop    %eax
    9621:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9624:	5a                   	pop    %edx
    9625:	50                   	push   %eax
    9626:	56                   	push   %esi
    9627:	e8 a4 5d 00 00       	call   f3d0 <async_wait_for@plt>
    962c:	83 c4 10             	add    $0x10,%esp
    962f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    9632:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9635:	5b                   	pop    %ebx
    9636:	5e                   	pop    %esi
    9637:	5f                   	pop    %edi
    9638:	5d                   	pop    %ebp
    9639:	c3                   	ret    
    963a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9640:	50                   	push   %eax
    9641:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    9644:	01 c0                	add    %eax,%eax
    9646:	50                   	push   %eax
    9647:	8b 45 10             	mov    0x10(%ebp),%eax
    964a:	50                   	push   %eax
    964b:	57                   	push   %edi
    964c:	e8 cf 5d 00 00       	call   f420 <async_data_write_start@plt>
    9651:	89 3c 24             	mov    %edi,(%esp)
    9654:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    9657:	e8 f4 5e 00 00       	call   f550 <async_exchange_end@plt>
    965c:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    965f:	58                   	pop    %eax
    9660:	5a                   	pop    %edx
    9661:	51                   	push   %ecx
    9662:	56                   	push   %esi
    9663:	e8 68 5d 00 00       	call   f3d0 <async_wait_for@plt>
    9668:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    966b:	83 c4 10             	add    $0x10,%esp
    966e:	85 c0                	test   %eax,%eax
    9670:	74 bd                	je     962f <nic_unicast_set_mode+0x5f>
    9672:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9675:	5b                   	pop    %ebx
    9676:	5e                   	pop    %esi
    9677:	5f                   	pop    %edi
    9678:	5d                   	pop    %ebp
    9679:	c3                   	ret    
    967a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9680:	83 ec 0c             	sub    $0xc,%esp
    9683:	50                   	push   %eax
    9684:	e8 e7 60 00 00       	call   f770 <async_exchange_begin@plt>
    9689:	83 c4 0c             	add    $0xc,%esp
    968c:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    968f:	89 c3                	mov    %eax,%ebx
    9691:	6a 00                	push   $0x0
    9693:	6a 00                	push   $0x0
    9695:	6a 00                	push   $0x0
    9697:	51                   	push   %ecx
    9698:	6a 12                	push   $0x12
    969a:	68 05 04 00 00       	push   $0x405
    969f:	50                   	push   %eax
    96a0:	e8 6b 5e 00 00       	call   f510 <async_send_fast@plt>
    96a5:	83 c4 14             	add    $0x14,%esp
    96a8:	89 c6                	mov    %eax,%esi
    96aa:	53                   	push   %ebx
    96ab:	e9 6b ff ff ff       	jmp    961b <nic_unicast_set_mode+0x4b>

000096b0 <nic_multicast_get_mode>:
    96b0:	55                   	push   %ebp
    96b1:	89 e5                	mov    %esp,%ebp
    96b3:	57                   	push   %edi
    96b4:	56                   	push   %esi
    96b5:	53                   	push   %ebx
    96b6:	83 ec 2c             	sub    $0x2c,%esp
    96b9:	8b 75 0c             	mov    0xc(%ebp),%esi
    96bc:	8b 5d 10             	mov    0x10(%ebp),%ebx
    96bf:	85 f6                	test   %esi,%esi
    96c1:	0f 84 a0 00 00 00    	je     9767 <nic_multicast_get_mode+0xb7>
    96c7:	8b 45 14             	mov    0x14(%ebp),%eax
    96ca:	85 c0                	test   %eax,%eax
    96cc:	0f 84 8e 00 00 00    	je     9760 <nic_multicast_get_mode+0xb0>
    96d2:	83 ec 0c             	sub    $0xc,%esp
    96d5:	8b 7d 08             	mov    0x8(%ebp),%edi
    96d8:	57                   	push   %edi
    96d9:	e8 92 60 00 00       	call   f770 <async_exchange_begin@plt>
    96de:	83 c4 0c             	add    $0xc,%esp
    96e1:	89 c7                	mov    %eax,%edi
    96e3:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    96e6:	6a 00                	push   $0x0
    96e8:	6a 00                	push   $0x0
    96ea:	6a 00                	push   $0x0
    96ec:	50                   	push   %eax
    96ed:	8d 45 e0             	lea    -0x20(%ebp),%eax
    96f0:	50                   	push   %eax
    96f1:	6a 00                	push   $0x0
    96f3:	6a 00                	push   $0x0
    96f5:	53                   	push   %ebx
    96f6:	6a 13                	push   $0x13
    96f8:	68 05 04 00 00       	push   $0x405
    96fd:	57                   	push   %edi
    96fe:	e8 ed 5d 00 00       	call   f4f0 <async_req_fast@plt>
    9703:	83 c4 30             	add    $0x30,%esp
    9706:	85 c0                	test   %eax,%eax
    9708:	75 1f                	jne    9729 <nic_multicast_get_mode+0x79>
    970a:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    970d:	89 0e                	mov    %ecx,(%esi)
    970f:	8b 75 18             	mov    0x18(%ebp),%esi
    9712:	85 f6                	test   %esi,%esi
    9714:	74 08                	je     971e <nic_multicast_get_mode+0x6e>
    9716:	8b 55 18             	mov    0x18(%ebp),%edx
    9719:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    971c:	89 0a                	mov    %ecx,(%edx)
    971e:	85 db                	test   %ebx,%ebx
    9720:	74 07                	je     9729 <nic_multicast_get_mode+0x79>
    9722:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    9725:	85 c9                	test   %ecx,%ecx
    9727:	75 1f                	jne    9748 <nic_multicast_get_mode+0x98>
    9729:	83 ec 0c             	sub    $0xc,%esp
    972c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    972f:	57                   	push   %edi
    9730:	e8 1b 5e 00 00       	call   f550 <async_exchange_end@plt>
    9735:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9738:	83 c4 10             	add    $0x10,%esp
    973b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    973e:	5b                   	pop    %ebx
    973f:	5e                   	pop    %esi
    9740:	5f                   	pop    %edi
    9741:	5d                   	pop    %ebp
    9742:	c3                   	ret    
    9743:	90                   	nop
    9744:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9748:	50                   	push   %eax
    9749:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    974c:	01 c0                	add    %eax,%eax
    974e:	8b 55 14             	mov    0x14(%ebp),%edx
    9751:	50                   	push   %eax
    9752:	52                   	push   %edx
    9753:	57                   	push   %edi
    9754:	e8 87 5f 00 00       	call   f6e0 <async_data_read_start@plt>
    9759:	83 c4 10             	add    $0x10,%esp
    975c:	eb cb                	jmp    9729 <nic_multicast_get_mode+0x79>
    975e:	66 90                	xchg   %ax,%ax
    9760:	31 db                	xor    %ebx,%ebx
    9762:	e9 6b ff ff ff       	jmp    96d2 <nic_multicast_get_mode+0x22>
    9767:	50                   	push   %eax
    9768:	68 94 02 00 00       	push   $0x294
    976d:	68 c4 ec 00 00       	push   $0xecc4
    9772:	68 69 ed 00 00       	push   $0xed69
    9777:	e8 e4 5d 00 00       	call   f560 <assert_abort@plt>
    977c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00009780 <nic_multicast_set_mode>:
    9780:	55                   	push   %ebp
    9781:	89 e5                	mov    %esp,%ebp
    9783:	57                   	push   %edi
    9784:	56                   	push   %esi
    9785:	53                   	push   %ebx
    9786:	83 ec 2c             	sub    $0x2c,%esp
    9789:	8b 75 10             	mov    0x10(%ebp),%esi
    978c:	8b 45 08             	mov    0x8(%ebp),%eax
    978f:	8b 5d 14             	mov    0x14(%ebp),%ebx
    9792:	85 f6                	test   %esi,%esi
    9794:	0f 84 96 00 00 00    	je     9830 <nic_multicast_set_mode+0xb0>
    979a:	83 ec 0c             	sub    $0xc,%esp
    979d:	50                   	push   %eax
    979e:	e8 cd 5f 00 00       	call   f770 <async_exchange_begin@plt>
    97a3:	83 c4 0c             	add    $0xc,%esp
    97a6:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    97a9:	89 c7                	mov    %eax,%edi
    97ab:	6a 00                	push   $0x0
    97ad:	6a 00                	push   $0x0
    97af:	53                   	push   %ebx
    97b0:	51                   	push   %ecx
    97b1:	6a 14                	push   $0x14
    97b3:	68 05 04 00 00       	push   $0x405
    97b8:	50                   	push   %eax
    97b9:	e8 52 5d 00 00       	call   f510 <async_send_fast@plt>
    97be:	83 c4 20             	add    $0x20,%esp
    97c1:	89 c6                	mov    %eax,%esi
    97c3:	85 db                	test   %ebx,%ebx
    97c5:	75 29                	jne    97f0 <nic_multicast_set_mode+0x70>
    97c7:	83 ec 0c             	sub    $0xc,%esp
    97ca:	57                   	push   %edi
    97cb:	e8 80 5d 00 00       	call   f550 <async_exchange_end@plt>
    97d0:	58                   	pop    %eax
    97d1:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    97d4:	5a                   	pop    %edx
    97d5:	50                   	push   %eax
    97d6:	56                   	push   %esi
    97d7:	e8 f4 5b 00 00       	call   f3d0 <async_wait_for@plt>
    97dc:	83 c4 10             	add    $0x10,%esp
    97df:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    97e2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    97e5:	5b                   	pop    %ebx
    97e6:	5e                   	pop    %esi
    97e7:	5f                   	pop    %edi
    97e8:	5d                   	pop    %ebp
    97e9:	c3                   	ret    
    97ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    97f0:	50                   	push   %eax
    97f1:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    97f4:	01 c0                	add    %eax,%eax
    97f6:	50                   	push   %eax
    97f7:	8b 45 10             	mov    0x10(%ebp),%eax
    97fa:	50                   	push   %eax
    97fb:	57                   	push   %edi
    97fc:	e8 1f 5c 00 00       	call   f420 <async_data_write_start@plt>
    9801:	89 3c 24             	mov    %edi,(%esp)
    9804:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    9807:	e8 44 5d 00 00       	call   f550 <async_exchange_end@plt>
    980c:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    980f:	58                   	pop    %eax
    9810:	5a                   	pop    %edx
    9811:	51                   	push   %ecx
    9812:	56                   	push   %esi
    9813:	e8 b8 5b 00 00       	call   f3d0 <async_wait_for@plt>
    9818:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    981b:	83 c4 10             	add    $0x10,%esp
    981e:	85 c0                	test   %eax,%eax
    9820:	74 bd                	je     97df <nic_multicast_set_mode+0x5f>
    9822:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9825:	5b                   	pop    %ebx
    9826:	5e                   	pop    %esi
    9827:	5f                   	pop    %edi
    9828:	5d                   	pop    %ebp
    9829:	c3                   	ret    
    982a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9830:	83 ec 0c             	sub    $0xc,%esp
    9833:	50                   	push   %eax
    9834:	e8 37 5f 00 00       	call   f770 <async_exchange_begin@plt>
    9839:	83 c4 0c             	add    $0xc,%esp
    983c:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    983f:	89 c3                	mov    %eax,%ebx
    9841:	6a 00                	push   $0x0
    9843:	6a 00                	push   $0x0
    9845:	6a 00                	push   $0x0
    9847:	51                   	push   %ecx
    9848:	6a 14                	push   $0x14
    984a:	68 05 04 00 00       	push   $0x405
    984f:	50                   	push   %eax
    9850:	e8 bb 5c 00 00       	call   f510 <async_send_fast@plt>
    9855:	83 c4 14             	add    $0x14,%esp
    9858:	89 c6                	mov    %eax,%esi
    985a:	53                   	push   %ebx
    985b:	e9 6b ff ff ff       	jmp    97cb <nic_multicast_set_mode+0x4b>

00009860 <nic_broadcast_get_mode>:
    9860:	55                   	push   %ebp
    9861:	89 e5                	mov    %esp,%ebp
    9863:	56                   	push   %esi
    9864:	53                   	push   %ebx
    9865:	83 ec 20             	sub    $0x20,%esp
    9868:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    986b:	85 db                	test   %ebx,%ebx
    986d:	74 4b                	je     98ba <nic_broadcast_get_mode+0x5a>
    986f:	83 ec 0c             	sub    $0xc,%esp
    9872:	8b 45 08             	mov    0x8(%ebp),%eax
    9875:	50                   	push   %eax
    9876:	e8 f5 5e 00 00       	call   f770 <async_exchange_begin@plt>
    987b:	83 c4 0c             	add    $0xc,%esp
    987e:	89 c6                	mov    %eax,%esi
    9880:	8d 45 f4             	lea    -0xc(%ebp),%eax
    9883:	6a 00                	push   $0x0
    9885:	6a 00                	push   $0x0
    9887:	6a 00                	push   $0x0
    9889:	6a 00                	push   $0x0
    988b:	50                   	push   %eax
    988c:	6a 00                	push   $0x0
    988e:	6a 00                	push   $0x0
    9890:	6a 00                	push   $0x0
    9892:	6a 15                	push   $0x15
    9894:	68 05 04 00 00       	push   $0x405
    9899:	56                   	push   %esi
    989a:	e8 51 5c 00 00       	call   f4f0 <async_req_fast@plt>
    989f:	83 c4 24             	add    $0x24,%esp
    98a2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    98a5:	56                   	push   %esi
    98a6:	e8 a5 5c 00 00       	call   f550 <async_exchange_end@plt>
    98ab:	8b 55 f4             	mov    -0xc(%ebp),%edx
    98ae:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    98b1:	89 13                	mov    %edx,(%ebx)
    98b3:	8d 65 f8             	lea    -0x8(%ebp),%esp
    98b6:	5b                   	pop    %ebx
    98b7:	5e                   	pop    %esi
    98b8:	5d                   	pop    %ebp
    98b9:	c3                   	ret    
    98ba:	52                   	push   %edx
    98bb:	68 e2 02 00 00       	push   $0x2e2
    98c0:	68 c4 ec 00 00       	push   $0xecc4
    98c5:	68 69 ed 00 00       	push   $0xed69
    98ca:	e8 91 5c 00 00       	call   f560 <assert_abort@plt>
    98cf:	90                   	nop

000098d0 <nic_broadcast_set_mode>:
    98d0:	55                   	push   %ebp
    98d1:	89 e5                	mov    %esp,%ebp
    98d3:	53                   	push   %ebx
    98d4:	83 ec 20             	sub    $0x20,%esp
    98d7:	8b 45 08             	mov    0x8(%ebp),%eax
    98da:	50                   	push   %eax
    98db:	e8 90 5e 00 00       	call   f770 <async_exchange_begin@plt>
    98e0:	83 c4 0c             	add    $0xc,%esp
    98e3:	8b 55 0c             	mov    0xc(%ebp),%edx
    98e6:	89 c3                	mov    %eax,%ebx
    98e8:	6a 00                	push   $0x0
    98ea:	6a 00                	push   $0x0
    98ec:	6a 00                	push   $0x0
    98ee:	6a 00                	push   $0x0
    98f0:	6a 00                	push   $0x0
    98f2:	6a 00                	push   $0x0
    98f4:	6a 00                	push   $0x0
    98f6:	52                   	push   %edx
    98f7:	6a 16                	push   $0x16
    98f9:	68 05 04 00 00       	push   $0x405
    98fe:	50                   	push   %eax
    98ff:	e8 ec 5b 00 00       	call   f4f0 <async_req_fast@plt>
    9904:	83 c4 24             	add    $0x24,%esp
    9907:	89 45 f4             	mov    %eax,-0xc(%ebp)
    990a:	53                   	push   %ebx
    990b:	e8 40 5c 00 00       	call   f550 <async_exchange_end@plt>
    9910:	8b 45 f4             	mov    -0xc(%ebp),%eax
    9913:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    9916:	c9                   	leave  
    9917:	c3                   	ret    
    9918:	90                   	nop
    9919:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00009920 <nic_defective_get_mode>:
    9920:	55                   	push   %ebp
    9921:	89 e5                	mov    %esp,%ebp
    9923:	56                   	push   %esi
    9924:	53                   	push   %ebx
    9925:	83 ec 20             	sub    $0x20,%esp
    9928:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    992b:	85 db                	test   %ebx,%ebx
    992d:	74 4b                	je     997a <nic_defective_get_mode+0x5a>
    992f:	83 ec 0c             	sub    $0xc,%esp
    9932:	8b 45 08             	mov    0x8(%ebp),%eax
    9935:	50                   	push   %eax
    9936:	e8 35 5e 00 00       	call   f770 <async_exchange_begin@plt>
    993b:	83 c4 0c             	add    $0xc,%esp
    993e:	89 c6                	mov    %eax,%esi
    9940:	8d 45 f4             	lea    -0xc(%ebp),%eax
    9943:	6a 00                	push   $0x0
    9945:	6a 00                	push   $0x0
    9947:	6a 00                	push   $0x0
    9949:	6a 00                	push   $0x0
    994b:	50                   	push   %eax
    994c:	6a 00                	push   $0x0
    994e:	6a 00                	push   $0x0
    9950:	6a 00                	push   $0x0
    9952:	6a 17                	push   $0x17
    9954:	68 05 04 00 00       	push   $0x405
    9959:	56                   	push   %esi
    995a:	e8 91 5b 00 00       	call   f4f0 <async_req_fast@plt>
    995f:	83 c4 24             	add    $0x24,%esp
    9962:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    9965:	56                   	push   %esi
    9966:	e8 e5 5b 00 00       	call   f550 <async_exchange_end@plt>
    996b:	8b 55 f4             	mov    -0xc(%ebp),%edx
    996e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    9971:	89 13                	mov    %edx,(%ebx)
    9973:	8d 65 f8             	lea    -0x8(%ebp),%esp
    9976:	5b                   	pop    %ebx
    9977:	5e                   	pop    %esi
    9978:	5d                   	pop    %ebp
    9979:	c3                   	ret    
    997a:	52                   	push   %edx
    997b:	68 0c 03 00 00       	push   $0x30c
    9980:	68 c4 ec 00 00       	push   $0xecc4
    9985:	68 69 ed 00 00       	push   $0xed69
    998a:	e8 d1 5b 00 00       	call   f560 <assert_abort@plt>
    998f:	90                   	nop

00009990 <nic_defective_set_mode>:
    9990:	55                   	push   %ebp
    9991:	89 e5                	mov    %esp,%ebp
    9993:	53                   	push   %ebx
    9994:	83 ec 20             	sub    $0x20,%esp
    9997:	8b 45 08             	mov    0x8(%ebp),%eax
    999a:	50                   	push   %eax
    999b:	e8 d0 5d 00 00       	call   f770 <async_exchange_begin@plt>
    99a0:	83 c4 0c             	add    $0xc,%esp
    99a3:	8b 55 0c             	mov    0xc(%ebp),%edx
    99a6:	89 c3                	mov    %eax,%ebx
    99a8:	6a 00                	push   $0x0
    99aa:	6a 00                	push   $0x0
    99ac:	6a 00                	push   $0x0
    99ae:	6a 00                	push   $0x0
    99b0:	6a 00                	push   $0x0
    99b2:	6a 00                	push   $0x0
    99b4:	6a 00                	push   $0x0
    99b6:	52                   	push   %edx
    99b7:	6a 18                	push   $0x18
    99b9:	68 05 04 00 00       	push   $0x405
    99be:	50                   	push   %eax
    99bf:	e8 2c 5b 00 00       	call   f4f0 <async_req_fast@plt>
    99c4:	83 c4 24             	add    $0x24,%esp
    99c7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    99ca:	53                   	push   %ebx
    99cb:	e8 80 5b 00 00       	call   f550 <async_exchange_end@plt>
    99d0:	8b 45 f4             	mov    -0xc(%ebp),%eax
    99d3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    99d6:	c9                   	leave  
    99d7:	c3                   	ret    
    99d8:	90                   	nop
    99d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000099e0 <nic_blocked_sources_get>:
    99e0:	55                   	push   %ebp
    99e1:	89 e5                	mov    %esp,%ebp
    99e3:	57                   	push   %edi
    99e4:	56                   	push   %esi
    99e5:	53                   	push   %ebx
    99e6:	83 ec 2c             	sub    $0x2c,%esp
    99e9:	8b 45 10             	mov    0x10(%ebp),%eax
    99ec:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    99ef:	8b 75 14             	mov    0x14(%ebp),%esi
    99f2:	85 c0                	test   %eax,%eax
    99f4:	0f 84 7e 00 00 00    	je     9a78 <nic_blocked_sources_get+0x98>
    99fa:	83 ec 0c             	sub    $0xc,%esp
    99fd:	8b 7d 08             	mov    0x8(%ebp),%edi
    9a00:	57                   	push   %edi
    9a01:	e8 6a 5d 00 00       	call   f770 <async_exchange_begin@plt>
    9a06:	83 c4 0c             	add    $0xc,%esp
    9a09:	89 c7                	mov    %eax,%edi
    9a0b:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9a0e:	6a 00                	push   $0x0
    9a10:	6a 00                	push   $0x0
    9a12:	6a 00                	push   $0x0
    9a14:	6a 00                	push   $0x0
    9a16:	50                   	push   %eax
    9a17:	6a 00                	push   $0x0
    9a19:	6a 00                	push   $0x0
    9a1b:	53                   	push   %ebx
    9a1c:	6a 19                	push   $0x19
    9a1e:	68 05 04 00 00       	push   $0x405
    9a23:	57                   	push   %edi
    9a24:	e8 c7 5a 00 00       	call   f4f0 <async_req_fast@plt>
    9a29:	83 c4 30             	add    $0x30,%esp
    9a2c:	85 c0                	test   %eax,%eax
    9a2e:	75 14                	jne    9a44 <nic_blocked_sources_get+0x64>
    9a30:	85 f6                	test   %esi,%esi
    9a32:	74 05                	je     9a39 <nic_blocked_sources_get+0x59>
    9a34:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    9a37:	89 0e                	mov    %ecx,(%esi)
    9a39:	85 db                	test   %ebx,%ebx
    9a3b:	74 07                	je     9a44 <nic_blocked_sources_get+0x64>
    9a3d:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    9a40:	85 c9                	test   %ecx,%ecx
    9a42:	75 1c                	jne    9a60 <nic_blocked_sources_get+0x80>
    9a44:	83 ec 0c             	sub    $0xc,%esp
    9a47:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    9a4a:	57                   	push   %edi
    9a4b:	e8 00 5b 00 00       	call   f550 <async_exchange_end@plt>
    9a50:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9a53:	83 c4 10             	add    $0x10,%esp
    9a56:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9a59:	5b                   	pop    %ebx
    9a5a:	5e                   	pop    %esi
    9a5b:	5f                   	pop    %edi
    9a5c:	5d                   	pop    %ebp
    9a5d:	c3                   	ret    
    9a5e:	66 90                	xchg   %ax,%ax
    9a60:	50                   	push   %eax
    9a61:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    9a64:	01 c0                	add    %eax,%eax
    9a66:	8b 55 10             	mov    0x10(%ebp),%edx
    9a69:	50                   	push   %eax
    9a6a:	52                   	push   %edx
    9a6b:	57                   	push   %edi
    9a6c:	e8 6f 5c 00 00       	call   f6e0 <async_data_read_start@plt>
    9a71:	83 c4 10             	add    $0x10,%esp
    9a74:	eb ce                	jmp    9a44 <nic_blocked_sources_get+0x64>
    9a76:	66 90                	xchg   %ax,%ax
    9a78:	31 db                	xor    %ebx,%ebx
    9a7a:	e9 7b ff ff ff       	jmp    99fa <nic_blocked_sources_get+0x1a>
    9a7f:	90                   	nop

00009a80 <nic_blocked_sources_set>:
    9a80:	55                   	push   %ebp
    9a81:	89 e5                	mov    %esp,%ebp
    9a83:	57                   	push   %edi
    9a84:	56                   	push   %esi
    9a85:	53                   	push   %ebx
    9a86:	83 ec 2c             	sub    $0x2c,%esp
    9a89:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    9a8c:	8b 45 08             	mov    0x8(%ebp),%eax
    9a8f:	8b 5d 10             	mov    0x10(%ebp),%ebx
    9a92:	85 c9                	test   %ecx,%ecx
    9a94:	0f 84 8e 00 00 00    	je     9b28 <nic_blocked_sources_set+0xa8>
    9a9a:	83 ec 0c             	sub    $0xc,%esp
    9a9d:	50                   	push   %eax
    9a9e:	e8 cd 5c 00 00       	call   f770 <async_exchange_begin@plt>
    9aa3:	83 c4 0c             	add    $0xc,%esp
    9aa6:	89 c6                	mov    %eax,%esi
    9aa8:	6a 00                	push   $0x0
    9aaa:	6a 00                	push   $0x0
    9aac:	6a 00                	push   $0x0
    9aae:	53                   	push   %ebx
    9aaf:	6a 1a                	push   $0x1a
    9ab1:	68 05 04 00 00       	push   $0x405
    9ab6:	50                   	push   %eax
    9ab7:	e8 54 5a 00 00       	call   f510 <async_send_fast@plt>
    9abc:	83 c4 20             	add    $0x20,%esp
    9abf:	89 c7                	mov    %eax,%edi
    9ac1:	85 db                	test   %ebx,%ebx
    9ac3:	75 23                	jne    9ae8 <nic_blocked_sources_set+0x68>
    9ac5:	83 ec 0c             	sub    $0xc,%esp
    9ac8:	56                   	push   %esi
    9ac9:	e8 82 5a 00 00       	call   f550 <async_exchange_end@plt>
    9ace:	58                   	pop    %eax
    9acf:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9ad2:	5a                   	pop    %edx
    9ad3:	50                   	push   %eax
    9ad4:	57                   	push   %edi
    9ad5:	e8 f6 58 00 00       	call   f3d0 <async_wait_for@plt>
    9ada:	83 c4 10             	add    $0x10,%esp
    9add:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    9ae0:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9ae3:	5b                   	pop    %ebx
    9ae4:	5e                   	pop    %esi
    9ae5:	5f                   	pop    %edi
    9ae6:	5d                   	pop    %ebp
    9ae7:	c3                   	ret    
    9ae8:	50                   	push   %eax
    9ae9:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    9aec:	01 c0                	add    %eax,%eax
    9aee:	50                   	push   %eax
    9aef:	8b 45 0c             	mov    0xc(%ebp),%eax
    9af2:	50                   	push   %eax
    9af3:	56                   	push   %esi
    9af4:	e8 27 59 00 00       	call   f420 <async_data_write_start@plt>
    9af9:	89 34 24             	mov    %esi,(%esp)
    9afc:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    9aff:	e8 4c 5a 00 00       	call   f550 <async_exchange_end@plt>
    9b04:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    9b07:	58                   	pop    %eax
    9b08:	5a                   	pop    %edx
    9b09:	51                   	push   %ecx
    9b0a:	57                   	push   %edi
    9b0b:	e8 c0 58 00 00       	call   f3d0 <async_wait_for@plt>
    9b10:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9b13:	83 c4 10             	add    $0x10,%esp
    9b16:	85 c0                	test   %eax,%eax
    9b18:	74 c3                	je     9add <nic_blocked_sources_set+0x5d>
    9b1a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9b1d:	5b                   	pop    %ebx
    9b1e:	5e                   	pop    %esi
    9b1f:	5f                   	pop    %edi
    9b20:	5d                   	pop    %ebp
    9b21:	c3                   	ret    
    9b22:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9b28:	83 ec 0c             	sub    $0xc,%esp
    9b2b:	50                   	push   %eax
    9b2c:	e8 3f 5c 00 00       	call   f770 <async_exchange_begin@plt>
    9b31:	83 c4 0c             	add    $0xc,%esp
    9b34:	89 c3                	mov    %eax,%ebx
    9b36:	6a 00                	push   $0x0
    9b38:	6a 00                	push   $0x0
    9b3a:	6a 00                	push   $0x0
    9b3c:	6a 00                	push   $0x0
    9b3e:	6a 1a                	push   $0x1a
    9b40:	68 05 04 00 00       	push   $0x405
    9b45:	50                   	push   %eax
    9b46:	e8 c5 59 00 00       	call   f510 <async_send_fast@plt>
    9b4b:	83 c4 14             	add    $0x14,%esp
    9b4e:	89 c6                	mov    %eax,%esi
    9b50:	53                   	push   %ebx
    9b51:	e8 fa 59 00 00       	call   f550 <async_exchange_end@plt>
    9b56:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9b59:	59                   	pop    %ecx
    9b5a:	5b                   	pop    %ebx
    9b5b:	50                   	push   %eax
    9b5c:	56                   	push   %esi
    9b5d:	e8 6e 58 00 00       	call   f3d0 <async_wait_for@plt>
    9b62:	83 c4 10             	add    $0x10,%esp
    9b65:	e9 73 ff ff ff       	jmp    9add <nic_blocked_sources_set+0x5d>
    9b6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00009b70 <nic_vlan_get_mask>:
    9b70:	55                   	push   %ebp
    9b71:	89 e5                	mov    %esp,%ebp
    9b73:	56                   	push   %esi
    9b74:	53                   	push   %ebx
    9b75:	83 ec 10             	sub    $0x10,%esp
    9b78:	8b 75 0c             	mov    0xc(%ebp),%esi
    9b7b:	85 f6                	test   %esi,%esi
    9b7d:	74 7a                	je     9bf9 <nic_vlan_get_mask+0x89>
    9b7f:	83 ec 0c             	sub    $0xc,%esp
    9b82:	8b 55 08             	mov    0x8(%ebp),%edx
    9b85:	52                   	push   %edx
    9b86:	e8 e5 5b 00 00       	call   f770 <async_exchange_begin@plt>
    9b8b:	83 c4 0c             	add    $0xc,%esp
    9b8e:	89 c3                	mov    %eax,%ebx
    9b90:	6a 00                	push   $0x0
    9b92:	6a 00                	push   $0x0
    9b94:	6a 00                	push   $0x0
    9b96:	6a 00                	push   $0x0
    9b98:	6a 00                	push   $0x0
    9b9a:	6a 00                	push   $0x0
    9b9c:	6a 00                	push   $0x0
    9b9e:	6a 00                	push   $0x0
    9ba0:	6a 1b                	push   $0x1b
    9ba2:	68 05 04 00 00       	push   $0x405
    9ba7:	50                   	push   %eax
    9ba8:	e8 43 59 00 00       	call   f4f0 <async_req_fast@plt>
    9bad:	83 c4 30             	add    $0x30,%esp
    9bb0:	85 c0                	test   %eax,%eax
    9bb2:	75 2c                	jne    9be0 <nic_vlan_get_mask+0x70>
    9bb4:	50                   	push   %eax
    9bb5:	68 00 02 00 00       	push   $0x200
    9bba:	56                   	push   %esi
    9bbb:	53                   	push   %ebx
    9bbc:	e8 1f 5b 00 00       	call   f6e0 <async_data_read_start@plt>
    9bc1:	89 1c 24             	mov    %ebx,(%esp)
    9bc4:	89 45 f4             	mov    %eax,-0xc(%ebp)
    9bc7:	e8 84 59 00 00       	call   f550 <async_exchange_end@plt>
    9bcc:	8b 45 f4             	mov    -0xc(%ebp),%eax
    9bcf:	83 c4 10             	add    $0x10,%esp
    9bd2:	8d 65 f8             	lea    -0x8(%ebp),%esp
    9bd5:	5b                   	pop    %ebx
    9bd6:	5e                   	pop    %esi
    9bd7:	5d                   	pop    %ebp
    9bd8:	c3                   	ret    
    9bd9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    9be0:	83 ec 0c             	sub    $0xc,%esp
    9be3:	89 45 f4             	mov    %eax,-0xc(%ebp)
    9be6:	53                   	push   %ebx
    9be7:	e8 64 59 00 00       	call   f550 <async_exchange_end@plt>
    9bec:	8b 45 f4             	mov    -0xc(%ebp),%eax
    9bef:	83 c4 10             	add    $0x10,%esp
    9bf2:	8d 65 f8             	lea    -0x8(%ebp),%esp
    9bf5:	5b                   	pop    %ebx
    9bf6:	5e                   	pop    %esi
    9bf7:	5d                   	pop    %ebp
    9bf8:	c3                   	ret    
    9bf9:	51                   	push   %ecx
    9bfa:	68 83 03 00 00       	push   $0x383
    9bff:	68 c4 ec 00 00       	push   $0xecc4
    9c04:	68 6e ed 00 00       	push   $0xed6e
    9c09:	e8 52 59 00 00       	call   f560 <assert_abort@plt>
    9c0e:	66 90                	xchg   %ax,%ax

00009c10 <nic_vlan_set_mask>:
    9c10:	55                   	push   %ebp
    9c11:	89 e5                	mov    %esp,%ebp
    9c13:	57                   	push   %edi
    9c14:	56                   	push   %esi
    9c15:	53                   	push   %ebx
    9c16:	83 ec 38             	sub    $0x38,%esp
    9c19:	8b 7d 08             	mov    0x8(%ebp),%edi
    9c1c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    9c1f:	57                   	push   %edi
    9c20:	e8 4b 5b 00 00       	call   f770 <async_exchange_begin@plt>
    9c25:	83 c4 0c             	add    $0xc,%esp
    9c28:	89 c6                	mov    %eax,%esi
    9c2a:	31 c0                	xor    %eax,%eax
    9c2c:	85 db                	test   %ebx,%ebx
    9c2e:	0f 95 c0             	setne  %al
    9c31:	6a 00                	push   $0x0
    9c33:	6a 00                	push   $0x0
    9c35:	6a 00                	push   $0x0
    9c37:	50                   	push   %eax
    9c38:	6a 1c                	push   $0x1c
    9c3a:	68 05 04 00 00       	push   $0x405
    9c3f:	56                   	push   %esi
    9c40:	e8 cb 58 00 00       	call   f510 <async_send_fast@plt>
    9c45:	83 c4 20             	add    $0x20,%esp
    9c48:	89 c7                	mov    %eax,%edi
    9c4a:	85 db                	test   %ebx,%ebx
    9c4c:	74 3a                	je     9c88 <nic_vlan_set_mask+0x78>
    9c4e:	51                   	push   %ecx
    9c4f:	68 00 02 00 00       	push   $0x200
    9c54:	53                   	push   %ebx
    9c55:	56                   	push   %esi
    9c56:	e8 c5 57 00 00       	call   f420 <async_data_write_start@plt>
    9c5b:	89 34 24             	mov    %esi,(%esp)
    9c5e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    9c61:	e8 ea 58 00 00       	call   f550 <async_exchange_end@plt>
    9c66:	8d 55 e4             	lea    -0x1c(%ebp),%edx
    9c69:	5b                   	pop    %ebx
    9c6a:	5e                   	pop    %esi
    9c6b:	52                   	push   %edx
    9c6c:	57                   	push   %edi
    9c6d:	e8 5e 57 00 00       	call   f3d0 <async_wait_for@plt>
    9c72:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9c75:	83 c4 10             	add    $0x10,%esp
    9c78:	85 c0                	test   %eax,%eax
    9c7a:	74 24                	je     9ca0 <nic_vlan_set_mask+0x90>
    9c7c:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9c7f:	5b                   	pop    %ebx
    9c80:	5e                   	pop    %esi
    9c81:	5f                   	pop    %edi
    9c82:	5d                   	pop    %ebp
    9c83:	c3                   	ret    
    9c84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9c88:	83 ec 0c             	sub    $0xc,%esp
    9c8b:	56                   	push   %esi
    9c8c:	e8 bf 58 00 00       	call   f550 <async_exchange_end@plt>
    9c91:	58                   	pop    %eax
    9c92:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9c95:	5a                   	pop    %edx
    9c96:	50                   	push   %eax
    9c97:	57                   	push   %edi
    9c98:	e8 33 57 00 00       	call   f3d0 <async_wait_for@plt>
    9c9d:	83 c4 10             	add    $0x10,%esp
    9ca0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    9ca3:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9ca6:	5b                   	pop    %ebx
    9ca7:	5e                   	pop    %esi
    9ca8:	5f                   	pop    %edi
    9ca9:	5d                   	pop    %ebp
    9caa:	c3                   	ret    
    9cab:	90                   	nop
    9cac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00009cb0 <nic_vlan_set_tag>:
    9cb0:	55                   	push   %ebp
    9cb1:	89 e5                	mov    %esp,%ebp
    9cb3:	57                   	push   %edi
    9cb4:	56                   	push   %esi
    9cb5:	53                   	push   %ebx
    9cb6:	83 ec 28             	sub    $0x28,%esp
    9cb9:	8b 55 14             	mov    0x14(%ebp),%edx
    9cbc:	8b 45 08             	mov    0x8(%ebp),%eax
    9cbf:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    9cc2:	8b 75 10             	mov    0x10(%ebp),%esi
    9cc5:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    9cc8:	50                   	push   %eax
    9cc9:	e8 a2 5a 00 00       	call   f770 <async_exchange_begin@plt>
    9cce:	83 c4 0c             	add    $0xc,%esp
    9cd1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    9cd4:	81 e6 ff 00 00 00    	and    $0xff,%esi
    9cda:	81 e2 ff 00 00 00    	and    $0xff,%edx
    9ce0:	81 e3 ff ff 00 00    	and    $0xffff,%ebx
    9ce6:	6a 00                	push   $0x0
    9ce8:	89 c7                	mov    %eax,%edi
    9cea:	6a 00                	push   $0x0
    9cec:	6a 00                	push   $0x0
    9cee:	6a 00                	push   $0x0
    9cf0:	6a 00                	push   $0x0
    9cf2:	52                   	push   %edx
    9cf3:	56                   	push   %esi
    9cf4:	53                   	push   %ebx
    9cf5:	6a 1d                	push   $0x1d
    9cf7:	68 05 04 00 00       	push   $0x405
    9cfc:	50                   	push   %eax
    9cfd:	e8 ee 57 00 00       	call   f4f0 <async_req_fast@plt>
    9d02:	83 c4 24             	add    $0x24,%esp
    9d05:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    9d08:	57                   	push   %edi
    9d09:	e8 42 58 00 00       	call   f550 <async_exchange_end@plt>
    9d0e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    9d11:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9d14:	5b                   	pop    %ebx
    9d15:	5e                   	pop    %esi
    9d16:	5f                   	pop    %edi
    9d17:	5d                   	pop    %ebp
    9d18:	c3                   	ret    
    9d19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00009d20 <nic_wol_virtue_add>:
    9d20:	55                   	push   %ebp
    9d21:	89 e5                	mov    %esp,%ebp
    9d23:	57                   	push   %edi
    9d24:	56                   	push   %esi
    9d25:	53                   	push   %ebx
    9d26:	83 ec 4c             	sub    $0x4c,%esp
    9d29:	8b 5d 18             	mov    0x18(%ebp),%ebx
    9d2c:	85 db                	test   %ebx,%ebx
    9d2e:	0f 84 b0 00 00 00    	je     9de4 <nic_wol_virtue_add+0xc4>
    9d34:	8b 45 10             	mov    0x10(%ebp),%eax
    9d37:	85 c0                	test   %eax,%eax
    9d39:	8b 45 14             	mov    0x14(%ebp),%eax
    9d3c:	0f 95 c3             	setne  %bl
    9d3f:	85 c0                	test   %eax,%eax
    9d41:	0f 95 c0             	setne  %al
    9d44:	83 ec 0c             	sub    $0xc,%esp
    9d47:	21 c3                	and    %eax,%ebx
    9d49:	8b 45 08             	mov    0x8(%ebp),%eax
    9d4c:	50                   	push   %eax
    9d4d:	e8 1e 5a 00 00       	call   f770 <async_exchange_begin@plt>
    9d52:	83 c4 0c             	add    $0xc,%esp
    9d55:	89 c6                	mov    %eax,%esi
    9d57:	8d 45 c4             	lea    -0x3c(%ebp),%eax
    9d5a:	8b 55 0c             	mov    0xc(%ebp),%edx
    9d5d:	50                   	push   %eax
    9d5e:	31 c0                	xor    %eax,%eax
    9d60:	88 d8                	mov    %bl,%al
    9d62:	6a 00                	push   $0x0
    9d64:	50                   	push   %eax
    9d65:	52                   	push   %edx
    9d66:	6a 1e                	push   $0x1e
    9d68:	68 05 04 00 00       	push   $0x405
    9d6d:	56                   	push   %esi
    9d6e:	e8 9d 57 00 00       	call   f510 <async_send_fast@plt>
    9d73:	83 c4 20             	add    $0x20,%esp
    9d76:	89 c7                	mov    %eax,%edi
    9d78:	84 db                	test   %bl,%bl
    9d7a:	75 2c                	jne    9da8 <nic_wol_virtue_add+0x88>
    9d7c:	83 ec 0c             	sub    $0xc,%esp
    9d7f:	56                   	push   %esi
    9d80:	e8 cb 57 00 00       	call   f550 <async_exchange_end@plt>
    9d85:	58                   	pop    %eax
    9d86:	8d 45 c0             	lea    -0x40(%ebp),%eax
    9d89:	5a                   	pop    %edx
    9d8a:	50                   	push   %eax
    9d8b:	57                   	push   %edi
    9d8c:	e8 3f 56 00 00       	call   f3d0 <async_wait_for@plt>
    9d91:	8b 4d 18             	mov    0x18(%ebp),%ecx
    9d94:	8b 45 c8             	mov    -0x38(%ebp),%eax
    9d97:	83 c4 10             	add    $0x10,%esp
    9d9a:	89 01                	mov    %eax,(%ecx)
    9d9c:	8b 45 c0             	mov    -0x40(%ebp),%eax
    9d9f:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9da2:	5b                   	pop    %ebx
    9da3:	5e                   	pop    %esi
    9da4:	5f                   	pop    %edi
    9da5:	5d                   	pop    %ebp
    9da6:	c3                   	ret    
    9da7:	90                   	nop
    9da8:	50                   	push   %eax
    9da9:	8b 45 14             	mov    0x14(%ebp),%eax
    9dac:	50                   	push   %eax
    9dad:	8b 45 10             	mov    0x10(%ebp),%eax
    9db0:	50                   	push   %eax
    9db1:	56                   	push   %esi
    9db2:	e8 69 56 00 00       	call   f420 <async_data_write_start@plt>
    9db7:	83 c4 10             	add    $0x10,%esp
    9dba:	85 c0                	test   %eax,%eax
    9dbc:	74 be                	je     9d7c <nic_wol_virtue_add+0x5c>
    9dbe:	83 ec 0c             	sub    $0xc,%esp
    9dc1:	89 45 b4             	mov    %eax,-0x4c(%ebp)
    9dc4:	56                   	push   %esi
    9dc5:	e8 86 57 00 00       	call   f550 <async_exchange_end@plt>
    9dca:	8d 55 c0             	lea    -0x40(%ebp),%edx
    9dcd:	59                   	pop    %ecx
    9dce:	5b                   	pop    %ebx
    9dcf:	52                   	push   %edx
    9dd0:	57                   	push   %edi
    9dd1:	e8 fa 55 00 00       	call   f3d0 <async_wait_for@plt>
    9dd6:	8b 45 b4             	mov    -0x4c(%ebp),%eax
    9dd9:	83 c4 10             	add    $0x10,%esp
    9ddc:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9ddf:	5b                   	pop    %ebx
    9de0:	5e                   	pop    %esi
    9de1:	5f                   	pop    %edi
    9de2:	5d                   	pop    %ebp
    9de3:	c3                   	ret    
    9de4:	51                   	push   %ecx
    9de5:	68 de 03 00 00       	push   $0x3de
    9dea:	68 c4 ec 00 00       	push   $0xecc4
    9def:	68 73 ed 00 00       	push   $0xed73
    9df4:	e8 67 57 00 00       	call   f560 <assert_abort@plt>
    9df9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00009e00 <nic_wol_virtue_remove>:
    9e00:	55                   	push   %ebp
    9e01:	89 e5                	mov    %esp,%ebp
    9e03:	53                   	push   %ebx
    9e04:	83 ec 20             	sub    $0x20,%esp
    9e07:	8b 45 08             	mov    0x8(%ebp),%eax
    9e0a:	50                   	push   %eax
    9e0b:	e8 60 59 00 00       	call   f770 <async_exchange_begin@plt>
    9e10:	83 c4 0c             	add    $0xc,%esp
    9e13:	8b 55 0c             	mov    0xc(%ebp),%edx
    9e16:	89 c3                	mov    %eax,%ebx
    9e18:	6a 00                	push   $0x0
    9e1a:	6a 00                	push   $0x0
    9e1c:	6a 00                	push   $0x0
    9e1e:	6a 00                	push   $0x0
    9e20:	6a 00                	push   $0x0
    9e22:	6a 00                	push   $0x0
    9e24:	6a 00                	push   $0x0
    9e26:	52                   	push   %edx
    9e27:	6a 1f                	push   $0x1f
    9e29:	68 05 04 00 00       	push   $0x405
    9e2e:	50                   	push   %eax
    9e2f:	e8 bc 56 00 00       	call   f4f0 <async_req_fast@plt>
    9e34:	83 c4 24             	add    $0x24,%esp
    9e37:	89 45 f4             	mov    %eax,-0xc(%ebp)
    9e3a:	53                   	push   %ebx
    9e3b:	e8 10 57 00 00       	call   f550 <async_exchange_end@plt>
    9e40:	8b 45 f4             	mov    -0xc(%ebp),%eax
    9e43:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    9e46:	c9                   	leave  
    9e47:	c3                   	ret    
    9e48:	90                   	nop
    9e49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00009e50 <nic_wol_virtue_probe>:
    9e50:	55                   	push   %ebp
    9e51:	89 e5                	mov    %esp,%ebp
    9e53:	57                   	push   %edi
    9e54:	56                   	push   %esi
    9e55:	53                   	push   %ebx
    9e56:	83 ec 2c             	sub    $0x2c,%esp
    9e59:	8b 45 18             	mov    0x18(%ebp),%eax
    9e5c:	8b 7d 10             	mov    0x10(%ebp),%edi
    9e5f:	8b 5d 14             	mov    0x14(%ebp),%ebx
    9e62:	85 c0                	test   %eax,%eax
    9e64:	0f 84 96 00 00 00    	je     9f00 <nic_wol_virtue_probe+0xb0>
    9e6a:	83 ec 0c             	sub    $0xc,%esp
    9e6d:	8b 45 08             	mov    0x8(%ebp),%eax
    9e70:	50                   	push   %eax
    9e71:	e8 fa 58 00 00       	call   f770 <async_exchange_begin@plt>
    9e76:	83 c4 0c             	add    $0xc,%esp
    9e79:	89 c6                	mov    %eax,%esi
    9e7b:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9e7e:	6a 00                	push   $0x0
    9e80:	6a 00                	push   $0x0
    9e82:	6a 00                	push   $0x0
    9e84:	50                   	push   %eax
    9e85:	8d 45 e0             	lea    -0x20(%ebp),%eax
    9e88:	50                   	push   %eax
    9e89:	8b 45 0c             	mov    0xc(%ebp),%eax
    9e8c:	6a 00                	push   $0x0
    9e8e:	53                   	push   %ebx
    9e8f:	50                   	push   %eax
    9e90:	6a 20                	push   $0x20
    9e92:	68 05 04 00 00       	push   $0x405
    9e97:	56                   	push   %esi
    9e98:	e8 53 56 00 00       	call   f4f0 <async_req_fast@plt>
    9e9d:	83 c4 30             	add    $0x30,%esp
    9ea0:	85 c0                	test   %eax,%eax
    9ea2:	75 23                	jne    9ec7 <nic_wol_virtue_probe+0x77>
    9ea4:	85 ff                	test   %edi,%edi
    9ea6:	74 05                	je     9ead <nic_wol_virtue_probe+0x5d>
    9ea8:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    9eab:	89 0f                	mov    %ecx,(%edi)
    9ead:	8b 7d 1c             	mov    0x1c(%ebp),%edi
    9eb0:	85 ff                	test   %edi,%edi
    9eb2:	74 08                	je     9ebc <nic_wol_virtue_probe+0x6c>
    9eb4:	8b 55 1c             	mov    0x1c(%ebp),%edx
    9eb7:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    9eba:	89 0a                	mov    %ecx,(%edx)
    9ebc:	85 db                	test   %ebx,%ebx
    9ebe:	74 07                	je     9ec7 <nic_wol_virtue_probe+0x77>
    9ec0:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    9ec3:	85 c9                	test   %ecx,%ecx
    9ec5:	75 21                	jne    9ee8 <nic_wol_virtue_probe+0x98>
    9ec7:	83 ec 0c             	sub    $0xc,%esp
    9eca:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    9ecd:	56                   	push   %esi
    9ece:	e8 7d 56 00 00       	call   f550 <async_exchange_end@plt>
    9ed3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9ed6:	83 c4 10             	add    $0x10,%esp
    9ed9:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9edc:	5b                   	pop    %ebx
    9edd:	5e                   	pop    %esi
    9ede:	5f                   	pop    %edi
    9edf:	5d                   	pop    %ebp
    9ee0:	c3                   	ret    
    9ee1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    9ee8:	8b 55 18             	mov    0x18(%ebp),%edx
    9eeb:	50                   	push   %eax
    9eec:	53                   	push   %ebx
    9eed:	52                   	push   %edx
    9eee:	56                   	push   %esi
    9eef:	e8 ec 57 00 00       	call   f6e0 <async_data_read_start@plt>
    9ef4:	83 c4 10             	add    $0x10,%esp
    9ef7:	eb ce                	jmp    9ec7 <nic_wol_virtue_probe+0x77>
    9ef9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    9f00:	31 db                	xor    %ebx,%ebx
    9f02:	e9 63 ff ff ff       	jmp    9e6a <nic_wol_virtue_probe+0x1a>
    9f07:	89 f6                	mov    %esi,%esi
    9f09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009f10 <nic_wol_virtue_list>:
    9f10:	55                   	push   %ebp
    9f11:	89 e5                	mov    %esp,%ebp
    9f13:	57                   	push   %edi
    9f14:	56                   	push   %esi
    9f15:	53                   	push   %ebx
    9f16:	83 ec 2c             	sub    $0x2c,%esp
    9f19:	8b 55 14             	mov    0x14(%ebp),%edx
    9f1c:	8b 45 08             	mov    0x8(%ebp),%eax
    9f1f:	8b 5d 10             	mov    0x10(%ebp),%ebx
    9f22:	8b 75 18             	mov    0x18(%ebp),%esi
    9f25:	85 d2                	test   %edx,%edx
    9f27:	0f 84 9b 00 00 00    	je     9fc8 <nic_wol_virtue_list+0xb8>
    9f2d:	83 ec 0c             	sub    $0xc,%esp
    9f30:	50                   	push   %eax
    9f31:	e8 3a 58 00 00       	call   f770 <async_exchange_begin@plt>
    9f36:	83 c4 0c             	add    $0xc,%esp
    9f39:	89 c7                	mov    %eax,%edi
    9f3b:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9f3e:	6a 00                	push   $0x0
    9f40:	6a 00                	push   $0x0
    9f42:	6a 00                	push   $0x0
    9f44:	6a 00                	push   $0x0
    9f46:	50                   	push   %eax
    9f47:	8b 45 0c             	mov    0xc(%ebp),%eax
    9f4a:	6a 00                	push   $0x0
    9f4c:	53                   	push   %ebx
    9f4d:	50                   	push   %eax
    9f4e:	6a 21                	push   $0x21
    9f50:	68 05 04 00 00       	push   $0x405
    9f55:	57                   	push   %edi
    9f56:	e8 95 55 00 00       	call   f4f0 <async_req_fast@plt>
    9f5b:	83 c4 30             	add    $0x30,%esp
    9f5e:	85 f6                	test   %esi,%esi
    9f60:	0f 84 a2 00 00 00    	je     a008 <nic_wol_virtue_list+0xf8>
    9f66:	85 c0                	test   %eax,%eax
    9f68:	0f 95 c2             	setne  %dl
    9f6b:	85 db                	test   %ebx,%ebx
    9f6d:	0f 94 c1             	sete   %cl
    9f70:	09 ca                	or     %ecx,%edx
    9f72:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    9f75:	89 0e                	mov    %ecx,(%esi)
    9f77:	84 d2                	test   %dl,%dl
    9f79:	75 2d                	jne    9fa8 <nic_wol_virtue_list+0x98>
    9f7b:	c1 e3 02             	shl    $0x2,%ebx
    9f7e:	8b 4d 14             	mov    0x14(%ebp),%ecx
    9f81:	52                   	push   %edx
    9f82:	53                   	push   %ebx
    9f83:	51                   	push   %ecx
    9f84:	57                   	push   %edi
    9f85:	e8 56 57 00 00       	call   f6e0 <async_data_read_start@plt>
    9f8a:	89 3c 24             	mov    %edi,(%esp)
    9f8d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    9f90:	e8 bb 55 00 00       	call   f550 <async_exchange_end@plt>
    9f95:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9f98:	83 c4 10             	add    $0x10,%esp
    9f9b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9f9e:	5b                   	pop    %ebx
    9f9f:	5e                   	pop    %esi
    9fa0:	5f                   	pop    %edi
    9fa1:	5d                   	pop    %ebp
    9fa2:	c3                   	ret    
    9fa3:	90                   	nop
    9fa4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9fa8:	83 ec 0c             	sub    $0xc,%esp
    9fab:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    9fae:	57                   	push   %edi
    9faf:	e8 9c 55 00 00       	call   f550 <async_exchange_end@plt>
    9fb4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9fb7:	83 c4 10             	add    $0x10,%esp
    9fba:	8d 65 f4             	lea    -0xc(%ebp),%esp
    9fbd:	5b                   	pop    %ebx
    9fbe:	5e                   	pop    %esi
    9fbf:	5f                   	pop    %edi
    9fc0:	5d                   	pop    %ebp
    9fc1:	c3                   	ret    
    9fc2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9fc8:	83 ec 0c             	sub    $0xc,%esp
    9fcb:	50                   	push   %eax
    9fcc:	e8 9f 57 00 00       	call   f770 <async_exchange_begin@plt>
    9fd1:	83 c4 0c             	add    $0xc,%esp
    9fd4:	89 c7                	mov    %eax,%edi
    9fd6:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9fd9:	6a 00                	push   $0x0
    9fdb:	6a 00                	push   $0x0
    9fdd:	6a 00                	push   $0x0
    9fdf:	6a 00                	push   $0x0
    9fe1:	50                   	push   %eax
    9fe2:	8b 45 0c             	mov    0xc(%ebp),%eax
    9fe5:	6a 00                	push   $0x0
    9fe7:	6a 00                	push   $0x0
    9fe9:	50                   	push   %eax
    9fea:	6a 21                	push   $0x21
    9fec:	68 05 04 00 00       	push   $0x405
    9ff1:	57                   	push   %edi
    9ff2:	e8 f9 54 00 00       	call   f4f0 <async_req_fast@plt>
    9ff7:	83 c4 30             	add    $0x30,%esp
    9ffa:	85 f6                	test   %esi,%esi
    9ffc:	74 aa                	je     9fa8 <nic_wol_virtue_list+0x98>
    9ffe:	b2 01                	mov    $0x1,%dl
    a000:	31 db                	xor    %ebx,%ebx
    a002:	e9 6b ff ff ff       	jmp    9f72 <nic_wol_virtue_list+0x62>
    a007:	90                   	nop
    a008:	85 db                	test   %ebx,%ebx
    a00a:	0f 94 c1             	sete   %cl
    a00d:	85 c0                	test   %eax,%eax
    a00f:	0f 95 c2             	setne  %dl
    a012:	09 ca                	or     %ecx,%edx
    a014:	e9 5e ff ff ff       	jmp    9f77 <nic_wol_virtue_list+0x67>
    a019:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000a020 <nic_wol_virtue_get_caps>:
    a020:	55                   	push   %ebp
    a021:	89 e5                	mov    %esp,%ebp
    a023:	56                   	push   %esi
    a024:	53                   	push   %ebx
    a025:	83 ec 20             	sub    $0x20,%esp
    a028:	8b 5d 10             	mov    0x10(%ebp),%ebx
    a02b:	85 db                	test   %ebx,%ebx
    a02d:	74 4d                	je     a07c <nic_wol_virtue_get_caps+0x5c>
    a02f:	83 ec 0c             	sub    $0xc,%esp
    a032:	8b 45 08             	mov    0x8(%ebp),%eax
    a035:	50                   	push   %eax
    a036:	e8 35 57 00 00       	call   f770 <async_exchange_begin@plt>
    a03b:	83 c4 0c             	add    $0xc,%esp
    a03e:	8b 55 0c             	mov    0xc(%ebp),%edx
    a041:	89 c6                	mov    %eax,%esi
    a043:	8d 45 f4             	lea    -0xc(%ebp),%eax
    a046:	6a 00                	push   $0x0
    a048:	6a 00                	push   $0x0
    a04a:	6a 00                	push   $0x0
    a04c:	6a 00                	push   $0x0
    a04e:	50                   	push   %eax
    a04f:	6a 00                	push   $0x0
    a051:	6a 00                	push   $0x0
    a053:	52                   	push   %edx
    a054:	6a 22                	push   $0x22
    a056:	68 05 04 00 00       	push   $0x405
    a05b:	56                   	push   %esi
    a05c:	e8 8f 54 00 00       	call   f4f0 <async_req_fast@plt>
    a061:	83 c4 24             	add    $0x24,%esp
    a064:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    a067:	56                   	push   %esi
    a068:	e8 e3 54 00 00       	call   f550 <async_exchange_end@plt>
    a06d:	8b 55 f4             	mov    -0xc(%ebp),%edx
    a070:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    a073:	89 13                	mov    %edx,(%ebx)
    a075:	8d 65 f8             	lea    -0x8(%ebp),%esp
    a078:	5b                   	pop    %ebx
    a079:	5e                   	pop    %esi
    a07a:	5d                   	pop    %ebp
    a07b:	c3                   	ret    
    a07c:	51                   	push   %ecx
    a07d:	68 74 04 00 00       	push   $0x474
    a082:	68 c4 ec 00 00       	push   $0xecc4
    a087:	68 76 ed 00 00       	push   $0xed76
    a08c:	e8 cf 54 00 00       	call   f560 <assert_abort@plt>
    a091:	eb 0d                	jmp    a0a0 <nic_wol_load_info>
    a093:	90                   	nop
    a094:	90                   	nop
    a095:	90                   	nop
    a096:	90                   	nop
    a097:	90                   	nop
    a098:	90                   	nop
    a099:	90                   	nop
    a09a:	90                   	nop
    a09b:	90                   	nop
    a09c:	90                   	nop
    a09d:	90                   	nop
    a09e:	90                   	nop
    a09f:	90                   	nop

0000a0a0 <nic_wol_load_info>:
    a0a0:	55                   	push   %ebp
    a0a1:	89 e5                	mov    %esp,%ebp
    a0a3:	57                   	push   %edi
    a0a4:	56                   	push   %esi
    a0a5:	53                   	push   %ebx
    a0a6:	83 ec 2c             	sub    $0x2c,%esp
    a0a9:	8b 75 0c             	mov    0xc(%ebp),%esi
    a0ac:	8b 5d 10             	mov    0x10(%ebp),%ebx
    a0af:	85 f6                	test   %esi,%esi
    a0b1:	0f 84 a0 00 00 00    	je     a157 <nic_wol_load_info+0xb7>
    a0b7:	8b 45 14             	mov    0x14(%ebp),%eax
    a0ba:	85 c0                	test   %eax,%eax
    a0bc:	0f 84 8e 00 00 00    	je     a150 <nic_wol_load_info+0xb0>
    a0c2:	83 ec 0c             	sub    $0xc,%esp
    a0c5:	8b 7d 08             	mov    0x8(%ebp),%edi
    a0c8:	57                   	push   %edi
    a0c9:	e8 a2 56 00 00       	call   f770 <async_exchange_begin@plt>
    a0ce:	83 c4 0c             	add    $0xc,%esp
    a0d1:	89 c7                	mov    %eax,%edi
    a0d3:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    a0d6:	6a 00                	push   $0x0
    a0d8:	6a 00                	push   $0x0
    a0da:	6a 00                	push   $0x0
    a0dc:	50                   	push   %eax
    a0dd:	8d 45 e0             	lea    -0x20(%ebp),%eax
    a0e0:	50                   	push   %eax
    a0e1:	6a 00                	push   $0x0
    a0e3:	6a 00                	push   $0x0
    a0e5:	53                   	push   %ebx
    a0e6:	6a 23                	push   $0x23
    a0e8:	68 05 04 00 00       	push   $0x405
    a0ed:	57                   	push   %edi
    a0ee:	e8 fd 53 00 00       	call   f4f0 <async_req_fast@plt>
    a0f3:	83 c4 30             	add    $0x30,%esp
    a0f6:	85 c0                	test   %eax,%eax
    a0f8:	75 1f                	jne    a119 <nic_wol_load_info+0x79>
    a0fa:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    a0fd:	89 0e                	mov    %ecx,(%esi)
    a0ff:	8b 75 18             	mov    0x18(%ebp),%esi
    a102:	85 f6                	test   %esi,%esi
    a104:	74 08                	je     a10e <nic_wol_load_info+0x6e>
    a106:	8b 55 18             	mov    0x18(%ebp),%edx
    a109:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    a10c:	89 0a                	mov    %ecx,(%edx)
    a10e:	85 db                	test   %ebx,%ebx
    a110:	74 07                	je     a119 <nic_wol_load_info+0x79>
    a112:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    a115:	85 c9                	test   %ecx,%ecx
    a117:	75 1f                	jne    a138 <nic_wol_load_info+0x98>
    a119:	83 ec 0c             	sub    $0xc,%esp
    a11c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a11f:	57                   	push   %edi
    a120:	e8 2b 54 00 00       	call   f550 <async_exchange_end@plt>
    a125:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a128:	83 c4 10             	add    $0x10,%esp
    a12b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a12e:	5b                   	pop    %ebx
    a12f:	5e                   	pop    %esi
    a130:	5f                   	pop    %edi
    a131:	5d                   	pop    %ebp
    a132:	c3                   	ret    
    a133:	90                   	nop
    a134:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a138:	8b 55 14             	mov    0x14(%ebp),%edx
    a13b:	50                   	push   %eax
    a13c:	53                   	push   %ebx
    a13d:	52                   	push   %edx
    a13e:	57                   	push   %edi
    a13f:	e8 9c 55 00 00       	call   f6e0 <async_data_read_start@plt>
    a144:	83 c4 10             	add    $0x10,%esp
    a147:	eb d0                	jmp    a119 <nic_wol_load_info+0x79>
    a149:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    a150:	31 db                	xor    %ebx,%ebx
    a152:	e9 6b ff ff ff       	jmp    a0c2 <nic_wol_load_info+0x22>
    a157:	50                   	push   %eax
    a158:	68 9a 04 00 00       	push   $0x49a
    a15d:	68 c4 ec 00 00       	push   $0xecc4
    a162:	68 7c ed 00 00       	push   $0xed7c
    a167:	e8 f4 53 00 00       	call   f560 <assert_abort@plt>
    a16c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000a170 <nic_offload_probe>:
    a170:	55                   	push   %ebp
    a171:	89 e5                	mov    %esp,%ebp
    a173:	57                   	push   %edi
    a174:	56                   	push   %esi
    a175:	53                   	push   %ebx
    a176:	83 ec 2c             	sub    $0x2c,%esp
    a179:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    a17c:	8b 75 10             	mov    0x10(%ebp),%esi
    a17f:	85 db                	test   %ebx,%ebx
    a181:	74 57                	je     a1da <nic_offload_probe+0x6a>
    a183:	85 f6                	test   %esi,%esi
    a185:	74 68                	je     a1ef <nic_offload_probe+0x7f>
    a187:	83 ec 0c             	sub    $0xc,%esp
    a18a:	8b 45 08             	mov    0x8(%ebp),%eax
    a18d:	50                   	push   %eax
    a18e:	e8 dd 55 00 00       	call   f770 <async_exchange_begin@plt>
    a193:	83 c4 0c             	add    $0xc,%esp
    a196:	89 c7                	mov    %eax,%edi
    a198:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    a19b:	6a 00                	push   $0x0
    a19d:	6a 00                	push   $0x0
    a19f:	6a 00                	push   $0x0
    a1a1:	50                   	push   %eax
    a1a2:	8d 45 e0             	lea    -0x20(%ebp),%eax
    a1a5:	50                   	push   %eax
    a1a6:	6a 00                	push   $0x0
    a1a8:	6a 00                	push   $0x0
    a1aa:	6a 00                	push   $0x0
    a1ac:	6a 24                	push   $0x24
    a1ae:	68 05 04 00 00       	push   $0x405
    a1b3:	57                   	push   %edi
    a1b4:	e8 37 53 00 00       	call   f4f0 <async_req_fast@plt>
    a1b9:	83 c4 24             	add    $0x24,%esp
    a1bc:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a1bf:	57                   	push   %edi
    a1c0:	e8 8b 53 00 00       	call   f550 <async_exchange_end@plt>
    a1c5:	8b 55 e0             	mov    -0x20(%ebp),%edx
    a1c8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a1cb:	89 13                	mov    %edx,(%ebx)
    a1cd:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    a1d0:	89 16                	mov    %edx,(%esi)
    a1d2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a1d5:	5b                   	pop    %ebx
    a1d6:	5e                   	pop    %esi
    a1d7:	5f                   	pop    %edi
    a1d8:	5d                   	pop    %ebp
    a1d9:	c3                   	ret    
    a1da:	51                   	push   %ecx
    a1db:	68 c2 04 00 00       	push   $0x4c2
    a1e0:	68 c4 ec 00 00       	push   $0xecc4
    a1e5:	68 89 ed 00 00       	push   $0xed89
    a1ea:	e8 71 53 00 00       	call   f560 <assert_abort@plt>
    a1ef:	52                   	push   %edx
    a1f0:	68 c3 04 00 00       	push   $0x4c3
    a1f5:	68 c4 ec 00 00       	push   $0xecc4
    a1fa:	68 93 ed 00 00       	push   $0xed93
    a1ff:	e8 5c 53 00 00       	call   f560 <assert_abort@plt>
    a204:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    a20a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0000a210 <nic_offload_set>:
    a210:	55                   	push   %ebp
    a211:	89 e5                	mov    %esp,%ebp
    a213:	53                   	push   %ebx
    a214:	83 ec 20             	sub    $0x20,%esp
    a217:	8b 45 08             	mov    0x8(%ebp),%eax
    a21a:	50                   	push   %eax
    a21b:	e8 50 55 00 00       	call   f770 <async_exchange_begin@plt>
    a220:	83 c4 0c             	add    $0xc,%esp
    a223:	8b 55 10             	mov    0x10(%ebp),%edx
    a226:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    a229:	89 c3                	mov    %eax,%ebx
    a22b:	6a 00                	push   $0x0
    a22d:	6a 00                	push   $0x0
    a22f:	6a 00                	push   $0x0
    a231:	6a 00                	push   $0x0
    a233:	6a 00                	push   $0x0
    a235:	6a 00                	push   $0x0
    a237:	52                   	push   %edx
    a238:	51                   	push   %ecx
    a239:	6a 0e                	push   $0xe
    a23b:	68 05 04 00 00       	push   $0x405
    a240:	50                   	push   %eax
    a241:	e8 aa 52 00 00       	call   f4f0 <async_req_fast@plt>
    a246:	83 c4 24             	add    $0x24,%esp
    a249:	89 45 f4             	mov    %eax,-0xc(%ebp)
    a24c:	53                   	push   %ebx
    a24d:	e8 fe 52 00 00       	call   f550 <async_exchange_end@plt>
    a252:	8b 45 f4             	mov    -0xc(%ebp),%eax
    a255:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    a258:	c9                   	leave  
    a259:	c3                   	ret    
    a25a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000a260 <nic_poll_get_mode>:
    a260:	55                   	push   %ebp
    a261:	89 e5                	mov    %esp,%ebp
    a263:	57                   	push   %edi
    a264:	56                   	push   %esi
    a265:	53                   	push   %ebx
    a266:	83 ec 2c             	sub    $0x2c,%esp
    a269:	8b 75 0c             	mov    0xc(%ebp),%esi
    a26c:	8b 5d 10             	mov    0x10(%ebp),%ebx
    a26f:	85 f6                	test   %esi,%esi
    a271:	74 6d                	je     a2e0 <nic_poll_get_mode+0x80>
    a273:	83 ec 0c             	sub    $0xc,%esp
    a276:	8b 55 08             	mov    0x8(%ebp),%edx
    a279:	52                   	push   %edx
    a27a:	e8 f1 54 00 00       	call   f770 <async_exchange_begin@plt>
    a27f:	83 c4 0c             	add    $0xc,%esp
    a282:	89 c7                	mov    %eax,%edi
    a284:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    a287:	6a 00                	push   $0x0
    a289:	6a 00                	push   $0x0
    a28b:	6a 00                	push   $0x0
    a28d:	6a 00                	push   $0x0
    a28f:	50                   	push   %eax
    a290:	31 c0                	xor    %eax,%eax
    a292:	85 db                	test   %ebx,%ebx
    a294:	6a 00                	push   $0x0
    a296:	0f 95 c0             	setne  %al
    a299:	6a 00                	push   $0x0
    a29b:	50                   	push   %eax
    a29c:	6a 26                	push   $0x26
    a29e:	68 05 04 00 00       	push   $0x405
    a2a3:	57                   	push   %edi
    a2a4:	e8 47 52 00 00       	call   f4f0 <async_req_fast@plt>
    a2a9:	83 c4 30             	add    $0x30,%esp
    a2ac:	85 c0                	test   %eax,%eax
    a2ae:	75 16                	jne    a2c6 <nic_poll_get_mode+0x66>
    a2b0:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    a2b3:	85 db                	test   %ebx,%ebx
    a2b5:	89 16                	mov    %edx,(%esi)
    a2b7:	74 0d                	je     a2c6 <nic_poll_get_mode+0x66>
    a2b9:	50                   	push   %eax
    a2ba:	6a 08                	push   $0x8
    a2bc:	53                   	push   %ebx
    a2bd:	57                   	push   %edi
    a2be:	e8 1d 54 00 00       	call   f6e0 <async_data_read_start@plt>
    a2c3:	83 c4 10             	add    $0x10,%esp
    a2c6:	83 ec 0c             	sub    $0xc,%esp
    a2c9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a2cc:	57                   	push   %edi
    a2cd:	e8 7e 52 00 00       	call   f550 <async_exchange_end@plt>
    a2d2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a2d5:	83 c4 10             	add    $0x10,%esp
    a2d8:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a2db:	5b                   	pop    %ebx
    a2dc:	5e                   	pop    %esi
    a2dd:	5f                   	pop    %edi
    a2de:	5d                   	pop    %ebp
    a2df:	c3                   	ret    
    a2e0:	51                   	push   %ecx
    a2e1:	68 f2 04 00 00       	push   $0x4f2
    a2e6:	68 c4 ec 00 00       	push   $0xecc4
    a2eb:	68 69 ed 00 00       	push   $0xed69
    a2f0:	e8 6b 52 00 00       	call   f560 <assert_abort@plt>
    a2f5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a2f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000a300 <nic_poll_set_mode>:
    a300:	55                   	push   %ebp
    a301:	89 e5                	mov    %esp,%ebp
    a303:	57                   	push   %edi
    a304:	56                   	push   %esi
    a305:	53                   	push   %ebx
    a306:	83 ec 38             	sub    $0x38,%esp
    a309:	8b 7d 08             	mov    0x8(%ebp),%edi
    a30c:	8b 5d 10             	mov    0x10(%ebp),%ebx
    a30f:	57                   	push   %edi
    a310:	e8 5b 54 00 00       	call   f770 <async_exchange_begin@plt>
    a315:	83 c4 0c             	add    $0xc,%esp
    a318:	89 c6                	mov    %eax,%esi
    a31a:	31 c0                	xor    %eax,%eax
    a31c:	85 db                	test   %ebx,%ebx
    a31e:	0f 95 c0             	setne  %al
    a321:	6a 00                	push   $0x0
    a323:	6a 00                	push   $0x0
    a325:	50                   	push   %eax
    a326:	8b 45 0c             	mov    0xc(%ebp),%eax
    a329:	50                   	push   %eax
    a32a:	6a 27                	push   $0x27
    a32c:	68 05 04 00 00       	push   $0x405
    a331:	56                   	push   %esi
    a332:	e8 d9 51 00 00       	call   f510 <async_send_fast@plt>
    a337:	83 c4 20             	add    $0x20,%esp
    a33a:	89 c7                	mov    %eax,%edi
    a33c:	85 db                	test   %ebx,%ebx
    a33e:	74 38                	je     a378 <nic_poll_set_mode+0x78>
    a340:	51                   	push   %ecx
    a341:	6a 08                	push   $0x8
    a343:	53                   	push   %ebx
    a344:	56                   	push   %esi
    a345:	e8 d6 50 00 00       	call   f420 <async_data_write_start@plt>
    a34a:	89 34 24             	mov    %esi,(%esp)
    a34d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a350:	e8 fb 51 00 00       	call   f550 <async_exchange_end@plt>
    a355:	8d 55 e4             	lea    -0x1c(%ebp),%edx
    a358:	5b                   	pop    %ebx
    a359:	5e                   	pop    %esi
    a35a:	52                   	push   %edx
    a35b:	57                   	push   %edi
    a35c:	e8 6f 50 00 00       	call   f3d0 <async_wait_for@plt>
    a361:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a364:	83 c4 10             	add    $0x10,%esp
    a367:	85 c0                	test   %eax,%eax
    a369:	74 25                	je     a390 <nic_poll_set_mode+0x90>
    a36b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a36e:	5b                   	pop    %ebx
    a36f:	5e                   	pop    %esi
    a370:	5f                   	pop    %edi
    a371:	5d                   	pop    %ebp
    a372:	c3                   	ret    
    a373:	90                   	nop
    a374:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a378:	83 ec 0c             	sub    $0xc,%esp
    a37b:	56                   	push   %esi
    a37c:	e8 cf 51 00 00       	call   f550 <async_exchange_end@plt>
    a381:	58                   	pop    %eax
    a382:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    a385:	5a                   	pop    %edx
    a386:	50                   	push   %eax
    a387:	57                   	push   %edi
    a388:	e8 43 50 00 00       	call   f3d0 <async_wait_for@plt>
    a38d:	83 c4 10             	add    $0x10,%esp
    a390:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    a393:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a396:	5b                   	pop    %ebx
    a397:	5e                   	pop    %esi
    a398:	5f                   	pop    %edi
    a399:	5d                   	pop    %ebp
    a39a:	c3                   	ret    
    a39b:	90                   	nop
    a39c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000a3a0 <nic_poll_now>:
    a3a0:	55                   	push   %ebp
    a3a1:	89 e5                	mov    %esp,%ebp
    a3a3:	53                   	push   %ebx
    a3a4:	83 ec 20             	sub    $0x20,%esp
    a3a7:	8b 45 08             	mov    0x8(%ebp),%eax
    a3aa:	50                   	push   %eax
    a3ab:	e8 c0 53 00 00       	call   f770 <async_exchange_begin@plt>
    a3b0:	83 c4 0c             	add    $0xc,%esp
    a3b3:	89 c3                	mov    %eax,%ebx
    a3b5:	6a 00                	push   $0x0
    a3b7:	6a 00                	push   $0x0
    a3b9:	6a 00                	push   $0x0
    a3bb:	6a 00                	push   $0x0
    a3bd:	6a 00                	push   $0x0
    a3bf:	6a 00                	push   $0x0
    a3c1:	6a 00                	push   $0x0
    a3c3:	6a 00                	push   $0x0
    a3c5:	6a 28                	push   $0x28
    a3c7:	68 05 04 00 00       	push   $0x405
    a3cc:	50                   	push   %eax
    a3cd:	e8 1e 51 00 00       	call   f4f0 <async_req_fast@plt>
    a3d2:	83 c4 24             	add    $0x24,%esp
    a3d5:	89 45 f4             	mov    %eax,-0xc(%ebp)
    a3d8:	53                   	push   %ebx
    a3d9:	e8 72 51 00 00       	call   f550 <async_exchange_end@plt>
    a3de:	8b 45 f4             	mov    -0xc(%ebp),%eax
    a3e1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    a3e4:	c9                   	leave  
    a3e5:	c3                   	ret    
    a3e6:	66 90                	xchg   %ax,%ax
    a3e8:	66 90                	xchg   %ax,%ax
    a3ea:	66 90                	xchg   %ax,%ax
    a3ec:	66 90                	xchg   %ax,%ax
    a3ee:	66 90                	xchg   %ax,%ax

0000a3f0 <remote_ieee80211_connect>:
    a3f0:	55                   	push   %ebp
    a3f1:	89 e5                	mov    %esp,%ebp
    a3f3:	57                   	push   %edi
    a3f4:	56                   	push   %esi
    a3f5:	53                   	push   %ebx
    a3f6:	83 ec 5c             	sub    $0x5c,%esp
    a3f9:	8b 45 0c             	mov    0xc(%ebp),%eax
    a3fc:	8b 78 04             	mov    0x4(%eax),%edi
    a3ff:	85 ff                	test   %edi,%edi
    a401:	0f 84 ab 00 00 00    	je     a4b2 <remote_ieee80211_connect+0xc2>
    a407:	8d 75 a4             	lea    -0x5c(%ebp),%esi
    a40a:	53                   	push   %ebx
    a40b:	53                   	push   %ebx
    a40c:	8d 5d a0             	lea    -0x60(%ebp),%ebx
    a40f:	56                   	push   %esi
    a410:	53                   	push   %ebx
    a411:	e8 3a 54 00 00       	call   f850 <async_data_write_receive@plt>
    a416:	83 c4 10             	add    $0x10,%esp
    a419:	84 c0                	test   %al,%al
    a41b:	74 08                	je     a425 <remote_ieee80211_connect+0x35>
    a41d:	8b 45 a4             	mov    -0x5c(%ebp),%eax
    a420:	83 f8 20             	cmp    $0x20,%eax
    a423:	76 2b                	jbe    a450 <remote_ieee80211_connect+0x60>
    a425:	8b 45 a0             	mov    -0x60(%ebp),%eax
    a428:	57                   	push   %edi
    a429:	57                   	push   %edi
    a42a:	6a f2                	push   $0xfffffff2
    a42c:	50                   	push   %eax
    a42d:	e8 ce 50 00 00       	call   f500 <async_answer_0@plt>
    a432:	8b 4d 10             	mov    0x10(%ebp),%ecx
    a435:	58                   	pop    %eax
    a436:	5a                   	pop    %edx
    a437:	6a f2                	push   $0xfffffff2
    a439:	51                   	push   %ecx
    a43a:	e8 c1 50 00 00       	call   f500 <async_answer_0@plt>
    a43f:	83 c4 10             	add    $0x10,%esp
    a442:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a445:	5b                   	pop    %ebx
    a446:	5e                   	pop    %esi
    a447:	5f                   	pop    %edi
    a448:	5d                   	pop    %ebp
    a449:	c3                   	ret    
    a44a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    a450:	8b 4d a0             	mov    -0x60(%ebp),%ecx
    a453:	8d 7d a8             	lea    -0x58(%ebp),%edi
    a456:	52                   	push   %edx
    a457:	50                   	push   %eax
    a458:	57                   	push   %edi
    a459:	51                   	push   %ecx
    a45a:	e8 81 53 00 00       	call   f7e0 <async_data_write_finalize@plt>
    a45f:	83 c4 10             	add    $0x10,%esp
    a462:	85 c0                	test   %eax,%eax
    a464:	75 bf                	jne    a425 <remote_ieee80211_connect+0x35>
    a466:	50                   	push   %eax
    a467:	50                   	push   %eax
    a468:	56                   	push   %esi
    a469:	53                   	push   %ebx
    a46a:	e8 e1 53 00 00       	call   f850 <async_data_write_receive@plt>
    a46f:	83 c4 10             	add    $0x10,%esp
    a472:	84 c0                	test   %al,%al
    a474:	74 af                	je     a425 <remote_ieee80211_connect+0x35>
    a476:	8b 45 a4             	mov    -0x5c(%ebp),%eax
    a479:	83 f8 20             	cmp    $0x20,%eax
    a47c:	77 a7                	ja     a425 <remote_ieee80211_connect+0x35>
    a47e:	8b 75 a0             	mov    -0x60(%ebp),%esi
    a481:	53                   	push   %ebx
    a482:	8d 5d c8             	lea    -0x38(%ebp),%ebx
    a485:	50                   	push   %eax
    a486:	53                   	push   %ebx
    a487:	56                   	push   %esi
    a488:	e8 53 53 00 00       	call   f7e0 <async_data_write_finalize@plt>
    a48d:	83 c4 10             	add    $0x10,%esp
    a490:	85 c0                	test   %eax,%eax
    a492:	75 91                	jne    a425 <remote_ieee80211_connect+0x35>
    a494:	50                   	push   %eax
    a495:	8b 45 0c             	mov    0xc(%ebp),%eax
    a498:	8b 55 08             	mov    0x8(%ebp),%edx
    a49b:	53                   	push   %ebx
    a49c:	57                   	push   %edi
    a49d:	52                   	push   %edx
    a49e:	ff 50 04             	call   *0x4(%eax)
    a4a1:	8b 75 10             	mov    0x10(%ebp),%esi
    a4a4:	59                   	pop    %ecx
    a4a5:	5b                   	pop    %ebx
    a4a6:	50                   	push   %eax
    a4a7:	56                   	push   %esi
    a4a8:	e8 53 50 00 00       	call   f500 <async_answer_0@plt>
    a4ad:	83 c4 10             	add    $0x10,%esp
    a4b0:	eb 90                	jmp    a442 <remote_ieee80211_connect+0x52>
    a4b2:	56                   	push   %esi
    a4b3:	68 33 01 00 00       	push   $0x133
    a4b8:	68 64 ee 00 00       	push   $0xee64
    a4bd:	68 7f ee 00 00       	push   $0xee7f
    a4c2:	e8 99 50 00 00       	call   f560 <assert_abort@plt>
    a4c7:	89 f6                	mov    %esi,%esi
    a4c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000a4d0 <remote_ieee80211_get_scan_results>:
    a4d0:	55                   	push   %ebp
    a4d1:	89 e5                	mov    %esp,%ebp
    a4d3:	56                   	push   %esi
    a4d4:	53                   	push   %ebx
    a4d5:	81 ec 90 07 00 00    	sub    $0x790,%esp
    a4db:	8b 75 0c             	mov    0xc(%ebp),%esi
    a4de:	8b 06                	mov    (%esi),%eax
    a4e0:	85 c0                	test   %eax,%eax
    a4e2:	0f 84 df 00 00 00    	je     a5c7 <remote_ieee80211_get_scan_results+0xf7>
    a4e8:	8d 9d 74 f8 ff ff    	lea    -0x78c(%ebp),%ebx
    a4ee:	50                   	push   %eax
    a4ef:	68 84 07 00 00       	push   $0x784
    a4f4:	6a 00                	push   $0x0
    a4f6:	53                   	push   %ebx
    a4f7:	e8 c4 51 00 00       	call   f6c0 <memset@plt>
    a4fc:	8b 45 14             	mov    0x14(%ebp),%eax
    a4ff:	83 c4 0c             	add    $0xc,%esp
    a502:	8b 40 08             	mov    0x8(%eax),%eax
    a505:	85 c0                	test   %eax,%eax
    a507:	0f 95 c0             	setne  %al
    a50a:	25 ff 00 00 00       	and    $0xff,%eax
    a50f:	50                   	push   %eax
    a510:	8b 45 08             	mov    0x8(%ebp),%eax
    a513:	53                   	push   %ebx
    a514:	50                   	push   %eax
    a515:	ff 16                	call   *(%esi)
    a517:	83 c4 10             	add    $0x10,%esp
    a51a:	89 c6                	mov    %eax,%esi
    a51c:	85 c0                	test   %eax,%eax
    a51e:	75 66                	jne    a586 <remote_ieee80211_get_scan_results+0xb6>
    a520:	50                   	push   %eax
    a521:	50                   	push   %eax
    a522:	8d 85 70 f8 ff ff    	lea    -0x790(%ebp),%eax
    a528:	50                   	push   %eax
    a529:	8d 85 6c f8 ff ff    	lea    -0x794(%ebp),%eax
    a52f:	50                   	push   %eax
    a530:	e8 9b 51 00 00       	call   f6d0 <async_data_read_receive@plt>
    a535:	83 c4 10             	add    $0x10,%esp
    a538:	84 c0                	test   %al,%al
    a53a:	74 64                	je     a5a0 <remote_ieee80211_get_scan_results+0xd0>
    a53c:	81 bd 70 f8 ff ff 83 	cmpl   $0x783,-0x790(%ebp)
    a543:	07 00 00 
    a546:	77 28                	ja     a570 <remote_ieee80211_get_scan_results+0xa0>
    a548:	8b 85 6c f8 ff ff    	mov    -0x794(%ebp),%eax
    a54e:	56                   	push   %esi
    a54f:	56                   	push   %esi
    a550:	6a fd                	push   $0xfffffffd
    a552:	50                   	push   %eax
    a553:	e8 a8 4f 00 00       	call   f500 <async_answer_0@plt>
    a558:	8b 4d 10             	mov    0x10(%ebp),%ecx
    a55b:	58                   	pop    %eax
    a55c:	5a                   	pop    %edx
    a55d:	6a fd                	push   $0xfffffffd
    a55f:	51                   	push   %ecx
    a560:	e8 9b 4f 00 00       	call   f500 <async_answer_0@plt>
    a565:	83 c4 10             	add    $0x10,%esp
    a568:	8d 65 f8             	lea    -0x8(%ebp),%esp
    a56b:	5b                   	pop    %ebx
    a56c:	5e                   	pop    %esi
    a56d:	5d                   	pop    %ebp
    a56e:	c3                   	ret    
    a56f:	90                   	nop
    a570:	51                   	push   %ecx
    a571:	68 84 07 00 00       	push   $0x784
    a576:	53                   	push   %ebx
    a577:	8b 9d 6c f8 ff ff    	mov    -0x794(%ebp),%ebx
    a57d:	53                   	push   %ebx
    a57e:	e8 dd 4e 00 00       	call   f460 <async_data_read_finalize@plt>
    a583:	83 c4 10             	add    $0x10,%esp
    a586:	8b 55 10             	mov    0x10(%ebp),%edx
    a589:	50                   	push   %eax
    a58a:	50                   	push   %eax
    a58b:	56                   	push   %esi
    a58c:	52                   	push   %edx
    a58d:	e8 6e 4f 00 00       	call   f500 <async_answer_0@plt>
    a592:	83 c4 10             	add    $0x10,%esp
    a595:	8d 65 f8             	lea    -0x8(%ebp),%esp
    a598:	5b                   	pop    %ebx
    a599:	5e                   	pop    %esi
    a59a:	5d                   	pop    %ebp
    a59b:	c3                   	ret    
    a59c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a5a0:	8b b5 6c f8 ff ff    	mov    -0x794(%ebp),%esi
    a5a6:	53                   	push   %ebx
    a5a7:	53                   	push   %ebx
    a5a8:	6a f2                	push   $0xfffffff2
    a5aa:	56                   	push   %esi
    a5ab:	e8 50 4f 00 00       	call   f500 <async_answer_0@plt>
    a5b0:	8b 4d 10             	mov    0x10(%ebp),%ecx
    a5b3:	58                   	pop    %eax
    a5b4:	5a                   	pop    %edx
    a5b5:	6a f2                	push   $0xfffffff2
    a5b7:	51                   	push   %ecx
    a5b8:	e8 43 4f 00 00       	call   f500 <async_answer_0@plt>
    a5bd:	83 c4 10             	add    $0x10,%esp
    a5c0:	8d 65 f8             	lea    -0x8(%ebp),%esp
    a5c3:	5b                   	pop    %ebx
    a5c4:	5e                   	pop    %esi
    a5c5:	5d                   	pop    %ebp
    a5c6:	c3                   	ret    
    a5c7:	50                   	push   %eax
    a5c8:	68 11 01 00 00       	push   $0x111
    a5cd:	68 64 ee 00 00       	push   $0xee64
    a5d2:	68 cc ee 00 00       	push   $0xeecc
    a5d7:	e8 84 4f 00 00       	call   f560 <assert_abort@plt>
    a5dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000a5e0 <remote_ieee80211_disconnect>:
    a5e0:	55                   	push   %ebp
    a5e1:	89 e5                	mov    %esp,%ebp
    a5e3:	53                   	push   %ebx
    a5e4:	52                   	push   %edx
    a5e5:	8b 45 0c             	mov    0xc(%ebp),%eax
    a5e8:	8b 55 08             	mov    0x8(%ebp),%edx
    a5eb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    a5ee:	8b 40 08             	mov    0x8(%eax),%eax
    a5f1:	85 c0                	test   %eax,%eax
    a5f3:	74 18                	je     a60d <remote_ieee80211_disconnect+0x2d>
    a5f5:	83 ec 0c             	sub    $0xc,%esp
    a5f8:	52                   	push   %edx
    a5f9:	ff d0                	call   *%eax
    a5fb:	89 5d 08             	mov    %ebx,0x8(%ebp)
    a5fe:	83 c4 10             	add    $0x10,%esp
    a601:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    a604:	89 45 0c             	mov    %eax,0xc(%ebp)
    a607:	c9                   	leave  
    a608:	e9 f3 4e 00 00       	jmp    f500 <async_answer_0@plt>
    a60d:	50                   	push   %eax
    a60e:	68 69 01 00 00       	push   $0x169
    a613:	68 64 ee 00 00       	push   $0xee64
    a618:	68 98 ee 00 00       	push   $0xee98
    a61d:	e8 3e 4f 00 00       	call   f560 <assert_abort@plt>
    a622:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    a629:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000a630 <ieee80211_get_scan_results>:
    a630:	55                   	push   %ebp
    a631:	89 e5                	mov    %esp,%ebp
    a633:	57                   	push   %edi
    a634:	56                   	push   %esi
    a635:	53                   	push   %ebx
    a636:	83 ec 2c             	sub    $0x2c,%esp
    a639:	8b 75 0c             	mov    0xc(%ebp),%esi
    a63c:	8b 5d 10             	mov    0x10(%ebp),%ebx
    a63f:	85 f6                	test   %esi,%esi
    a641:	74 6a                	je     a6ad <ieee80211_get_scan_results+0x7d>
    a643:	83 ec 0c             	sub    $0xc,%esp
    a646:	8b 45 08             	mov    0x8(%ebp),%eax
    a649:	81 e3 ff 00 00 00    	and    $0xff,%ebx
    a64f:	50                   	push   %eax
    a650:	e8 1b 51 00 00       	call   f770 <async_exchange_begin@plt>
    a655:	83 c4 0c             	add    $0xc,%esp
    a658:	89 c7                	mov    %eax,%edi
    a65a:	6a 00                	push   $0x0
    a65c:	6a 00                	push   $0x0
    a65e:	6a 00                	push   $0x0
    a660:	53                   	push   %ebx
    a661:	6a 00                	push   $0x0
    a663:	68 06 04 00 00       	push   $0x406
    a668:	50                   	push   %eax
    a669:	e8 a2 4e 00 00       	call   f510 <async_send_fast@plt>
    a66e:	83 c4 1c             	add    $0x1c,%esp
    a671:	89 c3                	mov    %eax,%ebx
    a673:	68 84 07 00 00       	push   $0x784
    a678:	56                   	push   %esi
    a679:	57                   	push   %edi
    a67a:	e8 61 50 00 00       	call   f6e0 <async_data_read_start@plt>
    a67f:	89 3c 24             	mov    %edi,(%esp)
    a682:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a685:	e8 c6 4e 00 00       	call   f550 <async_exchange_end@plt>
    a68a:	5a                   	pop    %edx
    a68b:	8d 55 e4             	lea    -0x1c(%ebp),%edx
    a68e:	59                   	pop    %ecx
    a68f:	52                   	push   %edx
    a690:	53                   	push   %ebx
    a691:	e8 3a 4d 00 00       	call   f3d0 <async_wait_for@plt>
    a696:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    a699:	83 c4 10             	add    $0x10,%esp
    a69c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a69f:	85 d2                	test   %edx,%edx
    a6a1:	74 02                	je     a6a5 <ieee80211_get_scan_results+0x75>
    a6a3:	89 d0                	mov    %edx,%eax
    a6a5:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a6a8:	5b                   	pop    %ebx
    a6a9:	5e                   	pop    %esi
    a6aa:	5f                   	pop    %edi
    a6ab:	5d                   	pop    %ebp
    a6ac:	c3                   	ret    
    a6ad:	53                   	push   %ebx
    a6ae:	6a 43                	push   $0x43
    a6b0:	68 64 ee 00 00       	push   $0xee64
    a6b5:	68 b4 ee 00 00       	push   $0xeeb4
    a6ba:	e8 a1 4e 00 00       	call   f560 <assert_abort@plt>
    a6bf:	90                   	nop

0000a6c0 <ieee80211_connect>:
    a6c0:	55                   	push   %ebp
    a6c1:	89 e5                	mov    %esp,%ebp
    a6c3:	57                   	push   %edi
    a6c4:	56                   	push   %esi
    a6c5:	53                   	push   %ebx
    a6c6:	83 ec 3c             	sub    $0x3c,%esp
    a6c9:	8b 75 0c             	mov    0xc(%ebp),%esi
    a6cc:	85 f6                	test   %esi,%esi
    a6ce:	0f 84 97 01 00 00    	je     a86b <ieee80211_connect+0x1ab>
    a6d4:	83 ec 0c             	sub    $0xc,%esp
    a6d7:	8b 45 08             	mov    0x8(%ebp),%eax
    a6da:	50                   	push   %eax
    a6db:	e8 90 50 00 00       	call   f770 <async_exchange_begin@plt>
    a6e0:	83 c4 0c             	add    $0xc,%esp
    a6e3:	89 c3                	mov    %eax,%ebx
    a6e5:	6a 00                	push   $0x0
    a6e7:	6a 00                	push   $0x0
    a6e9:	6a 00                	push   $0x0
    a6eb:	6a 00                	push   $0x0
    a6ed:	6a 01                	push   $0x1
    a6ef:	68 06 04 00 00       	push   $0x406
    a6f4:	50                   	push   %eax
    a6f5:	e8 16 4e 00 00       	call   f510 <async_send_fast@plt>
    a6fa:	83 c4 14             	add    $0x14,%esp
    a6fd:	89 c7                	mov    %eax,%edi
    a6ff:	56                   	push   %esi
    a700:	e8 3b 50 00 00       	call   f740 <str_size@plt>
    a705:	83 c4 0c             	add    $0xc,%esp
    a708:	40                   	inc    %eax
    a709:	50                   	push   %eax
    a70a:	56                   	push   %esi
    a70b:	53                   	push   %ebx
    a70c:	e8 0f 4d 00 00       	call   f420 <async_data_write_start@plt>
    a711:	83 c4 10             	add    $0x10,%esp
    a714:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    a717:	85 c0                	test   %eax,%eax
    a719:	75 30                	jne    a74b <ieee80211_connect+0x8b>
    a71b:	8b 45 10             	mov    0x10(%ebp),%eax
    a71e:	85 c0                	test   %eax,%eax
    a720:	0f 84 aa 00 00 00    	je     a7d0 <ieee80211_connect+0x110>
    a726:	83 ec 0c             	sub    $0xc,%esp
    a729:	8b 75 10             	mov    0x10(%ebp),%esi
    a72c:	56                   	push   %esi
    a72d:	e8 0e 50 00 00       	call   f740 <str_size@plt>
    a732:	83 c4 0c             	add    $0xc,%esp
    a735:	40                   	inc    %eax
    a736:	50                   	push   %eax
    a737:	8b 45 10             	mov    0x10(%ebp),%eax
    a73a:	50                   	push   %eax
    a73b:	53                   	push   %ebx
    a73c:	e8 df 4c 00 00       	call   f420 <async_data_write_start@plt>
    a741:	83 c4 10             	add    $0x10,%esp
    a744:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    a747:	85 c0                	test   %eax,%eax
    a749:	74 2d                	je     a778 <ieee80211_connect+0xb8>
    a74b:	83 ec 0c             	sub    $0xc,%esp
    a74e:	53                   	push   %ebx
    a74f:	e8 fc 4d 00 00       	call   f550 <async_exchange_end@plt>
    a754:	8d 45 d8             	lea    -0x28(%ebp),%eax
    a757:	59                   	pop    %ecx
    a758:	5b                   	pop    %ebx
    a759:	50                   	push   %eax
    a75a:	57                   	push   %edi
    a75b:	e8 70 4c 00 00       	call   f3d0 <async_wait_for@plt>
    a760:	8b 45 d8             	mov    -0x28(%ebp),%eax
    a763:	83 c4 10             	add    $0x10,%esp
    a766:	85 c0                	test   %eax,%eax
    a768:	75 03                	jne    a76d <ieee80211_connect+0xad>
    a76a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    a76d:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a770:	5b                   	pop    %ebx
    a771:	5e                   	pop    %esi
    a772:	5f                   	pop    %edi
    a773:	5d                   	pop    %ebp
    a774:	c3                   	ret    
    a775:	8d 76 00             	lea    0x0(%esi),%esi
    a778:	83 ec 0c             	sub    $0xc,%esp
    a77b:	53                   	push   %ebx
    a77c:	e8 cf 4d 00 00       	call   f550 <async_exchange_end@plt>
    a781:	58                   	pop    %eax
    a782:	8d 45 c4             	lea    -0x3c(%ebp),%eax
    a785:	5a                   	pop    %edx
    a786:	50                   	push   %eax
    a787:	57                   	push   %edi
    a788:	e8 43 4c 00 00       	call   f3d0 <async_wait_for@plt>
    a78d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    a790:	83 c4 10             	add    $0x10,%esp
    a793:	85 c0                	test   %eax,%eax
    a795:	75 d6                	jne    a76d <ieee80211_connect+0xad>
    a797:	8d 45 d2             	lea    -0x2e(%ebp),%eax
    a79a:	8b 7d 08             	mov    0x8(%ebp),%edi
    a79d:	56                   	push   %esi
    a79e:	56                   	push   %esi
    a79f:	50                   	push   %eax
    a7a0:	57                   	push   %edi
    a7a1:	e8 6a e7 ff ff       	call   8f10 <nic_get_address>
    a7a6:	83 c4 10             	add    $0x10,%esp
    a7a9:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    a7ac:	85 c0                	test   %eax,%eax
    a7ae:	75 bd                	jne    a76d <ieee80211_connect+0xad>
    a7b0:	8d 45 cc             	lea    -0x34(%ebp),%eax
    a7b3:	53                   	push   %ebx
    a7b4:	53                   	push   %ebx
    a7b5:	50                   	push   %eax
    a7b6:	8d 45 c8             	lea    -0x38(%ebp),%eax
    a7b9:	50                   	push   %eax
    a7ba:	e8 61 50 00 00       	call   f820 <inetcfg_get_link_list@plt>
    a7bf:	83 c4 10             	add    $0x10,%esp
    a7c2:	85 c0                	test   %eax,%eax
    a7c4:	74 1a                	je     a7e0 <ieee80211_connect+0x120>
    a7c6:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    a7cb:	eb a0                	jmp    a76d <ieee80211_connect+0xad>
    a7cd:	8d 76 00             	lea    0x0(%esi),%esi
    a7d0:	c7 45 10 26 f0 00 00 	movl   $0xf026,0x10(%ebp)
    a7d7:	e9 4a ff ff ff       	jmp    a726 <ieee80211_connect+0x66>
    a7dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a7e0:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    a7e3:	85 c9                	test   %ecx,%ecx
    a7e5:	74 df                	je     a7c6 <ieee80211_connect+0x106>
    a7e7:	31 db                	xor    %ebx,%ebx
    a7e9:	8d 7d d8             	lea    -0x28(%ebp),%edi
    a7ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a7f0:	8d 34 9d 00 00 00 00 	lea    0x0(,%ebx,4),%esi
    a7f7:	50                   	push   %eax
    a7f8:	50                   	push   %eax
    a7f9:	8b 45 c8             	mov    -0x38(%ebp),%eax
    a7fc:	57                   	push   %edi
    a7fd:	8b 14 30             	mov    (%eax,%esi,1),%edx
    a800:	52                   	push   %edx
    a801:	e8 6a 4e 00 00       	call   f670 <inetcfg_link_get@plt>
    a806:	83 c4 10             	add    $0x10,%esp
    a809:	85 c0                	test   %eax,%eax
    a80b:	75 b9                	jne    a7c6 <ieee80211_connect+0x106>
    a80d:	8a 45 e0             	mov    -0x20(%ebp),%al
    a810:	38 45 d2             	cmp    %al,-0x2e(%ebp)
    a813:	75 4b                	jne    a860 <ieee80211_connect+0x1a0>
    a815:	8a 45 e1             	mov    -0x1f(%ebp),%al
    a818:	38 45 d3             	cmp    %al,-0x2d(%ebp)
    a81b:	75 43                	jne    a860 <ieee80211_connect+0x1a0>
    a81d:	8a 45 e2             	mov    -0x1e(%ebp),%al
    a820:	38 45 d4             	cmp    %al,-0x2c(%ebp)
    a823:	75 3b                	jne    a860 <ieee80211_connect+0x1a0>
    a825:	8a 45 e3             	mov    -0x1d(%ebp),%al
    a828:	38 45 d5             	cmp    %al,-0x2b(%ebp)
    a82b:	75 33                	jne    a860 <ieee80211_connect+0x1a0>
    a82d:	8a 45 e4             	mov    -0x1c(%ebp),%al
    a830:	38 45 d6             	cmp    %al,-0x2a(%ebp)
    a833:	75 2b                	jne    a860 <ieee80211_connect+0x1a0>
    a835:	8a 45 e5             	mov    -0x1b(%ebp),%al
    a838:	38 45 d7             	cmp    %al,-0x29(%ebp)
    a83b:	75 23                	jne    a860 <ieee80211_connect+0x1a0>
    a83d:	8b 45 c8             	mov    -0x38(%ebp),%eax
    a840:	8b 04 30             	mov    (%eax,%esi,1),%eax
    a843:	83 f8 ff             	cmp    $0xffffffff,%eax
    a846:	0f 84 7a ff ff ff    	je     a7c6 <ieee80211_connect+0x106>
    a84c:	83 ec 0c             	sub    $0xc,%esp
    a84f:	50                   	push   %eax
    a850:	e8 4b 4e 00 00       	call   f6a0 <dhcp_discover@plt>
    a855:	83 c4 10             	add    $0x10,%esp
    a858:	e9 10 ff ff ff       	jmp    a76d <ieee80211_connect+0xad>
    a85d:	8d 76 00             	lea    0x0(%esi),%esi
    a860:	43                   	inc    %ebx
    a861:	3b 5d cc             	cmp    -0x34(%ebp),%ebx
    a864:	72 8a                	jb     a7f0 <ieee80211_connect+0x130>
    a866:	e9 5b ff ff ff       	jmp    a7c6 <ieee80211_connect+0x106>
    a86b:	50                   	push   %eax
    a86c:	68 82 00 00 00       	push   $0x82
    a871:	68 64 ee 00 00       	push   $0xee64
    a876:	68 bc ee 00 00       	push   $0xeebc
    a87b:	e8 e0 4c 00 00       	call   f560 <assert_abort@plt>

0000a880 <ieee80211_disconnect>:
    a880:	55                   	push   %ebp
    a881:	89 e5                	mov    %esp,%ebp
    a883:	57                   	push   %edi
    a884:	56                   	push   %esi
    a885:	53                   	push   %ebx
    a886:	81 ec 98 00 00 00    	sub    $0x98,%esp
    a88c:	8b 75 08             	mov    0x8(%ebp),%esi
    a88f:	56                   	push   %esi
    a890:	e8 db 4e 00 00       	call   f770 <async_exchange_begin@plt>
    a895:	83 c4 0c             	add    $0xc,%esp
    a898:	89 c3                	mov    %eax,%ebx
    a89a:	6a 00                	push   $0x0
    a89c:	6a 00                	push   $0x0
    a89e:	6a 00                	push   $0x0
    a8a0:	6a 00                	push   $0x0
    a8a2:	6a 00                	push   $0x0
    a8a4:	6a 00                	push   $0x0
    a8a6:	6a 00                	push   $0x0
    a8a8:	6a 00                	push   $0x0
    a8aa:	6a 02                	push   $0x2
    a8ac:	68 06 04 00 00       	push   $0x406
    a8b1:	50                   	push   %eax
    a8b2:	e8 39 4c 00 00       	call   f4f0 <async_req_fast@plt>
    a8b7:	83 c4 24             	add    $0x24,%esp
    a8ba:	89 c7                	mov    %eax,%edi
    a8bc:	53                   	push   %ebx
    a8bd:	e8 8e 4c 00 00       	call   f550 <async_exchange_end@plt>
    a8c2:	83 c4 10             	add    $0x10,%esp
    a8c5:	85 ff                	test   %edi,%edi
    a8c7:	74 0f                	je     a8d8 <ieee80211_disconnect+0x58>
    a8c9:	8d 65 f4             	lea    -0xc(%ebp),%esp
    a8cc:	89 f8                	mov    %edi,%eax
    a8ce:	5b                   	pop    %ebx
    a8cf:	5e                   	pop    %esi
    a8d0:	5f                   	pop    %edi
    a8d1:	5d                   	pop    %ebp
    a8d2:	c3                   	ret    
    a8d3:	90                   	nop
    a8d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a8d8:	50                   	push   %eax
    a8d9:	50                   	push   %eax
    a8da:	8d 45 82             	lea    -0x7e(%ebp),%eax
    a8dd:	50                   	push   %eax
    a8de:	56                   	push   %esi
    a8df:	e8 2c e6 ff ff       	call   8f10 <nic_get_address>
    a8e4:	83 c4 10             	add    $0x10,%esp
    a8e7:	89 c7                	mov    %eax,%edi
    a8e9:	85 c0                	test   %eax,%eax
    a8eb:	75 dc                	jne    a8c9 <ieee80211_disconnect+0x49>
    a8ed:	50                   	push   %eax
    a8ee:	50                   	push   %eax
    a8ef:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
    a8f5:	50                   	push   %eax
    a8f6:	8d 85 74 ff ff ff    	lea    -0x8c(%ebp),%eax
    a8fc:	50                   	push   %eax
    a8fd:	e8 3e 4d 00 00       	call   f640 <inetcfg_get_addr_list@plt>
    a902:	83 c4 10             	add    $0x10,%esp
    a905:	89 c7                	mov    %eax,%edi
    a907:	85 c0                	test   %eax,%eax
    a909:	75 be                	jne    a8c9 <ieee80211_disconnect+0x49>
    a90b:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
    a911:	31 db                	xor    %ebx,%ebx
    a913:	85 c0                	test   %eax,%eax
    a915:	0f 84 9e 00 00 00    	je     a9b9 <ieee80211_disconnect+0x139>
    a91b:	90                   	nop
    a91c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a920:	8d 45 98             	lea    -0x68(%ebp),%eax
    a923:	8d 34 9d 00 00 00 00 	lea    0x0(,%ebx,4),%esi
    a92a:	57                   	push   %edi
    a92b:	57                   	push   %edi
    a92c:	50                   	push   %eax
    a92d:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
    a933:	8b 04 30             	mov    (%eax,%esi,1),%eax
    a936:	50                   	push   %eax
    a937:	e8 a4 4a 00 00       	call   f3e0 <inetcfg_addr_get@plt>
    a93c:	83 c4 10             	add    $0x10,%esp
    a93f:	89 c7                	mov    %eax,%edi
    a941:	85 c0                	test   %eax,%eax
    a943:	75 84                	jne    a8c9 <ieee80211_disconnect+0x49>
    a945:	8d 45 88             	lea    -0x78(%ebp),%eax
    a948:	8b 4d b0             	mov    -0x50(%ebp),%ecx
    a94b:	52                   	push   %edx
    a94c:	52                   	push   %edx
    a94d:	50                   	push   %eax
    a94e:	51                   	push   %ecx
    a94f:	e8 1c 4d 00 00       	call   f670 <inetcfg_link_get@plt>
    a954:	83 c4 10             	add    $0x10,%esp
    a957:	89 c7                	mov    %eax,%edi
    a959:	85 c0                	test   %eax,%eax
    a95b:	0f 85 68 ff ff ff    	jne    a8c9 <ieee80211_disconnect+0x49>
    a961:	8a 45 90             	mov    -0x70(%ebp),%al
    a964:	38 45 82             	cmp    %al,-0x7e(%ebp)
    a967:	75 43                	jne    a9ac <ieee80211_disconnect+0x12c>
    a969:	8a 45 91             	mov    -0x6f(%ebp),%al
    a96c:	38 45 83             	cmp    %al,-0x7d(%ebp)
    a96f:	75 3b                	jne    a9ac <ieee80211_disconnect+0x12c>
    a971:	8a 45 92             	mov    -0x6e(%ebp),%al
    a974:	38 45 84             	cmp    %al,-0x7c(%ebp)
    a977:	75 33                	jne    a9ac <ieee80211_disconnect+0x12c>
    a979:	8a 45 93             	mov    -0x6d(%ebp),%al
    a97c:	38 45 85             	cmp    %al,-0x7b(%ebp)
    a97f:	75 2b                	jne    a9ac <ieee80211_disconnect+0x12c>
    a981:	8a 45 94             	mov    -0x6c(%ebp),%al
    a984:	38 45 86             	cmp    %al,-0x7a(%ebp)
    a987:	75 23                	jne    a9ac <ieee80211_disconnect+0x12c>
    a989:	8a 45 95             	mov    -0x6b(%ebp),%al
    a98c:	38 45 87             	cmp    %al,-0x79(%ebp)
    a98f:	75 1b                	jne    a9ac <ieee80211_disconnect+0x12c>
    a991:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    a994:	50                   	push   %eax
    a995:	50                   	push   %eax
    a996:	68 c7 ee 00 00       	push   $0xeec7
    a99b:	52                   	push   %edx
    a99c:	e8 2f 4c 00 00       	call   f5d0 <str_test_prefix@plt>
    a9a1:	83 c4 10             	add    $0x10,%esp
    a9a4:	84 c0                	test   %al,%al
    a9a6:	0f 85 94 00 00 00    	jne    aa40 <ieee80211_disconnect+0x1c0>
    a9ac:	43                   	inc    %ebx
    a9ad:	39 9d 7c ff ff ff    	cmp    %ebx,-0x84(%ebp)
    a9b3:	0f 87 67 ff ff ff    	ja     a920 <ieee80211_disconnect+0xa0>
    a9b9:	50                   	push   %eax
    a9ba:	50                   	push   %eax
    a9bb:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
    a9c1:	50                   	push   %eax
    a9c2:	8d 85 78 ff ff ff    	lea    -0x88(%ebp),%eax
    a9c8:	50                   	push   %eax
    a9c9:	e8 a2 4b 00 00       	call   f570 <inetcfg_get_sroute_list@plt>
    a9ce:	83 c4 10             	add    $0x10,%esp
    a9d1:	89 c7                	mov    %eax,%edi
    a9d3:	85 c0                	test   %eax,%eax
    a9d5:	0f 85 ee fe ff ff    	jne    a8c9 <ieee80211_disconnect+0x49>
    a9db:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
    a9e1:	31 db                	xor    %ebx,%ebx
    a9e3:	85 c0                	test   %eax,%eax
    a9e5:	75 2d                	jne    aa14 <ieee80211_disconnect+0x194>
    a9e7:	e9 dd fe ff ff       	jmp    a8c9 <ieee80211_disconnect+0x49>
    a9ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a9f0:	50                   	push   %eax
    a9f1:	50                   	push   %eax
    a9f2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    a9f5:	68 c7 ee 00 00       	push   $0xeec7
    a9fa:	50                   	push   %eax
    a9fb:	e8 d0 4b 00 00       	call   f5d0 <str_test_prefix@plt>
    aa00:	83 c4 10             	add    $0x10,%esp
    aa03:	84 c0                	test   %al,%al
    aa05:	75 5d                	jne    aa64 <ieee80211_disconnect+0x1e4>
    aa07:	43                   	inc    %ebx
    aa08:	39 9d 7c ff ff ff    	cmp    %ebx,-0x84(%ebp)
    aa0e:	0f 86 b5 fe ff ff    	jbe    a8c9 <ieee80211_disconnect+0x49>
    aa14:	50                   	push   %eax
    aa15:	50                   	push   %eax
    aa16:	8d 45 b8             	lea    -0x48(%ebp),%eax
    aa19:	8d 34 9d 00 00 00 00 	lea    0x0(,%ebx,4),%esi
    aa20:	50                   	push   %eax
    aa21:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
    aa27:	8b 04 30             	mov    (%eax,%esi,1),%eax
    aa2a:	50                   	push   %eax
    aa2b:	e8 70 49 00 00       	call   f3a0 <inetcfg_sroute_get@plt>
    aa30:	83 c4 10             	add    $0x10,%esp
    aa33:	85 c0                	test   %eax,%eax
    aa35:	74 b9                	je     a9f0 <ieee80211_disconnect+0x170>
    aa37:	89 c7                	mov    %eax,%edi
    aa39:	e9 8b fe ff ff       	jmp    a8c9 <ieee80211_disconnect+0x49>
    aa3e:	66 90                	xchg   %ax,%ax
    aa40:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
    aa46:	83 ec 0c             	sub    $0xc,%esp
    aa49:	8b 04 30             	mov    (%eax,%esi,1),%eax
    aa4c:	50                   	push   %eax
    aa4d:	e8 3e 4b 00 00       	call   f590 <inetcfg_addr_delete@plt>
    aa52:	83 c4 10             	add    $0x10,%esp
    aa55:	89 c7                	mov    %eax,%edi
    aa57:	85 c0                	test   %eax,%eax
    aa59:	0f 84 5a ff ff ff    	je     a9b9 <ieee80211_disconnect+0x139>
    aa5f:	e9 65 fe ff ff       	jmp    a8c9 <ieee80211_disconnect+0x49>
    aa64:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
    aa6a:	83 ec 0c             	sub    $0xc,%esp
    aa6d:	8b 0c 30             	mov    (%eax,%esi,1),%ecx
    aa70:	51                   	push   %ecx
    aa71:	e8 9a 4c 00 00       	call   f710 <inetcfg_sroute_delete@plt>
    aa76:	83 c4 10             	add    $0x10,%esp
    aa79:	89 c7                	mov    %eax,%edi
    aa7b:	e9 49 fe ff ff       	jmp    a8c9 <ieee80211_disconnect+0x49>

0000aa80 <remote_usb_unregister_endpoint>:
    aa80:	55                   	push   %ebp
    aa81:	89 e5                	mov    %esp,%ebp
    aa83:	53                   	push   %ebx
    aa84:	50                   	push   %eax
    aa85:	8b 45 0c             	mov    0xc(%ebp),%eax
    aa88:	8b 4d 08             	mov    0x8(%ebp),%ecx
    aa8b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    aa8e:	8b 55 14             	mov    0x14(%ebp),%edx
    aa91:	8b 40 1c             	mov    0x1c(%eax),%eax
    aa94:	85 c0                	test   %eax,%eax
    aa96:	74 20                	je     aab8 <remote_usb_unregister_endpoint+0x38>
    aa98:	83 ec 04             	sub    $0x4,%esp
    aa9b:	ff 72 0c             	pushl  0xc(%edx)
    aa9e:	0f bf 52 08          	movswl 0x8(%edx),%edx
    aaa2:	52                   	push   %edx
    aaa3:	51                   	push   %ecx
    aaa4:	ff d0                	call   *%eax
    aaa6:	89 5d 08             	mov    %ebx,0x8(%ebp)
    aaa9:	83 c4 10             	add    $0x10,%esp
    aaac:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    aaaf:	89 45 0c             	mov    %eax,0xc(%ebp)
    aab2:	c9                   	leave  
    aab3:	e9 48 4a 00 00       	jmp    f500 <async_answer_0@plt>
    aab8:	89 5d 08             	mov    %ebx,0x8(%ebp)
    aabb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    aabe:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    aac5:	c9                   	leave  
    aac6:	e9 35 4a 00 00       	jmp    f500 <async_answer_0@plt>
    aacb:	90                   	nop
    aacc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000aad0 <remote_usb_register_endpoint>:
    aad0:	55                   	push   %ebp
    aad1:	89 e5                	mov    %esp,%ebp
    aad3:	57                   	push   %edi
    aad4:	56                   	push   %esi
    aad5:	53                   	push   %ebx
    aad6:	83 ec 0c             	sub    $0xc,%esp
    aad9:	8b 45 0c             	mov    0xc(%ebp),%eax
    aadc:	8b 75 08             	mov    0x8(%ebp),%esi
    aadf:	8b 5d 10             	mov    0x10(%ebp),%ebx
    aae2:	8b 55 14             	mov    0x14(%ebp),%edx
    aae5:	8b 48 18             	mov    0x18(%eax),%ecx
    aae8:	85 c9                	test   %ecx,%ecx
    aaea:	74 44                	je     ab30 <remote_usb_register_endpoint+0x60>
    aaec:	8b 42 0c             	mov    0xc(%edx),%eax
    aaef:	57                   	push   %edi
    aaf0:	89 c7                	mov    %eax,%edi
    aaf2:	c1 ef 18             	shr    $0x18,%edi
    aaf5:	57                   	push   %edi
    aaf6:	89 c7                	mov    %eax,%edi
    aaf8:	c1 ef 10             	shr    $0x10,%edi
    aafb:	81 e7 ff 00 00 00    	and    $0xff,%edi
    ab01:	57                   	push   %edi
    ab02:	8b 7a 10             	mov    0x10(%edx),%edi
    ab05:	57                   	push   %edi
    ab06:	0f b6 fc             	movzbl %ah,%edi
    ab09:	25 ff 00 00 00       	and    $0xff,%eax
    ab0e:	57                   	push   %edi
    ab0f:	50                   	push   %eax
    ab10:	0f bf 42 08          	movswl 0x8(%edx),%eax
    ab14:	50                   	push   %eax
    ab15:	56                   	push   %esi
    ab16:	ff d1                	call   *%ecx
    ab18:	89 5d 08             	mov    %ebx,0x8(%ebp)
    ab1b:	89 45 0c             	mov    %eax,0xc(%ebp)
    ab1e:	83 c4 20             	add    $0x20,%esp
    ab21:	8d 65 f4             	lea    -0xc(%ebp),%esp
    ab24:	5b                   	pop    %ebx
    ab25:	5e                   	pop    %esi
    ab26:	5f                   	pop    %edi
    ab27:	5d                   	pop    %ebp
    ab28:	e9 d3 49 00 00       	jmp    f500 <async_answer_0@plt>
    ab2d:	8d 76 00             	lea    0x0(%esi),%esi
    ab30:	89 5d 08             	mov    %ebx,0x8(%ebp)
    ab33:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    ab3a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    ab3d:	5b                   	pop    %ebx
    ab3e:	5e                   	pop    %esi
    ab3f:	5f                   	pop    %edi
    ab40:	5d                   	pop    %ebp
    ab41:	e9 ba 49 00 00       	jmp    f500 <async_answer_0@plt>
    ab46:	8d 76 00             	lea    0x0(%esi),%esi
    ab49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000ab50 <remote_usb_device_remove>:
    ab50:	55                   	push   %ebp
    ab51:	89 e5                	mov    %esp,%ebp
    ab53:	53                   	push   %ebx
    ab54:	53                   	push   %ebx
    ab55:	8b 45 0c             	mov    0xc(%ebp),%eax
    ab58:	8b 55 08             	mov    0x8(%ebp),%edx
    ab5b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    ab5e:	8b 4d 14             	mov    0x14(%ebp),%ecx
    ab61:	8b 40 14             	mov    0x14(%eax),%eax
    ab64:	85 c0                	test   %eax,%eax
    ab66:	74 20                	je     ab88 <remote_usb_device_remove+0x38>
    ab68:	83 ec 08             	sub    $0x8,%esp
    ab6b:	8b 49 08             	mov    0x8(%ecx),%ecx
    ab6e:	51                   	push   %ecx
    ab6f:	52                   	push   %edx
    ab70:	ff d0                	call   *%eax
    ab72:	89 5d 08             	mov    %ebx,0x8(%ebp)
    ab75:	83 c4 10             	add    $0x10,%esp
    ab78:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    ab7b:	89 45 0c             	mov    %eax,0xc(%ebp)
    ab7e:	c9                   	leave  
    ab7f:	e9 7c 49 00 00       	jmp    f500 <async_answer_0@plt>
    ab84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ab88:	89 5d 08             	mov    %ebx,0x8(%ebp)
    ab8b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    ab8e:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    ab95:	c9                   	leave  
    ab96:	e9 65 49 00 00       	jmp    f500 <async_answer_0@plt>
    ab9b:	90                   	nop
    ab9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000aba0 <remote_usb_device_enumerate>:
    aba0:	55                   	push   %ebp
    aba1:	89 e5                	mov    %esp,%ebp
    aba3:	53                   	push   %ebx
    aba4:	53                   	push   %ebx
    aba5:	8b 45 0c             	mov    0xc(%ebp),%eax
    aba8:	8b 55 08             	mov    0x8(%ebp),%edx
    abab:	8b 5d 10             	mov    0x10(%ebp),%ebx
    abae:	8b 4d 14             	mov    0x14(%ebp),%ecx
    abb1:	8b 40 10             	mov    0x10(%eax),%eax
    abb4:	85 c0                	test   %eax,%eax
    abb6:	74 20                	je     abd8 <remote_usb_device_enumerate+0x38>
    abb8:	83 ec 08             	sub    $0x8,%esp
    abbb:	8b 49 08             	mov    0x8(%ecx),%ecx
    abbe:	51                   	push   %ecx
    abbf:	52                   	push   %edx
    abc0:	ff d0                	call   *%eax
    abc2:	89 5d 08             	mov    %ebx,0x8(%ebp)
    abc5:	83 c4 10             	add    $0x10,%esp
    abc8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    abcb:	89 45 0c             	mov    %eax,0xc(%ebp)
    abce:	c9                   	leave  
    abcf:	e9 2c 49 00 00       	jmp    f500 <async_answer_0@plt>
    abd4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    abd8:	89 5d 08             	mov    %ebx,0x8(%ebp)
    abdb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    abde:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    abe5:	c9                   	leave  
    abe6:	e9 15 49 00 00       	jmp    f500 <async_answer_0@plt>
    abeb:	90                   	nop
    abec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000abf0 <remote_usb_release_default_address>:
    abf0:	55                   	push   %ebp
    abf1:	89 e5                	mov    %esp,%ebp
    abf3:	53                   	push   %ebx
    abf4:	50                   	push   %eax
    abf5:	8b 45 0c             	mov    0xc(%ebp),%eax
    abf8:	8b 55 08             	mov    0x8(%ebp),%edx
    abfb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    abfe:	8b 40 0c             	mov    0xc(%eax),%eax
    ac01:	85 c0                	test   %eax,%eax
    ac03:	74 1b                	je     ac20 <remote_usb_release_default_address+0x30>
    ac05:	83 ec 0c             	sub    $0xc,%esp
    ac08:	52                   	push   %edx
    ac09:	ff d0                	call   *%eax
    ac0b:	89 5d 08             	mov    %ebx,0x8(%ebp)
    ac0e:	83 c4 10             	add    $0x10,%esp
    ac11:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    ac14:	89 45 0c             	mov    %eax,0xc(%ebp)
    ac17:	c9                   	leave  
    ac18:	e9 e3 48 00 00       	jmp    f500 <async_answer_0@plt>
    ac1d:	8d 76 00             	lea    0x0(%esi),%esi
    ac20:	89 5d 08             	mov    %ebx,0x8(%ebp)
    ac23:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    ac26:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    ac2d:	c9                   	leave  
    ac2e:	e9 cd 48 00 00       	jmp    f500 <async_answer_0@plt>
    ac33:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    ac39:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000ac40 <remote_usb_reserve_default_address>:
    ac40:	55                   	push   %ebp
    ac41:	89 e5                	mov    %esp,%ebp
    ac43:	53                   	push   %ebx
    ac44:	53                   	push   %ebx
    ac45:	8b 45 0c             	mov    0xc(%ebp),%eax
    ac48:	8b 55 08             	mov    0x8(%ebp),%edx
    ac4b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    ac4e:	8b 4d 14             	mov    0x14(%ebp),%ecx
    ac51:	8b 40 08             	mov    0x8(%eax),%eax
    ac54:	85 c0                	test   %eax,%eax
    ac56:	74 20                	je     ac78 <remote_usb_reserve_default_address+0x38>
    ac58:	83 ec 08             	sub    $0x8,%esp
    ac5b:	8b 49 08             	mov    0x8(%ecx),%ecx
    ac5e:	51                   	push   %ecx
    ac5f:	52                   	push   %edx
    ac60:	ff d0                	call   *%eax
    ac62:	89 5d 08             	mov    %ebx,0x8(%ebp)
    ac65:	83 c4 10             	add    $0x10,%esp
    ac68:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    ac6b:	89 45 0c             	mov    %eax,0xc(%ebp)
    ac6e:	c9                   	leave  
    ac6f:	e9 8c 48 00 00       	jmp    f500 <async_answer_0@plt>
    ac74:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ac78:	89 5d 08             	mov    %ebx,0x8(%ebp)
    ac7b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    ac7e:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    ac85:	c9                   	leave  
    ac86:	e9 75 48 00 00       	jmp    f500 <async_answer_0@plt>
    ac8b:	90                   	nop
    ac8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000ac90 <remote_usb_get_my_device_handle>:
    ac90:	55                   	push   %ebp
    ac91:	89 e5                	mov    %esp,%ebp
    ac93:	53                   	push   %ebx
    ac94:	83 ec 14             	sub    $0x14,%esp
    ac97:	8b 45 0c             	mov    0xc(%ebp),%eax
    ac9a:	8b 5d 10             	mov    0x10(%ebp),%ebx
    ac9d:	8b 40 04             	mov    0x4(%eax),%eax
    aca0:	85 c0                	test   %eax,%eax
    aca2:	74 3c                	je     ace0 <remote_usb_get_my_device_handle+0x50>
    aca4:	8b 4d 08             	mov    0x8(%ebp),%ecx
    aca7:	52                   	push   %edx
    aca8:	52                   	push   %edx
    aca9:	8d 55 f4             	lea    -0xc(%ebp),%edx
    acac:	52                   	push   %edx
    acad:	51                   	push   %ecx
    acae:	ff d0                	call   *%eax
    acb0:	83 c4 10             	add    $0x10,%esp
    acb3:	85 c0                	test   %eax,%eax
    acb5:	75 19                	jne    acd0 <remote_usb_get_my_device_handle+0x40>
    acb7:	8b 55 f4             	mov    -0xc(%ebp),%edx
    acba:	50                   	push   %eax
    acbb:	52                   	push   %edx
    acbc:	6a 00                	push   $0x0
    acbe:	53                   	push   %ebx
    acbf:	e8 9c 4a 00 00       	call   f760 <async_answer_1@plt>
    acc4:	83 c4 10             	add    $0x10,%esp
    acc7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    acca:	c9                   	leave  
    accb:	c3                   	ret    
    accc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    acd0:	51                   	push   %ecx
    acd1:	51                   	push   %ecx
    acd2:	50                   	push   %eax
    acd3:	53                   	push   %ebx
    acd4:	e8 27 48 00 00       	call   f500 <async_answer_0@plt>
    acd9:	83 c4 10             	add    $0x10,%esp
    acdc:	eb d9                	jmp    acb7 <remote_usb_get_my_device_handle+0x27>
    acde:	66 90                	xchg   %ax,%ax
    ace0:	50                   	push   %eax
    ace1:	50                   	push   %eax
    ace2:	6a f5                	push   $0xfffffff5
    ace4:	53                   	push   %ebx
    ace5:	e8 16 48 00 00       	call   f500 <async_answer_0@plt>
    acea:	83 c4 10             	add    $0x10,%esp
    aced:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    acf0:	c9                   	leave  
    acf1:	c3                   	ret    
    acf2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    acf9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000ad00 <remote_usb_get_my_interface>:
    ad00:	55                   	push   %ebp
    ad01:	89 e5                	mov    %esp,%ebp
    ad03:	83 ec 18             	sub    $0x18,%esp
    ad06:	8b 45 0c             	mov    0xc(%ebp),%eax
    ad09:	8b 00                	mov    (%eax),%eax
    ad0b:	85 c0                	test   %eax,%eax
    ad0d:	74 41                	je     ad50 <remote_usb_get_my_interface+0x50>
    ad0f:	8b 4d 08             	mov    0x8(%ebp),%ecx
    ad12:	52                   	push   %edx
    ad13:	52                   	push   %edx
    ad14:	8d 55 f4             	lea    -0xc(%ebp),%edx
    ad17:	52                   	push   %edx
    ad18:	51                   	push   %ecx
    ad19:	ff d0                	call   *%eax
    ad1b:	83 c4 10             	add    $0x10,%esp
    ad1e:	85 c0                	test   %eax,%eax
    ad20:	74 16                	je     ad38 <remote_usb_get_my_interface+0x38>
    ad22:	8b 4d 10             	mov    0x10(%ebp),%ecx
    ad25:	52                   	push   %edx
    ad26:	52                   	push   %edx
    ad27:	50                   	push   %eax
    ad28:	51                   	push   %ecx
    ad29:	e8 d2 47 00 00       	call   f500 <async_answer_0@plt>
    ad2e:	83 c4 10             	add    $0x10,%esp
    ad31:	c9                   	leave  
    ad32:	c3                   	ret    
    ad33:	90                   	nop
    ad34:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ad38:	8b 55 f4             	mov    -0xc(%ebp),%edx
    ad3b:	8b 4d 10             	mov    0x10(%ebp),%ecx
    ad3e:	50                   	push   %eax
    ad3f:	52                   	push   %edx
    ad40:	6a 00                	push   $0x0
    ad42:	51                   	push   %ecx
    ad43:	e8 18 4a 00 00       	call   f760 <async_answer_1@plt>
    ad48:	83 c4 10             	add    $0x10,%esp
    ad4b:	c9                   	leave  
    ad4c:	c3                   	ret    
    ad4d:	8d 76 00             	lea    0x0(%esi),%esi
    ad50:	50                   	push   %eax
    ad51:	50                   	push   %eax
    ad52:	8b 45 10             	mov    0x10(%ebp),%eax
    ad55:	6a f5                	push   $0xfffffff5
    ad57:	50                   	push   %eax
    ad58:	e8 a3 47 00 00       	call   f500 <async_answer_0@plt>
    ad5d:	83 c4 10             	add    $0x10,%esp
    ad60:	c9                   	leave  
    ad61:	c3                   	ret    
    ad62:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    ad69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000ad70 <callback_out>:
    ad70:	55                   	push   %ebp
    ad71:	89 e5                	mov    %esp,%ebp
    ad73:	53                   	push   %ebx
    ad74:	83 ec 0c             	sub    $0xc,%esp
    ad77:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    ad7a:	8b 45 08             	mov    0x8(%ebp),%eax
    ad7d:	50                   	push   %eax
    ad7e:	8b 13                	mov    (%ebx),%edx
    ad80:	52                   	push   %edx
    ad81:	e8 7a 47 00 00       	call   f500 <async_answer_0@plt>
    ad86:	8b 43 08             	mov    0x8(%ebx),%eax
    ad89:	83 c4 10             	add    $0x10,%esp
    ad8c:	85 c0                	test   %eax,%eax
    ad8e:	74 0c                	je     ad9c <callback_out+0x2c>
    ad90:	83 ec 0c             	sub    $0xc,%esp
    ad93:	50                   	push   %eax
    ad94:	e8 c7 4a 00 00       	call   f860 <free@plt>
    ad99:	83 c4 10             	add    $0x10,%esp
    ad9c:	89 5d 08             	mov    %ebx,0x8(%ebp)
    ad9f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    ada2:	c9                   	leave  
    ada3:	e9 b8 4a 00 00       	jmp    f860 <free@plt>
    ada8:	90                   	nop
    ada9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000adb0 <callback_in>:
    adb0:	55                   	push   %ebp
    adb1:	89 e5                	mov    %esp,%ebp
    adb3:	53                   	push   %ebx
    adb4:	53                   	push   %ebx
    adb5:	8b 45 08             	mov    0x8(%ebp),%eax
    adb8:	8b 55 0c             	mov    0xc(%ebp),%edx
    adbb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    adbe:	85 c0                	test   %eax,%eax
    adc0:	75 36                	jne    adf8 <callback_in+0x48>
    adc2:	8b 43 04             	mov    0x4(%ebx),%eax
    adc5:	85 c0                	test   %eax,%eax
    adc7:	75 4f                	jne    ae18 <callback_in+0x68>
    adc9:	50                   	push   %eax
    adca:	50                   	push   %eax
    adcb:	6a 00                	push   $0x0
    adcd:	8b 13                	mov    (%ebx),%edx
    adcf:	52                   	push   %edx
    add0:	e8 2b 47 00 00       	call   f500 <async_answer_0@plt>
    add5:	8b 43 08             	mov    0x8(%ebx),%eax
    add8:	83 c4 10             	add    $0x10,%esp
    addb:	85 c0                	test   %eax,%eax
    addd:	74 0c                	je     adeb <callback_in+0x3b>
    addf:	83 ec 0c             	sub    $0xc,%esp
    ade2:	50                   	push   %eax
    ade3:	e8 78 4a 00 00       	call   f860 <free@plt>
    ade8:	83 c4 10             	add    $0x10,%esp
    adeb:	89 5d 08             	mov    %ebx,0x8(%ebp)
    adee:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    adf1:	c9                   	leave  
    adf2:	e9 69 4a 00 00       	jmp    f860 <free@plt>
    adf7:	90                   	nop
    adf8:	52                   	push   %edx
    adf9:	52                   	push   %edx
    adfa:	50                   	push   %eax
    adfb:	8b 0b                	mov    (%ebx),%ecx
    adfd:	51                   	push   %ecx
    adfe:	e8 fd 46 00 00       	call   f500 <async_answer_0@plt>
    ae03:	8b 43 04             	mov    0x4(%ebx),%eax
    ae06:	83 c4 10             	add    $0x10,%esp
    ae09:	85 c0                	test   %eax,%eax
    ae0b:	75 23                	jne    ae30 <callback_in+0x80>
    ae0d:	8b 43 08             	mov    0x8(%ebx),%eax
    ae10:	85 c0                	test   %eax,%eax
    ae12:	75 cb                	jne    addf <callback_in+0x2f>
    ae14:	eb d5                	jmp    adeb <callback_in+0x3b>
    ae16:	66 90                	xchg   %ax,%ax
    ae18:	51                   	push   %ecx
    ae19:	52                   	push   %edx
    ae1a:	8b 53 08             	mov    0x8(%ebx),%edx
    ae1d:	52                   	push   %edx
    ae1e:	50                   	push   %eax
    ae1f:	e8 3c 46 00 00       	call   f460 <async_data_read_finalize@plt>
    ae24:	83 c4 10             	add    $0x10,%esp
    ae27:	eb a0                	jmp    adc9 <callback_in+0x19>
    ae29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    ae30:	51                   	push   %ecx
    ae31:	51                   	push   %ecx
    ae32:	6a ef                	push   $0xffffffef
    ae34:	50                   	push   %eax
    ae35:	e8 c6 46 00 00       	call   f500 <async_answer_0@plt>
    ae3a:	8b 43 08             	mov    0x8(%ebx),%eax
    ae3d:	83 c4 10             	add    $0x10,%esp
    ae40:	85 c0                	test   %eax,%eax
    ae42:	75 9b                	jne    addf <callback_in+0x2f>
    ae44:	eb a5                	jmp    adeb <callback_in+0x3b>
    ae46:	8d 76 00             	lea    0x0(%esi),%esi
    ae49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000ae50 <remote_usb_write>:
    ae50:	55                   	push   %ebp
    ae51:	89 e5                	mov    %esp,%ebp
    ae53:	57                   	push   %edi
    ae54:	56                   	push   %esi
    ae55:	53                   	push   %ebx
    ae56:	83 ec 2c             	sub    $0x2c,%esp
    ae59:	8b 55 08             	mov    0x8(%ebp),%edx
    ae5c:	8b 45 14             	mov    0x14(%ebp),%eax
    ae5f:	85 d2                	test   %edx,%edx
    ae61:	0f 84 53 01 00 00    	je     afba <remote_usb_write+0x16a>
    ae67:	8b 75 0c             	mov    0xc(%ebp),%esi
    ae6a:	85 f6                	test   %esi,%esi
    ae6c:	0f 84 33 01 00 00    	je     afa5 <remote_usb_write+0x155>
    ae72:	85 c0                	test   %eax,%eax
    ae74:	0f 84 16 01 00 00    	je     af90 <remote_usb_write+0x140>
    ae7a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    ae7d:	8b 51 24             	mov    0x24(%ecx),%edx
    ae80:	85 d2                	test   %edx,%edx
    ae82:	0f 84 d8 00 00 00    	je     af60 <remote_usb_write+0x110>
    ae88:	83 ec 0c             	sub    $0xc,%esp
    ae8b:	8b 50 14             	mov    0x14(%eax),%edx
    ae8e:	8b 70 08             	mov    0x8(%eax),%esi
    ae91:	8b 58 0c             	mov    0xc(%eax),%ebx
    ae94:	8b 40 10             	mov    0x10(%eax),%eax
    ae97:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    ae9a:	6a 0c                	push   $0xc
    ae9c:	89 45 d0             	mov    %eax,-0x30(%ebp)
    ae9f:	e8 1c 46 00 00       	call   f4c0 <malloc@plt>
    aea4:	83 c4 10             	add    $0x10,%esp
    aea7:	89 c7                	mov    %eax,%edi
    aea9:	85 c0                	test   %eax,%eax
    aeab:	0f 84 c7 00 00 00    	je     af78 <remote_usb_write+0x128>
    aeb1:	8b 45 10             	mov    0x10(%ebp),%eax
    aeb4:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
    aebb:	89 07                	mov    %eax,(%edi)
    aebd:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%edi)
    aec4:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    aecb:	85 db                	test   %ebx,%ebx
    aecd:	75 31                	jne    af00 <remote_usb_write+0xb0>
    aecf:	31 c0                	xor    %eax,%eax
    aed1:	31 c9                	xor    %ecx,%ecx
    aed3:	57                   	push   %edi
    aed4:	68 70 ad 00 00       	push   $0xad70
    aed9:	51                   	push   %ecx
    aeda:	50                   	push   %eax
    aedb:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    aede:	50                   	push   %eax
    aedf:	8b 45 d0             	mov    -0x30(%ebp),%eax
    aee2:	50                   	push   %eax
    aee3:	8b 45 08             	mov    0x8(%ebp),%eax
    aee6:	0f bf f6             	movswl %si,%esi
    aee9:	56                   	push   %esi
    aeea:	50                   	push   %eax
    aeeb:	8b 45 0c             	mov    0xc(%ebp),%eax
    aeee:	ff 50 24             	call   *0x24(%eax)
    aef1:	83 c4 20             	add    $0x20,%esp
    aef4:	85 c0                	test   %eax,%eax
    aef6:	75 30                	jne    af28 <remote_usb_write+0xd8>
    aef8:	8d 65 f4             	lea    -0xc(%ebp),%esp
    aefb:	5b                   	pop    %ebx
    aefc:	5e                   	pop    %esi
    aefd:	5f                   	pop    %edi
    aefe:	5d                   	pop    %ebp
    aeff:	c3                   	ret    
    af00:	50                   	push   %eax
    af01:	50                   	push   %eax
    af02:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    af05:	50                   	push   %eax
    af06:	8d 47 08             	lea    0x8(%edi),%eax
    af09:	6a 00                	push   $0x0
    af0b:	53                   	push   %ebx
    af0c:	6a 01                	push   $0x1
    af0e:	6a 00                	push   $0x0
    af10:	50                   	push   %eax
    af11:	e8 da 48 00 00       	call   f7f0 <async_data_write_accept@plt>
    af16:	83 c4 20             	add    $0x20,%esp
    af19:	85 c0                	test   %eax,%eax
    af1b:	75 0b                	jne    af28 <remote_usb_write+0xd8>
    af1d:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    af20:	8b 47 08             	mov    0x8(%edi),%eax
    af23:	eb ae                	jmp    aed3 <remote_usb_write+0x83>
    af25:	8d 76 00             	lea    0x0(%esi),%esi
    af28:	8b 5d 10             	mov    0x10(%ebp),%ebx
    af2b:	51                   	push   %ecx
    af2c:	51                   	push   %ecx
    af2d:	50                   	push   %eax
    af2e:	53                   	push   %ebx
    af2f:	e8 cc 45 00 00       	call   f500 <async_answer_0@plt>
    af34:	8b 47 08             	mov    0x8(%edi),%eax
    af37:	83 c4 10             	add    $0x10,%esp
    af3a:	85 c0                	test   %eax,%eax
    af3c:	74 0c                	je     af4a <remote_usb_write+0xfa>
    af3e:	83 ec 0c             	sub    $0xc,%esp
    af41:	50                   	push   %eax
    af42:	e8 19 49 00 00       	call   f860 <free@plt>
    af47:	83 c4 10             	add    $0x10,%esp
    af4a:	83 ec 0c             	sub    $0xc,%esp
    af4d:	57                   	push   %edi
    af4e:	e8 0d 49 00 00       	call   f860 <free@plt>
    af53:	83 c4 10             	add    $0x10,%esp
    af56:	8d 65 f4             	lea    -0xc(%ebp),%esp
    af59:	5b                   	pop    %ebx
    af5a:	5e                   	pop    %esi
    af5b:	5f                   	pop    %edi
    af5c:	5d                   	pop    %ebp
    af5d:	c3                   	ret    
    af5e:	66 90                	xchg   %ax,%ax
    af60:	50                   	push   %eax
    af61:	50                   	push   %eax
    af62:	8b 45 10             	mov    0x10(%ebp),%eax
    af65:	6a f5                	push   $0xfffffff5
    af67:	50                   	push   %eax
    af68:	e8 93 45 00 00       	call   f500 <async_answer_0@plt>
    af6d:	83 c4 10             	add    $0x10,%esp
    af70:	8d 65 f4             	lea    -0xc(%ebp),%esp
    af73:	5b                   	pop    %ebx
    af74:	5e                   	pop    %esi
    af75:	5f                   	pop    %edi
    af76:	5d                   	pop    %ebp
    af77:	c3                   	ret    
    af78:	8b 55 10             	mov    0x10(%ebp),%edx
    af7b:	50                   	push   %eax
    af7c:	50                   	push   %eax
    af7d:	6a fe                	push   $0xfffffffe
    af7f:	52                   	push   %edx
    af80:	e8 7b 45 00 00       	call   f500 <async_answer_0@plt>
    af85:	83 c4 10             	add    $0x10,%esp
    af88:	8d 65 f4             	lea    -0xc(%ebp),%esp
    af8b:	5b                   	pop    %ebx
    af8c:	5e                   	pop    %esi
    af8d:	5f                   	pop    %edi
    af8e:	5d                   	pop    %ebp
    af8f:	c3                   	ret    
    af90:	51                   	push   %ecx
    af91:	68 42 02 00 00       	push   $0x242
    af96:	68 04 ef 00 00       	push   $0xef04
    af9b:	68 23 ef 00 00       	push   $0xef23
    afa0:	e8 bb 45 00 00       	call   f560 <assert_abort@plt>
    afa5:	53                   	push   %ebx
    afa6:	68 41 02 00 00       	push   $0x241
    afab:	68 04 ef 00 00       	push   $0xef04
    afb0:	68 1d ef 00 00       	push   $0xef1d
    afb5:	e8 a6 45 00 00       	call   f560 <assert_abort@plt>
    afba:	57                   	push   %edi
    afbb:	68 40 02 00 00       	push   $0x240
    afc0:	68 04 ef 00 00       	push   $0xef04
    afc5:	68 19 ef 00 00       	push   $0xef19
    afca:	e8 91 45 00 00       	call   f560 <assert_abort@plt>
    afcf:	90                   	nop

0000afd0 <remote_usb_read>:
    afd0:	55                   	push   %ebp
    afd1:	89 e5                	mov    %esp,%ebp
    afd3:	57                   	push   %edi
    afd4:	56                   	push   %esi
    afd5:	53                   	push   %ebx
    afd6:	83 ec 2c             	sub    $0x2c,%esp
    afd9:	8b 7d 08             	mov    0x8(%ebp),%edi
    afdc:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    afdf:	8b 45 14             	mov    0x14(%ebp),%eax
    afe2:	85 ff                	test   %edi,%edi
    afe4:	0f 84 4c 01 00 00    	je     b136 <remote_usb_read+0x166>
    afea:	85 db                	test   %ebx,%ebx
    afec:	0f 84 6e 01 00 00    	je     b160 <remote_usb_read+0x190>
    aff2:	85 c0                	test   %eax,%eax
    aff4:	0f 84 51 01 00 00    	je     b14b <remote_usb_read+0x17b>
    affa:	8b 53 20             	mov    0x20(%ebx),%edx
    affd:	85 d2                	test   %edx,%edx
    afff:	0f 84 eb 00 00 00    	je     b0f0 <remote_usb_read+0x120>
    b005:	83 ec 0c             	sub    $0xc,%esp
    b008:	8b 50 10             	mov    0x10(%eax),%edx
    b00b:	8b 70 08             	mov    0x8(%eax),%esi
    b00e:	8b 40 0c             	mov    0xc(%eax),%eax
    b011:	89 45 d0             	mov    %eax,-0x30(%ebp)
    b014:	6a 0c                	push   $0xc
    b016:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    b019:	e8 a2 44 00 00       	call   f4c0 <malloc@plt>
    b01e:	83 c4 10             	add    $0x10,%esp
    b021:	89 c7                	mov    %eax,%edi
    b023:	85 c0                	test   %eax,%eax
    b025:	0f 84 dd 00 00 00    	je     b108 <remote_usb_read+0x138>
    b02b:	8b 45 10             	mov    0x10(%ebp),%eax
    b02e:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
    b035:	89 07                	mov    %eax,(%edi)
    b037:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%edi)
    b03e:	50                   	push   %eax
    b03f:	50                   	push   %eax
    b040:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    b043:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    b04a:	50                   	push   %eax
    b04b:	8d 47 04             	lea    0x4(%edi),%eax
    b04e:	50                   	push   %eax
    b04f:	e8 7c 46 00 00       	call   f6d0 <async_data_read_receive@plt>
    b054:	83 c4 10             	add    $0x10,%esp
    b057:	84 c0                	test   %al,%al
    b059:	75 3d                	jne    b098 <remote_usb_read+0xc8>
    b05b:	53                   	push   %ebx
    b05c:	53                   	push   %ebx
    b05d:	6a f8                	push   $0xfffffff8
    b05f:	8b 4d 10             	mov    0x10(%ebp),%ecx
    b062:	51                   	push   %ecx
    b063:	e8 98 44 00 00       	call   f500 <async_answer_0@plt>
    b068:	8b 47 08             	mov    0x8(%edi),%eax
    b06b:	83 c4 10             	add    $0x10,%esp
    b06e:	85 c0                	test   %eax,%eax
    b070:	74 0c                	je     b07e <remote_usb_read+0xae>
    b072:	83 ec 0c             	sub    $0xc,%esp
    b075:	50                   	push   %eax
    b076:	e8 e5 47 00 00       	call   f860 <free@plt>
    b07b:	83 c4 10             	add    $0x10,%esp
    b07e:	83 ec 0c             	sub    $0xc,%esp
    b081:	57                   	push   %edi
    b082:	e8 d9 47 00 00       	call   f860 <free@plt>
    b087:	83 c4 10             	add    $0x10,%esp
    b08a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    b08d:	5b                   	pop    %ebx
    b08e:	5e                   	pop    %esi
    b08f:	5f                   	pop    %edi
    b090:	5d                   	pop    %ebp
    b091:	c3                   	ret    
    b092:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b098:	83 ec 0c             	sub    $0xc,%esp
    b09b:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    b09e:	51                   	push   %ecx
    b09f:	e8 1c 44 00 00       	call   f4c0 <malloc@plt>
    b0a4:	83 c4 10             	add    $0x10,%esp
    b0a7:	89 47 08             	mov    %eax,0x8(%edi)
    b0aa:	85 c0                	test   %eax,%eax
    b0ac:	74 72                	je     b120 <remote_usb_read+0x150>
    b0ae:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    b0b1:	57                   	push   %edi
    b0b2:	68 b0 ad 00 00       	push   $0xadb0
    b0b7:	51                   	push   %ecx
    b0b8:	50                   	push   %eax
    b0b9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    b0bc:	50                   	push   %eax
    b0bd:	8b 45 d0             	mov    -0x30(%ebp),%eax
    b0c0:	50                   	push   %eax
    b0c1:	8b 45 08             	mov    0x8(%ebp),%eax
    b0c4:	0f bf f6             	movswl %si,%esi
    b0c7:	56                   	push   %esi
    b0c8:	50                   	push   %eax
    b0c9:	ff 53 20             	call   *0x20(%ebx)
    b0cc:	83 c4 20             	add    $0x20,%esp
    b0cf:	89 c3                	mov    %eax,%ebx
    b0d1:	85 c0                	test   %eax,%eax
    b0d3:	74 b5                	je     b08a <remote_usb_read+0xba>
    b0d5:	56                   	push   %esi
    b0d6:	56                   	push   %esi
    b0d7:	50                   	push   %eax
    b0d8:	8b 47 04             	mov    0x4(%edi),%eax
    b0db:	50                   	push   %eax
    b0dc:	e8 1f 44 00 00       	call   f500 <async_answer_0@plt>
    b0e1:	58                   	pop    %eax
    b0e2:	5a                   	pop    %edx
    b0e3:	53                   	push   %ebx
    b0e4:	e9 76 ff ff ff       	jmp    b05f <remote_usb_read+0x8f>
    b0e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b0f0:	50                   	push   %eax
    b0f1:	50                   	push   %eax
    b0f2:	8b 45 10             	mov    0x10(%ebp),%eax
    b0f5:	6a f5                	push   $0xfffffff5
    b0f7:	50                   	push   %eax
    b0f8:	e8 03 44 00 00       	call   f500 <async_answer_0@plt>
    b0fd:	83 c4 10             	add    $0x10,%esp
    b100:	8d 65 f4             	lea    -0xc(%ebp),%esp
    b103:	5b                   	pop    %ebx
    b104:	5e                   	pop    %esi
    b105:	5f                   	pop    %edi
    b106:	5d                   	pop    %ebp
    b107:	c3                   	ret    
    b108:	8b 55 10             	mov    0x10(%ebp),%edx
    b10b:	50                   	push   %eax
    b10c:	50                   	push   %eax
    b10d:	6a fe                	push   $0xfffffffe
    b10f:	52                   	push   %edx
    b110:	e8 eb 43 00 00       	call   f500 <async_answer_0@plt>
    b115:	83 c4 10             	add    $0x10,%esp
    b118:	8d 65 f4             	lea    -0xc(%ebp),%esp
    b11b:	5b                   	pop    %ebx
    b11c:	5e                   	pop    %esi
    b11d:	5f                   	pop    %edi
    b11e:	5d                   	pop    %ebp
    b11f:	c3                   	ret    
    b120:	50                   	push   %eax
    b121:	50                   	push   %eax
    b122:	6a fe                	push   $0xfffffffe
    b124:	8b 47 04             	mov    0x4(%edi),%eax
    b127:	50                   	push   %eax
    b128:	e8 d3 43 00 00       	call   f500 <async_answer_0@plt>
    b12d:	58                   	pop    %eax
    b12e:	5a                   	pop    %edx
    b12f:	6a fe                	push   $0xfffffffe
    b131:	e9 29 ff ff ff       	jmp    b05f <remote_usb_read+0x8f>
    b136:	56                   	push   %esi
    b137:	68 0e 02 00 00       	push   $0x20e
    b13c:	68 04 ef 00 00       	push   $0xef04
    b141:	68 19 ef 00 00       	push   $0xef19
    b146:	e8 15 44 00 00       	call   f560 <assert_abort@plt>
    b14b:	51                   	push   %ecx
    b14c:	68 10 02 00 00       	push   $0x210
    b151:	68 04 ef 00 00       	push   $0xef04
    b156:	68 23 ef 00 00       	push   $0xef23
    b15b:	e8 00 44 00 00       	call   f560 <assert_abort@plt>
    b160:	53                   	push   %ebx
    b161:	68 0f 02 00 00       	push   $0x20f
    b166:	68 04 ef 00 00       	push   $0xef04
    b16b:	68 1d ef 00 00       	push   $0xef1d
    b170:	e8 eb 43 00 00       	call   f560 <assert_abort@plt>
    b175:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b179:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b180 <usb_dev_connect>:
    b180:	55                   	push   %ebp
    b181:	89 e5                	mov    %esp,%ebp
    b183:	83 ec 10             	sub    $0x10,%esp
    b186:	8b 45 08             	mov    0x8(%ebp),%eax
    b189:	6a 01                	push   $0x1
    b18b:	50                   	push   %eax
    b18c:	e8 df 41 00 00       	call   f370 <devman_device_connect@plt>
    b191:	c9                   	leave  
    b192:	c3                   	ret    
    b193:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b199:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b1a0 <usb_dev_connect_to_self>:
    b1a0:	55                   	push   %ebp
    b1a1:	89 e5                	mov    %esp,%ebp
    b1a3:	83 ec 14             	sub    $0x14,%esp
    b1a6:	8b 45 08             	mov    0x8(%ebp),%eax
    b1a9:	50                   	push   %eax
    b1aa:	e8 a1 97 ff ff       	call   4950 <ddf_dev_get_handle>
    b1af:	5a                   	pop    %edx
    b1b0:	59                   	pop    %ecx
    b1b1:	6a 01                	push   $0x1
    b1b3:	50                   	push   %eax
    b1b4:	e8 37 42 00 00       	call   f3f0 <devman_parent_device_connect@plt>
    b1b9:	c9                   	leave  
    b1ba:	c3                   	ret    
    b1bb:	90                   	nop
    b1bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000b1c0 <usb_dev_disconnect>:
    b1c0:	55                   	push   %ebp
    b1c1:	89 e5                	mov    %esp,%ebp
    b1c3:	8b 45 08             	mov    0x8(%ebp),%eax
    b1c6:	85 c0                	test   %eax,%eax
    b1c8:	74 06                	je     b1d0 <usb_dev_disconnect+0x10>
    b1ca:	5d                   	pop    %ebp
    b1cb:	e9 f0 41 00 00       	jmp    f3c0 <async_hangup@plt>
    b1d0:	5d                   	pop    %ebp
    b1d1:	c3                   	ret    
    b1d2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b1d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b1e0 <usb_get_my_interface>:
    b1e0:	55                   	push   %ebp
    b1e1:	89 e5                	mov    %esp,%ebp
    b1e3:	53                   	push   %ebx
    b1e4:	83 ec 14             	sub    $0x14,%esp
    b1e7:	8b 45 08             	mov    0x8(%ebp),%eax
    b1ea:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    b1ed:	85 c0                	test   %eax,%eax
    b1ef:	74 37                	je     b228 <usb_get_my_interface+0x48>
    b1f1:	52                   	push   %edx
    b1f2:	8d 55 f4             	lea    -0xc(%ebp),%edx
    b1f5:	6a 00                	push   $0x0
    b1f7:	6a 00                	push   $0x0
    b1f9:	6a 00                	push   $0x0
    b1fb:	6a 00                	push   $0x0
    b1fd:	52                   	push   %edx
    b1fe:	6a 00                	push   $0x0
    b200:	6a 00                	push   $0x0
    b202:	6a 00                	push   $0x0
    b204:	6a 00                	push   $0x0
    b206:	68 08 04 00 00       	push   $0x408
    b20b:	50                   	push   %eax
    b20c:	e8 df 42 00 00       	call   f4f0 <async_req_fast@plt>
    b211:	83 c4 30             	add    $0x30,%esp
    b214:	85 c0                	test   %eax,%eax
    b216:	75 09                	jne    b221 <usb_get_my_interface+0x41>
    b218:	85 db                	test   %ebx,%ebx
    b21a:	74 05                	je     b221 <usb_get_my_interface+0x41>
    b21c:	8b 55 f4             	mov    -0xc(%ebp),%edx
    b21f:	89 13                	mov    %edx,(%ebx)
    b221:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    b224:	c9                   	leave  
    b225:	c3                   	ret    
    b226:	66 90                	xchg   %ax,%ax
    b228:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b22d:	eb f2                	jmp    b221 <usb_get_my_interface+0x41>
    b22f:	90                   	nop

0000b230 <usb_get_my_device_handle>:
    b230:	55                   	push   %ebp
    b231:	89 e5                	mov    %esp,%ebp
    b233:	53                   	push   %ebx
    b234:	83 ec 18             	sub    $0x18,%esp
    b237:	8d 45 f4             	lea    -0xc(%ebp),%eax
    b23a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    b23d:	6a 00                	push   $0x0
    b23f:	6a 00                	push   $0x0
    b241:	6a 00                	push   $0x0
    b243:	6a 00                	push   $0x0
    b245:	50                   	push   %eax
    b246:	8b 45 08             	mov    0x8(%ebp),%eax
    b249:	6a 00                	push   $0x0
    b24b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    b252:	6a 00                	push   $0x0
    b254:	6a 00                	push   $0x0
    b256:	6a 01                	push   $0x1
    b258:	68 08 04 00 00       	push   $0x408
    b25d:	50                   	push   %eax
    b25e:	e8 8d 42 00 00       	call   f4f0 <async_req_fast@plt>
    b263:	83 c4 30             	add    $0x30,%esp
    b266:	85 c0                	test   %eax,%eax
    b268:	75 09                	jne    b273 <usb_get_my_device_handle+0x43>
    b26a:	85 db                	test   %ebx,%ebx
    b26c:	74 05                	je     b273 <usb_get_my_device_handle+0x43>
    b26e:	8b 55 f4             	mov    -0xc(%ebp),%edx
    b271:	89 13                	mov    %edx,(%ebx)
    b273:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    b276:	c9                   	leave  
    b277:	c3                   	ret    
    b278:	90                   	nop
    b279:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000b280 <usb_reserve_default_address>:
    b280:	55                   	push   %ebp
    b281:	89 e5                	mov    %esp,%ebp
    b283:	83 ec 08             	sub    $0x8,%esp
    b286:	8b 45 08             	mov    0x8(%ebp),%eax
    b289:	85 c0                	test   %eax,%eax
    b28b:	74 2b                	je     b2b8 <usb_reserve_default_address+0x38>
    b28d:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    b290:	52                   	push   %edx
    b291:	6a 00                	push   $0x0
    b293:	6a 00                	push   $0x0
    b295:	6a 00                	push   $0x0
    b297:	6a 00                	push   $0x0
    b299:	6a 00                	push   $0x0
    b29b:	6a 00                	push   $0x0
    b29d:	6a 00                	push   $0x0
    b29f:	51                   	push   %ecx
    b2a0:	6a 02                	push   $0x2
    b2a2:	68 08 04 00 00       	push   $0x408
    b2a7:	50                   	push   %eax
    b2a8:	e8 43 42 00 00       	call   f4f0 <async_req_fast@plt>
    b2ad:	83 c4 30             	add    $0x30,%esp
    b2b0:	c9                   	leave  
    b2b1:	c3                   	ret    
    b2b2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b2b8:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b2bd:	c9                   	leave  
    b2be:	c3                   	ret    
    b2bf:	90                   	nop

0000b2c0 <usb_release_default_address>:
    b2c0:	55                   	push   %ebp
    b2c1:	89 e5                	mov    %esp,%ebp
    b2c3:	83 ec 08             	sub    $0x8,%esp
    b2c6:	8b 45 08             	mov    0x8(%ebp),%eax
    b2c9:	85 c0                	test   %eax,%eax
    b2cb:	74 23                	je     b2f0 <usb_release_default_address+0x30>
    b2cd:	52                   	push   %edx
    b2ce:	6a 00                	push   $0x0
    b2d0:	6a 00                	push   $0x0
    b2d2:	6a 00                	push   $0x0
    b2d4:	6a 00                	push   $0x0
    b2d6:	6a 00                	push   $0x0
    b2d8:	6a 00                	push   $0x0
    b2da:	6a 00                	push   $0x0
    b2dc:	6a 00                	push   $0x0
    b2de:	6a 03                	push   $0x3
    b2e0:	68 08 04 00 00       	push   $0x408
    b2e5:	50                   	push   %eax
    b2e6:	e8 05 42 00 00       	call   f4f0 <async_req_fast@plt>
    b2eb:	83 c4 30             	add    $0x30,%esp
    b2ee:	c9                   	leave  
    b2ef:	c3                   	ret    
    b2f0:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b2f5:	c9                   	leave  
    b2f6:	c3                   	ret    
    b2f7:	89 f6                	mov    %esi,%esi
    b2f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b300 <usb_device_enumerate>:
    b300:	55                   	push   %ebp
    b301:	89 e5                	mov    %esp,%ebp
    b303:	83 ec 08             	sub    $0x8,%esp
    b306:	8b 45 08             	mov    0x8(%ebp),%eax
    b309:	85 c0                	test   %eax,%eax
    b30b:	74 2b                	je     b338 <usb_device_enumerate+0x38>
    b30d:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    b310:	52                   	push   %edx
    b311:	6a 00                	push   $0x0
    b313:	6a 00                	push   $0x0
    b315:	6a 00                	push   $0x0
    b317:	6a 00                	push   $0x0
    b319:	6a 00                	push   $0x0
    b31b:	6a 00                	push   $0x0
    b31d:	6a 00                	push   $0x0
    b31f:	51                   	push   %ecx
    b320:	6a 04                	push   $0x4
    b322:	68 08 04 00 00       	push   $0x408
    b327:	50                   	push   %eax
    b328:	e8 c3 41 00 00       	call   f4f0 <async_req_fast@plt>
    b32d:	83 c4 30             	add    $0x30,%esp
    b330:	c9                   	leave  
    b331:	c3                   	ret    
    b332:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b338:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b33d:	c9                   	leave  
    b33e:	c3                   	ret    
    b33f:	90                   	nop

0000b340 <usb_device_remove>:
    b340:	55                   	push   %ebp
    b341:	89 e5                	mov    %esp,%ebp
    b343:	83 ec 08             	sub    $0x8,%esp
    b346:	8b 45 08             	mov    0x8(%ebp),%eax
    b349:	85 c0                	test   %eax,%eax
    b34b:	74 2b                	je     b378 <usb_device_remove+0x38>
    b34d:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    b350:	52                   	push   %edx
    b351:	6a 00                	push   $0x0
    b353:	6a 00                	push   $0x0
    b355:	6a 00                	push   $0x0
    b357:	6a 00                	push   $0x0
    b359:	6a 00                	push   $0x0
    b35b:	6a 00                	push   $0x0
    b35d:	6a 00                	push   $0x0
    b35f:	51                   	push   %ecx
    b360:	6a 05                	push   $0x5
    b362:	68 08 04 00 00       	push   $0x408
    b367:	50                   	push   %eax
    b368:	e8 83 41 00 00       	call   f4f0 <async_req_fast@plt>
    b36d:	83 c4 30             	add    $0x30,%esp
    b370:	c9                   	leave  
    b371:	c3                   	ret    
    b372:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b378:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b37d:	c9                   	leave  
    b37e:	c3                   	ret    
    b37f:	90                   	nop

0000b380 <usb_register_endpoint>:
    b380:	55                   	push   %ebp
    b381:	89 e5                	mov    %esp,%ebp
    b383:	56                   	push   %esi
    b384:	53                   	push   %ebx
    b385:	8b 4d 08             	mov    0x8(%ebp),%ecx
    b388:	8b 55 0c             	mov    0xc(%ebp),%edx
    b38b:	85 c9                	test   %ecx,%ecx
    b38d:	74 51                	je     b3e0 <usb_register_endpoint+0x60>
    b38f:	0f b6 75 20          	movzbl 0x20(%ebp),%esi
    b393:	31 c0                	xor    %eax,%eax
    b395:	81 e6 ff 00 00 00    	and    $0xff,%esi
    b39b:	8a 45 10             	mov    0x10(%ebp),%al
    b39e:	8b 5d 1c             	mov    0x1c(%ebp),%ebx
    b3a1:	c1 e6 10             	shl    $0x10,%esi
    b3a4:	8a 65 14             	mov    0x14(%ebp),%ah
    b3a7:	c1 e3 18             	shl    $0x18,%ebx
    b3aa:	25 ff ff 00 00       	and    $0xffff,%eax
    b3af:	09 f0                	or     %esi,%eax
    b3b1:	8b 75 18             	mov    0x18(%ebp),%esi
    b3b4:	09 d8                	or     %ebx,%eax
    b3b6:	53                   	push   %ebx
    b3b7:	0f bf d2             	movswl %dx,%edx
    b3ba:	6a 00                	push   $0x0
    b3bc:	6a 00                	push   $0x0
    b3be:	6a 00                	push   $0x0
    b3c0:	6a 00                	push   $0x0
    b3c2:	6a 00                	push   $0x0
    b3c4:	56                   	push   %esi
    b3c5:	50                   	push   %eax
    b3c6:	52                   	push   %edx
    b3c7:	6a 06                	push   $0x6
    b3c9:	68 08 04 00 00       	push   $0x408
    b3ce:	51                   	push   %ecx
    b3cf:	e8 1c 41 00 00       	call   f4f0 <async_req_fast@plt>
    b3d4:	83 c4 30             	add    $0x30,%esp
    b3d7:	8d 65 f8             	lea    -0x8(%ebp),%esp
    b3da:	5b                   	pop    %ebx
    b3db:	5e                   	pop    %esi
    b3dc:	5d                   	pop    %ebp
    b3dd:	c3                   	ret    
    b3de:	66 90                	xchg   %ax,%ax
    b3e0:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b3e5:	eb f0                	jmp    b3d7 <usb_register_endpoint+0x57>
    b3e7:	89 f6                	mov    %esi,%esi
    b3e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b3f0 <usb_unregister_endpoint>:
    b3f0:	55                   	push   %ebp
    b3f1:	89 e5                	mov    %esp,%ebp
    b3f3:	83 ec 08             	sub    $0x8,%esp
    b3f6:	8b 55 08             	mov    0x8(%ebp),%edx
    b3f9:	8b 45 0c             	mov    0xc(%ebp),%eax
    b3fc:	85 d2                	test   %edx,%edx
    b3fe:	74 28                	je     b428 <usb_unregister_endpoint+0x38>
    b400:	98                   	cwtl   
    b401:	51                   	push   %ecx
    b402:	8b 4d 10             	mov    0x10(%ebp),%ecx
    b405:	6a 00                	push   $0x0
    b407:	6a 00                	push   $0x0
    b409:	6a 00                	push   $0x0
    b40b:	6a 00                	push   $0x0
    b40d:	6a 00                	push   $0x0
    b40f:	6a 00                	push   $0x0
    b411:	51                   	push   %ecx
    b412:	50                   	push   %eax
    b413:	6a 07                	push   $0x7
    b415:	68 08 04 00 00       	push   $0x408
    b41a:	52                   	push   %edx
    b41b:	e8 d0 40 00 00       	call   f4f0 <async_req_fast@plt>
    b420:	83 c4 30             	add    $0x30,%esp
    b423:	c9                   	leave  
    b424:	c3                   	ret    
    b425:	8d 76 00             	lea    0x0(%esi),%esi
    b428:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b42d:	c9                   	leave  
    b42e:	c3                   	ret    
    b42f:	90                   	nop

0000b430 <usb_read>:
    b430:	55                   	push   %ebp
    b431:	89 e5                	mov    %esp,%ebp
    b433:	57                   	push   %edi
    b434:	56                   	push   %esi
    b435:	53                   	push   %ebx
    b436:	83 ec 4c             	sub    $0x4c,%esp
    b439:	8b 5d 08             	mov    0x8(%ebp),%ebx
    b43c:	8b 45 1c             	mov    0x1c(%ebp),%eax
    b43f:	8b 7d 0c             	mov    0xc(%ebp),%edi
    b442:	8b 55 10             	mov    0x10(%ebp),%edx
    b445:	8b 4d 14             	mov    0x14(%ebp),%ecx
    b448:	89 45 b4             	mov    %eax,-0x4c(%ebp)
    b44b:	85 db                	test   %ebx,%ebx
    b44d:	0f 84 c3 00 00 00    	je     b516 <usb_read+0xe6>
    b453:	85 c0                	test   %eax,%eax
    b455:	75 11                	jne    b468 <usb_read+0x38>
    b457:	89 d6                	mov    %edx,%esi
    b459:	09 ce                	or     %ecx,%esi
    b45b:	75 0b                	jne    b468 <usb_read+0x38>
    b45d:	8d 65 f4             	lea    -0xc(%ebp),%esp
    b460:	5b                   	pop    %ebx
    b461:	5e                   	pop    %esi
    b462:	5f                   	pop    %edi
    b463:	5d                   	pop    %ebp
    b464:	c3                   	ret    
    b465:	8d 76 00             	lea    0x0(%esi),%esi
    b468:	0f bf ff             	movswl %di,%edi
    b46b:	50                   	push   %eax
    b46c:	6a 00                	push   $0x0
    b46e:	51                   	push   %ecx
    b46f:	52                   	push   %edx
    b470:	57                   	push   %edi
    b471:	6a 08                	push   $0x8
    b473:	68 08 04 00 00       	push   $0x408
    b478:	53                   	push   %ebx
    b479:	e8 92 40 00 00       	call   f510 <async_send_fast@plt>
    b47e:	83 c4 20             	add    $0x20,%esp
    b481:	89 c7                	mov    %eax,%edi
    b483:	85 c0                	test   %eax,%eax
    b485:	74 69                	je     b4f0 <usb_read+0xc0>
    b487:	8d 45 c4             	lea    -0x3c(%ebp),%eax
    b48a:	8b 75 b4             	mov    -0x4c(%ebp),%esi
    b48d:	50                   	push   %eax
    b48e:	8b 45 18             	mov    0x18(%ebp),%eax
    b491:	56                   	push   %esi
    b492:	50                   	push   %eax
    b493:	53                   	push   %ebx
    b494:	e8 87 40 00 00       	call   f520 <async_data_read@plt>
    b499:	83 c4 10             	add    $0x10,%esp
    b49c:	85 c0                	test   %eax,%eax
    b49e:	74 60                	je     b500 <usb_read+0xd0>
    b4a0:	52                   	push   %edx
    b4a1:	52                   	push   %edx
    b4a2:	8d 55 bc             	lea    -0x44(%ebp),%edx
    b4a5:	52                   	push   %edx
    b4a6:	50                   	push   %eax
    b4a7:	e8 24 3f 00 00       	call   f3d0 <async_wait_for@plt>
    b4ac:	8d 45 c0             	lea    -0x40(%ebp),%eax
    b4af:	59                   	pop    %ecx
    b4b0:	5b                   	pop    %ebx
    b4b1:	50                   	push   %eax
    b4b2:	57                   	push   %edi
    b4b3:	e8 18 3f 00 00       	call   f3d0 <async_wait_for@plt>
    b4b8:	8b 45 bc             	mov    -0x44(%ebp),%eax
    b4bb:	83 c4 10             	add    $0x10,%esp
    b4be:	85 c0                	test   %eax,%eax
    b4c0:	74 0e                	je     b4d0 <usb_read+0xa0>
    b4c2:	8b 55 c0             	mov    -0x40(%ebp),%edx
    b4c5:	85 d2                	test   %edx,%edx
    b4c7:	74 94                	je     b45d <usb_read+0x2d>
    b4c9:	89 d0                	mov    %edx,%eax
    b4cb:	eb 90                	jmp    b45d <usb_read+0x2d>
    b4cd:	8d 76 00             	lea    0x0(%esi),%esi
    b4d0:	8b 45 c0             	mov    -0x40(%ebp),%eax
    b4d3:	85 c0                	test   %eax,%eax
    b4d5:	75 86                	jne    b45d <usb_read+0x2d>
    b4d7:	8b 45 20             	mov    0x20(%ebp),%eax
    b4da:	8b 55 cc             	mov    -0x34(%ebp),%edx
    b4dd:	89 10                	mov    %edx,(%eax)
    b4df:	8d 65 f4             	lea    -0xc(%ebp),%esp
    b4e2:	31 c0                	xor    %eax,%eax
    b4e4:	5b                   	pop    %ebx
    b4e5:	5e                   	pop    %esi
    b4e6:	5f                   	pop    %edi
    b4e7:	5d                   	pop    %ebp
    b4e8:	c3                   	ret    
    b4e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b4f0:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    b4f5:	e9 63 ff ff ff       	jmp    b45d <usb_read+0x2d>
    b4fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b500:	83 ec 0c             	sub    $0xc,%esp
    b503:	57                   	push   %edi
    b504:	e8 f7 42 00 00       	call   f800 <async_forget@plt>
    b509:	83 c4 10             	add    $0x10,%esp
    b50c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    b511:	e9 47 ff ff ff       	jmp    b45d <usb_read+0x2d>
    b516:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b51b:	e9 3d ff ff ff       	jmp    b45d <usb_read+0x2d>

0000b520 <usb_write>:
    b520:	55                   	push   %ebp
    b521:	89 e5                	mov    %esp,%ebp
    b523:	57                   	push   %edi
    b524:	56                   	push   %esi
    b525:	53                   	push   %ebx
    b526:	83 ec 2c             	sub    $0x2c,%esp
    b529:	8b 75 08             	mov    0x8(%ebp),%esi
    b52c:	8b 45 0c             	mov    0xc(%ebp),%eax
    b52f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    b532:	8b 55 10             	mov    0x10(%ebp),%edx
    b535:	8b 4d 14             	mov    0x14(%ebp),%ecx
    b538:	8b 5d 1c             	mov    0x1c(%ebp),%ebx
    b53b:	85 f6                	test   %esi,%esi
    b53d:	0f 84 8f 00 00 00    	je     b5d2 <usb_write+0xb2>
    b543:	85 db                	test   %ebx,%ebx
    b545:	75 11                	jne    b558 <usb_write+0x38>
    b547:	89 d7                	mov    %edx,%edi
    b549:	31 c0                	xor    %eax,%eax
    b54b:	09 cf                	or     %ecx,%edi
    b54d:	75 09                	jne    b558 <usb_write+0x38>
    b54f:	8d 65 f4             	lea    -0xc(%ebp),%esp
    b552:	5b                   	pop    %ebx
    b553:	5e                   	pop    %esi
    b554:	5f                   	pop    %edi
    b555:	5d                   	pop    %ebp
    b556:	c3                   	ret    
    b557:	90                   	nop
    b558:	0f bf 7d d4          	movswl -0x2c(%ebp),%edi
    b55c:	6a 00                	push   $0x0
    b55e:	51                   	push   %ecx
    b55f:	52                   	push   %edx
    b560:	53                   	push   %ebx
    b561:	57                   	push   %edi
    b562:	6a 09                	push   $0x9
    b564:	68 08 04 00 00       	push   $0x408
    b569:	56                   	push   %esi
    b56a:	e8 e1 40 00 00       	call   f650 <async_send_slow@plt>
    b56f:	83 c4 20             	add    $0x20,%esp
    b572:	89 c7                	mov    %eax,%edi
    b574:	85 c0                	test   %eax,%eax
    b576:	74 50                	je     b5c8 <usb_write+0xa8>
    b578:	85 db                	test   %ebx,%ebx
    b57a:	74 13                	je     b58f <usb_write+0x6f>
    b57c:	8b 4d 18             	mov    0x18(%ebp),%ecx
    b57f:	52                   	push   %edx
    b580:	53                   	push   %ebx
    b581:	51                   	push   %ecx
    b582:	56                   	push   %esi
    b583:	e8 98 3e 00 00       	call   f420 <async_data_write_start@plt>
    b588:	83 c4 10             	add    $0x10,%esp
    b58b:	85 c0                	test   %eax,%eax
    b58d:	75 21                	jne    b5b0 <usb_write+0x90>
    b58f:	50                   	push   %eax
    b590:	50                   	push   %eax
    b591:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    b594:	50                   	push   %eax
    b595:	57                   	push   %edi
    b596:	e8 35 3e 00 00       	call   f3d0 <async_wait_for@plt>
    b59b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    b59e:	83 c4 10             	add    $0x10,%esp
    b5a1:	8d 65 f4             	lea    -0xc(%ebp),%esp
    b5a4:	5b                   	pop    %ebx
    b5a5:	5e                   	pop    %esi
    b5a6:	5f                   	pop    %edi
    b5a7:	5d                   	pop    %ebp
    b5a8:	c3                   	ret    
    b5a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b5b0:	83 ec 0c             	sub    $0xc,%esp
    b5b3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    b5b6:	57                   	push   %edi
    b5b7:	e8 44 42 00 00       	call   f800 <async_forget@plt>
    b5bc:	83 c4 10             	add    $0x10,%esp
    b5bf:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    b5c2:	eb 8b                	jmp    b54f <usb_write+0x2f>
    b5c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b5c8:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    b5cd:	e9 7d ff ff ff       	jmp    b54f <usb_write+0x2f>
    b5d2:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    b5d7:	e9 73 ff ff ff       	jmp    b54f <usb_write+0x2f>
    b5dc:	66 90                	xchg   %ax,%ax
    b5de:	66 90                	xchg   %ax,%ax

0000b5e0 <remote_config_space_write_32>:
    b5e0:	55                   	push   %ebp
    b5e1:	89 e5                	mov    %esp,%ebp
    b5e3:	53                   	push   %ebx
    b5e4:	53                   	push   %ebx
    b5e5:	8b 45 0c             	mov    0xc(%ebp),%eax
    b5e8:	8b 4d 08             	mov    0x8(%ebp),%ecx
    b5eb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    b5ee:	8b 55 14             	mov    0x14(%ebp),%edx
    b5f1:	85 c0                	test   %eax,%eax
    b5f3:	74 56                	je     b64b <remote_config_space_write_32+0x6b>
    b5f5:	8b 40 14             	mov    0x14(%eax),%eax
    b5f8:	85 c0                	test   %eax,%eax
    b5fa:	74 3c                	je     b638 <remote_config_space_write_32+0x58>
    b5fc:	83 ec 04             	sub    $0x4,%esp
    b5ff:	ff 72 0c             	pushl  0xc(%edx)
    b602:	8b 52 08             	mov    0x8(%edx),%edx
    b605:	52                   	push   %edx
    b606:	51                   	push   %ecx
    b607:	ff d0                	call   *%eax
    b609:	83 c4 10             	add    $0x10,%esp
    b60c:	85 c0                	test   %eax,%eax
    b60e:	75 18                	jne    b628 <remote_config_space_write_32+0x48>
    b610:	89 5d 08             	mov    %ebx,0x8(%ebp)
    b613:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    b616:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
    b61d:	c9                   	leave  
    b61e:	e9 dd 3e 00 00       	jmp    f500 <async_answer_0@plt>
    b623:	90                   	nop
    b624:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b628:	89 5d 08             	mov    %ebx,0x8(%ebp)
    b62b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    b62e:	89 45 0c             	mov    %eax,0xc(%ebp)
    b631:	c9                   	leave  
    b632:	e9 c9 3e 00 00       	jmp    f500 <async_answer_0@plt>
    b637:	90                   	nop
    b638:	89 5d 08             	mov    %ebx,0x8(%ebp)
    b63b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    b63e:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    b645:	c9                   	leave  
    b646:	e9 b5 3e 00 00       	jmp    f500 <async_answer_0@plt>
    b64b:	51                   	push   %ecx
    b64c:	68 f3 00 00 00       	push   $0xf3
    b651:	68 88 ef 00 00       	push   $0xef88
    b656:	68 1d ef 00 00       	push   $0xef1d
    b65b:	e8 00 3f 00 00       	call   f560 <assert_abort@plt>

0000b660 <remote_config_space_write_16>:
    b660:	55                   	push   %ebp
    b661:	89 e5                	mov    %esp,%ebp
    b663:	56                   	push   %esi
    b664:	53                   	push   %ebx
    b665:	8b 45 0c             	mov    0xc(%ebp),%eax
    b668:	8b 4d 08             	mov    0x8(%ebp),%ecx
    b66b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    b66e:	8b 55 14             	mov    0x14(%ebp),%edx
    b671:	85 c0                	test   %eax,%eax
    b673:	74 60                	je     b6d5 <remote_config_space_write_16+0x75>
    b675:	8b 40 10             	mov    0x10(%eax),%eax
    b678:	85 c0                	test   %eax,%eax
    b67a:	74 44                	je     b6c0 <remote_config_space_write_16+0x60>
    b67c:	56                   	push   %esi
    b67d:	31 f6                	xor    %esi,%esi
    b67f:	66 8b 72 0c          	mov    0xc(%edx),%si
    b683:	56                   	push   %esi
    b684:	8b 52 08             	mov    0x8(%edx),%edx
    b687:	52                   	push   %edx
    b688:	51                   	push   %ecx
    b689:	ff d0                	call   *%eax
    b68b:	83 c4 10             	add    $0x10,%esp
    b68e:	85 c0                	test   %eax,%eax
    b690:	75 16                	jne    b6a8 <remote_config_space_write_16+0x48>
    b692:	89 5d 08             	mov    %ebx,0x8(%ebp)
    b695:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
    b69c:	8d 65 f8             	lea    -0x8(%ebp),%esp
    b69f:	5b                   	pop    %ebx
    b6a0:	5e                   	pop    %esi
    b6a1:	5d                   	pop    %ebp
    b6a2:	e9 59 3e 00 00       	jmp    f500 <async_answer_0@plt>
    b6a7:	90                   	nop
    b6a8:	89 5d 08             	mov    %ebx,0x8(%ebp)
    b6ab:	89 45 0c             	mov    %eax,0xc(%ebp)
    b6ae:	8d 65 f8             	lea    -0x8(%ebp),%esp
    b6b1:	5b                   	pop    %ebx
    b6b2:	5e                   	pop    %esi
    b6b3:	5d                   	pop    %ebp
    b6b4:	e9 47 3e 00 00       	jmp    f500 <async_answer_0@plt>
    b6b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b6c0:	89 5d 08             	mov    %ebx,0x8(%ebp)
    b6c3:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    b6ca:	8d 65 f8             	lea    -0x8(%ebp),%esp
    b6cd:	5b                   	pop    %ebx
    b6ce:	5e                   	pop    %esi
    b6cf:	5d                   	pop    %ebp
    b6d0:	e9 2b 3e 00 00       	jmp    f500 <async_answer_0@plt>
    b6d5:	51                   	push   %ecx
    b6d6:	68 e1 00 00 00       	push   $0xe1
    b6db:	68 88 ef 00 00       	push   $0xef88
    b6e0:	68 1d ef 00 00       	push   $0xef1d
    b6e5:	e8 76 3e 00 00       	call   f560 <assert_abort@plt>
    b6ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000b6f0 <remote_config_space_write_8>:
    b6f0:	55                   	push   %ebp
    b6f1:	89 e5                	mov    %esp,%ebp
    b6f3:	56                   	push   %esi
    b6f4:	53                   	push   %ebx
    b6f5:	8b 45 0c             	mov    0xc(%ebp),%eax
    b6f8:	8b 4d 08             	mov    0x8(%ebp),%ecx
    b6fb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    b6fe:	8b 55 14             	mov    0x14(%ebp),%edx
    b701:	85 c0                	test   %eax,%eax
    b703:	74 68                	je     b76d <remote_config_space_write_8+0x7d>
    b705:	8b 40 0c             	mov    0xc(%eax),%eax
    b708:	85 c0                	test   %eax,%eax
    b70a:	74 4c                	je     b758 <remote_config_space_write_8+0x68>
    b70c:	56                   	push   %esi
    b70d:	0f b6 72 0c          	movzbl 0xc(%edx),%esi
    b711:	81 e6 ff 00 00 00    	and    $0xff,%esi
    b717:	56                   	push   %esi
    b718:	8b 52 08             	mov    0x8(%edx),%edx
    b71b:	52                   	push   %edx
    b71c:	51                   	push   %ecx
    b71d:	ff d0                	call   *%eax
    b71f:	83 c4 10             	add    $0x10,%esp
    b722:	85 c0                	test   %eax,%eax
    b724:	75 1a                	jne    b740 <remote_config_space_write_8+0x50>
    b726:	89 5d 08             	mov    %ebx,0x8(%ebp)
    b729:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
    b730:	8d 65 f8             	lea    -0x8(%ebp),%esp
    b733:	5b                   	pop    %ebx
    b734:	5e                   	pop    %esi
    b735:	5d                   	pop    %ebp
    b736:	e9 c5 3d 00 00       	jmp    f500 <async_answer_0@plt>
    b73b:	90                   	nop
    b73c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b740:	89 5d 08             	mov    %ebx,0x8(%ebp)
    b743:	89 45 0c             	mov    %eax,0xc(%ebp)
    b746:	8d 65 f8             	lea    -0x8(%ebp),%esp
    b749:	5b                   	pop    %ebx
    b74a:	5e                   	pop    %esi
    b74b:	5d                   	pop    %ebp
    b74c:	e9 af 3d 00 00       	jmp    f500 <async_answer_0@plt>
    b751:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b758:	89 5d 08             	mov    %ebx,0x8(%ebp)
    b75b:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    b762:	8d 65 f8             	lea    -0x8(%ebp),%esp
    b765:	5b                   	pop    %ebx
    b766:	5e                   	pop    %esi
    b767:	5d                   	pop    %ebp
    b768:	e9 93 3d 00 00       	jmp    f500 <async_answer_0@plt>
    b76d:	51                   	push   %ecx
    b76e:	68 cf 00 00 00       	push   $0xcf
    b773:	68 88 ef 00 00       	push   $0xef88
    b778:	68 1d ef 00 00       	push   $0xef1d
    b77d:	e8 de 3d 00 00       	call   f560 <assert_abort@plt>
    b782:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b789:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b790 <remote_config_space_read_32>:
    b790:	55                   	push   %ebp
    b791:	89 e5                	mov    %esp,%ebp
    b793:	83 ec 18             	sub    $0x18,%esp
    b796:	8b 45 0c             	mov    0xc(%ebp),%eax
    b799:	85 c0                	test   %eax,%eax
    b79b:	74 5d                	je     b7fa <remote_config_space_read_32+0x6a>
    b79d:	8b 40 08             	mov    0x8(%eax),%eax
    b7a0:	85 c0                	test   %eax,%eax
    b7a2:	74 44                	je     b7e8 <remote_config_space_read_32+0x58>
    b7a4:	52                   	push   %edx
    b7a5:	8d 55 f4             	lea    -0xc(%ebp),%edx
    b7a8:	52                   	push   %edx
    b7a9:	8b 55 14             	mov    0x14(%ebp),%edx
    b7ac:	8b 4a 08             	mov    0x8(%edx),%ecx
    b7af:	8b 55 08             	mov    0x8(%ebp),%edx
    b7b2:	51                   	push   %ecx
    b7b3:	52                   	push   %edx
    b7b4:	ff d0                	call   *%eax
    b7b6:	83 c4 10             	add    $0x10,%esp
    b7b9:	85 c0                	test   %eax,%eax
    b7bb:	74 13                	je     b7d0 <remote_config_space_read_32+0x40>
    b7bd:	8b 4d 10             	mov    0x10(%ebp),%ecx
    b7c0:	52                   	push   %edx
    b7c1:	52                   	push   %edx
    b7c2:	50                   	push   %eax
    b7c3:	51                   	push   %ecx
    b7c4:	e8 37 3d 00 00       	call   f500 <async_answer_0@plt>
    b7c9:	83 c4 10             	add    $0x10,%esp
    b7cc:	c9                   	leave  
    b7cd:	c3                   	ret    
    b7ce:	66 90                	xchg   %ax,%ax
    b7d0:	8b 55 f4             	mov    -0xc(%ebp),%edx
    b7d3:	8b 4d 10             	mov    0x10(%ebp),%ecx
    b7d6:	50                   	push   %eax
    b7d7:	52                   	push   %edx
    b7d8:	6a 00                	push   $0x0
    b7da:	51                   	push   %ecx
    b7db:	e8 80 3f 00 00       	call   f760 <async_answer_1@plt>
    b7e0:	83 c4 10             	add    $0x10,%esp
    b7e3:	c9                   	leave  
    b7e4:	c3                   	ret    
    b7e5:	8d 76 00             	lea    0x0(%esi),%esi
    b7e8:	8b 45 10             	mov    0x10(%ebp),%eax
    b7eb:	51                   	push   %ecx
    b7ec:	51                   	push   %ecx
    b7ed:	6a f5                	push   $0xfffffff5
    b7ef:	50                   	push   %eax
    b7f0:	e8 0b 3d 00 00       	call   f500 <async_answer_0@plt>
    b7f5:	83 c4 10             	add    $0x10,%esp
    b7f8:	c9                   	leave  
    b7f9:	c3                   	ret    
    b7fa:	50                   	push   %eax
    b7fb:	68 bd 00 00 00       	push   $0xbd
    b800:	68 88 ef 00 00       	push   $0xef88
    b805:	68 1d ef 00 00       	push   $0xef1d
    b80a:	e8 51 3d 00 00       	call   f560 <assert_abort@plt>
    b80f:	90                   	nop

0000b810 <remote_config_space_read_16>:
    b810:	55                   	push   %ebp
    b811:	89 e5                	mov    %esp,%ebp
    b813:	83 ec 18             	sub    $0x18,%esp
    b816:	8b 45 0c             	mov    0xc(%ebp),%eax
    b819:	85 c0                	test   %eax,%eax
    b81b:	74 5d                	je     b87a <remote_config_space_read_16+0x6a>
    b81d:	8b 40 04             	mov    0x4(%eax),%eax
    b820:	85 c0                	test   %eax,%eax
    b822:	74 44                	je     b868 <remote_config_space_read_16+0x58>
    b824:	52                   	push   %edx
    b825:	8d 55 f6             	lea    -0xa(%ebp),%edx
    b828:	52                   	push   %edx
    b829:	8b 55 14             	mov    0x14(%ebp),%edx
    b82c:	8b 4a 08             	mov    0x8(%edx),%ecx
    b82f:	8b 55 08             	mov    0x8(%ebp),%edx
    b832:	51                   	push   %ecx
    b833:	52                   	push   %edx
    b834:	ff d0                	call   *%eax
    b836:	83 c4 10             	add    $0x10,%esp
    b839:	85 c0                	test   %eax,%eax
    b83b:	74 13                	je     b850 <remote_config_space_read_16+0x40>
    b83d:	51                   	push   %ecx
    b83e:	51                   	push   %ecx
    b83f:	50                   	push   %eax
    b840:	8b 45 10             	mov    0x10(%ebp),%eax
    b843:	50                   	push   %eax
    b844:	e8 b7 3c 00 00       	call   f500 <async_answer_0@plt>
    b849:	83 c4 10             	add    $0x10,%esp
    b84c:	c9                   	leave  
    b84d:	c3                   	ret    
    b84e:	66 90                	xchg   %ax,%ax
    b850:	50                   	push   %eax
    b851:	31 c0                	xor    %eax,%eax
    b853:	66 8b 45 f6          	mov    -0xa(%ebp),%ax
    b857:	8b 55 10             	mov    0x10(%ebp),%edx
    b85a:	50                   	push   %eax
    b85b:	6a 00                	push   $0x0
    b85d:	52                   	push   %edx
    b85e:	e8 fd 3e 00 00       	call   f760 <async_answer_1@plt>
    b863:	83 c4 10             	add    $0x10,%esp
    b866:	c9                   	leave  
    b867:	c3                   	ret    
    b868:	8b 45 10             	mov    0x10(%ebp),%eax
    b86b:	51                   	push   %ecx
    b86c:	51                   	push   %ecx
    b86d:	6a f5                	push   $0xfffffff5
    b86f:	50                   	push   %eax
    b870:	e8 8b 3c 00 00       	call   f500 <async_answer_0@plt>
    b875:	83 c4 10             	add    $0x10,%esp
    b878:	c9                   	leave  
    b879:	c3                   	ret    
    b87a:	50                   	push   %eax
    b87b:	68 ac 00 00 00       	push   $0xac
    b880:	68 88 ef 00 00       	push   $0xef88
    b885:	68 1d ef 00 00       	push   $0xef1d
    b88a:	e8 d1 3c 00 00       	call   f560 <assert_abort@plt>
    b88f:	90                   	nop

0000b890 <remote_config_space_read_8>:
    b890:	55                   	push   %ebp
    b891:	89 e5                	mov    %esp,%ebp
    b893:	83 ec 18             	sub    $0x18,%esp
    b896:	8b 45 0c             	mov    0xc(%ebp),%eax
    b899:	85 c0                	test   %eax,%eax
    b89b:	74 5d                	je     b8fa <remote_config_space_read_8+0x6a>
    b89d:	8b 00                	mov    (%eax),%eax
    b89f:	85 c0                	test   %eax,%eax
    b8a1:	74 45                	je     b8e8 <remote_config_space_read_8+0x58>
    b8a3:	52                   	push   %edx
    b8a4:	8d 55 f7             	lea    -0x9(%ebp),%edx
    b8a7:	52                   	push   %edx
    b8a8:	8b 55 14             	mov    0x14(%ebp),%edx
    b8ab:	8b 4a 08             	mov    0x8(%edx),%ecx
    b8ae:	8b 55 08             	mov    0x8(%ebp),%edx
    b8b1:	51                   	push   %ecx
    b8b2:	52                   	push   %edx
    b8b3:	ff d0                	call   *%eax
    b8b5:	83 c4 10             	add    $0x10,%esp
    b8b8:	85 c0                	test   %eax,%eax
    b8ba:	74 14                	je     b8d0 <remote_config_space_read_8+0x40>
    b8bc:	51                   	push   %ecx
    b8bd:	51                   	push   %ecx
    b8be:	50                   	push   %eax
    b8bf:	8b 45 10             	mov    0x10(%ebp),%eax
    b8c2:	50                   	push   %eax
    b8c3:	e8 38 3c 00 00       	call   f500 <async_answer_0@plt>
    b8c8:	83 c4 10             	add    $0x10,%esp
    b8cb:	c9                   	leave  
    b8cc:	c3                   	ret    
    b8cd:	8d 76 00             	lea    0x0(%esi),%esi
    b8d0:	50                   	push   %eax
    b8d1:	31 c0                	xor    %eax,%eax
    b8d3:	8a 45 f7             	mov    -0x9(%ebp),%al
    b8d6:	8b 55 10             	mov    0x10(%ebp),%edx
    b8d9:	50                   	push   %eax
    b8da:	6a 00                	push   $0x0
    b8dc:	52                   	push   %edx
    b8dd:	e8 7e 3e 00 00       	call   f760 <async_answer_1@plt>
    b8e2:	83 c4 10             	add    $0x10,%esp
    b8e5:	c9                   	leave  
    b8e6:	c3                   	ret    
    b8e7:	90                   	nop
    b8e8:	8b 45 10             	mov    0x10(%ebp),%eax
    b8eb:	51                   	push   %ecx
    b8ec:	51                   	push   %ecx
    b8ed:	6a f5                	push   $0xfffffff5
    b8ef:	50                   	push   %eax
    b8f0:	e8 0b 3c 00 00       	call   f500 <async_answer_0@plt>
    b8f5:	83 c4 10             	add    $0x10,%esp
    b8f8:	c9                   	leave  
    b8f9:	c3                   	ret    
    b8fa:	50                   	push   %eax
    b8fb:	68 9a 00 00 00       	push   $0x9a
    b900:	68 88 ef 00 00       	push   $0xef88
    b905:	68 1d ef 00 00       	push   $0xef1d
    b90a:	e8 51 3c 00 00       	call   f560 <assert_abort@plt>
    b90f:	90                   	nop

0000b910 <pci_config_space_read_8>:
    b910:	55                   	push   %ebp
    b911:	89 e5                	mov    %esp,%ebp
    b913:	53                   	push   %ebx
    b914:	83 ec 30             	sub    $0x30,%esp
    b917:	8b 45 08             	mov    0x8(%ebp),%eax
    b91a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    b921:	50                   	push   %eax
    b922:	e8 49 3e 00 00       	call   f770 <async_exchange_begin@plt>
    b927:	83 c4 0c             	add    $0xc,%esp
    b92a:	8b 55 0c             	mov    0xc(%ebp),%edx
    b92d:	89 c3                	mov    %eax,%ebx
    b92f:	8d 45 f4             	lea    -0xc(%ebp),%eax
    b932:	6a 00                	push   $0x0
    b934:	6a 00                	push   $0x0
    b936:	6a 00                	push   $0x0
    b938:	6a 00                	push   $0x0
    b93a:	50                   	push   %eax
    b93b:	6a 00                	push   $0x0
    b93d:	6a 00                	push   $0x0
    b93f:	52                   	push   %edx
    b940:	6a 00                	push   $0x0
    b942:	68 07 04 00 00       	push   $0x407
    b947:	53                   	push   %ebx
    b948:	e8 a3 3b 00 00       	call   f4f0 <async_req_fast@plt>
    b94d:	83 c4 24             	add    $0x24,%esp
    b950:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    b953:	53                   	push   %ebx
    b954:	e8 f7 3b 00 00       	call   f550 <async_exchange_end@plt>
    b959:	8b 55 10             	mov    0x10(%ebp),%edx
    b95c:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    b95f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    b962:	88 0a                	mov    %cl,(%edx)
    b964:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    b967:	c9                   	leave  
    b968:	c3                   	ret    
    b969:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000b970 <pci_config_space_read_16>:
    b970:	55                   	push   %ebp
    b971:	89 e5                	mov    %esp,%ebp
    b973:	53                   	push   %ebx
    b974:	83 ec 30             	sub    $0x30,%esp
    b977:	8b 45 08             	mov    0x8(%ebp),%eax
    b97a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    b981:	50                   	push   %eax
    b982:	e8 e9 3d 00 00       	call   f770 <async_exchange_begin@plt>
    b987:	83 c4 0c             	add    $0xc,%esp
    b98a:	8b 55 0c             	mov    0xc(%ebp),%edx
    b98d:	89 c3                	mov    %eax,%ebx
    b98f:	8d 45 f4             	lea    -0xc(%ebp),%eax
    b992:	6a 00                	push   $0x0
    b994:	6a 00                	push   $0x0
    b996:	6a 00                	push   $0x0
    b998:	6a 00                	push   $0x0
    b99a:	50                   	push   %eax
    b99b:	6a 00                	push   $0x0
    b99d:	6a 00                	push   $0x0
    b99f:	52                   	push   %edx
    b9a0:	6a 01                	push   $0x1
    b9a2:	68 07 04 00 00       	push   $0x407
    b9a7:	53                   	push   %ebx
    b9a8:	e8 43 3b 00 00       	call   f4f0 <async_req_fast@plt>
    b9ad:	83 c4 24             	add    $0x24,%esp
    b9b0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    b9b3:	53                   	push   %ebx
    b9b4:	e8 97 3b 00 00       	call   f550 <async_exchange_end@plt>
    b9b9:	8b 55 10             	mov    0x10(%ebp),%edx
    b9bc:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    b9bf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    b9c2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    b9c5:	66 89 0a             	mov    %cx,(%edx)
    b9c8:	c9                   	leave  
    b9c9:	c3                   	ret    
    b9ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000b9d0 <pci_config_space_read_32>:
    b9d0:	55                   	push   %ebp
    b9d1:	89 e5                	mov    %esp,%ebp
    b9d3:	53                   	push   %ebx
    b9d4:	83 ec 30             	sub    $0x30,%esp
    b9d7:	8b 45 08             	mov    0x8(%ebp),%eax
    b9da:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    b9e1:	50                   	push   %eax
    b9e2:	e8 89 3d 00 00       	call   f770 <async_exchange_begin@plt>
    b9e7:	83 c4 0c             	add    $0xc,%esp
    b9ea:	8b 55 0c             	mov    0xc(%ebp),%edx
    b9ed:	89 c3                	mov    %eax,%ebx
    b9ef:	8d 45 f4             	lea    -0xc(%ebp),%eax
    b9f2:	6a 00                	push   $0x0
    b9f4:	6a 00                	push   $0x0
    b9f6:	6a 00                	push   $0x0
    b9f8:	6a 00                	push   $0x0
    b9fa:	50                   	push   %eax
    b9fb:	6a 00                	push   $0x0
    b9fd:	6a 00                	push   $0x0
    b9ff:	52                   	push   %edx
    ba00:	6a 02                	push   $0x2
    ba02:	68 07 04 00 00       	push   $0x407
    ba07:	53                   	push   %ebx
    ba08:	e8 e3 3a 00 00       	call   f4f0 <async_req_fast@plt>
    ba0d:	83 c4 24             	add    $0x24,%esp
    ba10:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    ba13:	53                   	push   %ebx
    ba14:	e8 37 3b 00 00       	call   f550 <async_exchange_end@plt>
    ba19:	8b 55 10             	mov    0x10(%ebp),%edx
    ba1c:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    ba1f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    ba22:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    ba25:	89 0a                	mov    %ecx,(%edx)
    ba27:	c9                   	leave  
    ba28:	c3                   	ret    
    ba29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000ba30 <pci_config_space_write_8>:
    ba30:	55                   	push   %ebp
    ba31:	89 e5                	mov    %esp,%ebp
    ba33:	56                   	push   %esi
    ba34:	53                   	push   %ebx
    ba35:	83 ec 1c             	sub    $0x1c,%esp
    ba38:	8b 45 08             	mov    0x8(%ebp),%eax
    ba3b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    ba3e:	50                   	push   %eax
    ba3f:	e8 2c 3d 00 00       	call   f770 <async_exchange_begin@plt>
    ba44:	83 c4 0c             	add    $0xc,%esp
    ba47:	8b 55 0c             	mov    0xc(%ebp),%edx
    ba4a:	81 e3 ff 00 00 00    	and    $0xff,%ebx
    ba50:	89 c6                	mov    %eax,%esi
    ba52:	6a 00                	push   $0x0
    ba54:	6a 00                	push   $0x0
    ba56:	6a 00                	push   $0x0
    ba58:	6a 00                	push   $0x0
    ba5a:	6a 00                	push   $0x0
    ba5c:	6a 00                	push   $0x0
    ba5e:	53                   	push   %ebx
    ba5f:	52                   	push   %edx
    ba60:	6a 03                	push   $0x3
    ba62:	68 07 04 00 00       	push   $0x407
    ba67:	50                   	push   %eax
    ba68:	e8 83 3a 00 00       	call   f4f0 <async_req_fast@plt>
    ba6d:	83 c4 24             	add    $0x24,%esp
    ba70:	89 45 f4             	mov    %eax,-0xc(%ebp)
    ba73:	56                   	push   %esi
    ba74:	e8 d7 3a 00 00       	call   f550 <async_exchange_end@plt>
    ba79:	8b 45 f4             	mov    -0xc(%ebp),%eax
    ba7c:	8d 65 f8             	lea    -0x8(%ebp),%esp
    ba7f:	5b                   	pop    %ebx
    ba80:	5e                   	pop    %esi
    ba81:	5d                   	pop    %ebp
    ba82:	c3                   	ret    
    ba83:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    ba89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000ba90 <pci_config_space_write_16>:
    ba90:	55                   	push   %ebp
    ba91:	89 e5                	mov    %esp,%ebp
    ba93:	56                   	push   %esi
    ba94:	53                   	push   %ebx
    ba95:	83 ec 1c             	sub    $0x1c,%esp
    ba98:	8b 45 08             	mov    0x8(%ebp),%eax
    ba9b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    ba9e:	50                   	push   %eax
    ba9f:	e8 cc 3c 00 00       	call   f770 <async_exchange_begin@plt>
    baa4:	83 c4 0c             	add    $0xc,%esp
    baa7:	8b 55 0c             	mov    0xc(%ebp),%edx
    baaa:	81 e3 ff ff 00 00    	and    $0xffff,%ebx
    bab0:	89 c6                	mov    %eax,%esi
    bab2:	6a 00                	push   $0x0
    bab4:	6a 00                	push   $0x0
    bab6:	6a 00                	push   $0x0
    bab8:	6a 00                	push   $0x0
    baba:	6a 00                	push   $0x0
    babc:	6a 00                	push   $0x0
    babe:	53                   	push   %ebx
    babf:	52                   	push   %edx
    bac0:	6a 04                	push   $0x4
    bac2:	68 07 04 00 00       	push   $0x407
    bac7:	50                   	push   %eax
    bac8:	e8 23 3a 00 00       	call   f4f0 <async_req_fast@plt>
    bacd:	83 c4 24             	add    $0x24,%esp
    bad0:	89 45 f4             	mov    %eax,-0xc(%ebp)
    bad3:	56                   	push   %esi
    bad4:	e8 77 3a 00 00       	call   f550 <async_exchange_end@plt>
    bad9:	8b 45 f4             	mov    -0xc(%ebp),%eax
    badc:	8d 65 f8             	lea    -0x8(%ebp),%esp
    badf:	5b                   	pop    %ebx
    bae0:	5e                   	pop    %esi
    bae1:	5d                   	pop    %ebp
    bae2:	c3                   	ret    
    bae3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    bae9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000baf0 <pci_config_space_write_32>:
    baf0:	55                   	push   %ebp
    baf1:	89 e5                	mov    %esp,%ebp
    baf3:	53                   	push   %ebx
    baf4:	83 ec 20             	sub    $0x20,%esp
    baf7:	8b 45 08             	mov    0x8(%ebp),%eax
    bafa:	50                   	push   %eax
    bafb:	e8 70 3c 00 00       	call   f770 <async_exchange_begin@plt>
    bb00:	83 c4 0c             	add    $0xc,%esp
    bb03:	8b 55 10             	mov    0x10(%ebp),%edx
    bb06:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    bb09:	89 c3                	mov    %eax,%ebx
    bb0b:	6a 00                	push   $0x0
    bb0d:	6a 00                	push   $0x0
    bb0f:	6a 00                	push   $0x0
    bb11:	6a 00                	push   $0x0
    bb13:	6a 00                	push   $0x0
    bb15:	6a 00                	push   $0x0
    bb17:	52                   	push   %edx
    bb18:	51                   	push   %ecx
    bb19:	6a 05                	push   $0x5
    bb1b:	68 07 04 00 00       	push   $0x407
    bb20:	50                   	push   %eax
    bb21:	e8 ca 39 00 00       	call   f4f0 <async_req_fast@plt>
    bb26:	83 c4 24             	add    $0x24,%esp
    bb29:	89 45 f4             	mov    %eax,-0xc(%ebp)
    bb2c:	53                   	push   %ebx
    bb2d:	e8 1e 3a 00 00       	call   f550 <async_exchange_end@plt>
    bb32:	8b 45 f4             	mov    -0xc(%ebp),%eax
    bb35:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    bb38:	c9                   	leave  
    bb39:	c3                   	ret    
    bb3a:	66 90                	xchg   %ax,%ax
    bb3c:	66 90                	xchg   %ax,%ax
    bb3e:	66 90                	xchg   %ax,%ax

0000bb40 <callback_out>:
    bb40:	55                   	push   %ebp
    bb41:	89 e5                	mov    %esp,%ebp
    bb43:	53                   	push   %ebx
    bb44:	83 ec 0c             	sub    $0xc,%esp
    bb47:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    bb4a:	8b 45 08             	mov    0x8(%ebp),%eax
    bb4d:	50                   	push   %eax
    bb4e:	8b 13                	mov    (%ebx),%edx
    bb50:	52                   	push   %edx
    bb51:	e8 aa 39 00 00       	call   f500 <async_answer_0@plt>
    bb56:	8b 43 08             	mov    0x8(%ebx),%eax
    bb59:	83 c4 10             	add    $0x10,%esp
    bb5c:	85 c0                	test   %eax,%eax
    bb5e:	74 0c                	je     bb6c <callback_out+0x2c>
    bb60:	83 ec 0c             	sub    $0xc,%esp
    bb63:	50                   	push   %eax
    bb64:	e8 f7 3c 00 00       	call   f860 <free@plt>
    bb69:	83 c4 10             	add    $0x10,%esp
    bb6c:	89 5d 08             	mov    %ebx,0x8(%ebp)
    bb6f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    bb72:	c9                   	leave  
    bb73:	e9 e8 3c 00 00       	jmp    f860 <free@plt>
    bb78:	90                   	nop
    bb79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000bb80 <callback_in>:
    bb80:	55                   	push   %ebp
    bb81:	89 e5                	mov    %esp,%ebp
    bb83:	53                   	push   %ebx
    bb84:	53                   	push   %ebx
    bb85:	8b 45 08             	mov    0x8(%ebp),%eax
    bb88:	8b 55 0c             	mov    0xc(%ebp),%edx
    bb8b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    bb8e:	85 c0                	test   %eax,%eax
    bb90:	75 36                	jne    bbc8 <callback_in+0x48>
    bb92:	8b 43 04             	mov    0x4(%ebx),%eax
    bb95:	85 c0                	test   %eax,%eax
    bb97:	75 4f                	jne    bbe8 <callback_in+0x68>
    bb99:	50                   	push   %eax
    bb9a:	50                   	push   %eax
    bb9b:	6a 00                	push   $0x0
    bb9d:	8b 13                	mov    (%ebx),%edx
    bb9f:	52                   	push   %edx
    bba0:	e8 5b 39 00 00       	call   f500 <async_answer_0@plt>
    bba5:	8b 43 08             	mov    0x8(%ebx),%eax
    bba8:	83 c4 10             	add    $0x10,%esp
    bbab:	85 c0                	test   %eax,%eax
    bbad:	74 0c                	je     bbbb <callback_in+0x3b>
    bbaf:	83 ec 0c             	sub    $0xc,%esp
    bbb2:	50                   	push   %eax
    bbb3:	e8 a8 3c 00 00       	call   f860 <free@plt>
    bbb8:	83 c4 10             	add    $0x10,%esp
    bbbb:	89 5d 08             	mov    %ebx,0x8(%ebp)
    bbbe:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    bbc1:	c9                   	leave  
    bbc2:	e9 99 3c 00 00       	jmp    f860 <free@plt>
    bbc7:	90                   	nop
    bbc8:	52                   	push   %edx
    bbc9:	52                   	push   %edx
    bbca:	50                   	push   %eax
    bbcb:	8b 0b                	mov    (%ebx),%ecx
    bbcd:	51                   	push   %ecx
    bbce:	e8 2d 39 00 00       	call   f500 <async_answer_0@plt>
    bbd3:	8b 43 04             	mov    0x4(%ebx),%eax
    bbd6:	83 c4 10             	add    $0x10,%esp
    bbd9:	85 c0                	test   %eax,%eax
    bbdb:	75 23                	jne    bc00 <callback_in+0x80>
    bbdd:	8b 43 08             	mov    0x8(%ebx),%eax
    bbe0:	85 c0                	test   %eax,%eax
    bbe2:	75 cb                	jne    bbaf <callback_in+0x2f>
    bbe4:	eb d5                	jmp    bbbb <callback_in+0x3b>
    bbe6:	66 90                	xchg   %ax,%ax
    bbe8:	51                   	push   %ecx
    bbe9:	52                   	push   %edx
    bbea:	8b 53 08             	mov    0x8(%ebx),%edx
    bbed:	52                   	push   %edx
    bbee:	50                   	push   %eax
    bbef:	e8 6c 38 00 00       	call   f460 <async_data_read_finalize@plt>
    bbf4:	83 c4 10             	add    $0x10,%esp
    bbf7:	eb a0                	jmp    bb99 <callback_in+0x19>
    bbf9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    bc00:	51                   	push   %ecx
    bc01:	51                   	push   %ecx
    bc02:	6a ef                	push   $0xffffffef
    bc04:	50                   	push   %eax
    bc05:	e8 f6 38 00 00       	call   f500 <async_answer_0@plt>
    bc0a:	8b 43 08             	mov    0x8(%ebx),%eax
    bc0d:	83 c4 10             	add    $0x10,%esp
    bc10:	85 c0                	test   %eax,%eax
    bc12:	75 9b                	jne    bbaf <callback_in+0x2f>
    bc14:	eb a5                	jmp    bbbb <callback_in+0x3b>
    bc16:	8d 76 00             	lea    0x0(%esi),%esi
    bc19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000bc20 <remote_usbhc_write>:
    bc20:	55                   	push   %ebp
    bc21:	89 e5                	mov    %esp,%ebp
    bc23:	57                   	push   %edi
    bc24:	56                   	push   %esi
    bc25:	53                   	push   %ebx
    bc26:	83 ec 2c             	sub    $0x2c,%esp
    bc29:	8b 7d 08             	mov    0x8(%ebp),%edi
    bc2c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    bc2f:	8b 45 14             	mov    0x14(%ebp),%eax
    bc32:	85 ff                	test   %edi,%edi
    bc34:	0f 84 58 01 00 00    	je     bd92 <remote_usbhc_write+0x172>
    bc3a:	85 db                	test   %ebx,%ebx
    bc3c:	0f 84 3b 01 00 00    	je     bd7d <remote_usbhc_write+0x15d>
    bc42:	85 c0                	test   %eax,%eax
    bc44:	0f 84 1e 01 00 00    	je     bd68 <remote_usbhc_write+0x148>
    bc4a:	8b 53 04             	mov    0x4(%ebx),%edx
    bc4d:	85 d2                	test   %edx,%edx
    bc4f:	0f 84 e3 00 00 00    	je     bd38 <remote_usbhc_write+0x118>
    bc55:	83 ec 0c             	sub    $0xc,%esp
    bc58:	8b 48 08             	mov    0x8(%eax),%ecx
    bc5b:	8b 50 14             	mov    0x14(%eax),%edx
    bc5e:	8b 70 0c             	mov    0xc(%eax),%esi
    bc61:	8b 40 10             	mov    0x10(%eax),%eax
    bc64:	89 4d cc             	mov    %ecx,-0x34(%ebp)
    bc67:	6a 0c                	push   $0xc
    bc69:	89 45 d0             	mov    %eax,-0x30(%ebp)
    bc6c:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    bc6f:	e8 4c 38 00 00       	call   f4c0 <malloc@plt>
    bc74:	83 c4 10             	add    $0x10,%esp
    bc77:	89 c7                	mov    %eax,%edi
    bc79:	85 c0                	test   %eax,%eax
    bc7b:	0f 84 cf 00 00 00    	je     bd50 <remote_usbhc_write+0x130>
    bc81:	8b 45 10             	mov    0x10(%ebp),%eax
    bc84:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
    bc8b:	89 07                	mov    %eax,(%edi)
    bc8d:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%edi)
    bc94:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    bc9b:	85 f6                	test   %esi,%esi
    bc9d:	75 31                	jne    bcd0 <remote_usbhc_write+0xb0>
    bc9f:	31 c0                	xor    %eax,%eax
    bca1:	31 c9                	xor    %ecx,%ecx
    bca3:	57                   	push   %edi
    bca4:	8b 75 d4             	mov    -0x2c(%ebp),%esi
    bca7:	68 40 bb 00 00       	push   $0xbb40
    bcac:	51                   	push   %ecx
    bcad:	50                   	push   %eax
    bcae:	8b 45 d0             	mov    -0x30(%ebp),%eax
    bcb1:	56                   	push   %esi
    bcb2:	50                   	push   %eax
    bcb3:	8b 45 cc             	mov    -0x34(%ebp),%eax
    bcb6:	50                   	push   %eax
    bcb7:	8b 45 08             	mov    0x8(%ebp),%eax
    bcba:	50                   	push   %eax
    bcbb:	ff 53 04             	call   *0x4(%ebx)
    bcbe:	83 c4 20             	add    $0x20,%esp
    bcc1:	85 c0                	test   %eax,%eax
    bcc3:	75 3b                	jne    bd00 <remote_usbhc_write+0xe0>
    bcc5:	8d 65 f4             	lea    -0xc(%ebp),%esp
    bcc8:	5b                   	pop    %ebx
    bcc9:	5e                   	pop    %esi
    bcca:	5f                   	pop    %edi
    bccb:	5d                   	pop    %ebp
    bccc:	c3                   	ret    
    bccd:	8d 76 00             	lea    0x0(%esi),%esi
    bcd0:	50                   	push   %eax
    bcd1:	50                   	push   %eax
    bcd2:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    bcd5:	50                   	push   %eax
    bcd6:	8d 47 08             	lea    0x8(%edi),%eax
    bcd9:	6a 00                	push   $0x0
    bcdb:	68 fc 03 00 00       	push   $0x3fc
    bce0:	6a 01                	push   $0x1
    bce2:	6a 00                	push   $0x0
    bce4:	50                   	push   %eax
    bce5:	e8 06 3b 00 00       	call   f7f0 <async_data_write_accept@plt>
    bcea:	83 c4 20             	add    $0x20,%esp
    bced:	85 c0                	test   %eax,%eax
    bcef:	75 0f                	jne    bd00 <remote_usbhc_write+0xe0>
    bcf1:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    bcf4:	8b 47 08             	mov    0x8(%edi),%eax
    bcf7:	eb aa                	jmp    bca3 <remote_usbhc_write+0x83>
    bcf9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    bd00:	8b 5d 10             	mov    0x10(%ebp),%ebx
    bd03:	51                   	push   %ecx
    bd04:	51                   	push   %ecx
    bd05:	50                   	push   %eax
    bd06:	53                   	push   %ebx
    bd07:	e8 f4 37 00 00       	call   f500 <async_answer_0@plt>
    bd0c:	8b 47 08             	mov    0x8(%edi),%eax
    bd0f:	83 c4 10             	add    $0x10,%esp
    bd12:	85 c0                	test   %eax,%eax
    bd14:	74 0c                	je     bd22 <remote_usbhc_write+0x102>
    bd16:	83 ec 0c             	sub    $0xc,%esp
    bd19:	50                   	push   %eax
    bd1a:	e8 41 3b 00 00       	call   f860 <free@plt>
    bd1f:	83 c4 10             	add    $0x10,%esp
    bd22:	83 ec 0c             	sub    $0xc,%esp
    bd25:	57                   	push   %edi
    bd26:	e8 35 3b 00 00       	call   f860 <free@plt>
    bd2b:	83 c4 10             	add    $0x10,%esp
    bd2e:	8d 65 f4             	lea    -0xc(%ebp),%esp
    bd31:	5b                   	pop    %ebx
    bd32:	5e                   	pop    %esi
    bd33:	5f                   	pop    %edi
    bd34:	5d                   	pop    %ebp
    bd35:	c3                   	ret    
    bd36:	66 90                	xchg   %ax,%ax
    bd38:	50                   	push   %eax
    bd39:	50                   	push   %eax
    bd3a:	8b 45 10             	mov    0x10(%ebp),%eax
    bd3d:	6a f5                	push   $0xfffffff5
    bd3f:	50                   	push   %eax
    bd40:	e8 bb 37 00 00       	call   f500 <async_answer_0@plt>
    bd45:	83 c4 10             	add    $0x10,%esp
    bd48:	8d 65 f4             	lea    -0xc(%ebp),%esp
    bd4b:	5b                   	pop    %ebx
    bd4c:	5e                   	pop    %esi
    bd4d:	5f                   	pop    %edi
    bd4e:	5d                   	pop    %ebp
    bd4f:	c3                   	ret    
    bd50:	8b 55 10             	mov    0x10(%ebp),%edx
    bd53:	50                   	push   %eax
    bd54:	50                   	push   %eax
    bd55:	6a fe                	push   $0xfffffffe
    bd57:	52                   	push   %edx
    bd58:	e8 a3 37 00 00       	call   f500 <async_answer_0@plt>
    bd5d:	83 c4 10             	add    $0x10,%esp
    bd60:	8d 65 f4             	lea    -0xc(%ebp),%esp
    bd63:	5b                   	pop    %ebx
    bd64:	5e                   	pop    %esi
    bd65:	5f                   	pop    %edi
    bd66:	5d                   	pop    %ebp
    bd67:	c3                   	ret    
    bd68:	51                   	push   %ecx
    bd69:	68 43 01 00 00       	push   $0x143
    bd6e:	68 c0 ef 00 00       	push   $0xefc0
    bd73:	68 23 ef 00 00       	push   $0xef23
    bd78:	e8 e3 37 00 00       	call   f560 <assert_abort@plt>
    bd7d:	53                   	push   %ebx
    bd7e:	68 42 01 00 00       	push   $0x142
    bd83:	68 c0 ef 00 00       	push   $0xefc0
    bd88:	68 1d ef 00 00       	push   $0xef1d
    bd8d:	e8 ce 37 00 00       	call   f560 <assert_abort@plt>
    bd92:	56                   	push   %esi
    bd93:	68 41 01 00 00       	push   $0x141
    bd98:	68 c0 ef 00 00       	push   $0xefc0
    bd9d:	68 19 ef 00 00       	push   $0xef19
    bda2:	e8 b9 37 00 00       	call   f560 <assert_abort@plt>
    bda7:	89 f6                	mov    %esi,%esi
    bda9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000bdb0 <remote_usbhc_read>:
    bdb0:	55                   	push   %ebp
    bdb1:	89 e5                	mov    %esp,%ebp
    bdb3:	57                   	push   %edi
    bdb4:	56                   	push   %esi
    bdb5:	53                   	push   %ebx
    bdb6:	83 ec 2c             	sub    $0x2c,%esp
    bdb9:	8b 7d 08             	mov    0x8(%ebp),%edi
    bdbc:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    bdbf:	8b 45 14             	mov    0x14(%ebp),%eax
    bdc2:	85 ff                	test   %edi,%edi
    bdc4:	0f 84 51 01 00 00    	je     bf1b <remote_usbhc_read+0x16b>
    bdca:	85 db                	test   %ebx,%ebx
    bdcc:	0f 84 73 01 00 00    	je     bf45 <remote_usbhc_read+0x195>
    bdd2:	85 c0                	test   %eax,%eax
    bdd4:	0f 84 56 01 00 00    	je     bf30 <remote_usbhc_read+0x180>
    bdda:	8b 13                	mov    (%ebx),%edx
    bddc:	85 d2                	test   %edx,%edx
    bdde:	0f 84 f4 00 00 00    	je     bed8 <remote_usbhc_read+0x128>
    bde4:	83 ec 0c             	sub    $0xc,%esp
    bde7:	8b 50 10             	mov    0x10(%eax),%edx
    bdea:	8b 70 08             	mov    0x8(%eax),%esi
    bded:	8b 40 0c             	mov    0xc(%eax),%eax
    bdf0:	89 45 d0             	mov    %eax,-0x30(%ebp)
    bdf3:	6a 0c                	push   $0xc
    bdf5:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    bdf8:	e8 c3 36 00 00       	call   f4c0 <malloc@plt>
    bdfd:	83 c4 10             	add    $0x10,%esp
    be00:	89 c7                	mov    %eax,%edi
    be02:	85 c0                	test   %eax,%eax
    be04:	0f 84 e6 00 00 00    	je     bef0 <remote_usbhc_read+0x140>
    be0a:	8b 45 10             	mov    0x10(%ebp),%eax
    be0d:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
    be14:	89 07                	mov    %eax,(%edi)
    be16:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%edi)
    be1d:	50                   	push   %eax
    be1e:	50                   	push   %eax
    be1f:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    be22:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    be29:	50                   	push   %eax
    be2a:	8d 47 04             	lea    0x4(%edi),%eax
    be2d:	50                   	push   %eax
    be2e:	e8 9d 38 00 00       	call   f6d0 <async_data_read_receive@plt>
    be33:	83 c4 10             	add    $0x10,%esp
    be36:	84 c0                	test   %al,%al
    be38:	75 1e                	jne    be58 <remote_usbhc_read+0xa8>
    be3a:	8b 75 10             	mov    0x10(%ebp),%esi
    be3d:	53                   	push   %ebx
    be3e:	53                   	push   %ebx
    be3f:	6a f8                	push   $0xfffffff8
    be41:	56                   	push   %esi
    be42:	e8 b9 36 00 00       	call   f500 <async_answer_0@plt>
    be47:	83 c4 10             	add    $0x10,%esp
    be4a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    be4d:	5b                   	pop    %ebx
    be4e:	5e                   	pop    %esi
    be4f:	5f                   	pop    %edi
    be50:	5d                   	pop    %ebp
    be51:	c3                   	ret    
    be52:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    be58:	83 ec 0c             	sub    $0xc,%esp
    be5b:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    be5e:	51                   	push   %ecx
    be5f:	e8 5c 36 00 00       	call   f4c0 <malloc@plt>
    be64:	83 c4 10             	add    $0x10,%esp
    be67:	89 47 08             	mov    %eax,0x8(%edi)
    be6a:	85 c0                	test   %eax,%eax
    be6c:	0f 84 96 00 00 00    	je     bf08 <remote_usbhc_read+0x158>
    be72:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    be75:	57                   	push   %edi
    be76:	68 80 bb 00 00       	push   $0xbb80
    be7b:	51                   	push   %ecx
    be7c:	50                   	push   %eax
    be7d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    be80:	50                   	push   %eax
    be81:	8b 45 d0             	mov    -0x30(%ebp),%eax
    be84:	50                   	push   %eax
    be85:	8b 45 08             	mov    0x8(%ebp),%eax
    be88:	56                   	push   %esi
    be89:	50                   	push   %eax
    be8a:	ff 13                	call   *(%ebx)
    be8c:	83 c4 20             	add    $0x20,%esp
    be8f:	89 c3                	mov    %eax,%ebx
    be91:	85 c0                	test   %eax,%eax
    be93:	74 b5                	je     be4a <remote_usbhc_read+0x9a>
    be95:	56                   	push   %esi
    be96:	56                   	push   %esi
    be97:	50                   	push   %eax
    be98:	8b 47 04             	mov    0x4(%edi),%eax
    be9b:	50                   	push   %eax
    be9c:	e8 5f 36 00 00       	call   f500 <async_answer_0@plt>
    bea1:	58                   	pop    %eax
    bea2:	5a                   	pop    %edx
    bea3:	53                   	push   %ebx
    bea4:	8b 4d 10             	mov    0x10(%ebp),%ecx
    bea7:	51                   	push   %ecx
    bea8:	e8 53 36 00 00       	call   f500 <async_answer_0@plt>
    bead:	8b 47 08             	mov    0x8(%edi),%eax
    beb0:	83 c4 10             	add    $0x10,%esp
    beb3:	85 c0                	test   %eax,%eax
    beb5:	74 0c                	je     bec3 <remote_usbhc_read+0x113>
    beb7:	83 ec 0c             	sub    $0xc,%esp
    beba:	50                   	push   %eax
    bebb:	e8 a0 39 00 00       	call   f860 <free@plt>
    bec0:	83 c4 10             	add    $0x10,%esp
    bec3:	83 ec 0c             	sub    $0xc,%esp
    bec6:	57                   	push   %edi
    bec7:	e8 94 39 00 00       	call   f860 <free@plt>
    becc:	83 c4 10             	add    $0x10,%esp
    becf:	8d 65 f4             	lea    -0xc(%ebp),%esp
    bed2:	5b                   	pop    %ebx
    bed3:	5e                   	pop    %esi
    bed4:	5f                   	pop    %edi
    bed5:	5d                   	pop    %ebp
    bed6:	c3                   	ret    
    bed7:	90                   	nop
    bed8:	50                   	push   %eax
    bed9:	50                   	push   %eax
    beda:	8b 45 10             	mov    0x10(%ebp),%eax
    bedd:	6a f5                	push   $0xfffffff5
    bedf:	50                   	push   %eax
    bee0:	e8 1b 36 00 00       	call   f500 <async_answer_0@plt>
    bee5:	83 c4 10             	add    $0x10,%esp
    bee8:	8d 65 f4             	lea    -0xc(%ebp),%esp
    beeb:	5b                   	pop    %ebx
    beec:	5e                   	pop    %esi
    beed:	5f                   	pop    %edi
    beee:	5d                   	pop    %ebp
    beef:	c3                   	ret    
    bef0:	8b 55 10             	mov    0x10(%ebp),%edx
    bef3:	50                   	push   %eax
    bef4:	50                   	push   %eax
    bef5:	6a fe                	push   $0xfffffffe
    bef7:	52                   	push   %edx
    bef8:	e8 03 36 00 00       	call   f500 <async_answer_0@plt>
    befd:	83 c4 10             	add    $0x10,%esp
    bf00:	8d 65 f4             	lea    -0xc(%ebp),%esp
    bf03:	5b                   	pop    %ebx
    bf04:	5e                   	pop    %esi
    bf05:	5f                   	pop    %edi
    bf06:	5d                   	pop    %ebp
    bf07:	c3                   	ret    
    bf08:	50                   	push   %eax
    bf09:	50                   	push   %eax
    bf0a:	6a fe                	push   $0xfffffffe
    bf0c:	8b 47 04             	mov    0x4(%edi),%eax
    bf0f:	50                   	push   %eax
    bf10:	e8 eb 35 00 00       	call   f500 <async_answer_0@plt>
    bf15:	58                   	pop    %eax
    bf16:	5a                   	pop    %edx
    bf17:	6a fe                	push   $0xfffffffe
    bf19:	eb 89                	jmp    bea4 <remote_usbhc_read+0xf4>
    bf1b:	56                   	push   %esi
    bf1c:	68 10 01 00 00       	push   $0x110
    bf21:	68 c0 ef 00 00       	push   $0xefc0
    bf26:	68 19 ef 00 00       	push   $0xef19
    bf2b:	e8 30 36 00 00       	call   f560 <assert_abort@plt>
    bf30:	51                   	push   %ecx
    bf31:	68 12 01 00 00       	push   $0x112
    bf36:	68 c0 ef 00 00       	push   $0xefc0
    bf3b:	68 23 ef 00 00       	push   $0xef23
    bf40:	e8 1b 36 00 00       	call   f560 <assert_abort@plt>
    bf45:	53                   	push   %ebx
    bf46:	68 11 01 00 00       	push   $0x111
    bf4b:	68 c0 ef 00 00       	push   $0xefc0
    bf50:	68 1d ef 00 00       	push   $0xef1d
    bf55:	e8 06 36 00 00       	call   f560 <assert_abort@plt>
    bf5a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000bf60 <usbhc_read>:
    bf60:	55                   	push   %ebp
    bf61:	89 e5                	mov    %esp,%ebp
    bf63:	57                   	push   %edi
    bf64:	56                   	push   %esi
    bf65:	53                   	push   %ebx
    bf66:	83 ec 4c             	sub    $0x4c,%esp
    bf69:	8b 5d 08             	mov    0x8(%ebp),%ebx
    bf6c:	8b 45 0c             	mov    0xc(%ebp),%eax
    bf6f:	8b 7d 10             	mov    0x10(%ebp),%edi
    bf72:	8b 4d 14             	mov    0x14(%ebp),%ecx
    bf75:	8b 75 18             	mov    0x18(%ebp),%esi
    bf78:	66 89 45 b6          	mov    %ax,-0x4a(%ebp)
    bf7c:	85 db                	test   %ebx,%ebx
    bf7e:	0f 84 d2 00 00 00    	je     c056 <usbhc_read+0xf6>
    bf84:	8b 45 20             	mov    0x20(%ebp),%eax
    bf87:	85 c0                	test   %eax,%eax
    bf89:	75 15                	jne    bfa0 <usbhc_read+0x40>
    bf8b:	89 ca                	mov    %ecx,%edx
    bf8d:	31 c0                	xor    %eax,%eax
    bf8f:	09 f2                	or     %esi,%edx
    bf91:	75 0d                	jne    bfa0 <usbhc_read+0x40>
    bf93:	8d 65 f4             	lea    -0xc(%ebp),%esp
    bf96:	5b                   	pop    %ebx
    bf97:	5e                   	pop    %esi
    bf98:	5f                   	pop    %edi
    bf99:	5d                   	pop    %ebp
    bf9a:	c3                   	ret    
    bf9b:	90                   	nop
    bf9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    bfa0:	c1 e7 10             	shl    $0x10,%edi
    bfa3:	31 d2                	xor    %edx,%edx
    bfa5:	66 8b 55 b6          	mov    -0x4a(%ebp),%dx
    bfa9:	50                   	push   %eax
    bfaa:	09 d7                	or     %edx,%edi
    bfac:	6a 00                	push   $0x0
    bfae:	56                   	push   %esi
    bfaf:	51                   	push   %ecx
    bfb0:	57                   	push   %edi
    bfb1:	6a 00                	push   $0x0
    bfb3:	68 09 04 00 00       	push   $0x409
    bfb8:	53                   	push   %ebx
    bfb9:	e8 52 35 00 00       	call   f510 <async_send_fast@plt>
    bfbe:	83 c4 20             	add    $0x20,%esp
    bfc1:	89 c6                	mov    %eax,%esi
    bfc3:	85 c0                	test   %eax,%eax
    bfc5:	74 69                	je     c030 <usbhc_read+0xd0>
    bfc7:	8d 45 c4             	lea    -0x3c(%ebp),%eax
    bfca:	8b 7d 20             	mov    0x20(%ebp),%edi
    bfcd:	50                   	push   %eax
    bfce:	8b 45 1c             	mov    0x1c(%ebp),%eax
    bfd1:	57                   	push   %edi
    bfd2:	50                   	push   %eax
    bfd3:	53                   	push   %ebx
    bfd4:	e8 47 35 00 00       	call   f520 <async_data_read@plt>
    bfd9:	83 c4 10             	add    $0x10,%esp
    bfdc:	85 c0                	test   %eax,%eax
    bfde:	74 60                	je     c040 <usbhc_read+0xe0>
    bfe0:	52                   	push   %edx
    bfe1:	52                   	push   %edx
    bfe2:	8d 55 bc             	lea    -0x44(%ebp),%edx
    bfe5:	52                   	push   %edx
    bfe6:	50                   	push   %eax
    bfe7:	e8 e4 33 00 00       	call   f3d0 <async_wait_for@plt>
    bfec:	8d 45 c0             	lea    -0x40(%ebp),%eax
    bfef:	59                   	pop    %ecx
    bff0:	5b                   	pop    %ebx
    bff1:	50                   	push   %eax
    bff2:	56                   	push   %esi
    bff3:	e8 d8 33 00 00       	call   f3d0 <async_wait_for@plt>
    bff8:	8b 45 bc             	mov    -0x44(%ebp),%eax
    bffb:	83 c4 10             	add    $0x10,%esp
    bffe:	85 c0                	test   %eax,%eax
    c000:	74 0e                	je     c010 <usbhc_read+0xb0>
    c002:	8b 55 c0             	mov    -0x40(%ebp),%edx
    c005:	85 d2                	test   %edx,%edx
    c007:	74 8a                	je     bf93 <usbhc_read+0x33>
    c009:	89 d0                	mov    %edx,%eax
    c00b:	eb 86                	jmp    bf93 <usbhc_read+0x33>
    c00d:	8d 76 00             	lea    0x0(%esi),%esi
    c010:	8b 45 c0             	mov    -0x40(%ebp),%eax
    c013:	85 c0                	test   %eax,%eax
    c015:	0f 85 78 ff ff ff    	jne    bf93 <usbhc_read+0x33>
    c01b:	8b 45 24             	mov    0x24(%ebp),%eax
    c01e:	8b 55 cc             	mov    -0x34(%ebp),%edx
    c021:	89 10                	mov    %edx,(%eax)
    c023:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c026:	31 c0                	xor    %eax,%eax
    c028:	5b                   	pop    %ebx
    c029:	5e                   	pop    %esi
    c02a:	5f                   	pop    %edi
    c02b:	5d                   	pop    %ebp
    c02c:	c3                   	ret    
    c02d:	8d 76 00             	lea    0x0(%esi),%esi
    c030:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c035:	e9 59 ff ff ff       	jmp    bf93 <usbhc_read+0x33>
    c03a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    c040:	83 ec 0c             	sub    $0xc,%esp
    c043:	56                   	push   %esi
    c044:	e8 b7 37 00 00       	call   f800 <async_forget@plt>
    c049:	83 c4 10             	add    $0x10,%esp
    c04c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c051:	e9 3d ff ff ff       	jmp    bf93 <usbhc_read+0x33>
    c056:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    c05b:	e9 33 ff ff ff       	jmp    bf93 <usbhc_read+0x33>

0000c060 <usbhc_write>:
    c060:	55                   	push   %ebp
    c061:	89 e5                	mov    %esp,%ebp
    c063:	57                   	push   %edi
    c064:	56                   	push   %esi
    c065:	53                   	push   %ebx
    c066:	83 ec 2c             	sub    $0x2c,%esp
    c069:	8b 45 0c             	mov    0xc(%ebp),%eax
    c06c:	8b 7d 10             	mov    0x10(%ebp),%edi
    c06f:	66 89 45 d4          	mov    %ax,-0x2c(%ebp)
    c073:	8b 45 08             	mov    0x8(%ebp),%eax
    c076:	8b 4d 14             	mov    0x14(%ebp),%ecx
    c079:	8b 75 18             	mov    0x18(%ebp),%esi
    c07c:	8b 5d 20             	mov    0x20(%ebp),%ebx
    c07f:	85 c0                	test   %eax,%eax
    c081:	0f 84 9b 00 00 00    	je     c122 <usbhc_write+0xc2>
    c087:	85 db                	test   %ebx,%ebx
    c089:	75 15                	jne    c0a0 <usbhc_write+0x40>
    c08b:	89 ca                	mov    %ecx,%edx
    c08d:	31 c0                	xor    %eax,%eax
    c08f:	09 f2                	or     %esi,%edx
    c091:	75 0d                	jne    c0a0 <usbhc_write+0x40>
    c093:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c096:	5b                   	pop    %ebx
    c097:	5e                   	pop    %esi
    c098:	5f                   	pop    %edi
    c099:	5d                   	pop    %ebp
    c09a:	c3                   	ret    
    c09b:	90                   	nop
    c09c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c0a0:	31 d2                	xor    %edx,%edx
    c0a2:	6a 00                	push   $0x0
    c0a4:	c1 e7 10             	shl    $0x10,%edi
    c0a7:	66 8b 55 d4          	mov    -0x2c(%ebp),%dx
    c0ab:	56                   	push   %esi
    c0ac:	09 d7                	or     %edx,%edi
    c0ae:	8b 75 08             	mov    0x8(%ebp),%esi
    c0b1:	51                   	push   %ecx
    c0b2:	53                   	push   %ebx
    c0b3:	57                   	push   %edi
    c0b4:	6a 01                	push   $0x1
    c0b6:	68 09 04 00 00       	push   $0x409
    c0bb:	56                   	push   %esi
    c0bc:	e8 8f 35 00 00       	call   f650 <async_send_slow@plt>
    c0c1:	83 c4 20             	add    $0x20,%esp
    c0c4:	89 c6                	mov    %eax,%esi
    c0c6:	85 c0                	test   %eax,%eax
    c0c8:	74 4e                	je     c118 <usbhc_write+0xb8>
    c0ca:	85 db                	test   %ebx,%ebx
    c0cc:	74 16                	je     c0e4 <usbhc_write+0x84>
    c0ce:	8b 4d 1c             	mov    0x1c(%ebp),%ecx
    c0d1:	52                   	push   %edx
    c0d2:	53                   	push   %ebx
    c0d3:	8b 5d 08             	mov    0x8(%ebp),%ebx
    c0d6:	51                   	push   %ecx
    c0d7:	53                   	push   %ebx
    c0d8:	e8 43 33 00 00       	call   f420 <async_data_write_start@plt>
    c0dd:	83 c4 10             	add    $0x10,%esp
    c0e0:	85 c0                	test   %eax,%eax
    c0e2:	75 1c                	jne    c100 <usbhc_write+0xa0>
    c0e4:	50                   	push   %eax
    c0e5:	50                   	push   %eax
    c0e6:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    c0e9:	50                   	push   %eax
    c0ea:	56                   	push   %esi
    c0eb:	e8 e0 32 00 00       	call   f3d0 <async_wait_for@plt>
    c0f0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    c0f3:	83 c4 10             	add    $0x10,%esp
    c0f6:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c0f9:	5b                   	pop    %ebx
    c0fa:	5e                   	pop    %esi
    c0fb:	5f                   	pop    %edi
    c0fc:	5d                   	pop    %ebp
    c0fd:	c3                   	ret    
    c0fe:	66 90                	xchg   %ax,%ax
    c100:	83 ec 0c             	sub    $0xc,%esp
    c103:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    c106:	56                   	push   %esi
    c107:	e8 f4 36 00 00       	call   f800 <async_forget@plt>
    c10c:	83 c4 10             	add    $0x10,%esp
    c10f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    c112:	e9 7c ff ff ff       	jmp    c093 <usbhc_write+0x33>
    c117:	90                   	nop
    c118:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c11d:	e9 71 ff ff ff       	jmp    c093 <usbhc_write+0x33>
    c122:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    c127:	e9 67 ff ff ff       	jmp    c093 <usbhc_write+0x33>
    c12c:	66 90                	xchg   %ax,%ax
    c12e:	66 90                	xchg   %ax,%ax

0000c130 <remote_usbhid_get_report_descriptor>:
    c130:	55                   	push   %ebp
    c131:	89 e5                	mov    %esp,%ebp
    c133:	56                   	push   %esi
    c134:	53                   	push   %ebx
    c135:	83 ec 10             	sub    $0x10,%esp
    c138:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    c13b:	8b 43 0c             	mov    0xc(%ebx),%eax
    c13e:	85 c0                	test   %eax,%eax
    c140:	0f 84 02 01 00 00    	je     c248 <remote_usbhid_get_report_descriptor+0x118>
    c146:	50                   	push   %eax
    c147:	50                   	push   %eax
    c148:	8d 45 ec             	lea    -0x14(%ebp),%eax
    c14b:	50                   	push   %eax
    c14c:	8d 45 f0             	lea    -0x10(%ebp),%eax
    c14f:	50                   	push   %eax
    c150:	e8 7b 35 00 00       	call   f6d0 <async_data_read_receive@plt>
    c155:	83 c4 10             	add    $0x10,%esp
    c158:	84 c0                	test   %al,%al
    c15a:	0f 84 98 00 00 00    	je     c1f8 <remote_usbhid_get_report_descriptor+0xc8>
    c160:	8b 45 ec             	mov    -0x14(%ebp),%eax
    c163:	85 c0                	test   %eax,%eax
    c165:	75 29                	jne    c190 <remote_usbhid_get_report_descriptor+0x60>
    c167:	8b 45 f0             	mov    -0x10(%ebp),%eax
    c16a:	56                   	push   %esi
    c16b:	56                   	push   %esi
    c16c:	6a f2                	push   $0xfffffff2
    c16e:	50                   	push   %eax
    c16f:	e8 8c 33 00 00       	call   f500 <async_answer_0@plt>
    c174:	8b 4d 10             	mov    0x10(%ebp),%ecx
    c177:	58                   	pop    %eax
    c178:	5a                   	pop    %edx
    c179:	6a f2                	push   $0xfffffff2
    c17b:	51                   	push   %ecx
    c17c:	e8 7f 33 00 00       	call   f500 <async_answer_0@plt>
    c181:	83 c4 10             	add    $0x10,%esp
    c184:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c187:	5b                   	pop    %ebx
    c188:	5e                   	pop    %esi
    c189:	5d                   	pop    %ebp
    c18a:	c3                   	ret    
    c18b:	90                   	nop
    c18c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c190:	83 ec 0c             	sub    $0xc,%esp
    c193:	50                   	push   %eax
    c194:	e8 27 33 00 00       	call   f4c0 <malloc@plt>
    c199:	83 c4 10             	add    $0x10,%esp
    c19c:	89 c6                	mov    %eax,%esi
    c19e:	85 c0                	test   %eax,%eax
    c1a0:	0f 84 ba 00 00 00    	je     c260 <remote_usbhid_get_report_descriptor+0x130>
    c1a6:	8d 45 f4             	lea    -0xc(%ebp),%eax
    c1a9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    c1b0:	50                   	push   %eax
    c1b1:	8b 45 ec             	mov    -0x14(%ebp),%eax
    c1b4:	50                   	push   %eax
    c1b5:	8b 45 08             	mov    0x8(%ebp),%eax
    c1b8:	56                   	push   %esi
    c1b9:	50                   	push   %eax
    c1ba:	ff 53 0c             	call   *0xc(%ebx)
    c1bd:	8b 55 f4             	mov    -0xc(%ebp),%edx
    c1c0:	83 c4 10             	add    $0x10,%esp
    c1c3:	3b 55 ec             	cmp    -0x14(%ebp),%edx
    c1c6:	76 48                	jbe    c210 <remote_usbhid_get_report_descriptor+0xe0>
    c1c8:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx
    c1cd:	83 ec 0c             	sub    $0xc,%esp
    c1d0:	56                   	push   %esi
    c1d1:	e8 8a 36 00 00       	call   f860 <free@plt>
    c1d6:	8b 4d f0             	mov    -0x10(%ebp),%ecx
    c1d9:	58                   	pop    %eax
    c1da:	5a                   	pop    %edx
    c1db:	53                   	push   %ebx
    c1dc:	51                   	push   %ecx
    c1dd:	e8 1e 33 00 00       	call   f500 <async_answer_0@plt>
    c1e2:	5e                   	pop    %esi
    c1e3:	58                   	pop    %eax
    c1e4:	8b 45 10             	mov    0x10(%ebp),%eax
    c1e7:	53                   	push   %ebx
    c1e8:	50                   	push   %eax
    c1e9:	e8 12 33 00 00       	call   f500 <async_answer_0@plt>
    c1ee:	83 c4 10             	add    $0x10,%esp
    c1f1:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c1f4:	5b                   	pop    %ebx
    c1f5:	5e                   	pop    %esi
    c1f6:	5d                   	pop    %ebp
    c1f7:	c3                   	ret    
    c1f8:	8b 75 10             	mov    0x10(%ebp),%esi
    c1fb:	53                   	push   %ebx
    c1fc:	53                   	push   %ebx
    c1fd:	6a f2                	push   $0xfffffff2
    c1ff:	56                   	push   %esi
    c200:	e8 fb 32 00 00       	call   f500 <async_answer_0@plt>
    c205:	83 c4 10             	add    $0x10,%esp
    c208:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c20b:	5b                   	pop    %ebx
    c20c:	5e                   	pop    %esi
    c20d:	5d                   	pop    %ebp
    c20e:	c3                   	ret    
    c20f:	90                   	nop
    c210:	89 c3                	mov    %eax,%ebx
    c212:	85 c0                	test   %eax,%eax
    c214:	75 b7                	jne    c1cd <remote_usbhid_get_report_descriptor+0x9d>
    c216:	50                   	push   %eax
    c217:	52                   	push   %edx
    c218:	8b 55 f0             	mov    -0x10(%ebp),%edx
    c21b:	56                   	push   %esi
    c21c:	52                   	push   %edx
    c21d:	e8 3e 32 00 00       	call   f460 <async_data_read_finalize@plt>
    c222:	8b 45 10             	mov    0x10(%ebp),%eax
    c225:	59                   	pop    %ecx
    c226:	5b                   	pop    %ebx
    c227:	6a 00                	push   $0x0
    c229:	50                   	push   %eax
    c22a:	e8 d1 32 00 00       	call   f500 <async_answer_0@plt>
    c22f:	89 34 24             	mov    %esi,(%esp)
    c232:	e8 29 36 00 00       	call   f860 <free@plt>
    c237:	83 c4 10             	add    $0x10,%esp
    c23a:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c23d:	5b                   	pop    %ebx
    c23e:	5e                   	pop    %esi
    c23f:	5d                   	pop    %ebp
    c240:	c3                   	ret    
    c241:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c248:	50                   	push   %eax
    c249:	50                   	push   %eax
    c24a:	8b 45 10             	mov    0x10(%ebp),%eax
    c24d:	6a f5                	push   $0xfffffff5
    c24f:	50                   	push   %eax
    c250:	e8 ab 32 00 00       	call   f500 <async_answer_0@plt>
    c255:	83 c4 10             	add    $0x10,%esp
    c258:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c25b:	5b                   	pop    %ebx
    c25c:	5e                   	pop    %esi
    c25d:	5d                   	pop    %ebp
    c25e:	c3                   	ret    
    c25f:	90                   	nop
    c260:	50                   	push   %eax
    c261:	50                   	push   %eax
    c262:	8b 45 f0             	mov    -0x10(%ebp),%eax
    c265:	6a fe                	push   $0xfffffffe
    c267:	50                   	push   %eax
    c268:	e8 93 32 00 00       	call   f500 <async_answer_0@plt>
    c26d:	8b 5d 10             	mov    0x10(%ebp),%ebx
    c270:	5a                   	pop    %edx
    c271:	59                   	pop    %ecx
    c272:	6a fe                	push   $0xfffffffe
    c274:	53                   	push   %ebx
    c275:	e8 86 32 00 00       	call   f500 <async_answer_0@plt>
    c27a:	83 c4 10             	add    $0x10,%esp
    c27d:	e9 02 ff ff ff       	jmp    c184 <remote_usbhid_get_report_descriptor+0x54>
    c282:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c289:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000c290 <remote_usbhid_get_report_descriptor_length>:
    c290:	55                   	push   %ebp
    c291:	89 e5                	mov    %esp,%ebp
    c293:	53                   	push   %ebx
    c294:	50                   	push   %eax
    c295:	8b 45 0c             	mov    0xc(%ebp),%eax
    c298:	8b 55 08             	mov    0x8(%ebp),%edx
    c29b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    c29e:	8b 40 08             	mov    0x8(%eax),%eax
    c2a1:	85 c0                	test   %eax,%eax
    c2a3:	74 23                	je     c2c8 <remote_usbhid_get_report_descriptor_length+0x38>
    c2a5:	83 ec 0c             	sub    $0xc,%esp
    c2a8:	52                   	push   %edx
    c2a9:	ff d0                	call   *%eax
    c2ab:	89 5d 08             	mov    %ebx,0x8(%ebp)
    c2ae:	83 c4 10             	add    $0x10,%esp
    c2b1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    c2b4:	89 45 10             	mov    %eax,0x10(%ebp)
    c2b7:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
    c2be:	c9                   	leave  
    c2bf:	e9 9c 34 00 00       	jmp    f760 <async_answer_1@plt>
    c2c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c2c8:	89 5d 08             	mov    %ebx,0x8(%ebp)
    c2cb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    c2ce:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    c2d5:	c9                   	leave  
    c2d6:	e9 25 32 00 00       	jmp    f500 <async_answer_0@plt>
    c2db:	90                   	nop
    c2dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000c2e0 <remote_usbhid_get_event>:
    c2e0:	55                   	push   %ebp
    c2e1:	89 e5                	mov    %esp,%ebp
    c2e3:	57                   	push   %edi
    c2e4:	56                   	push   %esi
    c2e5:	53                   	push   %ebx
    c2e6:	83 ec 1c             	sub    $0x1c,%esp
    c2e9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    c2ec:	8b 4b 04             	mov    0x4(%ebx),%ecx
    c2ef:	85 c9                	test   %ecx,%ecx
    c2f1:	0f 84 11 01 00 00    	je     c408 <remote_usbhid_get_event+0x128>
    c2f7:	8b 45 14             	mov    0x14(%ebp),%eax
    c2fa:	8b 70 08             	mov    0x8(%eax),%esi
    c2fd:	50                   	push   %eax
    c2fe:	50                   	push   %eax
    c2ff:	8d 45 d8             	lea    -0x28(%ebp),%eax
    c302:	50                   	push   %eax
    c303:	8d 45 dc             	lea    -0x24(%ebp),%eax
    c306:	50                   	push   %eax
    c307:	e8 c4 33 00 00       	call   f6d0 <async_data_read_receive@plt>
    c30c:	83 c4 10             	add    $0x10,%esp
    c30f:	84 c0                	test   %al,%al
    c311:	0f 84 a9 00 00 00    	je     c3c0 <remote_usbhid_get_event+0xe0>
    c317:	8b 45 d8             	mov    -0x28(%ebp),%eax
    c31a:	85 c0                	test   %eax,%eax
    c31c:	75 2a                	jne    c348 <remote_usbhid_get_event+0x68>
    c31e:	8b 75 dc             	mov    -0x24(%ebp),%esi
    c321:	53                   	push   %ebx
    c322:	53                   	push   %ebx
    c323:	6a f2                	push   $0xfffffff2
    c325:	56                   	push   %esi
    c326:	e8 d5 31 00 00       	call   f500 <async_answer_0@plt>
    c32b:	5f                   	pop    %edi
    c32c:	58                   	pop    %eax
    c32d:	8b 45 10             	mov    0x10(%ebp),%eax
    c330:	6a f2                	push   $0xfffffff2
    c332:	50                   	push   %eax
    c333:	e8 c8 31 00 00       	call   f500 <async_answer_0@plt>
    c338:	83 c4 10             	add    $0x10,%esp
    c33b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c33e:	5b                   	pop    %ebx
    c33f:	5e                   	pop    %esi
    c340:	5f                   	pop    %edi
    c341:	5d                   	pop    %ebp
    c342:	c3                   	ret    
    c343:	90                   	nop
    c344:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c348:	83 ec 0c             	sub    $0xc,%esp
    c34b:	50                   	push   %eax
    c34c:	e8 6f 31 00 00       	call   f4c0 <malloc@plt>
    c351:	83 c4 10             	add    $0x10,%esp
    c354:	89 c7                	mov    %eax,%edi
    c356:	85 c0                	test   %eax,%eax
    c358:	0f 84 c2 00 00 00    	je     c420 <remote_usbhid_get_event+0x140>
    c35e:	50                   	push   %eax
    c35f:	50                   	push   %eax
    c360:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    c363:	56                   	push   %esi
    c364:	50                   	push   %eax
    c365:	8d 45 e0             	lea    -0x20(%ebp),%eax
    c368:	50                   	push   %eax
    c369:	8b 45 d8             	mov    -0x28(%ebp),%eax
    c36c:	50                   	push   %eax
    c36d:	8b 45 08             	mov    0x8(%ebp),%eax
    c370:	57                   	push   %edi
    c371:	50                   	push   %eax
    c372:	ff 53 04             	call   *0x4(%ebx)
    c375:	83 c4 20             	add    $0x20,%esp
    c378:	89 c3                	mov    %eax,%ebx
    c37a:	85 c0                	test   %eax,%eax
    c37c:	75 5a                	jne    c3d8 <remote_usbhid_get_event+0xf8>
    c37e:	8b 45 e0             	mov    -0x20(%ebp),%eax
    c381:	8b 55 d8             	mov    -0x28(%ebp),%edx
    c384:	39 d0                	cmp    %edx,%eax
    c386:	72 05                	jb     c38d <remote_usbhid_get_event+0xad>
    c388:	89 55 e0             	mov    %edx,-0x20(%ebp)
    c38b:	89 d0                	mov    %edx,%eax
    c38d:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    c390:	52                   	push   %edx
    c391:	50                   	push   %eax
    c392:	57                   	push   %edi
    c393:	51                   	push   %ecx
    c394:	e8 c7 30 00 00       	call   f460 <async_data_read_finalize@plt>
    c399:	89 3c 24             	mov    %edi,(%esp)
    c39c:	e8 bf 34 00 00       	call   f860 <free@plt>
    c3a1:	83 c4 0c             	add    $0xc,%esp
    c3a4:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
    c3a7:	8b 75 10             	mov    0x10(%ebp),%esi
    c3aa:	53                   	push   %ebx
    c3ab:	6a 00                	push   $0x0
    c3ad:	56                   	push   %esi
    c3ae:	e8 ad 33 00 00       	call   f760 <async_answer_1@plt>
    c3b3:	83 c4 10             	add    $0x10,%esp
    c3b6:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c3b9:	5b                   	pop    %ebx
    c3ba:	5e                   	pop    %esi
    c3bb:	5f                   	pop    %edi
    c3bc:	5d                   	pop    %ebp
    c3bd:	c3                   	ret    
    c3be:	66 90                	xchg   %ax,%ax
    c3c0:	50                   	push   %eax
    c3c1:	50                   	push   %eax
    c3c2:	8b 45 10             	mov    0x10(%ebp),%eax
    c3c5:	6a f8                	push   $0xfffffff8
    c3c7:	50                   	push   %eax
    c3c8:	e8 33 31 00 00       	call   f500 <async_answer_0@plt>
    c3cd:	83 c4 10             	add    $0x10,%esp
    c3d0:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c3d3:	5b                   	pop    %ebx
    c3d4:	5e                   	pop    %esi
    c3d5:	5f                   	pop    %edi
    c3d6:	5d                   	pop    %ebp
    c3d7:	c3                   	ret    
    c3d8:	83 ec 0c             	sub    $0xc,%esp
    c3db:	57                   	push   %edi
    c3dc:	e8 7f 34 00 00       	call   f860 <free@plt>
    c3e1:	5f                   	pop    %edi
    c3e2:	58                   	pop    %eax
    c3e3:	8b 45 dc             	mov    -0x24(%ebp),%eax
    c3e6:	53                   	push   %ebx
    c3e7:	50                   	push   %eax
    c3e8:	e8 13 31 00 00       	call   f500 <async_answer_0@plt>
    c3ed:	8b 4d 10             	mov    0x10(%ebp),%ecx
    c3f0:	58                   	pop    %eax
    c3f1:	5a                   	pop    %edx
    c3f2:	53                   	push   %ebx
    c3f3:	51                   	push   %ecx
    c3f4:	e8 07 31 00 00       	call   f500 <async_answer_0@plt>
    c3f9:	83 c4 10             	add    $0x10,%esp
    c3fc:	e9 3a ff ff ff       	jmp    c33b <remote_usbhid_get_event+0x5b>
    c401:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c408:	8b 55 10             	mov    0x10(%ebp),%edx
    c40b:	50                   	push   %eax
    c40c:	50                   	push   %eax
    c40d:	6a f5                	push   $0xfffffff5
    c40f:	52                   	push   %edx
    c410:	e8 eb 30 00 00       	call   f500 <async_answer_0@plt>
    c415:	83 c4 10             	add    $0x10,%esp
    c418:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c41b:	5b                   	pop    %ebx
    c41c:	5e                   	pop    %esi
    c41d:	5f                   	pop    %edi
    c41e:	5d                   	pop    %ebp
    c41f:	c3                   	ret    
    c420:	50                   	push   %eax
    c421:	50                   	push   %eax
    c422:	8b 45 dc             	mov    -0x24(%ebp),%eax
    c425:	6a fe                	push   $0xfffffffe
    c427:	50                   	push   %eax
    c428:	e8 d3 30 00 00       	call   f500 <async_answer_0@plt>
    c42d:	8b 4d 10             	mov    0x10(%ebp),%ecx
    c430:	58                   	pop    %eax
    c431:	5a                   	pop    %edx
    c432:	6a fe                	push   $0xfffffffe
    c434:	51                   	push   %ecx
    c435:	e8 c6 30 00 00       	call   f500 <async_answer_0@plt>
    c43a:	83 c4 10             	add    $0x10,%esp
    c43d:	e9 f9 fe ff ff       	jmp    c33b <remote_usbhid_get_event+0x5b>
    c442:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c449:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000c450 <remote_usbhid_get_event_length>:
    c450:	55                   	push   %ebp
    c451:	89 e5                	mov    %esp,%ebp
    c453:	57                   	push   %edi
    c454:	56                   	push   %esi
    c455:	53                   	push   %ebx
    c456:	83 ec 18             	sub    $0x18,%esp
    c459:	8b 7d 0c             	mov    0xc(%ebp),%edi
    c45c:	8b 75 08             	mov    0x8(%ebp),%esi
    c45f:	68 e8 ef 00 00       	push   $0xefe8
    c464:	8b 5d 10             	mov    0x10(%ebp),%ebx
    c467:	e8 44 2f 00 00       	call   f3b0 <printf@plt>
    c46c:	8b 07                	mov    (%edi),%eax
    c46e:	83 c4 10             	add    $0x10,%esp
    c471:	85 c0                	test   %eax,%eax
    c473:	74 23                	je     c498 <remote_usbhid_get_event_length+0x48>
    c475:	83 ec 0c             	sub    $0xc,%esp
    c478:	56                   	push   %esi
    c479:	ff d0                	call   *%eax
    c47b:	89 5d 08             	mov    %ebx,0x8(%ebp)
    c47e:	89 45 10             	mov    %eax,0x10(%ebp)
    c481:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
    c488:	83 c4 10             	add    $0x10,%esp
    c48b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c48e:	5b                   	pop    %ebx
    c48f:	5e                   	pop    %esi
    c490:	5f                   	pop    %edi
    c491:	5d                   	pop    %ebp
    c492:	e9 c9 32 00 00       	jmp    f760 <async_answer_1@plt>
    c497:	90                   	nop
    c498:	83 ec 0c             	sub    $0xc,%esp
    c49b:	68 0c f0 00 00       	push   $0xf00c
    c4a0:	e8 0b 2f 00 00       	call   f3b0 <printf@plt>
    c4a5:	89 5d 08             	mov    %ebx,0x8(%ebp)
    c4a8:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    c4af:	83 c4 10             	add    $0x10,%esp
    c4b2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c4b5:	5b                   	pop    %ebx
    c4b6:	5e                   	pop    %esi
    c4b7:	5f                   	pop    %edi
    c4b8:	5d                   	pop    %ebp
    c4b9:	e9 42 30 00 00       	jmp    f500 <async_answer_0@plt>
    c4be:	66 90                	xchg   %ax,%ax

0000c4c0 <usbhid_dev_get_event_length>:
    c4c0:	55                   	push   %ebp
    c4c1:	89 e5                	mov    %esp,%ebp
    c4c3:	56                   	push   %esi
    c4c4:	53                   	push   %ebx
    c4c5:	83 ec 20             	sub    $0x20,%esp
    c4c8:	8b 45 08             	mov    0x8(%ebp),%eax
    c4cb:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    c4ce:	85 c0                	test   %eax,%eax
    c4d0:	74 56                	je     c528 <usbhid_dev_get_event_length+0x68>
    c4d2:	83 ec 0c             	sub    $0xc,%esp
    c4d5:	50                   	push   %eax
    c4d6:	e8 95 32 00 00       	call   f770 <async_exchange_begin@plt>
    c4db:	83 c4 0c             	add    $0xc,%esp
    c4de:	89 c6                	mov    %eax,%esi
    c4e0:	8d 45 f4             	lea    -0xc(%ebp),%eax
    c4e3:	6a 00                	push   $0x0
    c4e5:	6a 00                	push   $0x0
    c4e7:	6a 00                	push   $0x0
    c4e9:	6a 00                	push   $0x0
    c4eb:	50                   	push   %eax
    c4ec:	6a 00                	push   $0x0
    c4ee:	6a 00                	push   $0x0
    c4f0:	6a 00                	push   $0x0
    c4f2:	6a 00                	push   $0x0
    c4f4:	68 0a 04 00 00       	push   $0x40a
    c4f9:	56                   	push   %esi
    c4fa:	e8 f1 2f 00 00       	call   f4f0 <async_req_fast@plt>
    c4ff:	83 c4 24             	add    $0x24,%esp
    c502:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    c505:	56                   	push   %esi
    c506:	e8 45 30 00 00       	call   f550 <async_exchange_end@plt>
    c50b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    c50e:	83 c4 10             	add    $0x10,%esp
    c511:	85 c0                	test   %eax,%eax
    c513:	75 09                	jne    c51e <usbhid_dev_get_event_length+0x5e>
    c515:	85 db                	test   %ebx,%ebx
    c517:	74 05                	je     c51e <usbhid_dev_get_event_length+0x5e>
    c519:	8b 55 f4             	mov    -0xc(%ebp),%edx
    c51c:	89 13                	mov    %edx,(%ebx)
    c51e:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c521:	5b                   	pop    %ebx
    c522:	5e                   	pop    %esi
    c523:	5d                   	pop    %ebp
    c524:	c3                   	ret    
    c525:	8d 76 00             	lea    0x0(%esi),%esi
    c528:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    c52d:	eb ef                	jmp    c51e <usbhid_dev_get_event_length+0x5e>
    c52f:	90                   	nop

0000c530 <usbhid_dev_get_event>:
    c530:	55                   	push   %ebp
    c531:	89 e5                	mov    %esp,%ebp
    c533:	57                   	push   %edi
    c534:	56                   	push   %esi
    c535:	53                   	push   %ebx
    c536:	83 ec 6c             	sub    $0x6c,%esp
    c539:	8b 75 08             	mov    0x8(%ebp),%esi
    c53c:	8b 5d 10             	mov    0x10(%ebp),%ebx
    c53f:	85 f6                	test   %esi,%esi
    c541:	0f 84 01 01 00 00    	je     c648 <usbhid_dev_get_event+0x118>
    c547:	8b 45 0c             	mov    0xc(%ebp),%eax
    c54a:	85 c0                	test   %eax,%eax
    c54c:	0f 84 12 01 00 00    	je     c664 <usbhid_dev_get_event+0x134>
    c552:	85 db                	test   %ebx,%ebx
    c554:	0f 84 ee 00 00 00    	je     c648 <usbhid_dev_get_event+0x118>
    c55a:	83 ec 0c             	sub    $0xc,%esp
    c55d:	53                   	push   %ebx
    c55e:	e8 5d 2f 00 00       	call   f4c0 <malloc@plt>
    c563:	83 c4 10             	add    $0x10,%esp
    c566:	89 c7                	mov    %eax,%edi
    c568:	85 c0                	test   %eax,%eax
    c56a:	0f 84 f4 00 00 00    	je     c664 <usbhid_dev_get_event+0x134>
    c570:	83 ec 0c             	sub    $0xc,%esp
    c573:	56                   	push   %esi
    c574:	e8 f7 31 00 00       	call   f770 <async_exchange_begin@plt>
    c579:	83 c4 0c             	add    $0xc,%esp
    c57c:	89 c6                	mov    %eax,%esi
    c57e:	8d 45 a0             	lea    -0x60(%ebp),%eax
    c581:	50                   	push   %eax
    c582:	8b 45 1c             	mov    0x1c(%ebp),%eax
    c585:	6a 00                	push   $0x0
    c587:	6a 00                	push   $0x0
    c589:	50                   	push   %eax
    c58a:	6a 01                	push   $0x1
    c58c:	68 0a 04 00 00       	push   $0x40a
    c591:	56                   	push   %esi
    c592:	e8 79 2f 00 00       	call   f510 <async_send_fast@plt>
    c597:	83 c4 20             	add    $0x20,%esp
    c59a:	89 45 94             	mov    %eax,-0x6c(%ebp)
    c59d:	85 c0                	test   %eax,%eax
    c59f:	0f 84 ab 00 00 00    	je     c650 <usbhid_dev_get_event+0x120>
    c5a5:	8d 45 c4             	lea    -0x3c(%ebp),%eax
    c5a8:	50                   	push   %eax
    c5a9:	53                   	push   %ebx
    c5aa:	57                   	push   %edi
    c5ab:	56                   	push   %esi
    c5ac:	e8 6f 2f 00 00       	call   f520 <async_data_read@plt>
    c5b1:	89 34 24             	mov    %esi,(%esp)
    c5b4:	89 c3                	mov    %eax,%ebx
    c5b6:	e8 95 2f 00 00       	call   f550 <async_exchange_end@plt>
    c5bb:	83 c4 10             	add    $0x10,%esp
    c5be:	85 db                	test   %ebx,%ebx
    c5c0:	0f 84 aa 00 00 00    	je     c670 <usbhid_dev_get_event+0x140>
    c5c6:	50                   	push   %eax
    c5c7:	50                   	push   %eax
    c5c8:	8d 45 98             	lea    -0x68(%ebp),%eax
    c5cb:	50                   	push   %eax
    c5cc:	53                   	push   %ebx
    c5cd:	e8 fe 2d 00 00       	call   f3d0 <async_wait_for@plt>
    c5d2:	58                   	pop    %eax
    c5d3:	8b 4d 94             	mov    -0x6c(%ebp),%ecx
    c5d6:	8d 45 9c             	lea    -0x64(%ebp),%eax
    c5d9:	5a                   	pop    %edx
    c5da:	50                   	push   %eax
    c5db:	51                   	push   %ecx
    c5dc:	e8 ef 2d 00 00       	call   f3d0 <async_wait_for@plt>
    c5e1:	8b 45 98             	mov    -0x68(%ebp),%eax
    c5e4:	83 c4 10             	add    $0x10,%esp
    c5e7:	85 c0                	test   %eax,%eax
    c5e9:	74 15                	je     c600 <usbhid_dev_get_event+0xd0>
    c5eb:	8b 55 9c             	mov    -0x64(%ebp),%edx
    c5ee:	85 d2                	test   %edx,%edx
    c5f0:	74 15                	je     c607 <usbhid_dev_get_event+0xd7>
    c5f2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c5f5:	89 d0                	mov    %edx,%eax
    c5f7:	5b                   	pop    %ebx
    c5f8:	5e                   	pop    %esi
    c5f9:	5f                   	pop    %edi
    c5fa:	5d                   	pop    %ebp
    c5fb:	c3                   	ret    
    c5fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c600:	8b 45 9c             	mov    -0x64(%ebp),%eax
    c603:	85 c0                	test   %eax,%eax
    c605:	74 09                	je     c610 <usbhid_dev_get_event+0xe0>
    c607:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c60a:	5b                   	pop    %ebx
    c60b:	5e                   	pop    %esi
    c60c:	5f                   	pop    %edi
    c60d:	5d                   	pop    %ebp
    c60e:	c3                   	ret    
    c60f:	90                   	nop
    c610:	8b 5d cc             	mov    -0x34(%ebp),%ebx
    c613:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    c616:	52                   	push   %edx
    c617:	53                   	push   %ebx
    c618:	57                   	push   %edi
    c619:	51                   	push   %ecx
    c61a:	e8 71 2e 00 00       	call   f490 <memcpy@plt>
    c61f:	8b 75 14             	mov    0x14(%ebp),%esi
    c622:	83 c4 10             	add    $0x10,%esp
    c625:	85 f6                	test   %esi,%esi
    c627:	74 05                	je     c62e <usbhid_dev_get_event+0xfe>
    c629:	8b 45 14             	mov    0x14(%ebp),%eax
    c62c:	89 18                	mov    %ebx,(%eax)
    c62e:	8b 45 18             	mov    0x18(%ebp),%eax
    c631:	85 c0                	test   %eax,%eax
    c633:	74 63                	je     c698 <usbhid_dev_get_event+0x168>
    c635:	8b 4d 18             	mov    0x18(%ebp),%ecx
    c638:	8b 45 a4             	mov    -0x5c(%ebp),%eax
    c63b:	89 01                	mov    %eax,(%ecx)
    c63d:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c640:	31 c0                	xor    %eax,%eax
    c642:	5b                   	pop    %ebx
    c643:	5e                   	pop    %esi
    c644:	5f                   	pop    %edi
    c645:	5d                   	pop    %ebp
    c646:	c3                   	ret    
    c647:	90                   	nop
    c648:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    c64d:	eb b8                	jmp    c607 <usbhid_dev_get_event+0xd7>
    c64f:	90                   	nop
    c650:	83 ec 0c             	sub    $0xc,%esp
    c653:	56                   	push   %esi
    c654:	e8 f7 2e 00 00       	call   f550 <async_exchange_end@plt>
    c659:	89 3c 24             	mov    %edi,(%esp)
    c65c:	e8 ff 31 00 00       	call   f860 <free@plt>
    c661:	83 c4 10             	add    $0x10,%esp
    c664:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c669:	eb 9c                	jmp    c607 <usbhid_dev_get_event+0xd7>
    c66b:	90                   	nop
    c66c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c670:	83 ec 0c             	sub    $0xc,%esp
    c673:	8b 5d 94             	mov    -0x6c(%ebp),%ebx
    c676:	53                   	push   %ebx
    c677:	e8 84 31 00 00       	call   f800 <async_forget@plt>
    c67c:	89 3c 24             	mov    %edi,(%esp)
    c67f:	e8 dc 31 00 00       	call   f860 <free@plt>
    c684:	83 c4 10             	add    $0x10,%esp
    c687:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c68c:	e9 76 ff ff ff       	jmp    c607 <usbhid_dev_get_event+0xd7>
    c691:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c698:	31 c0                	xor    %eax,%eax
    c69a:	e9 68 ff ff ff       	jmp    c607 <usbhid_dev_get_event+0xd7>
    c69f:	90                   	nop

0000c6a0 <usbhid_dev_get_report_descriptor_length>:
    c6a0:	55                   	push   %ebp
    c6a1:	89 e5                	mov    %esp,%ebp
    c6a3:	56                   	push   %esi
    c6a4:	53                   	push   %ebx
    c6a5:	83 ec 20             	sub    $0x20,%esp
    c6a8:	8b 45 08             	mov    0x8(%ebp),%eax
    c6ab:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    c6ae:	85 c0                	test   %eax,%eax
    c6b0:	74 56                	je     c708 <usbhid_dev_get_report_descriptor_length+0x68>
    c6b2:	83 ec 0c             	sub    $0xc,%esp
    c6b5:	50                   	push   %eax
    c6b6:	e8 b5 30 00 00       	call   f770 <async_exchange_begin@plt>
    c6bb:	83 c4 0c             	add    $0xc,%esp
    c6be:	89 c6                	mov    %eax,%esi
    c6c0:	8d 45 f4             	lea    -0xc(%ebp),%eax
    c6c3:	6a 00                	push   $0x0
    c6c5:	6a 00                	push   $0x0
    c6c7:	6a 00                	push   $0x0
    c6c9:	6a 00                	push   $0x0
    c6cb:	50                   	push   %eax
    c6cc:	6a 00                	push   $0x0
    c6ce:	6a 00                	push   $0x0
    c6d0:	6a 00                	push   $0x0
    c6d2:	6a 02                	push   $0x2
    c6d4:	68 0a 04 00 00       	push   $0x40a
    c6d9:	56                   	push   %esi
    c6da:	e8 11 2e 00 00       	call   f4f0 <async_req_fast@plt>
    c6df:	83 c4 24             	add    $0x24,%esp
    c6e2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    c6e5:	56                   	push   %esi
    c6e6:	e8 65 2e 00 00       	call   f550 <async_exchange_end@plt>
    c6eb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    c6ee:	83 c4 10             	add    $0x10,%esp
    c6f1:	85 c0                	test   %eax,%eax
    c6f3:	75 09                	jne    c6fe <usbhid_dev_get_report_descriptor_length+0x5e>
    c6f5:	85 db                	test   %ebx,%ebx
    c6f7:	74 05                	je     c6fe <usbhid_dev_get_report_descriptor_length+0x5e>
    c6f9:	8b 55 f4             	mov    -0xc(%ebp),%edx
    c6fc:	89 13                	mov    %edx,(%ebx)
    c6fe:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c701:	5b                   	pop    %ebx
    c702:	5e                   	pop    %esi
    c703:	5d                   	pop    %ebp
    c704:	c3                   	ret    
    c705:	8d 76 00             	lea    0x0(%esi),%esi
    c708:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    c70d:	eb ef                	jmp    c6fe <usbhid_dev_get_report_descriptor_length+0x5e>
    c70f:	90                   	nop

0000c710 <usbhid_dev_get_report_descriptor>:
    c710:	55                   	push   %ebp
    c711:	89 e5                	mov    %esp,%ebp
    c713:	57                   	push   %edi
    c714:	56                   	push   %esi
    c715:	53                   	push   %ebx
    c716:	83 ec 3c             	sub    $0x3c,%esp
    c719:	8b 45 08             	mov    0x8(%ebp),%eax
    c71c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    c71f:	85 c0                	test   %eax,%eax
    c721:	0f 84 c1 00 00 00    	je     c7e8 <usbhid_dev_get_report_descriptor+0xd8>
    c727:	85 db                	test   %ebx,%ebx
    c729:	0f 84 f5 00 00 00    	je     c824 <usbhid_dev_get_report_descriptor+0x114>
    c72f:	8b 55 10             	mov    0x10(%ebp),%edx
    c732:	85 d2                	test   %edx,%edx
    c734:	0f 84 ae 00 00 00    	je     c7e8 <usbhid_dev_get_report_descriptor+0xd8>
    c73a:	83 ec 0c             	sub    $0xc,%esp
    c73d:	50                   	push   %eax
    c73e:	e8 2d 30 00 00       	call   f770 <async_exchange_begin@plt>
    c743:	83 c4 0c             	add    $0xc,%esp
    c746:	89 c6                	mov    %eax,%esi
    c748:	6a 00                	push   $0x0
    c74a:	6a 00                	push   $0x0
    c74c:	6a 00                	push   $0x0
    c74e:	6a 00                	push   $0x0
    c750:	6a 03                	push   $0x3
    c752:	68 0a 04 00 00       	push   $0x40a
    c757:	50                   	push   %eax
    c758:	e8 b3 2d 00 00       	call   f510 <async_send_fast@plt>
    c75d:	83 c4 20             	add    $0x20,%esp
    c760:	89 c7                	mov    %eax,%edi
    c762:	85 c0                	test   %eax,%eax
    c764:	0f 84 86 00 00 00    	je     c7f0 <usbhid_dev_get_report_descriptor+0xe0>
    c76a:	8d 45 c4             	lea    -0x3c(%ebp),%eax
    c76d:	50                   	push   %eax
    c76e:	8b 45 10             	mov    0x10(%ebp),%eax
    c771:	50                   	push   %eax
    c772:	53                   	push   %ebx
    c773:	56                   	push   %esi
    c774:	e8 a7 2d 00 00       	call   f520 <async_data_read@plt>
    c779:	89 c3                	mov    %eax,%ebx
    c77b:	89 34 24             	mov    %esi,(%esp)
    c77e:	e8 cd 2d 00 00       	call   f550 <async_exchange_end@plt>
    c783:	83 c4 10             	add    $0x10,%esp
    c786:	85 db                	test   %ebx,%ebx
    c788:	74 7e                	je     c808 <usbhid_dev_get_report_descriptor+0xf8>
    c78a:	8d 45 bc             	lea    -0x44(%ebp),%eax
    c78d:	51                   	push   %ecx
    c78e:	51                   	push   %ecx
    c78f:	50                   	push   %eax
    c790:	53                   	push   %ebx
    c791:	e8 3a 2c 00 00       	call   f3d0 <async_wait_for@plt>
    c796:	8d 45 c0             	lea    -0x40(%ebp),%eax
    c799:	5b                   	pop    %ebx
    c79a:	5e                   	pop    %esi
    c79b:	50                   	push   %eax
    c79c:	57                   	push   %edi
    c79d:	e8 2e 2c 00 00       	call   f3d0 <async_wait_for@plt>
    c7a2:	8b 45 bc             	mov    -0x44(%ebp),%eax
    c7a5:	83 c4 10             	add    $0x10,%esp
    c7a8:	85 c0                	test   %eax,%eax
    c7aa:	75 24                	jne    c7d0 <usbhid_dev_get_report_descriptor+0xc0>
    c7ac:	8b 45 c0             	mov    -0x40(%ebp),%eax
    c7af:	85 c0                	test   %eax,%eax
    c7b1:	75 11                	jne    c7c4 <usbhid_dev_get_report_descriptor+0xb4>
    c7b3:	8b 55 14             	mov    0x14(%ebp),%edx
    c7b6:	8b 45 cc             	mov    -0x34(%ebp),%eax
    c7b9:	85 d2                	test   %edx,%edx
    c7bb:	74 63                	je     c820 <usbhid_dev_get_report_descriptor+0x110>
    c7bd:	8b 4d 14             	mov    0x14(%ebp),%ecx
    c7c0:	89 01                	mov    %eax,(%ecx)
    c7c2:	31 c0                	xor    %eax,%eax
    c7c4:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c7c7:	5b                   	pop    %ebx
    c7c8:	5e                   	pop    %esi
    c7c9:	5f                   	pop    %edi
    c7ca:	5d                   	pop    %ebp
    c7cb:	c3                   	ret    
    c7cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c7d0:	8b 55 c0             	mov    -0x40(%ebp),%edx
    c7d3:	85 d2                	test   %edx,%edx
    c7d5:	74 ed                	je     c7c4 <usbhid_dev_get_report_descriptor+0xb4>
    c7d7:	8d 65 f4             	lea    -0xc(%ebp),%esp
    c7da:	89 d0                	mov    %edx,%eax
    c7dc:	5b                   	pop    %ebx
    c7dd:	5e                   	pop    %esi
    c7de:	5f                   	pop    %edi
    c7df:	5d                   	pop    %ebp
    c7e0:	c3                   	ret    
    c7e1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c7e8:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    c7ed:	eb d5                	jmp    c7c4 <usbhid_dev_get_report_descriptor+0xb4>
    c7ef:	90                   	nop
    c7f0:	83 ec 0c             	sub    $0xc,%esp
    c7f3:	56                   	push   %esi
    c7f4:	e8 57 2d 00 00       	call   f550 <async_exchange_end@plt>
    c7f9:	83 c4 10             	add    $0x10,%esp
    c7fc:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c801:	eb c1                	jmp    c7c4 <usbhid_dev_get_report_descriptor+0xb4>
    c803:	90                   	nop
    c804:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c808:	83 ec 0c             	sub    $0xc,%esp
    c80b:	57                   	push   %edi
    c80c:	e8 ef 2f 00 00       	call   f800 <async_forget@plt>
    c811:	83 c4 10             	add    $0x10,%esp
    c814:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c819:	eb a9                	jmp    c7c4 <usbhid_dev_get_report_descriptor+0xb4>
    c81b:	90                   	nop
    c81c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c820:	31 c0                	xor    %eax,%eax
    c822:	eb a0                	jmp    c7c4 <usbhid_dev_get_report_descriptor+0xb4>
    c824:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c829:	eb 99                	jmp    c7c4 <usbhid_dev_get_report_descriptor+0xb4>
    c82b:	66 90                	xchg   %ax,%ax
    c82d:	66 90                	xchg   %ax,%ax
    c82f:	90                   	nop

0000c830 <remote_clock_time_set>:
    c830:	55                   	push   %ebp
    c831:	89 e5                	mov    %esp,%ebp
    c833:	56                   	push   %esi
    c834:	53                   	push   %ebx
    c835:	83 ec 38             	sub    $0x38,%esp
    c838:	8d 45 cc             	lea    -0x34(%ebp),%eax
    c83b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    c83e:	50                   	push   %eax
    c83f:	8d 45 c8             	lea    -0x38(%ebp),%eax
    c842:	50                   	push   %eax
    c843:	e8 08 30 00 00       	call   f850 <async_data_write_receive@plt>
    c848:	83 c4 10             	add    $0x10,%esp
    c84b:	84 c0                	test   %al,%al
    c84d:	74 39                	je     c888 <remote_clock_time_set+0x58>
    c84f:	8b 73 04             	mov    0x4(%ebx),%esi
    c852:	85 f6                	test   %esi,%esi
    c854:	74 4a                	je     c8a0 <remote_clock_time_set+0x70>
    c856:	8b 55 c8             	mov    -0x38(%ebp),%edx
    c859:	8d 75 d0             	lea    -0x30(%ebp),%esi
    c85c:	50                   	push   %eax
    c85d:	6a 28                	push   $0x28
    c85f:	56                   	push   %esi
    c860:	52                   	push   %edx
    c861:	e8 7a 2f 00 00       	call   f7e0 <async_data_write_finalize@plt>
    c866:	59                   	pop    %ecx
    c867:	58                   	pop    %eax
    c868:	8b 45 08             	mov    0x8(%ebp),%eax
    c86b:	56                   	push   %esi
    c86c:	50                   	push   %eax
    c86d:	ff 53 04             	call   *0x4(%ebx)
    c870:	8b 5d 10             	mov    0x10(%ebp),%ebx
    c873:	5a                   	pop    %edx
    c874:	59                   	pop    %ecx
    c875:	50                   	push   %eax
    c876:	53                   	push   %ebx
    c877:	e8 84 2c 00 00       	call   f500 <async_answer_0@plt>
    c87c:	83 c4 10             	add    $0x10,%esp
    c87f:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c882:	5b                   	pop    %ebx
    c883:	5e                   	pop    %esi
    c884:	5d                   	pop    %ebp
    c885:	c3                   	ret    
    c886:	66 90                	xchg   %ax,%ax
    c888:	50                   	push   %eax
    c889:	50                   	push   %eax
    c88a:	8b 45 10             	mov    0x10(%ebp),%eax
    c88d:	6a f2                	push   $0xfffffff2
    c88f:	50                   	push   %eax
    c890:	e8 6b 2c 00 00       	call   f500 <async_answer_0@plt>
    c895:	83 c4 10             	add    $0x10,%esp
    c898:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c89b:	5b                   	pop    %ebx
    c89c:	5e                   	pop    %esi
    c89d:	5d                   	pop    %ebp
    c89e:	c3                   	ret    
    c89f:	90                   	nop
    c8a0:	8b 45 c8             	mov    -0x38(%ebp),%eax
    c8a3:	56                   	push   %esi
    c8a4:	56                   	push   %esi
    c8a5:	6a f5                	push   $0xfffffff5
    c8a7:	50                   	push   %eax
    c8a8:	e8 53 2c 00 00       	call   f500 <async_answer_0@plt>
    c8ad:	8b 4d 10             	mov    0x10(%ebp),%ecx
    c8b0:	58                   	pop    %eax
    c8b1:	5a                   	pop    %edx
    c8b2:	6a f5                	push   $0xfffffff5
    c8b4:	51                   	push   %ecx
    c8b5:	e8 46 2c 00 00       	call   f500 <async_answer_0@plt>
    c8ba:	83 c4 10             	add    $0x10,%esp
    c8bd:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c8c0:	5b                   	pop    %ebx
    c8c1:	5e                   	pop    %esi
    c8c2:	5d                   	pop    %ebp
    c8c3:	c3                   	ret    
    c8c4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    c8ca:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0000c8d0 <remote_clock_time_get>:
    c8d0:	55                   	push   %ebp
    c8d1:	89 e5                	mov    %esp,%ebp
    c8d3:	56                   	push   %esi
    c8d4:	53                   	push   %ebx
    c8d5:	83 ec 38             	sub    $0x38,%esp
    c8d8:	8d 45 cc             	lea    -0x34(%ebp),%eax
    c8db:	50                   	push   %eax
    c8dc:	8d 45 c8             	lea    -0x38(%ebp),%eax
    c8df:	50                   	push   %eax
    c8e0:	e8 eb 2d 00 00       	call   f6d0 <async_data_read_receive@plt>
    c8e5:	83 c4 10             	add    $0x10,%esp
    c8e8:	84 c0                	test   %al,%al
    c8ea:	74 6c                	je     c958 <remote_clock_time_get+0x88>
    c8ec:	8b 45 0c             	mov    0xc(%ebp),%eax
    c8ef:	8b 00                	mov    (%eax),%eax
    c8f1:	85 c0                	test   %eax,%eax
    c8f3:	74 7b                	je     c970 <remote_clock_time_get+0xa0>
    c8f5:	8b 55 08             	mov    0x8(%ebp),%edx
    c8f8:	8d 75 d0             	lea    -0x30(%ebp),%esi
    c8fb:	53                   	push   %ebx
    c8fc:	53                   	push   %ebx
    c8fd:	56                   	push   %esi
    c8fe:	52                   	push   %edx
    c8ff:	ff d0                	call   *%eax
    c901:	83 c4 10             	add    $0x10,%esp
    c904:	89 c3                	mov    %eax,%ebx
    c906:	85 c0                	test   %eax,%eax
    c908:	74 26                	je     c930 <remote_clock_time_get+0x60>
    c90a:	50                   	push   %eax
    c90b:	50                   	push   %eax
    c90c:	8b 45 c8             	mov    -0x38(%ebp),%eax
    c90f:	53                   	push   %ebx
    c910:	50                   	push   %eax
    c911:	e8 ea 2b 00 00       	call   f500 <async_answer_0@plt>
    c916:	8b 4d 10             	mov    0x10(%ebp),%ecx
    c919:	58                   	pop    %eax
    c91a:	5a                   	pop    %edx
    c91b:	53                   	push   %ebx
    c91c:	51                   	push   %ecx
    c91d:	e8 de 2b 00 00       	call   f500 <async_answer_0@plt>
    c922:	83 c4 10             	add    $0x10,%esp
    c925:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c928:	5b                   	pop    %ebx
    c929:	5e                   	pop    %esi
    c92a:	5d                   	pop    %ebp
    c92b:	c3                   	ret    
    c92c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c930:	8b 55 c8             	mov    -0x38(%ebp),%edx
    c933:	50                   	push   %eax
    c934:	6a 28                	push   $0x28
    c936:	56                   	push   %esi
    c937:	52                   	push   %edx
    c938:	e8 23 2b 00 00       	call   f460 <async_data_read_finalize@plt>
    c93d:	8b 75 10             	mov    0x10(%ebp),%esi
    c940:	59                   	pop    %ecx
    c941:	5b                   	pop    %ebx
    c942:	6a 00                	push   $0x0
    c944:	56                   	push   %esi
    c945:	e8 b6 2b 00 00       	call   f500 <async_answer_0@plt>
    c94a:	83 c4 10             	add    $0x10,%esp
    c94d:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c950:	5b                   	pop    %ebx
    c951:	5e                   	pop    %esi
    c952:	5d                   	pop    %ebp
    c953:	c3                   	ret    
    c954:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c958:	50                   	push   %eax
    c959:	50                   	push   %eax
    c95a:	8b 45 10             	mov    0x10(%ebp),%eax
    c95d:	6a f2                	push   $0xfffffff2
    c95f:	50                   	push   %eax
    c960:	e8 9b 2b 00 00       	call   f500 <async_answer_0@plt>
    c965:	83 c4 10             	add    $0x10,%esp
    c968:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c96b:	5b                   	pop    %ebx
    c96c:	5e                   	pop    %esi
    c96d:	5d                   	pop    %ebp
    c96e:	c3                   	ret    
    c96f:	90                   	nop
    c970:	8b 5d c8             	mov    -0x38(%ebp),%ebx
    c973:	51                   	push   %ecx
    c974:	51                   	push   %ecx
    c975:	6a f5                	push   $0xfffffff5
    c977:	53                   	push   %ebx
    c978:	e8 83 2b 00 00       	call   f500 <async_answer_0@plt>
    c97d:	5e                   	pop    %esi
    c97e:	58                   	pop    %eax
    c97f:	8b 45 10             	mov    0x10(%ebp),%eax
    c982:	6a f5                	push   $0xfffffff5
    c984:	50                   	push   %eax
    c985:	e8 76 2b 00 00       	call   f500 <async_answer_0@plt>
    c98a:	83 c4 10             	add    $0x10,%esp
    c98d:	8d 65 f8             	lea    -0x8(%ebp),%esp
    c990:	5b                   	pop    %ebx
    c991:	5e                   	pop    %esi
    c992:	5d                   	pop    %ebp
    c993:	c3                   	ret    
    c994:	66 90                	xchg   %ax,%ax
    c996:	66 90                	xchg   %ax,%ax
    c998:	66 90                	xchg   %ax,%ax
    c99a:	66 90                	xchg   %ax,%ax
    c99c:	66 90                	xchg   %ax,%ax
    c99e:	66 90                	xchg   %ax,%ax

0000c9a0 <remote_led_color_set>:
    c9a0:	55                   	push   %ebp
    c9a1:	89 e5                	mov    %esp,%ebp
    c9a3:	53                   	push   %ebx
    c9a4:	50                   	push   %eax
    c9a5:	8b 45 14             	mov    0x14(%ebp),%eax
    c9a8:	8b 55 08             	mov    0x8(%ebp),%edx
    c9ab:	8b 5d 10             	mov    0x10(%ebp),%ebx
    c9ae:	8b 48 08             	mov    0x8(%eax),%ecx
    c9b1:	8b 45 0c             	mov    0xc(%ebp),%eax
    c9b4:	8b 00                	mov    (%eax),%eax
    c9b6:	85 c0                	test   %eax,%eax
    c9b8:	74 1e                	je     c9d8 <remote_led_color_set+0x38>
    c9ba:	83 ec 08             	sub    $0x8,%esp
    c9bd:	51                   	push   %ecx
    c9be:	52                   	push   %edx
    c9bf:	ff d0                	call   *%eax
    c9c1:	89 5d 08             	mov    %ebx,0x8(%ebp)
    c9c4:	83 c4 10             	add    $0x10,%esp
    c9c7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    c9ca:	89 45 0c             	mov    %eax,0xc(%ebp)
    c9cd:	c9                   	leave  
    c9ce:	e9 2d 2b 00 00       	jmp    f500 <async_answer_0@plt>
    c9d3:	90                   	nop
    c9d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c9d8:	89 5d 08             	mov    %ebx,0x8(%ebp)
    c9db:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    c9de:	c7 45 0c f5 ff ff ff 	movl   $0xfffffff5,0xc(%ebp)
    c9e5:	c9                   	leave  
    c9e6:	e9 15 2b 00 00       	jmp    f500 <async_answer_0@plt>
    c9eb:	66 90                	xchg   %ax,%ax
    c9ed:	66 90                	xchg   %ax,%ax
    c9ef:	90                   	nop

0000c9f0 <remote_battery_charge_level_get>:
    c9f0:	55                   	push   %ebp
    c9f1:	89 e5                	mov    %esp,%ebp
    c9f3:	83 ec 18             	sub    $0x18,%esp
    c9f6:	8b 45 0c             	mov    0xc(%ebp),%eax
    c9f9:	8b 40 04             	mov    0x4(%eax),%eax
    c9fc:	85 c0                	test   %eax,%eax
    c9fe:	74 40                	je     ca40 <remote_battery_charge_level_get+0x50>
    ca00:	8b 4d 08             	mov    0x8(%ebp),%ecx
    ca03:	52                   	push   %edx
    ca04:	52                   	push   %edx
    ca05:	8d 55 f4             	lea    -0xc(%ebp),%edx
    ca08:	52                   	push   %edx
    ca09:	51                   	push   %ecx
    ca0a:	ff d0                	call   *%eax
    ca0c:	83 c4 10             	add    $0x10,%esp
    ca0f:	85 c0                	test   %eax,%eax
    ca11:	74 15                	je     ca28 <remote_battery_charge_level_get+0x38>
    ca13:	8b 4d 10             	mov    0x10(%ebp),%ecx
    ca16:	52                   	push   %edx
    ca17:	52                   	push   %edx
    ca18:	50                   	push   %eax
    ca19:	51                   	push   %ecx
    ca1a:	e8 e1 2a 00 00       	call   f500 <async_answer_0@plt>
    ca1f:	83 c4 10             	add    $0x10,%esp
    ca22:	c9                   	leave  
    ca23:	c3                   	ret    
    ca24:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ca28:	8b 55 f4             	mov    -0xc(%ebp),%edx
    ca2b:	8b 4d 10             	mov    0x10(%ebp),%ecx
    ca2e:	50                   	push   %eax
    ca2f:	52                   	push   %edx
    ca30:	6a 00                	push   $0x0
    ca32:	51                   	push   %ecx
    ca33:	e8 28 2d 00 00       	call   f760 <async_answer_1@plt>
    ca38:	83 c4 10             	add    $0x10,%esp
    ca3b:	c9                   	leave  
    ca3c:	c3                   	ret    
    ca3d:	8d 76 00             	lea    0x0(%esi),%esi
    ca40:	50                   	push   %eax
    ca41:	50                   	push   %eax
    ca42:	8b 45 10             	mov    0x10(%ebp),%eax
    ca45:	6a f5                	push   $0xfffffff5
    ca47:	50                   	push   %eax
    ca48:	e8 b3 2a 00 00       	call   f500 <async_answer_0@plt>
    ca4d:	83 c4 10             	add    $0x10,%esp
    ca50:	c9                   	leave  
    ca51:	c3                   	ret    
    ca52:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    ca59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000ca60 <remote_battery_status_get>:
    ca60:	55                   	push   %ebp
    ca61:	89 e5                	mov    %esp,%ebp
    ca63:	83 ec 18             	sub    $0x18,%esp
    ca66:	8b 45 0c             	mov    0xc(%ebp),%eax
    ca69:	8b 00                	mov    (%eax),%eax
    ca6b:	85 c0                	test   %eax,%eax
    ca6d:	74 41                	je     cab0 <remote_battery_status_get+0x50>
    ca6f:	8b 4d 08             	mov    0x8(%ebp),%ecx
    ca72:	52                   	push   %edx
    ca73:	52                   	push   %edx
    ca74:	8d 55 f4             	lea    -0xc(%ebp),%edx
    ca77:	52                   	push   %edx
    ca78:	51                   	push   %ecx
    ca79:	ff d0                	call   *%eax
    ca7b:	83 c4 10             	add    $0x10,%esp
    ca7e:	85 c0                	test   %eax,%eax
    ca80:	74 16                	je     ca98 <remote_battery_status_get+0x38>
    ca82:	8b 4d 10             	mov    0x10(%ebp),%ecx
    ca85:	52                   	push   %edx
    ca86:	52                   	push   %edx
    ca87:	50                   	push   %eax
    ca88:	51                   	push   %ecx
    ca89:	e8 72 2a 00 00       	call   f500 <async_answer_0@plt>
    ca8e:	83 c4 10             	add    $0x10,%esp
    ca91:	c9                   	leave  
    ca92:	c3                   	ret    
    ca93:	90                   	nop
    ca94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ca98:	8b 55 f4             	mov    -0xc(%ebp),%edx
    ca9b:	8b 4d 10             	mov    0x10(%ebp),%ecx
    ca9e:	50                   	push   %eax
    ca9f:	52                   	push   %edx
    caa0:	6a 00                	push   $0x0
    caa2:	51                   	push   %ecx
    caa3:	e8 b8 2c 00 00       	call   f760 <async_answer_1@plt>
    caa8:	83 c4 10             	add    $0x10,%esp
    caab:	c9                   	leave  
    caac:	c3                   	ret    
    caad:	8d 76 00             	lea    0x0(%esi),%esi
    cab0:	50                   	push   %eax
    cab1:	50                   	push   %eax
    cab2:	8b 45 10             	mov    0x10(%ebp),%eax
    cab5:	6a f5                	push   $0xfffffff5
    cab7:	50                   	push   %eax
    cab8:	e8 43 2a 00 00       	call   f500 <async_answer_0@plt>
    cabd:	83 c4 10             	add    $0x10,%esp
    cac0:	c9                   	leave  
    cac1:	c3                   	ret    
    cac2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    cac9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000cad0 <battery_status_get>:
    cad0:	55                   	push   %ebp
    cad1:	89 e5                	mov    %esp,%ebp
    cad3:	53                   	push   %ebx
    cad4:	83 ec 30             	sub    $0x30,%esp
    cad7:	8b 45 08             	mov    0x8(%ebp),%eax
    cada:	50                   	push   %eax
    cadb:	e8 90 2c 00 00       	call   f770 <async_exchange_begin@plt>
    cae0:	83 c4 0c             	add    $0xc,%esp
    cae3:	89 c3                	mov    %eax,%ebx
    cae5:	8d 45 f4             	lea    -0xc(%ebp),%eax
    cae8:	6a 00                	push   $0x0
    caea:	6a 00                	push   $0x0
    caec:	6a 00                	push   $0x0
    caee:	6a 00                	push   $0x0
    caf0:	50                   	push   %eax
    caf1:	6a 00                	push   $0x0
    caf3:	6a 00                	push   $0x0
    caf5:	6a 00                	push   $0x0
    caf7:	6a 00                	push   $0x0
    caf9:	68 0d 04 00 00       	push   $0x40d
    cafe:	53                   	push   %ebx
    caff:	e8 ec 29 00 00       	call   f4f0 <async_req_fast@plt>
    cb04:	83 c4 24             	add    $0x24,%esp
    cb07:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    cb0a:	53                   	push   %ebx
    cb0b:	e8 40 2a 00 00       	call   f550 <async_exchange_end@plt>
    cb10:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    cb13:	83 c4 10             	add    $0x10,%esp
    cb16:	85 c0                	test   %eax,%eax
    cb18:	75 08                	jne    cb22 <battery_status_get+0x52>
    cb1a:	8b 55 0c             	mov    0xc(%ebp),%edx
    cb1d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    cb20:	89 0a                	mov    %ecx,(%edx)
    cb22:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    cb25:	c9                   	leave  
    cb26:	c3                   	ret    
    cb27:	89 f6                	mov    %esi,%esi
    cb29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000cb30 <battery_charge_level_get>:
    cb30:	55                   	push   %ebp
    cb31:	89 e5                	mov    %esp,%ebp
    cb33:	53                   	push   %ebx
    cb34:	83 ec 30             	sub    $0x30,%esp
    cb37:	8b 45 08             	mov    0x8(%ebp),%eax
    cb3a:	50                   	push   %eax
    cb3b:	e8 30 2c 00 00       	call   f770 <async_exchange_begin@plt>
    cb40:	83 c4 0c             	add    $0xc,%esp
    cb43:	89 c3                	mov    %eax,%ebx
    cb45:	8d 45 f4             	lea    -0xc(%ebp),%eax
    cb48:	6a 00                	push   $0x0
    cb4a:	6a 00                	push   $0x0
    cb4c:	6a 00                	push   $0x0
    cb4e:	6a 00                	push   $0x0
    cb50:	50                   	push   %eax
    cb51:	6a 00                	push   $0x0
    cb53:	6a 00                	push   $0x0
    cb55:	6a 00                	push   $0x0
    cb57:	6a 01                	push   $0x1
    cb59:	68 0d 04 00 00       	push   $0x40d
    cb5e:	53                   	push   %ebx
    cb5f:	e8 8c 29 00 00       	call   f4f0 <async_req_fast@plt>
    cb64:	83 c4 24             	add    $0x24,%esp
    cb67:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    cb6a:	53                   	push   %ebx
    cb6b:	e8 e0 29 00 00       	call   f550 <async_exchange_end@plt>
    cb70:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    cb73:	83 c4 10             	add    $0x10,%esp
    cb76:	85 c0                	test   %eax,%eax
    cb78:	75 08                	jne    cb82 <battery_charge_level_get+0x52>
    cb7a:	8b 55 0c             	mov    0xc(%ebp),%edx
    cb7d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    cb80:	89 0a                	mov    %ecx,(%edx)
    cb82:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    cb85:	c9                   	leave  
    cb86:	c3                   	ret    
    cb87:	66 90                	xchg   %ax,%ax
    cb89:	66 90                	xchg   %ax,%ax
    cb8b:	66 90                	xchg   %ax,%ax
    cb8d:	66 90                	xchg   %ax,%ax
    cb8f:	90                   	nop

0000cb90 <remote_ahci_write_blocks>:
    cb90:	55                   	push   %ebp
    cb91:	89 e5                	mov    %esp,%ebp
    cb93:	56                   	push   %esi
    cb94:	53                   	push   %ebx
    cb95:	83 ec 10             	sub    $0x10,%esp
    cb98:	8b 75 0c             	mov    0xc(%ebp),%esi
    cb9b:	8b 5d 14             	mov    0x14(%ebp),%ebx
    cb9e:	8b 46 0c             	mov    0xc(%esi),%eax
    cba1:	85 c0                	test   %eax,%eax
    cba3:	74 53                	je     cbf8 <remote_ahci_write_blocks+0x68>
    cba5:	50                   	push   %eax
    cba6:	8d 45 ec             	lea    -0x14(%ebp),%eax
    cba9:	50                   	push   %eax
    cbaa:	8d 45 e8             	lea    -0x18(%ebp),%eax
    cbad:	50                   	push   %eax
    cbae:	8d 45 f0             	lea    -0x10(%ebp),%eax
    cbb1:	50                   	push   %eax
    cbb2:	e8 29 29 00 00       	call   f4e0 <async_share_out_receive@plt>
    cbb7:	8d 45 f4             	lea    -0xc(%ebp),%eax
    cbba:	5a                   	pop    %edx
    cbbb:	59                   	pop    %ecx
    cbbc:	50                   	push   %eax
    cbbd:	8b 45 f0             	mov    -0x10(%ebp),%eax
    cbc0:	50                   	push   %eax
    cbc1:	e8 fa 29 00 00       	call   f5c0 <async_share_out_finalize@plt>
    cbc6:	58                   	pop    %eax
    cbc7:	8b 45 f4             	mov    -0xc(%ebp),%eax
    cbca:	50                   	push   %eax
    cbcb:	8b 43 10             	mov    0x10(%ebx),%eax
    cbce:	50                   	push   %eax
    cbcf:	8b 43 0c             	mov    0xc(%ebx),%eax
    cbd2:	8b 53 08             	mov    0x8(%ebx),%edx
    cbd5:	52                   	push   %edx
    cbd6:	50                   	push   %eax
    cbd7:	8b 45 08             	mov    0x8(%ebp),%eax
    cbda:	50                   	push   %eax
    cbdb:	ff 56 10             	call   *0x10(%esi)
    cbde:	83 c4 18             	add    $0x18,%esp
    cbe1:	50                   	push   %eax
    cbe2:	8b 45 10             	mov    0x10(%ebp),%eax
    cbe5:	50                   	push   %eax
    cbe6:	e8 15 29 00 00       	call   f500 <async_answer_0@plt>
    cbeb:	83 c4 10             	add    $0x10,%esp
    cbee:	8d 65 f8             	lea    -0x8(%ebp),%esp
    cbf1:	5b                   	pop    %ebx
    cbf2:	5e                   	pop    %esi
    cbf3:	5d                   	pop    %ebp
    cbf4:	c3                   	ret    
    cbf5:	8d 76 00             	lea    0x0(%esi),%esi
    cbf8:	8b 4d 10             	mov    0x10(%ebp),%ecx
    cbfb:	52                   	push   %edx
    cbfc:	52                   	push   %edx
    cbfd:	6a f5                	push   $0xfffffff5
    cbff:	51                   	push   %ecx
    cc00:	e8 fb 28 00 00       	call   f500 <async_answer_0@plt>
    cc05:	83 c4 10             	add    $0x10,%esp
    cc08:	8d 65 f8             	lea    -0x8(%ebp),%esp
    cc0b:	5b                   	pop    %ebx
    cc0c:	5e                   	pop    %esi
    cc0d:	5d                   	pop    %ebp
    cc0e:	c3                   	ret    
    cc0f:	90                   	nop

0000cc10 <remote_ahci_read_blocks>:
    cc10:	55                   	push   %ebp
    cc11:	89 e5                	mov    %esp,%ebp
    cc13:	56                   	push   %esi
    cc14:	53                   	push   %ebx
    cc15:	83 ec 10             	sub    $0x10,%esp
    cc18:	8b 75 0c             	mov    0xc(%ebp),%esi
    cc1b:	8b 5d 14             	mov    0x14(%ebp),%ebx
    cc1e:	8b 46 0c             	mov    0xc(%esi),%eax
    cc21:	85 c0                	test   %eax,%eax
    cc23:	74 53                	je     cc78 <remote_ahci_read_blocks+0x68>
    cc25:	50                   	push   %eax
    cc26:	8d 45 ec             	lea    -0x14(%ebp),%eax
    cc29:	50                   	push   %eax
    cc2a:	8d 45 e8             	lea    -0x18(%ebp),%eax
    cc2d:	50                   	push   %eax
    cc2e:	8d 45 f0             	lea    -0x10(%ebp),%eax
    cc31:	50                   	push   %eax
    cc32:	e8 a9 28 00 00       	call   f4e0 <async_share_out_receive@plt>
    cc37:	8d 45 f4             	lea    -0xc(%ebp),%eax
    cc3a:	5a                   	pop    %edx
    cc3b:	59                   	pop    %ecx
    cc3c:	50                   	push   %eax
    cc3d:	8b 45 f0             	mov    -0x10(%ebp),%eax
    cc40:	50                   	push   %eax
    cc41:	e8 7a 29 00 00       	call   f5c0 <async_share_out_finalize@plt>
    cc46:	58                   	pop    %eax
    cc47:	8b 45 f4             	mov    -0xc(%ebp),%eax
    cc4a:	50                   	push   %eax
    cc4b:	8b 43 10             	mov    0x10(%ebx),%eax
    cc4e:	50                   	push   %eax
    cc4f:	8b 43 0c             	mov    0xc(%ebx),%eax
    cc52:	8b 53 08             	mov    0x8(%ebx),%edx
    cc55:	52                   	push   %edx
    cc56:	50                   	push   %eax
    cc57:	8b 45 08             	mov    0x8(%ebp),%eax
    cc5a:	50                   	push   %eax
    cc5b:	ff 56 0c             	call   *0xc(%esi)
    cc5e:	83 c4 18             	add    $0x18,%esp
    cc61:	50                   	push   %eax
    cc62:	8b 45 10             	mov    0x10(%ebp),%eax
    cc65:	50                   	push   %eax
    cc66:	e8 95 28 00 00       	call   f500 <async_answer_0@plt>
    cc6b:	83 c4 10             	add    $0x10,%esp
    cc6e:	8d 65 f8             	lea    -0x8(%ebp),%esp
    cc71:	5b                   	pop    %ebx
    cc72:	5e                   	pop    %esi
    cc73:	5d                   	pop    %ebp
    cc74:	c3                   	ret    
    cc75:	8d 76 00             	lea    0x0(%esi),%esi
    cc78:	8b 4d 10             	mov    0x10(%ebp),%ecx
    cc7b:	52                   	push   %edx
    cc7c:	52                   	push   %edx
    cc7d:	6a f5                	push   $0xfffffff5
    cc7f:	51                   	push   %ecx
    cc80:	e8 7b 28 00 00       	call   f500 <async_answer_0@plt>
    cc85:	83 c4 10             	add    $0x10,%esp
    cc88:	8d 65 f8             	lea    -0x8(%ebp),%esp
    cc8b:	5b                   	pop    %ebx
    cc8c:	5e                   	pop    %esi
    cc8d:	5d                   	pop    %ebp
    cc8e:	c3                   	ret    
    cc8f:	90                   	nop

0000cc90 <remote_ahci_get_block_size>:
    cc90:	55                   	push   %ebp
    cc91:	89 e5                	mov    %esp,%ebp
    cc93:	83 ec 18             	sub    $0x18,%esp
    cc96:	8b 45 0c             	mov    0xc(%ebp),%eax
    cc99:	8b 40 08             	mov    0x8(%eax),%eax
    cc9c:	85 c0                	test   %eax,%eax
    cc9e:	74 40                	je     cce0 <remote_ahci_get_block_size+0x50>
    cca0:	8b 4d 08             	mov    0x8(%ebp),%ecx
    cca3:	52                   	push   %edx
    cca4:	52                   	push   %edx
    cca5:	8d 55 f4             	lea    -0xc(%ebp),%edx
    cca8:	52                   	push   %edx
    cca9:	51                   	push   %ecx
    ccaa:	ff d0                	call   *%eax
    ccac:	83 c4 10             	add    $0x10,%esp
    ccaf:	85 c0                	test   %eax,%eax
    ccb1:	74 15                	je     ccc8 <remote_ahci_get_block_size+0x38>
    ccb3:	8b 4d 10             	mov    0x10(%ebp),%ecx
    ccb6:	52                   	push   %edx
    ccb7:	52                   	push   %edx
    ccb8:	50                   	push   %eax
    ccb9:	51                   	push   %ecx
    ccba:	e8 41 28 00 00       	call   f500 <async_answer_0@plt>
    ccbf:	83 c4 10             	add    $0x10,%esp
    ccc2:	c9                   	leave  
    ccc3:	c3                   	ret    
    ccc4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ccc8:	8b 55 f4             	mov    -0xc(%ebp),%edx
    cccb:	8b 4d 10             	mov    0x10(%ebp),%ecx
    ccce:	50                   	push   %eax
    cccf:	52                   	push   %edx
    ccd0:	6a 00                	push   $0x0
    ccd2:	51                   	push   %ecx
    ccd3:	e8 88 2a 00 00       	call   f760 <async_answer_1@plt>
    ccd8:	83 c4 10             	add    $0x10,%esp
    ccdb:	c9                   	leave  
    ccdc:	c3                   	ret    
    ccdd:	8d 76 00             	lea    0x0(%esi),%esi
    cce0:	50                   	push   %eax
    cce1:	50                   	push   %eax
    cce2:	8b 45 10             	mov    0x10(%ebp),%eax
    cce5:	6a f5                	push   $0xfffffff5
    cce7:	50                   	push   %eax
    cce8:	e8 13 28 00 00       	call   f500 <async_answer_0@plt>
    cced:	83 c4 10             	add    $0x10,%esp
    ccf0:	c9                   	leave  
    ccf1:	c3                   	ret    
    ccf2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    ccf9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000cd00 <remote_ahci_get_num_blocks>:
    cd00:	55                   	push   %ebp
    cd01:	89 e5                	mov    %esp,%ebp
    cd03:	83 ec 18             	sub    $0x18,%esp
    cd06:	8b 45 0c             	mov    0xc(%ebp),%eax
    cd09:	8b 40 04             	mov    0x4(%eax),%eax
    cd0c:	85 c0                	test   %eax,%eax
    cd0e:	74 40                	je     cd50 <remote_ahci_get_num_blocks+0x50>
    cd10:	8b 4d 08             	mov    0x8(%ebp),%ecx
    cd13:	52                   	push   %edx
    cd14:	52                   	push   %edx
    cd15:	8d 55 f0             	lea    -0x10(%ebp),%edx
    cd18:	52                   	push   %edx
    cd19:	51                   	push   %ecx
    cd1a:	ff d0                	call   *%eax
    cd1c:	83 c4 10             	add    $0x10,%esp
    cd1f:	85 c0                	test   %eax,%eax
    cd21:	74 15                	je     cd38 <remote_ahci_get_num_blocks+0x38>
    cd23:	51                   	push   %ecx
    cd24:	51                   	push   %ecx
    cd25:	50                   	push   %eax
    cd26:	8b 45 10             	mov    0x10(%ebp),%eax
    cd29:	50                   	push   %eax
    cd2a:	e8 d1 27 00 00       	call   f500 <async_answer_0@plt>
    cd2f:	83 c4 10             	add    $0x10,%esp
    cd32:	c9                   	leave  
    cd33:	c3                   	ret    
    cd34:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    cd38:	8b 45 f0             	mov    -0x10(%ebp),%eax
    cd3b:	8b 55 10             	mov    0x10(%ebp),%edx
    cd3e:	50                   	push   %eax
    cd3f:	6a 00                	push   $0x0
    cd41:	6a 00                	push   $0x0
    cd43:	52                   	push   %edx
    cd44:	e8 97 28 00 00       	call   f5e0 <async_answer_2@plt>
    cd49:	83 c4 10             	add    $0x10,%esp
    cd4c:	c9                   	leave  
    cd4d:	c3                   	ret    
    cd4e:	66 90                	xchg   %ax,%ax
    cd50:	50                   	push   %eax
    cd51:	50                   	push   %eax
    cd52:	8b 45 10             	mov    0x10(%ebp),%eax
    cd55:	6a f5                	push   $0xfffffff5
    cd57:	50                   	push   %eax
    cd58:	e8 a3 27 00 00       	call   f500 <async_answer_0@plt>
    cd5d:	83 c4 10             	add    $0x10,%esp
    cd60:	c9                   	leave  
    cd61:	c3                   	ret    
    cd62:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    cd69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000cd70 <remote_ahci_get_sata_device_name>:
    cd70:	55                   	push   %ebp
    cd71:	89 e5                	mov    %esp,%ebp
    cd73:	57                   	push   %edi
    cd74:	56                   	push   %esi
    cd75:	53                   	push   %ebx
    cd76:	83 ec 1c             	sub    $0x1c,%esp
    cd79:	8b 7d 0c             	mov    0xc(%ebp),%edi
    cd7c:	8b 07                	mov    (%edi),%eax
    cd7e:	85 c0                	test   %eax,%eax
    cd80:	74 76                	je     cdf8 <remote_ahci_get_sata_device_name+0x88>
    cd82:	8b 45 14             	mov    0x14(%ebp),%eax
    cd85:	83 ec 0c             	sub    $0xc,%esp
    cd88:	8b 70 08             	mov    0x8(%eax),%esi
    cd8b:	56                   	push   %esi
    cd8c:	e8 2f 27 00 00       	call   f4c0 <malloc@plt>
    cd91:	83 c4 10             	add    $0x10,%esp
    cd94:	89 c3                	mov    %eax,%ebx
    cd96:	85 c0                	test   %eax,%eax
    cd98:	74 76                	je     ce10 <remote_ahci_get_sata_device_name+0xa0>
    cd9a:	50                   	push   %eax
    cd9b:	8b 45 08             	mov    0x8(%ebp),%eax
    cd9e:	53                   	push   %ebx
    cd9f:	56                   	push   %esi
    cda0:	50                   	push   %eax
    cda1:	ff 17                	call   *(%edi)
    cda3:	89 c7                	mov    %eax,%edi
    cda5:	58                   	pop    %eax
    cda6:	8d 45 e0             	lea    -0x20(%ebp),%eax
    cda9:	5a                   	pop    %edx
    cdaa:	50                   	push   %eax
    cdab:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    cdae:	50                   	push   %eax
    cdaf:	e8 1c 29 00 00       	call   f6d0 <async_data_read_receive@plt>
    cdb4:	83 c4 10             	add    $0x10,%esp
    cdb7:	84 c0                	test   %al,%al
    cdb9:	74 05                	je     cdc0 <remote_ahci_get_sata_device_name+0x50>
    cdbb:	3b 75 e0             	cmp    -0x20(%ebp),%esi
    cdbe:	74 20                	je     cde0 <remote_ahci_get_sata_device_name+0x70>
    cdc0:	83 ec 0c             	sub    $0xc,%esp
    cdc3:	53                   	push   %ebx
    cdc4:	e8 97 2a 00 00       	call   f860 <free@plt>
    cdc9:	8b 4d 10             	mov    0x10(%ebp),%ecx
    cdcc:	58                   	pop    %eax
    cdcd:	5a                   	pop    %edx
    cdce:	57                   	push   %edi
    cdcf:	51                   	push   %ecx
    cdd0:	e8 2b 27 00 00       	call   f500 <async_answer_0@plt>
    cdd5:	83 c4 10             	add    $0x10,%esp
    cdd8:	8d 65 f4             	lea    -0xc(%ebp),%esp
    cddb:	5b                   	pop    %ebx
    cddc:	5e                   	pop    %esi
    cddd:	5f                   	pop    %edi
    cdde:	5d                   	pop    %ebp
    cddf:	c3                   	ret    
    cde0:	50                   	push   %eax
    cde1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    cde4:	56                   	push   %esi
    cde5:	53                   	push   %ebx
    cde6:	50                   	push   %eax
    cde7:	e8 74 26 00 00       	call   f460 <async_data_read_finalize@plt>
    cdec:	83 c4 10             	add    $0x10,%esp
    cdef:	eb cf                	jmp    cdc0 <remote_ahci_get_sata_device_name+0x50>
    cdf1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    cdf8:	8b 7d 10             	mov    0x10(%ebp),%edi
    cdfb:	56                   	push   %esi
    cdfc:	56                   	push   %esi
    cdfd:	6a f5                	push   $0xfffffff5
    cdff:	57                   	push   %edi
    ce00:	e8 fb 26 00 00       	call   f500 <async_answer_0@plt>
    ce05:	83 c4 10             	add    $0x10,%esp
    ce08:	8d 65 f4             	lea    -0xc(%ebp),%esp
    ce0b:	5b                   	pop    %ebx
    ce0c:	5e                   	pop    %esi
    ce0d:	5f                   	pop    %edi
    ce0e:	5d                   	pop    %ebp
    ce0f:	c3                   	ret    
    ce10:	8b 5d 10             	mov    0x10(%ebp),%ebx
    ce13:	51                   	push   %ecx
    ce14:	51                   	push   %ecx
    ce15:	6a fe                	push   $0xfffffffe
    ce17:	53                   	push   %ebx
    ce18:	e8 e3 26 00 00       	call   f500 <async_answer_0@plt>
    ce1d:	83 c4 10             	add    $0x10,%esp
    ce20:	8d 65 f4             	lea    -0xc(%ebp),%esp
    ce23:	5b                   	pop    %ebx
    ce24:	5e                   	pop    %esi
    ce25:	5f                   	pop    %edi
    ce26:	5d                   	pop    %ebp
    ce27:	c3                   	ret    
    ce28:	90                   	nop
    ce29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000ce30 <ahci_get_sess>:
    ce30:	55                   	push   %ebp
    ce31:	89 e5                	mov    %esp,%ebp
    ce33:	57                   	push   %edi
    ce34:	56                   	push   %esi
    ce35:	53                   	push   %ebx
    ce36:	81 ec 10 04 00 00    	sub    $0x410,%esp
    ce3c:	8d 9d e8 fb ff ff    	lea    -0x418(%ebp),%ebx
    ce42:	8b 7d 0c             	mov    0xc(%ebp),%edi
    ce45:	8b 75 08             	mov    0x8(%ebp),%esi
    ce48:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
    ce4e:	68 00 04 00 00       	push   $0x400
    ce53:	53                   	push   %ebx
    ce54:	56                   	push   %esi
    ce55:	e8 16 2a 00 00       	call   f870 <devman_fun_get_name@plt>
    ce5a:	83 c4 10             	add    $0x10,%esp
    ce5d:	85 c0                	test   %eax,%eax
    ce5f:	75 57                	jne    ceb8 <ahci_get_sess+0x88>
    ce61:	83 ec 0c             	sub    $0xc,%esp
    ce64:	53                   	push   %ebx
    ce65:	e8 d6 28 00 00       	call   f740 <str_size@plt>
    ce6a:	83 c4 10             	add    $0x10,%esp
    ce6d:	83 f8 05             	cmp    $0x5,%eax
    ce70:	76 46                	jbe    ceb8 <ahci_get_sess+0x88>
    ce72:	52                   	push   %edx
    ce73:	6a 05                	push   $0x5
    ce75:	68 6c f0 00 00       	push   $0xf06c
    ce7a:	53                   	push   %ebx
    ce7b:	e8 d0 28 00 00       	call   f750 <str_lcmp@plt>
    ce80:	83 c4 10             	add    $0x10,%esp
    ce83:	85 c0                	test   %eax,%eax
    ce85:	75 31                	jne    ceb8 <ahci_get_sess+0x88>
    ce87:	50                   	push   %eax
    ce88:	50                   	push   %eax
    ce89:	6a 01                	push   $0x1
    ce8b:	56                   	push   %esi
    ce8c:	e8 df 24 00 00       	call   f370 <devman_device_connect@plt>
    ce91:	83 c4 10             	add    $0x10,%esp
    ce94:	89 c6                	mov    %eax,%esi
    ce96:	85 c0                	test   %eax,%eax
    ce98:	74 20                	je     ceba <ahci_get_sess+0x8a>
    ce9a:	83 ec 0c             	sub    $0xc,%esp
    ce9d:	53                   	push   %ebx
    ce9e:	e8 6d 27 00 00       	call   f610 <str_dup@plt>
    cea3:	83 c4 10             	add    $0x10,%esp
    cea6:	89 07                	mov    %eax,(%edi)
    cea8:	8d 65 f4             	lea    -0xc(%ebp),%esp
    ceab:	89 f0                	mov    %esi,%eax
    cead:	5b                   	pop    %ebx
    ceae:	5e                   	pop    %esi
    ceaf:	5f                   	pop    %edi
    ceb0:	5d                   	pop    %ebp
    ceb1:	c3                   	ret    
    ceb2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    ceb8:	31 f6                	xor    %esi,%esi
    ceba:	8d 65 f4             	lea    -0xc(%ebp),%esp
    cebd:	89 f0                	mov    %esi,%eax
    cebf:	5b                   	pop    %ebx
    cec0:	5e                   	pop    %esi
    cec1:	5f                   	pop    %edi
    cec2:	5d                   	pop    %ebp
    cec3:	c3                   	ret    
    cec4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    ceca:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0000ced0 <ahci_get_sata_device_name>:
    ced0:	55                   	push   %ebp
    ced1:	89 e5                	mov    %esp,%ebp
    ced3:	57                   	push   %edi
    ced4:	56                   	push   %esi
    ced5:	53                   	push   %ebx
    ced6:	83 ec 28             	sub    $0x28,%esp
    ced9:	8b 7d 08             	mov    0x8(%ebp),%edi
    cedc:	8b 75 0c             	mov    0xc(%ebp),%esi
    cedf:	57                   	push   %edi
    cee0:	e8 8b 28 00 00       	call   f770 <async_exchange_begin@plt>
    cee5:	83 c4 10             	add    $0x10,%esp
    cee8:	85 c0                	test   %eax,%eax
    ceea:	74 44                	je     cf30 <ahci_get_sata_device_name+0x60>
    ceec:	89 c3                	mov    %eax,%ebx
    ceee:	50                   	push   %eax
    ceef:	6a 00                	push   $0x0
    cef1:	6a 00                	push   $0x0
    cef3:	6a 00                	push   $0x0
    cef5:	56                   	push   %esi
    cef6:	6a 00                	push   $0x0
    cef8:	68 0e 04 00 00       	push   $0x40e
    cefd:	53                   	push   %ebx
    cefe:	e8 0d 26 00 00       	call   f510 <async_send_fast@plt>
    cf03:	83 c4 1c             	add    $0x1c,%esp
    cf06:	8b 55 10             	mov    0x10(%ebp),%edx
    cf09:	89 c7                	mov    %eax,%edi
    cf0b:	56                   	push   %esi
    cf0c:	52                   	push   %edx
    cf0d:	53                   	push   %ebx
    cf0e:	e8 cd 27 00 00       	call   f6e0 <async_data_read_start@plt>
    cf13:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    cf16:	59                   	pop    %ecx
    cf17:	5b                   	pop    %ebx
    cf18:	50                   	push   %eax
    cf19:	57                   	push   %edi
    cf1a:	e8 b1 24 00 00       	call   f3d0 <async_wait_for@plt>
    cf1f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    cf22:	83 c4 10             	add    $0x10,%esp
    cf25:	8d 65 f4             	lea    -0xc(%ebp),%esp
    cf28:	5b                   	pop    %ebx
    cf29:	5e                   	pop    %esi
    cf2a:	5f                   	pop    %edi
    cf2b:	5d                   	pop    %ebp
    cf2c:	c3                   	ret    
    cf2d:	8d 76 00             	lea    0x0(%esi),%esi
    cf30:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    cf35:	eb ee                	jmp    cf25 <ahci_get_sata_device_name+0x55>
    cf37:	89 f6                	mov    %esi,%esi
    cf39:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000cf40 <ahci_get_num_blocks>:
    cf40:	55                   	push   %ebp
    cf41:	89 e5                	mov    %esp,%ebp
    cf43:	57                   	push   %edi
    cf44:	56                   	push   %esi
    cf45:	53                   	push   %ebx
    cf46:	83 ec 38             	sub    $0x38,%esp
    cf49:	8b 55 08             	mov    0x8(%ebp),%edx
    cf4c:	52                   	push   %edx
    cf4d:	e8 1e 28 00 00       	call   f770 <async_exchange_begin@plt>
    cf52:	83 c4 10             	add    $0x10,%esp
    cf55:	85 c0                	test   %eax,%eax
    cf57:	74 57                	je     cfb0 <ahci_get_num_blocks+0x70>
    cf59:	89 c6                	mov    %eax,%esi
    cf5b:	50                   	push   %eax
    cf5c:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    cf5f:	6a 00                	push   $0x0
    cf61:	6a 00                	push   $0x0
    cf63:	6a 00                	push   $0x0
    cf65:	50                   	push   %eax
    cf66:	8d 45 e0             	lea    -0x20(%ebp),%eax
    cf69:	50                   	push   %eax
    cf6a:	6a 00                	push   $0x0
    cf6c:	6a 00                	push   $0x0
    cf6e:	6a 00                	push   $0x0
    cf70:	6a 01                	push   $0x1
    cf72:	68 0e 04 00 00       	push   $0x40e
    cf77:	56                   	push   %esi
    cf78:	e8 73 25 00 00       	call   f4f0 <async_req_fast@plt>
    cf7d:	83 c4 24             	add    $0x24,%esp
    cf80:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    cf83:	56                   	push   %esi
    cf84:	e8 c7 25 00 00       	call   f550 <async_exchange_end@plt>
    cf89:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    cf8c:	83 c4 10             	add    $0x10,%esp
    cf8f:	85 c0                	test   %eax,%eax
    cf91:	75 0e                	jne    cfa1 <ahci_get_num_blocks+0x61>
    cf93:	8b 55 0c             	mov    0xc(%ebp),%edx
    cf96:	8b 75 e0             	mov    -0x20(%ebp),%esi
    cf99:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    cf9c:	89 0a                	mov    %ecx,(%edx)
    cf9e:	89 72 04             	mov    %esi,0x4(%edx)
    cfa1:	8d 65 f4             	lea    -0xc(%ebp),%esp
    cfa4:	5b                   	pop    %ebx
    cfa5:	5e                   	pop    %esi
    cfa6:	5f                   	pop    %edi
    cfa7:	5d                   	pop    %ebp
    cfa8:	c3                   	ret    
    cfa9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    cfb0:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    cfb5:	eb ea                	jmp    cfa1 <ahci_get_num_blocks+0x61>
    cfb7:	89 f6                	mov    %esi,%esi
    cfb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000cfc0 <ahci_get_block_size>:
    cfc0:	55                   	push   %ebp
    cfc1:	89 e5                	mov    %esp,%ebp
    cfc3:	53                   	push   %ebx
    cfc4:	83 ec 30             	sub    $0x30,%esp
    cfc7:	8b 55 08             	mov    0x8(%ebp),%edx
    cfca:	52                   	push   %edx
    cfcb:	e8 a0 27 00 00       	call   f770 <async_exchange_begin@plt>
    cfd0:	83 c4 10             	add    $0x10,%esp
    cfd3:	85 c0                	test   %eax,%eax
    cfd5:	74 49                	je     d020 <ahci_get_block_size+0x60>
    cfd7:	89 c3                	mov    %eax,%ebx
    cfd9:	50                   	push   %eax
    cfda:	8d 45 f4             	lea    -0xc(%ebp),%eax
    cfdd:	6a 00                	push   $0x0
    cfdf:	6a 00                	push   $0x0
    cfe1:	6a 00                	push   $0x0
    cfe3:	6a 00                	push   $0x0
    cfe5:	50                   	push   %eax
    cfe6:	6a 00                	push   $0x0
    cfe8:	6a 00                	push   $0x0
    cfea:	6a 00                	push   $0x0
    cfec:	6a 02                	push   $0x2
    cfee:	68 0e 04 00 00       	push   $0x40e
    cff3:	53                   	push   %ebx
    cff4:	e8 f7 24 00 00       	call   f4f0 <async_req_fast@plt>
    cff9:	83 c4 24             	add    $0x24,%esp
    cffc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    cfff:	53                   	push   %ebx
    d000:	e8 4b 25 00 00       	call   f550 <async_exchange_end@plt>
    d005:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    d008:	83 c4 10             	add    $0x10,%esp
    d00b:	85 c0                	test   %eax,%eax
    d00d:	75 08                	jne    d017 <ahci_get_block_size+0x57>
    d00f:	8b 55 0c             	mov    0xc(%ebp),%edx
    d012:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    d015:	89 0a                	mov    %ecx,(%edx)
    d017:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    d01a:	c9                   	leave  
    d01b:	c3                   	ret    
    d01c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    d020:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    d025:	eb f0                	jmp    d017 <ahci_get_block_size+0x57>
    d027:	89 f6                	mov    %esi,%esi
    d029:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000d030 <ahci_read_blocks>:
    d030:	55                   	push   %ebp
    d031:	89 e5                	mov    %esp,%ebp
    d033:	56                   	push   %esi
    d034:	53                   	push   %ebx
    d035:	83 ec 1c             	sub    $0x1c,%esp
    d038:	8b 45 08             	mov    0x8(%ebp),%eax
    d03b:	8b 75 0c             	mov    0xc(%ebp),%esi
    d03e:	50                   	push   %eax
    d03f:	e8 2c 27 00 00       	call   f770 <async_exchange_begin@plt>
    d044:	83 c4 10             	add    $0x10,%esp
    d047:	85 c0                	test   %eax,%eax
    d049:	74 4d                	je     d098 <ahci_read_blocks+0x68>
    d04b:	89 c3                	mov    %eax,%ebx
    d04d:	8b 55 14             	mov    0x14(%ebp),%edx
    d050:	50                   	push   %eax
    d051:	6a 00                	push   $0x0
    d053:	52                   	push   %edx
    d054:	56                   	push   %esi
    d055:	6a 00                	push   $0x0
    d057:	6a 03                	push   $0x3
    d059:	68 0e 04 00 00       	push   $0x40e
    d05e:	53                   	push   %ebx
    d05f:	e8 ac 24 00 00       	call   f510 <async_send_fast@plt>
    d064:	83 c4 1c             	add    $0x1c,%esp
    d067:	8b 4d 18             	mov    0x18(%ebp),%ecx
    d06a:	6a 03                	push   $0x3
    d06c:	51                   	push   %ecx
    d06d:	53                   	push   %ebx
    d06e:	89 c6                	mov    %eax,%esi
    d070:	e8 4b 27 00 00       	call   f7c0 <async_share_out_start@plt>
    d075:	89 1c 24             	mov    %ebx,(%esp)
    d078:	e8 d3 24 00 00       	call   f550 <async_exchange_end@plt>
    d07d:	5b                   	pop    %ebx
    d07e:	58                   	pop    %eax
    d07f:	8d 45 f4             	lea    -0xc(%ebp),%eax
    d082:	50                   	push   %eax
    d083:	56                   	push   %esi
    d084:	e8 47 23 00 00       	call   f3d0 <async_wait_for@plt>
    d089:	8b 45 f4             	mov    -0xc(%ebp),%eax
    d08c:	83 c4 10             	add    $0x10,%esp
    d08f:	8d 65 f8             	lea    -0x8(%ebp),%esp
    d092:	5b                   	pop    %ebx
    d093:	5e                   	pop    %esi
    d094:	5d                   	pop    %ebp
    d095:	c3                   	ret    
    d096:	66 90                	xchg   %ax,%ax
    d098:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    d09d:	eb f0                	jmp    d08f <ahci_read_blocks+0x5f>
    d09f:	90                   	nop

0000d0a0 <ahci_write_blocks>:
    d0a0:	55                   	push   %ebp
    d0a1:	89 e5                	mov    %esp,%ebp
    d0a3:	56                   	push   %esi
    d0a4:	53                   	push   %ebx
    d0a5:	83 ec 1c             	sub    $0x1c,%esp
    d0a8:	8b 45 08             	mov    0x8(%ebp),%eax
    d0ab:	8b 75 0c             	mov    0xc(%ebp),%esi
    d0ae:	50                   	push   %eax
    d0af:	e8 bc 26 00 00       	call   f770 <async_exchange_begin@plt>
    d0b4:	83 c4 10             	add    $0x10,%esp
    d0b7:	85 c0                	test   %eax,%eax
    d0b9:	74 4d                	je     d108 <ahci_write_blocks+0x68>
    d0bb:	89 c3                	mov    %eax,%ebx
    d0bd:	8b 55 14             	mov    0x14(%ebp),%edx
    d0c0:	50                   	push   %eax
    d0c1:	6a 00                	push   $0x0
    d0c3:	52                   	push   %edx
    d0c4:	56                   	push   %esi
    d0c5:	6a 00                	push   $0x0
    d0c7:	6a 04                	push   $0x4
    d0c9:	68 0e 04 00 00       	push   $0x40e
    d0ce:	53                   	push   %ebx
    d0cf:	e8 3c 24 00 00       	call   f510 <async_send_fast@plt>
    d0d4:	83 c4 1c             	add    $0x1c,%esp
    d0d7:	8b 4d 18             	mov    0x18(%ebp),%ecx
    d0da:	6a 03                	push   $0x3
    d0dc:	51                   	push   %ecx
    d0dd:	53                   	push   %ebx
    d0de:	89 c6                	mov    %eax,%esi
    d0e0:	e8 db 26 00 00       	call   f7c0 <async_share_out_start@plt>
    d0e5:	89 1c 24             	mov    %ebx,(%esp)
    d0e8:	e8 63 24 00 00       	call   f550 <async_exchange_end@plt>
    d0ed:	5b                   	pop    %ebx
    d0ee:	58                   	pop    %eax
    d0ef:	8d 45 f4             	lea    -0xc(%ebp),%eax
    d0f2:	50                   	push   %eax
    d0f3:	56                   	push   %esi
    d0f4:	e8 d7 22 00 00       	call   f3d0 <async_wait_for@plt>
    d0f9:	8b 45 f4             	mov    -0xc(%ebp),%eax
    d0fc:	83 c4 10             	add    $0x10,%esp
    d0ff:	8d 65 f8             	lea    -0x8(%ebp),%esp
    d102:	5b                   	pop    %ebx
    d103:	5e                   	pop    %esi
    d104:	5d                   	pop    %ebp
    d105:	c3                   	ret    
    d106:	66 90                	xchg   %ax,%ax
    d108:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    d10d:	eb f0                	jmp    d0ff <ahci_write_blocks+0x5f>
    d10f:	70 63                	jo     d174 <ahci_write_blocks+0xd4>
    d111:	69 5f 66 75 6e 5f 6f 	imul   $0x6f5f6e75,0x66(%edi),%ebx
    d118:	66 66 6c             	data16 data16 insb (%dx),%es:(%edi)
    d11b:	69 6e 65 28 29 00 70 	imul   $0x70002928,0x65(%esi),%ebp
    d122:	63 69 5f             	arpl   %bp,0x5f(%ecx)
    d125:	66 75 6e             	data16 jne d196 <ahci_write_blocks+0xf6>
    d128:	5f                   	pop    %edi
    d129:	6f                   	outsl  %ds:(%esi),(%dx)
    d12a:	6e                   	outsb  %ds:(%esi),(%dx)
    d12b:	6c                   	insb   (%dx),%es:(%edi)
    d12c:	69 6e 65 28 29 00 66 	imul   $0x66002928,0x65(%esi),%ebp
    d133:	6e                   	outsb  %ds:(%esi),(%dx)
    d134:	6f                   	outsl  %ds:(%esi),(%dx)
    d135:	64 65 00 70 63       	fs add %dh,%gs:0x63(%eax)
    d13a:	69 2f 76 65 6e 3d    	imul   $0x3d6e6576,(%edi),%ebp
    d140:	25 30 34 68 78       	and    $0x78683430,%eax
    d145:	26 64 65 76 3d       	es fs gs jbe d187 <ahci_write_blocks+0xe7>
    d14a:	25 30 34 68 78       	and    $0x78683430,%eax
    d14f:	00 46 61             	add    %al,0x61(%esi)
    d152:	69 6c 65 64 20 61 64 	imul   $0x64646120,0x64(%ebp,%eiz,2),%ebp
    d159:	64 
    d15a:	69 6e 67 20 6d 61 74 	imul   $0x74616d20,0x67(%esi),%ebp
    d161:	63 68 20             	arpl   %bp,0x20(%eax)
    d164:	49                   	dec    %ecx
    d165:	44                   	inc    %esp
    d166:	3a 20                	cmp    (%eax),%ah
    d168:	25 73 00 70 63       	and    $0x63700073,%eax
    d16d:	69 2f 63 6c 61 73    	imul   $0x73616c63,(%edi),%ebp
    d173:	73 3d                	jae    d1b2 <ahci_write_blocks+0x112>
    d175:	25 30 32 78 26       	and    $0x26783230,%eax
    d17a:	73 75                	jae    d1f1 <ahci_write_blocks+0x151>
    d17c:	62 63 6c             	bound  %esp,0x6c(%ebx)
    d17f:	61                   	popa   
    d180:	73 73                	jae    d1f5 <ahci_write_blocks+0x155>
    d182:	3d 25 30 32 78       	cmp    $0x78323025,%eax
    d187:	00 70 63             	add    %dh,0x63(%eax)
    d18a:	69 2f 63 6c 61 73    	imul   $0x73616c63,(%edi),%ebp
    d190:	73 3d                	jae    d1cf <ahci_write_blocks+0x12f>
    d192:	25 30 32 78 00       	and    $0x783230,%eax
    d197:	68 77 5f 72 65       	push   $0x65725f77
    d19c:	73 6f                	jae    d20d <ahci_write_blocks+0x16d>
    d19e:	75 72                	jne    d212 <ahci_write_blocks+0x172>
    d1a0:	63 65 73             	arpl   %sp,0x73(%ebp)
    d1a3:	20 21                	and    %ah,(%ecx)
    d1a5:	3d 20 4e 55 4c       	cmp    $0x4c554e20,%eax
    d1aa:	4c                   	dec    %esp
    d1ab:	00 63 6f             	add    %ah,0x6f(%ebx)
    d1ae:	75 6e                	jne    d21e <ahci_write_blocks+0x17e>
    d1b0:	74 20                	je     d1d2 <ahci_write_blocks+0x132>
    d1b2:	3c 20                	cmp    $0x20,%al
    d1b4:	50                   	push   %eax
    d1b5:	43                   	inc    %ebx
    d1b6:	49                   	dec    %ecx
    d1b7:	5f                   	pop    %edi
    d1b8:	4d                   	dec    %ebp
    d1b9:	41                   	inc    %ecx
    d1ba:	58                   	pop    %eax
    d1bb:	5f                   	pop    %edi
    d1bc:	48                   	dec    %eax
    d1bd:	57                   	push   %edi
    d1be:	5f                   	pop    %edi
    d1bf:	52                   	push   %edx
    d1c0:	45                   	inc    %ebp
    d1c1:	53                   	push   %ebx
    d1c2:	00 4e 55             	add    %cl,0x55(%esi)
    d1c5:	4c                   	dec    %esp
    d1c6:	4c                   	dec    %esp
    d1c7:	20 21                	and    %ah,(%ecx)
    d1c9:	3d 20 68 77 5f       	cmp    $0x5f776820,%eax
    d1ce:	72 65                	jb     d235 <ahci_write_blocks+0x195>
    d1d0:	73 6f                	jae    d241 <ahci_write_blocks+0x1a1>
    d1d2:	75 72                	jne    d246 <ahci_write_blocks+0x1a6>
    d1d4:	63 65 73             	arpl   %sp,0x73(%ebp)
    d1d7:	00 46 75             	add    %al,0x75(%esi)
    d1da:	6e                   	outsb  %ds:(%esi),(%dx)
    d1db:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
    d1df:	6e                   	outsb  %ds:(%esi),(%dx)
    d1e0:	20 25 73 20 75 73    	and    %ah,0x73752073
    d1e6:	65 73 20             	gs jae d209 <ahci_write_blocks+0x169>
    d1e9:	69 72 71 20 25 78 2e 	imul   $0x2e782520,0x71(%edx),%esi
    d1f0:	00 25 30 32 78 3a    	add    %ah,0x3a783230
    d1f6:	25 30 32 78 2e       	and    $0x2e783230,%eax
    d1fb:	25 30 31 78 00       	and    $0x783130,%eax
    d200:	4f                   	dec    %edi
    d201:	75 74                	jne    d277 <ahci_write_blocks+0x1d7>
    d203:	20 6f 66             	and    %ch,0x66(%edi)
    d206:	20 6d 65             	and    %ch,0x65(%ebp)
    d209:	6d                   	insl   (%dx),%es:(%edi)
    d20a:	6f                   	outsl  %ds:(%esi),(%dx)
    d20b:	72 79                	jb     d286 <ahci_write_blocks+0x1e6>
    d20d:	2e 00 46 61          	add    %al,%cs:0x61(%esi)
    d211:	69 6c 65 64 20 73 65 	imul   $0x74657320,0x64(%ebp,%eiz,2),%ebp
    d218:	74 
    d219:	74 69                	je     d284 <ahci_write_blocks+0x1e4>
    d21b:	6e                   	outsb  %ds:(%esi),(%dx)
    d21c:	67 20 66 75          	and    %ah,0x75(%bp)
    d220:	6e                   	outsb  %ds:(%esi),(%dx)
    d221:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
    d225:	6e                   	outsb  %ds:(%esi),(%dx)
    d226:	20 6e 61             	and    %ch,0x61(%esi)
    d229:	6d                   	insl   (%dx),%es:(%edi)
    d22a:	65 2e 00 41 64       	gs add %al,%cs:0x64(%ecx)
    d22f:	64 69 6e 67 20 6e 65 	imul   $0x77656e20,%fs:0x67(%esi),%ebp
    d236:	77 
    d237:	20 66 75             	and    %ah,0x75(%esi)
    d23a:	6e                   	outsb  %ds:(%esi),(%dx)
    d23b:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
    d23f:	6e                   	outsb  %ds:(%esi),(%dx)
    d240:	20 25 73 2e 00 70    	and    %ah,0x70002e73
    d246:	63 69 5f             	arpl   %bp,0x5f(%ecx)
    d249:	64 65 76 5f          	fs gs jbe d2ac <ahci_write_blocks+0x20c>
    d24d:	61                   	popa   
    d24e:	64 64 00 68 77       	fs add %ch,%fs:0x77(%eax)
    d253:	5f                   	pop    %edi
    d254:	72 65                	jb     d2bb <ahci_write_blocks+0x21b>
    d256:	73 6f                	jae    d2c7 <ahci_write_blocks+0x227>
    d258:	75 72                	jne    d2cc <ahci_write_blocks+0x22c>
    d25a:	63 65 73             	arpl   %sp,0x73(%ebp)
    d25d:	2e 63 6f 75          	arpl   %bp,%cs:0x75(%edi)
    d261:	6e                   	outsb  %ds:(%esi),(%dx)
    d262:	74 20                	je     d284 <ahci_write_blocks+0x1e4>
    d264:	3e 3d 20 31 00 63    	ds cmp $0x63003120,%eax
    d26a:	6f                   	outsl  %ds:(%esi),(%dx)
    d26b:	6e                   	outsb  %ds:(%esi),(%dx)
    d26c:	66 5f                	pop    %di
    d26e:	61                   	popa   
    d26f:	64 64 72 5f          	fs fs jb d2d2 <ahci_write_blocks+0x232>
    d273:	73 70                	jae    d2e5 <ahci_write_blocks+0x245>
    d275:	61                   	popa   
    d276:	63 65 20             	arpl   %sp,0x20(%ebp)
    d279:	3d 20 25 6c 6c       	cmp    $0x6c6c2520,%eax
    d27e:	78 2e                	js     d2ae <ahci_write_blocks+0x20e>
    d280:	00 63 6f             	add    %ah,0x6f(%ebx)
    d283:	6e                   	outsb  %ds:(%esi),(%dx)
    d284:	66 5f                	pop    %di
    d286:	61                   	popa   
    d287:	64 64 72 20          	fs fs jb d2ab <ahci_write_blocks+0x20b>
    d28b:	3d 20 25 6c 6c       	cmp    $0x6c6c2520,%eax
    d290:	78 2e                	js     d2c0 <ahci_write_blocks+0x220>
    d292:	00 64 61 74          	add    %ah,0x74(%ecx,%eiz,2)
    d296:	61                   	popa   
    d297:	5f                   	pop    %edi
    d298:	61                   	popa   
    d299:	64 64 72 20          	fs fs jb d2bd <ahci_write_blocks+0x21d>
    d29d:	3d 20 25 6c 6c       	cmp    $0x6c6c2520,%eax
    d2a2:	78 2e                	js     d2d2 <ahci_write_blocks+0x232>
    d2a4:	00 41 64             	add    %al,0x64(%ecx)
    d2a7:	64 69 6e 67 20 61 20 	imul   $0x27206120,%fs:0x67(%esi),%ebp
    d2ae:	27 
    d2af:	63 74 6c 27          	arpl   %si,0x27(%esp,%ebp,2)
    d2b3:	20 66 75             	and    %ah,0x75(%esi)
    d2b6:	6e                   	outsb  %ds:(%esi),(%dx)
    d2b7:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
    d2bb:	6e                   	outsb  %ds:(%esi),(%dx)
    d2bc:	00 63 74             	add    %ah,0x74(%ebx)
    d2bf:	6c                   	insb   (%dx),%es:(%edi)
    d2c0:	00 53 63             	add    %dl,0x63(%ebx)
    d2c3:	61                   	popa   
    d2c4:	6e                   	outsb  %ds:(%esi),(%dx)
    d2c5:	6e                   	outsb  %ds:(%esi),(%dx)
    d2c6:	69 6e 67 20 74 68 65 	imul   $0x65687420,0x67(%esi),%ebp
    d2cd:	20 62 75             	and    %ah,0x75(%edx)
    d2d0:	73 00                	jae    d2d2 <ahci_write_blocks+0x232>
    d2d2:	70 63                	jo     d337 <ahci_write_blocks+0x297>
    d2d4:	69 69 6e 74 65 6c 00 	imul   $0x6c6574,0x6e(%ecx),%ebp
    d2db:	90                   	nop
    d2dc:	46                   	inc    %esi
    d2dd:	61                   	popa   
    d2de:	69 6c 65 64 20 63 72 	imul   $0x65726320,0x64(%ebp,%eiz,2),%ebp
    d2e5:	65 
    d2e6:	61                   	popa   
    d2e7:	74 69                	je     d352 <ahci_write_blocks+0x2b2>
    d2e9:	6e                   	outsb  %ds:(%esi),(%dx)
    d2ea:	67 20 6d 61          	and    %ch,0x61(%di)
    d2ee:	74 63                	je     d353 <ahci_write_blocks+0x2b3>
    d2f0:	68 20 49 44 20       	push   $0x20444920
    d2f5:	73 74                	jae    d36b <ahci_write_blocks+0x2cb>
    d2f7:	72 3a                	jb     d333 <ahci_write_blocks+0x293>
    d2f9:	20 25 73 00 00 00    	and    %ah,0x73
    d2ff:	00 70 63             	add    %dh,0x63(%eax)
    d302:	69 2f 63 6c 61 73    	imul   $0x73616c63,(%edi),%ebp
    d308:	73 3d                	jae    d347 <ahci_write_blocks+0x2a7>
    d30a:	25 30 32 78 26       	and    $0x26783230,%eax
    d30f:	73 75                	jae    d386 <ahci_write_blocks+0x2e6>
    d311:	62 63 6c             	bound  %esp,0x6c(%ebx)
    d314:	61                   	popa   
    d315:	73 73                	jae    d38a <ahci_write_blocks+0x2ea>
    d317:	3d 25 30 32 78       	cmp    $0x78323025,%eax
    d31c:	26 70 72             	es jo  d391 <ahci_write_blocks+0x2f1>
    d31f:	6f                   	outsl  %ds:(%esi),(%dx)
    d320:	67 69 66 3d 25 30 32 	imul   $0x78323025,0x3d(%bp),%esp
    d327:	78 
    d328:	26 72 65             	es jb  d390 <ahci_write_blocks+0x2f0>
    d32b:	76 69                	jbe    d396 <ahci_write_blocks+0x2f6>
    d32d:	73 69                	jae    d398 <ahci_write_blocks+0x2f8>
    d32f:	6f                   	outsl  %ds:(%esi),(%dx)
    d330:	6e                   	outsb  %ds:(%esi),(%dx)
    d331:	3d 25 30 32 78       	cmp    $0x78323025,%eax
    d336:	00 00                	add    %al,(%eax)
    d338:	70 63                	jo     d39d <ahci_write_blocks+0x2fd>
    d33a:	69 2f 63 6c 61 73    	imul   $0x73616c63,(%edi),%ebp
    d340:	73 3d                	jae    d37f <ahci_write_blocks+0x2df>
    d342:	25 30 32 78 26       	and    $0x26783230,%eax
    d347:	73 75                	jae    d3be <ahci_write_blocks+0x31e>
    d349:	62 63 6c             	bound  %esp,0x6c(%ebx)
    d34c:	61                   	popa   
    d34d:	73 73                	jae    d3c2 <ahci_write_blocks+0x322>
    d34f:	3d 25 30 32 78       	cmp    $0x78323025,%eax
    d354:	26 70 72             	es jo  d3c9 <ahci_write_blocks+0x329>
    d357:	6f                   	outsl  %ds:(%esi),(%dx)
    d358:	67 69 66 3d 25 30 32 	imul   $0x78323025,0x3d(%bp),%esp
    d35f:	78 
    d360:	00 00                	add    %al,(%eax)
    d362:	00 00                	add    %al,(%eax)
    d364:	46                   	inc    %esi
    d365:	75 6e                	jne    d3d5 <ahci_write_blocks+0x335>
    d367:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
    d36b:	6e                   	outsb  %ds:(%esi),(%dx)
    d36c:	20 25 73 20 3a 20    	and    %ah,0x203a2073
    d372:	61                   	popa   
    d373:	64 64 72 65          	fs fs jb d3dc <ahci_write_blocks+0x33c>
    d377:	73 73                	jae    d3ec <ahci_write_blocks+0x34c>
    d379:	20 3d 20 25 6c 6c    	and    %bh,0x6c6c2520
    d37f:	78 2c                	js     d3ad <ahci_write_blocks+0x30d>
    d381:	20 73 69             	and    %dh,0x69(%ebx)
    d384:	7a 65                	jp     d3eb <ahci_write_blocks+0x34b>
    d386:	20 3d 20 25 78 00    	and    %bh,0x782520
    d38c:	44                   	inc    %esp
    d38d:	65 76 69             	gs jbe d3f9 <ahci_write_blocks+0x359>
    d390:	63 65 20             	arpl   %sp,0x20(%ebp)
    d393:	69 73 20 70 63 69 2d 	imul   $0x2d696370,0x20(%ebx),%esi
    d39a:	74 6f                	je     d40b <ahci_write_blocks+0x36b>
    d39c:	2d 70 63 69 20       	sub    $0x20696370,%eax
    d3a1:	62 72 69             	bound  %esi,0x69(%edx)
    d3a4:	64 67 65 2c 20       	fs addr16 gs sub $0x20,%al
    d3a9:	73 65                	jae    d410 <ahci_write_blocks+0x370>
    d3ab:	63 6f 6e             	arpl   %bp,0x6e(%edi)
    d3ae:	64 61                	fs popa 
    d3b0:	72 79                	jb     d42b <ahci_write_blocks+0x38b>
    d3b2:	20 62 75             	and    %ah,0x75(%edx)
    d3b5:	73 20                	jae    d3d7 <ahci_write_blocks+0x337>
    d3b7:	6e                   	outsb  %ds:(%esi),(%dx)
    d3b8:	75 6d                	jne    d427 <ahci_write_blocks+0x387>
    d3ba:	62 65 72             	bound  %esp,0x72(%ebp)
    d3bd:	20 3d 20 25 64 2e    	and    %bh,0x2e642520
    d3c3:	00 70 63             	add    %dh,0x63(%eax)
    d3c6:	69 5f 64 65 76 5f 61 	imul   $0x615f7665,0x64(%edi),%ebx
    d3cd:	64 64 20 61 6c       	fs and %ah,%fs:0x6c(%ecx)
    d3d2:	6c                   	insb   (%dx),%es:(%edi)
    d3d3:	6f                   	outsl  %ds:(%esi),(%dx)
    d3d4:	63 61 74             	arpl   %sp,0x74(%ecx)
    d3d7:	69 6f 6e 20 66 61 69 	imul   $0x69616620,0x6e(%edi),%ebp
    d3de:	6c                   	insb   (%dx),%es:(%edi)
    d3df:	65 64 2e 00 00       	gs fs add %al,%cs:(%eax)
    d3e4:	70 63                	jo     d449 <ahci_write_blocks+0x3a9>
    d3e6:	69 5f 64 65 76 5f 61 	imul   $0x615f7665,0x64(%edi),%ebx
    d3ed:	64 64 20 66 61       	fs and %ah,%fs:0x61(%esi)
    d3f2:	69 6c 65 64 20 74 6f 	imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
    d3f9:	20 
    d3fa:	63 6f 6e             	arpl   %bp,0x6e(%edi)
    d3fd:	6e                   	outsb  %ds:(%esi),(%dx)
    d3fe:	65 63 74 20 74       	arpl   %si,%gs:0x74(%eax,%eiz,1)
    d403:	6f                   	outsl  %ds:(%esi),(%dx)
    d404:	20 74 68 65          	and    %dh,0x65(%eax,%ebp,2)
    d408:	20 70 61             	and    %dh,0x61(%eax)
    d40b:	72 65                	jb     d472 <ahci_write_blocks+0x3d2>
    d40d:	6e                   	outsb  %ds:(%esi),(%dx)
    d40e:	74 20                	je     d430 <ahci_write_blocks+0x390>
    d410:	64 72 69             	fs jb  d47c <ahci_write_blocks+0x3dc>
    d413:	76 65                	jbe    d47a <ahci_write_blocks+0x3da>
    d415:	72 2e                	jb     d445 <ahci_write_blocks+0x3a5>
    d417:	00 70 63             	add    %dh,0x63(%eax)
    d41a:	69 5f 64 65 76 5f 61 	imul   $0x615f7665,0x64(%edi),%ebx
    d421:	64 64 20 66 61       	fs and %ah,%fs:0x61(%esi)
    d426:	69 6c 65 64 20 74 6f 	imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
    d42d:	20 
    d42e:	67 65 74 20          	addr16 gs je d452 <ahci_write_blocks+0x3b2>
    d432:	50                   	push   %eax
    d433:	49                   	dec    %ecx
    d434:	4f                   	dec    %edi
    d435:	20 77 69             	and    %dh,0x69(%edi)
    d438:	6e                   	outsb  %ds:(%esi),(%dx)
    d439:	64 6f                	outsl  %fs:(%esi),(%dx)
    d43b:	77 20                	ja     d45d <ahci_write_blocks+0x3bd>
    d43d:	66 6f                	outsw  %ds:(%esi),(%dx)
    d43f:	72 20                	jb     d461 <ahci_write_blocks+0x3c1>
    d441:	74 68                	je     d4ab <ahci_write_blocks+0x40b>
    d443:	65 20 64 65 76       	and    %ah,%gs:0x76(%ebp,%eiz,2)
    d448:	69 63 65 2e 00 00 00 	imul   $0x2e,0x65(%ebx),%esp
    d44f:	00 70 63             	add    %dh,0x63(%eax)
    d452:	69 5f 64 65 76 5f 61 	imul   $0x615f7665,0x64(%edi),%ebx
    d459:	64 64 20 66 61       	fs and %ah,%fs:0x61(%esi)
    d45e:	69 6c 65 64 20 74 6f 	imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
    d465:	20 
    d466:	67 65 74 20          	addr16 gs je d48a <ahci_write_blocks+0x3ea>
    d46a:	68 77 20 72 65       	push   $0x65722077
    d46f:	73 6f                	jae    d4e0 <ahci_write_blocks+0x440>
    d471:	75 72                	jne    d4e5 <ahci_write_blocks+0x445>
    d473:	63 65 73             	arpl   %sp,0x73(%ebp)
    d476:	20 66 6f             	and    %ah,0x6f(%esi)
    d479:	72 20                	jb     d49b <ahci_write_blocks+0x3fb>
    d47b:	74 68                	je     d4e5 <ahci_write_blocks+0x445>
    d47d:	65 20 64 65 76       	and    %ah,%gs:0x76(%ebp,%eiz,2)
    d482:	69 63 65 2e 00 00 68 	imul   $0x6800002e,0x65(%ebx),%esp
    d489:	77 5f                	ja     d4ea <ahci_write_blocks+0x44a>
    d48b:	72 65                	jb     d4f2 <ahci_write_blocks+0x452>
    d48d:	73 6f                	jae    d4fe <ahci_write_blocks+0x45e>
    d48f:	75 72                	jne    d503 <ahci_write_blocks+0x463>
    d491:	63 65 73             	arpl   %sp,0x73(%ebp)
    d494:	2e 72 65             	jb,pn  d4fc <ahci_write_blocks+0x45c>
    d497:	73 6f                	jae    d508 <ahci_write_blocks+0x468>
    d499:	75 72                	jne    d50d <ahci_write_blocks+0x46d>
    d49b:	63 65 73             	arpl   %sp,0x73(%ebp)
    d49e:	5b                   	pop    %ebx
    d49f:	30 5d 2e             	xor    %bl,0x2e(%ebp)
    d4a2:	74 79                	je     d51d <ahci_write_blocks+0x47d>
    d4a4:	70 65                	jo     d50b <ahci_write_blocks+0x46b>
    d4a6:	20 3d 3d 20 4d 45    	and    %bh,0x454d203d
    d4ac:	4d                   	dec    %ebp
    d4ad:	5f                   	pop    %edi
    d4ae:	52                   	push   %edx
    d4af:	41                   	inc    %ecx
    d4b0:	4e                   	dec    %esi
    d4b1:	47                   	inc    %edi
    d4b2:	45                   	inc    %ebp
    d4b3:	00 46 61             	add    %al,0x61(%esi)
    d4b6:	69 6c 65 64 20 74 6f 	imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
    d4bd:	20 
    d4be:	6d                   	insl   (%dx),%es:(%edi)
    d4bf:	61                   	popa   
    d4c0:	70 20                	jo     d4e2 <ahci_write_blocks+0x442>
    d4c2:	63 6f 6e             	arpl   %bp,0x6e(%edi)
    d4c5:	66 69 67 75 72 61    	imul   $0x6172,0x75(%edi),%sp
    d4cb:	74 69                	je     d536 <ahci_write_blocks+0x496>
    d4cd:	6f                   	outsl  %ds:(%esi),(%dx)
    d4ce:	6e                   	outsb  %ds:(%esi),(%dx)
    d4cf:	20 73 70             	and    %dh,0x70(%ebx)
    d4d2:	61                   	popa   
    d4d3:	63 65 2e             	arpl   %sp,0x2e(%ebp)
    d4d6:	00 00                	add    %al,(%eax)
    d4d8:	68 77 5f 72 65       	push   $0x65725f77
    d4dd:	73 6f                	jae    d54e <ahci_write_blocks+0x4ae>
    d4df:	75 72                	jne    d553 <ahci_write_blocks+0x4b3>
    d4e1:	63 65 73             	arpl   %sp,0x73(%ebp)
    d4e4:	2e 72 65             	jb,pn  d54c <ahci_write_blocks+0x4ac>
    d4e7:	73 6f                	jae    d558 <ahci_write_blocks+0x4b8>
    d4e9:	75 72                	jne    d55d <ahci_write_blocks+0x4bd>
    d4eb:	63 65 73             	arpl   %sp,0x73(%ebp)
    d4ee:	5b                   	pop    %ebx
    d4ef:	30 5d 2e             	xor    %bl,0x2e(%ebp)
    d4f2:	74 79                	je     d56d <ahci_write_blocks+0x4cd>
    d4f4:	70 65                	jo     d55b <ahci_write_blocks+0x4bb>
    d4f6:	20 3d 3d 20 49 4f    	and    %bh,0x4f49203d
    d4fc:	5f                   	pop    %edi
    d4fd:	52                   	push   %edx
    d4fe:	41                   	inc    %ecx
    d4ff:	4e                   	dec    %esi
    d500:	47                   	inc    %edi
    d501:	45                   	inc    %ebp
    d502:	00 00                	add    %al,(%eax)
    d504:	68 77 5f 72 65       	push   $0x65725f77
    d509:	73 6f                	jae    d57a <ahci_write_blocks+0x4da>
    d50b:	75 72                	jne    d57f <ahci_write_blocks+0x4df>
    d50d:	63 65 73             	arpl   %sp,0x73(%ebp)
    d510:	2e 72 65             	jb,pn  d578 <ahci_write_blocks+0x4d8>
    d513:	73 6f                	jae    d584 <ahci_write_blocks+0x4e4>
    d515:	75 72                	jne    d589 <ahci_write_blocks+0x4e9>
    d517:	63 65 73             	arpl   %sp,0x73(%ebp)
    d51a:	5b                   	pop    %ebx
    d51b:	30 5d 2e             	xor    %bl,0x2e(%ebp)
    d51e:	72 65                	jb     d585 <ahci_write_blocks+0x4e5>
    d520:	73 2e                	jae    d550 <ahci_write_blocks+0x4b0>
    d522:	69 6f 5f 72 61 6e 67 	imul   $0x676e6172,0x5f(%edi),%ebp
    d529:	65 2e 73 69          	gs jae,pn d596 <ahci_write_blocks+0x4f6>
    d52d:	7a 65                	jp     d594 <ahci_write_blocks+0x4f4>
    d52f:	20 3e                	and    %bh,(%esi)
    d531:	3d 20 34 00 00       	cmp    $0x3420,%eax
    d536:	00 00                	add    %al,(%eax)
    d538:	68 77 5f 72 65       	push   $0x65725f77
    d53d:	73 6f                	jae    d5ae <ahci_write_blocks+0x50e>
    d53f:	75 72                	jne    d5b3 <ahci_write_blocks+0x513>
    d541:	63 65 73             	arpl   %sp,0x73(%ebp)
    d544:	2e 72 65             	jb,pn  d5ac <ahci_write_blocks+0x50c>
    d547:	73 6f                	jae    d5b8 <ahci_write_blocks+0x518>
    d549:	75 72                	jne    d5bd <ahci_write_blocks+0x51d>
    d54b:	63 65 73             	arpl   %sp,0x73(%ebp)
    d54e:	5b                   	pop    %ebx
    d54f:	31 5d 2e             	xor    %ebx,0x2e(%ebp)
    d552:	74 79                	je     d5cd <ahci_write_blocks+0x52d>
    d554:	70 65                	jo     d5bb <ahci_write_blocks+0x51b>
    d556:	20 3d 3d 20 49 4f    	and    %bh,0x4f49203d
    d55c:	5f                   	pop    %edi
    d55d:	52                   	push   %edx
    d55e:	41                   	inc    %ecx
    d55f:	4e                   	dec    %esi
    d560:	47                   	inc    %edi
    d561:	45                   	inc    %ebp
    d562:	00 00                	add    %al,(%eax)
    d564:	68 77 5f 72 65       	push   $0x65725f77
    d569:	73 6f                	jae    d5da <ahci_write_blocks+0x53a>
    d56b:	75 72                	jne    d5df <ahci_write_blocks+0x53f>
    d56d:	63 65 73             	arpl   %sp,0x73(%ebp)
    d570:	2e 72 65             	jb,pn  d5d8 <ahci_write_blocks+0x538>
    d573:	73 6f                	jae    d5e4 <ahci_write_blocks+0x544>
    d575:	75 72                	jne    d5e9 <ahci_write_blocks+0x549>
    d577:	63 65 73             	arpl   %sp,0x73(%ebp)
    d57a:	5b                   	pop    %ebx
    d57b:	31 5d 2e             	xor    %ebx,0x2e(%ebp)
    d57e:	72 65                	jb     d5e5 <ahci_write_blocks+0x545>
    d580:	73 2e                	jae    d5b0 <ahci_write_blocks+0x510>
    d582:	69 6f 5f 72 61 6e 67 	imul   $0x676e6172,0x5f(%edi),%ebp
    d589:	65 2e 73 69          	gs jae,pn d5f6 <ahci_write_blocks+0x556>
    d58d:	7a 65                	jp     d5f4 <ahci_write_blocks+0x554>
    d58f:	20 3e                	and    %bh,(%esi)
    d591:	3d 20 34 00 00       	cmp    $0x3420,%eax
    d596:	00 00                	add    %al,(%eax)
    d598:	46                   	inc    %esi
    d599:	61                   	popa   
    d59a:	69 6c 65 64 20 74 6f 	imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
    d5a1:	20 
    d5a2:	65 6e                	outsb  %gs:(%esi),(%dx)
    d5a4:	61                   	popa   
    d5a5:	62 6c 65 20          	bound  %ebp,0x20(%ebp,%eiz,2)
    d5a9:	63 6f 6e             	arpl   %bp,0x6e(%edi)
    d5ac:	66 69 67 75 72 61    	imul   $0x6172,0x75(%edi),%sp
    d5b2:	74 69                	je     d61d <ahci_write_blocks+0x57d>
    d5b4:	6f                   	outsl  %ds:(%esi),(%dx)
    d5b5:	6e                   	outsb  %ds:(%esi),(%dx)
    d5b6:	20 70 6f             	and    %dh,0x6f(%eax)
    d5b9:	72 74                	jb     d62f <ahci_write_blocks+0x58f>
    d5bb:	73 2e                	jae    d5eb <ahci_write_blocks+0x54b>
    d5bd:	00 00                	add    %al,(%eax)
    d5bf:	00 46 61             	add    %al,0x61(%esi)
    d5c2:	69 6c 65 64 20 63 72 	imul   $0x65726320,0x64(%ebp,%eiz,2),%ebp
    d5c9:	65 
    d5ca:	61                   	popa   
    d5cb:	74 69                	je     d636 <ahci_write_blocks+0x596>
    d5cd:	6e                   	outsb  %ds:(%esi),(%dx)
    d5ce:	67 20 63 6f          	and    %ah,0x6f(%bp,%di)
    d5d2:	6e                   	outsb  %ds:(%esi),(%dx)
    d5d3:	74 72                	je     d647 <ahci_write_blocks+0x5a7>
    d5d5:	6f                   	outsl  %ds:(%esi),(%dx)
    d5d6:	6c                   	insb   (%dx),%es:(%edi)
    d5d7:	20 66 75             	and    %ah,0x75(%esi)
    d5da:	6e                   	outsb  %ds:(%esi),(%dx)
    d5db:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
    d5df:	6e                   	outsb  %ds:(%esi),(%dx)
    d5e0:	2e 00 00             	add    %al,%cs:(%eax)
    d5e3:	00 46 61             	add    %al,0x61(%esi)
    d5e6:	69 6c 65 64 20 62 69 	imul   $0x6e696220,0x64(%ebp,%eiz,2),%ebp
    d5ed:	6e 
    d5ee:	64 69 6e 67 20 63 6f 	imul   $0x6e6f6320,%fs:0x67(%esi),%ebp
    d5f5:	6e 
    d5f6:	74 72                	je     d66a <ahci_write_blocks+0x5ca>
    d5f8:	6f                   	outsl  %ds:(%esi),(%dx)
    d5f9:	6c                   	insb   (%dx),%es:(%edi)
    d5fa:	20 66 75             	and    %ah,0x75(%esi)
    d5fd:	6e                   	outsb  %ds:(%esi),(%dx)
    d5fe:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
    d602:	6e                   	outsb  %ds:(%esi),(%dx)
    d603:	2e 00 00             	add    %al,%cs:(%eax)
    d606:	00 00                	add    %al,(%eax)
    d608:	70 63                	jo     d66d <ahci_write_blocks+0x5cd>
    d60a:	69 69 6e 74 65 6c 3a 	imul   $0x3a6c6574,0x6e(%ecx),%ebp
    d611:	20 48 65             	and    %cl,0x65(%eax)
    d614:	6c                   	insb   (%dx),%es:(%edi)
    d615:	65 6e                	outsb  %gs:(%esi),(%dx)
    d617:	4f                   	dec    %edi
    d618:	53                   	push   %ebx
    d619:	20 50 43             	and    %dl,0x43(%eax)
    d61c:	49                   	dec    %ecx
    d61d:	20 62 75             	and    %ah,0x75(%edx)
    d620:	73 20                	jae    d642 <ahci_write_blocks+0x5a2>
    d622:	64 72 69             	fs jb  d68e <ahci_write_blocks+0x5ee>
    d625:	76 65                	jbe    d68c <ahci_write_blocks+0x5ec>
    d627:	72 20                	jb     d649 <ahci_write_blocks+0x5a9>
    d629:	28 49 6e             	sub    %cl,0x6e(%ecx)
    d62c:	74 65                	je     d693 <ahci_write_blocks+0x5f3>
    d62e:	6c                   	insb   (%dx),%es:(%edi)
    d62f:	20 6d 65             	and    %ch,0x65(%ebp)
    d632:	74 68                	je     d69c <ahci_write_blocks+0x5fc>
    d634:	6f                   	outsl  %ds:(%esi),(%dx)
    d635:	64 20 31             	and    %dh,%fs:(%ecx)
    d638:	29 2e                	sub    %ebp,(%esi)
    d63a:	0a 00                	or     (%eax),%al
    d63c:	67 65 6e             	outsb  %gs:(%si),(%dx)
    d63f:	65 72 69             	gs jb  d6ab <ahci_write_blocks+0x60b>
    d642:	63 2f                	arpl   %bp,(%edi)
    d644:	64 72 69             	fs jb  d6b0 <ahci_write_blocks+0x610>
    d647:	76 65                	jbe    d6ae <ahci_write_blocks+0x60e>
    d649:	72 2e                	jb     d679 <ahci_write_blocks+0x5d9>
    d64b:	63 00                	arpl   %ax,(%eax)
    d64d:	69 73 5f 76 61 6c 69 	imul   $0x696c6176,0x5f(%ebx),%esi
    d654:	64 5f                	fs pop %edi
    d656:	69 66 61 63 65 5f 69 	imul   $0x695f6563,0x61(%esi),%esp
    d65d:	64 78 28             	fs js  d688 <ahci_write_blocks+0x5e8>
    d660:	69 64 78 29 00 72 65 	imul   $0x6d657200,0x29(%eax,%edi,2),%esp
    d667:	6d 
    d668:	5f                   	pop    %edi
    d669:	69 66 61 63 65 20 21 	imul   $0x21206563,0x61(%esi),%esp
    d670:	3d 20 4e 55 4c       	cmp    $0x4c554e20,%eax
    d675:	4c                   	dec    %esp
    d676:	00 64 65 76          	add    %ah,0x76(%ebp,%eiz,2)
    d67a:	2d 3e 64 72 69       	sub    $0x6972643e,%eax
    d67f:	76 65                	jbe    d6e6 <ahci_write_blocks+0x646>
    d681:	72 5f                	jb     d6e2 <ahci_write_blocks+0x642>
    d683:	64 61                	fs popa 
    d685:	74 61                	je     d6e8 <ahci_write_blocks+0x648>
    d687:	20 3d 3d 20 4e 55    	and    %bh,0x554e203d
    d68d:	4c                   	dec    %esp
    d68e:	4c                   	dec    %esp
    d68f:	00 64 65 76          	add    %ah,0x76(%ebp,%eiz,2)
    d693:	2d 3e 70 61 72       	sub    $0x7261703e,%eax
    d698:	65 6e                	outsb  %gs:(%esi),(%dx)
    d69a:	74 5f                	je     d6fb <ahci_write_blocks+0x65b>
    d69c:	73 65                	jae    d703 <ahci_write_blocks+0x663>
    d69e:	73 73                	jae    d713 <ahci_write_blocks+0x673>
    d6a0:	20 3d 3d 20 4e 55    	and    %bh,0x554e203d
    d6a6:	4c                   	dec    %esp
    d6a7:	4c                   	dec    %esp
    d6a8:	00 64 65 76          	add    %ah,0x76(%ebp,%eiz,2)
    d6ac:	2d 3e 6e 61 6d       	sub    $0x6d616e3e,%eax
    d6b1:	65 20 3d 3d 20 4e 55 	and    %bh,%gs:0x554e203d
    d6b8:	4c                   	dec    %esp
    d6b9:	4c                   	dec    %esp
    d6ba:	00 66 75             	add    %ah,0x75(%esi)
    d6bd:	6e                   	outsb  %ds:(%esi),(%dx)
    d6be:	2d 3e 62 6f 75       	sub    $0x756f623e,%eax
    d6c3:	6e                   	outsb  %ds:(%esi),(%dx)
    d6c4:	64 20 3d 3d 20 66 61 	and    %bh,%fs:0x6166203d
    d6cb:	6c                   	insb   (%dx),%es:(%edi)
    d6cc:	73 65                	jae    d733 <ahci_write_blocks+0x693>
    d6ce:	00 66 75             	add    %ah,0x75(%esi)
    d6d1:	6e                   	outsb  %ds:(%esi),(%dx)
    d6d2:	2d 3e 64 72 69       	sub    $0x6972643e,%eax
    d6d7:	76 65                	jbe    d73e <ahci_write_blocks+0x69e>
    d6d9:	72 5f                	jb     d73a <ahci_write_blocks+0x69a>
    d6db:	64 61                	fs popa 
    d6dd:	74 61                	je     d740 <ahci_write_blocks+0x6a0>
    d6df:	20 3d 3d 20 4e 55    	and    %bh,0x554e203d
    d6e5:	4c                   	dec    %esp
    d6e6:	4c                   	dec    %esp
    d6e7:	00 66 75             	add    %ah,0x75(%esi)
    d6ea:	6e                   	outsb  %ds:(%esi),(%dx)
    d6eb:	2d 3e 6e 61 6d       	sub    $0x6d616e3e,%eax
    d6f0:	65 20 21             	and    %ah,%gs:(%ecx)
    d6f3:	3d 20 4e 55 4c       	cmp    $0x4c554e20,%eax
    d6f8:	4c                   	dec    %esp
    d6f9:	00 66 75             	add    %ah,0x75(%esi)
    d6fc:	6e                   	outsb  %ds:(%esi),(%dx)
    d6fd:	2d 3e 64 65 76       	sub    $0x7665643e,%eax
    d702:	20 21                	and    %ah,(%ecx)
    d704:	3d 20 4e 55 4c       	cmp    $0x4c554e20,%eax
    d709:	4c                   	dec    %esp
    d70a:	00 66 75             	add    %ah,0x75(%esi)
    d70d:	6e                   	outsb  %ds:(%esi),(%dx)
    d70e:	2d 3e 62 6f 75       	sub    $0x756f623e,%eax
    d713:	6e                   	outsb  %ds:(%esi),(%dx)
    d714:	64 20 3d 3d 20 74 72 	and    %bh,%fs:0x7274203d
    d71b:	75 65                	jne    d782 <ahci_write_blocks+0x6e2>
    d71d:	00 66 75             	add    %ah,0x75(%esi)
    d720:	6e                   	outsb  %ds:(%esi),(%dx)
    d721:	2d 3e 66 74 79       	sub    $0x7974663e,%eax
    d726:	70 65                	jo     d78d <ahci_write_blocks+0x6ed>
    d728:	20 3d 3d 20 66 75    	and    %bh,0x7566203d
    d72e:	6e                   	outsb  %ds:(%esi),(%dx)
    d72f:	5f                   	pop    %edi
    d730:	69 6e 6e 65 72 00 66 	imul   $0x66007265,0x6e(%esi),%ebp
    d737:	75 6e                	jne    d7a7 <ahci_write_blocks+0x707>
    d739:	2d 3e 63 6f 6e       	sub    $0x6e6f633e,%eax
    d73e:	6e                   	outsb  %ds:(%esi),(%dx)
    d73f:	5f                   	pop    %edi
    d740:	68 61 6e 64 6c       	push   $0x6c646e61
    d745:	65 72 20             	gs jb  d768 <ahci_write_blocks+0x6c8>
    d748:	3d 3d 20 4e 55       	cmp    $0x554e203d,%eax
    d74d:	4c                   	dec    %esp
    d74e:	4c                   	dec    %esp
    d74f:	00 66 75             	add    %ah,0x75(%esi)
    d752:	6e                   	outsb  %ds:(%esi),(%dx)
    d753:	2d 3e 6f 70 73       	sub    $0x73706f3e,%eax
    d758:	20 3d 3d 20 4e 55    	and    %bh,0x554e203d
    d75e:	4c                   	dec    %esp
    d75f:	4c                   	dec    %esp
    d760:	00 66 75             	add    %ah,0x75(%esi)
    d763:	6e                   	outsb  %ds:(%esi),(%dx)
    d764:	2d 3e 66 74 79       	sub    $0x7974663e,%eax
    d769:	70 65                	jo     d7d0 <ahci_write_blocks+0x730>
    d76b:	20 3d 3d 20 66 75    	and    %bh,0x7566203d
    d771:	6e                   	outsb  %ds:(%esi),(%dx)
    d772:	5f                   	pop    %edi
    d773:	65 78 70             	gs js  d7e6 <ahci_write_blocks+0x746>
    d776:	6f                   	outsl  %ds:(%esi),(%dx)
    d777:	73 65                	jae    d7de <ahci_write_blocks+0x73e>
    d779:	64 00 64 72 69       	add    %ah,%fs:0x69(%edx,%esi,2)
    d77e:	76 65                	jbe    d7e5 <ahci_write_blocks+0x745>
    d780:	72 20                	jb     d7a2 <ahci_write_blocks+0x702>
    d782:	61                   	popa   
    d783:	6c                   	insb   (%dx),%es:(%edi)
    d784:	72 65                	jb     d7eb <ahci_write_blocks+0x74b>
    d786:	61                   	popa   
    d787:	64 79 20             	fs jns d7aa <ahci_write_blocks+0x70a>
    d78a:	73 74                	jae    d800 <ahci_write_blocks+0x760>
    d78c:	61                   	popa   
    d78d:	72 74                	jb     d803 <ahci_write_blocks+0x763>
    d78f:	65 64 00 66 90       	gs add %ah,%fs:-0x70(%esi)
    d794:	66 69 62 72 69 6c    	imul   $0x6c69,0x72(%edx),%sp
    d79a:	5f                   	pop    %edi
    d79b:	6d                   	insl   (%dx),%es:(%edi)
    d79c:	75 74                	jne    d812 <ahci_write_blocks+0x772>
    d79e:	65 78 5f             	gs js  d800 <ahci_write_blocks+0x760>
    d7a1:	69 73 5f 6c 6f 63 6b 	imul   $0x6b636f6c,0x5f(%ebx),%esi
    d7a8:	65 64 28 26          	gs sub %ah,%fs:(%esi)
    d7ac:	66 75 6e             	data16 jne d81d <ahci_write_blocks+0x77d>
    d7af:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
    d7b3:	6e                   	outsb  %ds:(%esi),(%dx)
    d7b4:	73 5f                	jae    d815 <ahci_write_blocks+0x775>
    d7b6:	6d                   	insl   (%dx),%es:(%edi)
    d7b7:	75 74                	jne    d82d <ahci_write_blocks+0x78d>
    d7b9:	65 78 29             	gs js  d7e5 <ahci_write_blocks+0x745>
    d7bc:	00 00                	add    %al,(%eax)
    d7be:	00 00                	add    %al,(%eax)
    d7c0:	25 73 3a 20 64       	and    $0x64203a73,%eax
    d7c5:	72 69                	jb     d830 <ahci_write_blocks+0x790>
    d7c7:	76 65                	jbe    d82e <ahci_write_blocks+0x78e>
    d7c9:	72 5f                	jb     d82a <ahci_write_blocks+0x78a>
    d7cb:	63 6f 6e             	arpl   %bp,0x6e(%edi)
    d7ce:	6e                   	outsb  %ds:(%esi),(%dx)
    d7cf:	65 63 74 69 6f       	arpl   %si,%gs:0x6f(%ecx,%ebp,2)
    d7d4:	6e                   	outsb  %ds:(%esi),(%dx)
    d7d5:	5f                   	pop    %edi
    d7d6:	67 65 6e             	outsb  %gs:(%si),(%dx)
    d7d9:	20 65 72             	and    %ah,0x72(%ebp)
    d7dc:	72 6f                	jb     d84d <ahci_write_blocks+0x7ad>
    d7de:	72 20                	jb     d800 <ahci_write_blocks+0x760>
    d7e0:	2d 20 69 6e 76       	sub    $0x766e6920,%eax
    d7e5:	61                   	popa   
    d7e6:	6c                   	insb   (%dx),%es:(%edi)
    d7e7:	69 64 20 69 6e 74 65 	imul   $0x7265746e,0x69(%eax,%eiz,1),%esp
    d7ee:	72 
    d7ef:	66 61                	popaw  
    d7f1:	63 65 20             	arpl   %sp,0x20(%ebp)
    d7f4:	69 64 20 25 64 2e 00 	imul   $0x2e64,0x25(%eax,%eiz,1),%esp
    d7fb:	00 
    d7fc:	25 73 3a 20 64       	and    $0x64203a73,%eax
    d801:	72 69                	jb     d86c <ahci_write_blocks+0x7cc>
    d803:	76 65                	jbe    d86a <ahci_write_blocks+0x7ca>
    d805:	72 5f                	jb     d866 <ahci_write_blocks+0x7c6>
    d807:	63 6f 6e             	arpl   %bp,0x6e(%edi)
    d80a:	6e                   	outsb  %ds:(%esi),(%dx)
    d80b:	65 63 74 69 6f       	arpl   %si,%gs:0x6f(%ecx,%ebp,2)
    d810:	6e                   	outsb  %ds:(%esi),(%dx)
    d811:	5f                   	pop    %edi
    d812:	67 65 6e             	outsb  %gs:(%si),(%dx)
    d815:	20 65 72             	and    %ah,0x72(%ebp)
    d818:	72 6f                	jb     d889 <ahci_write_blocks+0x7e9>
    d81a:	72 20                	jb     d83c <ahci_write_blocks+0x79c>
    d81c:	2d 20 00 00 46       	sub    $0x46000020,%eax
    d821:	75 6e                	jne    d891 <ahci_write_blocks+0x7f1>
    d823:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
    d827:	6e                   	outsb  %ds:(%esi),(%dx)
    d828:	20 77 69             	and    %dh,0x69(%edi)
    d82b:	74 68                	je     d895 <ahci_write_blocks+0x7f5>
    d82d:	20 68 61             	and    %ch,0x61(%eax)
    d830:	6e                   	outsb  %ds:(%esi),(%dx)
    d831:	64 6c                	fs insb (%dx),%es:(%edi)
    d833:	65 20 25 75 20 68 61 	and    %ah,%gs:0x61682075
    d83a:	73 20                	jae    d85c <ahci_write_blocks+0x7bc>
    d83c:	6e                   	outsb  %ds:(%esi),(%dx)
    d83d:	6f                   	outsl  %ds:(%esi),(%dx)
    d83e:	20 69 6e             	and    %ch,0x6e(%ecx)
    d841:	74 65                	je     d8a8 <ahci_write_blocks+0x808>
    d843:	72 66                	jb     d8ab <ahci_write_blocks+0x80b>
    d845:	61                   	popa   
    d846:	63 65 20             	arpl   %sp,0x20(%ebp)
    d849:	77 69                	ja     d8b4 <ahci_write_blocks+0x814>
    d84b:	74 68                	je     d8b5 <ahci_write_blocks+0x815>
    d84d:	20 69 64             	and    %ch,0x64(%ecx)
    d850:	20 25 64 2e 0a 00    	and    %ah,0xa2e64
    d856:	00 00                	add    %al,(%eax)
    d858:	25 73 3a 20 64       	and    $0x64203a73,%eax
    d85d:	72 69                	jb     d8c8 <ahci_write_blocks+0x828>
    d85f:	76 65                	jbe    d8c6 <ahci_write_blocks+0x826>
    d861:	72 5f                	jb     d8c2 <ahci_write_blocks+0x822>
    d863:	63 6f 6e             	arpl   %bp,0x6e(%edi)
    d866:	6e                   	outsb  %ds:(%esi),(%dx)
    d867:	65 63 74 69 6f       	arpl   %si,%gs:0x6f(%ecx,%ebp,2)
    d86c:	6e                   	outsb  %ds:(%esi),(%dx)
    d86d:	5f                   	pop    %edi
    d86e:	67 65 6e             	outsb  %gs:(%si),(%dx)
    d871:	20 65 72             	and    %ah,0x72(%ebp)
    d874:	72 6f                	jb     d8e5 <ahci_write_blocks+0x845>
    d876:	72 20                	jb     d898 <ahci_write_blocks+0x7f8>
    d878:	2d 20 69 6e 76       	sub    $0x766e6920,%eax
    d87d:	61                   	popa   
    d87e:	6c                   	insb   (%dx),%es:(%edi)
    d87f:	69 64 20 69 6e 74 65 	imul   $0x7265746e,0x69(%eax,%eiz,1),%esp
    d886:	72 
    d887:	66 61                	popaw  
    d889:	63 65 20             	arpl   %sp,0x20(%ebp)
    d88c:	6d                   	insl   (%dx),%es:(%edi)
    d88d:	65 74 68             	gs je  d8f8 <ahci_write_blocks+0x858>
    d890:	6f                   	outsl  %ds:(%esi),(%dx)
    d891:	64 2e 00 25 73 3a 20 	fs add %ah,%cs:0x64203a73
    d898:	64 
    d899:	72 69                	jb     d904 <ahci_write_blocks+0x864>
    d89b:	76 65                	jbe    d902 <ahci_write_blocks+0x862>
    d89d:	72 5f                	jb     d8fe <ahci_write_blocks+0x85e>
    d89f:	63 6f 6e             	arpl   %bp,0x6e(%edi)
    d8a2:	6e                   	outsb  %ds:(%esi),(%dx)
    d8a3:	65 63 74 69 6f       	arpl   %si,%gs:0x6f(%ecx,%ebp,2)
    d8a8:	6e                   	outsb  %ds:(%esi),(%dx)
    d8a9:	5f                   	pop    %edi
    d8aa:	67 65 6e             	outsb  %gs:(%si),(%dx)
    d8ad:	20 65 72             	and    %ah,0x72(%ebp)
    d8b0:	72 6f                	jb     d921 <ahci_write_blocks+0x881>
    d8b2:	72 20                	jb     d8d4 <ahci_write_blocks+0x834>
    d8b4:	2d 20 6e 6f 20       	sub    $0x206f6e20,%eax
    d8b9:	66 75 6e             	data16 jne d92a <ahci_write_blocks+0x88a>
    d8bc:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
    d8c0:	6e                   	outsb  %ds:(%esi),(%dx)
    d8c1:	20 77 69             	and    %dh,0x69(%edi)
    d8c4:	74 68                	je     d92e <ahci_write_blocks+0x88e>
    d8c6:	20 68 61             	and    %ch,0x61(%eax)
    d8c9:	6e                   	outsb  %ds:(%esi),(%dx)
    d8ca:	64 6c                	fs insb (%dx),%es:(%edi)
    d8cc:	65 20 25 75 20 77 61 	and    %ah,%gs:0x61772075
    d8d3:	73 20                	jae    d8f5 <ahci_write_blocks+0x855>
    d8d5:	66 6f                	outsw  %ds:(%esi),(%dx)
    d8d7:	75 6e                	jne    d947 <ahci_write_blocks+0x8a7>
    d8d9:	64 2e 0a 00          	fs or  %cs:(%eax),%al
    d8dd:	00 00                	add    %al,(%eax)
    d8df:	00 66 69             	add    %ah,0x69(%esi)
    d8e2:	62 72 69             	bound  %esi,0x69(%edx)
    d8e5:	6c                   	insb   (%dx),%es:(%edi)
    d8e6:	5f                   	pop    %edi
    d8e7:	6d                   	insl   (%dx),%es:(%edi)
    d8e8:	75 74                	jne    d95e <ahci_write_blocks+0x8be>
    d8ea:	65 78 5f             	gs js  d94c <ahci_write_blocks+0x8ac>
    d8ed:	69 73 5f 6c 6f 63 6b 	imul   $0x6b636f6c,0x5f(%ebx),%esi
    d8f4:	65 64 28 26          	gs sub %ah,%fs:(%esi)
    d8f8:	64 65 76 69          	fs gs jbe d965 <ahci_write_blocks+0x8c5>
    d8fc:	63 65 73             	arpl   %sp,0x73(%ebp)
    d8ff:	5f                   	pop    %edi
    d900:	6d                   	insl   (%dx),%es:(%edi)
    d901:	75 74                	jne    d977 <ahci_write_blocks+0x8d7>
    d903:	65 78 29             	gs js  d92f <ahci_write_blocks+0x88f>
    d906:	00 00                	add    %al,(%eax)
    d908:	45                   	inc    %ebp
    d909:	72 72                	jb     d97d <ahci_write_blocks+0x8dd>
    d90b:	6f                   	outsl  %ds:(%esi),(%dx)
    d90c:	72 3a                	jb     d948 <ahci_write_blocks+0x8a8>
    d90e:	20 46 61             	and    %al,0x61(%esi)
    d911:	69 6c 65 64 20 74 6f 	imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
    d918:	20 
    d919:	72 65                	jb     d980 <remote_ifaces>
    d91b:	67 69 73 74 65 72 20 	imul   $0x64207265,0x74(%bp,%di),%esi
    d922:	64 
    d923:	72 69                	jb     d98e <remote_ifaces+0xe>
    d925:	76 65                	jbe    d98c <remote_ifaces+0xc>
    d927:	72 20                	jb     d949 <ahci_write_blocks+0x8a9>
    d929:	77 69                	ja     d994 <remote_ifaces+0x14>
    d92b:	74 68                	je     d995 <remote_ifaces+0x15>
    d92d:	20 64 65 76          	and    %ah,0x76(%ebp,%eiz,2)
    d931:	69 63 65 20 6d 61 6e 	imul   $0x6e616d20,0x65(%ebx),%esp
    d938:	61                   	popa   
    d939:	67 65 72 20          	addr16 gs jb d95d <ahci_write_blocks+0x8bd>
    d93d:	28 25 73 29 2e 0a    	sub    %ah,0xa2e2973
    d943:	00 98 46 00 00 98    	add    %bl,-0x67ffffba(%eax)
    d949:	45                   	inc    %ebp
    d94a:	00 00                	add    %al,(%eax)
    d94c:	10 45 00             	adc    %al,0x0(%ebp)
    d94f:	00 68 44             	add    %ch,0x44(%eax)
    d952:	00 00                	add    %al,(%eax)
    d954:	70 47                	jo     d99d <remote_ifaces+0x1d>
    d956:	00 00                	add    %al,(%eax)
    d958:	67 65 6e             	outsb  %gs:(%si),(%dx)
    d95b:	65 72 69             	gs jb  d9c7 <remote_audio_mixer_iface_ops+0x3>
    d95e:	63 2f                	arpl   %bp,(%edi)
    d960:	64 65 76 5f          	fs gs jbe d9c3 <remote_audio_mixer_iface+0x7>
    d964:	69 66 61 63 65 2e 63 	imul   $0x632e6563,0x61(%esi),%esp
    d96b:	00 66 90             	add    %ah,-0x70(%esi)
    d96e:	66 90                	xchg   %ax,%ax
    d970:	66 90                	xchg   %ax,%ax
    d972:	66 90                	xchg   %ax,%ax
    d974:	66 90                	xchg   %ax,%ax
    d976:	66 90                	xchg   %ax,%ax
    d978:	66 90                	xchg   %ax,%ax
    d97a:	66 90                	xchg   %ax,%ax
    d97c:	66 90                	xchg   %ax,%ax
    d97e:	66 90                	xchg   %ax,%ax

0000d980 <remote_ifaces>:
    d980:	90 ec 00 00 a8 ec 00 00 b4 ec 00 00 bc d9 00 00     ................
    d990:	54 ec 00 00 a0 ed 00 00 f0 ee 00 00 a0 ef 00 00     T...............
    d9a0:	40 ef 00 00 d8 ef 00 00 28 f0 00 00 40 f0 00 00     @.......(...@...
    d9b0:	50 f0 00 00 5c f0 00 00 74 f0 00 00                 P...\...t...

0000d9bc <remote_audio_mixer_iface>:
    d9bc:	04 00 00 00 c4 d9 00 00                             ........

0000d9c4 <remote_audio_mixer_iface_ops>:
    d9c4:	e0 53 00 00 d0 52 00 00 20 52 00 00 70 52 00 00     .S...R.. R..pR..
    d9d4:	52 65 63 65 69 76 69 6e 67 20 73 68 61 72 65 20     Receiving share 
    d9e4:	72 65 71 75 65 73 74 2e 00 46 61 69 6c 65 64 20     request..Failed 
    d9f4:	74 6f 20 73 68 61 72 65 20 70 63 6d 20 62 75 66     to share pcm buf
    da04:	66 65 72 2e 00 43 61 6c 6c 69 6e 67 20 73 68 61     fer..Calling sha
    da14:	72 65 20 66 69 6e 61 6c 69 7a 65 2e 00 46 61 69     re finalize..Fai
    da24:	6c 65 64 20 74 6f 20 73 68 61 72 65 20 62 75 66     led to share buf
    da34:	66 65 72 2e 00 42 75 66 66 65 72 20 73 68 61 72     fer..Buffer shar
    da44:	65 64 20 77 69 74 68 20 73 69 7a 65 20 25 7a 75     ed with size %zu
    da54:	2e 00 46 61 69 6c 65 64 20 74 6f 20 73 65 74 20     ..Failed to set 
    da64:	65 76 65 6e 74 20 63 61 6c 6c 62 61 63 6b 2e 00     event callback..
    da74:	55 4e 4b 4e 4f 57 4e 20 43 41 50 00 55 4e 4b 4e     UNKNOWN CAP.UNKN
    da84:	4f 57 4e 20 45 56 45 4e 54 00 61 75 64 69 6f 2d     OWN EVENT.audio-
    da94:	70 63 6d 00 67 65 6e 65 72 69 63 2f 72 65 6d 6f     pcm.generic/remo
    daa4:	74 65 5f 61 75 64 69 6f 5f 70 63 6d 2e 63 00 50     te_audio_pcm.c.P
    dab4:	4c 41 59 42 41 43 4b 20 53 54 41 52 54 45 44 00     LAYBACK STARTED.
    dac4:	43 41 50 54 55 52 45 20 53 54 41 52 54 45 44 00     CAPTURE STARTED.
    dad4:	46 52 41 47 4d 45 4e 54 20 50 4c 41 59 45 44 00     FRAGMENT PLAYED.
    dae4:	46 52 41 47 4d 45 4e 54 20 43 41 50 54 55 52 45     FRAGMENT CAPTURE
    daf4:	44 00 50 4c 41 59 42 41 43 4b 20 54 45 52 4d 49     D.PLAYBACK TERMI
    db04:	4e 41 54 45 44 00 43 41 50 54 55 52 45 20 54 45     NATED.CAPTURE TE
    db14:	52 4d 49 4e 41 54 45 44 00 43 41 50 54 55 52 45     RMINATED.CAPTURE
    db24:	00 50 4c 41 59 42 41 43 4b 00 4d 41 58 49 4d 55     .PLAYBACK.MAXIMU
    db34:	4d 20 42 55 46 46 45 52 20 53 49 5a 45 00 4b 4e     M BUFFER SIZE.KN
    db44:	4f 57 53 20 42 55 46 46 45 52 20 50 4f 53 49 54     OWS BUFFER POSIT
    db54:	49 4f 4e 00 46 52 41 47 4d 45 4e 54 20 49 4e 54     ION.FRAGMENT INT
    db64:	45 52 52 55 50 54 53 00 4d 49 4e 49 4d 55 4d 20     ERRUPTS.MINIMUM 
    db74:	46 52 41 47 4d 45 4e 54 20 53 49 5a 45 00 4d 41     FRAGMENT SIZE.MA
    db84:	58 49 4d 55 4d 20 46 52 41 47 4d 45 4e 54 20 53     XIMUM FRAGMENT S
    db94:	49 5a 45 00 43 68 65 63 6b 69 6e 67 20 72 65 71     IZE.Checking req
    dba4:	75 65 73 74 65 64 20 73 68 61 72 65 20 73 69 7a     uested share siz
    dbb4:	65 2e 00 00 49 6e 63 6f 72 72 65 63 74 20 70 63     e...Incorrect pc
    dbc4:	6d 20 62 75 66 66 65 72 20 73 69 7a 65 20 72 65     m buffer size re
    dbd4:	71 75 65 73 74 65 64 2e 00 00 00 00 46 61 69 6c     quested.....Fail
    dbe4:	65 64 20 74 6f 20 63 72 65 61 74 65 20 65 76 65     ed to create eve
    dbf4:	6e 74 20 63 61 6c 6c 62 61 63 6b 00 28 66 6f 72     nt callback.(for
    dc04:	6d 61 74 20 26 20 55 49 4e 54 31 36 5f 4d 41 58     mat & UINT16_MAX
    dc14:	29 20 3d 3d 20 66 6f 72 6d 61 74 00                 ) == format.

0000dc20 <events.2836>:
	...
    ec20:	b3 da 00 00 c4 da 00 00 d4 da 00 00 e4 da 00 00     ................
    ec30:	f6 da 00 00 0a db 00 00                             ........

0000ec38 <caps.2832>:
    ec38:	1d db 00 00 25 db 00 00 2e db 00 00 42 db 00 00     ....%.......B...
    ec48:	58 db 00 00 6c db 00 00 82 db 00 00                 X...l.......

0000ec54 <remote_audio_pcm_iface>:
    ec54:	0c 00 00 00 60 ec 00 00 00 00 00 00                 ....`.......

0000ec60 <remote_audio_pcm_iface_ops>:
    ec60:	30 5d 00 00 f0 59 00 00 50 5c 00 00 30 59 00 00     0]...Y..P\..0Y..
    ec70:	e0 5b 00 00 50 5a 00 00 e0 58 00 00 a0 59 00 00     .[..PZ...X...Y..
    ec80:	80 58 00 00 20 58 00 00 c0 57 00 00 60 57 00 00     .X.. X...W..`W..

0000ec90 <remote_hw_res_iface>:
    ec90:	04 00 00 00 98 ec 00 00                             ........

0000ec98 <remote_hw_res_iface_ops>:
    ec98:	c0 69 00 00 f0 68 00 00 80 68 00 00 60 69 00 00     .i...h...h..`i..

0000eca8 <remote_pio_window_iface>:
    eca8:	01 00 00 00 b0 ec 00 00                             ........

0000ecb0 <remote_pio_window_iface_ops>:
    ecb0:	60 6a 00 00                                         `j..

0000ecb4 <remote_char_dev_iface>:
    ecb4:	02 00 00 00 bc ec 00 00                             ........

0000ecbc <remote_char_dev_iface_ops>:
    ecbc:	f0 6b 00 00 00 6b 00 00 67 65 6e 65 72 69 63 2f     .k...k..generic/
    eccc:	72 65 6d 6f 74 65 5f 6e 69 63 2e 63 00 6e 69 63     remote_nic.c.nic
    ecdc:	5f 69 66 61 63 65 2d 3e 67 65 74 5f 61 64 64 72     _iface->get_addr
    ecec:	65 73 73 00 6e 69 63 5f 69 66 61 63 65 2d 3e 73     ess.nic_iface->s
    ecfc:	65 74 5f 73 74 61 74 65 00 6e 69 63 5f 69 66 61     et_state.nic_ifa
    ed0c:	63 65 2d 3e 63 61 6c 6c 62 61 63 6b 5f 63 72 65     ce->callback_cre
    ed1c:	61 74 65 00 6e 69 63 5f 69 66 61 63 65 2d 3e 67     ate.nic_iface->g
    ed2c:	65 74 5f 73 74 61 74 65 00 6e 69 63 5f 69 66 61     et_state.nic_ifa
    ed3c:	63 65 2d 3e 73 65 6e 64 5f 66 72 61 6d 65 00 73     ce->send_frame.s
    ed4c:	74 61 74 73 00 64 65 76 69 63 65 5f 69 6e 66 6f     tats.device_info
    ed5c:	00 63 61 62 6c 65 5f 73 74 61 74 65 00 6d 6f 64     .cable_state.mod
    ed6c:	65 00 6d 61 73 6b 00 69 64 00 63 6f 75 6e 74 00     e.mask.id.count.
    ed7c:	6d 61 74 63 68 65 64 5f 74 79 70 65 00 73 75 70     matched_type.sup
    ed8c:	70 6f 72 74 65 64 00 61 63 74 69 76 65 00 66 90     ported.active.f.
    ed9c:	66 90 66 90                                         f.f.

0000eda0 <remote_nic_iface>:
    eda0:	29 00 00 00 c0 ed 00 00 00 00 00 00 00 00 00 00     )...............
	...

0000edc0 <remote_nic_iface_ops>:
    edc0:	90 8c 00 00 f0 8b 00 00 40 8c 00 00 a0 8b 00 00     ........@.......
    edd0:	c0 7a 00 00 20 74 00 00 e0 79 00 00 e0 78 00 00     .z.. t...y...x..
    ede0:	40 77 00 00 b0 8a 00 00 b0 71 00 00 60 71 00 00     @w.......q..`q..
    edf0:	10 71 00 00 20 8b 00 00 c0 70 00 00 50 8a 00 00     .q.. ....p..P...
    ee00:	60 70 00 00 90 88 00 00 30 87 00 00 80 85 00 00     `p......0.......
    ee10:	20 84 00 00 e0 76 00 00 10 70 00 00 80 76 00 00      ....v...p...v..
    ee20:	c0 6f 00 00 a0 82 00 00 50 81 00 00 00 78 00 00     .o......P....x..
    ee30:	00 73 00 00 50 6f 00 00 e0 7f 00 00 00 6f 00 00     .s..Po.......o..
    ee40:	60 7e 00 00 e0 7c 00 00 20 76 00 00 a0 7b 00 00     `~...|.. v...{..
    ee50:	a0 77 00 00 a0 6e 00 00 10 75 00 00 00 72 00 00     .w...n...u...r..
    ee60:	50 6e 00 00 67 65 6e 65 72 69 63 2f 72 65 6d 6f     Pn..generic/remo
    ee70:	74 65 5f 69 65 65 65 38 30 32 31 31 2e 63 00 69     te_ieee80211.c.i
    ee80:	65 65 65 38 30 32 31 31 5f 69 66 61 63 65 2d 3e     eee80211_iface->
    ee90:	63 6f 6e 6e 65 63 74 00 69 65 65 65 38 30 32 31     connect.ieee8021
    eea0:	31 5f 69 66 61 63 65 2d 3e 64 69 73 63 6f 6e 6e     1_iface->disconn
    eeb0:	65 63 74 00 72 65 73 75 6c 74 73 00 73 73 69 64     ect.results.ssid
    eec0:	5f 73 74 61 72 74 00 64 68 63 70 00 69 65 65 65     _start.dhcp.ieee
    eed0:	38 30 32 31 31 5f 69 66 61 63 65 2d 3e 67 65 74     80211_iface->get
    eee0:	5f 73 63 61 6e 5f 72 65 73 75 6c 74 73 00 66 90     _scan_results.f.

0000eef0 <remote_ieee80211_iface>:
    eef0:	03 00 00 00 f8 ee 00 00                             ........

0000eef8 <remote_ieee80211_iface_ops>:
    eef8:	d0 a4 00 00 f0 a3 00 00 e0 a5 00 00 67 65 6e 65     ............gene
    ef08:	72 69 63 2f 72 65 6d 6f 74 65 5f 75 73 62 2e 63     ric/remote_usb.c
    ef18:	00 66 75 6e 00 69 66 61 63 65 00 63 61 6c 6c 00     .fun.iface.call.
    ef28:	66 90 66 90 66 90 66 90 66 90 66 90 66 90 66 90     f.f.f.f.f.f.f.f.
    ef38:	66 90 66 90 66 90 66 90                             f.f.f.f.

0000ef40 <remote_usb_iface>:
    ef40:	0a 00 00 00 60 ef 00 00 00 00 00 00 00 00 00 00     ....`...........
	...

0000ef60 <remote_usb_iface_ops>:
    ef60:	00 ad 00 00 90 ac 00 00 40 ac 00 00 f0 ab 00 00     ........@.......
    ef70:	a0 ab 00 00 50 ab 00 00 d0 aa 00 00 80 aa 00 00     ....P...........
    ef80:	d0 af 00 00 50 ae 00 00 67 65 6e 65 72 69 63 2f     ....P...generic/
    ef90:	72 65 6d 6f 74 65 5f 70 63 69 2e 63 00 66 90 90     remote_pci.c.f..

0000efa0 <remote_pci_iface>:
    efa0:	06 00 00 00 a8 ef 00 00                             ........

0000efa8 <remote_pci_iface_ops>:
    efa8:	90 b8 00 00 10 b8 00 00 90 b7 00 00 f0 b6 00 00     ................
    efb8:	60 b6 00 00 e0 b5 00 00 67 65 6e 65 72 69 63 2f     `.......generic/
    efc8:	72 65 6d 6f 74 65 5f 75 73 62 68 63 2e 63 00 90     remote_usbhc.c..

0000efd8 <remote_usbhc_iface>:
    efd8:	02 00 00 00 e0 ef 00 00                             ........

0000efe0 <remote_usbhc_iface_ops>:
    efe0:	b0 bd 00 00 20 bc 00 00 72 65 6d 6f 74 65 5f 75     .... ...remote_u
    eff0:	73 62 68 69 64 5f 67 65 74 5f 65 76 65 6e 74 5f     sbhid_get_event_
    f000:	6c 65 6e 67 74 68 28 29 0a 00 00 00 47 65 74 20     length()....Get 
    f010:	65 76 65 6e 74 20 6c 65 6e 67 74 68 20 6e 6f 74     event length not
    f020:	20 73 65 74 21 0a 00 90                              set!...

0000f028 <remote_usbhid_iface>:
    f028:	04 00 00 00 30 f0 00 00                             ....0...

0000f030 <remote_usbhid_iface_ops>:
    f030:	50 c4 00 00 e0 c2 00 00 90 c2 00 00 30 c1 00 00     P...........0...

0000f040 <remote_clock_dev_iface>:
    f040:	02 00 00 00 48 f0 00 00                             ....H...

0000f048 <remote_clock_dev_iface_ops>:
    f048:	d0 c8 00 00 30 c8 00 00                             ....0...

0000f050 <remote_led_dev_iface>:
    f050:	01 00 00 00 58 f0 00 00                             ....X...

0000f058 <remote_led_dev_iface_ops>:
    f058:	a0 c9 00 00                                         ....

0000f05c <remote_battery_dev_iface>:
    f05c:	02 00 00 00 64 f0 00 00                             ....d...

0000f064 <remote_battery_dev_iface_ops>:
    f064:	60 ca 00 00 f0 c9 00 00 61 68 63 69 5f 00 66 90     `.......ahci_.f.

0000f074 <remote_ahci_iface>:
    f074:	05 00 00 00 7c f0 00 00                             ....|...

0000f07c <remote_ahci_iface_ops>:
    f07c:	70 cd 00 00 00 cd 00 00 90 cc 00 00 10 cc 00 00     p...............
    f08c:	90 cb 00 00                                         ....

Disassembly of section .plt:

0000f340 <__main@plt-0x10>:
    f340:	ff 35 48 18 01 00    	pushl  0x11848
    f346:	ff 25 4c 18 01 00    	jmp    *0x1184c
    f34c:	00 00                	add    %al,(%eax)
	...

0000f350 <__main@plt>:
    f350:	ff 25 50 18 01 00    	jmp    *0x11850
    f356:	68 00 00 00 00       	push   $0x0
    f35b:	e9 e0 ff ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f360 <loc_category_get_id@plt>:
    f360:	ff 25 54 18 01 00    	jmp    *0x11854
    f366:	68 08 00 00 00       	push   $0x8
    f36b:	e9 d0 ff ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f370 <devman_device_connect@plt>:
    f370:	ff 25 58 18 01 00    	jmp    *0x11858
    f376:	68 10 00 00 00       	push   $0x10
    f37b:	e9 c0 ff ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f380 <task_retval@plt>:
    f380:	ff 25 5c 18 01 00    	jmp    *0x1185c
    f386:	68 18 00 00 00       	push   $0x18
    f38b:	e9 b0 ff ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f390 <loc_service_connect@plt>:
    f390:	ff 25 60 18 01 00    	jmp    *0x11860
    f396:	68 20 00 00 00       	push   $0x20
    f39b:	e9 a0 ff ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f3a0 <inetcfg_sroute_get@plt>:
    f3a0:	ff 25 64 18 01 00    	jmp    *0x11864
    f3a6:	68 28 00 00 00       	push   $0x28
    f3ab:	e9 90 ff ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f3b0 <printf@plt>:
    f3b0:	ff 25 68 18 01 00    	jmp    *0x11868
    f3b6:	68 30 00 00 00       	push   $0x30
    f3bb:	e9 80 ff ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f3c0 <async_hangup@plt>:
    f3c0:	ff 25 6c 18 01 00    	jmp    *0x1186c
    f3c6:	68 38 00 00 00       	push   $0x38
    f3cb:	e9 70 ff ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f3d0 <async_wait_for@plt>:
    f3d0:	ff 25 70 18 01 00    	jmp    *0x11870
    f3d6:	68 40 00 00 00       	push   $0x40
    f3db:	e9 60 ff ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f3e0 <inetcfg_addr_get@plt>:
    f3e0:	ff 25 74 18 01 00    	jmp    *0x11874
    f3e6:	68 48 00 00 00       	push   $0x48
    f3eb:	e9 50 ff ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f3f0 <devman_parent_device_connect@plt>:
    f3f0:	ff 25 78 18 01 00    	jmp    *0x11878
    f3f6:	68 50 00 00 00       	push   $0x50
    f3fb:	e9 40 ff ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f400 <snprintf@plt>:
    f400:	ff 25 7c 18 01 00    	jmp    *0x1187c
    f406:	68 58 00 00 00       	push   $0x58
    f40b:	e9 30 ff ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f410 <log_init@plt>:
    f410:	ff 25 80 18 01 00    	jmp    *0x11880
    f416:	68 60 00 00 00       	push   $0x60
    f41b:	e9 20 ff ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f420 <async_data_write_start@plt>:
    f420:	ff 25 84 18 01 00    	jmp    *0x11884
    f426:	68 68 00 00 00       	push   $0x68
    f42b:	e9 10 ff ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f430 <fibril_mutex_is_locked@plt>:
    f430:	ff 25 88 18 01 00    	jmp    *0x11888
    f436:	68 70 00 00 00       	push   $0x70
    f43b:	e9 00 ff ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f440 <irc_enable_interrupt@plt>:
    f440:	ff 25 8c 18 01 00    	jmp    *0x1188c
    f446:	68 78 00 00 00       	push   $0x78
    f44b:	e9 f0 fe ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f450 <devman_drv_fun_online@plt>:
    f450:	ff 25 90 18 01 00    	jmp    *0x11890
    f456:	68 80 00 00 00       	push   $0x80
    f45b:	e9 e0 fe ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f460 <async_data_read_finalize@plt>:
    f460:	ff 25 94 18 01 00    	jmp    *0x11894
    f466:	68 88 00 00 00       	push   $0x88
    f46b:	e9 d0 fe ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f470 <async_share_in_start@plt>:
    f470:	ff 25 98 18 01 00    	jmp    *0x11898
    f476:	68 90 00 00 00       	push   $0x90
    f47b:	e9 c0 fe ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f480 <pio_enable_resource@plt>:
    f480:	ff 25 9c 18 01 00    	jmp    *0x1189c
    f486:	68 98 00 00 00       	push   $0x98
    f48b:	e9 b0 fe ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f490 <memcpy@plt>:
    f490:	ff 25 a0 18 01 00    	jmp    *0x118a0
    f496:	68 a0 00 00 00       	push   $0xa0
    f49b:	e9 a0 fe ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f4a0 <pio_window_get@plt>:
    f4a0:	ff 25 a4 18 01 00    	jmp    *0x118a4
    f4a6:	68 a8 00 00 00       	push   $0xa8
    f4ab:	e9 90 fe ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f4b0 <pio_read_32@plt>:
    f4b0:	ff 25 a8 18 01 00    	jmp    *0x118a8
    f4b6:	68 b0 00 00 00       	push   $0xb0
    f4bb:	e9 80 fe ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f4c0 <malloc@plt>:
    f4c0:	ff 25 ac 18 01 00    	jmp    *0x118ac
    f4c6:	68 b8 00 00 00       	push   $0xb8
    f4cb:	e9 70 fe ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f4d0 <devman_add_device_to_category@plt>:
    f4d0:	ff 25 b0 18 01 00    	jmp    *0x118b0
    f4d6:	68 c0 00 00 00       	push   $0xc0
    f4db:	e9 60 fe ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f4e0 <async_share_out_receive@plt>:
    f4e0:	ff 25 b4 18 01 00    	jmp    *0x118b4
    f4e6:	68 c8 00 00 00       	push   $0xc8
    f4eb:	e9 50 fe ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f4f0 <async_req_fast@plt>:
    f4f0:	ff 25 b8 18 01 00    	jmp    *0x118b8
    f4f6:	68 d0 00 00 00       	push   $0xd0
    f4fb:	e9 40 fe ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f500 <async_answer_0@plt>:
    f500:	ff 25 bc 18 01 00    	jmp    *0x118bc
    f506:	68 d8 00 00 00       	push   $0xd8
    f50b:	e9 30 fe ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f510 <async_send_fast@plt>:
    f510:	ff 25 c0 18 01 00    	jmp    *0x118c0
    f516:	68 e0 00 00 00       	push   $0xe0
    f51b:	e9 20 fe ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f520 <async_data_read@plt>:
    f520:	ff 25 c4 18 01 00    	jmp    *0x118c4
    f526:	68 e8 00 00 00       	push   $0xe8
    f52b:	e9 10 fe ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f530 <log_msgv@plt>:
    f530:	ff 25 c8 18 01 00    	jmp    *0x118c8
    f536:	68 f0 00 00 00       	push   $0xf0
    f53b:	e9 00 fe ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f540 <devman_add_function@plt>:
    f540:	ff 25 cc 18 01 00    	jmp    *0x118cc
    f546:	68 f8 00 00 00       	push   $0xf8
    f54b:	e9 f0 fd ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f550 <async_exchange_end@plt>:
    f550:	ff 25 d0 18 01 00    	jmp    *0x118d0
    f556:	68 00 01 00 00       	push   $0x100
    f55b:	e9 e0 fd ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f560 <assert_abort@plt>:
    f560:	ff 25 d4 18 01 00    	jmp    *0x118d4
    f566:	68 08 01 00 00       	push   $0x108
    f56b:	e9 d0 fd ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f570 <inetcfg_get_sroute_list@plt>:
    f570:	ff 25 d8 18 01 00    	jmp    *0x118d8
    f576:	68 10 01 00 00       	push   $0x110
    f57b:	e9 c0 fd ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f580 <calloc@plt>:
    f580:	ff 25 dc 18 01 00    	jmp    *0x118dc
    f586:	68 18 01 00 00       	push   $0x118
    f58b:	e9 b0 fd ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f590 <inetcfg_addr_delete@plt>:
    f590:	ff 25 e0 18 01 00    	jmp    *0x118e0
    f596:	68 20 01 00 00       	push   $0x120
    f59b:	e9 a0 fd ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f5a0 <devman_remove_function@plt>:
    f5a0:	ff 25 e4 18 01 00    	jmp    *0x118e4
    f5a6:	68 28 01 00 00       	push   $0x128
    f5ab:	e9 90 fd ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f5b0 <hw_res_get_resource_list@plt>:
    f5b0:	ff 25 e8 18 01 00    	jmp    *0x118e8
    f5b6:	68 30 01 00 00       	push   $0x130
    f5bb:	e9 80 fd ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f5c0 <async_share_out_finalize@plt>:
    f5c0:	ff 25 ec 18 01 00    	jmp    *0x118ec
    f5c6:	68 38 01 00 00       	push   $0x138
    f5cb:	e9 70 fd ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f5d0 <str_test_prefix@plt>:
    f5d0:	ff 25 f0 18 01 00    	jmp    *0x118f0
    f5d6:	68 40 01 00 00       	push   $0x140
    f5db:	e9 60 fd ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f5e0 <async_answer_2@plt>:
    f5e0:	ff 25 f4 18 01 00    	jmp    *0x118f4
    f5e6:	68 48 01 00 00       	push   $0x148
    f5eb:	e9 50 fd ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f5f0 <fibril_mutex_unlock@plt>:
    f5f0:	ff 25 f8 18 01 00    	jmp    *0x118f8
    f5f6:	68 50 01 00 00       	push   $0x150
    f5fb:	e9 40 fd ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f600 <async_callback_receive_start@plt>:
    f600:	ff 25 fc 18 01 00    	jmp    *0x118fc
    f606:	68 58 01 00 00       	push   $0x158
    f60b:	e9 30 fd ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f610 <str_dup@plt>:
    f610:	ff 25 00 19 01 00    	jmp    *0x11900
    f616:	68 60 01 00 00       	push   $0x160
    f61b:	e9 20 fd ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f620 <fibril_mutex_initialize@plt>:
    f620:	ff 25 04 19 01 00    	jmp    *0x11904
    f626:	68 68 01 00 00       	push   $0x168
    f62b:	e9 10 fd ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f630 <async_answer_4@plt>:
    f630:	ff 25 08 19 01 00    	jmp    *0x11908
    f636:	68 70 01 00 00       	push   $0x170
    f63b:	e9 00 fd ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f640 <inetcfg_get_addr_list@plt>:
    f640:	ff 25 0c 19 01 00    	jmp    *0x1190c
    f646:	68 78 01 00 00       	push   $0x178
    f64b:	e9 f0 fc ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f650 <async_send_slow@plt>:
    f650:	ff 25 10 19 01 00    	jmp    *0x11910
    f656:	68 80 01 00 00       	push   $0x180
    f65b:	e9 e0 fc ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f660 <pio_write_32@plt>:
    f660:	ff 25 14 19 01 00    	jmp    *0x11914
    f666:	68 88 01 00 00       	push   $0x188
    f66b:	e9 d0 fc ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f670 <inetcfg_link_get@plt>:
    f670:	ff 25 18 19 01 00    	jmp    *0x11918
    f676:	68 90 01 00 00       	push   $0x190
    f67b:	e9 c0 fc ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f680 <devman_drv_fun_offline@plt>:
    f680:	ff 25 1c 19 01 00    	jmp    *0x1191c
    f686:	68 98 01 00 00       	push   $0x198
    f68b:	e9 b0 fc ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f690 <async_create_callback_port@plt>:
    f690:	ff 25 20 19 01 00    	jmp    *0x11920
    f696:	68 a0 01 00 00       	push   $0x1a0
    f69b:	e9 a0 fc ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f6a0 <dhcp_discover@plt>:
    f6a0:	ff 25 24 19 01 00    	jmp    *0x11924
    f6a6:	68 a8 01 00 00       	push   $0x1a8
    f6ab:	e9 90 fc ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f6b0 <devman_driver_register@plt>:
    f6b0:	ff 25 28 19 01 00    	jmp    *0x11928
    f6b6:	68 b0 01 00 00       	push   $0x1b0
    f6bb:	e9 80 fc ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f6c0 <memset@plt>:
    f6c0:	ff 25 2c 19 01 00    	jmp    *0x1192c
    f6c6:	68 b8 01 00 00       	push   $0x1b8
    f6cb:	e9 70 fc ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f6d0 <async_data_read_receive@plt>:
    f6d0:	ff 25 30 19 01 00    	jmp    *0x11930
    f6d6:	68 c0 01 00 00       	push   $0x1c0
    f6db:	e9 60 fc ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f6e0 <async_data_read_start@plt>:
    f6e0:	ff 25 34 19 01 00    	jmp    *0x11934
    f6e6:	68 c8 01 00 00       	push   $0x1c8
    f6eb:	e9 50 fc ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f6f0 <async_share_in_receive@plt>:
    f6f0:	ff 25 38 19 01 00    	jmp    *0x11938
    f6f6:	68 d0 01 00 00       	push   $0x1d0
    f6fb:	e9 40 fc ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f700 <asprintf@plt>:
    f700:	ff 25 3c 19 01 00    	jmp    *0x1193c
    f706:	68 d8 01 00 00       	push   $0x1d8
    f70b:	e9 30 fc ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f710 <inetcfg_sroute_delete@plt>:
    f710:	ff 25 40 19 01 00    	jmp    *0x11940
    f716:	68 e0 01 00 00       	push   $0x1e0
    f71b:	e9 20 fc ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f720 <loc_category_get_svcs@plt>:
    f720:	ff 25 44 19 01 00    	jmp    *0x11944
    f726:	68 e8 01 00 00       	push   $0x1e8
    f72b:	e9 10 fc ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f730 <async_get_call_timeout@plt>:
    f730:	ff 25 48 19 01 00    	jmp    *0x11948
    f736:	68 f0 01 00 00       	push   $0x1f0
    f73b:	e9 00 fc ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f740 <str_size@plt>:
    f740:	ff 25 4c 19 01 00    	jmp    *0x1194c
    f746:	68 f8 01 00 00       	push   $0x1f8
    f74b:	e9 f0 fb ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f750 <str_lcmp@plt>:
    f750:	ff 25 50 19 01 00    	jmp    *0x11950
    f756:	68 00 02 00 00       	push   $0x200
    f75b:	e9 e0 fb ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f760 <async_answer_1@plt>:
    f760:	ff 25 54 19 01 00    	jmp    *0x11954
    f766:	68 08 02 00 00       	push   $0x208
    f76b:	e9 d0 fb ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f770 <async_exchange_begin@plt>:
    f770:	ff 25 58 19 01 00    	jmp    *0x11958
    f776:	68 10 02 00 00       	push   $0x210
    f77b:	e9 c0 fb ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f780 <str_error@plt>:
    f780:	ff 25 5c 19 01 00    	jmp    *0x1195c
    f786:	68 18 02 00 00       	push   $0x218
    f78b:	e9 b0 fb ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f790 <devman_fun_get_handle@plt>:
    f790:	ff 25 60 19 01 00    	jmp    *0x11960
    f796:	68 20 02 00 00       	push   $0x220
    f79b:	e9 a0 fb ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f7a0 <async_share_in_finalize@plt>:
    f7a0:	ff 25 64 19 01 00    	jmp    *0x11964
    f7a6:	68 28 02 00 00       	push   $0x228
    f7ab:	e9 90 fb ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f7b0 <async_answer_3@plt>:
    f7b0:	ff 25 68 19 01 00    	jmp    *0x11968
    f7b6:	68 30 02 00 00       	push   $0x230
    f7bb:	e9 80 fb ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f7c0 <async_share_out_start@plt>:
    f7c0:	ff 25 6c 19 01 00    	jmp    *0x1196c
    f7c6:	68 38 02 00 00       	push   $0x238
    f7cb:	e9 70 fb ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f7d0 <async_create_port@plt>:
    f7d0:	ff 25 70 19 01 00    	jmp    *0x11970
    f7d6:	68 40 02 00 00       	push   $0x240
    f7db:	e9 60 fb ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f7e0 <async_data_write_finalize@plt>:
    f7e0:	ff 25 74 19 01 00    	jmp    *0x11974
    f7e6:	68 48 02 00 00       	push   $0x248
    f7eb:	e9 50 fb ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f7f0 <async_data_write_accept@plt>:
    f7f0:	ff 25 78 19 01 00    	jmp    *0x11978
    f7f6:	68 50 02 00 00       	push   $0x250
    f7fb:	e9 40 fb ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f800 <async_forget@plt>:
    f800:	ff 25 7c 19 01 00    	jmp    *0x1197c
    f806:	68 58 02 00 00       	push   $0x258
    f80b:	e9 30 fb ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f810 <fibril_switch@plt>:
    f810:	ff 25 80 19 01 00    	jmp    *0x11980
    f816:	68 60 02 00 00       	push   $0x260
    f81b:	e9 20 fb ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f820 <inetcfg_get_link_list@plt>:
    f820:	ff 25 84 19 01 00    	jmp    *0x11984
    f826:	68 68 02 00 00       	push   $0x268
    f82b:	e9 10 fb ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f830 <__syscall_fast@plt>:
    f830:	ff 25 88 19 01 00    	jmp    *0x11988
    f836:	68 70 02 00 00       	push   $0x270
    f83b:	e9 00 fb ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f840 <async_set_fallback_port_handler@plt>:
    f840:	ff 25 8c 19 01 00    	jmp    *0x1198c
    f846:	68 78 02 00 00       	push   $0x278
    f84b:	e9 f0 fa ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f850 <async_data_write_receive@plt>:
    f850:	ff 25 90 19 01 00    	jmp    *0x11990
    f856:	68 80 02 00 00       	push   $0x280
    f85b:	e9 e0 fa ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f860 <free@plt>:
    f860:	ff 25 94 19 01 00    	jmp    *0x11994
    f866:	68 88 02 00 00       	push   $0x288
    f86b:	e9 d0 fa ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f870 <devman_fun_get_name@plt>:
    f870:	ff 25 98 19 01 00    	jmp    *0x11998
    f876:	68 90 02 00 00       	push   $0x290
    f87b:	e9 c0 fa ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>

0000f880 <fibril_mutex_lock@plt>:
    f880:	ff 25 9c 19 01 00    	jmp    *0x1199c
    f886:	68 98 02 00 00       	push   $0x298
    f88b:	e9 b0 fa ff ff       	jmp    f340 <remote_ahci_iface_ops+0x2c4>
