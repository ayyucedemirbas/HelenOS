
mfs:     file format elf32-i386


Disassembly of section .init:

000010f4 <__entry>:
    10f4:	66 8c d0             	mov    %ss,%ax
    10f7:	8e d8                	mov    %eax,%ds
    10f9:	8e c0                	mov    %eax,%es
    10fb:	8e e0                	mov    %eax,%fs
    10fd:	b8 01 00 00 00       	mov    $0x1,%eax
    1102:	0f a2                	cpuid  
    1104:	0f ba e2 0b          	bt     $0xb,%edx
    1108:	73 0c                	jae    1116 <__entry+0x22>
    110a:	8d 05 d8 ae 00 00    	lea    0xaed8,%eax
    1110:	c7 00 70 90 00 00    	movl   $0x9070,(%eax)
    1116:	6a 00                	push   $0x0
    1118:	6a 00                	push   $0x0
    111a:	89 e5                	mov    %esp,%ebp
    111c:	57                   	push   %edi
    111d:	e8 8e 7b 00 00       	call   8cb0 <__main@plt>

Disassembly of section .text:

00001130 <main>:
    1130:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    1134:	83 e4 f0             	and    $0xfffffff0,%esp
    1137:	ff 71 fc             	pushl  -0x4(%ecx)
    113a:	55                   	push   %ebp
    113b:	89 e5                	mov    %esp,%ebp
    113d:	56                   	push   %esi
    113e:	53                   	push   %ebx
    113f:	51                   	push   %ecx
    1140:	83 ec 18             	sub    $0x18,%esp
    1143:	8b 19                	mov    (%ecx),%ebx
    1145:	8b 71 04             	mov    0x4(%ecx),%esi
    1148:	68 e8 86 00 00       	push   $0x86e8
    114d:	e8 8e 7b 00 00       	call   8ce0 <printf@plt>
    1152:	83 c4 10             	add    $0x10,%esp
    1155:	83 fb 03             	cmp    $0x3,%ebx
    1158:	74 77                	je     11d1 <main+0xa1>
    115a:	51                   	push   %ecx
    115b:	6a 00                	push   $0x0
    115d:	68 61 37 cf c9       	push   $0xc9cf3761
    1162:	68 76 66 73 20       	push   $0x20736676
    1167:	e8 24 7c 00 00       	call   8d90 <service_connect_blocking@plt>
    116c:	83 c4 10             	add    $0x10,%esp
    116f:	89 c6                	mov    %eax,%esi
    1171:	85 c0                	test   %eax,%eax
    1173:	0f 84 f6 00 00 00    	je     126f <main+0x13f>
    1179:	e8 42 29 00 00       	call   3ac0 <mfs_global_init>
    117e:	89 c3                	mov    %eax,%ebx
    1180:	85 c0                	test   %eax,%eax
    1182:	75 3b                	jne    11bf <main+0x8f>
    1184:	68 20 ad 00 00       	push   $0xad20
    1189:	68 e0 ac 00 00       	push   $0xace0
    118e:	68 c0 ac 00 00       	push   $0xacc0
    1193:	56                   	push   %esi
    1194:	e8 c7 71 00 00       	call   8360 <fs_register>
    1199:	83 c4 10             	add    $0x10,%esp
    119c:	89 c3                	mov    %eax,%ebx
    119e:	85 c0                	test   %eax,%eax
    11a0:	74 74                	je     1216 <main+0xe6>
    11a2:	50                   	push   %eax
    11a3:	50                   	push   %eax
    11a4:	53                   	push   %ebx
    11a5:	68 54 87 00 00       	push   $0x8754
    11aa:	e8 31 7b 00 00       	call   8ce0 <printf@plt>
    11af:	83 c4 10             	add    $0x10,%esp
    11b2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    11b5:	89 d8                	mov    %ebx,%eax
    11b7:	59                   	pop    %ecx
    11b8:	5b                   	pop    %ebx
    11b9:	5e                   	pop    %esi
    11ba:	5d                   	pop    %ebp
    11bb:	8d 61 fc             	lea    -0x4(%ecx),%esp
    11be:	c3                   	ret    
    11bf:	83 ec 0c             	sub    $0xc,%esp
    11c2:	68 30 87 00 00       	push   $0x8730
    11c7:	e8 14 7b 00 00       	call   8ce0 <printf@plt>
    11cc:	83 c4 10             	add    $0x10,%esp
    11cf:	eb d1                	jmp    11a2 <main+0x72>
    11d1:	50                   	push   %eax
    11d2:	50                   	push   %eax
    11d3:	68 7e 87 00 00       	push   $0x877e
    11d8:	ff 76 04             	pushl  0x4(%esi)
    11db:	e8 70 7d 00 00       	call   8f50 <str_cmp@plt>
    11e0:	83 c4 10             	add    $0x10,%esp
    11e3:	85 c0                	test   %eax,%eax
    11e5:	75 1a                	jne    1201 <main+0xd1>
    11e7:	53                   	push   %ebx
    11e8:	6a 0a                	push   $0xa
    11ea:	6a 00                	push   $0x0
    11ec:	ff 76 08             	pushl  0x8(%esi)
    11ef:	e8 8c 7c 00 00       	call   8e80 <strtol@plt>
    11f4:	83 c4 10             	add    $0x10,%esp
    11f7:	a3 d8 ac 00 00       	mov    %eax,0xacd8
    11fc:	e9 59 ff ff ff       	jmp    115a <main+0x2a>
    1201:	83 ec 0c             	sub    $0xc,%esp
    1204:	83 cb ff             	or     $0xffffffff,%ebx
    1207:	68 89 87 00 00       	push   $0x8789
    120c:	e8 cf 7a 00 00       	call   8ce0 <printf@plt>
    1211:	83 c4 10             	add    $0x10,%esp
    1214:	eb 8c                	jmp    11a2 <main+0x72>
    1216:	83 ec 0c             	sub    $0xc,%esp
    1219:	68 a5 87 00 00       	push   $0x87a5
    121e:	e8 bd 7a 00 00       	call   8ce0 <printf@plt>
    1223:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    122a:	e8 91 7a 00 00       	call   8cc0 <task_retval@plt>
    122f:	83 c8 ff             	or     $0xffffffff,%eax
    1232:	f0 0f c1 05 dc ae 00 	lock xadd %eax,0xaedc
    1239:	00 
    123a:	83 c4 10             	add    $0x10,%esp
    123d:	48                   	dec    %eax
    123e:	78 12                	js     1252 <main+0x122>
    1240:	83 ec 0c             	sub    $0xc,%esp
    1243:	6a 03                	push   $0x3
    1245:	e8 16 7e 00 00       	call   9060 <fibril_switch@plt>
    124a:	83 c4 10             	add    $0x10,%esp
    124d:	e9 60 ff ff ff       	jmp    11b2 <main+0x82>
    1252:	52                   	push   %edx
    1253:	6a 0b                	push   $0xb
    1255:	6a 00                	push   $0x0
    1257:	6a 00                	push   $0x0
    1259:	6a 00                	push   $0x0
    125b:	6a 00                	push   $0x0
    125d:	6a 00                	push   $0x0
    125f:	68 dc ae 00 00       	push   $0xaedc
    1264:	ff 15 d8 ae 00 00    	call   *0xaed8
    126a:	83 c4 20             	add    $0x20,%esp
    126d:	eb d1                	jmp    1240 <main+0x110>
    126f:	83 ec 0c             	sub    $0xc,%esp
    1272:	83 cb ff             	or     $0xffffffff,%ebx
    1275:	68 10 87 00 00       	push   $0x8710
    127a:	e8 61 7a 00 00       	call   8ce0 <printf@plt>
    127f:	83 c4 10             	add    $0x10,%esp
    1282:	e9 2b ff ff ff       	jmp    11b2 <main+0x82>
    1287:	66 90                	xchg   %ax,%ax
    1289:	66 90                	xchg   %ax,%ax
    128b:	66 90                	xchg   %ax,%ax
    128d:	66 90                	xchg   %ax,%ax
    128f:	90                   	nop

00001290 <open_nodes_key_hash>:
    1290:	55                   	push   %ebp
    1291:	89 e5                	mov    %esp,%ebp
    1293:	8b 45 08             	mov    0x8(%ebp),%eax
    1296:	5d                   	pop    %ebp
    1297:	8b 10                	mov    (%eax),%edx
    1299:	8b 48 04             	mov    0x4(%eax),%ecx
    129c:	89 d0                	mov    %edx,%eax
    129e:	c1 c0 05             	rol    $0x5,%eax
    12a1:	8d 84 01 b9 79 37 9e 	lea    -0x61c88647(%ecx,%eax,1),%eax
    12a8:	31 d0                	xor    %edx,%eax
    12aa:	c3                   	ret    
    12ab:	90                   	nop
    12ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000012b0 <open_nodes_hash>:
    12b0:	55                   	push   %ebp
    12b1:	89 e5                	mov    %esp,%ebp
    12b3:	8b 45 08             	mov    0x8(%ebp),%eax
    12b6:	5d                   	pop    %ebp
    12b7:	8b 50 f4             	mov    -0xc(%eax),%edx
    12ba:	8b 40 f0             	mov    -0x10(%eax),%eax
    12bd:	8b 12                	mov    (%edx),%edx
    12bf:	8b 48 44             	mov    0x44(%eax),%ecx
    12c2:	89 d0                	mov    %edx,%eax
    12c4:	c1 c0 05             	rol    $0x5,%eax
    12c7:	8d 84 01 b9 79 37 9e 	lea    -0x61c88647(%ecx,%eax,1),%eax
    12ce:	31 d0                	xor    %edx,%eax
    12d0:	c3                   	ret    
    12d1:	eb 0d                	jmp    12e0 <open_nodes_key_equal>
    12d3:	90                   	nop
    12d4:	90                   	nop
    12d5:	90                   	nop
    12d6:	90                   	nop
    12d7:	90                   	nop
    12d8:	90                   	nop
    12d9:	90                   	nop
    12da:	90                   	nop
    12db:	90                   	nop
    12dc:	90                   	nop
    12dd:	90                   	nop
    12de:	90                   	nop
    12df:	90                   	nop

000012e0 <open_nodes_key_equal>:
    12e0:	55                   	push   %ebp
    12e1:	31 c0                	xor    %eax,%eax
    12e3:	89 e5                	mov    %esp,%ebp
    12e5:	53                   	push   %ebx
    12e6:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    12e9:	8b 55 08             	mov    0x8(%ebp),%edx
    12ec:	8b 59 f4             	mov    -0xc(%ecx),%ebx
    12ef:	8b 1b                	mov    (%ebx),%ebx
    12f1:	39 1a                	cmp    %ebx,(%edx)
    12f3:	74 03                	je     12f8 <open_nodes_key_equal+0x18>
    12f5:	5b                   	pop    %ebx
    12f6:	5d                   	pop    %ebp
    12f7:	c3                   	ret    
    12f8:	8b 41 f0             	mov    -0x10(%ecx),%eax
    12fb:	8b 52 04             	mov    0x4(%edx),%edx
    12fe:	5b                   	pop    %ebx
    12ff:	5d                   	pop    %ebp
    1300:	39 50 44             	cmp    %edx,0x44(%eax)
    1303:	0f 94 c0             	sete   %al
    1306:	c3                   	ret    
    1307:	89 f6                	mov    %esi,%esi
    1309:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00001310 <mfs_service_get>:
    1310:	55                   	push   %ebp
    1311:	89 e5                	mov    %esp,%ebp
    1313:	8b 45 08             	mov    0x8(%ebp),%eax
    1316:	5d                   	pop    %ebp
    1317:	8b 40 10             	mov    0x10(%eax),%eax
    131a:	8b 40 04             	mov    0x4(%eax),%eax
    131d:	8b 00                	mov    (%eax),%eax
    131f:	c3                   	ret    

00001320 <mfs_size_get>:
    1320:	55                   	push   %ebp
    1321:	31 d2                	xor    %edx,%edx
    1323:	89 e5                	mov    %esp,%ebp
    1325:	8b 45 08             	mov    0x8(%ebp),%eax
    1328:	5d                   	pop    %ebp
    1329:	8b 40 10             	mov    0x10(%eax),%eax
    132c:	8b 00                	mov    (%eax),%eax
    132e:	8b 40 08             	mov    0x8(%eax),%eax
    1331:	c3                   	ret    
    1332:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1339:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00001340 <mfs_node_open>:
    1340:	55                   	push   %ebp
    1341:	31 c0                	xor    %eax,%eax
    1343:	89 e5                	mov    %esp,%ebp
    1345:	5d                   	pop    %ebp
    1346:	c3                   	ret    
    1347:	89 f6                	mov    %esi,%esi
    1349:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00001350 <mfs_index_get>:
    1350:	55                   	push   %ebp
    1351:	89 e5                	mov    %esp,%ebp
    1353:	8b 45 08             	mov    0x8(%ebp),%eax
    1356:	5d                   	pop    %ebp
    1357:	8b 40 10             	mov    0x10(%eax),%eax
    135a:	8b 00                	mov    (%eax),%eax
    135c:	8b 40 44             	mov    0x44(%eax),%eax
    135f:	c3                   	ret    

00001360 <mfs_lnkcnt_get>:
    1360:	55                   	push   %ebp
    1361:	89 e5                	mov    %esp,%ebp
    1363:	8b 45 08             	mov    0x8(%ebp),%eax
    1366:	8b 40 10             	mov    0x10(%eax),%eax
    1369:	8b 10                	mov    (%eax),%edx
    136b:	8b 02                	mov    (%edx),%eax
    136d:	25 00 f0 ff ff       	and    $0xfffff000,%eax
    1372:	66 3d 00 40          	cmp    $0x4000,%ax
    1376:	74 08                	je     1380 <mfs_lnkcnt_get+0x20>
    1378:	31 c0                	xor    %eax,%eax
    137a:	5d                   	pop    %ebp
    137b:	66 8b 42 02          	mov    0x2(%edx),%ax
    137f:	c3                   	ret    
    1380:	31 c0                	xor    %eax,%eax
    1382:	5d                   	pop    %ebp
    1383:	66 83 7a 02 01       	cmpw   $0x1,0x2(%edx)
    1388:	0f 97 c0             	seta   %al
    138b:	c3                   	ret    
    138c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00001390 <mfs_is_directory>:
    1390:	55                   	push   %ebp
    1391:	89 e5                	mov    %esp,%ebp
    1393:	8b 45 08             	mov    0x8(%ebp),%eax
    1396:	5d                   	pop    %ebp
    1397:	8b 40 10             	mov    0x10(%eax),%eax
    139a:	8b 00                	mov    (%eax),%eax
    139c:	8b 00                	mov    (%eax),%eax
    139e:	25 00 f0 ff ff       	and    $0xfffff000,%eax
    13a3:	66 3d 00 40          	cmp    $0x4000,%ax
    13a7:	0f 94 c0             	sete   %al
    13aa:	c3                   	ret    
    13ab:	90                   	nop
    13ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000013b0 <mfs_is_file>:
    13b0:	55                   	push   %ebp
    13b1:	89 e5                	mov    %esp,%ebp
    13b3:	8b 45 08             	mov    0x8(%ebp),%eax
    13b6:	5d                   	pop    %ebp
    13b7:	8b 40 10             	mov    0x10(%eax),%eax
    13ba:	8b 00                	mov    (%eax),%eax
    13bc:	8b 00                	mov    (%eax),%eax
    13be:	25 00 f0 ff ff       	and    $0xfffff000,%eax
    13c3:	66 3d 00 80          	cmp    $0x8000,%ax
    13c7:	0f 94 c0             	sete   %al
    13ca:	c3                   	ret    
    13cb:	90                   	nop
    13cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000013d0 <mfs_close>:
    13d0:	55                   	push   %ebp
    13d1:	31 c0                	xor    %eax,%eax
    13d3:	89 e5                	mov    %esp,%ebp
    13d5:	5d                   	pop    %ebp
    13d6:	c3                   	ret    
    13d7:	89 f6                	mov    %esi,%esi
    13d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000013e0 <mfs_free_block_count>:
    13e0:	55                   	push   %ebp
    13e1:	89 e5                	mov    %esp,%ebp
    13e3:	57                   	push   %edi
    13e4:	56                   	push   %esi
    13e5:	53                   	push   %ebx
    13e6:	83 ec 24             	sub    $0x24,%esp
    13e9:	8d 75 e4             	lea    -0x1c(%ebp),%esi
    13ec:	8b 4d 08             	mov    0x8(%ebp),%ecx
    13ef:	56                   	push   %esi
    13f0:	51                   	push   %ecx
    13f1:	e8 ca 71 00 00       	call   85c0 <fs_instance_get>
    13f6:	83 c4 10             	add    $0x10,%esp
    13f9:	89 c3                	mov    %eax,%ebx
    13fb:	85 c0                	test   %eax,%eax
    13fd:	75 1b                	jne    141a <mfs_free_block_count+0x3a>
    13ff:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    1402:	8b 78 04             	mov    0x4(%eax),%edi
    1405:	80 7f 48 00          	cmpb   $0x0,0x48(%edi)
    1409:	74 1d                	je     1428 <mfs_free_block_count+0x48>
    140b:	8b 47 4c             	mov    0x4c(%edi),%eax
    140e:	8b 55 0c             	mov    0xc(%ebp),%edx
    1411:	89 02                	mov    %eax,(%edx)
    1413:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
    141a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    141d:	89 d8                	mov    %ebx,%eax
    141f:	5b                   	pop    %ebx
    1420:	5e                   	pop    %esi
    1421:	5f                   	pop    %edi
    1422:	5d                   	pop    %ebp
    1423:	c3                   	ret    
    1424:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1428:	52                   	push   %edx
    1429:	52                   	push   %edx
    142a:	56                   	push   %esi
    142b:	50                   	push   %eax
    142c:	e8 2f 44 00 00       	call   5860 <mfs_count_free_zones>
    1431:	83 c4 10             	add    $0x10,%esp
    1434:	85 c0                	test   %eax,%eax
    1436:	75 10                	jne    1448 <mfs_free_block_count+0x68>
    1438:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    143b:	c6 47 48 01          	movb   $0x1,0x48(%edi)
    143f:	89 47 4c             	mov    %eax,0x4c(%edi)
    1442:	eb ca                	jmp    140e <mfs_free_block_count+0x2e>
    1444:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1448:	89 c3                	mov    %eax,%ebx
    144a:	eb ce                	jmp    141a <mfs_free_block_count+0x3a>
    144c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00001450 <mfs_total_block_count>:
    1450:	55                   	push   %ebp
    1451:	89 e5                	mov    %esp,%ebp
    1453:	83 ec 20             	sub    $0x20,%esp
    1456:	8d 45 f4             	lea    -0xc(%ebp),%eax
    1459:	50                   	push   %eax
    145a:	8b 45 08             	mov    0x8(%ebp),%eax
    145d:	50                   	push   %eax
    145e:	e8 5d 71 00 00       	call   85c0 <fs_instance_get>
    1463:	83 c4 10             	add    $0x10,%esp
    1466:	85 c0                	test   %eax,%eax
    1468:	75 1d                	jne    1487 <mfs_total_block_count+0x37>
    146a:	8b 55 f4             	mov    -0xc(%ebp),%edx
    146d:	85 d2                	test   %edx,%edx
    146f:	74 18                	je     1489 <mfs_total_block_count+0x39>
    1471:	8b 4a 04             	mov    0x4(%edx),%ecx
    1474:	8b 51 04             	mov    0x4(%ecx),%edx
    1477:	4a                   	dec    %edx
    1478:	2b 51 10             	sub    0x10(%ecx),%edx
    147b:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    147e:	89 11                	mov    %edx,(%ecx)
    1480:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%ecx)
    1487:	c9                   	leave  
    1488:	c3                   	ret    
    1489:	83 c8 ff             	or     $0xffffffff,%eax
    148c:	c9                   	leave  
    148d:	c3                   	ret    
    148e:	66 90                	xchg   %ax,%ax

00001490 <mfs_size_block>:
    1490:	55                   	push   %ebp
    1491:	89 e5                	mov    %esp,%ebp
    1493:	83 ec 20             	sub    $0x20,%esp
    1496:	8d 45 f4             	lea    -0xc(%ebp),%eax
    1499:	50                   	push   %eax
    149a:	8b 45 08             	mov    0x8(%ebp),%eax
    149d:	50                   	push   %eax
    149e:	e8 1d 71 00 00       	call   85c0 <fs_instance_get>
    14a3:	83 c4 10             	add    $0x10,%esp
    14a6:	85 c0                	test   %eax,%eax
    14a8:	75 12                	jne    14bc <mfs_size_block+0x2c>
    14aa:	8b 55 f4             	mov    -0xc(%ebp),%edx
    14ad:	85 d2                	test   %edx,%edx
    14af:	74 0d                	je     14be <mfs_size_block+0x2e>
    14b1:	8b 52 04             	mov    0x4(%edx),%edx
    14b4:	8b 4a 18             	mov    0x18(%edx),%ecx
    14b7:	8b 55 0c             	mov    0xc(%ebp),%edx
    14ba:	89 0a                	mov    %ecx,(%edx)
    14bc:	c9                   	leave  
    14bd:	c3                   	ret    
    14be:	83 c8 ff             	or     $0xffffffff,%eax
    14c1:	c9                   	leave  
    14c2:	c3                   	ret    
    14c3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    14c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000014d0 <mfs_has_children>:
    14d0:	55                   	push   %ebp
    14d1:	89 e5                	mov    %esp,%ebp
    14d3:	57                   	push   %edi
    14d4:	56                   	push   %esi
    14d5:	53                   	push   %ebx
    14d6:	83 ec 5c             	sub    $0x5c,%esp
    14d9:	8b 45 0c             	mov    0xc(%ebp),%eax
    14dc:	8b 78 10             	mov    0x10(%eax),%edi
    14df:	8b 47 04             	mov    0x4(%edi),%eax
    14e2:	8b 17                	mov    (%edi),%edx
    14e4:	8b 70 04             	mov    0x4(%eax),%esi
    14e7:	8b 45 08             	mov    0x8(%ebp),%eax
    14ea:	c6 00 00             	movb   $0x0,(%eax)
    14ed:	8b 02                	mov    (%edx),%eax
    14ef:	25 00 f0 ff ff       	and    $0xfffff000,%eax
    14f4:	66 3d 00 40          	cmp    $0x4000,%ax
    14f8:	74 0e                	je     1508 <mfs_has_children+0x38>
    14fa:	31 c0                	xor    %eax,%eax
    14fc:	8d 65 f4             	lea    -0xc(%ebp),%esp
    14ff:	5b                   	pop    %ebx
    1500:	5e                   	pop    %esi
    1501:	5f                   	pop    %edi
    1502:	5d                   	pop    %ebp
    1503:	c3                   	ret    
    1504:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1508:	8b 42 08             	mov    0x8(%edx),%eax
    150b:	31 d2                	xor    %edx,%edx
    150d:	f7 76 30             	divl   0x30(%esi)
    1510:	83 f8 02             	cmp    $0x2,%eax
    1513:	76 e5                	jbe    14fa <mfs_has_children+0x2a>
    1515:	bb 02 00 00 00       	mov    $0x2,%ebx
    151a:	eb 13                	jmp    152f <mfs_has_children+0x5f>
    151c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1520:	8b 07                	mov    (%edi),%eax
    1522:	31 d2                	xor    %edx,%edx
    1524:	43                   	inc    %ebx
    1525:	8b 40 08             	mov    0x8(%eax),%eax
    1528:	f7 76 30             	divl   0x30(%esi)
    152b:	39 d8                	cmp    %ebx,%eax
    152d:	76 cb                	jbe    14fa <mfs_has_children+0x2a>
    152f:	8d 45 9c             	lea    -0x64(%ebp),%eax
    1532:	51                   	push   %ecx
    1533:	53                   	push   %ebx
    1534:	50                   	push   %eax
    1535:	57                   	push   %edi
    1536:	e8 45 35 00 00       	call   4a80 <mfs_read_dentry>
    153b:	83 c4 10             	add    $0x10,%esp
    153e:	85 c0                	test   %eax,%eax
    1540:	75 ba                	jne    14fc <mfs_has_children+0x2c>
    1542:	8b 55 9c             	mov    -0x64(%ebp),%edx
    1545:	85 d2                	test   %edx,%edx
    1547:	74 d7                	je     1520 <mfs_has_children+0x50>
    1549:	8b 4d 08             	mov    0x8(%ebp),%ecx
    154c:	c6 01 01             	movb   $0x1,(%ecx)
    154f:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1552:	5b                   	pop    %ebx
    1553:	5e                   	pop    %esi
    1554:	5f                   	pop    %edi
    1555:	5d                   	pop    %ebp
    1556:	c3                   	ret    
    1557:	89 f6                	mov    %esi,%esi
    1559:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00001560 <mfs_link>:
    1560:	55                   	push   %ebp
    1561:	89 e5                	mov    %esp,%ebp
    1563:	57                   	push   %edi
    1564:	56                   	push   %esi
    1565:	53                   	push   %ebx
    1566:	83 ec 28             	sub    $0x28,%esp
    1569:	8b 45 08             	mov    0x8(%ebp),%eax
    156c:	8b 58 10             	mov    0x10(%eax),%ebx
    156f:	8b 45 0c             	mov    0xc(%ebp),%eax
    1572:	8b 70 10             	mov    0x10(%eax),%esi
    1575:	8b 43 04             	mov    0x4(%ebx),%eax
    1578:	8b 78 04             	mov    0x4(%eax),%edi
    157b:	8b 45 10             	mov    0x10(%ebp),%eax
    157e:	50                   	push   %eax
    157f:	e8 3c 7a 00 00       	call   8fc0 <str_size@plt>
    1584:	83 c4 10             	add    $0x10,%esp
    1587:	3b 47 38             	cmp    0x38(%edi),%eax
    158a:	77 6c                	ja     15f8 <mfs_link+0x98>
    158c:	57                   	push   %edi
    158d:	8b 06                	mov    (%esi),%eax
    158f:	8b 40 44             	mov    0x44(%eax),%eax
    1592:	50                   	push   %eax
    1593:	8b 45 10             	mov    0x10(%ebp),%eax
    1596:	50                   	push   %eax
    1597:	53                   	push   %ebx
    1598:	e8 c3 39 00 00       	call   4f60 <mfs_insert_dentry>
    159d:	83 c4 10             	add    $0x10,%esp
    15a0:	89 c2                	mov    %eax,%edx
    15a2:	85 c0                	test   %eax,%eax
    15a4:	75 19                	jne    15bf <mfs_link+0x5f>
    15a6:	8b 06                	mov    (%esi),%eax
    15a8:	8b 38                	mov    (%eax),%edi
    15aa:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi
    15b0:	66 81 ff 00 40       	cmp    $0x4000,%di
    15b5:	74 19                	je     15d0 <mfs_link+0x70>
    15b7:	66 ff 40 02          	incw   0x2(%eax)
    15bb:	c6 40 40 01          	movb   $0x1,0x40(%eax)
    15bf:	8d 65 f4             	lea    -0xc(%ebp),%esp
    15c2:	89 d0                	mov    %edx,%eax
    15c4:	5b                   	pop    %ebx
    15c5:	5e                   	pop    %esi
    15c6:	5f                   	pop    %edi
    15c7:	5d                   	pop    %ebp
    15c8:	c3                   	ret    
    15c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    15d0:	bf f5 fe ff ff       	mov    $0xfffffef5,%edi
    15d5:	66 83 78 02 01       	cmpw   $0x1,0x2(%eax)
    15da:	74 24                	je     1600 <mfs_link+0xa0>
    15dc:	8b 55 10             	mov    0x10(%ebp),%edx
    15df:	50                   	push   %eax
    15e0:	50                   	push   %eax
    15e1:	52                   	push   %edx
    15e2:	53                   	push   %ebx
    15e3:	e8 28 37 00 00       	call   4d10 <mfs_remove_dentry>
    15e8:	83 c4 10             	add    $0x10,%esp
    15eb:	89 c2                	mov    %eax,%edx
    15ed:	85 c0                	test   %eax,%eax
    15ef:	75 ce                	jne    15bf <mfs_link+0x5f>
    15f1:	89 fa                	mov    %edi,%edx
    15f3:	eb ca                	jmp    15bf <mfs_link+0x5f>
    15f5:	8d 76 00             	lea    0x0(%esi),%esi
    15f8:	ba 00 ff ff ff       	mov    $0xffffff00,%edx
    15fd:	eb c0                	jmp    15bf <mfs_link+0x5f>
    15ff:	90                   	nop
    1600:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    1603:	52                   	push   %edx
    1604:	8b 48 44             	mov    0x44(%eax),%ecx
    1607:	51                   	push   %ecx
    1608:	68 c2 87 00 00       	push   $0x87c2
    160d:	56                   	push   %esi
    160e:	e8 4d 39 00 00       	call   4f60 <mfs_insert_dentry>
    1613:	83 c4 10             	add    $0x10,%esp
    1616:	89 c7                	mov    %eax,%edi
    1618:	85 c0                	test   %eax,%eax
    161a:	75 c0                	jne    15dc <mfs_link+0x7c>
    161c:	57                   	push   %edi
    161d:	8b 03                	mov    (%ebx),%eax
    161f:	8b 40 44             	mov    0x44(%eax),%eax
    1622:	50                   	push   %eax
    1623:	68 c1 87 00 00       	push   $0x87c1
    1628:	56                   	push   %esi
    1629:	e8 32 39 00 00       	call   4f60 <mfs_insert_dentry>
    162e:	83 c4 10             	add    $0x10,%esp
    1631:	89 c7                	mov    %eax,%edi
    1633:	85 c0                	test   %eax,%eax
    1635:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    1638:	75 11                	jne    164b <mfs_link+0xeb>
    163a:	8b 03                	mov    (%ebx),%eax
    163c:	66 ff 40 02          	incw   0x2(%eax)
    1640:	c6 40 40 01          	movb   $0x1,0x40(%eax)
    1644:	8b 06                	mov    (%esi),%eax
    1646:	e9 6c ff ff ff       	jmp    15b7 <mfs_link+0x57>
    164b:	51                   	push   %ecx
    164c:	51                   	push   %ecx
    164d:	68 c2 87 00 00       	push   $0x87c2
    1652:	56                   	push   %esi
    1653:	e8 b8 36 00 00       	call   4d10 <mfs_remove_dentry>
    1658:	83 c4 10             	add    $0x10,%esp
    165b:	e9 7c ff ff ff       	jmp    15dc <mfs_link+0x7c>

00001660 <mfs_create_node>:
    1660:	55                   	push   %ebp
    1661:	89 e5                	mov    %esp,%ebp
    1663:	57                   	push   %edi
    1664:	56                   	push   %esi
    1665:	53                   	push   %ebx
    1666:	83 ec 34             	sub    $0x34,%esp
    1669:	8d 75 e4             	lea    -0x1c(%ebp),%esi
    166c:	8b 7d 0c             	mov    0xc(%ebp),%edi
    166f:	56                   	push   %esi
    1670:	57                   	push   %edi
    1671:	e8 4a 6f 00 00       	call   85c0 <fs_instance_get>
    1676:	83 c4 10             	add    $0x10,%esp
    1679:	89 c3                	mov    %eax,%ebx
    167b:	85 c0                	test   %eax,%eax
    167d:	75 18                	jne    1697 <mfs_create_node+0x37>
    167f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    1682:	53                   	push   %ebx
    1683:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    1686:	53                   	push   %ebx
    1687:	56                   	push   %esi
    1688:	50                   	push   %eax
    1689:	e8 72 3f 00 00       	call   5600 <mfs_alloc_inode>
    168e:	83 c4 10             	add    $0x10,%esp
    1691:	89 c3                	mov    %eax,%ebx
    1693:	85 c0                	test   %eax,%eax
    1695:	74 11                	je     16a8 <mfs_create_node+0x48>
    1697:	8d 65 f4             	lea    -0xc(%ebp),%esp
    169a:	89 d8                	mov    %ebx,%eax
    169c:	5b                   	pop    %ebx
    169d:	5e                   	pop    %esi
    169e:	5f                   	pop    %edi
    169f:	5d                   	pop    %ebp
    16a0:	c3                   	ret    
    16a1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    16a8:	83 ec 0c             	sub    $0xc,%esp
    16ab:	6a 48                	push   $0x48
    16ad:	e8 3e 77 00 00       	call   8df0 <malloc@plt>
    16b2:	83 c4 10             	add    $0x10,%esp
    16b5:	89 c6                	mov    %eax,%esi
    16b7:	85 c0                	test   %eax,%eax
    16b9:	0f 84 30 01 00 00    	je     17ef <mfs_create_node+0x18f>
    16bf:	83 ec 0c             	sub    $0xc,%esp
    16c2:	6a 18                	push   $0x18
    16c4:	e8 27 77 00 00       	call   8df0 <malloc@plt>
    16c9:	83 c4 10             	add    $0x10,%esp
    16cc:	89 c7                	mov    %eax,%edi
    16ce:	85 c0                	test   %eax,%eax
    16d0:	0f 84 0d 01 00 00    	je     17e3 <mfs_create_node+0x183>
    16d6:	83 ec 0c             	sub    $0xc,%esp
    16d9:	6a 14                	push   $0x14
    16db:	e8 10 77 00 00       	call   8df0 <malloc@plt>
    16e0:	83 c4 10             	add    $0x10,%esp
    16e3:	89 c1                	mov    %eax,%ecx
    16e5:	85 c0                	test   %eax,%eax
    16e7:	0f 84 ea 00 00 00    	je     17d7 <mfs_create_node+0x177>
    16ed:	f6 45 10 02          	testb  $0x2,0x10(%ebp)
    16f1:	0f 85 d1 00 00 00    	jne    17c8 <mfs_create_node+0x168>
    16f7:	31 c0                	xor    %eax,%eax
    16f9:	ba 00 80 ff ff       	mov    $0xffff8000,%edx
    16fe:	66 89 16             	mov    %dx,(%esi)
    1701:	66 89 46 02          	mov    %ax,0x2(%esi)
    1705:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)
    170b:	66 c7 46 06 00 00    	movw   $0x0,0x6(%esi)
    1711:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)
    1718:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
    171f:	c7 46 10 00 00 00 00 	movl   $0x0,0x10(%esi)
    1726:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)
    172d:	50                   	push   %eax
    172e:	8d 46 18             	lea    0x18(%esi),%eax
    1731:	6a 1c                	push   $0x1c
    1733:	6a 00                	push   $0x0
    1735:	50                   	push   %eax
    1736:	89 4d d0             	mov    %ecx,-0x30(%ebp)
    1739:	e8 32 78 00 00       	call   8f70 <memset@plt>
    173e:	83 c4 0c             	add    $0xc,%esp
    1741:	8d 46 34             	lea    0x34(%esi),%eax
    1744:	6a 0c                	push   $0xc
    1746:	6a 00                	push   $0x0
    1748:	50                   	push   %eax
    1749:	e8 22 78 00 00       	call   8f70 <memset@plt>
    174e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    1751:	89 46 44             	mov    %eax,0x44(%esi)
    1754:	89 37                	mov    %esi,(%edi)
    1756:	c6 46 40 01          	movb   $0x1,0x40(%esi)
    175a:	8b 75 d4             	mov    -0x2c(%ebp),%esi
    175d:	89 77 04             	mov    %esi,0x4(%edi)
    1760:	c7 47 08 01 00 00 00 	movl   $0x1,0x8(%edi)
    1767:	c7 04 24 6c ad 00 00 	movl   $0xad6c,(%esp)
    176e:	e8 4d 79 00 00       	call   90c0 <fibril_mutex_lock@plt>
    1773:	58                   	pop    %eax
    1774:	8d 47 10             	lea    0x10(%edi),%eax
    1777:	5a                   	pop    %edx
    1778:	50                   	push   %eax
    1779:	68 e4 ae 00 00       	push   $0xaee4
    177e:	e8 cd 75 00 00       	call   8d50 <hash_table_insert@plt>
    1783:	c7 04 24 6c ad 00 00 	movl   $0xad6c,(%esp)
    178a:	e8 51 77 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    178f:	8b 4e 08             	mov    0x8(%esi),%ecx
    1792:	8b 07                	mov    (%edi),%eax
    1794:	41                   	inc    %ecx
    1795:	89 4e 08             	mov    %ecx,0x8(%esi)
    1798:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    179b:	c6 40 40 01          	movb   $0x1,0x40(%eax)
    179f:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    17a2:	89 0c 24             	mov    %ecx,(%esp)
    17a5:	e8 f6 6c 00 00       	call   84a0 <fs_node_initialize>
    17aa:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    17ad:	8b 45 08             	mov    0x8(%ebp),%eax
    17b0:	89 4f 0c             	mov    %ecx,0xc(%edi)
    17b3:	83 c4 10             	add    $0x10,%esp
    17b6:	89 08                	mov    %ecx,(%eax)
    17b8:	89 79 10             	mov    %edi,0x10(%ecx)
    17bb:	8d 65 f4             	lea    -0xc(%ebp),%esp
    17be:	89 d8                	mov    %ebx,%eax
    17c0:	5b                   	pop    %ebx
    17c1:	5e                   	pop    %esi
    17c2:	5f                   	pop    %edi
    17c3:	5d                   	pop    %ebp
    17c4:	c3                   	ret    
    17c5:	8d 76 00             	lea    0x0(%esi),%esi
    17c8:	b8 01 00 00 00       	mov    $0x1,%eax
    17cd:	ba 00 40 00 00       	mov    $0x4000,%edx
    17d2:	e9 27 ff ff ff       	jmp    16fe <mfs_create_node+0x9e>
    17d7:	83 ec 0c             	sub    $0xc,%esp
    17da:	57                   	push   %edi
    17db:	e8 d0 78 00 00       	call   90b0 <free@plt>
    17e0:	83 c4 10             	add    $0x10,%esp
    17e3:	83 ec 0c             	sub    $0xc,%esp
    17e6:	56                   	push   %esi
    17e7:	e8 c4 78 00 00       	call   90b0 <free@plt>
    17ec:	83 c4 10             	add    $0x10,%esp
    17ef:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    17f2:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    17f5:	50                   	push   %eax
    17f6:	50                   	push   %eax
    17f7:	52                   	push   %edx
    17f8:	51                   	push   %ecx
    17f9:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx
    17fe:	e8 1d 3e 00 00       	call   5620 <mfs_free_inode>
    1803:	83 c4 10             	add    $0x10,%esp
    1806:	e9 8c fe ff ff       	jmp    1697 <mfs_create_node+0x37>
    180b:	90                   	nop
    180c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00001810 <mfs_unmounted>:
    1810:	55                   	push   %ebp
    1811:	89 e5                	mov    %esp,%ebp
    1813:	57                   	push   %edi
    1814:	56                   	push   %esi
    1815:	53                   	push   %ebx
    1816:	83 ec 24             	sub    $0x24,%esp
    1819:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    181c:	8b 5d 08             	mov    0x8(%ebp),%ebx
    181f:	50                   	push   %eax
    1820:	53                   	push   %ebx
    1821:	e8 9a 6d 00 00       	call   85c0 <fs_instance_get>
    1826:	83 c4 10             	add    $0x10,%esp
    1829:	89 c6                	mov    %eax,%esi
    182b:	85 c0                	test   %eax,%eax
    182d:	75 38                	jne    1867 <mfs_unmounted+0x57>
    182f:	8b 7d e4             	mov    -0x1c(%ebp),%edi
    1832:	8b 4f 08             	mov    0x8(%edi),%ecx
    1835:	85 c9                	test   %ecx,%ecx
    1837:	75 3f                	jne    1878 <mfs_unmounted+0x68>
    1839:	83 ec 0c             	sub    $0xc,%esp
    183c:	53                   	push   %ebx
    183d:	e8 ce 45 00 00       	call   5e10 <block_cache_fini>
    1842:	89 1c 24             	mov    %ebx,(%esp)
    1845:	e8 76 47 00 00       	call   5fc0 <block_fini>
    184a:	89 1c 24             	mov    %ebx,(%esp)
    184d:	e8 ee 6d 00 00       	call   8640 <fs_instance_destroy>
    1852:	8b 57 04             	mov    0x4(%edi),%edx
    1855:	58                   	pop    %eax
    1856:	52                   	push   %edx
    1857:	e8 54 78 00 00       	call   90b0 <free@plt>
    185c:	89 3c 24             	mov    %edi,(%esp)
    185f:	e8 4c 78 00 00       	call   90b0 <free@plt>
    1864:	83 c4 10             	add    $0x10,%esp
    1867:	8d 65 f4             	lea    -0xc(%ebp),%esp
    186a:	89 f0                	mov    %esi,%eax
    186c:	5b                   	pop    %ebx
    186d:	5e                   	pop    %esi
    186e:	5f                   	pop    %edi
    186f:	5d                   	pop    %ebp
    1870:	c3                   	ret    
    1871:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1878:	be f1 ff ff ff       	mov    $0xfffffff1,%esi
    187d:	eb e8                	jmp    1867 <mfs_unmounted+0x57>
    187f:	90                   	nop

00001880 <mfs_node_put>:
    1880:	55                   	push   %ebp
    1881:	89 e5                	mov    %esp,%ebp
    1883:	57                   	push   %edi
    1884:	56                   	push   %esi
    1885:	53                   	push   %ebx
    1886:	83 ec 18             	sub    $0x18,%esp
    1889:	8b 75 08             	mov    0x8(%ebp),%esi
    188c:	8b 5e 10             	mov    0x10(%esi),%ebx
    188f:	68 6c ad 00 00       	push   $0xad6c
    1894:	e8 27 78 00 00       	call   90c0 <fibril_mutex_lock@plt>
    1899:	83 c4 10             	add    $0x10,%esp
    189c:	8b 43 08             	mov    0x8(%ebx),%eax
    189f:	85 c0                	test   %eax,%eax
    18a1:	74 71                	je     1914 <mfs_node_put+0x94>
    18a3:	48                   	dec    %eax
    18a4:	89 43 08             	mov    %eax,0x8(%ebx)
    18a7:	85 c0                	test   %eax,%eax
    18a9:	75 65                	jne    1910 <mfs_node_put+0x90>
    18ab:	8d 43 10             	lea    0x10(%ebx),%eax
    18ae:	57                   	push   %edi
    18af:	57                   	push   %edi
    18b0:	50                   	push   %eax
    18b1:	68 e4 ae 00 00       	push   $0xaee4
    18b6:	e8 a5 76 00 00       	call   8f60 <hash_table_remove_item@plt>
    18bb:	8b 53 04             	mov    0x4(%ebx),%edx
    18be:	83 c4 10             	add    $0x10,%esp
    18c1:	8b 42 08             	mov    0x8(%edx),%eax
    18c4:	85 c0                	test   %eax,%eax
    18c6:	74 61                	je     1929 <mfs_node_put+0xa9>
    18c8:	83 ec 0c             	sub    $0xc,%esp
    18cb:	48                   	dec    %eax
    18cc:	89 42 08             	mov    %eax,0x8(%edx)
    18cf:	53                   	push   %ebx
    18d0:	e8 4b 25 00 00       	call   3e20 <mfs_put_inode>
    18d5:	8b 13                	mov    (%ebx),%edx
    18d7:	89 c7                	mov    %eax,%edi
    18d9:	58                   	pop    %eax
    18da:	52                   	push   %edx
    18db:	e8 d0 77 00 00       	call   90b0 <free@plt>
    18e0:	89 1c 24             	mov    %ebx,(%esp)
    18e3:	e8 c8 77 00 00       	call   90b0 <free@plt>
    18e8:	89 34 24             	mov    %esi,(%esp)
    18eb:	e8 c0 77 00 00       	call   90b0 <free@plt>
    18f0:	83 c4 10             	add    $0x10,%esp
    18f3:	83 ec 0c             	sub    $0xc,%esp
    18f6:	68 6c ad 00 00       	push   $0xad6c
    18fb:	e8 e0 75 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    1900:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1903:	89 f8                	mov    %edi,%eax
    1905:	5b                   	pop    %ebx
    1906:	5e                   	pop    %esi
    1907:	5f                   	pop    %edi
    1908:	5d                   	pop    %ebp
    1909:	c3                   	ret    
    190a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1910:	31 ff                	xor    %edi,%edi
    1912:	eb df                	jmp    18f3 <mfs_node_put+0x73>
    1914:	50                   	push   %eax
    1915:	68 f6 01 00 00       	push   $0x1f6
    191a:	68 c4 87 00 00       	push   $0x87c4
    191f:	68 ce 87 00 00       	push   $0x87ce
    1924:	e8 87 75 00 00       	call   8eb0 <assert_abort@plt>
    1929:	51                   	push   %ecx
    192a:	68 fa 01 00 00       	push   $0x1fa
    192f:	68 c4 87 00 00       	push   $0x87c4
    1934:	68 0c 88 00 00       	push   $0x880c
    1939:	e8 72 75 00 00       	call   8eb0 <assert_abort@plt>
    193e:	66 90                	xchg   %ax,%ax

00001940 <mfs_match>:
    1940:	55                   	push   %ebp
    1941:	89 e5                	mov    %esp,%ebp
    1943:	57                   	push   %edi
    1944:	56                   	push   %esi
    1945:	53                   	push   %ebx
    1946:	83 ec 7c             	sub    $0x7c,%esp
    1949:	8b 45 0c             	mov    0xc(%ebp),%eax
    194c:	8b 78 10             	mov    0x10(%eax),%edi
    194f:	8b 07                	mov    (%edi),%eax
    1951:	8b 00                	mov    (%eax),%eax
    1953:	25 00 f0 ff ff       	and    $0xfffff000,%eax
    1958:	66 3d 00 40          	cmp    $0x4000,%ax
    195c:	0f 85 16 01 00 00    	jne    1a78 <mfs_match+0x138>
    1962:	83 ec 0c             	sub    $0xc,%esp
    1965:	8b 47 04             	mov    0x4(%edi),%eax
    1968:	8b 55 10             	mov    0x10(%ebp),%edx
    196b:	31 db                	xor    %ebx,%ebx
    196d:	8b 70 04             	mov    0x4(%eax),%esi
    1970:	52                   	push   %edx
    1971:	e8 4a 76 00 00       	call   8fc0 <str_size@plt>
    1976:	31 d2                	xor    %edx,%edx
    1978:	89 45 84             	mov    %eax,-0x7c(%ebp)
    197b:	8b 07                	mov    (%edi),%eax
    197d:	83 c4 10             	add    $0x10,%esp
    1980:	8b 40 08             	mov    0x8(%eax),%eax
    1983:	f7 76 30             	divl   0x30(%esi)
    1986:	85 c0                	test   %eax,%eax
    1988:	75 19                	jne    19a3 <mfs_match+0x63>
    198a:	e9 c1 00 00 00       	jmp    1a50 <mfs_match+0x110>
    198f:	90                   	nop
    1990:	8b 07                	mov    (%edi),%eax
    1992:	31 d2                	xor    %edx,%edx
    1994:	43                   	inc    %ebx
    1995:	8b 40 08             	mov    0x8(%eax),%eax
    1998:	f7 76 30             	divl   0x30(%esi)
    199b:	39 d8                	cmp    %ebx,%eax
    199d:	0f 86 ad 00 00 00    	jbe    1a50 <mfs_match+0x110>
    19a3:	50                   	push   %eax
    19a4:	8d 45 9c             	lea    -0x64(%ebp),%eax
    19a7:	53                   	push   %ebx
    19a8:	50                   	push   %eax
    19a9:	57                   	push   %edi
    19aa:	e8 d1 30 00 00       	call   4a80 <mfs_read_dentry>
    19af:	83 c4 10             	add    $0x10,%esp
    19b2:	85 c0                	test   %eax,%eax
    19b4:	0f 85 ae 00 00 00    	jne    1a68 <mfs_match+0x128>
    19ba:	8b 45 9c             	mov    -0x64(%ebp),%eax
    19bd:	85 c0                	test   %eax,%eax
    19bf:	74 cf                	je     1990 <mfs_match+0x50>
    19c1:	83 ec 0c             	sub    $0xc,%esp
    19c4:	8d 45 a0             	lea    -0x60(%ebp),%eax
    19c7:	50                   	push   %eax
    19c8:	e8 f3 75 00 00       	call   8fc0 <str_size@plt>
    19cd:	83 c4 10             	add    $0x10,%esp
    19d0:	39 45 84             	cmp    %eax,-0x7c(%ebp)
    19d3:	75 bb                	jne    1990 <mfs_match+0x50>
    19d5:	50                   	push   %eax
    19d6:	8b 45 84             	mov    -0x7c(%ebp),%eax
    19d9:	50                   	push   %eax
    19da:	8d 45 a0             	lea    -0x60(%ebp),%eax
    19dd:	50                   	push   %eax
    19de:	8b 45 10             	mov    0x10(%ebp),%eax
    19e1:	50                   	push   %eax
    19e2:	e8 49 75 00 00       	call   8f30 <memcmp@plt>
    19e7:	83 c4 10             	add    $0x10,%esp
    19ea:	85 c0                	test   %eax,%eax
    19ec:	75 a2                	jne    1990 <mfs_match+0x50>
    19ee:	83 ec 0c             	sub    $0xc,%esp
    19f1:	8b 77 04             	mov    0x4(%edi),%esi
    19f4:	89 45 84             	mov    %eax,-0x7c(%ebp)
    19f7:	8b 5d 9c             	mov    -0x64(%ebp),%ebx
    19fa:	68 6c ad 00 00       	push   $0xad6c
    19ff:	e8 bc 76 00 00       	call   90c0 <fibril_mutex_lock@plt>
    1a04:	8b 06                	mov    (%esi),%eax
    1a06:	5f                   	pop    %edi
    1a07:	89 45 94             	mov    %eax,-0x6c(%ebp)
    1a0a:	58                   	pop    %eax
    1a0b:	8d 45 94             	lea    -0x6c(%ebp),%eax
    1a0e:	89 5d 98             	mov    %ebx,-0x68(%ebp)
    1a11:	50                   	push   %eax
    1a12:	68 e4 ae 00 00       	push   $0xaee4
    1a17:	e8 f4 75 00 00       	call   9010 <hash_table_find@plt>
    1a1c:	83 c4 10             	add    $0x10,%esp
    1a1f:	8b 55 84             	mov    -0x7c(%ebp),%edx
    1a22:	85 c0                	test   %eax,%eax
    1a24:	74 61                	je     1a87 <mfs_match+0x147>
    1a26:	8b 48 fc             	mov    -0x4(%eax),%ecx
    1a29:	83 e8 10             	sub    $0x10,%eax
    1a2c:	8b 55 08             	mov    0x8(%ebp),%edx
    1a2f:	8b 58 08             	mov    0x8(%eax),%ebx
    1a32:	43                   	inc    %ebx
    1a33:	89 0a                	mov    %ecx,(%edx)
    1a35:	89 58 08             	mov    %ebx,0x8(%eax)
    1a38:	83 ec 0c             	sub    $0xc,%esp
    1a3b:	68 6c ad 00 00       	push   $0xad6c
    1a40:	e8 9b 74 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    1a45:	83 c4 10             	add    $0x10,%esp
    1a48:	8b 55 84             	mov    -0x7c(%ebp),%edx
    1a4b:	eb 0e                	jmp    1a5b <mfs_match+0x11b>
    1a4d:	8d 76 00             	lea    0x0(%esi),%esi
    1a50:	8b 45 08             	mov    0x8(%ebp),%eax
    1a53:	31 d2                	xor    %edx,%edx
    1a55:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    1a5b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1a5e:	89 d0                	mov    %edx,%eax
    1a60:	5b                   	pop    %ebx
    1a61:	5e                   	pop    %esi
    1a62:	5f                   	pop    %edi
    1a63:	5d                   	pop    %ebp
    1a64:	c3                   	ret    
    1a65:	8d 76 00             	lea    0x0(%esi),%esi
    1a68:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1a6b:	89 c2                	mov    %eax,%edx
    1a6d:	89 d0                	mov    %edx,%eax
    1a6f:	5b                   	pop    %ebx
    1a70:	5e                   	pop    %esi
    1a71:	5f                   	pop    %edi
    1a72:	5d                   	pop    %ebp
    1a73:	c3                   	ret    
    1a74:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1a78:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1a7b:	ba fe fe ff ff       	mov    $0xfffffefe,%edx
    1a80:	89 d0                	mov    %edx,%eax
    1a82:	5b                   	pop    %ebx
    1a83:	5e                   	pop    %esi
    1a84:	5f                   	pop    %edi
    1a85:	5d                   	pop    %ebp
    1a86:	c3                   	ret    
    1a87:	83 ec 0c             	sub    $0xc,%esp
    1a8a:	89 55 84             	mov    %edx,-0x7c(%ebp)
    1a8d:	6a 14                	push   $0x14
    1a8f:	e8 5c 73 00 00       	call   8df0 <malloc@plt>
    1a94:	83 c4 10             	add    $0x10,%esp
    1a97:	8b 55 84             	mov    -0x7c(%ebp),%edx
    1a9a:	85 c0                	test   %eax,%eax
    1a9c:	74 63                	je     1b01 <mfs_match+0x1c1>
    1a9e:	83 ec 0c             	sub    $0xc,%esp
    1aa1:	89 55 80             	mov    %edx,-0x80(%ebp)
    1aa4:	89 45 84             	mov    %eax,-0x7c(%ebp)
    1aa7:	50                   	push   %eax
    1aa8:	e8 f3 69 00 00       	call   84a0 <fs_node_initialize>
    1aad:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)
    1ab4:	e8 37 73 00 00       	call   8df0 <malloc@plt>
    1ab9:	83 c4 10             	add    $0x10,%esp
    1abc:	89 c7                	mov    %eax,%edi
    1abe:	85 c0                	test   %eax,%eax
    1ac0:	8b 4d 84             	mov    -0x7c(%ebp),%ecx
    1ac3:	8b 55 80             	mov    -0x80(%ebp),%edx
    1ac6:	74 41                	je     1b09 <mfs_match+0x1c9>
    1ac8:	8d 45 90             	lea    -0x70(%ebp),%eax
    1acb:	89 4d 80             	mov    %ecx,-0x80(%ebp)
    1ace:	89 55 84             	mov    %edx,-0x7c(%ebp)
    1ad1:	51                   	push   %ecx
    1ad2:	53                   	push   %ebx
    1ad3:	50                   	push   %eax
    1ad4:	56                   	push   %esi
    1ad5:	e8 16 20 00 00       	call   3af0 <mfs_get_inode>
    1ada:	83 c4 10             	add    $0x10,%esp
    1add:	8b 55 84             	mov    -0x7c(%ebp),%edx
    1ae0:	85 c0                	test   %eax,%eax
    1ae2:	8b 4d 80             	mov    -0x80(%ebp),%ecx
    1ae5:	74 36                	je     1b1d <mfs_match+0x1dd>
    1ae7:	83 ec 0c             	sub    $0xc,%esp
    1aea:	89 55 84             	mov    %edx,-0x7c(%ebp)
    1aed:	51                   	push   %ecx
    1aee:	e8 bd 75 00 00       	call   90b0 <free@plt>
    1af3:	89 3c 24             	mov    %edi,(%esp)
    1af6:	e8 b5 75 00 00       	call   90b0 <free@plt>
    1afb:	83 c4 10             	add    $0x10,%esp
    1afe:	8b 55 84             	mov    -0x7c(%ebp),%edx
    1b01:	89 55 84             	mov    %edx,-0x7c(%ebp)
    1b04:	e9 2f ff ff ff       	jmp    1a38 <mfs_match+0xf8>
    1b09:	83 ec 0c             	sub    $0xc,%esp
    1b0c:	89 55 84             	mov    %edx,-0x7c(%ebp)
    1b0f:	51                   	push   %ecx
    1b10:	e8 9b 75 00 00       	call   90b0 <free@plt>
    1b15:	83 c4 10             	add    $0x10,%esp
    1b18:	8b 55 84             	mov    -0x7c(%ebp),%edx
    1b1b:	eb e4                	jmp    1b01 <mfs_match+0x1c1>
    1b1d:	8b 45 90             	mov    -0x70(%ebp),%eax
    1b20:	89 58 44             	mov    %ebx,0x44(%eax)
    1b23:	89 07                	mov    %eax,(%edi)
    1b25:	8b 45 08             	mov    0x8(%ebp),%eax
    1b28:	89 79 10             	mov    %edi,0x10(%ecx)
    1b2b:	89 4f 0c             	mov    %ecx,0xc(%edi)
    1b2e:	c7 47 08 01 00 00 00 	movl   $0x1,0x8(%edi)
    1b35:	89 08                	mov    %ecx,(%eax)
    1b37:	89 77 04             	mov    %esi,0x4(%edi)
    1b3a:	83 c7 10             	add    $0x10,%edi
    1b3d:	50                   	push   %eax
    1b3e:	50                   	push   %eax
    1b3f:	57                   	push   %edi
    1b40:	68 e4 ae 00 00       	push   $0xaee4
    1b45:	e8 06 72 00 00       	call   8d50 <hash_table_insert@plt>
    1b4a:	8b 56 08             	mov    0x8(%esi),%edx
    1b4d:	42                   	inc    %edx
    1b4e:	89 56 08             	mov    %edx,0x8(%esi)
    1b51:	c7 04 24 6c ad 00 00 	movl   $0xad6c,(%esp)
    1b58:	e8 83 73 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    1b5d:	83 c4 10             	add    $0x10,%esp
    1b60:	8b 55 84             	mov    -0x7c(%ebp),%edx
    1b63:	e9 f3 fe ff ff       	jmp    1a5b <mfs_match+0x11b>
    1b68:	90                   	nop
    1b69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001b70 <mfs_node_get>:
    1b70:	55                   	push   %ebp
    1b71:	89 e5                	mov    %esp,%ebp
    1b73:	57                   	push   %edi
    1b74:	56                   	push   %esi
    1b75:	53                   	push   %ebx
    1b76:	83 ec 34             	sub    $0x34,%esp
    1b79:	8d 7d e0             	lea    -0x20(%ebp),%edi
    1b7c:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    1b7f:	57                   	push   %edi
    1b80:	51                   	push   %ecx
    1b81:	e8 3a 6a 00 00       	call   85c0 <fs_instance_get>
    1b86:	83 c4 10             	add    $0x10,%esp
    1b89:	89 c3                	mov    %eax,%ebx
    1b8b:	85 c0                	test   %eax,%eax
    1b8d:	75 51                	jne    1be0 <mfs_node_get+0x70>
    1b8f:	83 ec 0c             	sub    $0xc,%esp
    1b92:	8b 75 e0             	mov    -0x20(%ebp),%esi
    1b95:	68 6c ad 00 00       	push   $0xad6c
    1b9a:	e8 21 75 00 00       	call   90c0 <fibril_mutex_lock@plt>
    1b9f:	8b 06                	mov    (%esi),%eax
    1ba1:	89 45 e0             	mov    %eax,-0x20(%ebp)
    1ba4:	8b 45 10             	mov    0x10(%ebp),%eax
    1ba7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    1baa:	58                   	pop    %eax
    1bab:	5a                   	pop    %edx
    1bac:	57                   	push   %edi
    1bad:	68 e4 ae 00 00       	push   $0xaee4
    1bb2:	e8 59 74 00 00       	call   9010 <hash_table_find@plt>
    1bb7:	83 c4 10             	add    $0x10,%esp
    1bba:	85 c0                	test   %eax,%eax
    1bbc:	74 32                	je     1bf0 <mfs_node_get+0x80>
    1bbe:	8b 50 fc             	mov    -0x4(%eax),%edx
    1bc1:	83 e8 10             	sub    $0x10,%eax
    1bc4:	83 ec 0c             	sub    $0xc,%esp
    1bc7:	8b 70 08             	mov    0x8(%eax),%esi
    1bca:	8b 4d 08             	mov    0x8(%ebp),%ecx
    1bcd:	46                   	inc    %esi
    1bce:	89 11                	mov    %edx,(%ecx)
    1bd0:	89 70 08             	mov    %esi,0x8(%eax)
    1bd3:	68 6c ad 00 00       	push   $0xad6c
    1bd8:	e8 03 73 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    1bdd:	83 c4 10             	add    $0x10,%esp
    1be0:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1be3:	89 d8                	mov    %ebx,%eax
    1be5:	5b                   	pop    %ebx
    1be6:	5e                   	pop    %esi
    1be7:	5f                   	pop    %edi
    1be8:	5d                   	pop    %ebp
    1be9:	c3                   	ret    
    1bea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1bf0:	83 ec 0c             	sub    $0xc,%esp
    1bf3:	6a 14                	push   $0x14
    1bf5:	e8 f6 71 00 00       	call   8df0 <malloc@plt>
    1bfa:	83 c4 10             	add    $0x10,%esp
    1bfd:	89 c7                	mov    %eax,%edi
    1bff:	85 c0                	test   %eax,%eax
    1c01:	0f 84 81 00 00 00    	je     1c88 <mfs_node_get+0x118>
    1c07:	83 ec 0c             	sub    $0xc,%esp
    1c0a:	50                   	push   %eax
    1c0b:	e8 90 68 00 00       	call   84a0 <fs_node_initialize>
    1c10:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)
    1c17:	e8 d4 71 00 00       	call   8df0 <malloc@plt>
    1c1c:	83 c4 10             	add    $0x10,%esp
    1c1f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    1c22:	85 c0                	test   %eax,%eax
    1c24:	74 4a                	je     1c70 <mfs_node_get+0x100>
    1c26:	8b 5d 10             	mov    0x10(%ebp),%ebx
    1c29:	8d 45 dc             	lea    -0x24(%ebp),%eax
    1c2c:	51                   	push   %ecx
    1c2d:	53                   	push   %ebx
    1c2e:	50                   	push   %eax
    1c2f:	56                   	push   %esi
    1c30:	e8 bb 1e 00 00       	call   3af0 <mfs_get_inode>
    1c35:	83 c4 10             	add    $0x10,%esp
    1c38:	89 c3                	mov    %eax,%ebx
    1c3a:	85 c0                	test   %eax,%eax
    1c3c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    1c3f:	74 4e                	je     1c8f <mfs_node_get+0x11f>
    1c41:	83 ec 0c             	sub    $0xc,%esp
    1c44:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    1c47:	57                   	push   %edi
    1c48:	e8 63 74 00 00       	call   90b0 <free@plt>
    1c4d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    1c50:	89 14 24             	mov    %edx,(%esp)
    1c53:	e8 58 74 00 00       	call   90b0 <free@plt>
    1c58:	83 c4 10             	add    $0x10,%esp
    1c5b:	83 ec 0c             	sub    $0xc,%esp
    1c5e:	68 6c ad 00 00       	push   $0xad6c
    1c63:	e8 78 72 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    1c68:	83 c4 10             	add    $0x10,%esp
    1c6b:	e9 70 ff ff ff       	jmp    1be0 <mfs_node_get+0x70>
    1c70:	83 ec 0c             	sub    $0xc,%esp
    1c73:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx
    1c78:	57                   	push   %edi
    1c79:	e8 32 74 00 00       	call   90b0 <free@plt>
    1c7e:	83 c4 10             	add    $0x10,%esp
    1c81:	eb d8                	jmp    1c5b <mfs_node_get+0xeb>
    1c83:	90                   	nop
    1c84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1c88:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx
    1c8d:	eb cc                	jmp    1c5b <mfs_node_get+0xeb>
    1c8f:	8b 45 dc             	mov    -0x24(%ebp),%eax
    1c92:	8b 4d 10             	mov    0x10(%ebp),%ecx
    1c95:	89 48 44             	mov    %ecx,0x44(%eax)
    1c98:	89 02                	mov    %eax,(%edx)
    1c9a:	8b 45 08             	mov    0x8(%ebp),%eax
    1c9d:	c7 42 08 01 00 00 00 	movl   $0x1,0x8(%edx)
    1ca4:	89 72 04             	mov    %esi,0x4(%edx)
    1ca7:	89 7a 0c             	mov    %edi,0xc(%edx)
    1caa:	89 38                	mov    %edi,(%eax)
    1cac:	89 57 10             	mov    %edx,0x10(%edi)
    1caf:	83 c2 10             	add    $0x10,%edx
    1cb2:	50                   	push   %eax
    1cb3:	50                   	push   %eax
    1cb4:	52                   	push   %edx
    1cb5:	68 e4 ae 00 00       	push   $0xaee4
    1cba:	e8 91 70 00 00       	call   8d50 <hash_table_insert@plt>
    1cbf:	8b 56 08             	mov    0x8(%esi),%edx
    1cc2:	42                   	inc    %edx
    1cc3:	89 56 08             	mov    %edx,0x8(%esi)
    1cc6:	c7 04 24 6c ad 00 00 	movl   $0xad6c,(%esp)
    1ccd:	e8 0e 72 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    1cd2:	83 c4 10             	add    $0x10,%esp
    1cd5:	e9 06 ff ff ff       	jmp    1be0 <mfs_node_get+0x70>
    1cda:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00001ce0 <mfs_unlink>:
    1ce0:	55                   	push   %ebp
    1ce1:	89 e5                	mov    %esp,%ebp
    1ce3:	57                   	push   %edi
    1ce4:	56                   	push   %esi
    1ce5:	53                   	push   %ebx
    1ce6:	83 ec 6c             	sub    $0x6c,%esp
    1ce9:	8b 45 08             	mov    0x8(%ebp),%eax
    1cec:	8b 40 10             	mov    0x10(%eax),%eax
    1cef:	89 c1                	mov    %eax,%ecx
    1cf1:	89 45 94             	mov    %eax,-0x6c(%ebp)
    1cf4:	8b 45 0c             	mov    0xc(%ebp),%eax
    1cf7:	85 c9                	test   %ecx,%ecx
    1cf9:	8b 78 10             	mov    0x10(%eax),%edi
    1cfc:	0f 84 d3 00 00 00    	je     1dd5 <mfs_unlink+0xf5>
    1d02:	8b 17                	mov    (%edi),%edx
    1d04:	8b 02                	mov    (%edx),%eax
    1d06:	25 00 f0 ff ff       	and    $0xfffff000,%eax
    1d0b:	66 3d 00 40          	cmp    $0x4000,%ax
    1d0f:	74 3f                	je     1d50 <mfs_unlink+0x70>
    1d11:	8b 55 10             	mov    0x10(%ebp),%edx
    1d14:	8b 4d 94             	mov    -0x6c(%ebp),%ecx
    1d17:	50                   	push   %eax
    1d18:	50                   	push   %eax
    1d19:	52                   	push   %edx
    1d1a:	51                   	push   %ecx
    1d1b:	e8 f0 2f 00 00       	call   4d10 <mfs_remove_dentry>
    1d20:	83 c4 10             	add    $0x10,%esp
    1d23:	85 c0                	test   %eax,%eax
    1d25:	75 1e                	jne    1d45 <mfs_unlink+0x65>
    1d27:	8b 0f                	mov    (%edi),%ecx
    1d29:	66 8b 51 02          	mov    0x2(%ecx),%dx
    1d2d:	66 85 d2             	test   %dx,%dx
    1d30:	0f 84 a9 00 00 00    	je     1ddf <mfs_unlink+0xff>
    1d36:	4a                   	dec    %edx
    1d37:	66 83 fa 01          	cmp    $0x1,%dx
    1d3b:	66 89 51 02          	mov    %dx,0x2(%ecx)
    1d3f:	76 6f                	jbe    1db0 <mfs_unlink+0xd0>
    1d41:	c6 41 40 01          	movb   $0x1,0x40(%ecx)
    1d45:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1d48:	5b                   	pop    %ebx
    1d49:	5e                   	pop    %esi
    1d4a:	5f                   	pop    %edi
    1d4b:	5d                   	pop    %ebp
    1d4c:	c3                   	ret    
    1d4d:	8d 76 00             	lea    0x0(%esi),%esi
    1d50:	8b 47 04             	mov    0x4(%edi),%eax
    1d53:	8b 70 04             	mov    0x4(%eax),%esi
    1d56:	8b 42 08             	mov    0x8(%edx),%eax
    1d59:	31 d2                	xor    %edx,%edx
    1d5b:	f7 76 30             	divl   0x30(%esi)
    1d5e:	83 f8 02             	cmp    $0x2,%eax
    1d61:	76 ae                	jbe    1d11 <mfs_unlink+0x31>
    1d63:	bb 02 00 00 00       	mov    $0x2,%ebx
    1d68:	eb 1c                	jmp    1d86 <mfs_unlink+0xa6>
    1d6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1d70:	8b 45 9c             	mov    -0x64(%ebp),%eax
    1d73:	85 c0                	test   %eax,%eax
    1d75:	75 29                	jne    1da0 <mfs_unlink+0xc0>
    1d77:	8b 07                	mov    (%edi),%eax
    1d79:	31 d2                	xor    %edx,%edx
    1d7b:	43                   	inc    %ebx
    1d7c:	8b 40 08             	mov    0x8(%eax),%eax
    1d7f:	f7 76 30             	divl   0x30(%esi)
    1d82:	39 c3                	cmp    %eax,%ebx
    1d84:	73 8b                	jae    1d11 <mfs_unlink+0x31>
    1d86:	50                   	push   %eax
    1d87:	8d 45 9c             	lea    -0x64(%ebp),%eax
    1d8a:	53                   	push   %ebx
    1d8b:	50                   	push   %eax
    1d8c:	57                   	push   %edi
    1d8d:	e8 ee 2c 00 00       	call   4a80 <mfs_read_dentry>
    1d92:	83 c4 10             	add    $0x10,%esp
    1d95:	85 c0                	test   %eax,%eax
    1d97:	74 d7                	je     1d70 <mfs_unlink+0x90>
    1d99:	eb aa                	jmp    1d45 <mfs_unlink+0x65>
    1d9b:	90                   	nop
    1d9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1da0:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1da3:	b8 fb fe ff ff       	mov    $0xfffffefb,%eax
    1da8:	5b                   	pop    %ebx
    1da9:	5e                   	pop    %esi
    1daa:	5f                   	pop    %edi
    1dab:	5d                   	pop    %ebp
    1dac:	c3                   	ret    
    1dad:	8d 76 00             	lea    0x0(%esi),%esi
    1db0:	8b 11                	mov    (%ecx),%edx
    1db2:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx
    1db8:	66 81 fa 00 40       	cmp    $0x4000,%dx
    1dbd:	0f 85 7e ff ff ff    	jne    1d41 <mfs_unlink+0x61>
    1dc3:	8b 75 94             	mov    -0x6c(%ebp),%esi
    1dc6:	8b 16                	mov    (%esi),%edx
    1dc8:	66 ff 4a 02          	decw   0x2(%edx)
    1dcc:	c6 42 40 01          	movb   $0x1,0x40(%edx)
    1dd0:	e9 6c ff ff ff       	jmp    1d41 <mfs_unlink+0x61>
    1dd5:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax
    1dda:	e9 66 ff ff ff       	jmp    1d45 <mfs_unlink+0x65>
    1ddf:	53                   	push   %ebx
    1de0:	68 d0 02 00 00       	push   $0x2d0
    1de5:	68 c4 87 00 00       	push   $0x87c4
    1dea:	68 e0 87 00 00       	push   $0x87e0
    1def:	e8 bc 70 00 00       	call   8eb0 <assert_abort@plt>
    1df4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1dfa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00001e00 <mfs_mounted>:
    1e00:	55                   	push   %ebp
    1e01:	89 e5                	mov    %esp,%ebp
    1e03:	57                   	push   %edi
    1e04:	56                   	push   %esi
    1e05:	53                   	push   %ebx
    1e06:	83 ec 34             	sub    $0x34,%esp
    1e09:	8b 45 0c             	mov    0xc(%ebp),%eax
    1e0c:	68 f5 87 00 00       	push   $0x87f5
    1e11:	50                   	push   %eax
    1e12:	e8 39 71 00 00       	call   8f50 <str_cmp@plt>
    1e17:	8b 5d 08             	mov    0x8(%ebp),%ebx
    1e1a:	5a                   	pop    %edx
    1e1b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    1e1e:	59                   	pop    %ecx
    1e1f:	68 00 10 00 00       	push   $0x1000
    1e24:	53                   	push   %ebx
    1e25:	e8 06 3b 00 00       	call   5930 <block_init>
    1e2a:	83 c4 10             	add    $0x10,%esp
    1e2d:	89 c7                	mov    %eax,%edi
    1e2f:	85 c0                	test   %eax,%eax
    1e31:	74 0d                	je     1e40 <mfs_mounted+0x40>
    1e33:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1e36:	89 f8                	mov    %edi,%eax
    1e38:	5b                   	pop    %ebx
    1e39:	5e                   	pop    %esi
    1e3a:	5f                   	pop    %edi
    1e3b:	5d                   	pop    %ebp
    1e3c:	c3                   	ret    
    1e3d:	8d 76 00             	lea    0x0(%esi),%esi
    1e40:	83 ec 0c             	sub    $0xc,%esp
    1e43:	6a 50                	push   $0x50
    1e45:	e8 a6 6f 00 00       	call   8df0 <malloc@plt>
    1e4a:	83 c4 10             	add    $0x10,%esp
    1e4d:	89 c3                	mov    %eax,%ebx
    1e4f:	85 c0                	test   %eax,%eax
    1e51:	0f 84 b1 00 00 00    	je     1f08 <mfs_mounted+0x108>
    1e57:	83 ec 0c             	sub    $0xc,%esp
    1e5a:	6a 0c                	push   $0xc
    1e5c:	e8 8f 6f 00 00       	call   8df0 <malloc@plt>
    1e61:	83 c4 10             	add    $0x10,%esp
    1e64:	89 45 d0             	mov    %eax,-0x30(%ebp)
    1e67:	85 c0                	test   %eax,%eax
    1e69:	0f 84 99 00 00 00    	je     1f08 <mfs_mounted+0x108>
    1e6f:	83 ec 0c             	sub    $0xc,%esp
    1e72:	68 00 04 00 00       	push   $0x400
    1e77:	e8 74 6f 00 00       	call   8df0 <malloc@plt>
    1e7c:	83 c4 10             	add    $0x10,%esp
    1e7f:	89 c6                	mov    %eax,%esi
    1e81:	85 c0                	test   %eax,%eax
    1e83:	74 6b                	je     1ef0 <mfs_mounted+0xf0>
    1e85:	83 ec 0c             	sub    $0xc,%esp
    1e88:	50                   	push   %eax
    1e89:	8b 45 08             	mov    0x8(%ebp),%eax
    1e8c:	6a 02                	push   $0x2
    1e8e:	6a 00                	push   $0x0
    1e90:	6a 02                	push   $0x2
    1e92:	50                   	push   %eax
    1e93:	e8 88 4c 00 00       	call   6b20 <block_read_direct>
    1e98:	83 c4 20             	add    $0x20,%esp
    1e9b:	89 c7                	mov    %eax,%edi
    1e9d:	85 c0                	test   %eax,%eax
    1e9f:	0f 84 93 00 00 00    	je     1f38 <mfs_mounted+0x138>
    1ea5:	83 ec 0c             	sub    $0xc,%esp
    1ea8:	8b 45 08             	mov    0x8(%ebp),%eax
    1eab:	50                   	push   %eax
    1eac:	e8 0f 41 00 00       	call   5fc0 <block_fini>
    1eb1:	83 c4 10             	add    $0x10,%esp
    1eb4:	83 ec 0c             	sub    $0xc,%esp
    1eb7:	56                   	push   %esi
    1eb8:	e8 f3 71 00 00       	call   90b0 <free@plt>
    1ebd:	83 c4 10             	add    $0x10,%esp
    1ec0:	83 ec 0c             	sub    $0xc,%esp
    1ec3:	53                   	push   %ebx
    1ec4:	e8 e7 71 00 00       	call   90b0 <free@plt>
    1ec9:	8b 45 d0             	mov    -0x30(%ebp),%eax
    1ecc:	83 c4 10             	add    $0x10,%esp
    1ecf:	85 c0                	test   %eax,%eax
    1ed1:	0f 84 5c ff ff ff    	je     1e33 <mfs_mounted+0x33>
    1ed7:	83 ec 0c             	sub    $0xc,%esp
    1eda:	50                   	push   %eax
    1edb:	e8 d0 71 00 00       	call   90b0 <free@plt>
    1ee0:	83 c4 10             	add    $0x10,%esp
    1ee3:	8d 65 f4             	lea    -0xc(%ebp),%esp
    1ee6:	89 f8                	mov    %edi,%eax
    1ee8:	5b                   	pop    %ebx
    1ee9:	5e                   	pop    %esi
    1eea:	5f                   	pop    %edi
    1eeb:	5d                   	pop    %ebp
    1eec:	c3                   	ret    
    1eed:	8d 76 00             	lea    0x0(%esi),%esi
    1ef0:	83 ec 0c             	sub    $0xc,%esp
    1ef3:	8b 45 08             	mov    0x8(%ebp),%eax
    1ef6:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    1efb:	50                   	push   %eax
    1efc:	e8 bf 40 00 00       	call   5fc0 <block_fini>
    1f01:	83 c4 10             	add    $0x10,%esp
    1f04:	eb ba                	jmp    1ec0 <mfs_mounted+0xc0>
    1f06:	66 90                	xchg   %ax,%ax
    1f08:	83 ec 0c             	sub    $0xc,%esp
    1f0b:	8b 4d 08             	mov    0x8(%ebp),%ecx
    1f0e:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    1f13:	51                   	push   %ecx
    1f14:	e8 a7 40 00 00       	call   5fc0 <block_fini>
    1f19:	83 c4 10             	add    $0x10,%esp
    1f1c:	85 db                	test   %ebx,%ebx
    1f1e:	0f 84 0f ff ff ff    	je     1e33 <mfs_mounted+0x33>
    1f24:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
    1f2b:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    1f30:	eb 8e                	jmp    1ec0 <mfs_mounted+0xc0>
    1f32:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1f38:	66 8b 4e 10          	mov    0x10(%esi),%cx
    1f3c:	66 81 f9 7f 13       	cmp    $0x137f,%cx
    1f41:	0f 94 c0             	sete   %al
    1f44:	66 81 f9 13 7f       	cmp    $0x7f13,%cx
    1f49:	0f 84 51 03 00 00    	je     22a0 <mfs_mounted+0x4a0>
    1f4f:	84 c0                	test   %al,%al
    1f51:	0f 85 49 03 00 00    	jne    22a0 <mfs_mounted+0x4a0>
    1f57:	66 81 f9 8f 13       	cmp    $0x138f,%cx
    1f5c:	0f 94 c0             	sete   %al
    1f5f:	66 81 f9 13 8f       	cmp    $0x8f13,%cx
    1f64:	0f 94 c2             	sete   %dl
    1f67:	08 c2                	or     %al,%dl
    1f69:	88 55 cf             	mov    %dl,-0x31(%ebp)
    1f6c:	0f 85 16 02 00 00    	jne    2188 <mfs_mounted+0x388>
    1f72:	66 81 f9 68 24       	cmp    $0x2468,%cx
    1f77:	0f 94 c0             	sete   %al
    1f7a:	66 81 f9 24 68       	cmp    $0x6824,%cx
    1f7f:	0f 84 2b 03 00 00    	je     22b0 <mfs_mounted+0x4b0>
    1f85:	84 c0                	test   %al,%al
    1f87:	0f 85 23 03 00 00    	jne    22b0 <mfs_mounted+0x4b0>
    1f8d:	66 81 f9 78 24       	cmp    $0x2478,%cx
    1f92:	0f 94 c0             	sete   %al
    1f95:	66 81 f9 24 78       	cmp    $0x7824,%cx
    1f9a:	0f 94 c2             	sete   %dl
    1f9d:	08 c2                	or     %al,%dl
    1f9f:	88 55 cf             	mov    %dl,-0x31(%ebp)
    1fa2:	0f 85 08 03 00 00    	jne    22b0 <mfs_mounted+0x4b0>
    1fa8:	66 81 f9 5a 4d       	cmp    $0x4d5a,%cx
    1fad:	0f 94 c0             	sete   %al
    1fb0:	66 81 f9 4d 5a       	cmp    $0x5a4d,%cx
    1fb5:	0f 94 c2             	sete   %dl
    1fb8:	08 c2                	or     %al,%dl
    1fba:	88 55 cf             	mov    %dl,-0x31(%ebp)
    1fbd:	0f 84 f7 02 00 00    	je     22ba <mfs_mounted+0x4ba>
    1fc3:	89 c7                	mov    %eax,%edi
    1fc5:	88 43 3d             	mov    %al,0x3d(%ebx)
    1fc8:	81 e7 ff 00 00 00    	and    $0xff,%edi
    1fce:	66 89 4b 20          	mov    %cx,0x20(%ebx)
    1fd2:	c7 43 28 03 00 00 00 	movl   $0x3,0x28(%ebx)
    1fd9:	c6 43 3c 00          	movb   $0x0,0x3c(%ebx)
    1fdd:	c7 43 40 00 00 00 00 	movl   $0x0,0x40(%ebx)
    1fe4:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
    1feb:	c6 43 48 00          	movb   $0x0,0x48(%ebx)
    1fef:	c7 43 4c 00 00 00 00 	movl   $0x0,0x4c(%ebx)
    1ff6:	50                   	push   %eax
    1ff7:	50                   	push   %eax
    1ff8:	8b 06                	mov    (%esi),%eax
    1ffa:	50                   	push   %eax
    1ffb:	57                   	push   %edi
    1ffc:	e8 bf 38 00 00       	call   58c0 <conv32>
    2001:	89 03                	mov    %eax,(%ebx)
    2003:	58                   	pop    %eax
    2004:	31 c0                	xor    %eax,%eax
    2006:	66 8b 46 06          	mov    0x6(%esi),%ax
    200a:	5a                   	pop    %edx
    200b:	50                   	push   %eax
    200c:	57                   	push   %edi
    200d:	e8 8e 38 00 00       	call   58a0 <conv16>
    2012:	25 ff ff 00 00       	and    $0xffff,%eax
    2017:	89 43 08             	mov    %eax,0x8(%ebx)
    201a:	59                   	pop    %ecx
    201b:	58                   	pop    %eax
    201c:	31 c0                	xor    %eax,%eax
    201e:	66 8b 46 08          	mov    0x8(%esi),%ax
    2022:	50                   	push   %eax
    2023:	57                   	push   %edi
    2024:	e8 77 38 00 00       	call   58a0 <conv16>
    2029:	25 ff ff 00 00       	and    $0xffff,%eax
    202e:	89 43 0c             	mov    %eax,0xc(%ebx)
    2031:	58                   	pop    %eax
    2032:	31 c0                	xor    %eax,%eax
    2034:	66 8b 46 0a          	mov    0xa(%esi),%ax
    2038:	5a                   	pop    %edx
    2039:	50                   	push   %eax
    203a:	57                   	push   %edi
    203b:	e8 60 38 00 00       	call   58a0 <conv16>
    2040:	25 ff ff 00 00       	and    $0xffff,%eax
    2045:	89 43 10             	mov    %eax,0x10(%ebx)
    2048:	59                   	pop    %ecx
    2049:	58                   	pop    %eax
    204a:	31 c0                	xor    %eax,%eax
    204c:	66 8b 46 0c          	mov    0xc(%esi),%ax
    2050:	50                   	push   %eax
    2051:	57                   	push   %edi
    2052:	e8 49 38 00 00       	call   58a0 <conv16>
    2057:	8b 4e 10             	mov    0x10(%esi),%ecx
    205a:	25 ff ff 00 00       	and    $0xffff,%eax
    205f:	89 43 14             	mov    %eax,0x14(%ebx)
    2062:	58                   	pop    %eax
    2063:	5a                   	pop    %edx
    2064:	51                   	push   %ecx
    2065:	57                   	push   %edi
    2066:	e8 55 38 00 00       	call   58c0 <conv32>
    206b:	8b 4e 14             	mov    0x14(%esi),%ecx
    206e:	89 43 1c             	mov    %eax,0x1c(%ebx)
    2071:	58                   	pop    %eax
    2072:	5a                   	pop    %edx
    2073:	51                   	push   %ecx
    2074:	57                   	push   %edi
    2075:	e8 46 38 00 00       	call   58c0 <conv32>
    207a:	89 43 04             	mov    %eax,0x4(%ebx)
    207d:	58                   	pop    %eax
    207e:	31 c0                	xor    %eax,%eax
    2080:	66 8b 46 1c          	mov    0x1c(%esi),%ax
    2084:	5a                   	pop    %edx
    2085:	50                   	push   %eax
    2086:	57                   	push   %edi
    2087:	e8 14 38 00 00       	call   58a0 <conv16>
    208c:	c7 43 30 40 00 00 00 	movl   $0x40,0x30(%ebx)
    2093:	25 ff ff 00 00       	and    $0xffff,%eax
    2098:	c7 43 38 3c 00 00 00 	movl   $0x3c,0x38(%ebx)
    209f:	89 43 18             	mov    %eax,0x18(%ebx)
    20a2:	83 c4 10             	add    $0x10,%esp
    20a5:	c1 e8 06             	shr    $0x6,%eax
    20a8:	89 43 2c             	mov    %eax,0x2c(%ebx)
    20ab:	8b 43 14             	mov    0x14(%ebx),%eax
    20ae:	85 c0                	test   %eax,%eax
    20b0:	0f 85 c2 00 00 00    	jne    2178 <mfs_mounted+0x378>
    20b6:	8b 53 08             	mov    0x8(%ebx),%edx
    20b9:	8b 4b 0c             	mov    0xc(%ebx),%ecx
    20bc:	85 d2                	test   %edx,%edx
    20be:	8d 44 0a 02          	lea    0x2(%edx,%ecx,1),%eax
    20c2:	89 43 34             	mov    %eax,0x34(%ebx)
    20c5:	8b 43 18             	mov    0x18(%ebx),%eax
    20c8:	0f 94 c2             	sete   %dl
    20cb:	85 c9                	test   %ecx,%ecx
    20cd:	0f 94 c1             	sete   %cl
    20d0:	09 ca                	or     %ecx,%edx
    20d2:	8d 88 00 fc ff ff    	lea    -0x400(%eax),%ecx
    20d8:	81 f9 00 0c 00 00    	cmp    $0xc00,%ecx
    20de:	0f 97 c1             	seta   %cl
    20e1:	08 ca                	or     %cl,%dl
    20e3:	0f 85 69 02 00 00    	jne    2352 <mfs_mounted+0x552>
    20e9:	8d 50 ff             	lea    -0x1(%eax),%edx
    20ec:	85 c2                	test   %eax,%edx
    20ee:	0f 85 5e 02 00 00    	jne    2352 <mfs_mounted+0x552>
    20f4:	8b 3b                	mov    (%ebx),%edi
    20f6:	85 ff                	test   %edi,%edi
    20f8:	0f 84 54 02 00 00    	je     2352 <mfs_mounted+0x552>
    20fe:	8b 4b 04             	mov    0x4(%ebx),%ecx
    2101:	85 c9                	test   %ecx,%ecx
    2103:	0f 84 49 02 00 00    	je     2352 <mfs_mounted+0x552>
    2109:	8b 53 10             	mov    0x10(%ebx),%edx
    210c:	85 d2                	test   %edx,%edx
    210e:	0f 84 3e 02 00 00    	je     2352 <mfs_mounted+0x552>
    2114:	31 d2                	xor    %edx,%edx
    2116:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    2119:	85 c9                	test   %ecx,%ecx
    211b:	8b 7d 08             	mov    0x8(%ebp),%edi
    211e:	0f 95 c2             	setne  %dl
    2121:	52                   	push   %edx
    2122:	6a 00                	push   $0x0
    2124:	50                   	push   %eax
    2125:	57                   	push   %edi
    2126:	e8 a5 3b 00 00       	call   5cd0 <block_cache_init>
    212b:	bf f2 ff ff ff       	mov    $0xfffffff2,%edi
    2130:	83 c4 10             	add    $0x10,%esp
    2133:	85 c0                	test   %eax,%eax
    2135:	0f 85 6a fd ff ff    	jne    1ea5 <mfs_mounted+0xa5>
    213b:	8b 45 d0             	mov    -0x30(%ebp),%eax
    213e:	8b 4d 08             	mov    0x8(%ebp),%ecx
    2141:	89 08                	mov    %ecx,(%eax)
    2143:	89 58 04             	mov    %ebx,0x4(%eax)
    2146:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
    214d:	57                   	push   %edi
    214e:	57                   	push   %edi
    214f:	50                   	push   %eax
    2150:	51                   	push   %ecx
    2151:	e8 6a 63 00 00       	call   84c0 <fs_instance_create>
    2156:	83 c4 10             	add    $0x10,%esp
    2159:	89 c7                	mov    %eax,%edi
    215b:	85 c0                	test   %eax,%eax
    215d:	0f 84 33 02 00 00    	je     2396 <mfs_mounted+0x596>
    2163:	83 ec 0c             	sub    $0xc,%esp
    2166:	8b 55 08             	mov    0x8(%ebp),%edx
    2169:	52                   	push   %edx
    216a:	e8 a1 3c 00 00       	call   5e10 <block_cache_fini>
    216f:	83 c4 10             	add    $0x10,%esp
    2172:	e9 2e fd ff ff       	jmp    1ea5 <mfs_mounted+0xa5>
    2177:	90                   	nop
    2178:	bf f5 ff ff ff       	mov    $0xfffffff5,%edi
    217d:	e9 23 fd ff ff       	jmp    1ea5 <mfs_mounted+0xa5>
    2182:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2188:	ba 01 00 00 00       	mov    $0x1,%edx
    218d:	89 53 28             	mov    %edx,0x28(%ebx)
    2190:	88 43 3d             	mov    %al,0x3d(%ebx)
    2193:	89 55 c8             	mov    %edx,-0x38(%ebp)
    2196:	89 c7                	mov    %eax,%edi
    2198:	8a 55 cf             	mov    -0x31(%ebp),%dl
    219b:	31 c0                	xor    %eax,%eax
    219d:	88 53 3c             	mov    %dl,0x3c(%ebx)
    21a0:	81 e7 ff 00 00 00    	and    $0xff,%edi
    21a6:	66 89 4b 20          	mov    %cx,0x20(%ebx)
    21aa:	c7 43 40 00 00 00 00 	movl   $0x0,0x40(%ebx)
    21b1:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
    21b8:	c6 43 48 00          	movb   $0x0,0x48(%ebx)
    21bc:	c7 43 4c 00 00 00 00 	movl   $0x0,0x4c(%ebx)
    21c3:	66 8b 06             	mov    (%esi),%ax
    21c6:	52                   	push   %edx
    21c7:	52                   	push   %edx
    21c8:	50                   	push   %eax
    21c9:	57                   	push   %edi
    21ca:	e8 d1 36 00 00       	call   58a0 <conv16>
    21cf:	25 ff ff 00 00       	and    $0xffff,%eax
    21d4:	89 03                	mov    %eax,(%ebx)
    21d6:	59                   	pop    %ecx
    21d7:	58                   	pop    %eax
    21d8:	31 c0                	xor    %eax,%eax
    21da:	66 8b 46 04          	mov    0x4(%esi),%ax
    21de:	50                   	push   %eax
    21df:	57                   	push   %edi
    21e0:	e8 bb 36 00 00       	call   58a0 <conv16>
    21e5:	25 ff ff 00 00       	and    $0xffff,%eax
    21ea:	89 43 08             	mov    %eax,0x8(%ebx)
    21ed:	58                   	pop    %eax
    21ee:	31 c0                	xor    %eax,%eax
    21f0:	66 8b 46 06          	mov    0x6(%esi),%ax
    21f4:	5a                   	pop    %edx
    21f5:	50                   	push   %eax
    21f6:	57                   	push   %edi
    21f7:	e8 a4 36 00 00       	call   58a0 <conv16>
    21fc:	25 ff ff 00 00       	and    $0xffff,%eax
    2201:	89 43 0c             	mov    %eax,0xc(%ebx)
    2204:	59                   	pop    %ecx
    2205:	58                   	pop    %eax
    2206:	31 c0                	xor    %eax,%eax
    2208:	66 8b 46 08          	mov    0x8(%esi),%ax
    220c:	50                   	push   %eax
    220d:	57                   	push   %edi
    220e:	e8 8d 36 00 00       	call   58a0 <conv16>
    2213:	25 ff ff 00 00       	and    $0xffff,%eax
    2218:	89 43 10             	mov    %eax,0x10(%ebx)
    221b:	58                   	pop    %eax
    221c:	31 c0                	xor    %eax,%eax
    221e:	66 8b 46 0a          	mov    0xa(%esi),%ax
    2222:	5a                   	pop    %edx
    2223:	50                   	push   %eax
    2224:	57                   	push   %edi
    2225:	e8 76 36 00 00       	call   58a0 <conv16>
    222a:	25 ff ff 00 00       	and    $0xffff,%eax
    222f:	89 43 14             	mov    %eax,0x14(%ebx)
    2232:	59                   	pop    %ecx
    2233:	58                   	pop    %eax
    2234:	8b 46 0c             	mov    0xc(%esi),%eax
    2237:	50                   	push   %eax
    2238:	57                   	push   %edi
    2239:	e8 82 36 00 00       	call   58c0 <conv32>
    223e:	8b 55 c8             	mov    -0x38(%ebp),%edx
    2241:	83 c4 10             	add    $0x10,%esp
    2244:	89 43 1c             	mov    %eax,0x1c(%ebx)
    2247:	c7 43 18 00 04 00 00 	movl   $0x400,0x18(%ebx)
    224e:	83 fa 02             	cmp    $0x2,%edx
    2251:	0f 84 21 01 00 00    	je     2378 <mfs_mounted+0x578>
    2257:	50                   	push   %eax
    2258:	50                   	push   %eax
    2259:	31 c0                	xor    %eax,%eax
    225b:	66 8b 46 02          	mov    0x2(%esi),%ax
    225f:	50                   	push   %eax
    2260:	57                   	push   %edi
    2261:	e8 3a 36 00 00       	call   58a0 <conv16>
    2266:	c7 43 2c 20 00 00 00 	movl   $0x20,0x2c(%ebx)
    226d:	25 ff ff 00 00       	and    $0xffff,%eax
    2272:	83 c4 10             	add    $0x10,%esp
    2275:	89 43 04             	mov    %eax,0x4(%ebx)
    2278:	8a 45 cf             	mov    -0x31(%ebp),%al
    227b:	3c 01                	cmp    $0x1,%al
    227d:	19 d2                	sbb    %edx,%edx
    227f:	83 e2 f0             	and    $0xfffffff0,%edx
    2282:	83 c2 20             	add    $0x20,%edx
    2285:	3c 01                	cmp    $0x1,%al
    2287:	19 c0                	sbb    %eax,%eax
    2289:	89 53 30             	mov    %edx,0x30(%ebx)
    228c:	83 e0 f0             	and    $0xfffffff0,%eax
    228f:	83 c0 1e             	add    $0x1e,%eax
    2292:	89 43 38             	mov    %eax,0x38(%ebx)
    2295:	e9 11 fe ff ff       	jmp    20ab <mfs_mounted+0x2ab>
    229a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    22a0:	ba 01 00 00 00       	mov    $0x1,%edx
    22a5:	c6 45 cf 00          	movb   $0x0,-0x31(%ebp)
    22a9:	e9 df fe ff ff       	jmp    218d <mfs_mounted+0x38d>
    22ae:	66 90                	xchg   %ax,%ax
    22b0:	ba 02 00 00 00       	mov    $0x2,%edx
    22b5:	e9 d3 fe ff ff       	jmp    218d <mfs_mounted+0x38d>
    22ba:	66 8b 4e 18          	mov    0x18(%esi),%cx
    22be:	66 81 f9 7f 13       	cmp    $0x137f,%cx
    22c3:	0f 94 c0             	sete   %al
    22c6:	66 81 f9 13 7f       	cmp    $0x7f13,%cx
    22cb:	0f 84 b7 fe ff ff    	je     2188 <mfs_mounted+0x388>
    22d1:	84 c0                	test   %al,%al
    22d3:	0f 85 af fe ff ff    	jne    2188 <mfs_mounted+0x388>
    22d9:	66 81 f9 8f 13       	cmp    $0x138f,%cx
    22de:	0f 94 c0             	sete   %al
    22e1:	66 81 f9 13 8f       	cmp    $0x8f13,%cx
    22e6:	0f 94 c2             	sete   %dl
    22e9:	08 c2                	or     %al,%dl
    22eb:	88 55 cf             	mov    %dl,-0x31(%ebp)
    22ee:	0f 85 94 fe ff ff    	jne    2188 <mfs_mounted+0x388>
    22f4:	66 81 f9 68 24       	cmp    $0x2468,%cx
    22f9:	0f 94 c0             	sete   %al
    22fc:	66 81 f9 24 68       	cmp    $0x6824,%cx
    2301:	74 ad                	je     22b0 <mfs_mounted+0x4b0>
    2303:	84 c0                	test   %al,%al
    2305:	75 a9                	jne    22b0 <mfs_mounted+0x4b0>
    2307:	66 81 f9 78 24       	cmp    $0x2478,%cx
    230c:	0f 94 c0             	sete   %al
    230f:	66 81 f9 24 78       	cmp    $0x7824,%cx
    2314:	0f 94 c2             	sete   %dl
    2317:	08 c2                	or     %al,%dl
    2319:	88 55 cf             	mov    %dl,-0x31(%ebp)
    231c:	75 92                	jne    22b0 <mfs_mounted+0x4b0>
    231e:	66 81 f9 5a 4d       	cmp    $0x4d5a,%cx
    2323:	0f 94 c0             	sete   %al
    2326:	66 81 f9 4d 5a       	cmp    $0x5a4d,%cx
    232b:	0f 84 92 fc ff ff    	je     1fc3 <mfs_mounted+0x1c3>
    2331:	84 c0                	test   %al,%al
    2333:	0f 85 8a fc ff ff    	jne    1fc3 <mfs_mounted+0x1c3>
    2339:	83 ec 0c             	sub    $0xc,%esp
    233c:	8b 45 08             	mov    0x8(%ebp),%eax
    233f:	bf f5 ff ff ff       	mov    $0xfffffff5,%edi
    2344:	50                   	push   %eax
    2345:	e8 76 3c 00 00       	call   5fc0 <block_fini>
    234a:	83 c4 10             	add    $0x10,%esp
    234d:	e9 62 fb ff ff       	jmp    1eb4 <mfs_mounted+0xb4>
    2352:	50                   	push   %eax
    2353:	50                   	push   %eax
    2354:	a1 e0 ae 00 00       	mov    0xaee0,%eax
    2359:	68 30 88 00 00       	push   $0x8830
    235e:	50                   	push   %eax
    235f:	bf f5 ff ff ff       	mov    $0xfffffff5,%edi
    2364:	e8 57 6b 00 00       	call   8ec0 <fprintf@plt>
    2369:	83 c4 10             	add    $0x10,%esp
    236c:	e9 34 fb ff ff       	jmp    1ea5 <mfs_mounted+0xa5>
    2371:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    2378:	50                   	push   %eax
    2379:	50                   	push   %eax
    237a:	8b 46 14             	mov    0x14(%esi),%eax
    237d:	50                   	push   %eax
    237e:	57                   	push   %edi
    237f:	e8 3c 35 00 00       	call   58c0 <conv32>
    2384:	c7 43 2c 10 00 00 00 	movl   $0x10,0x2c(%ebx)
    238b:	89 43 04             	mov    %eax,0x4(%ebx)
    238e:	83 c4 10             	add    $0x10,%esp
    2391:	e9 e2 fe ff ff       	jmp    2278 <mfs_mounted+0x478>
    2396:	50                   	push   %eax
    2397:	8b 45 08             	mov    0x8(%ebp),%eax
    239a:	6a 01                	push   $0x1
    239c:	50                   	push   %eax
    239d:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    23a0:	50                   	push   %eax
    23a1:	e8 ca f7 ff ff       	call   1b70 <mfs_node_get>
    23a6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    23a9:	8b 55 10             	mov    0x10(%ebp),%edx
    23ac:	8b 40 10             	mov    0x10(%eax),%eax
    23af:	8b 00                	mov    (%eax),%eax
    23b1:	8b 48 44             	mov    0x44(%eax),%ecx
    23b4:	89 0a                	mov    %ecx,(%edx)
    23b6:	8b 55 14             	mov    0x14(%ebp),%edx
    23b9:	8b 40 08             	mov    0x8(%eax),%eax
    23bc:	89 02                	mov    %eax,(%edx)
    23be:	8b 45 18             	mov    0x18(%ebp),%eax
    23c1:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
    23c8:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
    23ce:	89 34 24             	mov    %esi,(%esp)
    23d1:	e8 da 6c 00 00       	call   90b0 <free@plt>
    23d6:	58                   	pop    %eax
    23d7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    23da:	50                   	push   %eax
    23db:	e8 a0 f4 ff ff       	call   1880 <mfs_node_put>
    23e0:	83 c4 10             	add    $0x10,%esp
    23e3:	89 c7                	mov    %eax,%edi
    23e5:	e9 49 fa ff ff       	jmp    1e33 <mfs_mounted+0x33>
    23ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000023f0 <mfs_root_get>:
    23f0:	55                   	push   %ebp
    23f1:	89 e5                	mov    %esp,%ebp
    23f3:	57                   	push   %edi
    23f4:	56                   	push   %esi
    23f5:	53                   	push   %ebx
    23f6:	83 ec 34             	sub    $0x34,%esp
    23f9:	8d 7d e0             	lea    -0x20(%ebp),%edi
    23fc:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    23ff:	57                   	push   %edi
    2400:	51                   	push   %ecx
    2401:	e8 ba 61 00 00       	call   85c0 <fs_instance_get>
    2406:	83 c4 10             	add    $0x10,%esp
    2409:	89 c3                	mov    %eax,%ebx
    240b:	85 c0                	test   %eax,%eax
    240d:	75 52                	jne    2461 <mfs_root_get+0x71>
    240f:	83 ec 0c             	sub    $0xc,%esp
    2412:	8b 75 e0             	mov    -0x20(%ebp),%esi
    2415:	68 6c ad 00 00       	push   $0xad6c
    241a:	e8 a1 6c 00 00       	call   90c0 <fibril_mutex_lock@plt>
    241f:	8b 06                	mov    (%esi),%eax
    2421:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
    2428:	89 45 e0             	mov    %eax,-0x20(%ebp)
    242b:	58                   	pop    %eax
    242c:	5a                   	pop    %edx
    242d:	57                   	push   %edi
    242e:	68 e4 ae 00 00       	push   $0xaee4
    2433:	e8 d8 6b 00 00       	call   9010 <hash_table_find@plt>
    2438:	83 c4 10             	add    $0x10,%esp
    243b:	85 c0                	test   %eax,%eax
    243d:	74 31                	je     2470 <mfs_root_get+0x80>
    243f:	8b 50 fc             	mov    -0x4(%eax),%edx
    2442:	83 e8 10             	sub    $0x10,%eax
    2445:	83 ec 0c             	sub    $0xc,%esp
    2448:	8b 70 08             	mov    0x8(%eax),%esi
    244b:	8b 4d 08             	mov    0x8(%ebp),%ecx
    244e:	46                   	inc    %esi
    244f:	89 11                	mov    %edx,(%ecx)
    2451:	89 70 08             	mov    %esi,0x8(%eax)
    2454:	68 6c ad 00 00       	push   $0xad6c
    2459:	e8 82 6a 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    245e:	83 c4 10             	add    $0x10,%esp
    2461:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2464:	89 d8                	mov    %ebx,%eax
    2466:	5b                   	pop    %ebx
    2467:	5e                   	pop    %esi
    2468:	5f                   	pop    %edi
    2469:	5d                   	pop    %ebp
    246a:	c3                   	ret    
    246b:	90                   	nop
    246c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2470:	83 ec 0c             	sub    $0xc,%esp
    2473:	6a 14                	push   $0x14
    2475:	e8 76 69 00 00       	call   8df0 <malloc@plt>
    247a:	83 c4 10             	add    $0x10,%esp
    247d:	89 c7                	mov    %eax,%edi
    247f:	85 c0                	test   %eax,%eax
    2481:	0f 84 81 00 00 00    	je     2508 <mfs_root_get+0x118>
    2487:	83 ec 0c             	sub    $0xc,%esp
    248a:	50                   	push   %eax
    248b:	e8 10 60 00 00       	call   84a0 <fs_node_initialize>
    2490:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)
    2497:	e8 54 69 00 00       	call   8df0 <malloc@plt>
    249c:	83 c4 10             	add    $0x10,%esp
    249f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    24a2:	85 c0                	test   %eax,%eax
    24a4:	74 4a                	je     24f0 <mfs_root_get+0x100>
    24a6:	8d 45 dc             	lea    -0x24(%ebp),%eax
    24a9:	51                   	push   %ecx
    24aa:	6a 01                	push   $0x1
    24ac:	50                   	push   %eax
    24ad:	56                   	push   %esi
    24ae:	e8 3d 16 00 00       	call   3af0 <mfs_get_inode>
    24b3:	83 c4 10             	add    $0x10,%esp
    24b6:	89 c3                	mov    %eax,%ebx
    24b8:	85 c0                	test   %eax,%eax
    24ba:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    24bd:	74 50                	je     250f <mfs_root_get+0x11f>
    24bf:	83 ec 0c             	sub    $0xc,%esp
    24c2:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    24c5:	57                   	push   %edi
    24c6:	e8 e5 6b 00 00       	call   90b0 <free@plt>
    24cb:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    24ce:	89 14 24             	mov    %edx,(%esp)
    24d1:	e8 da 6b 00 00       	call   90b0 <free@plt>
    24d6:	83 c4 10             	add    $0x10,%esp
    24d9:	83 ec 0c             	sub    $0xc,%esp
    24dc:	68 6c ad 00 00       	push   $0xad6c
    24e1:	e8 fa 69 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    24e6:	83 c4 10             	add    $0x10,%esp
    24e9:	e9 73 ff ff ff       	jmp    2461 <mfs_root_get+0x71>
    24ee:	66 90                	xchg   %ax,%ax
    24f0:	83 ec 0c             	sub    $0xc,%esp
    24f3:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx
    24f8:	57                   	push   %edi
    24f9:	e8 b2 6b 00 00       	call   90b0 <free@plt>
    24fe:	83 c4 10             	add    $0x10,%esp
    2501:	eb d6                	jmp    24d9 <mfs_root_get+0xe9>
    2503:	90                   	nop
    2504:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2508:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx
    250d:	eb ca                	jmp    24d9 <mfs_root_get+0xe9>
    250f:	8b 45 dc             	mov    -0x24(%ebp),%eax
    2512:	c7 40 44 01 00 00 00 	movl   $0x1,0x44(%eax)
    2519:	89 02                	mov    %eax,(%edx)
    251b:	8b 45 08             	mov    0x8(%ebp),%eax
    251e:	c7 42 08 01 00 00 00 	movl   $0x1,0x8(%edx)
    2525:	89 72 04             	mov    %esi,0x4(%edx)
    2528:	89 7a 0c             	mov    %edi,0xc(%edx)
    252b:	89 38                	mov    %edi,(%eax)
    252d:	89 57 10             	mov    %edx,0x10(%edi)
    2530:	83 c2 10             	add    $0x10,%edx
    2533:	50                   	push   %eax
    2534:	50                   	push   %eax
    2535:	52                   	push   %edx
    2536:	68 e4 ae 00 00       	push   $0xaee4
    253b:	e8 10 68 00 00       	call   8d50 <hash_table_insert@plt>
    2540:	8b 56 08             	mov    0x8(%esi),%edx
    2543:	42                   	inc    %edx
    2544:	89 56 08             	mov    %edx,0x8(%esi)
    2547:	c7 04 24 6c ad 00 00 	movl   $0xad6c,(%esp)
    254e:	e8 8d 69 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    2553:	83 c4 10             	add    $0x10,%esp
    2556:	e9 06 ff ff ff       	jmp    2461 <mfs_root_get+0x71>
    255b:	90                   	nop
    255c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00002560 <mfs_destroy_node>:
    2560:	55                   	push   %ebp
    2561:	89 e5                	mov    %esp,%ebp
    2563:	57                   	push   %edi
    2564:	56                   	push   %esi
    2565:	53                   	push   %ebx
    2566:	83 ec 5c             	sub    $0x5c,%esp
    2569:	8b 45 08             	mov    0x8(%ebp),%eax
    256c:	8b 78 10             	mov    0x10(%eax),%edi
    256f:	8b 17                	mov    (%edi),%edx
    2571:	8b 02                	mov    (%edx),%eax
    2573:	25 00 f0 ff ff       	and    $0xfffff000,%eax
    2578:	66 3d 00 40          	cmp    $0x4000,%ax
    257c:	0f 84 c6 00 00 00    	je     2648 <mfs_destroy_node+0xe8>
    2582:	8b 4a 08             	mov    0x8(%edx),%ecx
    2585:	50                   	push   %eax
    2586:	50                   	push   %eax
    2587:	51                   	push   %ecx
    2588:	57                   	push   %edi
    2589:	e8 42 1b 00 00       	call   40d0 <mfs_inode_shrink>
    258e:	83 c4 10             	add    $0x10,%esp
    2591:	89 c6                	mov    %eax,%esi
    2593:	85 c0                	test   %eax,%eax
    2595:	0f 84 8d 00 00 00    	je     2628 <mfs_destroy_node+0xc8>
    259b:	8b 45 08             	mov    0x8(%ebp),%eax
    259e:	83 ec 0c             	sub    $0xc,%esp
    25a1:	8b 58 10             	mov    0x10(%eax),%ebx
    25a4:	68 6c ad 00 00       	push   $0xad6c
    25a9:	e8 12 6b 00 00       	call   90c0 <fibril_mutex_lock@plt>
    25ae:	83 c4 10             	add    $0x10,%esp
    25b1:	8b 43 08             	mov    0x8(%ebx),%eax
    25b4:	85 c0                	test   %eax,%eax
    25b6:	0f 84 01 01 00 00    	je     26bd <mfs_destroy_node+0x15d>
    25bc:	48                   	dec    %eax
    25bd:	89 43 08             	mov    %eax,0x8(%ebx)
    25c0:	85 c0                	test   %eax,%eax
    25c2:	75 4c                	jne    2610 <mfs_destroy_node+0xb0>
    25c4:	50                   	push   %eax
    25c5:	50                   	push   %eax
    25c6:	8d 43 10             	lea    0x10(%ebx),%eax
    25c9:	50                   	push   %eax
    25ca:	68 e4 ae 00 00       	push   $0xaee4
    25cf:	e8 8c 69 00 00       	call   8f60 <hash_table_remove_item@plt>
    25d4:	8b 4b 04             	mov    0x4(%ebx),%ecx
    25d7:	8b 41 08             	mov    0x8(%ecx),%eax
    25da:	83 c4 10             	add    $0x10,%esp
    25dd:	85 c0                	test   %eax,%eax
    25df:	0f 84 ed 00 00 00    	je     26d2 <mfs_destroy_node+0x172>
    25e5:	83 ec 0c             	sub    $0xc,%esp
    25e8:	48                   	dec    %eax
    25e9:	89 41 08             	mov    %eax,0x8(%ecx)
    25ec:	53                   	push   %ebx
    25ed:	e8 2e 18 00 00       	call   3e20 <mfs_put_inode>
    25f2:	8b 3b                	mov    (%ebx),%edi
    25f4:	59                   	pop    %ecx
    25f5:	57                   	push   %edi
    25f6:	e8 b5 6a 00 00       	call   90b0 <free@plt>
    25fb:	89 1c 24             	mov    %ebx,(%esp)
    25fe:	e8 ad 6a 00 00       	call   90b0 <free@plt>
    2603:	58                   	pop    %eax
    2604:	8b 45 08             	mov    0x8(%ebp),%eax
    2607:	50                   	push   %eax
    2608:	e8 a3 6a 00 00       	call   90b0 <free@plt>
    260d:	83 c4 10             	add    $0x10,%esp
    2610:	83 ec 0c             	sub    $0xc,%esp
    2613:	68 6c ad 00 00       	push   $0xad6c
    2618:	e8 c3 68 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    261d:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2620:	89 f0                	mov    %esi,%eax
    2622:	5b                   	pop    %ebx
    2623:	5e                   	pop    %esi
    2624:	5f                   	pop    %edi
    2625:	5d                   	pop    %ebp
    2626:	c3                   	ret    
    2627:	90                   	nop
    2628:	50                   	push   %eax
    2629:	50                   	push   %eax
    262a:	8b 07                	mov    (%edi),%eax
    262c:	8b 4f 04             	mov    0x4(%edi),%ecx
    262f:	8b 50 44             	mov    0x44(%eax),%edx
    2632:	52                   	push   %edx
    2633:	51                   	push   %ecx
    2634:	e8 e7 2f 00 00       	call   5620 <mfs_free_inode>
    2639:	83 c4 10             	add    $0x10,%esp
    263c:	89 c6                	mov    %eax,%esi
    263e:	e9 58 ff ff ff       	jmp    259b <mfs_destroy_node+0x3b>
    2643:	90                   	nop
    2644:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2648:	8b 47 04             	mov    0x4(%edi),%eax
    264b:	8b 4a 08             	mov    0x8(%edx),%ecx
    264e:	31 d2                	xor    %edx,%edx
    2650:	8b 40 04             	mov    0x4(%eax),%eax
    2653:	89 c6                	mov    %eax,%esi
    2655:	89 c8                	mov    %ecx,%eax
    2657:	f7 76 30             	divl   0x30(%esi)
    265a:	83 f8 02             	cmp    $0x2,%eax
    265d:	0f 86 22 ff ff ff    	jbe    2585 <mfs_destroy_node+0x25>
    2663:	bb 02 00 00 00       	mov    $0x2,%ebx
    2668:	eb 22                	jmp    268c <mfs_destroy_node+0x12c>
    266a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2670:	8b 45 9c             	mov    -0x64(%ebp),%eax
    2673:	85 c0                	test   %eax,%eax
    2675:	75 31                	jne    26a8 <mfs_destroy_node+0x148>
    2677:	8b 07                	mov    (%edi),%eax
    2679:	31 d2                	xor    %edx,%edx
    267b:	43                   	inc    %ebx
    267c:	8b 48 08             	mov    0x8(%eax),%ecx
    267f:	89 c8                	mov    %ecx,%eax
    2681:	f7 76 30             	divl   0x30(%esi)
    2684:	39 c3                	cmp    %eax,%ebx
    2686:	0f 83 f9 fe ff ff    	jae    2585 <mfs_destroy_node+0x25>
    268c:	50                   	push   %eax
    268d:	8d 45 9c             	lea    -0x64(%ebp),%eax
    2690:	53                   	push   %ebx
    2691:	50                   	push   %eax
    2692:	57                   	push   %edi
    2693:	e8 e8 23 00 00       	call   4a80 <mfs_read_dentry>
    2698:	83 c4 10             	add    $0x10,%esp
    269b:	85 c0                	test   %eax,%eax
    269d:	74 d1                	je     2670 <mfs_destroy_node+0x110>
    269f:	89 c6                	mov    %eax,%esi
    26a1:	e9 f5 fe ff ff       	jmp    259b <mfs_destroy_node+0x3b>
    26a6:	66 90                	xchg   %ax,%ax
    26a8:	52                   	push   %edx
    26a9:	68 e2 03 00 00       	push   $0x3e2
    26ae:	68 c4 87 00 00       	push   $0x87c4
    26b3:	68 fd 87 00 00       	push   $0x87fd
    26b8:	e8 f3 67 00 00       	call   8eb0 <assert_abort@plt>
    26bd:	50                   	push   %eax
    26be:	68 f6 01 00 00       	push   $0x1f6
    26c3:	68 c4 87 00 00       	push   $0x87c4
    26c8:	68 ce 87 00 00       	push   $0x87ce
    26cd:	e8 de 67 00 00       	call   8eb0 <assert_abort@plt>
    26d2:	50                   	push   %eax
    26d3:	68 fa 01 00 00       	push   $0x1fa
    26d8:	68 c4 87 00 00       	push   $0x87c4
    26dd:	68 0c 88 00 00       	push   $0x880c
    26e2:	e8 c9 67 00 00       	call   8eb0 <assert_abort@plt>
    26e7:	89 f6                	mov    %esi,%esi
    26e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000026f0 <mfs_sync>:
    26f0:	55                   	push   %ebp
    26f1:	89 e5                	mov    %esp,%ebp
    26f3:	57                   	push   %edi
    26f4:	56                   	push   %esi
    26f5:	53                   	push   %ebx
    26f6:	83 ec 34             	sub    $0x34,%esp
    26f9:	8d 7d e0             	lea    -0x20(%ebp),%edi
    26fc:	8b 45 08             	mov    0x8(%ebp),%eax
    26ff:	57                   	push   %edi
    2700:	50                   	push   %eax
    2701:	e8 ba 5e 00 00       	call   85c0 <fs_instance_get>
    2706:	83 c4 10             	add    $0x10,%esp
    2709:	89 c6                	mov    %eax,%esi
    270b:	85 c0                	test   %eax,%eax
    270d:	0f 85 e0 00 00 00    	jne    27f3 <mfs_sync+0x103>
    2713:	83 ec 0c             	sub    $0xc,%esp
    2716:	8b 5d e0             	mov    -0x20(%ebp),%ebx
    2719:	68 6c ad 00 00       	push   $0xad6c
    271e:	e8 9d 69 00 00       	call   90c0 <fibril_mutex_lock@plt>
    2723:	8b 03                	mov    (%ebx),%eax
    2725:	59                   	pop    %ecx
    2726:	89 45 e0             	mov    %eax,-0x20(%ebp)
    2729:	8b 45 0c             	mov    0xc(%ebp),%eax
    272c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    272f:	58                   	pop    %eax
    2730:	57                   	push   %edi
    2731:	68 e4 ae 00 00       	push   $0xaee4
    2736:	e8 d5 68 00 00       	call   9010 <hash_table_find@plt>
    273b:	83 c4 10             	add    $0x10,%esp
    273e:	85 c0                	test   %eax,%eax
    2740:	0f 84 ba 00 00 00    	je     2800 <mfs_sync+0x110>
    2746:	8b 78 fc             	mov    -0x4(%eax),%edi
    2749:	83 e8 10             	sub    $0x10,%eax
    274c:	83 ec 0c             	sub    $0xc,%esp
    274f:	8b 50 08             	mov    0x8(%eax),%edx
    2752:	42                   	inc    %edx
    2753:	89 50 08             	mov    %edx,0x8(%eax)
    2756:	68 6c ad 00 00       	push   $0xad6c
    275b:	e8 80 67 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    2760:	83 c4 10             	add    $0x10,%esp
    2763:	85 ff                	test   %edi,%edi
    2765:	0f 84 93 01 00 00    	je     28fe <mfs_sync+0x20e>
    276b:	8b 5f 10             	mov    0x10(%edi),%ebx
    276e:	83 ec 0c             	sub    $0xc,%esp
    2771:	8b 03                	mov    (%ebx),%eax
    2773:	c6 40 40 01          	movb   $0x1,0x40(%eax)
    2777:	68 6c ad 00 00       	push   $0xad6c
    277c:	e8 3f 69 00 00       	call   90c0 <fibril_mutex_lock@plt>
    2781:	8b 43 08             	mov    0x8(%ebx),%eax
    2784:	83 c4 10             	add    $0x10,%esp
    2787:	85 c0                	test   %eax,%eax
    2789:	0f 84 45 01 00 00    	je     28d4 <mfs_sync+0x1e4>
    278f:	48                   	dec    %eax
    2790:	89 43 08             	mov    %eax,0x8(%ebx)
    2793:	85 c0                	test   %eax,%eax
    2795:	75 4c                	jne    27e3 <mfs_sync+0xf3>
    2797:	8d 43 10             	lea    0x10(%ebx),%eax
    279a:	56                   	push   %esi
    279b:	56                   	push   %esi
    279c:	50                   	push   %eax
    279d:	68 e4 ae 00 00       	push   $0xaee4
    27a2:	e8 b9 67 00 00       	call   8f60 <hash_table_remove_item@plt>
    27a7:	8b 53 04             	mov    0x4(%ebx),%edx
    27aa:	83 c4 10             	add    $0x10,%esp
    27ad:	8b 42 08             	mov    0x8(%edx),%eax
    27b0:	85 c0                	test   %eax,%eax
    27b2:	0f 84 31 01 00 00    	je     28e9 <mfs_sync+0x1f9>
    27b8:	83 ec 0c             	sub    $0xc,%esp
    27bb:	48                   	dec    %eax
    27bc:	89 42 08             	mov    %eax,0x8(%edx)
    27bf:	53                   	push   %ebx
    27c0:	e8 5b 16 00 00       	call   3e20 <mfs_put_inode>
    27c5:	8b 13                	mov    (%ebx),%edx
    27c7:	89 c6                	mov    %eax,%esi
    27c9:	58                   	pop    %eax
    27ca:	52                   	push   %edx
    27cb:	e8 e0 68 00 00       	call   90b0 <free@plt>
    27d0:	89 1c 24             	mov    %ebx,(%esp)
    27d3:	e8 d8 68 00 00       	call   90b0 <free@plt>
    27d8:	89 3c 24             	mov    %edi,(%esp)
    27db:	e8 d0 68 00 00       	call   90b0 <free@plt>
    27e0:	83 c4 10             	add    $0x10,%esp
    27e3:	83 ec 0c             	sub    $0xc,%esp
    27e6:	68 6c ad 00 00       	push   $0xad6c
    27eb:	e8 f0 66 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    27f0:	83 c4 10             	add    $0x10,%esp
    27f3:	8d 65 f4             	lea    -0xc(%ebp),%esp
    27f6:	89 f0                	mov    %esi,%eax
    27f8:	5b                   	pop    %ebx
    27f9:	5e                   	pop    %esi
    27fa:	5f                   	pop    %edi
    27fb:	5d                   	pop    %ebp
    27fc:	c3                   	ret    
    27fd:	8d 76 00             	lea    0x0(%esi),%esi
    2800:	83 ec 0c             	sub    $0xc,%esp
    2803:	6a 14                	push   $0x14
    2805:	e8 e6 65 00 00       	call   8df0 <malloc@plt>
    280a:	83 c4 10             	add    $0x10,%esp
    280d:	89 c7                	mov    %eax,%edi
    280f:	85 c0                	test   %eax,%eax
    2811:	74 71                	je     2884 <mfs_sync+0x194>
    2813:	83 ec 0c             	sub    $0xc,%esp
    2816:	50                   	push   %eax
    2817:	e8 84 5c 00 00       	call   84a0 <fs_node_initialize>
    281c:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)
    2823:	e8 c8 65 00 00       	call   8df0 <malloc@plt>
    2828:	83 c4 10             	add    $0x10,%esp
    282b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    282e:	85 c0                	test   %eax,%eax
    2830:	74 46                	je     2878 <mfs_sync+0x188>
    2832:	50                   	push   %eax
    2833:	8b 45 0c             	mov    0xc(%ebp),%eax
    2836:	50                   	push   %eax
    2837:	8d 45 dc             	lea    -0x24(%ebp),%eax
    283a:	50                   	push   %eax
    283b:	53                   	push   %ebx
    283c:	e8 af 12 00 00       	call   3af0 <mfs_get_inode>
    2841:	83 c4 10             	add    $0x10,%esp
    2844:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    2847:	85 c0                	test   %eax,%eax
    2849:	74 43                	je     288e <mfs_sync+0x19e>
    284b:	83 ec 0c             	sub    $0xc,%esp
    284e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    2851:	89 55 d0             	mov    %edx,-0x30(%ebp)
    2854:	57                   	push   %edi
    2855:	e8 56 68 00 00       	call   90b0 <free@plt>
    285a:	8b 55 d0             	mov    -0x30(%ebp),%edx
    285d:	89 14 24             	mov    %edx,(%esp)
    2860:	e8 4b 68 00 00       	call   90b0 <free@plt>
    2865:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    2868:	83 c4 10             	add    $0x10,%esp
    286b:	89 c6                	mov    %eax,%esi
    286d:	e9 71 ff ff ff       	jmp    27e3 <mfs_sync+0xf3>
    2872:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2878:	83 ec 0c             	sub    $0xc,%esp
    287b:	57                   	push   %edi
    287c:	e8 2f 68 00 00       	call   90b0 <free@plt>
    2881:	83 c4 10             	add    $0x10,%esp
    2884:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    2889:	e9 55 ff ff ff       	jmp    27e3 <mfs_sync+0xf3>
    288e:	8b 45 dc             	mov    -0x24(%ebp),%eax
    2891:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    2894:	89 48 44             	mov    %ecx,0x44(%eax)
    2897:	89 02                	mov    %eax,(%edx)
    2899:	c7 42 08 01 00 00 00 	movl   $0x1,0x8(%edx)
    28a0:	89 5a 04             	mov    %ebx,0x4(%edx)
    28a3:	89 7a 0c             	mov    %edi,0xc(%edx)
    28a6:	89 57 10             	mov    %edx,0x10(%edi)
    28a9:	83 c2 10             	add    $0x10,%edx
    28ac:	50                   	push   %eax
    28ad:	50                   	push   %eax
    28ae:	52                   	push   %edx
    28af:	68 e4 ae 00 00       	push   $0xaee4
    28b4:	e8 97 64 00 00       	call   8d50 <hash_table_insert@plt>
    28b9:	8b 43 08             	mov    0x8(%ebx),%eax
    28bc:	40                   	inc    %eax
    28bd:	89 43 08             	mov    %eax,0x8(%ebx)
    28c0:	c7 04 24 6c ad 00 00 	movl   $0xad6c,(%esp)
    28c7:	e8 14 66 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    28cc:	83 c4 10             	add    $0x10,%esp
    28cf:	e9 97 fe ff ff       	jmp    276b <mfs_sync+0x7b>
    28d4:	57                   	push   %edi
    28d5:	68 f6 01 00 00       	push   $0x1f6
    28da:	68 c4 87 00 00       	push   $0x87c4
    28df:	68 ce 87 00 00       	push   $0x87ce
    28e4:	e8 c7 65 00 00       	call   8eb0 <assert_abort@plt>
    28e9:	51                   	push   %ecx
    28ea:	68 fa 01 00 00       	push   $0x1fa
    28ef:	68 c4 87 00 00       	push   $0x87c4
    28f4:	68 0c 88 00 00       	push   $0x880c
    28f9:	e8 b2 65 00 00       	call   8eb0 <assert_abort@plt>
    28fe:	83 ce ff             	or     $0xffffffff,%esi
    2901:	e9 ed fe ff ff       	jmp    27f3 <mfs_sync+0x103>
    2906:	8d 76 00             	lea    0x0(%esi),%esi
    2909:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00002910 <mfs_destroy>:
    2910:	55                   	push   %ebp
    2911:	89 e5                	mov    %esp,%ebp
    2913:	57                   	push   %edi
    2914:	56                   	push   %esi
    2915:	53                   	push   %ebx
    2916:	83 ec 70             	sub    $0x70,%esp
    2919:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%ebp)
    2920:	8b 45 0c             	mov    0xc(%ebp),%eax
    2923:	50                   	push   %eax
    2924:	8b 45 08             	mov    0x8(%ebp),%eax
    2927:	50                   	push   %eax
    2928:	8d 45 98             	lea    -0x68(%ebp),%eax
    292b:	50                   	push   %eax
    292c:	e8 3f f2 ff ff       	call   1b70 <mfs_node_get>
    2931:	83 c4 10             	add    $0x10,%esp
    2934:	89 c6                	mov    %eax,%esi
    2936:	85 c0                	test   %eax,%eax
    2938:	0f 85 d4 00 00 00    	jne    2a12 <mfs_destroy+0x102>
    293e:	8b 45 98             	mov    -0x68(%ebp),%eax
    2941:	89 45 94             	mov    %eax,-0x6c(%ebp)
    2944:	85 c0                	test   %eax,%eax
    2946:	0f 84 49 01 00 00    	je     2a95 <mfs_destroy+0x185>
    294c:	8b 78 10             	mov    0x10(%eax),%edi
    294f:	8b 17                	mov    (%edi),%edx
    2951:	8b 02                	mov    (%edx),%eax
    2953:	25 00 f0 ff ff       	and    $0xfffff000,%eax
    2958:	66 3d 00 40          	cmp    $0x4000,%ax
    295c:	0f 84 be 00 00 00    	je     2a20 <mfs_destroy+0x110>
    2962:	8b 4a 08             	mov    0x8(%edx),%ecx
    2965:	50                   	push   %eax
    2966:	50                   	push   %eax
    2967:	51                   	push   %ecx
    2968:	57                   	push   %edi
    2969:	e8 62 17 00 00       	call   40d0 <mfs_inode_shrink>
    296e:	83 c4 10             	add    $0x10,%esp
    2971:	89 c6                	mov    %eax,%esi
    2973:	85 c0                	test   %eax,%eax
    2975:	75 16                	jne    298d <mfs_destroy+0x7d>
    2977:	50                   	push   %eax
    2978:	50                   	push   %eax
    2979:	8b 07                	mov    (%edi),%eax
    297b:	8b 4f 04             	mov    0x4(%edi),%ecx
    297e:	8b 50 44             	mov    0x44(%eax),%edx
    2981:	52                   	push   %edx
    2982:	51                   	push   %ecx
    2983:	e8 98 2c 00 00       	call   5620 <mfs_free_inode>
    2988:	83 c4 10             	add    $0x10,%esp
    298b:	89 c6                	mov    %eax,%esi
    298d:	8b 45 94             	mov    -0x6c(%ebp),%eax
    2990:	83 ec 0c             	sub    $0xc,%esp
    2993:	8b 58 10             	mov    0x10(%eax),%ebx
    2996:	68 6c ad 00 00       	push   $0xad6c
    299b:	e8 20 67 00 00       	call   90c0 <fibril_mutex_lock@plt>
    29a0:	83 c4 10             	add    $0x10,%esp
    29a3:	8b 43 08             	mov    0x8(%ebx),%eax
    29a6:	85 c0                	test   %eax,%eax
    29a8:	0f 84 04 01 00 00    	je     2ab2 <mfs_destroy+0x1a2>
    29ae:	48                   	dec    %eax
    29af:	89 43 08             	mov    %eax,0x8(%ebx)
    29b2:	85 c0                	test   %eax,%eax
    29b4:	75 4c                	jne    2a02 <mfs_destroy+0xf2>
    29b6:	50                   	push   %eax
    29b7:	50                   	push   %eax
    29b8:	8d 43 10             	lea    0x10(%ebx),%eax
    29bb:	50                   	push   %eax
    29bc:	68 e4 ae 00 00       	push   $0xaee4
    29c1:	e8 9a 65 00 00       	call   8f60 <hash_table_remove_item@plt>
    29c6:	8b 4b 04             	mov    0x4(%ebx),%ecx
    29c9:	8b 41 08             	mov    0x8(%ecx),%eax
    29cc:	83 c4 10             	add    $0x10,%esp
    29cf:	85 c0                	test   %eax,%eax
    29d1:	0f 84 c6 00 00 00    	je     2a9d <mfs_destroy+0x18d>
    29d7:	83 ec 0c             	sub    $0xc,%esp
    29da:	48                   	dec    %eax
    29db:	89 41 08             	mov    %eax,0x8(%ecx)
    29de:	53                   	push   %ebx
    29df:	e8 3c 14 00 00       	call   3e20 <mfs_put_inode>
    29e4:	8b 3b                	mov    (%ebx),%edi
    29e6:	59                   	pop    %ecx
    29e7:	57                   	push   %edi
    29e8:	e8 c3 66 00 00       	call   90b0 <free@plt>
    29ed:	89 1c 24             	mov    %ebx,(%esp)
    29f0:	e8 bb 66 00 00       	call   90b0 <free@plt>
    29f5:	58                   	pop    %eax
    29f6:	8b 45 94             	mov    -0x6c(%ebp),%eax
    29f9:	50                   	push   %eax
    29fa:	e8 b1 66 00 00       	call   90b0 <free@plt>
    29ff:	83 c4 10             	add    $0x10,%esp
    2a02:	83 ec 0c             	sub    $0xc,%esp
    2a05:	68 6c ad 00 00       	push   $0xad6c
    2a0a:	e8 d1 64 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    2a0f:	83 c4 10             	add    $0x10,%esp
    2a12:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2a15:	89 f0                	mov    %esi,%eax
    2a17:	5b                   	pop    %ebx
    2a18:	5e                   	pop    %esi
    2a19:	5f                   	pop    %edi
    2a1a:	5d                   	pop    %ebp
    2a1b:	c3                   	ret    
    2a1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2a20:	8b 47 04             	mov    0x4(%edi),%eax
    2a23:	8b 4a 08             	mov    0x8(%edx),%ecx
    2a26:	31 d2                	xor    %edx,%edx
    2a28:	8b 40 04             	mov    0x4(%eax),%eax
    2a2b:	89 c6                	mov    %eax,%esi
    2a2d:	89 c8                	mov    %ecx,%eax
    2a2f:	f7 76 30             	divl   0x30(%esi)
    2a32:	83 f8 02             	cmp    $0x2,%eax
    2a35:	0f 86 2a ff ff ff    	jbe    2965 <mfs_destroy+0x55>
    2a3b:	bb 02 00 00 00       	mov    $0x2,%ebx
    2a40:	eb 22                	jmp    2a64 <mfs_destroy+0x154>
    2a42:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2a48:	8b 45 9c             	mov    -0x64(%ebp),%eax
    2a4b:	85 c0                	test   %eax,%eax
    2a4d:	75 31                	jne    2a80 <mfs_destroy+0x170>
    2a4f:	8b 07                	mov    (%edi),%eax
    2a51:	31 d2                	xor    %edx,%edx
    2a53:	43                   	inc    %ebx
    2a54:	8b 48 08             	mov    0x8(%eax),%ecx
    2a57:	89 c8                	mov    %ecx,%eax
    2a59:	f7 76 30             	divl   0x30(%esi)
    2a5c:	39 c3                	cmp    %eax,%ebx
    2a5e:	0f 83 01 ff ff ff    	jae    2965 <mfs_destroy+0x55>
    2a64:	50                   	push   %eax
    2a65:	8d 45 9c             	lea    -0x64(%ebp),%eax
    2a68:	53                   	push   %ebx
    2a69:	50                   	push   %eax
    2a6a:	57                   	push   %edi
    2a6b:	e8 10 20 00 00       	call   4a80 <mfs_read_dentry>
    2a70:	83 c4 10             	add    $0x10,%esp
    2a73:	85 c0                	test   %eax,%eax
    2a75:	74 d1                	je     2a48 <mfs_destroy+0x138>
    2a77:	89 c6                	mov    %eax,%esi
    2a79:	e9 0f ff ff ff       	jmp    298d <mfs_destroy+0x7d>
    2a7e:	66 90                	xchg   %ax,%ax
    2a80:	52                   	push   %edx
    2a81:	68 e2 03 00 00       	push   $0x3e2
    2a86:	68 c4 87 00 00       	push   $0x87c4
    2a8b:	68 fd 87 00 00       	push   $0x87fd
    2a90:	e8 1b 64 00 00       	call   8eb0 <assert_abort@plt>
    2a95:	83 ce ff             	or     $0xffffffff,%esi
    2a98:	e9 75 ff ff ff       	jmp    2a12 <mfs_destroy+0x102>
    2a9d:	50                   	push   %eax
    2a9e:	68 fa 01 00 00       	push   $0x1fa
    2aa3:	68 c4 87 00 00       	push   $0x87c4
    2aa8:	68 0c 88 00 00       	push   $0x880c
    2aad:	e8 fe 63 00 00       	call   8eb0 <assert_abort@plt>
    2ab2:	50                   	push   %eax
    2ab3:	68 f6 01 00 00       	push   $0x1f6
    2ab8:	68 c4 87 00 00       	push   $0x87c4
    2abd:	68 ce 87 00 00       	push   $0x87ce
    2ac2:	e8 e9 63 00 00       	call   8eb0 <assert_abort@plt>
    2ac7:	89 f6                	mov    %esi,%esi
    2ac9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00002ad0 <mfs_truncate>:
    2ad0:	55                   	push   %ebp
    2ad1:	89 e5                	mov    %esp,%ebp
    2ad3:	57                   	push   %edi
    2ad4:	56                   	push   %esi
    2ad5:	53                   	push   %ebx
    2ad6:	83 ec 34             	sub    $0x34,%esp
    2ad9:	8d 75 e0             	lea    -0x20(%ebp),%esi
    2adc:	8b 45 10             	mov    0x10(%ebp),%eax
    2adf:	8b 4d 08             	mov    0x8(%ebp),%ecx
    2ae2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    2ae5:	8b 45 14             	mov    0x14(%ebp),%eax
    2ae8:	56                   	push   %esi
    2ae9:	89 45 d0             	mov    %eax,-0x30(%ebp)
    2aec:	51                   	push   %ecx
    2aed:	e8 ce 5a 00 00       	call   85c0 <fs_instance_get>
    2af2:	83 c4 10             	add    $0x10,%esp
    2af5:	89 c3                	mov    %eax,%ebx
    2af7:	85 c0                	test   %eax,%eax
    2af9:	0f 85 04 01 00 00    	jne    2c03 <mfs_truncate+0x133>
    2aff:	83 ec 0c             	sub    $0xc,%esp
    2b02:	8b 7d e0             	mov    -0x20(%ebp),%edi
    2b05:	68 6c ad 00 00       	push   $0xad6c
    2b0a:	e8 b1 65 00 00       	call   90c0 <fibril_mutex_lock@plt>
    2b0f:	8b 07                	mov    (%edi),%eax
    2b11:	89 45 e0             	mov    %eax,-0x20(%ebp)
    2b14:	8b 45 0c             	mov    0xc(%ebp),%eax
    2b17:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    2b1a:	58                   	pop    %eax
    2b1b:	5a                   	pop    %edx
    2b1c:	56                   	push   %esi
    2b1d:	68 e4 ae 00 00       	push   $0xaee4
    2b22:	e8 e9 64 00 00       	call   9010 <hash_table_find@plt>
    2b27:	83 c4 10             	add    $0x10,%esp
    2b2a:	85 c0                	test   %eax,%eax
    2b2c:	0f 84 de 00 00 00    	je     2c10 <mfs_truncate+0x140>
    2b32:	8b 70 fc             	mov    -0x4(%eax),%esi
    2b35:	83 e8 10             	sub    $0x10,%eax
    2b38:	83 ec 0c             	sub    $0xc,%esp
    2b3b:	8b 48 08             	mov    0x8(%eax),%ecx
    2b3e:	41                   	inc    %ecx
    2b3f:	89 48 08             	mov    %ecx,0x8(%eax)
    2b42:	68 6c ad 00 00       	push   $0xad6c
    2b47:	e8 94 63 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    2b4c:	83 c4 10             	add    $0x10,%esp
    2b4f:	85 f6                	test   %esi,%esi
    2b51:	0f 84 ac 00 00 00    	je     2c03 <mfs_truncate+0x133>
    2b57:	8b 7e 10             	mov    0x10(%esi),%edi
    2b5a:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    2b5d:	89 ca                	mov    %ecx,%edx
    2b5f:	8b 07                	mov    (%edi),%eax
    2b61:	8b 40 08             	mov    0x8(%eax),%eax
    2b64:	31 c2                	xor    %eax,%edx
    2b66:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    2b69:	8b 45 d0             	mov    -0x30(%ebp),%eax
    2b6c:	09 d0                	or     %edx,%eax
    2b6e:	74 16                	je     2b86 <mfs_truncate+0xb6>
    2b70:	50                   	push   %eax
    2b71:	50                   	push   %eax
    2b72:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    2b75:	29 c8                	sub    %ecx,%eax
    2b77:	50                   	push   %eax
    2b78:	57                   	push   %edi
    2b79:	e8 52 15 00 00       	call   40d0 <mfs_inode_shrink>
    2b7e:	8b 7e 10             	mov    0x10(%esi),%edi
    2b81:	89 c3                	mov    %eax,%ebx
    2b83:	83 c4 10             	add    $0x10,%esp
    2b86:	83 ec 0c             	sub    $0xc,%esp
    2b89:	68 6c ad 00 00       	push   $0xad6c
    2b8e:	e8 2d 65 00 00       	call   90c0 <fibril_mutex_lock@plt>
    2b93:	8b 47 08             	mov    0x8(%edi),%eax
    2b96:	83 c4 10             	add    $0x10,%esp
    2b99:	85 c0                	test   %eax,%eax
    2b9b:	0f 84 43 01 00 00    	je     2ce4 <mfs_truncate+0x214>
    2ba1:	48                   	dec    %eax
    2ba2:	89 47 08             	mov    %eax,0x8(%edi)
    2ba5:	85 c0                	test   %eax,%eax
    2ba7:	75 4a                	jne    2bf3 <mfs_truncate+0x123>
    2ba9:	50                   	push   %eax
    2baa:	50                   	push   %eax
    2bab:	8d 47 10             	lea    0x10(%edi),%eax
    2bae:	50                   	push   %eax
    2baf:	68 e4 ae 00 00       	push   $0xaee4
    2bb4:	e8 a7 63 00 00       	call   8f60 <hash_table_remove_item@plt>
    2bb9:	8b 57 04             	mov    0x4(%edi),%edx
    2bbc:	8b 42 08             	mov    0x8(%edx),%eax
    2bbf:	83 c4 10             	add    $0x10,%esp
    2bc2:	85 c0                	test   %eax,%eax
    2bc4:	0f 84 2f 01 00 00    	je     2cf9 <mfs_truncate+0x229>
    2bca:	83 ec 0c             	sub    $0xc,%esp
    2bcd:	48                   	dec    %eax
    2bce:	89 42 08             	mov    %eax,0x8(%edx)
    2bd1:	57                   	push   %edi
    2bd2:	e8 49 12 00 00       	call   3e20 <mfs_put_inode>
    2bd7:	8b 17                	mov    (%edi),%edx
    2bd9:	58                   	pop    %eax
    2bda:	52                   	push   %edx
    2bdb:	e8 d0 64 00 00       	call   90b0 <free@plt>
    2be0:	89 3c 24             	mov    %edi,(%esp)
    2be3:	e8 c8 64 00 00       	call   90b0 <free@plt>
    2be8:	89 34 24             	mov    %esi,(%esp)
    2beb:	e8 c0 64 00 00       	call   90b0 <free@plt>
    2bf0:	83 c4 10             	add    $0x10,%esp
    2bf3:	83 ec 0c             	sub    $0xc,%esp
    2bf6:	68 6c ad 00 00       	push   $0xad6c
    2bfb:	e8 e0 62 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    2c00:	83 c4 10             	add    $0x10,%esp
    2c03:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2c06:	89 d8                	mov    %ebx,%eax
    2c08:	5b                   	pop    %ebx
    2c09:	5e                   	pop    %esi
    2c0a:	5f                   	pop    %edi
    2c0b:	5d                   	pop    %ebp
    2c0c:	c3                   	ret    
    2c0d:	8d 76 00             	lea    0x0(%esi),%esi
    2c10:	83 ec 0c             	sub    $0xc,%esp
    2c13:	6a 14                	push   $0x14
    2c15:	e8 d6 61 00 00       	call   8df0 <malloc@plt>
    2c1a:	83 c4 10             	add    $0x10,%esp
    2c1d:	89 c6                	mov    %eax,%esi
    2c1f:	85 c0                	test   %eax,%eax
    2c21:	74 71                	je     2c94 <mfs_truncate+0x1c4>
    2c23:	83 ec 0c             	sub    $0xc,%esp
    2c26:	50                   	push   %eax
    2c27:	e8 74 58 00 00       	call   84a0 <fs_node_initialize>
    2c2c:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)
    2c33:	e8 b8 61 00 00       	call   8df0 <malloc@plt>
    2c38:	83 c4 10             	add    $0x10,%esp
    2c3b:	89 45 cc             	mov    %eax,-0x34(%ebp)
    2c3e:	85 c0                	test   %eax,%eax
    2c40:	74 46                	je     2c88 <mfs_truncate+0x1b8>
    2c42:	8b 55 0c             	mov    0xc(%ebp),%edx
    2c45:	50                   	push   %eax
    2c46:	8d 45 dc             	lea    -0x24(%ebp),%eax
    2c49:	52                   	push   %edx
    2c4a:	50                   	push   %eax
    2c4b:	57                   	push   %edi
    2c4c:	e8 9f 0e 00 00       	call   3af0 <mfs_get_inode>
    2c51:	83 c4 10             	add    $0x10,%esp
    2c54:	8b 55 cc             	mov    -0x34(%ebp),%edx
    2c57:	85 c0                	test   %eax,%eax
    2c59:	74 43                	je     2c9e <mfs_truncate+0x1ce>
    2c5b:	83 ec 0c             	sub    $0xc,%esp
    2c5e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    2c61:	89 55 d0             	mov    %edx,-0x30(%ebp)
    2c64:	56                   	push   %esi
    2c65:	e8 46 64 00 00       	call   90b0 <free@plt>
    2c6a:	8b 55 d0             	mov    -0x30(%ebp),%edx
    2c6d:	89 14 24             	mov    %edx,(%esp)
    2c70:	e8 3b 64 00 00       	call   90b0 <free@plt>
    2c75:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    2c78:	83 c4 10             	add    $0x10,%esp
    2c7b:	89 c3                	mov    %eax,%ebx
    2c7d:	e9 71 ff ff ff       	jmp    2bf3 <mfs_truncate+0x123>
    2c82:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2c88:	83 ec 0c             	sub    $0xc,%esp
    2c8b:	56                   	push   %esi
    2c8c:	e8 1f 64 00 00       	call   90b0 <free@plt>
    2c91:	83 c4 10             	add    $0x10,%esp
    2c94:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx
    2c99:	e9 55 ff ff ff       	jmp    2bf3 <mfs_truncate+0x123>
    2c9e:	8b 45 dc             	mov    -0x24(%ebp),%eax
    2ca1:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    2ca4:	89 48 44             	mov    %ecx,0x44(%eax)
    2ca7:	89 02                	mov    %eax,(%edx)
    2ca9:	c7 42 08 01 00 00 00 	movl   $0x1,0x8(%edx)
    2cb0:	89 7a 04             	mov    %edi,0x4(%edx)
    2cb3:	89 72 0c             	mov    %esi,0xc(%edx)
    2cb6:	89 56 10             	mov    %edx,0x10(%esi)
    2cb9:	83 c2 10             	add    $0x10,%edx
    2cbc:	50                   	push   %eax
    2cbd:	50                   	push   %eax
    2cbe:	52                   	push   %edx
    2cbf:	68 e4 ae 00 00       	push   $0xaee4
    2cc4:	e8 87 60 00 00       	call   8d50 <hash_table_insert@plt>
    2cc9:	8b 47 08             	mov    0x8(%edi),%eax
    2ccc:	40                   	inc    %eax
    2ccd:	89 47 08             	mov    %eax,0x8(%edi)
    2cd0:	c7 04 24 6c ad 00 00 	movl   $0xad6c,(%esp)
    2cd7:	e8 04 62 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    2cdc:	83 c4 10             	add    $0x10,%esp
    2cdf:	e9 73 fe ff ff       	jmp    2b57 <mfs_truncate+0x87>
    2ce4:	50                   	push   %eax
    2ce5:	68 f6 01 00 00       	push   $0x1f6
    2cea:	68 c4 87 00 00       	push   $0x87c4
    2cef:	68 ce 87 00 00       	push   $0x87ce
    2cf4:	e8 b7 61 00 00       	call   8eb0 <assert_abort@plt>
    2cf9:	51                   	push   %ecx
    2cfa:	68 fa 01 00 00       	push   $0x1fa
    2cff:	68 c4 87 00 00       	push   $0x87c4
    2d04:	68 0c 88 00 00       	push   $0x880c
    2d09:	e8 a2 61 00 00       	call   8eb0 <assert_abort@plt>
    2d0e:	66 90                	xchg   %ax,%ax

00002d10 <mfs_write>:
    2d10:	55                   	push   %ebp
    2d11:	89 e5                	mov    %esp,%ebp
    2d13:	57                   	push   %edi
    2d14:	56                   	push   %esi
    2d15:	53                   	push   %ebx
    2d16:	83 ec 74             	sub    $0x74,%esp
    2d19:	8d 5d e0             	lea    -0x20(%ebp),%ebx
    2d1c:	8b 45 10             	mov    0x10(%ebp),%eax
    2d1f:	8b 55 14             	mov    0x14(%ebp),%edx
    2d22:	8b 7d 08             	mov    0x8(%ebp),%edi
    2d25:	53                   	push   %ebx
    2d26:	89 45 c0             	mov    %eax,-0x40(%ebp)
    2d29:	57                   	push   %edi
    2d2a:	89 55 c4             	mov    %edx,-0x3c(%ebp)
    2d2d:	e8 8e 58 00 00       	call   85c0 <fs_instance_get>
    2d32:	83 c4 10             	add    $0x10,%esp
    2d35:	89 c6                	mov    %eax,%esi
    2d37:	85 c0                	test   %eax,%eax
    2d39:	0f 85 d5 01 00 00    	jne    2f14 <mfs_write+0x204>
    2d3f:	83 ec 0c             	sub    $0xc,%esp
    2d42:	8b 7d e0             	mov    -0x20(%ebp),%edi
    2d45:	89 7d bc             	mov    %edi,-0x44(%ebp)
    2d48:	68 6c ad 00 00       	push   $0xad6c
    2d4d:	e8 6e 63 00 00       	call   90c0 <fibril_mutex_lock@plt>
    2d52:	8b 07                	mov    (%edi),%eax
    2d54:	59                   	pop    %ecx
    2d55:	89 45 e0             	mov    %eax,-0x20(%ebp)
    2d58:	8b 45 0c             	mov    0xc(%ebp),%eax
    2d5b:	5e                   	pop    %esi
    2d5c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    2d5f:	53                   	push   %ebx
    2d60:	68 e4 ae 00 00       	push   $0xaee4
    2d65:	e8 a6 62 00 00       	call   9010 <hash_table_find@plt>
    2d6a:	83 c4 10             	add    $0x10,%esp
    2d6d:	85 c0                	test   %eax,%eax
    2d6f:	0f 84 bb 01 00 00    	je     2f30 <mfs_write+0x220>
    2d75:	8b 78 fc             	mov    -0x4(%eax),%edi
    2d78:	83 e8 10             	sub    $0x10,%eax
    2d7b:	83 ec 0c             	sub    $0xc,%esp
    2d7e:	8b 50 08             	mov    0x8(%eax),%edx
    2d81:	42                   	inc    %edx
    2d82:	89 50 08             	mov    %edx,0x8(%eax)
    2d85:	68 6c ad 00 00       	push   $0xad6c
    2d8a:	e8 51 61 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    2d8f:	83 c4 10             	add    $0x10,%esp
    2d92:	85 ff                	test   %edi,%edi
    2d94:	0f 84 7e 04 00 00    	je     3218 <mfs_write+0x508>
    2d9a:	8d 45 d8             	lea    -0x28(%ebp),%eax
    2d9d:	51                   	push   %ecx
    2d9e:	51                   	push   %ecx
    2d9f:	50                   	push   %eax
    2da0:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    2da3:	50                   	push   %eax
    2da4:	e8 f7 62 00 00       	call   90a0 <async_data_write_receive@plt>
    2da9:	83 c4 10             	add    $0x10,%esp
    2dac:	84 c0                	test   %al,%al
    2dae:	0f 84 6c 01 00 00    	je     2f20 <mfs_write+0x210>
    2db4:	8b 4f 10             	mov    0x10(%edi),%ecx
    2db7:	8b 55 c0             	mov    -0x40(%ebp),%edx
    2dba:	89 4d b8             	mov    %ecx,-0x48(%ebp)
    2dbd:	8b 41 04             	mov    0x4(%ecx),%eax
    2dc0:	8b 31                	mov    (%ecx),%esi
    2dc2:	89 75 a4             	mov    %esi,-0x5c(%ebp)
    2dc5:	8b 75 d8             	mov    -0x28(%ebp),%esi
    2dc8:	8b 40 04             	mov    0x4(%eax),%eax
    2dcb:	89 75 b0             	mov    %esi,-0x50(%ebp)
    2dce:	89 45 94             	mov    %eax,-0x6c(%ebp)
    2dd1:	8b 40 18             	mov    0x18(%eax),%eax
    2dd4:	89 45 bc             	mov    %eax,-0x44(%ebp)
    2dd7:	8b 45 c0             	mov    -0x40(%ebp),%eax
    2dda:	89 45 a0             	mov    %eax,-0x60(%ebp)
    2ddd:	50                   	push   %eax
    2dde:	52                   	push   %edx
    2ddf:	8d 55 dc             	lea    -0x24(%ebp),%edx
    2de2:	51                   	push   %ecx
    2de3:	52                   	push   %edx
    2de4:	e8 c7 15 00 00       	call   43b0 <mfs_read_map>
    2de9:	83 c4 10             	add    $0x10,%esp
    2dec:	89 c6                	mov    %eax,%esi
    2dee:	85 c0                	test   %eax,%eax
    2df0:	0f 85 92 00 00 00    	jne    2e88 <mfs_write+0x178>
    2df6:	8b 4d bc             	mov    -0x44(%ebp),%ecx
    2df9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    2dfc:	89 ca                	mov    %ecx,%edx
    2dfe:	31 c9                	xor    %ecx,%ecx
    2e00:	51                   	push   %ecx
    2e01:	52                   	push   %edx
    2e02:	50                   	push   %eax
    2e03:	8b 45 c0             	mov    -0x40(%ebp),%eax
    2e06:	89 4d ac             	mov    %ecx,-0x54(%ebp)
    2e09:	50                   	push   %eax
    2e0a:	89 55 a8             	mov    %edx,-0x58(%ebp)
    2e0d:	e8 3e 60 00 00       	call   8e50 <__umoddi3@plt>
    2e12:	89 45 98             	mov    %eax,-0x68(%ebp)
    2e15:	89 55 9c             	mov    %edx,-0x64(%ebp)
    2e18:	8b 55 a8             	mov    -0x58(%ebp),%edx
    2e1b:	83 c4 10             	add    $0x10,%esp
    2e1e:	2b 55 98             	sub    -0x68(%ebp),%edx
    2e21:	8b 4d ac             	mov    -0x54(%ebp),%ecx
    2e24:	1b 4d 9c             	sbb    -0x64(%ebp),%ecx
    2e27:	8b 75 b0             	mov    -0x50(%ebp),%esi
    2e2a:	89 d0                	mov    %edx,%eax
    2e2c:	89 4d b4             	mov    %ecx,-0x4c(%ebp)
    2e2f:	83 f9 00             	cmp    $0x0,%ecx
    2e32:	89 75 88             	mov    %esi,-0x78(%ebp)
    2e35:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
    2e3c:	89 45 b0             	mov    %eax,-0x50(%ebp)
    2e3f:	8b 4d b8             	mov    -0x48(%ebp),%ecx
    2e42:	0f 86 78 01 00 00    	jbe    2fc0 <mfs_write+0x2b0>
    2e48:	8b 45 88             	mov    -0x78(%ebp),%eax
    2e4b:	8b 55 8c             	mov    -0x74(%ebp),%edx
    2e4e:	89 45 b0             	mov    %eax,-0x50(%ebp)
    2e51:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    2e54:	8b 45 b0             	mov    -0x50(%ebp),%eax
    2e57:	89 45 b8             	mov    %eax,-0x48(%ebp)
    2e5a:	8b 45 dc             	mov    -0x24(%ebp),%eax
    2e5d:	85 c0                	test   %eax,%eax
    2e5f:	0f 85 6b 01 00 00    	jne    2fd0 <mfs_write+0x2c0>
    2e65:	50                   	push   %eax
    2e66:	50                   	push   %eax
    2e67:	8d 45 dc             	lea    -0x24(%ebp),%eax
    2e6a:	89 4d bc             	mov    %ecx,-0x44(%ebp)
    2e6d:	50                   	push   %eax
    2e6e:	8b 41 04             	mov    0x4(%ecx),%eax
    2e71:	50                   	push   %eax
    2e72:	e8 89 28 00 00       	call   5700 <mfs_alloc_zone>
    2e77:	83 c4 10             	add    $0x10,%esp
    2e7a:	89 c6                	mov    %eax,%esi
    2e7c:	85 c0                	test   %eax,%eax
    2e7e:	8b 4d bc             	mov    -0x44(%ebp),%ecx
    2e81:	0f 84 89 02 00 00    	je     3110 <mfs_write+0x400>
    2e87:	90                   	nop
    2e88:	83 ec 0c             	sub    $0xc,%esp
    2e8b:	8b 5f 10             	mov    0x10(%edi),%ebx
    2e8e:	68 6c ad 00 00       	push   $0xad6c
    2e93:	e8 28 62 00 00       	call   90c0 <fibril_mutex_lock@plt>
    2e98:	8b 43 08             	mov    0x8(%ebx),%eax
    2e9b:	83 c4 10             	add    $0x10,%esp
    2e9e:	85 c0                	test   %eax,%eax
    2ea0:	0f 84 da 03 00 00    	je     3280 <mfs_write+0x570>
    2ea6:	48                   	dec    %eax
    2ea7:	89 43 08             	mov    %eax,0x8(%ebx)
    2eaa:	85 c0                	test   %eax,%eax
    2eac:	75 4a                	jne    2ef8 <mfs_write+0x1e8>
    2eae:	50                   	push   %eax
    2eaf:	50                   	push   %eax
    2eb0:	8d 43 10             	lea    0x10(%ebx),%eax
    2eb3:	50                   	push   %eax
    2eb4:	68 e4 ae 00 00       	push   $0xaee4
    2eb9:	e8 a2 60 00 00       	call   8f60 <hash_table_remove_item@plt>
    2ebe:	8b 53 04             	mov    0x4(%ebx),%edx
    2ec1:	8b 42 08             	mov    0x8(%edx),%eax
    2ec4:	83 c4 10             	add    $0x10,%esp
    2ec7:	85 c0                	test   %eax,%eax
    2ec9:	0f 84 c6 03 00 00    	je     3295 <mfs_write+0x585>
    2ecf:	83 ec 0c             	sub    $0xc,%esp
    2ed2:	48                   	dec    %eax
    2ed3:	89 42 08             	mov    %eax,0x8(%edx)
    2ed6:	53                   	push   %ebx
    2ed7:	e8 44 0f 00 00       	call   3e20 <mfs_put_inode>
    2edc:	58                   	pop    %eax
    2edd:	8b 03                	mov    (%ebx),%eax
    2edf:	50                   	push   %eax
    2ee0:	e8 cb 61 00 00       	call   90b0 <free@plt>
    2ee5:	89 1c 24             	mov    %ebx,(%esp)
    2ee8:	e8 c3 61 00 00       	call   90b0 <free@plt>
    2eed:	89 3c 24             	mov    %edi,(%esp)
    2ef0:	e8 bb 61 00 00       	call   90b0 <free@plt>
    2ef5:	83 c4 10             	add    $0x10,%esp
    2ef8:	83 ec 0c             	sub    $0xc,%esp
    2efb:	68 6c ad 00 00       	push   $0xad6c
    2f00:	e8 db 5f 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    2f05:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    2f08:	58                   	pop    %eax
    2f09:	5a                   	pop    %edx
    2f0a:	56                   	push   %esi
    2f0b:	51                   	push   %ecx
    2f0c:	e8 0f 5f 00 00       	call   8e20 <async_answer_0@plt>
    2f11:	83 c4 10             	add    $0x10,%esp
    2f14:	8d 65 f4             	lea    -0xc(%ebp),%esp
    2f17:	89 f0                	mov    %esi,%eax
    2f19:	5b                   	pop    %ebx
    2f1a:	5e                   	pop    %esi
    2f1b:	5f                   	pop    %edi
    2f1c:	5d                   	pop    %ebp
    2f1d:	c3                   	ret    
    2f1e:	66 90                	xchg   %ax,%ax
    2f20:	be f2 ff ff ff       	mov    $0xfffffff2,%esi
    2f25:	e9 5e ff ff ff       	jmp    2e88 <mfs_write+0x178>
    2f2a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2f30:	83 ec 0c             	sub    $0xc,%esp
    2f33:	6a 14                	push   $0x14
    2f35:	e8 b6 5e 00 00       	call   8df0 <malloc@plt>
    2f3a:	83 c4 10             	add    $0x10,%esp
    2f3d:	89 c7                	mov    %eax,%edi
    2f3f:	85 c0                	test   %eax,%eax
    2f41:	0f 84 45 02 00 00    	je     318c <mfs_write+0x47c>
    2f47:	83 ec 0c             	sub    $0xc,%esp
    2f4a:	50                   	push   %eax
    2f4b:	e8 50 55 00 00       	call   84a0 <fs_node_initialize>
    2f50:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)
    2f57:	e8 94 5e 00 00       	call   8df0 <malloc@plt>
    2f5c:	83 c4 10             	add    $0x10,%esp
    2f5f:	89 45 b0             	mov    %eax,-0x50(%ebp)
    2f62:	85 c0                	test   %eax,%eax
    2f64:	0f 84 16 02 00 00    	je     3180 <mfs_write+0x470>
    2f6a:	8b 75 0c             	mov    0xc(%ebp),%esi
    2f6d:	8d 45 dc             	lea    -0x24(%ebp),%eax
    2f70:	51                   	push   %ecx
    2f71:	56                   	push   %esi
    2f72:	50                   	push   %eax
    2f73:	8b 45 bc             	mov    -0x44(%ebp),%eax
    2f76:	50                   	push   %eax
    2f77:	e8 74 0b 00 00       	call   3af0 <mfs_get_inode>
    2f7c:	83 c4 10             	add    $0x10,%esp
    2f7f:	89 c6                	mov    %eax,%esi
    2f81:	85 c0                	test   %eax,%eax
    2f83:	8b 55 b0             	mov    -0x50(%ebp),%edx
    2f86:	0f 84 ab 02 00 00    	je     3237 <mfs_write+0x527>
    2f8c:	83 ec 0c             	sub    $0xc,%esp
    2f8f:	89 55 c0             	mov    %edx,-0x40(%ebp)
    2f92:	57                   	push   %edi
    2f93:	e8 18 61 00 00       	call   90b0 <free@plt>
    2f98:	8b 55 c0             	mov    -0x40(%ebp),%edx
    2f9b:	89 14 24             	mov    %edx,(%esp)
    2f9e:	e8 0d 61 00 00       	call   90b0 <free@plt>
    2fa3:	83 c4 10             	add    $0x10,%esp
    2fa6:	83 ec 0c             	sub    $0xc,%esp
    2fa9:	68 6c ad 00 00       	push   $0xad6c
    2fae:	e8 2d 5f 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    2fb3:	83 c4 10             	add    $0x10,%esp
    2fb6:	e9 59 ff ff ff       	jmp    2f14 <mfs_write+0x204>
    2fbb:	90                   	nop
    2fbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2fc0:	39 f0                	cmp    %esi,%eax
    2fc2:	0f 86 8c fe ff ff    	jbe    2e54 <mfs_write+0x144>
    2fc8:	e9 7b fe ff ff       	jmp    2e48 <mfs_write+0x138>
    2fcd:	8d 76 00             	lea    0x0(%esi),%esi
    2fd0:	8b 55 b8             	mov    -0x48(%ebp),%edx
    2fd3:	83 ec 0c             	sub    $0xc,%esp
    2fd6:	39 55 bc             	cmp    %edx,-0x44(%ebp)
    2fd9:	8b 75 08             	mov    0x8(%ebp),%esi
    2fdc:	0f 94 c2             	sete   %dl
    2fdf:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2fe5:	52                   	push   %edx
    2fe6:	31 d2                	xor    %edx,%edx
    2fe8:	52                   	push   %edx
    2fe9:	50                   	push   %eax
    2fea:	56                   	push   %esi
    2feb:	53                   	push   %ebx
    2fec:	e8 ef 33 00 00       	call   63e0 <block_get>
    2ff1:	83 c4 20             	add    $0x20,%esp
    2ff4:	89 c6                	mov    %eax,%esi
    2ff6:	85 c0                	test   %eax,%eax
    2ff8:	0f 85 8a fe ff ff    	jne    2e88 <mfs_write+0x178>
    2ffe:	8b 55 b8             	mov    -0x48(%ebp),%edx
    3001:	39 55 bc             	cmp    %edx,-0x44(%ebp)
    3004:	0f 84 48 01 00 00    	je     3152 <mfs_write+0x442>
    300a:	50                   	push   %eax
    300b:	8b 45 b8             	mov    -0x48(%ebp),%eax
    300e:	50                   	push   %eax
    300f:	8b 45 e0             	mov    -0x20(%ebp),%eax
    3012:	8b 4d 98             	mov    -0x68(%ebp),%ecx
    3015:	8b 50 58             	mov    0x58(%eax),%edx
    3018:	01 d1                	add    %edx,%ecx
    301a:	51                   	push   %ecx
    301b:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    301e:	51                   	push   %ecx
    301f:	e8 fc 5f 00 00       	call   9020 <async_data_write_finalize@plt>
    3024:	8b 45 e0             	mov    -0x20(%ebp),%eax
    3027:	c6 40 14 01          	movb   $0x1,0x14(%eax)
    302b:	89 04 24             	mov    %eax,(%esp)
    302e:	e8 ad 30 00 00       	call   60e0 <block_put>
    3033:	83 c4 10             	add    $0x10,%esp
    3036:	89 c6                	mov    %eax,%esi
    3038:	85 c0                	test   %eax,%eax
    303a:	0f 85 58 01 00 00    	jne    3198 <mfs_write+0x488>
    3040:	8b 4d c0             	mov    -0x40(%ebp),%ecx
    3043:	8b 5d c4             	mov    -0x3c(%ebp),%ebx
    3046:	03 4d b0             	add    -0x50(%ebp),%ecx
    3049:	8b 45 a4             	mov    -0x5c(%ebp),%eax
    304c:	13 5d b4             	adc    -0x4c(%ebp),%ebx
    304f:	8b 40 08             	mov    0x8(%eax),%eax
    3052:	83 fb 00             	cmp    $0x0,%ebx
    3055:	0f 86 15 01 00 00    	jbe    3170 <mfs_write+0x460>
    305b:	8b 4d a4             	mov    -0x5c(%ebp),%ecx
    305e:	8b 45 a0             	mov    -0x60(%ebp),%eax
    3061:	8b 55 b8             	mov    -0x48(%ebp),%edx
    3064:	01 d0                	add    %edx,%eax
    3066:	c6 41 40 01          	movb   $0x1,0x40(%ecx)
    306a:	89 41 08             	mov    %eax,0x8(%ecx)
    306d:	83 ec 0c             	sub    $0xc,%esp
    3070:	8b 5f 10             	mov    0x10(%edi),%ebx
    3073:	68 6c ad 00 00       	push   $0xad6c
    3078:	e8 43 60 00 00       	call   90c0 <fibril_mutex_lock@plt>
    307d:	8b 43 08             	mov    0x8(%ebx),%eax
    3080:	83 c4 10             	add    $0x10,%esp
    3083:	85 c0                	test   %eax,%eax
    3085:	0f 84 f5 01 00 00    	je     3280 <mfs_write+0x570>
    308b:	48                   	dec    %eax
    308c:	89 43 08             	mov    %eax,0x8(%ebx)
    308f:	85 c0                	test   %eax,%eax
    3091:	75 4c                	jne    30df <mfs_write+0x3cf>
    3093:	50                   	push   %eax
    3094:	50                   	push   %eax
    3095:	8d 43 10             	lea    0x10(%ebx),%eax
    3098:	50                   	push   %eax
    3099:	68 e4 ae 00 00       	push   $0xaee4
    309e:	e8 bd 5e 00 00       	call   8f60 <hash_table_remove_item@plt>
    30a3:	8b 53 04             	mov    0x4(%ebx),%edx
    30a6:	8b 42 08             	mov    0x8(%edx),%eax
    30a9:	83 c4 10             	add    $0x10,%esp
    30ac:	85 c0                	test   %eax,%eax
    30ae:	0f 84 e1 01 00 00    	je     3295 <mfs_write+0x585>
    30b4:	83 ec 0c             	sub    $0xc,%esp
    30b7:	48                   	dec    %eax
    30b8:	89 42 08             	mov    %eax,0x8(%edx)
    30bb:	53                   	push   %ebx
    30bc:	e8 5f 0d 00 00       	call   3e20 <mfs_put_inode>
    30c1:	89 c6                	mov    %eax,%esi
    30c3:	58                   	pop    %eax
    30c4:	8b 03                	mov    (%ebx),%eax
    30c6:	50                   	push   %eax
    30c7:	e8 e4 5f 00 00       	call   90b0 <free@plt>
    30cc:	89 1c 24             	mov    %ebx,(%esp)
    30cf:	e8 dc 5f 00 00       	call   90b0 <free@plt>
    30d4:	89 3c 24             	mov    %edi,(%esp)
    30d7:	e8 d4 5f 00 00       	call   90b0 <free@plt>
    30dc:	83 c4 10             	add    $0x10,%esp
    30df:	83 ec 0c             	sub    $0xc,%esp
    30e2:	68 6c ad 00 00       	push   $0xad6c
    30e7:	e8 f4 5d 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    30ec:	8b 4d a4             	mov    -0x5c(%ebp),%ecx
    30ef:	8b 45 1c             	mov    0x1c(%ebp),%eax
    30f2:	83 c4 10             	add    $0x10,%esp
    30f5:	8b 49 08             	mov    0x8(%ecx),%ecx
    30f8:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
    30ff:	89 08                	mov    %ecx,(%eax)
    3101:	8b 45 18             	mov    0x18(%ebp),%eax
    3104:	8b 4d b8             	mov    -0x48(%ebp),%ecx
    3107:	89 08                	mov    %ecx,(%eax)
    3109:	e9 06 fe ff ff       	jmp    2f14 <mfs_write+0x204>
    310e:	66 90                	xchg   %ax,%ax
    3110:	8b 75 dc             	mov    -0x24(%ebp),%esi
    3113:	8b 45 a0             	mov    -0x60(%ebp),%eax
    3116:	53                   	push   %ebx
    3117:	56                   	push   %esi
    3118:	50                   	push   %eax
    3119:	51                   	push   %ecx
    311a:	e8 21 14 00 00       	call   4540 <mfs_write_map>
    311f:	83 c4 10             	add    $0x10,%esp
    3122:	89 c6                	mov    %eax,%esi
    3124:	85 c0                	test   %eax,%eax
    3126:	8b 4d bc             	mov    -0x44(%ebp),%ecx
    3129:	0f 85 f1 00 00 00    	jne    3220 <mfs_write+0x510>
    312f:	83 ec 0c             	sub    $0xc,%esp
    3132:	8b 45 dc             	mov    -0x24(%ebp),%eax
    3135:	31 d2                	xor    %edx,%edx
    3137:	6a 01                	push   $0x1
    3139:	52                   	push   %edx
    313a:	50                   	push   %eax
    313b:	8b 45 08             	mov    0x8(%ebp),%eax
    313e:	50                   	push   %eax
    313f:	53                   	push   %ebx
    3140:	e8 9b 32 00 00       	call   63e0 <block_get>
    3145:	83 c4 20             	add    $0x20,%esp
    3148:	89 c6                	mov    %eax,%esi
    314a:	85 c0                	test   %eax,%eax
    314c:	0f 85 36 fd ff ff    	jne    2e88 <mfs_write+0x178>
    3152:	50                   	push   %eax
    3153:	8b 45 94             	mov    -0x6c(%ebp),%eax
    3156:	8b 40 18             	mov    0x18(%eax),%eax
    3159:	50                   	push   %eax
    315a:	8b 45 e0             	mov    -0x20(%ebp),%eax
    315d:	6a 00                	push   $0x0
    315f:	8b 40 58             	mov    0x58(%eax),%eax
    3162:	50                   	push   %eax
    3163:	e8 08 5e 00 00       	call   8f70 <memset@plt>
    3168:	83 c4 10             	add    $0x10,%esp
    316b:	e9 9a fe ff ff       	jmp    300a <mfs_write+0x2fa>
    3170:	39 c1                	cmp    %eax,%ecx
    3172:	0f 86 f5 fe ff ff    	jbe    306d <mfs_write+0x35d>
    3178:	e9 de fe ff ff       	jmp    305b <mfs_write+0x34b>
    317d:	8d 76 00             	lea    0x0(%esi),%esi
    3180:	83 ec 0c             	sub    $0xc,%esp
    3183:	57                   	push   %edi
    3184:	e8 27 5f 00 00       	call   90b0 <free@plt>
    3189:	83 c4 10             	add    $0x10,%esp
    318c:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    3191:	e9 10 fe ff ff       	jmp    2fa6 <mfs_write+0x296>
    3196:	66 90                	xchg   %ax,%ax
    3198:	83 ec 0c             	sub    $0xc,%esp
    319b:	8b 5f 10             	mov    0x10(%edi),%ebx
    319e:	68 6c ad 00 00       	push   $0xad6c
    31a3:	e8 18 5f 00 00       	call   90c0 <fibril_mutex_lock@plt>
    31a8:	8b 43 08             	mov    0x8(%ebx),%eax
    31ab:	83 c4 10             	add    $0x10,%esp
    31ae:	85 c0                	test   %eax,%eax
    31b0:	0f 84 ca 00 00 00    	je     3280 <mfs_write+0x570>
    31b6:	48                   	dec    %eax
    31b7:	89 43 08             	mov    %eax,0x8(%ebx)
    31ba:	85 c0                	test   %eax,%eax
    31bc:	0f 85 e4 fd ff ff    	jne    2fa6 <mfs_write+0x296>
    31c2:	50                   	push   %eax
    31c3:	50                   	push   %eax
    31c4:	8d 43 10             	lea    0x10(%ebx),%eax
    31c7:	50                   	push   %eax
    31c8:	68 e4 ae 00 00       	push   $0xaee4
    31cd:	e8 8e 5d 00 00       	call   8f60 <hash_table_remove_item@plt>
    31d2:	8b 53 04             	mov    0x4(%ebx),%edx
    31d5:	8b 42 08             	mov    0x8(%edx),%eax
    31d8:	83 c4 10             	add    $0x10,%esp
    31db:	85 c0                	test   %eax,%eax
    31dd:	0f 84 b2 00 00 00    	je     3295 <mfs_write+0x585>
    31e3:	83 ec 0c             	sub    $0xc,%esp
    31e6:	48                   	dec    %eax
    31e7:	89 42 08             	mov    %eax,0x8(%edx)
    31ea:	53                   	push   %ebx
    31eb:	e8 30 0c 00 00       	call   3e20 <mfs_put_inode>
    31f0:	8b 03                	mov    (%ebx),%eax
    31f2:	59                   	pop    %ecx
    31f3:	50                   	push   %eax
    31f4:	e8 b7 5e 00 00       	call   90b0 <free@plt>
    31f9:	89 1c 24             	mov    %ebx,(%esp)
    31fc:	e8 af 5e 00 00       	call   90b0 <free@plt>
    3201:	89 3c 24             	mov    %edi,(%esp)
    3204:	e8 a7 5e 00 00       	call   90b0 <free@plt>
    3209:	83 c4 10             	add    $0x10,%esp
    320c:	e9 95 fd ff ff       	jmp    2fa6 <mfs_write+0x296>
    3211:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3218:	83 ce ff             	or     $0xffffffff,%esi
    321b:	e9 f4 fc ff ff       	jmp    2f14 <mfs_write+0x204>
    3220:	50                   	push   %eax
    3221:	50                   	push   %eax
    3222:	8b 51 04             	mov    0x4(%ecx),%edx
    3225:	8b 45 dc             	mov    -0x24(%ebp),%eax
    3228:	50                   	push   %eax
    3229:	52                   	push   %edx
    322a:	e8 21 25 00 00       	call   5750 <mfs_free_zone>
    322f:	83 c4 10             	add    $0x10,%esp
    3232:	e9 51 fc ff ff       	jmp    2e88 <mfs_write+0x178>
    3237:	8b 45 dc             	mov    -0x24(%ebp),%eax
    323a:	8b 75 bc             	mov    -0x44(%ebp),%esi
    323d:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    3240:	89 48 44             	mov    %ecx,0x44(%eax)
    3243:	89 02                	mov    %eax,(%edx)
    3245:	c7 42 08 01 00 00 00 	movl   $0x1,0x8(%edx)
    324c:	89 72 04             	mov    %esi,0x4(%edx)
    324f:	89 57 10             	mov    %edx,0x10(%edi)
    3252:	89 7a 0c             	mov    %edi,0xc(%edx)
    3255:	50                   	push   %eax
    3256:	50                   	push   %eax
    3257:	8d 42 10             	lea    0x10(%edx),%eax
    325a:	50                   	push   %eax
    325b:	68 e4 ae 00 00       	push   $0xaee4
    3260:	e8 eb 5a 00 00       	call   8d50 <hash_table_insert@plt>
    3265:	8b 56 08             	mov    0x8(%esi),%edx
    3268:	42                   	inc    %edx
    3269:	89 56 08             	mov    %edx,0x8(%esi)
    326c:	c7 04 24 6c ad 00 00 	movl   $0xad6c,(%esp)
    3273:	e8 68 5c 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    3278:	83 c4 10             	add    $0x10,%esp
    327b:	e9 1a fb ff ff       	jmp    2d9a <mfs_write+0x8a>
    3280:	50                   	push   %eax
    3281:	68 f6 01 00 00       	push   $0x1f6
    3286:	68 c4 87 00 00       	push   $0x87c4
    328b:	68 ce 87 00 00       	push   $0x87ce
    3290:	e8 1b 5c 00 00       	call   8eb0 <assert_abort@plt>
    3295:	50                   	push   %eax
    3296:	68 fa 01 00 00       	push   $0x1fa
    329b:	68 c4 87 00 00       	push   $0x87c4
    32a0:	68 0c 88 00 00       	push   $0x880c
    32a5:	e8 06 5c 00 00       	call   8eb0 <assert_abort@plt>
    32aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000032b0 <mfs_read>:
    32b0:	55                   	push   %ebp
    32b1:	89 e5                	mov    %esp,%ebp
    32b3:	57                   	push   %edi
    32b4:	56                   	push   %esi
    32b5:	53                   	push   %ebx
    32b6:	81 ec 94 00 00 00    	sub    $0x94,%esp
    32bc:	8d 7d 9c             	lea    -0x64(%ebp),%edi
    32bf:	8b 45 10             	mov    0x10(%ebp),%eax
    32c2:	8b 55 14             	mov    0x14(%ebp),%edx
    32c5:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
    32cb:	8b 45 08             	mov    0x8(%ebp),%eax
    32ce:	57                   	push   %edi
    32cf:	89 95 74 ff ff ff    	mov    %edx,-0x8c(%ebp)
    32d5:	50                   	push   %eax
    32d6:	e8 e5 52 00 00       	call   85c0 <fs_instance_get>
    32db:	83 c4 10             	add    $0x10,%esp
    32de:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
    32e4:	85 c0                	test   %eax,%eax
    32e6:	0f 85 5e 01 00 00    	jne    344a <mfs_read+0x19a>
    32ec:	83 ec 0c             	sub    $0xc,%esp
    32ef:	8b 5d 9c             	mov    -0x64(%ebp),%ebx
    32f2:	68 6c ad 00 00       	push   $0xad6c
    32f7:	e8 c4 5d 00 00       	call   90c0 <fibril_mutex_lock@plt>
    32fc:	8b 03                	mov    (%ebx),%eax
    32fe:	59                   	pop    %ecx
    32ff:	89 45 9c             	mov    %eax,-0x64(%ebp)
    3302:	8b 45 0c             	mov    0xc(%ebp),%eax
    3305:	5e                   	pop    %esi
    3306:	89 45 a0             	mov    %eax,-0x60(%ebp)
    3309:	57                   	push   %edi
    330a:	68 e4 ae 00 00       	push   $0xaee4
    330f:	e8 fc 5c 00 00       	call   9010 <hash_table_find@plt>
    3314:	83 c4 10             	add    $0x10,%esp
    3317:	85 c0                	test   %eax,%eax
    3319:	0f 84 11 03 00 00    	je     3630 <mfs_read+0x380>
    331f:	8b 58 fc             	mov    -0x4(%eax),%ebx
    3322:	83 e8 10             	sub    $0x10,%eax
    3325:	83 ec 0c             	sub    $0xc,%esp
    3328:	8b 50 08             	mov    0x8(%eax),%edx
    332b:	42                   	inc    %edx
    332c:	89 9d 78 ff ff ff    	mov    %ebx,-0x88(%ebp)
    3332:	89 50 08             	mov    %edx,0x8(%eax)
    3335:	68 6c ad 00 00       	push   $0xad6c
    333a:	e8 a1 5b 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    333f:	83 c4 10             	add    $0x10,%esp
    3342:	85 db                	test   %ebx,%ebx
    3344:	0f 84 5c 07 00 00    	je     3aa6 <mfs_read+0x7f6>
    334a:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
    3350:	8b 58 10             	mov    0x10(%eax),%ebx
    3353:	8b 33                	mov    (%ebx),%esi
    3355:	50                   	push   %eax
    3356:	50                   	push   %eax
    3357:	8d 45 8c             	lea    -0x74(%ebp),%eax
    335a:	50                   	push   %eax
    335b:	8d 45 90             	lea    -0x70(%ebp),%eax
    335e:	50                   	push   %eax
    335f:	e8 1c 5c 00 00       	call   8f80 <async_data_read_receive@plt>
    3364:	83 c4 10             	add    $0x10,%esp
    3367:	84 c0                	test   %al,%al
    3369:	0f 84 e9 00 00 00    	je     3458 <mfs_read+0x1a8>
    336f:	8b 06                	mov    (%esi),%eax
    3371:	25 00 f0 ff ff       	and    $0xfffff000,%eax
    3376:	66 3d 00 40          	cmp    $0x4000,%ax
    337a:	0f 84 90 03 00 00    	je     3710 <mfs_read+0x460>
    3380:	8b 46 08             	mov    0x8(%esi),%eax
    3383:	31 d2                	xor    %edx,%edx
    3385:	8b bd 74 ff ff ff    	mov    -0x8c(%ebp),%edi
    338b:	89 45 80             	mov    %eax,-0x80(%ebp)
    338e:	89 55 84             	mov    %edx,-0x7c(%ebp)
    3391:	8b b5 70 ff ff ff    	mov    -0x90(%ebp),%esi
    3397:	83 ff 00             	cmp    $0x0,%edi
    339a:	0f 86 78 01 00 00    	jbe    3518 <mfs_read+0x268>
    33a0:	8b 5d 90             	mov    -0x70(%ebp),%ebx
    33a3:	51                   	push   %ecx
    33a4:	6a 00                	push   $0x0
    33a6:	6a 00                	push   $0x0
    33a8:	53                   	push   %ebx
    33a9:	31 db                	xor    %ebx,%ebx
    33ab:	e8 f0 59 00 00       	call   8da0 <async_data_read_finalize@plt>
    33b0:	83 c4 10             	add    $0x10,%esp
    33b3:	8b bd 78 ff ff ff    	mov    -0x88(%ebp),%edi
    33b9:	83 ec 0c             	sub    $0xc,%esp
    33bc:	8b 77 10             	mov    0x10(%edi),%esi
    33bf:	68 6c ad 00 00       	push   $0xad6c
    33c4:	e8 f7 5c 00 00       	call   90c0 <fibril_mutex_lock@plt>
    33c9:	83 c4 10             	add    $0x10,%esp
    33cc:	8b 46 08             	mov    0x8(%esi),%eax
    33cf:	85 c0                	test   %eax,%eax
    33d1:	0f 84 9d 06 00 00    	je     3a74 <mfs_read+0x7c4>
    33d7:	48                   	dec    %eax
    33d8:	89 46 08             	mov    %eax,0x8(%esi)
    33db:	85 c0                	test   %eax,%eax
    33dd:	75 50                	jne    342f <mfs_read+0x17f>
    33df:	8d 46 10             	lea    0x10(%esi),%eax
    33e2:	52                   	push   %edx
    33e3:	52                   	push   %edx
    33e4:	50                   	push   %eax
    33e5:	68 e4 ae 00 00       	push   $0xaee4
    33ea:	e8 71 5b 00 00       	call   8f60 <hash_table_remove_item@plt>
    33ef:	8b 56 04             	mov    0x4(%esi),%edx
    33f2:	83 c4 10             	add    $0x10,%esp
    33f5:	8b 42 08             	mov    0x8(%edx),%eax
    33f8:	85 c0                	test   %eax,%eax
    33fa:	0f 84 89 06 00 00    	je     3a89 <mfs_read+0x7d9>
    3400:	83 ec 0c             	sub    $0xc,%esp
    3403:	48                   	dec    %eax
    3404:	89 42 08             	mov    %eax,0x8(%edx)
    3407:	56                   	push   %esi
    3408:	e8 13 0a 00 00       	call   3e20 <mfs_put_inode>
    340d:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
    3413:	58                   	pop    %eax
    3414:	8b 06                	mov    (%esi),%eax
    3416:	50                   	push   %eax
    3417:	e8 94 5c 00 00       	call   90b0 <free@plt>
    341c:	89 34 24             	mov    %esi,(%esp)
    341f:	e8 8c 5c 00 00       	call   90b0 <free@plt>
    3424:	89 3c 24             	mov    %edi,(%esp)
    3427:	e8 84 5c 00 00       	call   90b0 <free@plt>
    342c:	83 c4 10             	add    $0x10,%esp
    342f:	83 ec 0c             	sub    $0xc,%esp
    3432:	68 6c ad 00 00       	push   $0xad6c
    3437:	e8 a4 5a 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    343c:	8b 45 18             	mov    0x18(%ebp),%eax
    343f:	83 c4 10             	add    $0x10,%esp
    3442:	89 18                	mov    %ebx,(%eax)
    3444:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
    344a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    344d:	5b                   	pop    %ebx
    344e:	5e                   	pop    %esi
    344f:	5f                   	pop    %edi
    3450:	5d                   	pop    %ebp
    3451:	c3                   	ret    
    3452:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3458:	c7 85 7c ff ff ff f2 	movl   $0xfffffff2,-0x84(%ebp)
    345f:	ff ff ff 
    3462:	8b bd 78 ff ff ff    	mov    -0x88(%ebp),%edi
    3468:	83 ec 0c             	sub    $0xc,%esp
    346b:	8b 77 10             	mov    0x10(%edi),%esi
    346e:	68 6c ad 00 00       	push   $0xad6c
    3473:	e8 48 5c 00 00       	call   90c0 <fibril_mutex_lock@plt>
    3478:	83 c4 10             	add    $0x10,%esp
    347b:	8b 46 08             	mov    0x8(%esi),%eax
    347e:	85 c0                	test   %eax,%eax
    3480:	0f 84 ee 05 00 00    	je     3a74 <mfs_read+0x7c4>
    3486:	48                   	dec    %eax
    3487:	89 46 08             	mov    %eax,0x8(%esi)
    348a:	85 c0                	test   %eax,%eax
    348c:	0f 85 36 02 00 00    	jne    36c8 <mfs_read+0x418>
    3492:	50                   	push   %eax
    3493:	50                   	push   %eax
    3494:	8d 46 10             	lea    0x10(%esi),%eax
    3497:	50                   	push   %eax
    3498:	68 e4 ae 00 00       	push   $0xaee4
    349d:	e8 be 5a 00 00       	call   8f60 <hash_table_remove_item@plt>
    34a2:	8b 56 04             	mov    0x4(%esi),%edx
    34a5:	8b 42 08             	mov    0x8(%edx),%eax
    34a8:	83 c4 10             	add    $0x10,%esp
    34ab:	85 c0                	test   %eax,%eax
    34ad:	0f 84 d6 05 00 00    	je     3a89 <mfs_read+0x7d9>
    34b3:	83 ec 0c             	sub    $0xc,%esp
    34b6:	48                   	dec    %eax
    34b7:	89 42 08             	mov    %eax,0x8(%edx)
    34ba:	56                   	push   %esi
    34bb:	e8 60 09 00 00       	call   3e20 <mfs_put_inode>
    34c0:	89 c3                	mov    %eax,%ebx
    34c2:	58                   	pop    %eax
    34c3:	8b 06                	mov    (%esi),%eax
    34c5:	50                   	push   %eax
    34c6:	e8 e5 5b 00 00       	call   90b0 <free@plt>
    34cb:	89 34 24             	mov    %esi,(%esp)
    34ce:	e8 dd 5b 00 00       	call   90b0 <free@plt>
    34d3:	89 3c 24             	mov    %edi,(%esp)
    34d6:	e8 d5 5b 00 00       	call   90b0 <free@plt>
    34db:	c7 04 24 6c ad 00 00 	movl   $0xad6c,(%esp)
    34e2:	e8 f9 59 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    34e7:	83 c4 10             	add    $0x10,%esp
    34ea:	85 db                	test   %ebx,%ebx
    34ec:	0f 84 e6 01 00 00    	je     36d8 <mfs_read+0x428>
    34f2:	8b 45 90             	mov    -0x70(%ebp),%eax
    34f5:	57                   	push   %edi
    34f6:	57                   	push   %edi
    34f7:	53                   	push   %ebx
    34f8:	50                   	push   %eax
    34f9:	e8 22 59 00 00       	call   8e20 <async_answer_0@plt>
    34fe:	89 9d 7c ff ff ff    	mov    %ebx,-0x84(%ebp)
    3504:	83 c4 10             	add    $0x10,%esp
    3507:	8d 65 f4             	lea    -0xc(%ebp),%esp
    350a:	89 d8                	mov    %ebx,%eax
    350c:	5b                   	pop    %ebx
    350d:	5e                   	pop    %esi
    350e:	5f                   	pop    %edi
    350f:	5d                   	pop    %ebp
    3510:	c3                   	ret    
    3511:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3518:	39 c6                	cmp    %eax,%esi
    351a:	0f 83 80 fe ff ff    	jae    33a0 <mfs_read+0xf0>
    3520:	8b 43 04             	mov    0x4(%ebx),%eax
    3523:	8b 95 70 ff ff ff    	mov    -0x90(%ebp),%edx
    3529:	8b 40 04             	mov    0x4(%eax),%eax
    352c:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
    3532:	8b 70 18             	mov    0x18(%eax),%esi
    3535:	8b 45 8c             	mov    -0x74(%ebp),%eax
    3538:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
    353e:	50                   	push   %eax
    353f:	8d 45 94             	lea    -0x6c(%ebp),%eax
    3542:	52                   	push   %edx
    3543:	53                   	push   %ebx
    3544:	50                   	push   %eax
    3545:	e8 66 0e 00 00       	call   43b0 <mfs_read_map>
    354a:	83 c4 10             	add    $0x10,%esp
    354d:	85 c0                	test   %eax,%eax
    354f:	0f 85 ab 01 00 00    	jne    3700 <mfs_read+0x450>
    3555:	89 f7                	mov    %esi,%edi
    3557:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
    355d:	c1 ff 1f             	sar    $0x1f,%edi
    3560:	57                   	push   %edi
    3561:	56                   	push   %esi
    3562:	50                   	push   %eax
    3563:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
    3569:	50                   	push   %eax
    356a:	e8 e1 58 00 00       	call   8e50 <__umoddi3@plt>
    356f:	83 c4 10             	add    $0x10,%esp
    3572:	8b 4d 80             	mov    -0x80(%ebp),%ecx
    3575:	29 c6                	sub    %eax,%esi
    3577:	8b 5d 84             	mov    -0x7c(%ebp),%ebx
    357a:	19 d7                	sbb    %edx,%edi
    357c:	2b 8d 70 ff ff ff    	sub    -0x90(%ebp),%ecx
    3582:	1b 9d 74 ff ff ff    	sbb    -0x8c(%ebp),%ebx
    3588:	89 ca                	mov    %ecx,%edx
    358a:	89 d8                	mov    %ebx,%eax
    358c:	83 fb 00             	cmp    $0x0,%ebx
    358f:	0f 86 d3 02 00 00    	jbe    3868 <mfs_read+0x5b8>
    3595:	8b 95 68 ff ff ff    	mov    -0x98(%ebp),%edx
    359b:	31 c0                	xor    %eax,%eax
    359d:	39 c7                	cmp    %eax,%edi
    359f:	72 0f                	jb     35b0 <mfs_read+0x300>
    35a1:	0f 87 19 03 00 00    	ja     38c0 <mfs_read+0x610>
    35a7:	39 d6                	cmp    %edx,%esi
    35a9:	0f 87 11 03 00 00    	ja     38c0 <mfs_read+0x610>
    35af:	90                   	nop
    35b0:	8b 45 94             	mov    -0x6c(%ebp),%eax
    35b3:	89 f3                	mov    %esi,%ebx
    35b5:	85 c0                	test   %eax,%eax
    35b7:	0f 85 3b 03 00 00    	jne    38f8 <mfs_read+0x648>
    35bd:	8b bd 6c ff ff ff    	mov    -0x94(%ebp),%edi
    35c3:	83 ec 0c             	sub    $0xc,%esp
    35c6:	8b 47 18             	mov    0x18(%edi),%eax
    35c9:	50                   	push   %eax
    35ca:	e8 21 58 00 00       	call   8df0 <malloc@plt>
    35cf:	83 c4 10             	add    $0x10,%esp
    35d2:	89 c6                	mov    %eax,%esi
    35d4:	85 c0                	test   %eax,%eax
    35d6:	0f 84 1f 01 00 00    	je     36fb <mfs_read+0x44b>
    35dc:	50                   	push   %eax
    35dd:	6a 04                	push   $0x4
    35df:	6a 00                	push   $0x0
    35e1:	56                   	push   %esi
    35e2:	e8 89 59 00 00       	call   8f70 <memset@plt>
    35e7:	83 c4 0c             	add    $0xc,%esp
    35ea:	53                   	push   %ebx
    35eb:	8b 47 18             	mov    0x18(%edi),%eax
    35ee:	51                   	push   %ecx
    35ef:	89 c2                	mov    %eax,%edx
    35f1:	51                   	push   %ecx
    35f2:	c1 fa 1f             	sar    $0x1f,%edx
    35f5:	8b bd 74 ff ff ff    	mov    -0x8c(%ebp),%edi
    35fb:	52                   	push   %edx
    35fc:	50                   	push   %eax
    35fd:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
    3603:	57                   	push   %edi
    3604:	50                   	push   %eax
    3605:	e8 46 58 00 00       	call   8e50 <__umoddi3@plt>
    360a:	83 c4 18             	add    $0x18,%esp
    360d:	01 f0                	add    %esi,%eax
    360f:	50                   	push   %eax
    3610:	8b 45 90             	mov    -0x70(%ebp),%eax
    3613:	50                   	push   %eax
    3614:	e8 87 57 00 00       	call   8da0 <async_data_read_finalize@plt>
    3619:	89 34 24             	mov    %esi,(%esp)
    361c:	e8 8f 5a 00 00       	call   90b0 <free@plt>
    3621:	83 c4 10             	add    $0x10,%esp
    3624:	e9 8a fd ff ff       	jmp    33b3 <mfs_read+0x103>
    3629:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3630:	83 ec 0c             	sub    $0xc,%esp
    3633:	6a 14                	push   $0x14
    3635:	e8 b6 57 00 00       	call   8df0 <malloc@plt>
    363a:	83 c4 10             	add    $0x10,%esp
    363d:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
    3643:	85 c0                	test   %eax,%eax
    3645:	0f 84 b5 03 00 00    	je     3a00 <mfs_read+0x750>
    364b:	83 ec 0c             	sub    $0xc,%esp
    364e:	50                   	push   %eax
    364f:	e8 4c 4e 00 00       	call   84a0 <fs_node_initialize>
    3654:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)
    365b:	e8 90 57 00 00       	call   8df0 <malloc@plt>
    3660:	83 c4 10             	add    $0x10,%esp
    3663:	89 c6                	mov    %eax,%esi
    3665:	85 c0                	test   %eax,%eax
    3667:	0f 84 2b 02 00 00    	je     3898 <mfs_read+0x5e8>
    366d:	50                   	push   %eax
    366e:	8b 45 0c             	mov    0xc(%ebp),%eax
    3671:	50                   	push   %eax
    3672:	8d 45 98             	lea    -0x68(%ebp),%eax
    3675:	50                   	push   %eax
    3676:	53                   	push   %ebx
    3677:	e8 74 04 00 00       	call   3af0 <mfs_get_inode>
    367c:	83 c4 10             	add    $0x10,%esp
    367f:	85 c0                	test   %eax,%eax
    3681:	0f 84 a1 03 00 00    	je     3a28 <mfs_read+0x778>
    3687:	83 ec 0c             	sub    $0xc,%esp
    368a:	8b 95 78 ff ff ff    	mov    -0x88(%ebp),%edx
    3690:	89 45 80             	mov    %eax,-0x80(%ebp)
    3693:	52                   	push   %edx
    3694:	e8 17 5a 00 00       	call   90b0 <free@plt>
    3699:	89 34 24             	mov    %esi,(%esp)
    369c:	e8 0f 5a 00 00       	call   90b0 <free@plt>
    36a1:	8b 45 80             	mov    -0x80(%ebp),%eax
    36a4:	83 c4 10             	add    $0x10,%esp
    36a7:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
    36ad:	83 ec 0c             	sub    $0xc,%esp
    36b0:	68 6c ad 00 00       	push   $0xad6c
    36b5:	e8 26 58 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    36ba:	83 c4 10             	add    $0x10,%esp
    36bd:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
    36c3:	e9 82 fd ff ff       	jmp    344a <mfs_read+0x19a>
    36c8:	83 ec 0c             	sub    $0xc,%esp
    36cb:	68 6c ad 00 00       	push   $0xad6c
    36d0:	e8 0b 58 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    36d5:	83 c4 10             	add    $0x10,%esp
    36d8:	8b 9d 7c ff ff ff    	mov    -0x84(%ebp),%ebx
    36de:	8b 75 90             	mov    -0x70(%ebp),%esi
    36e1:	51                   	push   %ecx
    36e2:	51                   	push   %ecx
    36e3:	53                   	push   %ebx
    36e4:	56                   	push   %esi
    36e5:	e8 36 57 00 00       	call   8e20 <async_answer_0@plt>
    36ea:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
    36f0:	83 c4 10             	add    $0x10,%esp
    36f3:	8d 65 f4             	lea    -0xc(%ebp),%esp
    36f6:	5b                   	pop    %ebx
    36f7:	5e                   	pop    %esi
    36f8:	5f                   	pop    %edi
    36f9:	5d                   	pop    %ebp
    36fa:	c3                   	ret    
    36fb:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    3700:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
    3706:	e9 57 fd ff ff       	jmp    3462 <mfs_read+0x1b2>
    370b:	90                   	nop
    370c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3710:	8b 43 04             	mov    0x4(%ebx),%eax
    3713:	8b 95 74 ff ff ff    	mov    -0x8c(%ebp),%edx
    3719:	89 55 84             	mov    %edx,-0x7c(%ebp)
    371c:	83 fa 00             	cmp    $0x0,%edx
    371f:	8b 40 04             	mov    0x4(%eax),%eax
    3722:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
    3728:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
    372e:	89 45 80             	mov    %eax,-0x80(%ebp)
    3731:	77 09                	ja     373c <mfs_read+0x48c>
    3733:	83 f8 02             	cmp    $0x2,%eax
    3736:	0f 82 44 01 00 00    	jb     3880 <mfs_read+0x5d0>
    373c:	8b 03                	mov    (%ebx),%eax
    373e:	8b 8d 6c ff ff ff    	mov    -0x94(%ebp),%ecx
    3744:	31 d2                	xor    %edx,%edx
    3746:	8b 40 08             	mov    0x8(%eax),%eax
    3749:	f7 71 30             	divl   0x30(%ecx)
    374c:	8b 4d 84             	mov    -0x7c(%ebp),%ecx
    374f:	8b 55 80             	mov    -0x80(%ebp),%edx
    3752:	83 f9 00             	cmp    $0x0,%ecx
    3755:	77 4a                	ja     37a1 <mfs_read+0x4f1>
    3757:	39 c2                	cmp    %eax,%edx
    3759:	73 46                	jae    37a1 <mfs_read+0x4f1>
    375b:	8b 75 80             	mov    -0x80(%ebp),%esi
    375e:	66 90                	xchg   %ax,%ax
    3760:	51                   	push   %ecx
    3761:	56                   	push   %esi
    3762:	57                   	push   %edi
    3763:	53                   	push   %ebx
    3764:	e8 17 13 00 00       	call   4a80 <mfs_read_dentry>
    3769:	83 c4 10             	add    $0x10,%esp
    376c:	85 c0                	test   %eax,%eax
    376e:	75 90                	jne    3700 <mfs_read+0x450>
    3770:	8b 55 9c             	mov    -0x64(%ebp),%edx
    3773:	85 d2                	test   %edx,%edx
    3775:	0f 85 4d 01 00 00    	jne    38c8 <mfs_read+0x618>
    377b:	83 45 80 01          	addl   $0x1,-0x80(%ebp)
    377f:	8b 03                	mov    (%ebx),%eax
    3781:	8b 8d 6c ff ff ff    	mov    -0x94(%ebp),%ecx
    3787:	83 55 84 00          	adcl   $0x0,-0x7c(%ebp)
    378b:	31 d2                	xor    %edx,%edx
    378d:	8b 40 08             	mov    0x8(%eax),%eax
    3790:	46                   	inc    %esi
    3791:	f7 71 30             	divl   0x30(%ecx)
    3794:	31 c9                	xor    %ecx,%ecx
    3796:	3b 4d 84             	cmp    -0x7c(%ebp),%ecx
    3799:	77 c5                	ja     3760 <mfs_read+0x4b0>
    379b:	0f 83 b7 00 00 00    	jae    3858 <mfs_read+0x5a8>
    37a1:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
    37a7:	83 ec 0c             	sub    $0xc,%esp
    37aa:	8b 58 10             	mov    0x10(%eax),%ebx
    37ad:	68 6c ad 00 00       	push   $0xad6c
    37b2:	e8 09 59 00 00       	call   90c0 <fibril_mutex_lock@plt>
    37b7:	83 c4 10             	add    $0x10,%esp
    37ba:	8b 43 08             	mov    0x8(%ebx),%eax
    37bd:	85 c0                	test   %eax,%eax
    37bf:	0f 84 af 02 00 00    	je     3a74 <mfs_read+0x7c4>
    37c5:	48                   	dec    %eax
    37c6:	89 43 08             	mov    %eax,0x8(%ebx)
    37c9:	85 c0                	test   %eax,%eax
    37cb:	0f 85 3f 02 00 00    	jne    3a10 <mfs_read+0x760>
    37d1:	50                   	push   %eax
    37d2:	50                   	push   %eax
    37d3:	8d 43 10             	lea    0x10(%ebx),%eax
    37d6:	50                   	push   %eax
    37d7:	68 e4 ae 00 00       	push   $0xaee4
    37dc:	e8 7f 57 00 00       	call   8f60 <hash_table_remove_item@plt>
    37e1:	8b 53 04             	mov    0x4(%ebx),%edx
    37e4:	8b 42 08             	mov    0x8(%edx),%eax
    37e7:	83 c4 10             	add    $0x10,%esp
    37ea:	85 c0                	test   %eax,%eax
    37ec:	0f 84 97 02 00 00    	je     3a89 <mfs_read+0x7d9>
    37f2:	83 ec 0c             	sub    $0xc,%esp
    37f5:	48                   	dec    %eax
    37f6:	89 42 08             	mov    %eax,0x8(%edx)
    37f9:	53                   	push   %ebx
    37fa:	e8 21 06 00 00       	call   3e20 <mfs_put_inode>
    37ff:	89 c7                	mov    %eax,%edi
    3801:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
    3807:	8b 03                	mov    (%ebx),%eax
    3809:	5e                   	pop    %esi
    380a:	50                   	push   %eax
    380b:	e8 a0 58 00 00       	call   90b0 <free@plt>
    3810:	89 1c 24             	mov    %ebx,(%esp)
    3813:	e8 98 58 00 00       	call   90b0 <free@plt>
    3818:	58                   	pop    %eax
    3819:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
    381f:	50                   	push   %eax
    3820:	e8 8b 58 00 00       	call   90b0 <free@plt>
    3825:	c7 04 24 6c ad 00 00 	movl   $0xad6c,(%esp)
    382c:	e8 af 56 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    3831:	83 c4 10             	add    $0x10,%esp
    3834:	89 f8                	mov    %edi,%eax
    3836:	85 ff                	test   %edi,%edi
    3838:	0f 84 60 02 00 00    	je     3a9e <mfs_read+0x7ee>
    383e:	8b 4d 90             	mov    -0x70(%ebp),%ecx
    3841:	52                   	push   %edx
    3842:	52                   	push   %edx
    3843:	50                   	push   %eax
    3844:	51                   	push   %ecx
    3845:	e8 d6 55 00 00       	call   8e20 <async_answer_0@plt>
    384a:	83 c4 10             	add    $0x10,%esp
    384d:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
    3853:	e9 f2 fb ff ff       	jmp    344a <mfs_read+0x19a>
    3858:	3b 45 80             	cmp    -0x80(%ebp),%eax
    385b:	0f 87 ff fe ff ff    	ja     3760 <mfs_read+0x4b0>
    3861:	e9 3b ff ff ff       	jmp    37a1 <mfs_read+0x4f1>
    3866:	66 90                	xchg   %ax,%ax
    3868:	3b 8d 68 ff ff ff    	cmp    -0x98(%ebp),%ecx
    386e:	0f 86 29 fd ff ff    	jbe    359d <mfs_read+0x2ed>
    3874:	e9 1c fd ff ff       	jmp    3595 <mfs_read+0x2e5>
    3879:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3880:	c7 45 80 02 00 00 00 	movl   $0x2,-0x80(%ebp)
    3887:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
    388e:	e9 a9 fe ff ff       	jmp    373c <mfs_read+0x48c>
    3893:	90                   	nop
    3894:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3898:	83 ec 0c             	sub    $0xc,%esp
    389b:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
    38a1:	50                   	push   %eax
    38a2:	e8 09 58 00 00       	call   90b0 <free@plt>
    38a7:	83 c4 10             	add    $0x10,%esp
    38aa:	c7 85 7c ff ff ff fe 	movl   $0xfffffffe,-0x84(%ebp)
    38b1:	ff ff ff 
    38b4:	e9 f4 fd ff ff       	jmp    36ad <mfs_read+0x3fd>
    38b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    38c0:	89 d6                	mov    %edx,%esi
    38c2:	e9 e9 fc ff ff       	jmp    35b0 <mfs_read+0x300>
    38c7:	90                   	nop
    38c8:	83 ec 0c             	sub    $0xc,%esp
    38cb:	8d 5d a0             	lea    -0x60(%ebp),%ebx
    38ce:	53                   	push   %ebx
    38cf:	e8 ec 56 00 00       	call   8fc0 <str_size@plt>
    38d4:	83 c4 0c             	add    $0xc,%esp
    38d7:	40                   	inc    %eax
    38d8:	8b 7d 90             	mov    -0x70(%ebp),%edi
    38db:	50                   	push   %eax
    38dc:	53                   	push   %ebx
    38dd:	57                   	push   %edi
    38de:	e8 bd 54 00 00       	call   8da0 <async_data_read_finalize@plt>
    38e3:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
    38e9:	83 c4 10             	add    $0x10,%esp
    38ec:	29 c6                	sub    %eax,%esi
    38ee:	8d 5e 01             	lea    0x1(%esi),%ebx
    38f1:	e9 bd fa ff ff       	jmp    33b3 <mfs_read+0x103>
    38f6:	66 90                	xchg   %ax,%ax
    38f8:	83 ec 0c             	sub    $0xc,%esp
    38fb:	31 d2                	xor    %edx,%edx
    38fd:	6a 00                	push   $0x0
    38ff:	52                   	push   %edx
    3900:	50                   	push   %eax
    3901:	8b 45 08             	mov    0x8(%ebp),%eax
    3904:	50                   	push   %eax
    3905:	8d 45 98             	lea    -0x68(%ebp),%eax
    3908:	50                   	push   %eax
    3909:	e8 d2 2a 00 00       	call   63e0 <block_get>
    390e:	83 c4 20             	add    $0x20,%esp
    3911:	85 c0                	test   %eax,%eax
    3913:	0f 85 e7 fd ff ff    	jne    3700 <mfs_read+0x450>
    3919:	50                   	push   %eax
    391a:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
    3920:	56                   	push   %esi
    3921:	8b bd 74 ff ff ff    	mov    -0x8c(%ebp),%edi
    3927:	8b 40 18             	mov    0x18(%eax),%eax
    392a:	51                   	push   %ecx
    392b:	89 c2                	mov    %eax,%edx
    392d:	51                   	push   %ecx
    392e:	c1 fa 1f             	sar    $0x1f,%edx
    3931:	8b 75 98             	mov    -0x68(%ebp),%esi
    3934:	52                   	push   %edx
    3935:	50                   	push   %eax
    3936:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
    393c:	57                   	push   %edi
    393d:	50                   	push   %eax
    393e:	e8 0d 55 00 00       	call   8e50 <__umoddi3@plt>
    3943:	83 c4 18             	add    $0x18,%esp
    3946:	8b 56 58             	mov    0x58(%esi),%edx
    3949:	01 d0                	add    %edx,%eax
    394b:	8b 4d 90             	mov    -0x70(%ebp),%ecx
    394e:	50                   	push   %eax
    394f:	51                   	push   %ecx
    3950:	e8 4b 54 00 00       	call   8da0 <async_data_read_finalize@plt>
    3955:	8b 7d 98             	mov    -0x68(%ebp),%edi
    3958:	5e                   	pop    %esi
    3959:	57                   	push   %edi
    395a:	e8 81 27 00 00       	call   60e0 <block_put>
    395f:	83 c4 10             	add    $0x10,%esp
    3962:	89 c6                	mov    %eax,%esi
    3964:	85 c0                	test   %eax,%eax
    3966:	0f 84 47 fa ff ff    	je     33b3 <mfs_read+0x103>
    396c:	8b bd 78 ff ff ff    	mov    -0x88(%ebp),%edi
    3972:	83 ec 0c             	sub    $0xc,%esp
    3975:	8b 5f 10             	mov    0x10(%edi),%ebx
    3978:	68 6c ad 00 00       	push   $0xad6c
    397d:	e8 3e 57 00 00       	call   90c0 <fibril_mutex_lock@plt>
    3982:	83 c4 10             	add    $0x10,%esp
    3985:	8b 43 08             	mov    0x8(%ebx),%eax
    3988:	85 c0                	test   %eax,%eax
    398a:	0f 84 e4 00 00 00    	je     3a74 <mfs_read+0x7c4>
    3990:	48                   	dec    %eax
    3991:	89 43 08             	mov    %eax,0x8(%ebx)
    3994:	85 c0                	test   %eax,%eax
    3996:	75 4a                	jne    39e2 <mfs_read+0x732>
    3998:	50                   	push   %eax
    3999:	50                   	push   %eax
    399a:	8d 43 10             	lea    0x10(%ebx),%eax
    399d:	50                   	push   %eax
    399e:	68 e4 ae 00 00       	push   $0xaee4
    39a3:	e8 b8 55 00 00       	call   8f60 <hash_table_remove_item@plt>
    39a8:	8b 53 04             	mov    0x4(%ebx),%edx
    39ab:	8b 42 08             	mov    0x8(%edx),%eax
    39ae:	83 c4 10             	add    $0x10,%esp
    39b1:	85 c0                	test   %eax,%eax
    39b3:	0f 84 d0 00 00 00    	je     3a89 <mfs_read+0x7d9>
    39b9:	83 ec 0c             	sub    $0xc,%esp
    39bc:	48                   	dec    %eax
    39bd:	89 42 08             	mov    %eax,0x8(%edx)
    39c0:	53                   	push   %ebx
    39c1:	e8 5a 04 00 00       	call   3e20 <mfs_put_inode>
    39c6:	8b 03                	mov    (%ebx),%eax
    39c8:	59                   	pop    %ecx
    39c9:	50                   	push   %eax
    39ca:	e8 e1 56 00 00       	call   90b0 <free@plt>
    39cf:	89 1c 24             	mov    %ebx,(%esp)
    39d2:	e8 d9 56 00 00       	call   90b0 <free@plt>
    39d7:	89 3c 24             	mov    %edi,(%esp)
    39da:	e8 d1 56 00 00       	call   90b0 <free@plt>
    39df:	83 c4 10             	add    $0x10,%esp
    39e2:	83 ec 0c             	sub    $0xc,%esp
    39e5:	68 6c ad 00 00       	push   $0xad6c
    39ea:	e8 f1 54 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    39ef:	83 c4 10             	add    $0x10,%esp
    39f2:	89 b5 7c ff ff ff    	mov    %esi,-0x84(%ebp)
    39f8:	89 f0                	mov    %esi,%eax
    39fa:	e9 4b fa ff ff       	jmp    344a <mfs_read+0x19a>
    39ff:	90                   	nop
    3a00:	c7 85 7c ff ff ff fe 	movl   $0xfffffffe,-0x84(%ebp)
    3a07:	ff ff ff 
    3a0a:	e9 9e fc ff ff       	jmp    36ad <mfs_read+0x3fd>
    3a0f:	90                   	nop
    3a10:	83 ec 0c             	sub    $0xc,%esp
    3a13:	68 6c ad 00 00       	push   $0xad6c
    3a18:	e8 c3 54 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    3a1d:	83 c4 10             	add    $0x10,%esp
    3a20:	83 c8 ff             	or     $0xffffffff,%eax
    3a23:	e9 16 fe ff ff       	jmp    383e <mfs_read+0x58e>
    3a28:	8b 45 98             	mov    -0x68(%ebp),%eax
    3a2b:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    3a2e:	89 48 44             	mov    %ecx,0x44(%eax)
    3a31:	89 06                	mov    %eax,(%esi)
    3a33:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
    3a39:	c7 46 08 01 00 00 00 	movl   $0x1,0x8(%esi)
    3a40:	89 46 0c             	mov    %eax,0xc(%esi)
    3a43:	89 5e 04             	mov    %ebx,0x4(%esi)
    3a46:	89 70 10             	mov    %esi,0x10(%eax)
    3a49:	83 c6 10             	add    $0x10,%esi
    3a4c:	50                   	push   %eax
    3a4d:	50                   	push   %eax
    3a4e:	56                   	push   %esi
    3a4f:	68 e4 ae 00 00       	push   $0xaee4
    3a54:	e8 f7 52 00 00       	call   8d50 <hash_table_insert@plt>
    3a59:	8b 43 08             	mov    0x8(%ebx),%eax
    3a5c:	40                   	inc    %eax
    3a5d:	89 43 08             	mov    %eax,0x8(%ebx)
    3a60:	c7 04 24 6c ad 00 00 	movl   $0xad6c,(%esp)
    3a67:	e8 74 54 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    3a6c:	83 c4 10             	add    $0x10,%esp
    3a6f:	e9 d6 f8 ff ff       	jmp    334a <mfs_read+0x9a>
    3a74:	50                   	push   %eax
    3a75:	68 f6 01 00 00       	push   $0x1f6
    3a7a:	68 c4 87 00 00       	push   $0x87c4
    3a7f:	68 ce 87 00 00       	push   $0x87ce
    3a84:	e8 27 54 00 00       	call   8eb0 <assert_abort@plt>
    3a89:	50                   	push   %eax
    3a8a:	68 fa 01 00 00       	push   $0x1fa
    3a8f:	68 c4 87 00 00       	push   $0x87c4
    3a94:	68 0c 88 00 00       	push   $0x880c
    3a99:	e8 12 54 00 00       	call   8eb0 <assert_abort@plt>
    3a9e:	83 c8 ff             	or     $0xffffffff,%eax
    3aa1:	e9 98 fd ff ff       	jmp    383e <mfs_read+0x58e>
    3aa6:	c7 85 7c ff ff ff ff 	movl   $0xffffffff,-0x84(%ebp)
    3aad:	ff ff ff 
    3ab0:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
    3ab6:	e9 8f f9 ff ff       	jmp    344a <mfs_read+0x19a>
    3abb:	90                   	nop
    3abc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00003ac0 <mfs_global_init>:
    3ac0:	55                   	push   %ebp
    3ac1:	89 e5                	mov    %esp,%ebp
    3ac3:	83 ec 08             	sub    $0x8,%esp
    3ac6:	68 00 ad 00 00       	push   $0xad00
    3acb:	6a 00                	push   $0x0
    3acd:	6a 00                	push   $0x0
    3acf:	68 e4 ae 00 00       	push   $0xaee4
    3ad4:	e8 57 52 00 00       	call   8d30 <hash_table_create@plt>
    3ad9:	83 c4 10             	add    $0x10,%esp
    3adc:	3c 01                	cmp    $0x1,%al
    3ade:	c9                   	leave  
    3adf:	19 c0                	sbb    %eax,%eax
    3ae1:	83 e0 fe             	and    $0xfffffffe,%eax
    3ae4:	c3                   	ret    
    3ae5:	66 90                	xchg   %ax,%ax
    3ae7:	66 90                	xchg   %ax,%ax
    3ae9:	66 90                	xchg   %ax,%ax
    3aeb:	66 90                	xchg   %ax,%ax
    3aed:	66 90                	xchg   %ax,%ax
    3aef:	90                   	nop

00003af0 <mfs_get_inode>:
    3af0:	55                   	push   %ebp
    3af1:	89 e5                	mov    %esp,%ebp
    3af3:	57                   	push   %edi
    3af4:	56                   	push   %esi
    3af5:	53                   	push   %ebx
    3af6:	83 ec 2c             	sub    $0x2c,%esp
    3af9:	8b 7d 08             	mov    0x8(%ebp),%edi
    3afc:	8b 5f 04             	mov    0x4(%edi),%ebx
    3aff:	83 7b 28 01          	cmpl   $0x1,0x28(%ebx)
    3b03:	0f 84 97 01 00 00    	je     3ca0 <mfs_get_inode+0x1b0>
    3b09:	83 ec 0c             	sub    $0xc,%esp
    3b0c:	6a 48                	push   $0x48
    3b0e:	e8 dd 52 00 00       	call   8df0 <malloc@plt>
    3b13:	83 c4 10             	add    $0x10,%esp
    3b16:	89 c3                	mov    %eax,%ebx
    3b18:	85 c0                	test   %eax,%eax
    3b1a:	74 3f                	je     3b5b <mfs_get_inode+0x6b>
    3b1c:	83 ec 0c             	sub    $0xc,%esp
    3b1f:	8b 77 04             	mov    0x4(%edi),%esi
    3b22:	8b 45 10             	mov    0x10(%ebp),%eax
    3b25:	31 d2                	xor    %edx,%edx
    3b27:	6a 00                	push   $0x0
    3b29:	48                   	dec    %eax
    3b2a:	f7 76 2c             	divl   0x2c(%esi)
    3b2d:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    3b30:	8b 56 34             	mov    0x34(%esi),%edx
    3b33:	01 d0                	add    %edx,%eax
    3b35:	31 d2                	xor    %edx,%edx
    3b37:	52                   	push   %edx
    3b38:	8b 0f                	mov    (%edi),%ecx
    3b3a:	50                   	push   %eax
    3b3b:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    3b3e:	51                   	push   %ecx
    3b3f:	50                   	push   %eax
    3b40:	e8 9b 28 00 00       	call   63e0 <block_get>
    3b45:	83 c4 20             	add    $0x20,%esp
    3b48:	89 45 d0             	mov    %eax,-0x30(%ebp)
    3b4b:	85 c0                	test   %eax,%eax
    3b4d:	74 19                	je     3b68 <mfs_get_inode+0x78>
    3b4f:	83 ec 0c             	sub    $0xc,%esp
    3b52:	53                   	push   %ebx
    3b53:	e8 58 55 00 00       	call   90b0 <free@plt>
    3b58:	83 c4 10             	add    $0x10,%esp
    3b5b:	31 c0                	xor    %eax,%eax
    3b5d:	8d 65 f4             	lea    -0xc(%ebp),%esp
    3b60:	5b                   	pop    %ebx
    3b61:	5e                   	pop    %esi
    3b62:	5f                   	pop    %edi
    3b63:	5d                   	pop    %ebp
    3b64:	c3                   	ret    
    3b65:	8d 76 00             	lea    0x0(%esi),%esi
    3b68:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    3b6b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3b6e:	c1 e0 06             	shl    $0x6,%eax
    3b71:	8b 4a 58             	mov    0x58(%edx),%ecx
    3b74:	01 c8                	add    %ecx,%eax
    3b76:	89 c7                	mov    %eax,%edi
    3b78:	50                   	push   %eax
    3b79:	50                   	push   %eax
    3b7a:	31 c0                	xor    %eax,%eax
    3b7c:	66 8b 07             	mov    (%edi),%ax
    3b7f:	50                   	push   %eax
    3b80:	31 c0                	xor    %eax,%eax
    3b82:	8a 46 3d             	mov    0x3d(%esi),%al
    3b85:	50                   	push   %eax
    3b86:	e8 15 1d 00 00       	call   58a0 <conv16>
    3b8b:	66 89 03             	mov    %ax,(%ebx)
    3b8e:	58                   	pop    %eax
    3b8f:	31 c0                	xor    %eax,%eax
    3b91:	66 8b 47 02          	mov    0x2(%edi),%ax
    3b95:	5a                   	pop    %edx
    3b96:	50                   	push   %eax
    3b97:	31 c0                	xor    %eax,%eax
    3b99:	8a 46 3d             	mov    0x3d(%esi),%al
    3b9c:	50                   	push   %eax
    3b9d:	e8 fe 1c 00 00       	call   58a0 <conv16>
    3ba2:	66 89 43 02          	mov    %ax,0x2(%ebx)
    3ba6:	59                   	pop    %ecx
    3ba7:	58                   	pop    %eax
    3ba8:	31 c0                	xor    %eax,%eax
    3baa:	66 8b 47 04          	mov    0x4(%edi),%ax
    3bae:	50                   	push   %eax
    3baf:	31 c0                	xor    %eax,%eax
    3bb1:	8a 46 3d             	mov    0x3d(%esi),%al
    3bb4:	50                   	push   %eax
    3bb5:	e8 e6 1c 00 00       	call   58a0 <conv16>
    3bba:	66 89 43 04          	mov    %ax,0x4(%ebx)
    3bbe:	58                   	pop    %eax
    3bbf:	31 c0                	xor    %eax,%eax
    3bc1:	66 8b 47 06          	mov    0x6(%edi),%ax
    3bc5:	5a                   	pop    %edx
    3bc6:	50                   	push   %eax
    3bc7:	31 c0                	xor    %eax,%eax
    3bc9:	8a 46 3d             	mov    0x3d(%esi),%al
    3bcc:	50                   	push   %eax
    3bcd:	e8 ce 1c 00 00       	call   58a0 <conv16>
    3bd2:	66 89 43 06          	mov    %ax,0x6(%ebx)
    3bd6:	59                   	pop    %ecx
    3bd7:	58                   	pop    %eax
    3bd8:	8b 47 08             	mov    0x8(%edi),%eax
    3bdb:	50                   	push   %eax
    3bdc:	31 c0                	xor    %eax,%eax
    3bde:	8a 46 3d             	mov    0x3d(%esi),%al
    3be1:	50                   	push   %eax
    3be2:	e8 d9 1c 00 00       	call   58c0 <conv32>
    3be7:	89 43 08             	mov    %eax,0x8(%ebx)
    3bea:	8b 4f 0c             	mov    0xc(%edi),%ecx
    3bed:	58                   	pop    %eax
    3bee:	31 c0                	xor    %eax,%eax
    3bf0:	8a 46 3d             	mov    0x3d(%esi),%al
    3bf3:	5a                   	pop    %edx
    3bf4:	51                   	push   %ecx
    3bf5:	50                   	push   %eax
    3bf6:	e8 c5 1c 00 00       	call   58c0 <conv32>
    3bfb:	8b 4f 10             	mov    0x10(%edi),%ecx
    3bfe:	89 43 0c             	mov    %eax,0xc(%ebx)
    3c01:	58                   	pop    %eax
    3c02:	31 c0                	xor    %eax,%eax
    3c04:	8a 46 3d             	mov    0x3d(%esi),%al
    3c07:	5a                   	pop    %edx
    3c08:	51                   	push   %ecx
    3c09:	50                   	push   %eax
    3c0a:	e8 b1 1c 00 00       	call   58c0 <conv32>
    3c0f:	8b 4f 14             	mov    0x14(%edi),%ecx
    3c12:	89 43 10             	mov    %eax,0x10(%ebx)
    3c15:	58                   	pop    %eax
    3c16:	31 c0                	xor    %eax,%eax
    3c18:	8a 46 3d             	mov    0x3d(%esi),%al
    3c1b:	5a                   	pop    %edx
    3c1c:	51                   	push   %ecx
    3c1d:	50                   	push   %eax
    3c1e:	e8 9d 1c 00 00       	call   58c0 <conv32>
    3c23:	31 d2                	xor    %edx,%edx
    3c25:	89 43 14             	mov    %eax,0x14(%ebx)
    3c28:	89 5d d4             	mov    %ebx,-0x2c(%ebp)
    3c2b:	83 c4 10             	add    $0x10,%esp
    3c2e:	89 d3                	mov    %edx,%ebx
    3c30:	50                   	push   %eax
    3c31:	50                   	push   %eax
    3c32:	8b 44 9f 18          	mov    0x18(%edi,%ebx,4),%eax
    3c36:	50                   	push   %eax
    3c37:	31 c0                	xor    %eax,%eax
    3c39:	8a 46 3d             	mov    0x3d(%esi),%al
    3c3c:	50                   	push   %eax
    3c3d:	e8 7e 1c 00 00       	call   58c0 <conv32>
    3c42:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    3c45:	83 c4 10             	add    $0x10,%esp
    3c48:	89 44 99 18          	mov    %eax,0x18(%ecx,%ebx,4)
    3c4c:	43                   	inc    %ebx
    3c4d:	83 fb 07             	cmp    $0x7,%ebx
    3c50:	75 de                	jne    3c30 <mfs_get_inode+0x140>
    3c52:	89 75 d4             	mov    %esi,-0x2c(%ebp)
    3c55:	89 cb                	mov    %ecx,%ebx
    3c57:	8b 75 d0             	mov    -0x30(%ebp),%esi
    3c5a:	52                   	push   %edx
    3c5b:	52                   	push   %edx
    3c5c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    3c5f:	31 c0                	xor    %eax,%eax
    3c61:	8b 4c b7 34          	mov    0x34(%edi,%esi,4),%ecx
    3c65:	8a 42 3d             	mov    0x3d(%edx),%al
    3c68:	51                   	push   %ecx
    3c69:	50                   	push   %eax
    3c6a:	e8 51 1c 00 00       	call   58c0 <conv32>
    3c6f:	89 44 b3 34          	mov    %eax,0x34(%ebx,%esi,4)
    3c73:	46                   	inc    %esi
    3c74:	83 c4 10             	add    $0x10,%esp
    3c77:	83 fe 03             	cmp    $0x3,%esi
    3c7a:	75 de                	jne    3c5a <mfs_get_inode+0x16a>
    3c7c:	83 ec 0c             	sub    $0xc,%esp
    3c7f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    3c82:	50                   	push   %eax
    3c83:	e8 58 24 00 00       	call   60e0 <block_put>
    3c88:	8b 55 0c             	mov    0xc(%ebp),%edx
    3c8b:	c6 43 40 00          	movb   $0x0,0x40(%ebx)
    3c8f:	83 c4 10             	add    $0x10,%esp
    3c92:	89 1a                	mov    %ebx,(%edx)
    3c94:	8d 65 f4             	lea    -0xc(%ebp),%esp
    3c97:	5b                   	pop    %ebx
    3c98:	5e                   	pop    %esi
    3c99:	5f                   	pop    %edi
    3c9a:	5d                   	pop    %ebp
    3c9b:	c3                   	ret    
    3c9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3ca0:	83 ec 0c             	sub    $0xc,%esp
    3ca3:	8b 43 2c             	mov    0x2c(%ebx),%eax
    3ca6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    3ca9:	6a 48                	push   $0x48
    3cab:	e8 40 51 00 00       	call   8df0 <malloc@plt>
    3cb0:	83 c4 10             	add    $0x10,%esp
    3cb3:	89 c6                	mov    %eax,%esi
    3cb5:	85 c0                	test   %eax,%eax
    3cb7:	0f 84 9e fe ff ff    	je     3b5b <mfs_get_inode+0x6b>
    3cbd:	8b 45 10             	mov    0x10(%ebp),%eax
    3cc0:	83 ec 0c             	sub    $0xc,%esp
    3cc3:	48                   	dec    %eax
    3cc4:	89 c1                	mov    %eax,%ecx
    3cc6:	6a 00                	push   $0x0
    3cc8:	81 e1 ff ff 00 00    	and    $0xffff,%ecx
    3cce:	89 ca                	mov    %ecx,%edx
    3cd0:	89 c8                	mov    %ecx,%eax
    3cd2:	c1 fa 1f             	sar    $0x1f,%edx
    3cd5:	89 4d d0             	mov    %ecx,-0x30(%ebp)
    3cd8:	f7 7b 2c             	idivl  0x2c(%ebx)
    3cdb:	8b 53 34             	mov    0x34(%ebx),%edx
    3cde:	8b 0f                	mov    (%edi),%ecx
    3ce0:	01 d0                	add    %edx,%eax
    3ce2:	89 c2                	mov    %eax,%edx
    3ce4:	c1 fa 1f             	sar    $0x1f,%edx
    3ce7:	52                   	push   %edx
    3ce8:	50                   	push   %eax
    3ce9:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    3cec:	51                   	push   %ecx
    3ced:	50                   	push   %eax
    3cee:	e8 ed 26 00 00       	call   63e0 <block_get>
    3cf3:	83 c4 20             	add    $0x20,%esp
    3cf6:	89 c7                	mov    %eax,%edi
    3cf8:	85 c0                	test   %eax,%eax
    3cfa:	74 1c                	je     3d18 <mfs_get_inode+0x228>
    3cfc:	83 ec 0c             	sub    $0xc,%esp
    3cff:	56                   	push   %esi
    3d00:	e8 ab 53 00 00       	call   90b0 <free@plt>
    3d05:	83 c4 10             	add    $0x10,%esp
    3d08:	8d 65 f4             	lea    -0xc(%ebp),%esp
    3d0b:	31 c0                	xor    %eax,%eax
    3d0d:	5b                   	pop    %ebx
    3d0e:	5e                   	pop    %esi
    3d0f:	5f                   	pop    %edi
    3d10:	5d                   	pop    %ebp
    3d11:	c3                   	ret    
    3d12:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3d18:	8b 45 d0             	mov    -0x30(%ebp),%eax
    3d1b:	89 c2                	mov    %eax,%edx
    3d1d:	c1 fa 1f             	sar    $0x1f,%edx
    3d20:	f7 7d d4             	idivl  -0x2c(%ebp)
    3d23:	c1 e2 05             	shl    $0x5,%edx
    3d26:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    3d29:	8b 48 58             	mov    0x58(%eax),%ecx
    3d2c:	50                   	push   %eax
    3d2d:	01 ca                	add    %ecx,%edx
    3d2f:	50                   	push   %eax
    3d30:	31 c0                	xor    %eax,%eax
    3d32:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    3d35:	66 8b 02             	mov    (%edx),%ax
    3d38:	50                   	push   %eax
    3d39:	31 c0                	xor    %eax,%eax
    3d3b:	8a 43 3d             	mov    0x3d(%ebx),%al
    3d3e:	50                   	push   %eax
    3d3f:	e8 5c 1b 00 00       	call   58a0 <conv16>
    3d44:	66 89 06             	mov    %ax,(%esi)
    3d47:	58                   	pop    %eax
    3d48:	5a                   	pop    %edx
    3d49:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    3d4c:	31 c0                	xor    %eax,%eax
    3d4e:	66 8b 42 02          	mov    0x2(%edx),%ax
    3d52:	50                   	push   %eax
    3d53:	31 c0                	xor    %eax,%eax
    3d55:	8a 43 3d             	mov    0x3d(%ebx),%al
    3d58:	50                   	push   %eax
    3d59:	e8 42 1b 00 00       	call   58a0 <conv16>
    3d5e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    3d61:	66 89 46 04          	mov    %ax,0x4(%esi)
    3d65:	59                   	pop    %ecx
    3d66:	58                   	pop    %eax
    3d67:	8b 42 04             	mov    0x4(%edx),%eax
    3d6a:	50                   	push   %eax
    3d6b:	31 c0                	xor    %eax,%eax
    3d6d:	8a 43 3d             	mov    0x3d(%ebx),%al
    3d70:	50                   	push   %eax
    3d71:	e8 4a 1b 00 00       	call   58c0 <conv32>
    3d76:	89 46 08             	mov    %eax,0x8(%esi)
    3d79:	58                   	pop    %eax
    3d7a:	5a                   	pop    %edx
    3d7b:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    3d7e:	31 c0                	xor    %eax,%eax
    3d80:	8a 43 3d             	mov    0x3d(%ebx),%al
    3d83:	8b 4a 08             	mov    0x8(%edx),%ecx
    3d86:	51                   	push   %ecx
    3d87:	50                   	push   %eax
    3d88:	e8 33 1b 00 00       	call   58c0 <conv32>
    3d8d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    3d90:	89 46 10             	mov    %eax,0x10(%esi)
    3d93:	31 c0                	xor    %eax,%eax
    3d95:	8a 42 0d             	mov    0xd(%edx),%al
    3d98:	83 c4 10             	add    $0x10,%esp
    3d9b:	66 89 46 02          	mov    %ax,0x2(%esi)
    3d9f:	90                   	nop
    3da0:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    3da3:	50                   	push   %eax
    3da4:	50                   	push   %eax
    3da5:	31 c0                	xor    %eax,%eax
    3da7:	66 8b 44 79 0e       	mov    0xe(%ecx,%edi,2),%ax
    3dac:	50                   	push   %eax
    3dad:	31 c0                	xor    %eax,%eax
    3daf:	8a 43 3d             	mov    0x3d(%ebx),%al
    3db2:	50                   	push   %eax
    3db3:	e8 e8 1a 00 00       	call   58a0 <conv16>
    3db8:	25 ff ff 00 00       	and    $0xffff,%eax
    3dbd:	83 c4 10             	add    $0x10,%esp
    3dc0:	89 44 be 18          	mov    %eax,0x18(%esi,%edi,4)
    3dc4:	47                   	inc    %edi
    3dc5:	83 ff 07             	cmp    $0x7,%edi
    3dc8:	75 d6                	jne    3da0 <mfs_get_inode+0x2b0>
    3dca:	57                   	push   %edi
    3dcb:	57                   	push   %edi
    3dcc:	8b 7d d4             	mov    -0x2c(%ebp),%edi
    3dcf:	31 c0                	xor    %eax,%eax
    3dd1:	66 8b 47 1c          	mov    0x1c(%edi),%ax
    3dd5:	50                   	push   %eax
    3dd6:	31 c0                	xor    %eax,%eax
    3dd8:	8a 43 3d             	mov    0x3d(%ebx),%al
    3ddb:	50                   	push   %eax
    3ddc:	e8 bf 1a 00 00       	call   58a0 <conv16>
    3de1:	25 ff ff 00 00       	and    $0xffff,%eax
    3de6:	89 46 34             	mov    %eax,0x34(%esi)
    3de9:	58                   	pop    %eax
    3dea:	31 c0                	xor    %eax,%eax
    3dec:	66 8b 47 1e          	mov    0x1e(%edi),%ax
    3df0:	5a                   	pop    %edx
    3df1:	50                   	push   %eax
    3df2:	31 c0                	xor    %eax,%eax
    3df4:	8a 43 3d             	mov    0x3d(%ebx),%al
    3df7:	50                   	push   %eax
    3df8:	e8 a3 1a 00 00       	call   58a0 <conv16>
    3dfd:	25 ff ff 00 00       	and    $0xffff,%eax
    3e02:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
    3e05:	89 46 38             	mov    %eax,0x38(%esi)
    3e08:	59                   	pop    %ecx
    3e09:	53                   	push   %ebx
    3e0a:	e8 d1 22 00 00       	call   60e0 <block_put>
    3e0f:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    3e12:	c6 46 40 00          	movb   $0x0,0x40(%esi)
    3e16:	89 31                	mov    %esi,(%ecx)
    3e18:	83 c4 10             	add    $0x10,%esp
    3e1b:	e9 3d fd ff ff       	jmp    3b5d <mfs_get_inode+0x6d>

00003e20 <mfs_put_inode>:
    3e20:	55                   	push   %ebp
    3e21:	89 e5                	mov    %esp,%ebp
    3e23:	57                   	push   %edi
    3e24:	56                   	push   %esi
    3e25:	53                   	push   %ebx
    3e26:	83 ec 2c             	sub    $0x2c,%esp
    3e29:	31 ff                	xor    %edi,%edi
    3e2b:	8b 45 08             	mov    0x8(%ebp),%eax
    3e2e:	8b 18                	mov    (%eax),%ebx
    3e30:	80 7b 40 00          	cmpb   $0x0,0x40(%ebx)
    3e34:	74 43                	je     3e79 <mfs_put_inode+0x59>
    3e36:	8b 78 04             	mov    0x4(%eax),%edi
    3e39:	8b 43 44             	mov    0x44(%ebx),%eax
    3e3c:	8b 4f 04             	mov    0x4(%edi),%ecx
    3e3f:	83 79 28 01          	cmpl   $0x1,0x28(%ecx)
    3e43:	0f 84 6f 01 00 00    	je     3fb8 <mfs_put_inode+0x198>
    3e49:	83 ec 0c             	sub    $0xc,%esp
    3e4c:	48                   	dec    %eax
    3e4d:	0f b6 71 3d          	movzbl 0x3d(%ecx),%esi
    3e51:	31 d2                	xor    %edx,%edx
    3e53:	6a 00                	push   $0x0
    3e55:	f7 71 2c             	divl   0x2c(%ecx)
    3e58:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    3e5b:	8b 51 34             	mov    0x34(%ecx),%edx
    3e5e:	01 d0                	add    %edx,%eax
    3e60:	31 d2                	xor    %edx,%edx
    3e62:	52                   	push   %edx
    3e63:	8b 0f                	mov    (%edi),%ecx
    3e65:	50                   	push   %eax
    3e66:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    3e69:	51                   	push   %ecx
    3e6a:	50                   	push   %eax
    3e6b:	e8 70 25 00 00       	call   63e0 <block_get>
    3e70:	83 c4 20             	add    $0x20,%esp
    3e73:	89 c7                	mov    %eax,%edi
    3e75:	85 c0                	test   %eax,%eax
    3e77:	74 0f                	je     3e88 <mfs_put_inode+0x68>
    3e79:	8d 65 f4             	lea    -0xc(%ebp),%esp
    3e7c:	89 f8                	mov    %edi,%eax
    3e7e:	5b                   	pop    %ebx
    3e7f:	5e                   	pop    %esi
    3e80:	5f                   	pop    %edi
    3e81:	5d                   	pop    %ebp
    3e82:	c3                   	ret    
    3e83:	90                   	nop
    3e84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3e88:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    3e8b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3e8e:	c1 e0 06             	shl    $0x6,%eax
    3e91:	8b 51 58             	mov    0x58(%ecx),%edx
    3e94:	51                   	push   %ecx
    3e95:	01 d0                	add    %edx,%eax
    3e97:	51                   	push   %ecx
    3e98:	89 45 cc             	mov    %eax,-0x34(%ebp)
    3e9b:	89 f0                	mov    %esi,%eax
    3e9d:	25 ff 00 00 00       	and    $0xff,%eax
    3ea2:	89 c2                	mov    %eax,%edx
    3ea4:	31 c0                	xor    %eax,%eax
    3ea6:	66 8b 03             	mov    (%ebx),%ax
    3ea9:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    3eac:	50                   	push   %eax
    3ead:	52                   	push   %edx
    3eae:	e8 ed 19 00 00       	call   58a0 <conv16>
    3eb3:	8b 75 cc             	mov    -0x34(%ebp),%esi
    3eb6:	66 89 06             	mov    %ax,(%esi)
    3eb9:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    3ebc:	58                   	pop    %eax
    3ebd:	31 c0                	xor    %eax,%eax
    3ebf:	66 8b 43 02          	mov    0x2(%ebx),%ax
    3ec3:	5a                   	pop    %edx
    3ec4:	50                   	push   %eax
    3ec5:	51                   	push   %ecx
    3ec6:	e8 d5 19 00 00       	call   58a0 <conv16>
    3ecb:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    3ece:	66 89 46 02          	mov    %ax,0x2(%esi)
    3ed2:	58                   	pop    %eax
    3ed3:	31 c0                	xor    %eax,%eax
    3ed5:	66 8b 43 04          	mov    0x4(%ebx),%ax
    3ed9:	5a                   	pop    %edx
    3eda:	50                   	push   %eax
    3edb:	51                   	push   %ecx
    3edc:	e8 bf 19 00 00       	call   58a0 <conv16>
    3ee1:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    3ee4:	66 89 46 04          	mov    %ax,0x4(%esi)
    3ee8:	58                   	pop    %eax
    3ee9:	31 c0                	xor    %eax,%eax
    3eeb:	66 8b 43 06          	mov    0x6(%ebx),%ax
    3eef:	5a                   	pop    %edx
    3ef0:	50                   	push   %eax
    3ef1:	51                   	push   %ecx
    3ef2:	e8 a9 19 00 00       	call   58a0 <conv16>
    3ef7:	8b 4b 08             	mov    0x8(%ebx),%ecx
    3efa:	66 89 46 06          	mov    %ax,0x6(%esi)
    3efe:	58                   	pop    %eax
    3eff:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3f02:	5a                   	pop    %edx
    3f03:	51                   	push   %ecx
    3f04:	50                   	push   %eax
    3f05:	e8 b6 19 00 00       	call   58c0 <conv32>
    3f0a:	89 46 08             	mov    %eax,0x8(%esi)
    3f0d:	8b 4b 0c             	mov    0xc(%ebx),%ecx
    3f10:	58                   	pop    %eax
    3f11:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3f14:	5a                   	pop    %edx
    3f15:	51                   	push   %ecx
    3f16:	50                   	push   %eax
    3f17:	e8 a4 19 00 00       	call   58c0 <conv32>
    3f1c:	89 46 0c             	mov    %eax,0xc(%esi)
    3f1f:	8b 4b 10             	mov    0x10(%ebx),%ecx
    3f22:	58                   	pop    %eax
    3f23:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3f26:	5a                   	pop    %edx
    3f27:	51                   	push   %ecx
    3f28:	50                   	push   %eax
    3f29:	e8 92 19 00 00       	call   58c0 <conv32>
    3f2e:	89 46 10             	mov    %eax,0x10(%esi)
    3f31:	8b 4b 14             	mov    0x14(%ebx),%ecx
    3f34:	58                   	pop    %eax
    3f35:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3f38:	5a                   	pop    %edx
    3f39:	51                   	push   %ecx
    3f3a:	50                   	push   %eax
    3f3b:	e8 80 19 00 00       	call   58c0 <conv32>
    3f40:	83 c4 10             	add    $0x10,%esp
    3f43:	89 46 14             	mov    %eax,0x14(%esi)
    3f46:	31 c9                	xor    %ecx,%ecx
    3f48:	56                   	push   %esi
    3f49:	56                   	push   %esi
    3f4a:	8b 44 8b 18          	mov    0x18(%ebx,%ecx,4),%eax
    3f4e:	89 4d d0             	mov    %ecx,-0x30(%ebp)
    3f51:	50                   	push   %eax
    3f52:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3f55:	50                   	push   %eax
    3f56:	e8 65 19 00 00       	call   58c0 <conv32>
    3f5b:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    3f5e:	8b 55 cc             	mov    -0x34(%ebp),%edx
    3f61:	83 c4 10             	add    $0x10,%esp
    3f64:	89 44 8a 18          	mov    %eax,0x18(%edx,%ecx,4)
    3f68:	41                   	inc    %ecx
    3f69:	83 f9 07             	cmp    $0x7,%ecx
    3f6c:	75 da                	jne    3f48 <mfs_put_inode+0x128>
    3f6e:	50                   	push   %eax
    3f6f:	50                   	push   %eax
    3f70:	8b 54 bb 34          	mov    0x34(%ebx,%edi,4),%edx
    3f74:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    3f77:	52                   	push   %edx
    3f78:	51                   	push   %ecx
    3f79:	e8 42 19 00 00       	call   58c0 <conv32>
    3f7e:	8b 55 cc             	mov    -0x34(%ebp),%edx
    3f81:	83 c4 10             	add    $0x10,%esp
    3f84:	89 44 ba 34          	mov    %eax,0x34(%edx,%edi,4)
    3f88:	47                   	inc    %edi
    3f89:	83 ff 03             	cmp    $0x3,%edi
    3f8c:	75 e0                	jne    3f6e <mfs_put_inode+0x14e>
    3f8e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    3f91:	83 ec 0c             	sub    $0xc,%esp
    3f94:	c6 40 14 01          	movb   $0x1,0x14(%eax)
    3f98:	50                   	push   %eax
    3f99:	e8 42 21 00 00       	call   60e0 <block_put>
    3f9e:	c6 43 40 00          	movb   $0x0,0x40(%ebx)
    3fa2:	83 c4 10             	add    $0x10,%esp
    3fa5:	8d 65 f4             	lea    -0xc(%ebp),%esp
    3fa8:	89 c7                	mov    %eax,%edi
    3faa:	5b                   	pop    %ebx
    3fab:	89 f8                	mov    %edi,%eax
    3fad:	5e                   	pop    %esi
    3fae:	5f                   	pop    %edi
    3faf:	5d                   	pop    %ebp
    3fb0:	c3                   	ret    
    3fb1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3fb8:	83 ec 0c             	sub    $0xc,%esp
    3fbb:	8a 51 3d             	mov    0x3d(%ecx),%dl
    3fbe:	48                   	dec    %eax
    3fbf:	88 55 d4             	mov    %dl,-0x2c(%ebp)
    3fc2:	6a 00                	push   $0x0
    3fc4:	31 d2                	xor    %edx,%edx
    3fc6:	f7 71 2c             	divl   0x2c(%ecx)
    3fc9:	89 d6                	mov    %edx,%esi
    3fcb:	8b 51 34             	mov    0x34(%ecx),%edx
    3fce:	01 d0                	add    %edx,%eax
    3fd0:	31 d2                	xor    %edx,%edx
    3fd2:	52                   	push   %edx
    3fd3:	8b 0f                	mov    (%edi),%ecx
    3fd5:	50                   	push   %eax
    3fd6:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    3fd9:	51                   	push   %ecx
    3fda:	50                   	push   %eax
    3fdb:	e8 00 24 00 00       	call   63e0 <block_get>
    3fe0:	83 c4 20             	add    $0x20,%esp
    3fe3:	89 c7                	mov    %eax,%edi
    3fe5:	85 c0                	test   %eax,%eax
    3fe7:	0f 85 8c fe ff ff    	jne    3e79 <mfs_put_inode+0x59>
    3fed:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    3ff0:	89 f0                	mov    %esi,%eax
    3ff2:	c1 e0 05             	shl    $0x5,%eax
    3ff5:	8b 51 58             	mov    0x58(%ecx),%edx
    3ff8:	51                   	push   %ecx
    3ff9:	01 d0                	add    %edx,%eax
    3ffb:	51                   	push   %ecx
    3ffc:	89 c6                	mov    %eax,%esi
    3ffe:	8a 45 d4             	mov    -0x2c(%ebp),%al
    4001:	25 ff 00 00 00       	and    $0xff,%eax
    4006:	89 c2                	mov    %eax,%edx
    4008:	31 c0                	xor    %eax,%eax
    400a:	66 8b 03             	mov    (%ebx),%ax
    400d:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    4010:	50                   	push   %eax
    4011:	52                   	push   %edx
    4012:	e8 89 18 00 00       	call   58a0 <conv16>
    4017:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    401a:	66 89 06             	mov    %ax,(%esi)
    401d:	58                   	pop    %eax
    401e:	31 c0                	xor    %eax,%eax
    4020:	66 8b 43 04          	mov    0x4(%ebx),%ax
    4024:	5a                   	pop    %edx
    4025:	50                   	push   %eax
    4026:	51                   	push   %ecx
    4027:	e8 74 18 00 00       	call   58a0 <conv16>
    402c:	66 89 46 02          	mov    %ax,0x2(%esi)
    4030:	8a 43 06             	mov    0x6(%ebx),%al
    4033:	88 46 0c             	mov    %al,0xc(%esi)
    4036:	8a 43 02             	mov    0x2(%ebx),%al
    4039:	88 46 0d             	mov    %al,0xd(%esi)
    403c:	58                   	pop    %eax
    403d:	8b 4b 08             	mov    0x8(%ebx),%ecx
    4040:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    4043:	5a                   	pop    %edx
    4044:	51                   	push   %ecx
    4045:	50                   	push   %eax
    4046:	e8 75 18 00 00       	call   58c0 <conv32>
    404b:	8b 4b 10             	mov    0x10(%ebx),%ecx
    404e:	89 46 04             	mov    %eax,0x4(%esi)
    4051:	58                   	pop    %eax
    4052:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    4055:	5a                   	pop    %edx
    4056:	51                   	push   %ecx
    4057:	50                   	push   %eax
    4058:	e8 63 18 00 00       	call   58c0 <conv32>
    405d:	83 c4 10             	add    $0x10,%esp
    4060:	89 46 08             	mov    %eax,0x8(%esi)
    4063:	90                   	nop
    4064:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4068:	31 c0                	xor    %eax,%eax
    406a:	51                   	push   %ecx
    406b:	51                   	push   %ecx
    406c:	66 8b 44 bb 18       	mov    0x18(%ebx,%edi,4),%ax
    4071:	50                   	push   %eax
    4072:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    4075:	50                   	push   %eax
    4076:	e8 25 18 00 00       	call   58a0 <conv16>
    407b:	66 89 44 7e 0e       	mov    %ax,0xe(%esi,%edi,2)
    4080:	47                   	inc    %edi
    4081:	83 c4 10             	add    $0x10,%esp
    4084:	83 ff 07             	cmp    $0x7,%edi
    4087:	75 df                	jne    4068 <mfs_put_inode+0x248>
    4089:	31 c0                	xor    %eax,%eax
    408b:	57                   	push   %edi
    408c:	57                   	push   %edi
    408d:	8b 7d d4             	mov    -0x2c(%ebp),%edi
    4090:	66 8b 43 34          	mov    0x34(%ebx),%ax
    4094:	50                   	push   %eax
    4095:	57                   	push   %edi
    4096:	e8 05 18 00 00       	call   58a0 <conv16>
    409b:	66 89 46 1c          	mov    %ax,0x1c(%esi)
    409f:	58                   	pop    %eax
    40a0:	31 c0                	xor    %eax,%eax
    40a2:	66 8b 43 38          	mov    0x38(%ebx),%ax
    40a6:	5a                   	pop    %edx
    40a7:	50                   	push   %eax
    40a8:	57                   	push   %edi
    40a9:	e8 f2 17 00 00       	call   58a0 <conv16>
    40ae:	66 89 46 1e          	mov    %ax,0x1e(%esi)
    40b2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    40b5:	c6 40 14 01          	movb   $0x1,0x14(%eax)
    40b9:	89 04 24             	mov    %eax,(%esp)
    40bc:	e8 1f 20 00 00       	call   60e0 <block_put>
    40c1:	c6 43 40 00          	movb   $0x0,0x40(%ebx)
    40c5:	89 c7                	mov    %eax,%edi
    40c7:	83 c4 10             	add    $0x10,%esp
    40ca:	e9 aa fd ff ff       	jmp    3e79 <mfs_put_inode+0x59>
    40cf:	90                   	nop

000040d0 <mfs_inode_shrink>:
    40d0:	55                   	push   %ebp
    40d1:	89 e5                	mov    %esp,%ebp
    40d3:	57                   	push   %edi
    40d4:	56                   	push   %esi
    40d5:	53                   	push   %ebx
    40d6:	83 ec 2c             	sub    $0x2c,%esp
    40d9:	8b 7d 0c             	mov    0xc(%ebp),%edi
    40dc:	85 ff                	test   %edi,%edi
    40de:	0f 84 a4 00 00 00    	je     4188 <mfs_inode_shrink+0xb8>
    40e4:	8b 45 08             	mov    0x8(%ebp),%eax
    40e7:	8b 30                	mov    (%eax),%esi
    40e9:	8b 46 08             	mov    0x8(%esi),%eax
    40ec:	89 45 cc             	mov    %eax,-0x34(%ebp)
    40ef:	39 45 0c             	cmp    %eax,0xc(%ebp)
    40f2:	0f 87 c2 00 00 00    	ja     41ba <mfs_inode_shrink+0xea>
    40f8:	8b 45 08             	mov    0x8(%ebp),%eax
    40fb:	31 d2                	xor    %edx,%edx
    40fd:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
    4104:	8b 40 04             	mov    0x4(%eax),%eax
    4107:	8b 40 04             	mov    0x4(%eax),%eax
    410a:	8b 78 18             	mov    0x18(%eax),%edi
    410d:	8b 45 0c             	mov    0xc(%ebp),%eax
    4110:	f7 f7                	div    %edi
    4112:	83 fa 01             	cmp    $0x1,%edx
    4115:	8b 55 cc             	mov    -0x34(%ebp),%edx
    4118:	83 d8 ff             	sbb    $0xffffffff,%eax
    411b:	c6 46 40 01          	movb   $0x1,0x40(%esi)
    411f:	89 45 d0             	mov    %eax,-0x30(%ebp)
    4122:	8d 5a ff             	lea    -0x1(%edx),%ebx
    4125:	85 c0                	test   %eax,%eax
    4127:	75 18                	jne    4141 <mfs_inode_shrink+0x71>
    4129:	eb 6d                	jmp    4198 <mfs_inode_shrink+0xc8>
    412b:	90                   	nop
    412c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4130:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    4133:	29 fb                	sub    %edi,%ebx
    4135:	40                   	inc    %eax
    4136:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    4139:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    413c:	39 45 d0             	cmp    %eax,-0x30(%ebp)
    413f:	74 57                	je     4198 <mfs_inode_shrink+0xc8>
    4141:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    4144:	50                   	push   %eax
    4145:	8b 45 08             	mov    0x8(%ebp),%eax
    4148:	6a 00                	push   $0x0
    414a:	53                   	push   %ebx
    414b:	50                   	push   %eax
    414c:	e8 ef 03 00 00       	call   4540 <mfs_write_map>
    4151:	83 c4 10             	add    $0x10,%esp
    4154:	85 c0                	test   %eax,%eax
    4156:	75 25                	jne    417d <mfs_inode_shrink+0xad>
    4158:	8b 46 08             	mov    0x8(%esi),%eax
    415b:	29 f8                	sub    %edi,%eax
    415d:	89 46 08             	mov    %eax,0x8(%esi)
    4160:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4163:	85 c0                	test   %eax,%eax
    4165:	74 c9                	je     4130 <mfs_inode_shrink+0x60>
    4167:	52                   	push   %edx
    4168:	52                   	push   %edx
    4169:	50                   	push   %eax
    416a:	8b 45 08             	mov    0x8(%ebp),%eax
    416d:	8b 48 04             	mov    0x4(%eax),%ecx
    4170:	51                   	push   %ecx
    4171:	e8 da 15 00 00       	call   5750 <mfs_free_zone>
    4176:	83 c4 10             	add    $0x10,%esp
    4179:	85 c0                	test   %eax,%eax
    417b:	74 b3                	je     4130 <mfs_inode_shrink+0x60>
    417d:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4180:	5b                   	pop    %ebx
    4181:	5e                   	pop    %esi
    4182:	5f                   	pop    %edi
    4183:	5d                   	pop    %ebp
    4184:	c3                   	ret    
    4185:	8d 76 00             	lea    0x0(%esi),%esi
    4188:	8d 65 f4             	lea    -0xc(%ebp),%esp
    418b:	31 c0                	xor    %eax,%eax
    418d:	5b                   	pop    %ebx
    418e:	5e                   	pop    %esi
    418f:	5f                   	pop    %edi
    4190:	5d                   	pop    %ebp
    4191:	c3                   	ret    
    4192:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4198:	8b 45 cc             	mov    -0x34(%ebp),%eax
    419b:	8b 55 0c             	mov    0xc(%ebp),%edx
    419e:	8b 5d 08             	mov    0x8(%ebp),%ebx
    41a1:	29 d0                	sub    %edx,%eax
    41a3:	89 46 08             	mov    %eax,0x8(%esi)
    41a6:	51                   	push   %ecx
    41a7:	51                   	push   %ecx
    41a8:	50                   	push   %eax
    41a9:	53                   	push   %ebx
    41aa:	e8 41 07 00 00       	call   48f0 <mfs_prune_ind_zones>
    41af:	83 c4 10             	add    $0x10,%esp
    41b2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    41b5:	5b                   	pop    %ebx
    41b6:	5e                   	pop    %esi
    41b7:	5f                   	pop    %edi
    41b8:	5d                   	pop    %ebp
    41b9:	c3                   	ret    
    41ba:	56                   	push   %esi
    41bb:	68 4f 01 00 00       	push   $0x14f
    41c0:	68 59 88 00 00       	push   $0x8859
    41c5:	68 65 88 00 00       	push   $0x8865
    41ca:	e8 e1 4c 00 00       	call   8eb0 <assert_abort@plt>
    41cf:	90                   	nop

000041d0 <read_ind_zone.isra.2>:
    41d0:	55                   	push   %ebp
    41d1:	89 e5                	mov    %esp,%ebp
    41d3:	57                   	push   %edi
    41d4:	56                   	push   %esi
    41d5:	53                   	push   %ebx
    41d6:	83 ec 38             	sub    $0x38,%esp
    41d9:	89 c3                	mov    %eax,%ebx
    41db:	8b 75 08             	mov    0x8(%ebp),%esi
    41de:	89 d7                	mov    %edx,%edi
    41e0:	68 00 20 00 00       	push   $0x2000
    41e5:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    41e8:	e8 03 4c 00 00       	call   8df0 <malloc@plt>
    41ed:	83 c4 10             	add    $0x10,%esp
    41f0:	89 06                	mov    %eax,(%esi)
    41f2:	85 c0                	test   %eax,%eax
    41f4:	0f 84 ea 00 00 00    	je     42e4 <read_ind_zone.isra.2+0x114>
    41fa:	83 ec 0c             	sub    $0xc,%esp
    41fd:	31 d2                	xor    %edx,%edx
    41ff:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    4202:	6a 00                	push   $0x0
    4204:	52                   	push   %edx
    4205:	8b 03                	mov    (%ebx),%eax
    4207:	51                   	push   %ecx
    4208:	50                   	push   %eax
    4209:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    420c:	50                   	push   %eax
    420d:	e8 ce 21 00 00       	call   63e0 <block_get>
    4212:	83 c4 20             	add    $0x20,%esp
    4215:	85 c0                	test   %eax,%eax
    4217:	0f 85 ab 00 00 00    	jne    42c8 <read_ind_zone.isra.2+0xf8>
    421d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4220:	8b 4f 18             	mov    0x18(%edi),%ecx
    4223:	83 7f 28 01          	cmpl   $0x1,0x28(%edi)
    4227:	8b 50 58             	mov    0x58(%eax),%edx
    422a:	89 55 d0             	mov    %edx,-0x30(%ebp)
    422d:	74 51                	je     4280 <read_ind_zone.isra.2+0xb0>
    422f:	c1 e9 02             	shr    $0x2,%ecx
    4232:	74 36                	je     426a <read_ind_zone.isra.2+0x9a>
    4234:	31 db                	xor    %ebx,%ebx
    4236:	66 90                	xchg   %ax,%ax
    4238:	8b 06                	mov    (%esi),%eax
    423a:	8d 0c 98             	lea    (%eax,%ebx,4),%ecx
    423d:	50                   	push   %eax
    423e:	50                   	push   %eax
    423f:	8b 45 d0             	mov    -0x30(%ebp),%eax
    4242:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    4245:	8b 14 98             	mov    (%eax,%ebx,4),%edx
    4248:	31 c0                	xor    %eax,%eax
    424a:	8a 47 3d             	mov    0x3d(%edi),%al
    424d:	52                   	push   %edx
    424e:	50                   	push   %eax
    424f:	e8 6c 16 00 00       	call   58c0 <conv32>
    4254:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    4257:	43                   	inc    %ebx
    4258:	83 c4 10             	add    $0x10,%esp
    425b:	89 01                	mov    %eax,(%ecx)
    425d:	8b 47 18             	mov    0x18(%edi),%eax
    4260:	c1 e8 02             	shr    $0x2,%eax
    4263:	39 c3                	cmp    %eax,%ebx
    4265:	72 d1                	jb     4238 <read_ind_zone.isra.2+0x68>
    4267:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    426a:	83 ec 0c             	sub    $0xc,%esp
    426d:	50                   	push   %eax
    426e:	e8 6d 1e 00 00       	call   60e0 <block_put>
    4273:	83 c4 10             	add    $0x10,%esp
    4276:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4279:	5b                   	pop    %ebx
    427a:	5e                   	pop    %esi
    427b:	5f                   	pop    %edi
    427c:	5d                   	pop    %ebp
    427d:	c3                   	ret    
    427e:	66 90                	xchg   %ax,%ax
    4280:	d1 e9                	shr    %ecx
    4282:	74 e6                	je     426a <read_ind_zone.isra.2+0x9a>
    4284:	31 db                	xor    %ebx,%ebx
    4286:	66 90                	xchg   %ax,%ax
    4288:	8b 06                	mov    (%esi),%eax
    428a:	8b 55 d0             	mov    -0x30(%ebp),%edx
    428d:	8d 0c 98             	lea    (%eax,%ebx,4),%ecx
    4290:	31 c0                	xor    %eax,%eax
    4292:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    4295:	51                   	push   %ecx
    4296:	51                   	push   %ecx
    4297:	66 8b 04 5a          	mov    (%edx,%ebx,2),%ax
    429b:	43                   	inc    %ebx
    429c:	50                   	push   %eax
    429d:	31 c0                	xor    %eax,%eax
    429f:	8a 47 3d             	mov    0x3d(%edi),%al
    42a2:	50                   	push   %eax
    42a3:	e8 f8 15 00 00       	call   58a0 <conv16>
    42a8:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    42ab:	89 c2                	mov    %eax,%edx
    42ad:	31 c0                	xor    %eax,%eax
    42af:	83 c4 10             	add    $0x10,%esp
    42b2:	66 89 d0             	mov    %dx,%ax
    42b5:	89 01                	mov    %eax,(%ecx)
    42b7:	8b 47 18             	mov    0x18(%edi),%eax
    42ba:	d1 e8                	shr    %eax
    42bc:	39 c3                	cmp    %eax,%ebx
    42be:	72 c8                	jb     4288 <read_ind_zone.isra.2+0xb8>
    42c0:	eb a5                	jmp    4267 <read_ind_zone.isra.2+0x97>
    42c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    42c8:	83 ec 0c             	sub    $0xc,%esp
    42cb:	8b 1e                	mov    (%esi),%ebx
    42cd:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    42d0:	53                   	push   %ebx
    42d1:	e8 da 4d 00 00       	call   90b0 <free@plt>
    42d6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    42d9:	83 c4 10             	add    $0x10,%esp
    42dc:	8d 65 f4             	lea    -0xc(%ebp),%esp
    42df:	5b                   	pop    %ebx
    42e0:	5e                   	pop    %esi
    42e1:	5f                   	pop    %edi
    42e2:	5d                   	pop    %ebp
    42e3:	c3                   	ret    
    42e4:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    42e9:	eb 8b                	jmp    4276 <read_ind_zone.isra.2+0xa6>
    42eb:	90                   	nop
    42ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000042f0 <write_ind_zone.isra.3>:
    42f0:	55                   	push   %ebp
    42f1:	89 e5                	mov    %esp,%ebp
    42f3:	57                   	push   %edi
    42f4:	56                   	push   %esi
    42f5:	53                   	push   %ebx
    42f6:	83 ec 38             	sub    $0x38,%esp
    42f9:	89 d3                	mov    %edx,%ebx
    42fb:	31 d2                	xor    %edx,%edx
    42fd:	8b 75 08             	mov    0x8(%ebp),%esi
    4300:	6a 01                	push   $0x1
    4302:	52                   	push   %edx
    4303:	51                   	push   %ecx
    4304:	50                   	push   %eax
    4305:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    4308:	50                   	push   %eax
    4309:	e8 d2 20 00 00       	call   63e0 <block_get>
    430e:	83 c4 20             	add    $0x20,%esp
    4311:	85 c0                	test   %eax,%eax
    4313:	75 53                	jne    4368 <write_ind_zone.isra.3+0x78>
    4315:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4318:	8b 53 18             	mov    0x18(%ebx),%edx
    431b:	83 7b 28 01          	cmpl   $0x1,0x28(%ebx)
    431f:	8b 48 58             	mov    0x58(%eax),%ecx
    4322:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    4325:	74 49                	je     4370 <write_ind_zone.isra.3+0x80>
    4327:	c1 ea 02             	shr    $0x2,%edx
    432a:	74 2c                	je     4358 <write_ind_zone.isra.3+0x68>
    432c:	31 ff                	xor    %edi,%edi
    432e:	66 90                	xchg   %ax,%ax
    4330:	50                   	push   %eax
    4331:	50                   	push   %eax
    4332:	31 c0                	xor    %eax,%eax
    4334:	8b 14 be             	mov    (%esi,%edi,4),%edx
    4337:	8a 43 3d             	mov    0x3d(%ebx),%al
    433a:	52                   	push   %edx
    433b:	50                   	push   %eax
    433c:	e8 7f 15 00 00       	call   58c0 <conv32>
    4341:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    4344:	83 c4 10             	add    $0x10,%esp
    4347:	89 04 ba             	mov    %eax,(%edx,%edi,4)
    434a:	47                   	inc    %edi
    434b:	8b 43 18             	mov    0x18(%ebx),%eax
    434e:	c1 e8 02             	shr    $0x2,%eax
    4351:	39 c7                	cmp    %eax,%edi
    4353:	72 db                	jb     4330 <write_ind_zone.isra.3+0x40>
    4355:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4358:	83 ec 0c             	sub    $0xc,%esp
    435b:	c6 40 14 01          	movb   $0x1,0x14(%eax)
    435f:	50                   	push   %eax
    4360:	e8 7b 1d 00 00       	call   60e0 <block_put>
    4365:	83 c4 10             	add    $0x10,%esp
    4368:	8d 65 f4             	lea    -0xc(%ebp),%esp
    436b:	5b                   	pop    %ebx
    436c:	5e                   	pop    %esi
    436d:	5f                   	pop    %edi
    436e:	5d                   	pop    %ebp
    436f:	c3                   	ret    
    4370:	d1 ea                	shr    %edx
    4372:	74 e4                	je     4358 <write_ind_zone.isra.3+0x68>
    4374:	31 ff                	xor    %edi,%edi
    4376:	66 90                	xchg   %ax,%ax
    4378:	31 c0                	xor    %eax,%eax
    437a:	51                   	push   %ecx
    437b:	51                   	push   %ecx
    437c:	66 8b 04 be          	mov    (%esi,%edi,4),%ax
    4380:	50                   	push   %eax
    4381:	31 c0                	xor    %eax,%eax
    4383:	8a 43 3d             	mov    0x3d(%ebx),%al
    4386:	50                   	push   %eax
    4387:	e8 14 15 00 00       	call   58a0 <conv16>
    438c:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    438f:	83 c4 10             	add    $0x10,%esp
    4392:	66 89 04 79          	mov    %ax,(%ecx,%edi,2)
    4396:	8b 43 18             	mov    0x18(%ebx),%eax
    4399:	d1 e8                	shr    %eax
    439b:	47                   	inc    %edi
    439c:	39 c7                	cmp    %eax,%edi
    439e:	72 d8                	jb     4378 <write_ind_zone.isra.3+0x88>
    43a0:	eb b3                	jmp    4355 <write_ind_zone.isra.3+0x65>
    43a2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    43a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000043b0 <mfs_read_map>:
    43b0:	55                   	push   %ebp
    43b1:	31 d2                	xor    %edx,%edx
    43b3:	89 e5                	mov    %esp,%ebp
    43b5:	57                   	push   %edi
    43b6:	56                   	push   %esi
    43b7:	53                   	push   %ebx
    43b8:	83 ec 2c             	sub    $0x2c,%esp
    43bb:	8b 45 0c             	mov    0xc(%ebp),%eax
    43be:	8b 70 04             	mov    0x4(%eax),%esi
    43c1:	8b 38                	mov    (%eax),%edi
    43c3:	8b 5e 04             	mov    0x4(%esi),%ebx
    43c6:	8b 47 08             	mov    0x8(%edi),%eax
    43c9:	8b 4b 18             	mov    0x18(%ebx),%ecx
    43cc:	f7 f1                	div    %ecx
    43ce:	85 d2                	test   %edx,%edx
    43d0:	0f 95 c2             	setne  %dl
    43d3:	81 e2 ff 00 00 00    	and    $0xff,%edx
    43d9:	01 d0                	add    %edx,%eax
    43db:	0f af c1             	imul   %ecx,%eax
    43de:	39 45 10             	cmp    %eax,0x10(%ebp)
    43e1:	76 15                	jbe    43f8 <mfs_read_map+0x48>
    43e3:	8b 45 08             	mov    0x8(%ebp),%eax
    43e6:	31 ff                	xor    %edi,%edi
    43e8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    43ee:	8d 65 f4             	lea    -0xc(%ebp),%esp
    43f1:	89 f8                	mov    %edi,%eax
    43f3:	5b                   	pop    %ebx
    43f4:	5e                   	pop    %esi
    43f5:	5f                   	pop    %edi
    43f6:	5d                   	pop    %ebp
    43f7:	c3                   	ret    
    43f8:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    43ff:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    4406:	83 7b 28 01          	cmpl   $0x1,0x28(%ebx)
    440a:	74 6c                	je     4478 <mfs_read_map+0xc8>
    440c:	89 c8                	mov    %ecx,%eax
    440e:	c1 e8 02             	shr    $0x2,%eax
    4411:	89 45 d0             	mov    %eax,-0x30(%ebp)
    4414:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    4417:	31 d2                	xor    %edx,%edx
    4419:	8b 45 10             	mov    0x10(%ebp),%eax
    441c:	f7 f1                	div    %ecx
    441e:	83 f8 06             	cmp    $0x6,%eax
    4421:	7e 45                	jle    4468 <mfs_read_map+0xb8>
    4423:	83 e8 07             	sub    $0x7,%eax
    4426:	89 45 cc             	mov    %eax,-0x34(%ebp)
    4429:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
    442c:	7d 5a                	jge    4488 <mfs_read_map+0xd8>
    442e:	8b 4f 34             	mov    0x34(%edi),%ecx
    4431:	85 c9                	test   %ecx,%ecx
    4433:	0f 85 9f 00 00 00    	jne    44d8 <mfs_read_map+0x128>
    4439:	8b 45 08             	mov    0x8(%ebp),%eax
    443c:	31 ff                	xor    %edi,%edi
    443e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    4444:	31 c0                	xor    %eax,%eax
    4446:	83 ec 0c             	sub    $0xc,%esp
    4449:	50                   	push   %eax
    444a:	e8 61 4c 00 00       	call   90b0 <free@plt>
    444f:	8b 55 e0             	mov    -0x20(%ebp),%edx
    4452:	58                   	pop    %eax
    4453:	52                   	push   %edx
    4454:	e8 57 4c 00 00       	call   90b0 <free@plt>
    4459:	83 c4 10             	add    $0x10,%esp
    445c:	8d 65 f4             	lea    -0xc(%ebp),%esp
    445f:	89 f8                	mov    %edi,%eax
    4461:	5b                   	pop    %ebx
    4462:	5e                   	pop    %esi
    4463:	5f                   	pop    %edi
    4464:	5d                   	pop    %ebp
    4465:	c3                   	ret    
    4466:	66 90                	xchg   %ax,%ax
    4468:	8b 75 08             	mov    0x8(%ebp),%esi
    446b:	8b 44 87 18          	mov    0x18(%edi,%eax,4),%eax
    446f:	31 ff                	xor    %edi,%edi
    4471:	89 06                	mov    %eax,(%esi)
    4473:	31 c0                	xor    %eax,%eax
    4475:	eb cf                	jmp    4446 <mfs_read_map+0x96>
    4477:	90                   	nop
    4478:	c7 45 d4 00 02 00 00 	movl   $0x200,-0x2c(%ebp)
    447f:	c7 45 d0 00 02 00 00 	movl   $0x200,-0x30(%ebp)
    4486:	eb 8f                	jmp    4417 <mfs_read_map+0x67>
    4488:	8b 4f 38             	mov    0x38(%edi),%ecx
    448b:	85 c9                	test   %ecx,%ecx
    448d:	74 aa                	je     4439 <mfs_read_map+0x89>
    448f:	83 ec 0c             	sub    $0xc,%esp
    4492:	8d 45 e0             	lea    -0x20(%ebp),%eax
    4495:	89 da                	mov    %ebx,%edx
    4497:	50                   	push   %eax
    4498:	89 f0                	mov    %esi,%eax
    449a:	e8 31 fd ff ff       	call   41d0 <read_ind_zone.isra.2>
    449f:	83 c4 10             	add    $0x10,%esp
    44a2:	89 c7                	mov    %eax,%edi
    44a4:	85 c0                	test   %eax,%eax
    44a6:	75 28                	jne    44d0 <mfs_read_map+0x120>
    44a8:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
    44ab:	8b 45 cc             	mov    -0x34(%ebp),%eax
    44ae:	29 d8                	sub    %ebx,%eax
    44b0:	89 c2                	mov    %eax,%edx
    44b2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    44b5:	c1 fa 1f             	sar    $0x1f,%edx
    44b8:	f7 fb                	idiv   %ebx
    44ba:	89 c3                	mov    %eax,%ebx
    44bc:	8b 45 e0             	mov    -0x20(%ebp),%eax
    44bf:	8b 04 98             	mov    (%eax,%ebx,4),%eax
    44c2:	85 c0                	test   %eax,%eax
    44c4:	75 3b                	jne    4501 <mfs_read_map+0x151>
    44c6:	8b 45 08             	mov    0x8(%ebp),%eax
    44c9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    44cf:	90                   	nop
    44d0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    44d3:	e9 6e ff ff ff       	jmp    4446 <mfs_read_map+0x96>
    44d8:	83 ec 0c             	sub    $0xc,%esp
    44db:	8d 45 e0             	lea    -0x20(%ebp),%eax
    44de:	89 da                	mov    %ebx,%edx
    44e0:	50                   	push   %eax
    44e1:	89 f0                	mov    %esi,%eax
    44e3:	e8 e8 fc ff ff       	call   41d0 <read_ind_zone.isra.2>
    44e8:	83 c4 10             	add    $0x10,%esp
    44eb:	89 c7                	mov    %eax,%edi
    44ed:	85 c0                	test   %eax,%eax
    44ef:	75 df                	jne    44d0 <mfs_read_map+0x120>
    44f1:	8b 75 cc             	mov    -0x34(%ebp),%esi
    44f4:	8b 45 e0             	mov    -0x20(%ebp),%eax
    44f7:	8b 04 b0             	mov    (%eax,%esi,4),%eax
    44fa:	8b 75 08             	mov    0x8(%ebp),%esi
    44fd:	89 06                	mov    %eax,(%esi)
    44ff:	eb cf                	jmp    44d0 <mfs_read_map+0x120>
    4501:	83 ec 0c             	sub    $0xc,%esp
    4504:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    4507:	8b 56 04             	mov    0x4(%esi),%edx
    450a:	51                   	push   %ecx
    450b:	89 c1                	mov    %eax,%ecx
    450d:	89 f0                	mov    %esi,%eax
    450f:	e8 bc fc ff ff       	call   41d0 <read_ind_zone.isra.2>
    4514:	83 c4 10             	add    $0x10,%esp
    4517:	89 c7                	mov    %eax,%edi
    4519:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    451c:	85 ff                	test   %edi,%edi
    451e:	0f 85 22 ff ff ff    	jne    4446 <mfs_read_map+0x96>
    4524:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    4527:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    452a:	0f af d9             	imul   %ecx,%ebx
    452d:	29 da                	sub    %ebx,%edx
    452f:	8b 75 08             	mov    0x8(%ebp),%esi
    4532:	8b 14 90             	mov    (%eax,%edx,4),%edx
    4535:	89 16                	mov    %edx,(%esi)
    4537:	e9 0a ff ff ff       	jmp    4446 <mfs_read_map+0x96>
    453c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004540 <mfs_write_map>:
    4540:	55                   	push   %ebp
    4541:	89 e5                	mov    %esp,%ebp
    4543:	57                   	push   %edi
    4544:	56                   	push   %esi
    4545:	53                   	push   %ebx
    4546:	83 ec 2c             	sub    $0x2c,%esp
    4549:	8b 75 08             	mov    0x8(%ebp),%esi
    454c:	8b 45 0c             	mov    0xc(%ebp),%eax
    454f:	8b 7e 04             	mov    0x4(%esi),%edi
    4552:	8b 5f 04             	mov    0x4(%edi),%ebx
    4555:	39 43 1c             	cmp    %eax,0x1c(%ebx)
    4558:	0f 86 a2 01 00 00    	jbe    4700 <mfs_write_map+0x1c0>
    455e:	31 d2                	xor    %edx,%edx
    4560:	8b 4b 18             	mov    0x18(%ebx),%ecx
    4563:	f7 f1                	div    %ecx
    4565:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
    456c:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    4573:	8b 36                	mov    (%esi),%esi
    4575:	83 7b 28 01          	cmpl   $0x1,0x28(%ebx)
    4579:	0f 84 89 00 00 00    	je     4608 <mfs_write_map+0xc8>
    457f:	c1 e9 02             	shr    $0x2,%ecx
    4582:	89 4d d0             	mov    %ecx,-0x30(%ebp)
    4585:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    4588:	83 f8 06             	cmp    $0x6,%eax
    458b:	7f 3b                	jg     45c8 <mfs_write_map+0x88>
    458d:	8d 04 86             	lea    (%esi,%eax,4),%eax
    4590:	8b 7d 14             	mov    0x14(%ebp),%edi
    4593:	31 db                	xor    %ebx,%ebx
    4595:	8b 50 18             	mov    0x18(%eax),%edx
    4598:	89 17                	mov    %edx,(%edi)
    459a:	8b 55 10             	mov    0x10(%ebp),%edx
    459d:	89 50 18             	mov    %edx,0x18(%eax)
    45a0:	c6 46 40 01          	movb   $0x1,0x40(%esi)
    45a4:	31 c0                	xor    %eax,%eax
    45a6:	83 ec 0c             	sub    $0xc,%esp
    45a9:	50                   	push   %eax
    45aa:	e8 01 4b 00 00       	call   90b0 <free@plt>
    45af:	8b 55 d8             	mov    -0x28(%ebp),%edx
    45b2:	58                   	pop    %eax
    45b3:	52                   	push   %edx
    45b4:	e8 f7 4a 00 00       	call   90b0 <free@plt>
    45b9:	83 c4 10             	add    $0x10,%esp
    45bc:	8d 65 f4             	lea    -0xc(%ebp),%esp
    45bf:	89 d8                	mov    %ebx,%eax
    45c1:	5b                   	pop    %ebx
    45c2:	5e                   	pop    %esi
    45c3:	5f                   	pop    %edi
    45c4:	5d                   	pop    %ebp
    45c5:	c3                   	ret    
    45c6:	66 90                	xchg   %ax,%ax
    45c8:	83 e8 07             	sub    $0x7,%eax
    45cb:	89 45 cc             	mov    %eax,-0x34(%ebp)
    45ce:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
    45d1:	7e 4d                	jle    4620 <mfs_write_map+0xe0>
    45d3:	8b 4e 34             	mov    0x34(%esi),%ecx
    45d6:	85 c9                	test   %ecx,%ecx
    45d8:	0f 85 ca 00 00 00    	jne    46a8 <mfs_write_map+0x168>
    45de:	8b 45 10             	mov    0x10(%ebp),%eax
    45e1:	85 c0                	test   %eax,%eax
    45e3:	74 4d                	je     4632 <mfs_write_map+0xf2>
    45e5:	50                   	push   %eax
    45e6:	50                   	push   %eax
    45e7:	8d 45 e0             	lea    -0x20(%ebp),%eax
    45ea:	50                   	push   %eax
    45eb:	57                   	push   %edi
    45ec:	e8 0f 11 00 00       	call   5700 <mfs_alloc_zone>
    45f1:	83 c4 10             	add    $0x10,%esp
    45f4:	89 c3                	mov    %eax,%ebx
    45f6:	85 c0                	test   %eax,%eax
    45f8:	0f 84 92 01 00 00    	je     4790 <mfs_write_map+0x250>
    45fe:	66 90                	xchg   %ax,%ax
    4600:	8b 45 dc             	mov    -0x24(%ebp),%eax
    4603:	eb a1                	jmp    45a6 <mfs_write_map+0x66>
    4605:	8d 76 00             	lea    0x0(%esi),%esi
    4608:	c7 45 d4 00 02 00 00 	movl   $0x200,-0x2c(%ebp)
    460f:	c7 45 d0 00 02 00 00 	movl   $0x200,-0x30(%ebp)
    4616:	e9 6d ff ff ff       	jmp    4588 <mfs_write_map+0x48>
    461b:	90                   	nop
    461c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4620:	8b 4e 38             	mov    0x38(%esi),%ecx
    4623:	85 c9                	test   %ecx,%ecx
    4625:	75 21                	jne    4648 <mfs_write_map+0x108>
    4627:	8b 45 10             	mov    0x10(%ebp),%eax
    462a:	85 c0                	test   %eax,%eax
    462c:	0f 85 de 00 00 00    	jne    4710 <mfs_write_map+0x1d0>
    4632:	8b 45 14             	mov    0x14(%ebp),%eax
    4635:	31 db                	xor    %ebx,%ebx
    4637:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    463d:	31 c0                	xor    %eax,%eax
    463f:	e9 62 ff ff ff       	jmp    45a6 <mfs_write_map+0x66>
    4644:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4648:	89 da                	mov    %ebx,%edx
    464a:	83 ec 0c             	sub    $0xc,%esp
    464d:	8d 45 d8             	lea    -0x28(%ebp),%eax
    4650:	50                   	push   %eax
    4651:	89 f8                	mov    %edi,%eax
    4653:	e8 78 fb ff ff       	call   41d0 <read_ind_zone.isra.2>
    4658:	83 c4 10             	add    $0x10,%esp
    465b:	89 c3                	mov    %eax,%ebx
    465d:	85 c0                	test   %eax,%eax
    465f:	75 9f                	jne    4600 <mfs_write_map+0xc0>
    4661:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    4664:	8b 45 cc             	mov    -0x34(%ebp),%eax
    4667:	29 d0                	sub    %edx,%eax
    4669:	89 d1                	mov    %edx,%ecx
    466b:	89 c2                	mov    %eax,%edx
    466d:	89 45 cc             	mov    %eax,-0x34(%ebp)
    4670:	c1 fa 1f             	sar    $0x1f,%edx
    4673:	f7 f9                	idiv   %ecx
    4675:	89 45 c8             	mov    %eax,-0x38(%ebp)
    4678:	c1 e0 02             	shl    $0x2,%eax
    467b:	89 c2                	mov    %eax,%edx
    467d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    4680:	8b 45 d8             	mov    -0x28(%ebp),%eax
    4683:	8b 0c 10             	mov    (%eax,%edx,1),%ecx
    4686:	85 c9                	test   %ecx,%ecx
    4688:	0f 85 fd 01 00 00    	jne    488b <mfs_write_map+0x34b>
    468e:	8b 45 10             	mov    0x10(%ebp),%eax
    4691:	85 c0                	test   %eax,%eax
    4693:	0f 85 5f 01 00 00    	jne    47f8 <mfs_write_map+0x2b8>
    4699:	8b 45 14             	mov    0x14(%ebp),%eax
    469c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    46a2:	e9 59 ff ff ff       	jmp    4600 <mfs_write_map+0xc0>
    46a7:	90                   	nop
    46a8:	89 da                	mov    %ebx,%edx
    46aa:	83 ec 0c             	sub    $0xc,%esp
    46ad:	8d 45 d8             	lea    -0x28(%ebp),%eax
    46b0:	50                   	push   %eax
    46b1:	89 f8                	mov    %edi,%eax
    46b3:	e8 18 fb ff ff       	call   41d0 <read_ind_zone.isra.2>
    46b8:	83 c4 10             	add    $0x10,%esp
    46bb:	89 c3                	mov    %eax,%ebx
    46bd:	85 c0                	test   %eax,%eax
    46bf:	0f 85 3b ff ff ff    	jne    4600 <mfs_write_map+0xc0>
    46c5:	8b 45 d8             	mov    -0x28(%ebp),%eax
    46c8:	8b 55 cc             	mov    -0x34(%ebp),%edx
    46cb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    46ce:	83 ec 0c             	sub    $0xc,%esp
    46d1:	8d 14 90             	lea    (%eax,%edx,4),%edx
    46d4:	8b 45 14             	mov    0x14(%ebp),%eax
    46d7:	8b 0a                	mov    (%edx),%ecx
    46d9:	89 08                	mov    %ecx,(%eax)
    46db:	8b 45 10             	mov    0x10(%ebp),%eax
    46de:	89 02                	mov    %eax,(%edx)
    46e0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    46e3:	8b 4e 34             	mov    0x34(%esi),%ecx
    46e6:	8b 57 04             	mov    0x4(%edi),%edx
    46e9:	50                   	push   %eax
    46ea:	8b 07                	mov    (%edi),%eax
    46ec:	e8 ff fb ff ff       	call   42f0 <write_ind_zone.isra.3>
    46f1:	8b 45 dc             	mov    -0x24(%ebp),%eax
    46f4:	83 c4 10             	add    $0x10,%esp
    46f7:	e9 aa fe ff ff       	jmp    45a6 <mfs_write_map+0x66>
    46fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4700:	bb f2 ff ff ff       	mov    $0xfffffff2,%ebx
    4705:	e9 b2 fe ff ff       	jmp    45bc <mfs_write_map+0x7c>
    470a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4710:	50                   	push   %eax
    4711:	50                   	push   %eax
    4712:	8d 45 e0             	lea    -0x20(%ebp),%eax
    4715:	50                   	push   %eax
    4716:	57                   	push   %edi
    4717:	e8 e4 0f 00 00       	call   5700 <mfs_alloc_zone>
    471c:	83 c4 10             	add    $0x10,%esp
    471f:	89 c3                	mov    %eax,%ebx
    4721:	85 c0                	test   %eax,%eax
    4723:	0f 85 d7 fe ff ff    	jne    4600 <mfs_write_map+0xc0>
    4729:	83 ec 0c             	sub    $0xc,%esp
    472c:	8b 45 e0             	mov    -0x20(%ebp),%eax
    472f:	31 d2                	xor    %edx,%edx
    4731:	6a 01                	push   $0x1
    4733:	52                   	push   %edx
    4734:	50                   	push   %eax
    4735:	8b 07                	mov    (%edi),%eax
    4737:	50                   	push   %eax
    4738:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    473b:	50                   	push   %eax
    473c:	e8 9f 1c 00 00       	call   63e0 <block_get>
    4741:	83 c4 20             	add    $0x20,%esp
    4744:	89 c3                	mov    %eax,%ebx
    4746:	85 c0                	test   %eax,%eax
    4748:	0f 85 b2 fe ff ff    	jne    4600 <mfs_write_map+0xc0>
    474e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4751:	52                   	push   %edx
    4752:	8b 48 40             	mov    0x40(%eax),%ecx
    4755:	8b 58 58             	mov    0x58(%eax),%ebx
    4758:	51                   	push   %ecx
    4759:	6a 00                	push   $0x0
    475b:	53                   	push   %ebx
    475c:	e8 0f 48 00 00       	call   8f70 <memset@plt>
    4761:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4764:	c6 40 14 01          	movb   $0x1,0x14(%eax)
    4768:	89 04 24             	mov    %eax,(%esp)
    476b:	e8 70 19 00 00       	call   60e0 <block_put>
    4770:	83 c4 10             	add    $0x10,%esp
    4773:	89 c3                	mov    %eax,%ebx
    4775:	85 c0                	test   %eax,%eax
    4777:	0f 85 83 fe ff ff    	jne    4600 <mfs_write_map+0xc0>
    477d:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    4780:	8b 57 04             	mov    0x4(%edi),%edx
    4783:	89 4e 38             	mov    %ecx,0x38(%esi)
    4786:	c6 46 40 01          	movb   $0x1,0x40(%esi)
    478a:	e9 bb fe ff ff       	jmp    464a <mfs_write_map+0x10a>
    478f:	90                   	nop
    4790:	83 ec 0c             	sub    $0xc,%esp
    4793:	8b 45 e0             	mov    -0x20(%ebp),%eax
    4796:	31 d2                	xor    %edx,%edx
    4798:	6a 01                	push   $0x1
    479a:	52                   	push   %edx
    479b:	50                   	push   %eax
    479c:	8b 07                	mov    (%edi),%eax
    479e:	50                   	push   %eax
    479f:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    47a2:	50                   	push   %eax
    47a3:	e8 38 1c 00 00       	call   63e0 <block_get>
    47a8:	83 c4 20             	add    $0x20,%esp
    47ab:	89 c3                	mov    %eax,%ebx
    47ad:	85 c0                	test   %eax,%eax
    47af:	0f 85 4b fe ff ff    	jne    4600 <mfs_write_map+0xc0>
    47b5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    47b8:	52                   	push   %edx
    47b9:	8b 48 40             	mov    0x40(%eax),%ecx
    47bc:	8b 58 58             	mov    0x58(%eax),%ebx
    47bf:	51                   	push   %ecx
    47c0:	6a 00                	push   $0x0
    47c2:	53                   	push   %ebx
    47c3:	e8 a8 47 00 00       	call   8f70 <memset@plt>
    47c8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    47cb:	c6 40 14 01          	movb   $0x1,0x14(%eax)
    47cf:	89 04 24             	mov    %eax,(%esp)
    47d2:	e8 09 19 00 00       	call   60e0 <block_put>
    47d7:	83 c4 10             	add    $0x10,%esp
    47da:	89 c3                	mov    %eax,%ebx
    47dc:	85 c0                	test   %eax,%eax
    47de:	0f 85 1c fe ff ff    	jne    4600 <mfs_write_map+0xc0>
    47e4:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    47e7:	8b 57 04             	mov    0x4(%edi),%edx
    47ea:	89 4e 34             	mov    %ecx,0x34(%esi)
    47ed:	c6 46 40 01          	movb   $0x1,0x40(%esi)
    47f1:	e9 b4 fe ff ff       	jmp    46aa <mfs_write_map+0x16a>
    47f6:	66 90                	xchg   %ax,%ax
    47f8:	50                   	push   %eax
    47f9:	50                   	push   %eax
    47fa:	8d 45 e0             	lea    -0x20(%ebp),%eax
    47fd:	50                   	push   %eax
    47fe:	57                   	push   %edi
    47ff:	e8 fc 0e 00 00       	call   5700 <mfs_alloc_zone>
    4804:	83 c4 10             	add    $0x10,%esp
    4807:	89 c3                	mov    %eax,%ebx
    4809:	85 c0                	test   %eax,%eax
    480b:	0f 85 ef fd ff ff    	jne    4600 <mfs_write_map+0xc0>
    4811:	83 ec 0c             	sub    $0xc,%esp
    4814:	8b 45 e0             	mov    -0x20(%ebp),%eax
    4817:	31 d2                	xor    %edx,%edx
    4819:	6a 01                	push   $0x1
    481b:	52                   	push   %edx
    481c:	8b 1f                	mov    (%edi),%ebx
    481e:	50                   	push   %eax
    481f:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    4822:	53                   	push   %ebx
    4823:	50                   	push   %eax
    4824:	e8 b7 1b 00 00       	call   63e0 <block_get>
    4829:	83 c4 20             	add    $0x20,%esp
    482c:	89 c3                	mov    %eax,%ebx
    482e:	85 c0                	test   %eax,%eax
    4830:	0f 85 ca fd ff ff    	jne    4600 <mfs_write_map+0xc0>
    4836:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4839:	53                   	push   %ebx
    483a:	8b 50 40             	mov    0x40(%eax),%edx
    483d:	8b 48 58             	mov    0x58(%eax),%ecx
    4840:	52                   	push   %edx
    4841:	6a 00                	push   $0x0
    4843:	51                   	push   %ecx
    4844:	e8 27 47 00 00       	call   8f70 <memset@plt>
    4849:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    484c:	c6 40 14 01          	movb   $0x1,0x14(%eax)
    4850:	89 04 24             	mov    %eax,(%esp)
    4853:	e8 88 18 00 00       	call   60e0 <block_put>
    4858:	83 c4 10             	add    $0x10,%esp
    485b:	89 c3                	mov    %eax,%ebx
    485d:	85 c0                	test   %eax,%eax
    485f:	0f 85 9b fd ff ff    	jne    4600 <mfs_write_map+0xc0>
    4865:	8b 45 d8             	mov    -0x28(%ebp),%eax
    4868:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
    486b:	8b 55 e0             	mov    -0x20(%ebp),%edx
    486e:	83 ec 0c             	sub    $0xc,%esp
    4871:	89 14 18             	mov    %edx,(%eax,%ebx,1)
    4874:	8b 57 04             	mov    0x4(%edi),%edx
    4877:	8b 4e 38             	mov    0x38(%esi),%ecx
    487a:	50                   	push   %eax
    487b:	8b 07                	mov    (%edi),%eax
    487d:	e8 6e fa ff ff       	call   42f0 <write_ind_zone.isra.3>
    4882:	8b 45 d8             	mov    -0x28(%ebp),%eax
    4885:	83 c4 10             	add    $0x10,%esp
    4888:	8b 0c 18             	mov    (%eax,%ebx,1),%ecx
    488b:	83 ec 0c             	sub    $0xc,%esp
    488e:	8d 45 dc             	lea    -0x24(%ebp),%eax
    4891:	8b 57 04             	mov    0x4(%edi),%edx
    4894:	50                   	push   %eax
    4895:	89 f8                	mov    %edi,%eax
    4897:	e8 34 f9 ff ff       	call   41d0 <read_ind_zone.isra.2>
    489c:	83 c4 10             	add    $0x10,%esp
    489f:	89 c3                	mov    %eax,%ebx
    48a1:	85 c0                	test   %eax,%eax
    48a3:	0f 85 57 fd ff ff    	jne    4600 <mfs_write_map+0xc0>
    48a9:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    48ac:	8b 45 c8             	mov    -0x38(%ebp),%eax
    48af:	0f af c1             	imul   %ecx,%eax
    48b2:	8b 55 cc             	mov    -0x34(%ebp),%edx
    48b5:	8b 75 dc             	mov    -0x24(%ebp),%esi
    48b8:	29 c2                	sub    %eax,%edx
    48ba:	8b 4d 14             	mov    0x14(%ebp),%ecx
    48bd:	83 ec 0c             	sub    $0xc,%esp
    48c0:	8d 04 96             	lea    (%esi,%edx,4),%eax
    48c3:	8b 10                	mov    (%eax),%edx
    48c5:	89 11                	mov    %edx,(%ecx)
    48c7:	8b 55 10             	mov    0x10(%ebp),%edx
    48ca:	89 10                	mov    %edx,(%eax)
    48cc:	8b 45 d8             	mov    -0x28(%ebp),%eax
    48cf:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    48d2:	8b 0c 10             	mov    (%eax,%edx,1),%ecx
    48d5:	8b 57 04             	mov    0x4(%edi),%edx
    48d8:	8b 07                	mov    (%edi),%eax
    48da:	56                   	push   %esi
    48db:	e8 10 fa ff ff       	call   42f0 <write_ind_zone.isra.3>
    48e0:	8b 45 dc             	mov    -0x24(%ebp),%eax
    48e3:	83 c4 10             	add    $0x10,%esp
    48e6:	e9 bb fc ff ff       	jmp    45a6 <mfs_write_map+0x66>
    48eb:	90                   	nop
    48ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000048f0 <mfs_prune_ind_zones>:
    48f0:	55                   	push   %ebp
    48f1:	89 e5                	mov    %esp,%ebp
    48f3:	57                   	push   %edi
    48f4:	56                   	push   %esi
    48f5:	53                   	push   %ebx
    48f6:	83 ec 2c             	sub    $0x2c,%esp
    48f9:	8b 55 08             	mov    0x8(%ebp),%edx
    48fc:	8b 45 0c             	mov    0xc(%ebp),%eax
    48ff:	8b 72 04             	mov    0x4(%edx),%esi
    4902:	8b 3a                	mov    (%edx),%edi
    4904:	8b 4e 04             	mov    0x4(%esi),%ecx
    4907:	39 47 08             	cmp    %eax,0x8(%edi)
    490a:	8b 51 28             	mov    0x28(%ecx),%edx
    490d:	0f 82 4c 01 00 00    	jb     4a5f <mfs_prune_ind_zones+0x16f>
    4913:	8b 49 18             	mov    0x18(%ecx),%ecx
    4916:	4a                   	dec    %edx
    4917:	bb 00 02 00 00       	mov    $0x200,%ebx
    491c:	74 05                	je     4923 <mfs_prune_ind_zones+0x33>
    491e:	89 cb                	mov    %ecx,%ebx
    4920:	c1 eb 02             	shr    $0x2,%ebx
    4923:	31 d2                	xor    %edx,%edx
    4925:	f7 f1                	div    %ecx
    4927:	89 c1                	mov    %eax,%ecx
    4929:	83 f8 06             	cmp    $0x6,%eax
    492c:	7f 0b                	jg     4939 <mfs_prune_ind_zones+0x49>
    492e:	8b 47 34             	mov    0x34(%edi),%eax
    4931:	85 c0                	test   %eax,%eax
    4933:	0f 85 a7 00 00 00    	jne    49e0 <mfs_prune_ind_zones+0xf0>
    4939:	8d 43 07             	lea    0x7(%ebx),%eax
    493c:	29 c1                	sub    %eax,%ecx
    493e:	89 c8                	mov    %ecx,%eax
    4940:	0f 88 ca 00 00 00    	js     4a10 <mfs_prune_ind_zones+0x120>
    4946:	89 c2                	mov    %eax,%edx
    4948:	8b 4f 38             	mov    0x38(%edi),%ecx
    494b:	c1 fa 1f             	sar    $0x1f,%edx
    494e:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
    4955:	f7 fb                	idiv   %ebx
    4957:	89 c2                	mov    %eax,%edx
    4959:	89 45 d0             	mov    %eax,-0x30(%ebp)
    495c:	c1 fa 1f             	sar    $0x1f,%edx
    495f:	f7 fb                	idiv   %ebx
    4961:	83 fa 01             	cmp    $0x1,%edx
    4964:	83 5d d0 ff          	sbbl   $0xffffffff,-0x30(%ebp)
    4968:	85 c9                	test   %ecx,%ecx
    496a:	75 0c                	jne    4978 <mfs_prune_ind_zones+0x88>
    496c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    496f:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4972:	5b                   	pop    %ebx
    4973:	5e                   	pop    %esi
    4974:	5f                   	pop    %edi
    4975:	5d                   	pop    %ebp
    4976:	c3                   	ret    
    4977:	90                   	nop
    4978:	83 ec 0c             	sub    $0xc,%esp
    497b:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    497e:	8b 56 04             	mov    0x4(%esi),%edx
    4981:	50                   	push   %eax
    4982:	89 f0                	mov    %esi,%eax
    4984:	e8 47 f8 ff ff       	call   41d0 <read_ind_zone.isra.2>
    4989:	83 c4 10             	add    $0x10,%esp
    498c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    498f:	85 c0                	test   %eax,%eax
    4991:	75 d9                	jne    496c <mfs_prune_ind_zones+0x7c>
    4993:	8b 45 d0             	mov    -0x30(%ebp),%eax
    4996:	8d 0c 9d 00 00 00 00 	lea    0x0(,%ebx,4),%ecx
    499d:	39 d8                	cmp    %ebx,%eax
    499f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
    49a6:	7d 73                	jge    4a1b <mfs_prune_ind_zones+0x12b>
    49a8:	89 7d cc             	mov    %edi,-0x34(%ebp)
    49ab:	89 cb                	mov    %ecx,%ebx
    49ad:	89 d7                	mov    %edx,%edi
    49af:	eb 0e                	jmp    49bf <mfs_prune_ind_zones+0xcf>
    49b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    49b8:	83 c7 04             	add    $0x4,%edi
    49bb:	39 df                	cmp    %ebx,%edi
    49bd:	74 59                	je     4a18 <mfs_prune_ind_zones+0x128>
    49bf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    49c2:	8b 04 38             	mov    (%eax,%edi,1),%eax
    49c5:	85 c0                	test   %eax,%eax
    49c7:	74 ef                	je     49b8 <mfs_prune_ind_zones+0xc8>
    49c9:	52                   	push   %edx
    49ca:	52                   	push   %edx
    49cb:	50                   	push   %eax
    49cc:	56                   	push   %esi
    49cd:	e8 7e 0d 00 00       	call   5750 <mfs_free_zone>
    49d2:	83 c4 10             	add    $0x10,%esp
    49d5:	85 c0                	test   %eax,%eax
    49d7:	74 df                	je     49b8 <mfs_prune_ind_zones+0xc8>
    49d9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    49dc:	eb 44                	jmp    4a22 <mfs_prune_ind_zones+0x132>
    49de:	66 90                	xchg   %ax,%ax
    49e0:	89 4d d0             	mov    %ecx,-0x30(%ebp)
    49e3:	52                   	push   %edx
    49e4:	52                   	push   %edx
    49e5:	50                   	push   %eax
    49e6:	56                   	push   %esi
    49e7:	e8 64 0d 00 00       	call   5750 <mfs_free_zone>
    49ec:	83 c4 10             	add    $0x10,%esp
    49ef:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    49f2:	85 c0                	test   %eax,%eax
    49f4:	0f 85 72 ff ff ff    	jne    496c <mfs_prune_ind_zones+0x7c>
    49fa:	c7 47 34 00 00 00 00 	movl   $0x0,0x34(%edi)
    4a01:	c6 47 40 01          	movb   $0x1,0x40(%edi)
    4a05:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    4a08:	e9 2c ff ff ff       	jmp    4939 <mfs_prune_ind_zones+0x49>
    4a0d:	8d 76 00             	lea    0x0(%esi),%esi
    4a10:	31 c0                	xor    %eax,%eax
    4a12:	e9 2f ff ff ff       	jmp    4946 <mfs_prune_ind_zones+0x56>
    4a17:	90                   	nop
    4a18:	8b 7d cc             	mov    -0x34(%ebp),%edi
    4a1b:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    4a1e:	85 c9                	test   %ecx,%ecx
    4a20:	74 1e                	je     4a40 <mfs_prune_ind_zones+0x150>
    4a22:	83 ec 0c             	sub    $0xc,%esp
    4a25:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4a28:	50                   	push   %eax
    4a29:	e8 82 46 00 00       	call   90b0 <free@plt>
    4a2e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    4a31:	83 c4 10             	add    $0x10,%esp
    4a34:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4a37:	5b                   	pop    %ebx
    4a38:	5e                   	pop    %esi
    4a39:	5f                   	pop    %edi
    4a3a:	5d                   	pop    %ebp
    4a3b:	c3                   	ret    
    4a3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4a40:	52                   	push   %edx
    4a41:	52                   	push   %edx
    4a42:	8b 4f 38             	mov    0x38(%edi),%ecx
    4a45:	51                   	push   %ecx
    4a46:	56                   	push   %esi
    4a47:	e8 04 0d 00 00       	call   5750 <mfs_free_zone>
    4a4c:	c7 47 38 00 00 00 00 	movl   $0x0,0x38(%edi)
    4a53:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    4a56:	c6 47 40 01          	movb   $0x1,0x40(%edi)
    4a5a:	83 c4 10             	add    $0x10,%esp
    4a5d:	eb c3                	jmp    4a22 <mfs_prune_ind_zones+0x132>
    4a5f:	51                   	push   %ecx
    4a60:	68 fb 00 00 00       	push   $0xfb
    4a65:	68 7d 88 00 00       	push   $0x887d
    4a6a:	68 86 88 00 00       	push   $0x8886
    4a6f:	e8 3c 44 00 00       	call   8eb0 <assert_abort@plt>
    4a74:	66 90                	xchg   %ax,%ax
    4a76:	66 90                	xchg   %ax,%ax
    4a78:	66 90                	xchg   %ax,%ax
    4a7a:	66 90                	xchg   %ax,%ax
    4a7c:	66 90                	xchg   %ax,%ax
    4a7e:	66 90                	xchg   %ax,%ax

00004a80 <mfs_read_dentry>:
    4a80:	55                   	push   %ebp
    4a81:	89 e5                	mov    %esp,%ebp
    4a83:	57                   	push   %edi
    4a84:	56                   	push   %esi
    4a85:	53                   	push   %ebx
    4a86:	83 ec 30             	sub    $0x30,%esp
    4a89:	8b 7d 08             	mov    0x8(%ebp),%edi
    4a8c:	8b 77 04             	mov    0x4(%edi),%esi
    4a8f:	8b 5e 04             	mov    0x4(%esi),%ebx
    4a92:	8a 43 3c             	mov    0x3c(%ebx),%al
    4a95:	8b 53 30             	mov    0x30(%ebx),%edx
    4a98:	88 45 d4             	mov    %al,-0x2c(%ebp)
    4a9b:	8b 45 10             	mov    0x10(%ebp),%eax
    4a9e:	0f af c2             	imul   %edx,%eax
    4aa1:	50                   	push   %eax
    4aa2:	8d 45 e0             	lea    -0x20(%ebp),%eax
    4aa5:	57                   	push   %edi
    4aa6:	50                   	push   %eax
    4aa7:	e8 04 f9 ff ff       	call   43b0 <mfs_read_map>
    4aac:	83 c4 10             	add    $0x10,%esp
    4aaf:	85 c0                	test   %eax,%eax
    4ab1:	75 07                	jne    4aba <mfs_read_dentry+0x3a>
    4ab3:	8b 55 e0             	mov    -0x20(%ebp),%edx
    4ab6:	85 d2                	test   %edx,%edx
    4ab8:	75 0e                	jne    4ac8 <mfs_read_dentry+0x48>
    4aba:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4abd:	5b                   	pop    %ebx
    4abe:	5e                   	pop    %esi
    4abf:	5f                   	pop    %edi
    4ac0:	5d                   	pop    %ebp
    4ac1:	c3                   	ret    
    4ac2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4ac8:	83 ec 0c             	sub    $0xc,%esp
    4acb:	89 d0                	mov    %edx,%eax
    4acd:	31 d2                	xor    %edx,%edx
    4acf:	6a 00                	push   $0x0
    4ad1:	52                   	push   %edx
    4ad2:	50                   	push   %eax
    4ad3:	8b 06                	mov    (%esi),%eax
    4ad5:	50                   	push   %eax
    4ad6:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    4ad9:	50                   	push   %eax
    4ada:	e8 01 19 00 00       	call   63e0 <block_get>
    4adf:	83 c4 20             	add    $0x20,%esp
    4ae2:	85 c0                	test   %eax,%eax
    4ae4:	75 d4                	jne    4aba <mfs_read_dentry+0x3a>
    4ae6:	31 d2                	xor    %edx,%edx
    4ae8:	8b 43 18             	mov    0x18(%ebx),%eax
    4aeb:	f7 73 30             	divl   0x30(%ebx)
    4aee:	89 c1                	mov    %eax,%ecx
    4af0:	31 d2                	xor    %edx,%edx
    4af2:	8b 45 10             	mov    0x10(%ebp),%eax
    4af5:	f7 f1                	div    %ecx
    4af7:	83 7b 28 03          	cmpl   $0x3,0x28(%ebx)
    4afb:	0f 84 af 00 00 00    	je     4bb0 <mfs_read_dentry+0x130>
    4b01:	80 7d d4 00          	cmpb   $0x0,-0x2c(%ebp)
    4b05:	0f 84 85 00 00 00    	je     4b90 <mfs_read_dentry+0x110>
    4b0b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4b0e:	be 1e 00 00 00       	mov    $0x1e,%esi
    4b13:	c7 45 d0 1e 00 00 00 	movl   $0x1e,-0x30(%ebp)
    4b1a:	b9 20 00 00 00       	mov    $0x20,%ecx
    4b1f:	8b 40 58             	mov    0x58(%eax),%eax
    4b22:	0f af d1             	imul   %ecx,%edx
    4b25:	01 c2                	add    %eax,%edx
    4b27:	51                   	push   %ecx
    4b28:	31 c0                	xor    %eax,%eax
    4b2a:	51                   	push   %ecx
    4b2b:	66 8b 02             	mov    (%edx),%ax
    4b2e:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    4b31:	50                   	push   %eax
    4b32:	31 c0                	xor    %eax,%eax
    4b34:	8a 43 3d             	mov    0x3d(%ebx),%al
    4b37:	50                   	push   %eax
    4b38:	e8 63 0d 00 00       	call   58a0 <conv16>
    4b3d:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    4b40:	25 ff ff 00 00       	and    $0xffff,%eax
    4b45:	83 c4 0c             	add    $0xc,%esp
    4b48:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    4b4b:	89 01                	mov    %eax,(%ecx)
    4b4d:	89 c8                	mov    %ecx,%eax
    4b4f:	83 c2 02             	add    $0x2,%edx
    4b52:	83 c0 04             	add    $0x4,%eax
    4b55:	56                   	push   %esi
    4b56:	52                   	push   %edx
    4b57:	50                   	push   %eax
    4b58:	e8 73 42 00 00       	call   8dd0 <memcpy@plt>
    4b5d:	8b 45 0c             	mov    0xc(%ebp),%eax
    4b60:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    4b63:	83 c4 10             	add    $0x10,%esp
    4b66:	c6 44 08 04 00       	movb   $0x0,0x4(%eax,%ecx,1)
    4b6b:	83 ec 0c             	sub    $0xc,%esp
    4b6e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4b71:	50                   	push   %eax
    4b72:	e8 69 15 00 00       	call   60e0 <block_put>
    4b77:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    4b7a:	8b 75 10             	mov    0x10(%ebp),%esi
    4b7d:	83 c4 10             	add    $0x10,%esp
    4b80:	89 71 44             	mov    %esi,0x44(%ecx)
    4b83:	89 79 48             	mov    %edi,0x48(%ecx)
    4b86:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4b89:	5b                   	pop    %ebx
    4b8a:	5e                   	pop    %esi
    4b8b:	5f                   	pop    %edi
    4b8c:	5d                   	pop    %ebp
    4b8d:	c3                   	ret    
    4b8e:	66 90                	xchg   %ax,%ax
    4b90:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4b93:	be 0e 00 00 00       	mov    $0xe,%esi
    4b98:	c7 45 d0 0e 00 00 00 	movl   $0xe,-0x30(%ebp)
    4b9f:	b9 10 00 00 00       	mov    $0x10,%ecx
    4ba4:	8b 40 58             	mov    0x58(%eax),%eax
    4ba7:	e9 76 ff ff ff       	jmp    4b22 <mfs_read_dentry+0xa2>
    4bac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4bb0:	c1 e2 06             	shl    $0x6,%edx
    4bb3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4bb6:	8b 70 58             	mov    0x58(%eax),%esi
    4bb9:	50                   	push   %eax
    4bba:	01 d6                	add    %edx,%esi
    4bbc:	50                   	push   %eax
    4bbd:	83 c6 04             	add    $0x4,%esi
    4bc0:	8b 46 fc             	mov    -0x4(%esi),%eax
    4bc3:	50                   	push   %eax
    4bc4:	31 c0                	xor    %eax,%eax
    4bc6:	8a 43 3d             	mov    0x3d(%ebx),%al
    4bc9:	50                   	push   %eax
    4bca:	e8 f1 0c 00 00       	call   58c0 <conv32>
    4bcf:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    4bd2:	83 c4 0c             	add    $0xc,%esp
    4bd5:	89 01                	mov    %eax,(%ecx)
    4bd7:	89 c8                	mov    %ecx,%eax
    4bd9:	83 c0 04             	add    $0x4,%eax
    4bdc:	6a 3c                	push   $0x3c
    4bde:	56                   	push   %esi
    4bdf:	50                   	push   %eax
    4be0:	e8 eb 41 00 00       	call   8dd0 <memcpy@plt>
    4be5:	8b 45 0c             	mov    0xc(%ebp),%eax
    4be8:	83 c4 10             	add    $0x10,%esp
    4beb:	c6 40 40 00          	movb   $0x0,0x40(%eax)
    4bef:	e9 77 ff ff ff       	jmp    4b6b <mfs_read_dentry+0xeb>
    4bf4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4bfa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00004c00 <mfs_write_dentry>:
    4c00:	55                   	push   %ebp
    4c01:	89 e5                	mov    %esp,%ebp
    4c03:	57                   	push   %edi
    4c04:	56                   	push   %esi
    4c05:	53                   	push   %ebx
    4c06:	83 ec 30             	sub    $0x30,%esp
    4c09:	8b 5d 08             	mov    0x8(%ebp),%ebx
    4c0c:	8b 7b 48             	mov    0x48(%ebx),%edi
    4c0f:	8b 53 44             	mov    0x44(%ebx),%edx
    4c12:	8b 47 04             	mov    0x4(%edi),%eax
    4c15:	8b 70 04             	mov    0x4(%eax),%esi
    4c18:	8b 46 30             	mov    0x30(%esi),%eax
    4c1b:	8b 4e 18             	mov    0x18(%esi),%ecx
    4c1e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    4c21:	89 4d d0             	mov    %ecx,-0x30(%ebp)
    4c24:	0f af c2             	imul   %edx,%eax
    4c27:	50                   	push   %eax
    4c28:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    4c2b:	57                   	push   %edi
    4c2c:	50                   	push   %eax
    4c2d:	e8 7e f7 ff ff       	call   43b0 <mfs_read_map>
    4c32:	83 c4 10             	add    $0x10,%esp
    4c35:	85 c0                	test   %eax,%eax
    4c37:	74 0f                	je     4c48 <mfs_write_dentry+0x48>
    4c39:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4c3c:	5b                   	pop    %ebx
    4c3d:	5e                   	pop    %esi
    4c3e:	5f                   	pop    %edi
    4c3f:	5d                   	pop    %ebp
    4c40:	c3                   	ret    
    4c41:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4c48:	83 ec 0c             	sub    $0xc,%esp
    4c4b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4c4e:	31 d2                	xor    %edx,%edx
    4c50:	6a 00                	push   $0x0
    4c52:	52                   	push   %edx
    4c53:	50                   	push   %eax
    4c54:	8b 47 04             	mov    0x4(%edi),%eax
    4c57:	8b 38                	mov    (%eax),%edi
    4c59:	8d 45 e0             	lea    -0x20(%ebp),%eax
    4c5c:	57                   	push   %edi
    4c5d:	50                   	push   %eax
    4c5e:	e8 7d 17 00 00       	call   63e0 <block_get>
    4c63:	83 c4 20             	add    $0x20,%esp
    4c66:	85 c0                	test   %eax,%eax
    4c68:	75 cf                	jne    4c39 <mfs_write_dentry+0x39>
    4c6a:	31 d2                	xor    %edx,%edx
    4c6c:	8b 45 d0             	mov    -0x30(%ebp),%eax
    4c6f:	f7 75 d4             	divl   -0x2c(%ebp)
    4c72:	89 c1                	mov    %eax,%ecx
    4c74:	31 d2                	xor    %edx,%edx
    4c76:	8b 43 44             	mov    0x44(%ebx),%eax
    4c79:	8b 7e 38             	mov    0x38(%esi),%edi
    4c7c:	f7 f1                	div    %ecx
    4c7e:	8b 46 30             	mov    0x30(%esi),%eax
    4c81:	0f af d0             	imul   %eax,%edx
    4c84:	8b 45 e0             	mov    -0x20(%ebp),%eax
    4c87:	8b 48 58             	mov    0x58(%eax),%ecx
    4c8a:	01 ca                	add    %ecx,%edx
    4c8c:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    4c8f:	83 7e 28 03          	cmpl   $0x3,0x28(%esi)
    4c93:	74 4b                	je     4ce0 <mfs_write_dentry+0xe0>
    4c95:	50                   	push   %eax
    4c96:	50                   	push   %eax
    4c97:	31 c0                	xor    %eax,%eax
    4c99:	83 c3 04             	add    $0x4,%ebx
    4c9c:	66 8b 43 fc          	mov    -0x4(%ebx),%ax
    4ca0:	50                   	push   %eax
    4ca1:	31 c0                	xor    %eax,%eax
    4ca3:	8a 46 3d             	mov    0x3d(%esi),%al
    4ca6:	50                   	push   %eax
    4ca7:	e8 f4 0b 00 00       	call   58a0 <conv16>
    4cac:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    4caf:	83 c4 0c             	add    $0xc,%esp
    4cb2:	83 c2 02             	add    $0x2,%edx
    4cb5:	66 89 42 fe          	mov    %ax,-0x2(%edx)
    4cb9:	57                   	push   %edi
    4cba:	53                   	push   %ebx
    4cbb:	52                   	push   %edx
    4cbc:	e8 0f 41 00 00       	call   8dd0 <memcpy@plt>
    4cc1:	83 c4 10             	add    $0x10,%esp
    4cc4:	8b 45 e0             	mov    -0x20(%ebp),%eax
    4cc7:	83 ec 0c             	sub    $0xc,%esp
    4cca:	c6 40 14 01          	movb   $0x1,0x14(%eax)
    4cce:	50                   	push   %eax
    4ccf:	e8 0c 14 00 00       	call   60e0 <block_put>
    4cd4:	83 c4 10             	add    $0x10,%esp
    4cd7:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4cda:	5b                   	pop    %ebx
    4cdb:	5e                   	pop    %esi
    4cdc:	5f                   	pop    %edi
    4cdd:	5d                   	pop    %ebp
    4cde:	c3                   	ret    
    4cdf:	90                   	nop
    4ce0:	31 c0                	xor    %eax,%eax
    4ce2:	52                   	push   %edx
    4ce3:	52                   	push   %edx
    4ce4:	83 c3 04             	add    $0x4,%ebx
    4ce7:	8b 4b fc             	mov    -0x4(%ebx),%ecx
    4cea:	8a 46 3d             	mov    0x3d(%esi),%al
    4ced:	51                   	push   %ecx
    4cee:	50                   	push   %eax
    4cef:	e8 cc 0b 00 00       	call   58c0 <conv32>
    4cf4:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    4cf7:	83 c4 0c             	add    $0xc,%esp
    4cfa:	83 c2 04             	add    $0x4,%edx
    4cfd:	89 42 fc             	mov    %eax,-0x4(%edx)
    4d00:	57                   	push   %edi
    4d01:	53                   	push   %ebx
    4d02:	52                   	push   %edx
    4d03:	e8 c8 40 00 00       	call   8dd0 <memcpy@plt>
    4d08:	83 c4 10             	add    $0x10,%esp
    4d0b:	eb b7                	jmp    4cc4 <mfs_write_dentry+0xc4>
    4d0d:	8d 76 00             	lea    0x0(%esi),%esi

00004d10 <mfs_remove_dentry>:
    4d10:	55                   	push   %ebp
    4d11:	89 e5                	mov    %esp,%ebp
    4d13:	57                   	push   %edi
    4d14:	56                   	push   %esi
    4d15:	53                   	push   %ebx
    4d16:	81 ec 98 00 00 00    	sub    $0x98,%esp
    4d1c:	8b 7d 08             	mov    0x8(%ebp),%edi
    4d1f:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    4d22:	8b 47 04             	mov    0x4(%edi),%eax
    4d25:	8b 40 04             	mov    0x4(%eax),%eax
    4d28:	51                   	push   %ecx
    4d29:	89 c6                	mov    %eax,%esi
    4d2b:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
    4d31:	e8 8a 42 00 00       	call   8fc0 <str_size@plt>
    4d36:	83 c4 10             	add    $0x10,%esp
    4d39:	89 45 80             	mov    %eax,-0x80(%ebp)
    4d3c:	3b 46 38             	cmp    0x38(%esi),%eax
    4d3f:	0f 87 11 02 00 00    	ja     4f56 <mfs_remove_dentry+0x246>
    4d45:	8b 07                	mov    (%edi),%eax
    4d47:	31 d2                	xor    %edx,%edx
    4d49:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
    4d50:	8b 40 08             	mov    0x8(%eax),%eax
    4d53:	f7 76 30             	divl   0x30(%esi)
    4d56:	85 c0                	test   %eax,%eax
    4d58:	89 fe                	mov    %edi,%esi
    4d5a:	75 4d                	jne    4da9 <mfs_remove_dentry+0x99>
    4d5c:	e9 a7 01 00 00       	jmp    4f08 <mfs_remove_dentry+0x1f8>
    4d61:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4d68:	8b 45 94             	mov    -0x6c(%ebp),%eax
    4d6b:	85 c0                	test   %eax,%eax
    4d6d:	75 71                	jne    4de0 <mfs_remove_dentry+0xd0>
    4d6f:	83 ec 0c             	sub    $0xc,%esp
    4d72:	8d 45 a0             	lea    -0x60(%ebp),%eax
    4d75:	50                   	push   %eax
    4d76:	e8 45 42 00 00       	call   8fc0 <str_size@plt>
    4d7b:	83 c4 10             	add    $0x10,%esp
    4d7e:	39 45 80             	cmp    %eax,-0x80(%ebp)
    4d81:	0f 84 29 01 00 00    	je     4eb0 <mfs_remove_dentry+0x1a0>
    4d87:	8b 45 84             	mov    -0x7c(%ebp),%eax
    4d8a:	8b bd 78 ff ff ff    	mov    -0x88(%ebp),%edi
    4d90:	40                   	inc    %eax
    4d91:	31 d2                	xor    %edx,%edx
    4d93:	89 45 84             	mov    %eax,-0x7c(%ebp)
    4d96:	8b 06                	mov    (%esi),%eax
    4d98:	8b 4d 84             	mov    -0x7c(%ebp),%ecx
    4d9b:	8b 40 08             	mov    0x8(%eax),%eax
    4d9e:	f7 77 30             	divl   0x30(%edi)
    4da1:	39 c8                	cmp    %ecx,%eax
    4da3:	0f 86 5f 01 00 00    	jbe    4f08 <mfs_remove_dentry+0x1f8>
    4da9:	8b 7e 04             	mov    0x4(%esi),%edi
    4dac:	8b 5f 04             	mov    0x4(%edi),%ebx
    4daf:	8a 43 3c             	mov    0x3c(%ebx),%al
    4db2:	88 85 7c ff ff ff    	mov    %al,-0x84(%ebp)
    4db8:	50                   	push   %eax
    4db9:	8b 53 30             	mov    0x30(%ebx),%edx
    4dbc:	8b 45 84             	mov    -0x7c(%ebp),%eax
    4dbf:	0f af c2             	imul   %edx,%eax
    4dc2:	50                   	push   %eax
    4dc3:	8d 45 94             	lea    -0x6c(%ebp),%eax
    4dc6:	56                   	push   %esi
    4dc7:	50                   	push   %eax
    4dc8:	e8 e3 f5 ff ff       	call   43b0 <mfs_read_map>
    4dcd:	83 c4 10             	add    $0x10,%esp
    4dd0:	85 c0                	test   %eax,%eax
    4dd2:	74 94                	je     4d68 <mfs_remove_dentry+0x58>
    4dd4:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4dd7:	5b                   	pop    %ebx
    4dd8:	5e                   	pop    %esi
    4dd9:	5f                   	pop    %edi
    4dda:	5d                   	pop    %ebp
    4ddb:	c3                   	ret    
    4ddc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4de0:	83 ec 0c             	sub    $0xc,%esp
    4de3:	31 d2                	xor    %edx,%edx
    4de5:	6a 00                	push   $0x0
    4de7:	52                   	push   %edx
    4de8:	50                   	push   %eax
    4de9:	8b 07                	mov    (%edi),%eax
    4deb:	50                   	push   %eax
    4dec:	8d 45 98             	lea    -0x68(%ebp),%eax
    4def:	50                   	push   %eax
    4df0:	e8 eb 15 00 00       	call   63e0 <block_get>
    4df5:	83 c4 20             	add    $0x20,%esp
    4df8:	85 c0                	test   %eax,%eax
    4dfa:	75 d8                	jne    4dd4 <mfs_remove_dentry+0xc4>
    4dfc:	31 d2                	xor    %edx,%edx
    4dfe:	8b 43 18             	mov    0x18(%ebx),%eax
    4e01:	f7 73 30             	divl   0x30(%ebx)
    4e04:	89 c1                	mov    %eax,%ecx
    4e06:	31 d2                	xor    %edx,%edx
    4e08:	8b 45 84             	mov    -0x7c(%ebp),%eax
    4e0b:	f7 f1                	div    %ecx
    4e0d:	83 7b 28 03          	cmpl   $0x3,0x28(%ebx)
    4e11:	0f 84 01 01 00 00    	je     4f18 <mfs_remove_dentry+0x208>
    4e17:	80 bd 7c ff ff ff 00 	cmpb   $0x0,-0x84(%ebp)
    4e1e:	0f 84 c4 00 00 00    	je     4ee8 <mfs_remove_dentry+0x1d8>
    4e24:	8b 45 98             	mov    -0x68(%ebp),%eax
    4e27:	c7 85 74 ff ff ff 1e 	movl   $0x1e,-0x8c(%ebp)
    4e2e:	00 00 00 
    4e31:	bf 1e 00 00 00       	mov    $0x1e,%edi
    4e36:	b9 20 00 00 00       	mov    $0x20,%ecx
    4e3b:	8b 40 58             	mov    0x58(%eax),%eax
    4e3e:	0f af d1             	imul   %ecx,%edx
    4e41:	01 c2                	add    %eax,%edx
    4e43:	50                   	push   %eax
    4e44:	50                   	push   %eax
    4e45:	31 c0                	xor    %eax,%eax
    4e47:	66 8b 02             	mov    (%edx),%ax
    4e4a:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
    4e50:	50                   	push   %eax
    4e51:	31 c0                	xor    %eax,%eax
    4e53:	8a 43 3d             	mov    0x3d(%ebx),%al
    4e56:	50                   	push   %eax
    4e57:	e8 44 0a 00 00       	call   58a0 <conv16>
    4e5c:	83 c4 0c             	add    $0xc,%esp
    4e5f:	25 ff ff 00 00       	and    $0xffff,%eax
    4e64:	89 45 9c             	mov    %eax,-0x64(%ebp)
    4e67:	8b 95 7c ff ff ff    	mov    -0x84(%ebp),%edx
    4e6d:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
    4e73:	83 c2 02             	add    $0x2,%edx
    4e76:	50                   	push   %eax
    4e77:	8d 45 a0             	lea    -0x60(%ebp),%eax
    4e7a:	52                   	push   %edx
    4e7b:	50                   	push   %eax
    4e7c:	e8 4f 3f 00 00       	call   8dd0 <memcpy@plt>
    4e81:	c6 44 3d a0 00       	movb   $0x0,-0x60(%ebp,%edi,1)
    4e86:	83 c4 10             	add    $0x10,%esp
    4e89:	83 ec 0c             	sub    $0xc,%esp
    4e8c:	8b 7d 98             	mov    -0x68(%ebp),%edi
    4e8f:	57                   	push   %edi
    4e90:	e8 4b 12 00 00       	call   60e0 <block_put>
    4e95:	8b 5d 84             	mov    -0x7c(%ebp),%ebx
    4e98:	83 c4 10             	add    $0x10,%esp
    4e9b:	89 5d e0             	mov    %ebx,-0x20(%ebp)
    4e9e:	89 75 e4             	mov    %esi,-0x1c(%ebp)
    4ea1:	85 c0                	test   %eax,%eax
    4ea3:	0f 84 c6 fe ff ff    	je     4d6f <mfs_remove_dentry+0x5f>
    4ea9:	e9 26 ff ff ff       	jmp    4dd4 <mfs_remove_dentry+0xc4>
    4eae:	66 90                	xchg   %ax,%ax
    4eb0:	8b 4d 80             	mov    -0x80(%ebp),%ecx
    4eb3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    4eb6:	8d 45 a0             	lea    -0x60(%ebp),%eax
    4eb9:	52                   	push   %edx
    4eba:	51                   	push   %ecx
    4ebb:	53                   	push   %ebx
    4ebc:	50                   	push   %eax
    4ebd:	e8 6e 40 00 00       	call   8f30 <memcmp@plt>
    4ec2:	83 c4 10             	add    $0x10,%esp
    4ec5:	85 c0                	test   %eax,%eax
    4ec7:	0f 85 ba fe ff ff    	jne    4d87 <mfs_remove_dentry+0x77>
    4ecd:	83 ec 0c             	sub    $0xc,%esp
    4ed0:	8d 45 9c             	lea    -0x64(%ebp),%eax
    4ed3:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%ebp)
    4eda:	50                   	push   %eax
    4edb:	e8 20 fd ff ff       	call   4c00 <mfs_write_dentry>
    4ee0:	83 c4 10             	add    $0x10,%esp
    4ee3:	e9 ec fe ff ff       	jmp    4dd4 <mfs_remove_dentry+0xc4>
    4ee8:	8b 45 98             	mov    -0x68(%ebp),%eax
    4eeb:	c7 85 74 ff ff ff 0e 	movl   $0xe,-0x8c(%ebp)
    4ef2:	00 00 00 
    4ef5:	bf 0e 00 00 00       	mov    $0xe,%edi
    4efa:	b9 10 00 00 00       	mov    $0x10,%ecx
    4eff:	8b 40 58             	mov    0x58(%eax),%eax
    4f02:	e9 37 ff ff ff       	jmp    4e3e <mfs_remove_dentry+0x12e>
    4f07:	90                   	nop
    4f08:	8d 65 f4             	lea    -0xc(%ebp),%esp
    4f0b:	83 c8 ff             	or     $0xffffffff,%eax
    4f0e:	5b                   	pop    %ebx
    4f0f:	5e                   	pop    %esi
    4f10:	5f                   	pop    %edi
    4f11:	5d                   	pop    %ebp
    4f12:	c3                   	ret    
    4f13:	90                   	nop
    4f14:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4f18:	c1 e2 06             	shl    $0x6,%edx
    4f1b:	8b 45 98             	mov    -0x68(%ebp),%eax
    4f1e:	8b 48 58             	mov    0x58(%eax),%ecx
    4f21:	50                   	push   %eax
    4f22:	01 ca                	add    %ecx,%edx
    4f24:	50                   	push   %eax
    4f25:	89 d7                	mov    %edx,%edi
    4f27:	8b 02                	mov    (%edx),%eax
    4f29:	50                   	push   %eax
    4f2a:	31 c0                	xor    %eax,%eax
    4f2c:	8a 43 3d             	mov    0x3d(%ebx),%al
    4f2f:	50                   	push   %eax
    4f30:	e8 8b 09 00 00       	call   58c0 <conv32>
    4f35:	83 c4 0c             	add    $0xc,%esp
    4f38:	89 45 9c             	mov    %eax,-0x64(%ebp)
    4f3b:	8d 47 04             	lea    0x4(%edi),%eax
    4f3e:	6a 3c                	push   $0x3c
    4f40:	50                   	push   %eax
    4f41:	8d 45 a0             	lea    -0x60(%ebp),%eax
    4f44:	50                   	push   %eax
    4f45:	e8 86 3e 00 00       	call   8dd0 <memcpy@plt>
    4f4a:	c6 45 dc 00          	movb   $0x0,-0x24(%ebp)
    4f4e:	83 c4 10             	add    $0x10,%esp
    4f51:	e9 33 ff ff ff       	jmp    4e89 <mfs_remove_dentry+0x179>
    4f56:	b8 00 ff ff ff       	mov    $0xffffff00,%eax
    4f5b:	e9 74 fe ff ff       	jmp    4dd4 <mfs_remove_dentry+0xc4>

00004f60 <mfs_insert_dentry>:
    4f60:	55                   	push   %ebp
    4f61:	89 e5                	mov    %esp,%ebp
    4f63:	57                   	push   %edi
    4f64:	56                   	push   %esi
    4f65:	53                   	push   %ebx
    4f66:	81 ec 98 00 00 00    	sub    $0x98,%esp
    4f6c:	8b 75 08             	mov    0x8(%ebp),%esi
    4f6f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    4f72:	8b 46 04             	mov    0x4(%esi),%eax
    4f75:	8b 40 04             	mov    0x4(%eax),%eax
    4f78:	53                   	push   %ebx
    4f79:	89 c7                	mov    %eax,%edi
    4f7b:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
    4f81:	e8 3a 40 00 00       	call   8fc0 <str_size@plt>
    4f86:	83 c4 10             	add    $0x10,%esp
    4f89:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
    4f8f:	3b 47 38             	cmp    0x38(%edi),%eax
    4f92:	0f 87 c0 02 00 00    	ja     5258 <mfs_insert_dentry+0x2f8>
    4f98:	8b 06                	mov    (%esi),%eax
    4f9a:	31 d2                	xor    %edx,%edx
    4f9c:	8b 58 08             	mov    0x8(%eax),%ebx
    4f9f:	89 d8                	mov    %ebx,%eax
    4fa1:	f7 77 30             	divl   0x30(%edi)
    4fa4:	89 45 84             	mov    %eax,-0x7c(%ebp)
    4fa7:	85 c0                	test   %eax,%eax
    4fa9:	0f 84 c8 01 00 00    	je     5177 <mfs_insert_dentry+0x217>
    4faf:	8d 45 94             	lea    -0x6c(%ebp),%eax
    4fb2:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
    4fb9:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
    4fbf:	eb 3d                	jmp    4ffe <mfs_insert_dentry+0x9e>
    4fc1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4fc8:	8b 45 94             	mov    -0x6c(%ebp),%eax
    4fcb:	85 c0                	test   %eax,%eax
    4fcd:	75 69                	jne    5038 <mfs_insert_dentry+0xd8>
    4fcf:	8b 7d 9c             	mov    -0x64(%ebp),%edi
    4fd2:	85 ff                	test   %edi,%edi
    4fd4:	0f 84 2e 01 00 00    	je     5108 <mfs_insert_dentry+0x1a8>
    4fda:	8b 5d 84             	mov    -0x7c(%ebp),%ebx
    4fdd:	8b 06                	mov    (%esi),%eax
    4fdf:	43                   	inc    %ebx
    4fe0:	8b bd 78 ff ff ff    	mov    -0x88(%ebp),%edi
    4fe6:	89 5d 84             	mov    %ebx,-0x7c(%ebp)
    4fe9:	8b 58 08             	mov    0x8(%eax),%ebx
    4fec:	31 d2                	xor    %edx,%edx
    4fee:	89 d8                	mov    %ebx,%eax
    4ff0:	8b 4d 84             	mov    -0x7c(%ebp),%ecx
    4ff3:	f7 77 30             	divl   0x30(%edi)
    4ff6:	39 c8                	cmp    %ecx,%eax
    4ff8:	0f 86 82 01 00 00    	jbe    5180 <mfs_insert_dentry+0x220>
    4ffe:	8b 7e 04             	mov    0x4(%esi),%edi
    5001:	8b 8d 7c ff ff ff    	mov    -0x84(%ebp),%ecx
    5007:	8b 5f 04             	mov    0x4(%edi),%ebx
    500a:	8a 43 3c             	mov    0x3c(%ebx),%al
    500d:	88 45 80             	mov    %al,-0x80(%ebp)
    5010:	50                   	push   %eax
    5011:	8b 53 30             	mov    0x30(%ebx),%edx
    5014:	8b 45 84             	mov    -0x7c(%ebp),%eax
    5017:	0f af c2             	imul   %edx,%eax
    501a:	50                   	push   %eax
    501b:	56                   	push   %esi
    501c:	51                   	push   %ecx
    501d:	e8 8e f3 ff ff       	call   43b0 <mfs_read_map>
    5022:	83 c4 10             	add    $0x10,%esp
    5025:	85 c0                	test   %eax,%eax
    5027:	74 9f                	je     4fc8 <mfs_insert_dentry+0x68>
    5029:	89 c7                	mov    %eax,%edi
    502b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    502e:	89 f8                	mov    %edi,%eax
    5030:	5b                   	pop    %ebx
    5031:	5e                   	pop    %esi
    5032:	5f                   	pop    %edi
    5033:	5d                   	pop    %ebp
    5034:	c3                   	ret    
    5035:	8d 76 00             	lea    0x0(%esi),%esi
    5038:	83 ec 0c             	sub    $0xc,%esp
    503b:	31 d2                	xor    %edx,%edx
    503d:	6a 00                	push   $0x0
    503f:	52                   	push   %edx
    5040:	50                   	push   %eax
    5041:	8b 07                	mov    (%edi),%eax
    5043:	50                   	push   %eax
    5044:	8d 45 98             	lea    -0x68(%ebp),%eax
    5047:	50                   	push   %eax
    5048:	e8 93 13 00 00       	call   63e0 <block_get>
    504d:	83 c4 20             	add    $0x20,%esp
    5050:	85 c0                	test   %eax,%eax
    5052:	75 d5                	jne    5029 <mfs_insert_dentry+0xc9>
    5054:	31 d2                	xor    %edx,%edx
    5056:	8b 43 18             	mov    0x18(%ebx),%eax
    5059:	f7 73 30             	divl   0x30(%ebx)
    505c:	89 c1                	mov    %eax,%ecx
    505e:	31 d2                	xor    %edx,%edx
    5060:	8b 45 84             	mov    -0x7c(%ebp),%eax
    5063:	f7 f1                	div    %ecx
    5065:	83 7b 28 03          	cmpl   $0x3,0x28(%ebx)
    5069:	0f 84 59 01 00 00    	je     51c8 <mfs_insert_dentry+0x268>
    506f:	80 7d 80 00          	cmpb   $0x0,-0x80(%ebp)
    5073:	0f 84 df 00 00 00    	je     5158 <mfs_insert_dentry+0x1f8>
    5079:	8b 45 98             	mov    -0x68(%ebp),%eax
    507c:	bf 1e 00 00 00       	mov    $0x1e,%edi
    5081:	c7 85 74 ff ff ff 1e 	movl   $0x1e,-0x8c(%ebp)
    5088:	00 00 00 
    508b:	b9 20 00 00 00       	mov    $0x20,%ecx
    5090:	8b 40 58             	mov    0x58(%eax),%eax
    5093:	0f af d1             	imul   %ecx,%edx
    5096:	01 c2                	add    %eax,%edx
    5098:	50                   	push   %eax
    5099:	50                   	push   %eax
    509a:	31 c0                	xor    %eax,%eax
    509c:	66 8b 02             	mov    (%edx),%ax
    509f:	89 55 80             	mov    %edx,-0x80(%ebp)
    50a2:	50                   	push   %eax
    50a3:	31 c0                	xor    %eax,%eax
    50a5:	8a 43 3d             	mov    0x3d(%ebx),%al
    50a8:	50                   	push   %eax
    50a9:	e8 f2 07 00 00       	call   58a0 <conv16>
    50ae:	83 c4 0c             	add    $0xc,%esp
    50b1:	25 ff ff 00 00       	and    $0xffff,%eax
    50b6:	8b 55 80             	mov    -0x80(%ebp),%edx
    50b9:	89 45 9c             	mov    %eax,-0x64(%ebp)
    50bc:	83 c2 02             	add    $0x2,%edx
    50bf:	8d 45 a0             	lea    -0x60(%ebp),%eax
    50c2:	57                   	push   %edi
    50c3:	52                   	push   %edx
    50c4:	50                   	push   %eax
    50c5:	e8 06 3d 00 00       	call   8dd0 <memcpy@plt>
    50ca:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
    50d0:	83 c4 10             	add    $0x10,%esp
    50d3:	c6 44 05 a0 00       	movb   $0x0,-0x60(%ebp,%eax,1)
    50d8:	83 ec 0c             	sub    $0xc,%esp
    50db:	8b 45 98             	mov    -0x68(%ebp),%eax
    50de:	50                   	push   %eax
    50df:	e8 fc 0f 00 00       	call   60e0 <block_put>
    50e4:	8b 55 84             	mov    -0x7c(%ebp),%edx
    50e7:	83 c4 10             	add    $0x10,%esp
    50ea:	89 55 e0             	mov    %edx,-0x20(%ebp)
    50ed:	89 75 e4             	mov    %esi,-0x1c(%ebp)
    50f0:	85 c0                	test   %eax,%eax
    50f2:	0f 85 31 ff ff ff    	jne    5029 <mfs_insert_dentry+0xc9>
    50f8:	8b 7d 9c             	mov    -0x64(%ebp),%edi
    50fb:	85 ff                	test   %edi,%edi
    50fd:	0f 85 d7 fe ff ff    	jne    4fda <mfs_insert_dentry+0x7a>
    5103:	90                   	nop
    5104:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5108:	8b 45 10             	mov    0x10(%ebp),%eax
    510b:	8b b5 70 ff ff ff    	mov    -0x90(%ebp),%esi
    5111:	89 45 9c             	mov    %eax,-0x64(%ebp)
    5114:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    5117:	8d 45 a0             	lea    -0x60(%ebp),%eax
    511a:	51                   	push   %ecx
    511b:	56                   	push   %esi
    511c:	53                   	push   %ebx
    511d:	50                   	push   %eax
    511e:	e8 ad 3c 00 00       	call   8dd0 <memcpy@plt>
    5123:	8b 95 78 ff ff ff    	mov    -0x88(%ebp),%edx
    5129:	83 c4 10             	add    $0x10,%esp
    512c:	3b 72 38             	cmp    0x38(%edx),%esi
    512f:	73 05                	jae    5136 <mfs_insert_dentry+0x1d6>
    5131:	c6 44 35 a0 00       	movb   $0x0,-0x60(%ebp,%esi,1)
    5136:	83 ec 0c             	sub    $0xc,%esp
    5139:	8d 45 9c             	lea    -0x64(%ebp),%eax
    513c:	50                   	push   %eax
    513d:	e8 be fa ff ff       	call   4c00 <mfs_write_dentry>
    5142:	83 c4 10             	add    $0x10,%esp
    5145:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5148:	89 c7                	mov    %eax,%edi
    514a:	5b                   	pop    %ebx
    514b:	89 f8                	mov    %edi,%eax
    514d:	5e                   	pop    %esi
    514e:	5f                   	pop    %edi
    514f:	5d                   	pop    %ebp
    5150:	c3                   	ret    
    5151:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5158:	8b 45 98             	mov    -0x68(%ebp),%eax
    515b:	bf 0e 00 00 00       	mov    $0xe,%edi
    5160:	c7 85 74 ff ff ff 0e 	movl   $0xe,-0x8c(%ebp)
    5167:	00 00 00 
    516a:	b9 10 00 00 00       	mov    $0x10,%ecx
    516f:	8b 40 58             	mov    0x58(%eax),%eax
    5172:	e9 1c ff ff ff       	jmp    5093 <mfs_insert_dentry+0x133>
    5177:	8d 45 94             	lea    -0x6c(%ebp),%eax
    517a:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
    5180:	8b 95 7c ff ff ff    	mov    -0x84(%ebp),%edx
    5186:	50                   	push   %eax
    5187:	53                   	push   %ebx
    5188:	56                   	push   %esi
    5189:	52                   	push   %edx
    518a:	e8 21 f2 ff ff       	call   43b0 <mfs_read_map>
    518f:	83 c4 10             	add    $0x10,%esp
    5192:	89 c7                	mov    %eax,%edi
    5194:	85 c0                	test   %eax,%eax
    5196:	0f 85 8f fe ff ff    	jne    502b <mfs_insert_dentry+0xcb>
    519c:	8b 4d 94             	mov    -0x6c(%ebp),%ecx
    519f:	85 c9                	test   %ecx,%ecx
    51a1:	74 63                	je     5206 <mfs_insert_dentry+0x2a6>
    51a3:	8b 06                	mov    (%esi),%eax
    51a5:	8b 95 78 ff ff ff    	mov    -0x88(%ebp),%edx
    51ab:	8b 78 08             	mov    0x8(%eax),%edi
    51ae:	8b 52 30             	mov    0x30(%edx),%edx
    51b1:	01 d7                	add    %edx,%edi
    51b3:	c6 40 40 01          	movb   $0x1,0x40(%eax)
    51b7:	89 78 08             	mov    %edi,0x8(%eax)
    51ba:	8b 45 84             	mov    -0x7c(%ebp),%eax
    51bd:	89 45 e0             	mov    %eax,-0x20(%ebp)
    51c0:	89 75 e4             	mov    %esi,-0x1c(%ebp)
    51c3:	e9 40 ff ff ff       	jmp    5108 <mfs_insert_dentry+0x1a8>
    51c8:	c1 e2 06             	shl    $0x6,%edx
    51cb:	8b 45 98             	mov    -0x68(%ebp),%eax
    51ce:	8b 48 58             	mov    0x58(%eax),%ecx
    51d1:	50                   	push   %eax
    51d2:	01 ca                	add    %ecx,%edx
    51d4:	50                   	push   %eax
    51d5:	89 d7                	mov    %edx,%edi
    51d7:	8b 02                	mov    (%edx),%eax
    51d9:	83 c7 04             	add    $0x4,%edi
    51dc:	50                   	push   %eax
    51dd:	31 c0                	xor    %eax,%eax
    51df:	8a 43 3d             	mov    0x3d(%ebx),%al
    51e2:	50                   	push   %eax
    51e3:	e8 d8 06 00 00       	call   58c0 <conv32>
    51e8:	83 c4 0c             	add    $0xc,%esp
    51eb:	89 45 9c             	mov    %eax,-0x64(%ebp)
    51ee:	8d 45 a0             	lea    -0x60(%ebp),%eax
    51f1:	6a 3c                	push   $0x3c
    51f3:	57                   	push   %edi
    51f4:	50                   	push   %eax
    51f5:	e8 d6 3b 00 00       	call   8dd0 <memcpy@plt>
    51fa:	c6 45 dc 00          	movb   $0x0,-0x24(%ebp)
    51fe:	83 c4 10             	add    $0x10,%esp
    5201:	e9 d2 fe ff ff       	jmp    50d8 <mfs_insert_dentry+0x178>
    5206:	50                   	push   %eax
    5207:	50                   	push   %eax
    5208:	8b 56 04             	mov    0x4(%esi),%edx
    520b:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
    5211:	50                   	push   %eax
    5212:	52                   	push   %edx
    5213:	e8 e8 04 00 00       	call   5700 <mfs_alloc_zone>
    5218:	83 c4 10             	add    $0x10,%esp
    521b:	89 c7                	mov    %eax,%edi
    521d:	85 c0                	test   %eax,%eax
    521f:	0f 85 06 fe ff ff    	jne    502b <mfs_insert_dentry+0xcb>
    5225:	8d 45 98             	lea    -0x68(%ebp),%eax
    5228:	50                   	push   %eax
    5229:	8b 45 94             	mov    -0x6c(%ebp),%eax
    522c:	50                   	push   %eax
    522d:	53                   	push   %ebx
    522e:	56                   	push   %esi
    522f:	e8 0c f3 ff ff       	call   4540 <mfs_write_map>
    5234:	83 c4 10             	add    $0x10,%esp
    5237:	89 c7                	mov    %eax,%edi
    5239:	85 c0                	test   %eax,%eax
    523b:	0f 84 62 ff ff ff    	je     51a3 <mfs_insert_dentry+0x243>
    5241:	50                   	push   %eax
    5242:	50                   	push   %eax
    5243:	8b 45 94             	mov    -0x6c(%ebp),%eax
    5246:	50                   	push   %eax
    5247:	8b 46 04             	mov    0x4(%esi),%eax
    524a:	50                   	push   %eax
    524b:	e8 00 05 00 00       	call   5750 <mfs_free_zone>
    5250:	83 c4 10             	add    $0x10,%esp
    5253:	e9 d3 fd ff ff       	jmp    502b <mfs_insert_dentry+0xcb>
    5258:	bf 00 ff ff ff       	mov    $0xffffff00,%edi
    525d:	e9 c9 fd ff ff       	jmp    502b <mfs_insert_dentry+0xcb>
    5262:	66 90                	xchg   %ax,%ax
    5264:	66 90                	xchg   %ax,%ax
    5266:	66 90                	xchg   %ax,%ax
    5268:	66 90                	xchg   %ax,%ax
    526a:	66 90                	xchg   %ax,%ax
    526c:	66 90                	xchg   %ax,%ax
    526e:	66 90                	xchg   %ax,%ax

00005270 <mfs_alloc_bit.isra.0>:
    5270:	55                   	push   %ebp
    5271:	89 e5                	mov    %esp,%ebp
    5273:	57                   	push   %edi
    5274:	56                   	push   %esi
    5275:	53                   	push   %ebx
    5276:	83 ec 5c             	sub    $0x5c,%esp
    5279:	89 4d a8             	mov    %ecx,-0x58(%ebp)
    527c:	8b 4d 08             	mov    0x8(%ebp),%ecx
    527f:	89 45 ac             	mov    %eax,-0x54(%ebp)
    5282:	89 55 b8             	mov    %edx,-0x48(%ebp)
    5285:	89 d0                	mov    %edx,%eax
    5287:	85 c9                	test   %ecx,%ecx
    5289:	0f 85 89 01 00 00    	jne    5418 <mfs_alloc_bit.isra.0+0x1a8>
    528f:	8b 72 08             	mov    0x8(%edx),%esi
    5292:	8b 42 04             	mov    0x4(%edx),%eax
    5295:	83 c6 02             	add    $0x2,%esi
    5298:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    529b:	89 75 b4             	mov    %esi,-0x4c(%ebp)
    529e:	48                   	dec    %eax
    529f:	89 d6                	mov    %edx,%esi
    52a1:	8b 52 10             	mov    0x10(%edx),%edx
    52a4:	29 d0                	sub    %edx,%eax
    52a6:	89 45 a0             	mov    %eax,-0x60(%ebp)
    52a9:	89 f0                	mov    %esi,%eax
    52ab:	83 c0 44             	add    $0x44,%eax
    52ae:	8b 76 0c             	mov    0xc(%esi),%esi
    52b1:	89 75 bc             	mov    %esi,-0x44(%ebp)
    52b4:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    52b7:	8b 45 b8             	mov    -0x48(%ebp),%eax
    52ba:	31 d2                	xor    %edx,%edx
    52bc:	8b 40 18             	mov    0x18(%eax),%eax
    52bf:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    52c2:	c1 e0 03             	shl    $0x3,%eax
    52c5:	89 c7                	mov    %eax,%edi
    52c7:	89 45 b0             	mov    %eax,-0x50(%ebp)
    52ca:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    52cd:	8b 08                	mov    (%eax),%ecx
    52cf:	89 c8                	mov    %ecx,%eax
    52d1:	f7 f7                	div    %edi
    52d3:	89 45 d0             	mov    %eax,-0x30(%ebp)
    52d6:	3b 45 bc             	cmp    -0x44(%ebp),%eax
    52d9:	0f 83 f7 00 00 00    	jae    53d6 <mfs_alloc_bit.isra.0+0x166>
    52df:	8b 45 a8             	mov    -0x58(%ebp),%eax
    52e2:	be 01 00 00 00       	mov    $0x1,%esi
    52e7:	89 45 a4             	mov    %eax,-0x5c(%ebp)
    52ea:	8b 45 b8             	mov    -0x48(%ebp),%eax
    52ed:	89 45 c8             	mov    %eax,-0x38(%ebp)
    52f0:	8b 45 ac             	mov    -0x54(%ebp),%eax
    52f3:	89 45 c0             	mov    %eax,-0x40(%ebp)
    52f6:	8b 45 d0             	mov    -0x30(%ebp),%eax
    52f9:	83 ec 0c             	sub    $0xc,%esp
    52fc:	8b 5d b4             	mov    -0x4c(%ebp),%ebx
    52ff:	01 d8                	add    %ebx,%eax
    5301:	31 d2                	xor    %edx,%edx
    5303:	6a 00                	push   $0x0
    5305:	52                   	push   %edx
    5306:	50                   	push   %eax
    5307:	8b 45 c0             	mov    -0x40(%ebp),%eax
    530a:	8b 38                	mov    (%eax),%edi
    530c:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    530f:	57                   	push   %edi
    5310:	50                   	push   %eax
    5311:	e8 ca 10 00 00       	call   63e0 <block_get>
    5316:	83 c4 20             	add    $0x20,%esp
    5319:	85 c0                	test   %eax,%eax
    531b:	0f 85 d9 00 00 00    	jne    53fa <mfs_alloc_bit.isra.0+0x18a>
    5321:	8b 7d c8             	mov    -0x38(%ebp),%edi
    5324:	31 c0                	xor    %eax,%eax
    5326:	8b 5d c4             	mov    -0x3c(%ebp),%ebx
    5329:	31 d2                	xor    %edx,%edx
    532b:	8a 47 3d             	mov    0x3d(%edi),%al
    532e:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    5331:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    5334:	8b 03                	mov    (%ebx),%eax
    5336:	f7 75 b0             	divl   -0x50(%ebp)
    5339:	8b 45 c8             	mov    -0x38(%ebp),%eax
    533c:	89 d3                	mov    %edx,%ebx
    533e:	c1 eb 05             	shr    $0x5,%ebx
    5341:	8b 79 58             	mov    0x58(%ecx),%edi
    5344:	8b 40 18             	mov    0x18(%eax),%eax
    5347:	c1 e8 02             	shr    $0x2,%eax
    534a:	89 45 cc             	mov    %eax,-0x34(%ebp)
    534d:	39 c3                	cmp    %eax,%ebx
    534f:	73 5d                	jae    53ae <mfs_alloc_bit.isra.0+0x13e>
    5351:	8d 3c 9f             	lea    (%edi,%ebx,4),%edi
    5354:	8b 07                	mov    (%edi),%eax
    5356:	83 f8 ff             	cmp    $0xffffffff,%eax
    5359:	0f 84 a9 00 00 00    	je     5408 <mfs_alloc_bit.isra.0+0x198>
    535f:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    5362:	52                   	push   %edx
    5363:	52                   	push   %edx
    5364:	50                   	push   %eax
    5365:	51                   	push   %ecx
    5366:	e8 55 05 00 00       	call   58c0 <conv32>
    536b:	83 c4 10             	add    $0x10,%esp
    536e:	31 c9                	xor    %ecx,%ecx
    5370:	eb 10                	jmp    5382 <mfs_alloc_bit.isra.0+0x112>
    5372:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5378:	41                   	inc    %ecx
    5379:	83 f9 20             	cmp    $0x20,%ecx
    537c:	0f 84 86 00 00 00    	je     5408 <mfs_alloc_bit.isra.0+0x198>
    5382:	89 f2                	mov    %esi,%edx
    5384:	d3 e2                	shl    %cl,%edx
    5386:	85 d0                	test   %edx,%eax
    5388:	75 ee                	jne    5378 <mfs_alloc_bit.isra.0+0x108>
    538a:	c1 e3 05             	shl    $0x5,%ebx
    538d:	09 d0                	or     %edx,%eax
    538f:	01 cb                	add    %ecx,%ebx
    5391:	51                   	push   %ecx
    5392:	51                   	push   %ecx
    5393:	50                   	push   %eax
    5394:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    5397:	50                   	push   %eax
    5398:	e8 23 05 00 00       	call   58c0 <conv32>
    539d:	83 c4 10             	add    $0x10,%esp
    53a0:	89 07                	mov    %eax,(%edi)
    53a2:	83 fb ff             	cmp    $0xffffffff,%ebx
    53a5:	0f 85 90 00 00 00    	jne    543b <mfs_alloc_bit.isra.0+0x1cb>
    53ab:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    53ae:	83 ec 0c             	sub    $0xc,%esp
    53b1:	51                   	push   %ecx
    53b2:	e8 29 0d 00 00       	call   60e0 <block_put>
    53b7:	83 c4 10             	add    $0x10,%esp
    53ba:	85 c0                	test   %eax,%eax
    53bc:	75 3c                	jne    53fa <mfs_alloc_bit.isra.0+0x18a>
    53be:	8b 5d d0             	mov    -0x30(%ebp),%ebx
    53c1:	43                   	inc    %ebx
    53c2:	89 5d d0             	mov    %ebx,-0x30(%ebp)
    53c5:	8b 45 d0             	mov    -0x30(%ebp),%eax
    53c8:	3b 45 bc             	cmp    -0x44(%ebp),%eax
    53cb:	0f 85 28 ff ff ff    	jne    52f9 <mfs_alloc_bit.isra.0+0x89>
    53d1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    53d4:	8b 08                	mov    (%eax),%ecx
    53d6:	85 c9                	test   %ecx,%ecx
    53d8:	74 1b                	je     53f5 <mfs_alloc_bit.isra.0+0x185>
    53da:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    53dd:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
    53e4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    53ea:	8b 45 bc             	mov    -0x44(%ebp),%eax
    53ed:	85 c0                	test   %eax,%eax
    53ef:	0f 85 ea fe ff ff    	jne    52df <mfs_alloc_bit.isra.0+0x6f>
    53f5:	b8 fd fe ff ff       	mov    $0xfffffefd,%eax
    53fa:	8d 65 f4             	lea    -0xc(%ebp),%esp
    53fd:	5b                   	pop    %ebx
    53fe:	5e                   	pop    %esi
    53ff:	5f                   	pop    %edi
    5400:	5d                   	pop    %ebp
    5401:	c3                   	ret    
    5402:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5408:	43                   	inc    %ebx
    5409:	83 c7 04             	add    $0x4,%edi
    540c:	3b 5d cc             	cmp    -0x34(%ebp),%ebx
    540f:	0f 85 3f ff ff ff    	jne    5354 <mfs_alloc_bit.isra.0+0xe4>
    5415:	eb 94                	jmp    53ab <mfs_alloc_bit.isra.0+0x13b>
    5417:	90                   	nop
    5418:	8b 3a                	mov    (%edx),%edi
    541a:	83 c0 40             	add    $0x40,%eax
    541d:	89 7d d4             	mov    %edi,-0x2c(%ebp)
    5420:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    5423:	8d 77 ff             	lea    -0x1(%edi),%esi
    5426:	c7 45 b4 02 00 00 00 	movl   $0x2,-0x4c(%ebp)
    542d:	89 75 a0             	mov    %esi,-0x60(%ebp)
    5430:	8b 72 08             	mov    0x8(%edx),%esi
    5433:	89 75 bc             	mov    %esi,-0x44(%ebp)
    5436:	e9 7c fe ff ff       	jmp    52b7 <mfs_alloc_bit.isra.0+0x47>
    543b:	8b 45 d0             	mov    -0x30(%ebp),%eax
    543e:	8b 4d b0             	mov    -0x50(%ebp),%ecx
    5441:	0f af c1             	imul   %ecx,%eax
    5444:	01 c3                	add    %eax,%ebx
    5446:	8b 45 a4             	mov    -0x5c(%ebp),%eax
    5449:	3b 5d a0             	cmp    -0x60(%ebp),%ebx
    544c:	89 18                	mov    %ebx,(%eax)
    544e:	76 19                	jbe    5469 <mfs_alloc_bit.isra.0+0x1f9>
    5450:	83 ec 0c             	sub    $0xc,%esp
    5453:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    5456:	52                   	push   %edx
    5457:	e8 84 0c 00 00       	call   60e0 <block_put>
    545c:	83 c4 10             	add    $0x10,%esp
    545f:	85 c0                	test   %eax,%eax
    5461:	0f 84 6a ff ff ff    	je     53d1 <mfs_alloc_bit.isra.0+0x161>
    5467:	eb 91                	jmp    53fa <mfs_alloc_bit.isra.0+0x18a>
    5469:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    546c:	83 ec 0c             	sub    $0xc,%esp
    546f:	89 18                	mov    %ebx,(%eax)
    5471:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    5474:	c6 40 14 01          	movb   $0x1,0x14(%eax)
    5478:	50                   	push   %eax
    5479:	e8 62 0c 00 00       	call   60e0 <block_put>
    547e:	83 c4 10             	add    $0x10,%esp
    5481:	e9 74 ff ff ff       	jmp    53fa <mfs_alloc_bit.isra.0+0x18a>
    5486:	8d 76 00             	lea    0x0(%esi),%esi
    5489:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00005490 <mfs_count_free_bits.isra.2>:
    5490:	55                   	push   %ebp
    5491:	89 e5                	mov    %esp,%ebp
    5493:	57                   	push   %edi
    5494:	56                   	push   %esi
    5495:	53                   	push   %ebx
    5496:	83 ec 3c             	sub    $0x3c,%esp
    5499:	89 45 bc             	mov    %eax,-0x44(%ebp)
    549c:	89 55 d0             	mov    %edx,-0x30(%ebp)
    549f:	85 c9                	test   %ecx,%ecx
    54a1:	0f 85 20 01 00 00    	jne    55c7 <mfs_count_free_bits.isra.2+0x137>
    54a7:	8b 72 08             	mov    0x8(%edx),%esi
    54aa:	8b 7a 0c             	mov    0xc(%edx),%edi
    54ad:	83 c6 02             	add    $0x2,%esi
    54b0:	89 75 c4             	mov    %esi,-0x3c(%ebp)
    54b3:	8b 72 04             	mov    0x4(%edx),%esi
    54b6:	8b 52 10             	mov    0x10(%edx),%edx
    54b9:	89 75 d4             	mov    %esi,-0x2c(%ebp)
    54bc:	8d 5e ff             	lea    -0x1(%esi),%ebx
    54bf:	29 d3                	sub    %edx,%ebx
    54c1:	85 ff                	test   %edi,%edi
    54c3:	0f 84 e2 00 00 00    	je     55ab <mfs_count_free_bits.isra.2+0x11b>
    54c9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    54cc:	be 01 00 00 00       	mov    $0x1,%esi
    54d1:	01 c7                	add    %eax,%edi
    54d3:	89 7d c0             	mov    %edi,-0x40(%ebp)
    54d6:	31 ff                	xor    %edi,%edi
    54d8:	83 ec 0c             	sub    $0xc,%esp
    54db:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    54de:	31 d2                	xor    %edx,%edx
    54e0:	6a 00                	push   $0x0
    54e2:	52                   	push   %edx
    54e3:	50                   	push   %eax
    54e4:	8b 45 bc             	mov    -0x44(%ebp),%eax
    54e7:	8b 00                	mov    (%eax),%eax
    54e9:	50                   	push   %eax
    54ea:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    54ed:	50                   	push   %eax
    54ee:	e8 ed 0e 00 00       	call   63e0 <block_get>
    54f3:	83 c4 20             	add    $0x20,%esp
    54f6:	85 c0                	test   %eax,%eax
    54f8:	0f 85 b8 00 00 00    	jne    55b6 <mfs_count_free_bits.isra.2+0x126>
    54fe:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    5501:	8b 48 58             	mov    0x58(%eax),%ecx
    5504:	89 4d c8             	mov    %ecx,-0x38(%ebp)
    5507:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    550a:	8b 51 18             	mov    0x18(%ecx),%edx
    550d:	c1 ea 02             	shr    $0x2,%edx
    5510:	74 76                	je     5588 <mfs_count_free_bits.isra.2+0xf8>
    5512:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
    5519:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    551c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5520:	50                   	push   %eax
    5521:	50                   	push   %eax
    5522:	8b 45 c8             	mov    -0x38(%ebp),%eax
    5525:	8b 04 88             	mov    (%eax,%ecx,4),%eax
    5528:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    552b:	50                   	push   %eax
    552c:	31 c0                	xor    %eax,%eax
    552e:	8a 41 3d             	mov    0x3d(%ecx),%al
    5531:	50                   	push   %eax
    5532:	e8 89 03 00 00       	call   58c0 <conv32>
    5537:	83 c4 10             	add    $0x10,%esp
    553a:	85 db                	test   %ebx,%ebx
    553c:	0f 84 7e 00 00 00    	je     55c0 <mfs_count_free_bits.isra.2+0x130>
    5542:	31 c9                	xor    %ecx,%ecx
    5544:	eb 06                	jmp    554c <mfs_count_free_bits.isra.2+0xbc>
    5546:	66 90                	xchg   %ax,%ax
    5548:	85 db                	test   %ebx,%ebx
    554a:	74 1b                	je     5567 <mfs_count_free_bits.isra.2+0xd7>
    554c:	89 f2                	mov    %esi,%edx
    554e:	d3 e2                	shl    %cl,%edx
    5550:	21 c2                	and    %eax,%edx
    5552:	83 fa 01             	cmp    $0x1,%edx
    5555:	0f 92 c2             	setb   %dl
    5558:	81 e2 ff 00 00 00    	and    $0xff,%edx
    555e:	41                   	inc    %ecx
    555f:	01 d7                	add    %edx,%edi
    5561:	4b                   	dec    %ebx
    5562:	83 f9 1f             	cmp    $0x1f,%ecx
    5565:	76 e1                	jbe    5548 <mfs_count_free_bits.isra.2+0xb8>
    5567:	85 db                	test   %ebx,%ebx
    5569:	74 55                	je     55c0 <mfs_count_free_bits.isra.2+0x130>
    556b:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    556e:	8b 45 d0             	mov    -0x30(%ebp),%eax
    5571:	41                   	inc    %ecx
    5572:	8b 40 18             	mov    0x18(%eax),%eax
    5575:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    5578:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    557b:	89 45 cc             	mov    %eax,-0x34(%ebp)
    557e:	c1 e8 02             	shr    $0x2,%eax
    5581:	39 c1                	cmp    %eax,%ecx
    5583:	72 9b                	jb     5520 <mfs_count_free_bits.isra.2+0x90>
    5585:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    5588:	83 ec 0c             	sub    $0xc,%esp
    558b:	50                   	push   %eax
    558c:	e8 4f 0b 00 00       	call   60e0 <block_put>
    5591:	83 c4 10             	add    $0x10,%esp
    5594:	85 c0                	test   %eax,%eax
    5596:	75 1e                	jne    55b6 <mfs_count_free_bits.isra.2+0x126>
    5598:	8b 55 c4             	mov    -0x3c(%ebp),%edx
    559b:	42                   	inc    %edx
    559c:	89 55 c4             	mov    %edx,-0x3c(%ebp)
    559f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    55a2:	3b 45 c0             	cmp    -0x40(%ebp),%eax
    55a5:	0f 85 2d ff ff ff    	jne    54d8 <mfs_count_free_bits.isra.2+0x48>
    55ab:	8b 45 08             	mov    0x8(%ebp),%eax
    55ae:	85 db                	test   %ebx,%ebx
    55b0:	89 38                	mov    %edi,(%eax)
    55b2:	75 2a                	jne    55de <mfs_count_free_bits.isra.2+0x14e>
    55b4:	31 c0                	xor    %eax,%eax
    55b6:	8d 65 f4             	lea    -0xc(%ebp),%esp
    55b9:	5b                   	pop    %ebx
    55ba:	5e                   	pop    %esi
    55bb:	5f                   	pop    %edi
    55bc:	5d                   	pop    %ebp
    55bd:	c3                   	ret    
    55be:	66 90                	xchg   %ax,%ax
    55c0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    55c3:	31 db                	xor    %ebx,%ebx
    55c5:	eb c1                	jmp    5588 <mfs_count_free_bits.isra.2+0xf8>
    55c7:	8b 02                	mov    (%edx),%eax
    55c9:	8b 7a 08             	mov    0x8(%edx),%edi
    55cc:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    55cf:	c7 45 c4 02 00 00 00 	movl   $0x2,-0x3c(%ebp)
    55d6:	8d 58 ff             	lea    -0x1(%eax),%ebx
    55d9:	e9 e3 fe ff ff       	jmp    54c1 <mfs_count_free_bits.isra.2+0x31>
    55de:	50                   	push   %eax
    55df:	68 d8 00 00 00       	push   $0xd8
    55e4:	68 a0 88 00 00       	push   $0x88a0
    55e9:	68 ad 88 00 00       	push   $0x88ad
    55ee:	e8 bd 38 00 00       	call   8eb0 <assert_abort@plt>
    55f3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    55f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00005600 <mfs_alloc_inode>:
    5600:	55                   	push   %ebp
    5601:	89 e5                	mov    %esp,%ebp
    5603:	8b 45 08             	mov    0x8(%ebp),%eax
    5606:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    5609:	8b 50 04             	mov    0x4(%eax),%edx
    560c:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%ebp)
    5613:	5d                   	pop    %ebp
    5614:	e9 57 fc ff ff       	jmp    5270 <mfs_alloc_bit.isra.0>
    5619:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00005620 <mfs_free_inode>:
    5620:	55                   	push   %ebp
    5621:	89 e5                	mov    %esp,%ebp
    5623:	57                   	push   %edi
    5624:	56                   	push   %esi
    5625:	53                   	push   %ebx
    5626:	83 ec 1c             	sub    $0x1c,%esp
    5629:	8b 45 08             	mov    0x8(%ebp),%eax
    562c:	8b 58 04             	mov    0x4(%eax),%ebx
    562f:	8b 08                	mov    (%eax),%ecx
    5631:	8b 03                	mov    (%ebx),%eax
    5633:	39 45 0c             	cmp    %eax,0xc(%ebp)
    5636:	0f 87 ac 00 00 00    	ja     56e8 <mfs_free_inode+0xc8>
    563c:	83 ec 0c             	sub    $0xc,%esp
    563f:	31 d2                	xor    %edx,%edx
    5641:	6a 00                	push   $0x0
    5643:	8b 43 18             	mov    0x18(%ebx),%eax
    5646:	8d 34 c5 00 00 00 00 	lea    0x0(,%eax,8),%esi
    564d:	8b 45 0c             	mov    0xc(%ebp),%eax
    5650:	f7 f6                	div    %esi
    5652:	83 c0 02             	add    $0x2,%eax
    5655:	31 d2                	xor    %edx,%edx
    5657:	52                   	push   %edx
    5658:	50                   	push   %eax
    5659:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    565c:	51                   	push   %ecx
    565d:	50                   	push   %eax
    565e:	e8 7d 0d 00 00       	call   63e0 <block_get>
    5663:	83 c4 20             	add    $0x20,%esp
    5666:	85 c0                	test   %eax,%eax
    5668:	74 0e                	je     5678 <mfs_free_inode+0x58>
    566a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    566d:	5b                   	pop    %ebx
    566e:	5e                   	pop    %esi
    566f:	5f                   	pop    %edi
    5670:	5d                   	pop    %ebp
    5671:	c3                   	ret    
    5672:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5678:	8b 43 18             	mov    0x18(%ebx),%eax
    567b:	31 d2                	xor    %edx,%edx
    567d:	8d 3c c5 00 00 00 00 	lea    0x0(,%eax,8),%edi
    5684:	8b 45 0c             	mov    0xc(%ebp),%eax
    5687:	f7 f7                	div    %edi
    5689:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    568c:	89 d6                	mov    %edx,%esi
    568e:	c1 ea 05             	shr    $0x5,%edx
    5691:	8b 40 58             	mov    0x58(%eax),%eax
    5694:	8d 3c 90             	lea    (%eax,%edx,4),%edi
    5697:	50                   	push   %eax
    5698:	50                   	push   %eax
    5699:	31 c0                	xor    %eax,%eax
    569b:	8b 17                	mov    (%edi),%edx
    569d:	8a 43 3d             	mov    0x3d(%ebx),%al
    56a0:	52                   	push   %edx
    56a1:	50                   	push   %eax
    56a2:	e8 19 02 00 00       	call   58c0 <conv32>
    56a7:	59                   	pop    %ecx
    56a8:	89 f1                	mov    %esi,%ecx
    56aa:	5a                   	pop    %edx
    56ab:	ba 01 00 00 00       	mov    $0x1,%edx
    56b0:	d3 e2                	shl    %cl,%edx
    56b2:	83 f2 ff             	xor    $0xffffffff,%edx
    56b5:	21 d0                	and    %edx,%eax
    56b7:	50                   	push   %eax
    56b8:	31 c0                	xor    %eax,%eax
    56ba:	8a 43 3d             	mov    0x3d(%ebx),%al
    56bd:	50                   	push   %eax
    56be:	e8 fd 01 00 00       	call   58c0 <conv32>
    56c3:	89 07                	mov    %eax,(%edi)
    56c5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    56c8:	c6 40 14 01          	movb   $0x1,0x14(%eax)
    56cc:	89 04 24             	mov    %eax,(%esp)
    56cf:	e8 0c 0a 00 00       	call   60e0 <block_put>
    56d4:	83 c4 10             	add    $0x10,%esp
    56d7:	3b 73 40             	cmp    0x40(%ebx),%esi
    56da:	73 8e                	jae    566a <mfs_free_inode+0x4a>
    56dc:	89 73 40             	mov    %esi,0x40(%ebx)
    56df:	8d 65 f4             	lea    -0xc(%ebp),%esp
    56e2:	5b                   	pop    %ebx
    56e3:	5e                   	pop    %esi
    56e4:	5f                   	pop    %edi
    56e5:	5d                   	pop    %ebp
    56e6:	c3                   	ret    
    56e7:	90                   	nop
    56e8:	83 ec 0c             	sub    $0xc,%esp
    56eb:	68 b8 88 00 00       	push   $0x88b8
    56f0:	e8 eb 35 00 00       	call   8ce0 <printf@plt>
    56f5:	83 c4 10             	add    $0x10,%esp
    56f8:	83 c8 ff             	or     $0xffffffff,%eax
    56fb:	e9 6a ff ff ff       	jmp    566a <mfs_free_inode+0x4a>

00005700 <mfs_alloc_zone>:
    5700:	55                   	push   %ebp
    5701:	89 e5                	mov    %esp,%ebp
    5703:	56                   	push   %esi
    5704:	53                   	push   %ebx
    5705:	8b 5d 08             	mov    0x8(%ebp),%ebx
    5708:	83 ec 0c             	sub    $0xc,%esp
    570b:	8b 75 0c             	mov    0xc(%ebp),%esi
    570e:	89 d8                	mov    %ebx,%eax
    5710:	8b 53 04             	mov    0x4(%ebx),%edx
    5713:	89 f1                	mov    %esi,%ecx
    5715:	6a 00                	push   $0x0
    5717:	e8 54 fb ff ff       	call   5270 <mfs_alloc_bit.isra.0>
    571c:	83 c4 10             	add    $0x10,%esp
    571f:	85 c0                	test   %eax,%eax
    5721:	75 14                	jne    5737 <mfs_alloc_zone+0x37>
    5723:	8b 53 04             	mov    0x4(%ebx),%edx
    5726:	80 7a 48 00          	cmpb   $0x0,0x48(%edx)
    572a:	75 14                	jne    5740 <mfs_alloc_zone+0x40>
    572c:	8b 0e                	mov    (%esi),%ecx
    572e:	8b 52 10             	mov    0x10(%edx),%edx
    5731:	8d 54 11 ff          	lea    -0x1(%ecx,%edx,1),%edx
    5735:	89 16                	mov    %edx,(%esi)
    5737:	8d 65 f8             	lea    -0x8(%ebp),%esp
    573a:	5b                   	pop    %ebx
    573b:	5e                   	pop    %esi
    573c:	5d                   	pop    %ebp
    573d:	c3                   	ret    
    573e:	66 90                	xchg   %ax,%ax
    5740:	8b 4a 4c             	mov    0x4c(%edx),%ecx
    5743:	49                   	dec    %ecx
    5744:	89 4a 4c             	mov    %ecx,0x4c(%edx)
    5747:	eb e3                	jmp    572c <mfs_alloc_zone+0x2c>
    5749:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00005750 <mfs_free_zone>:
    5750:	55                   	push   %ebp
    5751:	89 e5                	mov    %esp,%ebp
    5753:	57                   	push   %edi
    5754:	56                   	push   %esi
    5755:	53                   	push   %ebx
    5756:	83 ec 2c             	sub    $0x2c,%esp
    5759:	8b 45 08             	mov    0x8(%ebp),%eax
    575c:	8b 70 04             	mov    0x4(%eax),%esi
    575f:	8b 45 0c             	mov    0xc(%ebp),%eax
    5762:	8b 7e 10             	mov    0x10(%esi),%edi
    5765:	8d 58 01             	lea    0x1(%eax),%ebx
    5768:	8b 45 08             	mov    0x8(%ebp),%eax
    576b:	29 fb                	sub    %edi,%ebx
    576d:	3b 5e 04             	cmp    0x4(%esi),%ebx
    5770:	8b 38                	mov    (%eax),%edi
    5772:	8b 46 08             	mov    0x8(%esi),%eax
    5775:	0f 87 cd 00 00 00    	ja     5848 <mfs_free_zone+0xf8>
    577b:	83 ec 0c             	sub    $0xc,%esp
    577e:	8d 48 02             	lea    0x2(%eax),%ecx
    5781:	6a 00                	push   $0x0
    5783:	8b 46 18             	mov    0x18(%esi),%eax
    5786:	c1 e0 03             	shl    $0x3,%eax
    5789:	89 c2                	mov    %eax,%edx
    578b:	89 d8                	mov    %ebx,%eax
    578d:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    5790:	31 d2                	xor    %edx,%edx
    5792:	f7 75 d4             	divl   -0x2c(%ebp)
    5795:	01 c8                	add    %ecx,%eax
    5797:	31 d2                	xor    %edx,%edx
    5799:	52                   	push   %edx
    579a:	50                   	push   %eax
    579b:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    579e:	57                   	push   %edi
    579f:	50                   	push   %eax
    57a0:	e8 3b 0c 00 00       	call   63e0 <block_get>
    57a5:	83 c4 20             	add    $0x20,%esp
    57a8:	85 c0                	test   %eax,%eax
    57aa:	74 0c                	je     57b8 <mfs_free_zone+0x68>
    57ac:	8d 65 f4             	lea    -0xc(%ebp),%esp
    57af:	5b                   	pop    %ebx
    57b0:	5e                   	pop    %esi
    57b1:	5f                   	pop    %edi
    57b2:	5d                   	pop    %ebp
    57b3:	c3                   	ret    
    57b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    57b8:	8b 46 18             	mov    0x18(%esi),%eax
    57bb:	31 d2                	xor    %edx,%edx
    57bd:	8d 3c c5 00 00 00 00 	lea    0x0(,%eax,8),%edi
    57c4:	89 d8                	mov    %ebx,%eax
    57c6:	f7 f7                	div    %edi
    57c8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    57cb:	89 d7                	mov    %edx,%edi
    57cd:	c1 ea 05             	shr    $0x5,%edx
    57d0:	8b 40 58             	mov    0x58(%eax),%eax
    57d3:	8d 1c 90             	lea    (%eax,%edx,4),%ebx
    57d6:	50                   	push   %eax
    57d7:	50                   	push   %eax
    57d8:	8b 03                	mov    (%ebx),%eax
    57da:	50                   	push   %eax
    57db:	31 c0                	xor    %eax,%eax
    57dd:	8a 46 3d             	mov    0x3d(%esi),%al
    57e0:	50                   	push   %eax
    57e1:	e8 da 00 00 00       	call   58c0 <conv32>
    57e6:	5a                   	pop    %edx
    57e7:	ba 01 00 00 00       	mov    $0x1,%edx
    57ec:	59                   	pop    %ecx
    57ed:	89 f9                	mov    %edi,%ecx
    57ef:	d3 e2                	shl    %cl,%edx
    57f1:	83 f2 ff             	xor    $0xffffffff,%edx
    57f4:	21 d0                	and    %edx,%eax
    57f6:	50                   	push   %eax
    57f7:	31 c0                	xor    %eax,%eax
    57f9:	8a 46 3d             	mov    0x3d(%esi),%al
    57fc:	50                   	push   %eax
    57fd:	e8 be 00 00 00       	call   58c0 <conv32>
    5802:	89 03                	mov    %eax,(%ebx)
    5804:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    5807:	c6 40 14 01          	movb   $0x1,0x14(%eax)
    580b:	89 04 24             	mov    %eax,(%esp)
    580e:	e8 cd 08 00 00       	call   60e0 <block_put>
    5813:	83 c4 10             	add    $0x10,%esp
    5816:	3b 7e 44             	cmp    0x44(%esi),%edi
    5819:	73 03                	jae    581e <mfs_free_zone+0xce>
    581b:	89 7e 44             	mov    %edi,0x44(%esi)
    581e:	85 c0                	test   %eax,%eax
    5820:	75 8a                	jne    57ac <mfs_free_zone+0x5c>
    5822:	8b 4d 08             	mov    0x8(%ebp),%ecx
    5825:	8b 51 04             	mov    0x4(%ecx),%edx
    5828:	80 7a 48 00          	cmpb   $0x0,0x48(%edx)
    582c:	0f 84 7a ff ff ff    	je     57ac <mfs_free_zone+0x5c>
    5832:	8b 4a 4c             	mov    0x4c(%edx),%ecx
    5835:	41                   	inc    %ecx
    5836:	89 4a 4c             	mov    %ecx,0x4c(%edx)
    5839:	8d 65 f4             	lea    -0xc(%ebp),%esp
    583c:	5b                   	pop    %ebx
    583d:	5e                   	pop    %esi
    583e:	5f                   	pop    %edi
    583f:	5d                   	pop    %ebp
    5840:	c3                   	ret    
    5841:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5848:	83 ec 0c             	sub    $0xc,%esp
    584b:	68 b8 88 00 00       	push   $0x88b8
    5850:	e8 8b 34 00 00       	call   8ce0 <printf@plt>
    5855:	83 c4 10             	add    $0x10,%esp
    5858:	83 c8 ff             	or     $0xffffffff,%eax
    585b:	e9 4c ff ff ff       	jmp    57ac <mfs_free_zone+0x5c>

00005860 <mfs_count_free_zones>:
    5860:	55                   	push   %ebp
    5861:	89 e5                	mov    %esp,%ebp
    5863:	8b 45 08             	mov    0x8(%ebp),%eax
    5866:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    5869:	8b 50 04             	mov    0x4(%eax),%edx
    586c:	89 4d 08             	mov    %ecx,0x8(%ebp)
    586f:	31 c9                	xor    %ecx,%ecx
    5871:	5d                   	pop    %ebp
    5872:	e9 19 fc ff ff       	jmp    5490 <mfs_count_free_bits.isra.2>
    5877:	89 f6                	mov    %esi,%esi
    5879:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00005880 <mfs_count_free_inodes>:
    5880:	55                   	push   %ebp
    5881:	89 e5                	mov    %esp,%ebp
    5883:	8b 45 08             	mov    0x8(%ebp),%eax
    5886:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    5889:	8b 50 04             	mov    0x4(%eax),%edx
    588c:	89 4d 08             	mov    %ecx,0x8(%ebp)
    588f:	b9 01 00 00 00       	mov    $0x1,%ecx
    5894:	5d                   	pop    %ebp
    5895:	e9 f6 fb ff ff       	jmp    5490 <mfs_count_free_bits.isra.2>
    589a:	66 90                	xchg   %ax,%ax
    589c:	66 90                	xchg   %ax,%ax
    589e:	66 90                	xchg   %ax,%ax

000058a0 <conv16>:
    58a0:	55                   	push   %ebp
    58a1:	89 e5                	mov    %esp,%ebp
    58a3:	8b 55 0c             	mov    0xc(%ebp),%edx
    58a6:	89 d0                	mov    %edx,%eax
    58a8:	80 7d 08 00          	cmpb   $0x0,0x8(%ebp)
    58ac:	75 04                	jne    58b2 <conv16+0x12>
    58ae:	66 c1 c0 08          	rol    $0x8,%ax
    58b2:	5d                   	pop    %ebp
    58b3:	c3                   	ret    
    58b4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    58ba:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000058c0 <conv32>:
    58c0:	55                   	push   %ebp
    58c1:	89 e5                	mov    %esp,%ebp
    58c3:	8b 45 0c             	mov    0xc(%ebp),%eax
    58c6:	80 7d 08 00          	cmpb   $0x0,0x8(%ebp)
    58ca:	75 02                	jne    58ce <conv32+0xe>
    58cc:	0f c8                	bswap  %eax
    58ce:	5d                   	pop    %ebp
    58cf:	c3                   	ret    

000058d0 <conv64>:
    58d0:	55                   	push   %ebp
    58d1:	89 e5                	mov    %esp,%ebp
    58d3:	8b 55 0c             	mov    0xc(%ebp),%edx
    58d6:	8b 4d 10             	mov    0x10(%ebp),%ecx
    58d9:	80 7d 08 00          	cmpb   $0x0,0x8(%ebp)
    58dd:	75 09                	jne    58e8 <conv64+0x18>
    58df:	89 c8                	mov    %ecx,%eax
    58e1:	5d                   	pop    %ebp
    58e2:	0f c8                	bswap  %eax
    58e4:	0f ca                	bswap  %edx
    58e6:	c3                   	ret    
    58e7:	90                   	nop
    58e8:	89 d0                	mov    %edx,%eax
    58ea:	5d                   	pop    %ebp
    58eb:	89 ca                	mov    %ecx,%edx
    58ed:	c3                   	ret    
    58ee:	66 90                	xchg   %ax,%ax

000058f0 <cache_key_hash>:
    58f0:	55                   	push   %ebp
    58f1:	89 e5                	mov    %esp,%ebp
    58f3:	8b 45 08             	mov    0x8(%ebp),%eax
    58f6:	5d                   	pop    %ebp
    58f7:	8b 00                	mov    (%eax),%eax
    58f9:	c3                   	ret    
    58fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00005900 <cache_hash>:
    5900:	55                   	push   %ebp
    5901:	89 e5                	mov    %esp,%ebp
    5903:	8b 45 08             	mov    0x8(%ebp),%eax
    5906:	5d                   	pop    %ebp
    5907:	8b 40 e0             	mov    -0x20(%eax),%eax
    590a:	c3                   	ret    
    590b:	90                   	nop
    590c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00005910 <cache_key_equal>:
    5910:	55                   	push   %ebp
    5911:	89 e5                	mov    %esp,%ebp
    5913:	8b 45 0c             	mov    0xc(%ebp),%eax
    5916:	8b 4d 08             	mov    0x8(%ebp),%ecx
    5919:	5d                   	pop    %ebp
    591a:	8b 50 e0             	mov    -0x20(%eax),%edx
    591d:	8b 40 e4             	mov    -0x1c(%eax),%eax
    5920:	33 41 04             	xor    0x4(%ecx),%eax
    5923:	33 11                	xor    (%ecx),%edx
    5925:	09 c2                	or     %eax,%edx
    5927:	0f 94 c0             	sete   %al
    592a:	c3                   	ret    
    592b:	90                   	nop
    592c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00005930 <block_init>:
    5930:	55                   	push   %ebp
    5931:	89 e5                	mov    %esp,%ebp
    5933:	57                   	push   %edi
    5934:	56                   	push   %esi
    5935:	53                   	push   %ebx
    5936:	83 ec 30             	sub    $0x30,%esp
    5939:	8b 5d 08             	mov    0x8(%ebp),%ebx
    593c:	6a 01                	push   $0x1
    593e:	68 21 66 93 ed       	push   $0xed936621
    5943:	53                   	push   %ebx
    5944:	e8 87 33 00 00       	call   8cd0 <loc_service_connect@plt>
    5949:	83 c4 10             	add    $0x10,%esp
    594c:	85 c0                	test   %eax,%eax
    594e:	0f 84 95 01 00 00    	je     5ae9 <block_init+0x1b9>
    5954:	89 c7                	mov    %eax,%edi
    5956:	50                   	push   %eax
    5957:	50                   	push   %eax
    5958:	8d 45 d8             	lea    -0x28(%ebp),%eax
    595b:	50                   	push   %eax
    595c:	57                   	push   %edi
    595d:	e8 9e 34 00 00       	call   8e00 <bd_open@plt>
    5962:	83 c4 10             	add    $0x10,%esp
    5965:	89 c6                	mov    %eax,%esi
    5967:	85 c0                	test   %eax,%eax
    5969:	0f 85 31 01 00 00    	jne    5aa0 <block_init+0x170>
    596f:	8d 45 dc             	lea    -0x24(%ebp),%eax
    5972:	56                   	push   %esi
    5973:	56                   	push   %esi
    5974:	50                   	push   %eax
    5975:	8b 45 d8             	mov    -0x28(%ebp),%eax
    5978:	50                   	push   %eax
    5979:	e8 12 36 00 00       	call   8f90 <bd_get_block_size@plt>
    597e:	83 c4 10             	add    $0x10,%esp
    5981:	89 c6                	mov    %eax,%esi
    5983:	85 c0                	test   %eax,%eax
    5985:	0f 85 f0 00 00 00    	jne    5a7b <block_init+0x14b>
    598b:	8d 45 e0             	lea    -0x20(%ebp),%eax
    598e:	8b 4d d8             	mov    -0x28(%ebp),%ecx
    5991:	52                   	push   %edx
    5992:	52                   	push   %edx
    5993:	50                   	push   %eax
    5994:	51                   	push   %ecx
    5995:	e8 e6 33 00 00       	call   8d80 <bd_get_num_blocks@plt>
    599a:	83 c4 10             	add    $0x10,%esp
    599d:	89 c6                	mov    %eax,%esi
    599f:	85 c0                	test   %eax,%eax
    59a1:	0f 85 d4 00 00 00    	jne    5a7b <block_init+0x14b>
    59a7:	83 ec 0c             	sub    $0xc,%esp
    59aa:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    59ad:	8b 4d d8             	mov    -0x28(%ebp),%ecx
    59b0:	8b 45 e0             	mov    -0x20(%ebp),%eax
    59b3:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    59b6:	8b 55 dc             	mov    -0x24(%ebp),%edx
    59b9:	6a 30                	push   $0x30
    59bb:	89 4d c8             	mov    %ecx,-0x38(%ebp)
    59be:	89 45 d0             	mov    %eax,-0x30(%ebp)
    59c1:	89 55 cc             	mov    %edx,-0x34(%ebp)
    59c4:	e8 27 34 00 00       	call   8df0 <malloc@plt>
    59c9:	83 c4 10             	add    $0x10,%esp
    59cc:	85 c0                	test   %eax,%eax
    59ce:	0f 84 1a 01 00 00    	je     5aee <block_init+0x1be>
    59d4:	8b 4d c8             	mov    -0x38(%ebp),%ecx
    59d7:	8b 55 cc             	mov    -0x34(%ebp),%edx
    59da:	89 48 10             	mov    %ecx,0x10(%eax)
    59dd:	89 50 28             	mov    %edx,0x28(%eax)
    59e0:	83 ec 0c             	sub    $0xc,%esp
    59e3:	8b 55 d0             	mov    -0x30(%ebp),%edx
    59e6:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    59e9:	89 50 20             	mov    %edx,0x20(%eax)
    59ec:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    59f2:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
    59f9:	89 58 08             	mov    %ebx,0x8(%eax)
    59fc:	89 78 0c             	mov    %edi,0xc(%eax)
    59ff:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
    5a06:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
    5a0d:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
    5a14:	89 48 24             	mov    %ecx,0x24(%eax)
    5a17:	c7 40 2c 00 00 00 00 	movl   $0x0,0x2c(%eax)
    5a1e:	89 45 d0             	mov    %eax,-0x30(%ebp)
    5a21:	68 98 ad 00 00       	push   $0xad98
    5a26:	e8 95 36 00 00       	call   90c0 <fibril_mutex_lock@plt>
    5a2b:	8b 15 94 ad 00 00    	mov    0xad94,%edx
    5a31:	83 c4 10             	add    $0x10,%esp
    5a34:	8b 45 d0             	mov    -0x30(%ebp),%eax
    5a37:	81 fa 90 ad 00 00    	cmp    $0xad90,%edx
    5a3d:	75 14                	jne    5a53 <block_init+0x123>
    5a3f:	eb 77                	jmp    5ab8 <block_init+0x188>
    5a41:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5a48:	8b 52 04             	mov    0x4(%edx),%edx
    5a4b:	81 fa 90 ad 00 00    	cmp    $0xad90,%edx
    5a51:	74 65                	je     5ab8 <block_init+0x188>
    5a53:	3b 5a 08             	cmp    0x8(%edx),%ebx
    5a56:	75 f0                	jne    5a48 <block_init+0x118>
    5a58:	83 ec 0c             	sub    $0xc,%esp
    5a5b:	89 45 d0             	mov    %eax,-0x30(%ebp)
    5a5e:	be f7 ff ff ff       	mov    $0xfffffff7,%esi
    5a63:	68 98 ad 00 00       	push   $0xad98
    5a68:	e8 73 34 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    5a6d:	8b 45 d0             	mov    -0x30(%ebp),%eax
    5a70:	89 04 24             	mov    %eax,(%esp)
    5a73:	e8 38 36 00 00       	call   90b0 <free@plt>
    5a78:	83 c4 10             	add    $0x10,%esp
    5a7b:	83 ec 0c             	sub    $0xc,%esp
    5a7e:	8b 45 d8             	mov    -0x28(%ebp),%eax
    5a81:	50                   	push   %eax
    5a82:	e8 39 33 00 00       	call   8dc0 <bd_close@plt>
    5a87:	89 3c 24             	mov    %edi,(%esp)
    5a8a:	e8 61 32 00 00       	call   8cf0 <async_hangup@plt>
    5a8f:	83 c4 10             	add    $0x10,%esp
    5a92:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5a95:	89 f0                	mov    %esi,%eax
    5a97:	5b                   	pop    %ebx
    5a98:	5e                   	pop    %esi
    5a99:	5f                   	pop    %edi
    5a9a:	5d                   	pop    %ebp
    5a9b:	c3                   	ret    
    5a9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5aa0:	83 ec 0c             	sub    $0xc,%esp
    5aa3:	57                   	push   %edi
    5aa4:	e8 47 32 00 00       	call   8cf0 <async_hangup@plt>
    5aa9:	83 c4 10             	add    $0x10,%esp
    5aac:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5aaf:	89 f0                	mov    %esi,%eax
    5ab1:	5b                   	pop    %ebx
    5ab2:	5e                   	pop    %esi
    5ab3:	5f                   	pop    %edi
    5ab4:	5d                   	pop    %ebp
    5ab5:	c3                   	ret    
    5ab6:	66 90                	xchg   %ax,%ax
    5ab8:	8b 15 90 ad 00 00    	mov    0xad90,%edx
    5abe:	83 ec 0c             	sub    $0xc,%esp
    5ac1:	c7 40 04 90 ad 00 00 	movl   $0xad90,0x4(%eax)
    5ac8:	89 10                	mov    %edx,(%eax)
    5aca:	89 42 04             	mov    %eax,0x4(%edx)
    5acd:	68 98 ad 00 00       	push   $0xad98
    5ad2:	a3 90 ad 00 00       	mov    %eax,0xad90
    5ad7:	e8 04 34 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    5adc:	83 c4 10             	add    $0x10,%esp
    5adf:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5ae2:	89 f0                	mov    %esi,%eax
    5ae4:	5b                   	pop    %ebx
    5ae5:	5e                   	pop    %esi
    5ae6:	5f                   	pop    %edi
    5ae7:	5d                   	pop    %ebp
    5ae8:	c3                   	ret    
    5ae9:	83 ce ff             	or     $0xffffffff,%esi
    5aec:	eb a4                	jmp    5a92 <block_init+0x162>
    5aee:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    5af3:	eb 86                	jmp    5a7b <block_init+0x14b>
    5af5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5af9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00005b00 <block_bb_read>:
    5b00:	55                   	push   %ebp
    5b01:	89 e5                	mov    %esp,%ebp
    5b03:	57                   	push   %edi
    5b04:	56                   	push   %esi
    5b05:	53                   	push   %ebx
    5b06:	83 ec 28             	sub    $0x28,%esp
    5b09:	8b 45 08             	mov    0x8(%ebp),%eax
    5b0c:	8b 75 0c             	mov    0xc(%ebp),%esi
    5b0f:	68 98 ad 00 00       	push   $0xad98
    5b14:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    5b17:	8b 7d 10             	mov    0x10(%ebp),%edi
    5b1a:	e8 a1 35 00 00       	call   90c0 <fibril_mutex_lock@plt>
    5b1f:	8b 1d 94 ad 00 00    	mov    0xad94,%ebx
    5b25:	83 c4 10             	add    $0x10,%esp
    5b28:	81 fb 90 ad 00 00    	cmp    $0xad90,%ebx
    5b2e:	74 20                	je     5b50 <block_bb_read+0x50>
    5b30:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    5b33:	3b 43 08             	cmp    0x8(%ebx),%eax
    5b36:	75 0d                	jne    5b45 <block_bb_read+0x45>
    5b38:	eb 36                	jmp    5b70 <block_bb_read+0x70>
    5b3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5b40:	3b 43 08             	cmp    0x8(%ebx),%eax
    5b43:	74 2b                	je     5b70 <block_bb_read+0x70>
    5b45:	8b 5b 04             	mov    0x4(%ebx),%ebx
    5b48:	81 fb 90 ad 00 00    	cmp    $0xad90,%ebx
    5b4e:	75 f0                	jne    5b40 <block_bb_read+0x40>
    5b50:	83 ec 0c             	sub    $0xc,%esp
    5b53:	68 98 ad 00 00       	push   $0xad98
    5b58:	e8 83 33 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    5b5d:	83 c4 10             	add    $0x10,%esp
    5b60:	83 ca ff             	or     $0xffffffff,%edx
    5b63:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5b66:	89 d0                	mov    %edx,%eax
    5b68:	5b                   	pop    %ebx
    5b69:	5e                   	pop    %esi
    5b6a:	5f                   	pop    %edi
    5b6b:	5d                   	pop    %ebp
    5b6c:	c3                   	ret    
    5b6d:	8d 76 00             	lea    0x0(%esi),%esi
    5b70:	83 ec 0c             	sub    $0xc,%esp
    5b73:	68 98 ad 00 00       	push   $0xad98
    5b78:	e8 63 33 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    5b7d:	8b 43 14             	mov    0x14(%ebx),%eax
    5b80:	83 c4 10             	add    $0x10,%esp
    5b83:	85 c0                	test   %eax,%eax
    5b85:	0f 85 9d 00 00 00    	jne    5c28 <block_bb_read+0x128>
    5b8b:	83 ec 0c             	sub    $0xc,%esp
    5b8e:	8b 43 28             	mov    0x28(%ebx),%eax
    5b91:	50                   	push   %eax
    5b92:	e8 59 32 00 00       	call   8df0 <malloc@plt>
    5b97:	83 c4 10             	add    $0x10,%esp
    5b9a:	89 c1                	mov    %eax,%ecx
    5b9c:	85 c0                	test   %eax,%eax
    5b9e:	0f 84 93 00 00 00    	je     5c37 <block_bb_read+0x137>
    5ba4:	50                   	push   %eax
    5ba5:	50                   	push   %eax
    5ba6:	8b 43 28             	mov    0x28(%ebx),%eax
    5ba9:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
    5bac:	50                   	push   %eax
    5bad:	51                   	push   %ecx
    5bae:	8b 43 10             	mov    0x10(%ebx),%eax
    5bb1:	6a 01                	push   $0x1
    5bb3:	6a 00                	push   $0x0
    5bb5:	6a 00                	push   $0x0
    5bb7:	50                   	push   %eax
    5bb8:	e8 b3 32 00 00       	call   8e70 <bd_read_blocks@plt>
    5bbd:	83 c4 20             	add    $0x20,%esp
    5bc0:	89 c2                	mov    %eax,%edx
    5bc2:	85 c0                	test   %eax,%eax
    5bc4:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    5bc7:	75 17                	jne    5be0 <block_bb_read+0xe0>
    5bc9:	89 4b 14             	mov    %ecx,0x14(%ebx)
    5bcc:	89 73 18             	mov    %esi,0x18(%ebx)
    5bcf:	89 7b 1c             	mov    %edi,0x1c(%ebx)
    5bd2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5bd5:	89 d0                	mov    %edx,%eax
    5bd7:	5b                   	pop    %ebx
    5bd8:	5e                   	pop    %esi
    5bd9:	5f                   	pop    %edi
    5bda:	5d                   	pop    %ebp
    5bdb:	c3                   	ret    
    5bdc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5be0:	50                   	push   %eax
    5be1:	50                   	push   %eax
    5be2:	89 4d e0             	mov    %ecx,-0x20(%ebp)
    5be5:	8b 4b 08             	mov    0x8(%ebx),%ecx
    5be8:	51                   	push   %ecx
    5be9:	6a 00                	push   $0x0
    5beb:	6a 00                	push   $0x0
    5bed:	6a 01                	push   $0x1
    5bef:	52                   	push   %edx
    5bf0:	68 40 89 00 00       	push   $0x8940
    5bf5:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    5bf8:	e8 e3 30 00 00       	call   8ce0 <printf@plt>
    5bfd:	83 c4 20             	add    $0x20,%esp
    5c00:	e8 3b 32 00 00       	call   8e40 <stacktrace_print@plt>
    5c05:	83 ec 0c             	sub    $0xc,%esp
    5c08:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    5c0b:	51                   	push   %ecx
    5c0c:	e8 9f 34 00 00       	call   90b0 <free@plt>
    5c11:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    5c14:	83 c4 10             	add    $0x10,%esp
    5c17:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5c1a:	89 d0                	mov    %edx,%eax
    5c1c:	5b                   	pop    %ebx
    5c1d:	5e                   	pop    %esi
    5c1e:	5f                   	pop    %edi
    5c1f:	5d                   	pop    %ebp
    5c20:	c3                   	ret    
    5c21:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5c28:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5c2b:	ba f7 ff ff ff       	mov    $0xfffffff7,%edx
    5c30:	89 d0                	mov    %edx,%eax
    5c32:	5b                   	pop    %ebx
    5c33:	5e                   	pop    %esi
    5c34:	5f                   	pop    %edi
    5c35:	5d                   	pop    %ebp
    5c36:	c3                   	ret    
    5c37:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
    5c3c:	e9 22 ff ff ff       	jmp    5b63 <block_bb_read+0x63>
    5c41:	eb 0d                	jmp    5c50 <block_bb_get>
    5c43:	90                   	nop
    5c44:	90                   	nop
    5c45:	90                   	nop
    5c46:	90                   	nop
    5c47:	90                   	nop
    5c48:	90                   	nop
    5c49:	90                   	nop
    5c4a:	90                   	nop
    5c4b:	90                   	nop
    5c4c:	90                   	nop
    5c4d:	90                   	nop
    5c4e:	90                   	nop
    5c4f:	90                   	nop

00005c50 <block_bb_get>:
    5c50:	55                   	push   %ebp
    5c51:	89 e5                	mov    %esp,%ebp
    5c53:	56                   	push   %esi
    5c54:	53                   	push   %ebx
    5c55:	83 ec 0c             	sub    $0xc,%esp
    5c58:	8b 75 08             	mov    0x8(%ebp),%esi
    5c5b:	68 98 ad 00 00       	push   $0xad98
    5c60:	e8 5b 34 00 00       	call   90c0 <fibril_mutex_lock@plt>
    5c65:	8b 1d 94 ad 00 00    	mov    0xad94,%ebx
    5c6b:	83 c4 10             	add    $0x10,%esp
    5c6e:	81 fb 90 ad 00 00    	cmp    $0xad90,%ebx
    5c74:	75 0d                	jne    5c83 <block_bb_get+0x33>
    5c76:	eb 28                	jmp    5ca0 <block_bb_get+0x50>
    5c78:	8b 5b 04             	mov    0x4(%ebx),%ebx
    5c7b:	81 fb 90 ad 00 00    	cmp    $0xad90,%ebx
    5c81:	74 1d                	je     5ca0 <block_bb_get+0x50>
    5c83:	3b 73 08             	cmp    0x8(%ebx),%esi
    5c86:	75 f0                	jne    5c78 <block_bb_get+0x28>
    5c88:	83 ec 0c             	sub    $0xc,%esp
    5c8b:	68 98 ad 00 00       	push   $0xad98
    5c90:	e8 4b 32 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    5c95:	8b 43 14             	mov    0x14(%ebx),%eax
    5c98:	8d 65 f8             	lea    -0x8(%ebp),%esp
    5c9b:	5b                   	pop    %ebx
    5c9c:	5e                   	pop    %esi
    5c9d:	5d                   	pop    %ebp
    5c9e:	c3                   	ret    
    5c9f:	90                   	nop
    5ca0:	83 ec 0c             	sub    $0xc,%esp
    5ca3:	68 98 ad 00 00       	push   $0xad98
    5ca8:	e8 33 32 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    5cad:	83 c4 0c             	add    $0xc,%esp
    5cb0:	68 ee 00 00 00       	push   $0xee
    5cb5:	68 ef 88 00 00       	push   $0x88ef
    5cba:	68 f7 88 00 00       	push   $0x88f7
    5cbf:	e8 ec 31 00 00       	call   8eb0 <assert_abort@plt>
    5cc4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5cca:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00005cd0 <block_cache_init>:
    5cd0:	55                   	push   %ebp
    5cd1:	89 e5                	mov    %esp,%ebp
    5cd3:	56                   	push   %esi
    5cd4:	53                   	push   %ebx
    5cd5:	83 ec 0c             	sub    $0xc,%esp
    5cd8:	8b 75 08             	mov    0x8(%ebp),%esi
    5cdb:	68 98 ad 00 00       	push   $0xad98
    5ce0:	e8 db 33 00 00       	call   90c0 <fibril_mutex_lock@plt>
    5ce5:	8b 1d 94 ad 00 00    	mov    0xad94,%ebx
    5ceb:	83 c4 10             	add    $0x10,%esp
    5cee:	81 fb 90 ad 00 00    	cmp    $0xad90,%ebx
    5cf4:	75 19                	jne    5d0f <block_cache_init+0x3f>
    5cf6:	e9 ad 00 00 00       	jmp    5da8 <block_cache_init+0xd8>
    5cfb:	90                   	nop
    5cfc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5d00:	8b 5b 04             	mov    0x4(%ebx),%ebx
    5d03:	81 fb 90 ad 00 00    	cmp    $0xad90,%ebx
    5d09:	0f 84 99 00 00 00    	je     5da8 <block_cache_init+0xd8>
    5d0f:	3b 73 08             	cmp    0x8(%ebx),%esi
    5d12:	75 ec                	jne    5d00 <block_cache_init+0x30>
    5d14:	83 ec 0c             	sub    $0xc,%esp
    5d17:	68 98 ad 00 00       	push   $0xad98
    5d1c:	e8 bf 31 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    5d21:	8b 43 2c             	mov    0x2c(%ebx),%eax
    5d24:	83 c4 10             	add    $0x10,%esp
    5d27:	85 c0                	test   %eax,%eax
    5d29:	0f 85 99 00 00 00    	jne    5dc8 <block_cache_init+0xf8>
    5d2f:	83 ec 0c             	sub    $0xc,%esp
    5d32:	6a 48                	push   $0x48
    5d34:	e8 b7 30 00 00       	call   8df0 <malloc@plt>
    5d39:	83 c4 10             	add    $0x10,%esp
    5d3c:	89 c6                	mov    %eax,%esi
    5d3e:	85 c0                	test   %eax,%eax
    5d40:	0f 84 b4 00 00 00    	je     5dfa <block_cache_init+0x12a>
    5d46:	83 ec 0c             	sub    $0xc,%esp
    5d49:	50                   	push   %eax
    5d4a:	e8 a1 31 00 00       	call   8ef0 <fibril_mutex_initialize@plt>
    5d4f:	8d 46 3c             	lea    0x3c(%esi),%eax
    5d52:	31 d2                	xor    %edx,%edx
    5d54:	89 46 3c             	mov    %eax,0x3c(%esi)
    5d57:	89 46 40             	mov    %eax,0x40(%esi)
    5d5a:	8b 45 0c             	mov    0xc(%ebp),%eax
    5d5d:	83 c4 10             	add    $0x10,%esp
    5d60:	89 46 10             	mov    %eax,0x10(%esi)
    5d63:	8b 45 10             	mov    0x10(%ebp),%eax
    5d66:	89 46 18             	mov    %eax,0x18(%esi)
    5d69:	8b 45 14             	mov    0x14(%ebp),%eax
    5d6c:	89 46 44             	mov    %eax,0x44(%esi)
    5d6f:	8b 45 0c             	mov    0xc(%ebp),%eax
    5d72:	f7 73 28             	divl   0x28(%ebx)
    5d75:	c7 46 1c 00 00 00 00 	movl   $0x0,0x1c(%esi)
    5d7c:	85 d2                	test   %edx,%edx
    5d7e:	75 54                	jne    5dd4 <block_cache_init+0x104>
    5d80:	89 46 14             	mov    %eax,0x14(%esi)
    5d83:	8d 46 20             	lea    0x20(%esi),%eax
    5d86:	68 7c ad 00 00       	push   $0xad7c
    5d8b:	6a 00                	push   $0x0
    5d8d:	6a 00                	push   $0x0
    5d8f:	50                   	push   %eax
    5d90:	e8 9b 2f 00 00       	call   8d30 <hash_table_create@plt>
    5d95:	83 c4 10             	add    $0x10,%esp
    5d98:	84 c0                	test   %al,%al
    5d9a:	74 4b                	je     5de7 <block_cache_init+0x117>
    5d9c:	89 73 2c             	mov    %esi,0x2c(%ebx)
    5d9f:	31 c0                	xor    %eax,%eax
    5da1:	8d 65 f8             	lea    -0x8(%ebp),%esp
    5da4:	5b                   	pop    %ebx
    5da5:	5e                   	pop    %esi
    5da6:	5d                   	pop    %ebp
    5da7:	c3                   	ret    
    5da8:	83 ec 0c             	sub    $0xc,%esp
    5dab:	68 98 ad 00 00       	push   $0xad98
    5db0:	e8 2b 31 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    5db5:	83 c4 10             	add    $0x10,%esp
    5db8:	8d 65 f8             	lea    -0x8(%ebp),%esp
    5dbb:	83 c8 ff             	or     $0xffffffff,%eax
    5dbe:	5b                   	pop    %ebx
    5dbf:	5e                   	pop    %esi
    5dc0:	5d                   	pop    %ebp
    5dc1:	c3                   	ret    
    5dc2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5dc8:	8d 65 f8             	lea    -0x8(%ebp),%esp
    5dcb:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax
    5dd0:	5b                   	pop    %ebx
    5dd1:	5e                   	pop    %esi
    5dd2:	5d                   	pop    %ebp
    5dd3:	c3                   	ret    
    5dd4:	83 ec 0c             	sub    $0xc,%esp
    5dd7:	56                   	push   %esi
    5dd8:	e8 d3 32 00 00       	call   90b0 <free@plt>
    5ddd:	83 c4 10             	add    $0x10,%esp
    5de0:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    5de5:	eb ba                	jmp    5da1 <block_cache_init+0xd1>
    5de7:	83 ec 0c             	sub    $0xc,%esp
    5dea:	56                   	push   %esi
    5deb:	e8 c0 32 00 00       	call   90b0 <free@plt>
    5df0:	83 c4 10             	add    $0x10,%esp
    5df3:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    5df8:	eb a7                	jmp    5da1 <block_cache_init+0xd1>
    5dfa:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    5dff:	eb a0                	jmp    5da1 <block_cache_init+0xd1>
    5e01:	eb 0d                	jmp    5e10 <block_cache_fini>
    5e03:	90                   	nop
    5e04:	90                   	nop
    5e05:	90                   	nop
    5e06:	90                   	nop
    5e07:	90                   	nop
    5e08:	90                   	nop
    5e09:	90                   	nop
    5e0a:	90                   	nop
    5e0b:	90                   	nop
    5e0c:	90                   	nop
    5e0d:	90                   	nop
    5e0e:	90                   	nop
    5e0f:	90                   	nop

00005e10 <block_cache_fini>:
    5e10:	55                   	push   %ebp
    5e11:	89 e5                	mov    %esp,%ebp
    5e13:	57                   	push   %edi
    5e14:	56                   	push   %esi
    5e15:	53                   	push   %ebx
    5e16:	83 ec 38             	sub    $0x38,%esp
    5e19:	8b 5d 08             	mov    0x8(%ebp),%ebx
    5e1c:	68 98 ad 00 00       	push   $0xad98
    5e21:	e8 9a 32 00 00       	call   90c0 <fibril_mutex_lock@plt>
    5e26:	8b 3d 94 ad 00 00    	mov    0xad94,%edi
    5e2c:	83 c4 10             	add    $0x10,%esp
    5e2f:	81 ff 90 ad 00 00    	cmp    $0xad90,%edi
    5e35:	75 18                	jne    5e4f <block_cache_fini+0x3f>
    5e37:	e9 2c 01 00 00       	jmp    5f68 <block_cache_fini+0x158>
    5e3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5e40:	8b 7f 04             	mov    0x4(%edi),%edi
    5e43:	81 ff 90 ad 00 00    	cmp    $0xad90,%edi
    5e49:	0f 84 19 01 00 00    	je     5f68 <block_cache_fini+0x158>
    5e4f:	3b 5f 08             	cmp    0x8(%edi),%ebx
    5e52:	75 ec                	jne    5e40 <block_cache_fini+0x30>
    5e54:	83 ec 0c             	sub    $0xc,%esp
    5e57:	68 98 ad 00 00       	push   $0xad98
    5e5c:	e8 7f 30 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    5e61:	8b 47 2c             	mov    0x2c(%edi),%eax
    5e64:	83 c4 10             	add    $0x10,%esp
    5e67:	89 45 e0             	mov    %eax,-0x20(%ebp)
    5e6a:	85 c0                	test   %eax,%eax
    5e6c:	0f 84 42 01 00 00    	je     5fb4 <block_cache_fini+0x1a4>
    5e72:	8b 58 40             	mov    0x40(%eax),%ebx
    5e75:	8d 70 3c             	lea    0x3c(%eax),%esi
    5e78:	83 c0 20             	add    $0x20,%eax
    5e7b:	89 75 dc             	mov    %esi,-0x24(%ebp)
    5e7e:	89 45 d8             	mov    %eax,-0x28(%ebp)
    5e81:	39 de                	cmp    %ebx,%esi
    5e83:	0f 84 2f 01 00 00    	je     5fb8 <block_cache_fini+0x1a8>
    5e89:	89 da                	mov    %ebx,%edx
    5e8b:	89 7d d0             	mov    %edi,-0x30(%ebp)
    5e8e:	eb 35                	jmp    5ec5 <block_cache_fini+0xb5>
    5e90:	8b 55 d8             	mov    -0x28(%ebp),%edx
    5e93:	8d 43 50             	lea    0x50(%ebx),%eax
    5e96:	89 d6                	mov    %edx,%esi
    5e98:	51                   	push   %ecx
    5e99:	51                   	push   %ecx
    5e9a:	50                   	push   %eax
    5e9b:	52                   	push   %edx
    5e9c:	e8 bf 30 00 00       	call   8f60 <hash_table_remove_item@plt>
    5ea1:	8b 43 58             	mov    0x58(%ebx),%eax
    5ea4:	5f                   	pop    %edi
    5ea5:	50                   	push   %eax
    5ea6:	e8 05 32 00 00       	call   90b0 <free@plt>
    5eab:	89 1c 24             	mov    %ebx,(%esp)
    5eae:	e8 fd 31 00 00       	call   90b0 <free@plt>
    5eb3:	8b 45 e0             	mov    -0x20(%ebp),%eax
    5eb6:	83 c4 10             	add    $0x10,%esp
    5eb9:	8b 50 40             	mov    0x40(%eax),%edx
    5ebc:	3b 55 dc             	cmp    -0x24(%ebp),%edx
    5ebf:	0f 84 c3 00 00 00    	je     5f88 <block_cache_fini+0x178>
    5ec5:	8d 5a b8             	lea    -0x48(%edx),%ebx
    5ec8:	8b 4b 48             	mov    0x48(%ebx),%ecx
    5ecb:	85 c9                	test   %ecx,%ecx
    5ecd:	74 0f                	je     5ede <block_cache_fini+0xce>
    5ecf:	8b 43 4c             	mov    0x4c(%ebx),%eax
    5ed2:	85 c0                	test   %eax,%eax
    5ed4:	74 08                	je     5ede <block_cache_fini+0xce>
    5ed6:	89 08                	mov    %ecx,(%eax)
    5ed8:	8b 4b 48             	mov    0x48(%ebx),%ecx
    5edb:	89 41 04             	mov    %eax,0x4(%ecx)
    5ede:	c7 43 48 00 00 00 00 	movl   $0x0,0x48(%ebx)
    5ee5:	c7 43 4c 00 00 00 00 	movl   $0x0,0x4c(%ebx)
    5eec:	80 7b 14 00          	cmpb   $0x0,0x14(%ebx)
    5ef0:	74 9e                	je     5e90 <block_cache_fini+0x80>
    5ef2:	8b 45 e0             	mov    -0x20(%ebp),%eax
    5ef5:	8b 73 38             	mov    0x38(%ebx),%esi
    5ef8:	8b 7b 3c             	mov    0x3c(%ebx),%edi
    5efb:	8b 48 14             	mov    0x14(%eax),%ecx
    5efe:	50                   	push   %eax
    5eff:	50                   	push   %eax
    5f00:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    5f03:	8b 53 40             	mov    0x40(%ebx),%edx
    5f06:	8b 43 58             	mov    0x58(%ebx),%eax
    5f09:	52                   	push   %edx
    5f0a:	50                   	push   %eax
    5f0b:	8b 45 d0             	mov    -0x30(%ebp),%eax
    5f0e:	51                   	push   %ecx
    5f0f:	57                   	push   %edi
    5f10:	56                   	push   %esi
    5f11:	8b 40 10             	mov    0x10(%eax),%eax
    5f14:	50                   	push   %eax
    5f15:	e8 56 2e 00 00       	call   8d70 <bd_write_blocks@plt>
    5f1a:	83 c4 20             	add    $0x20,%esp
    5f1d:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    5f20:	85 c0                	test   %eax,%eax
    5f22:	0f 84 68 ff ff ff    	je     5e90 <block_cache_fini+0x80>
    5f28:	89 7d e4             	mov    %edi,-0x1c(%ebp)
    5f2b:	8b 7d d0             	mov    -0x30(%ebp),%edi
    5f2e:	89 75 e0             	mov    %esi,-0x20(%ebp)
    5f31:	89 ce                	mov    %ecx,%esi
    5f33:	89 c1                	mov    %eax,%ecx
    5f35:	50                   	push   %eax
    5f36:	50                   	push   %eax
    5f37:	8b 47 08             	mov    0x8(%edi),%eax
    5f3a:	50                   	push   %eax
    5f3b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    5f3e:	50                   	push   %eax
    5f3f:	8b 45 e0             	mov    -0x20(%ebp),%eax
    5f42:	50                   	push   %eax
    5f43:	56                   	push   %esi
    5f44:	51                   	push   %ecx
    5f45:	68 8c 89 00 00       	push   $0x898c
    5f4a:	89 4d e0             	mov    %ecx,-0x20(%ebp)
    5f4d:	e8 8e 2d 00 00       	call   8ce0 <printf@plt>
    5f52:	83 c4 20             	add    $0x20,%esp
    5f55:	e8 e6 2e 00 00       	call   8e40 <stacktrace_print@plt>
    5f5a:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    5f5d:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5f60:	89 c8                	mov    %ecx,%eax
    5f62:	5b                   	pop    %ebx
    5f63:	5e                   	pop    %esi
    5f64:	5f                   	pop    %edi
    5f65:	5d                   	pop    %ebp
    5f66:	c3                   	ret    
    5f67:	90                   	nop
    5f68:	83 ec 0c             	sub    $0xc,%esp
    5f6b:	68 98 ad 00 00       	push   $0xad98
    5f70:	e8 6b 2f 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    5f75:	83 c4 10             	add    $0x10,%esp
    5f78:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5f7b:	83 c9 ff             	or     $0xffffffff,%ecx
    5f7e:	5b                   	pop    %ebx
    5f7f:	89 c8                	mov    %ecx,%eax
    5f81:	5e                   	pop    %esi
    5f82:	5f                   	pop    %edi
    5f83:	5d                   	pop    %ebp
    5f84:	c3                   	ret    
    5f85:	8d 76 00             	lea    0x0(%esi),%esi
    5f88:	8b 7d d0             	mov    -0x30(%ebp),%edi
    5f8b:	83 ec 0c             	sub    $0xc,%esp
    5f8e:	56                   	push   %esi
    5f8f:	e8 fc 30 00 00       	call   9090 <hash_table_destroy@plt>
    5f94:	c7 47 2c 00 00 00 00 	movl   $0x0,0x2c(%edi)
    5f9b:	8b 55 e0             	mov    -0x20(%ebp),%edx
    5f9e:	58                   	pop    %eax
    5f9f:	52                   	push   %edx
    5fa0:	e8 0b 31 00 00       	call   90b0 <free@plt>
    5fa5:	83 c4 10             	add    $0x10,%esp
    5fa8:	8d 65 f4             	lea    -0xc(%ebp),%esp
    5fab:	31 c9                	xor    %ecx,%ecx
    5fad:	89 c8                	mov    %ecx,%eax
    5faf:	5b                   	pop    %ebx
    5fb0:	5e                   	pop    %esi
    5fb1:	5f                   	pop    %edi
    5fb2:	5d                   	pop    %ebp
    5fb3:	c3                   	ret    
    5fb4:	31 c9                	xor    %ecx,%ecx
    5fb6:	eb a5                	jmp    5f5d <block_cache_fini+0x14d>
    5fb8:	8b 45 e0             	mov    -0x20(%ebp),%eax
    5fbb:	8d 70 20             	lea    0x20(%eax),%esi
    5fbe:	eb cb                	jmp    5f8b <block_cache_fini+0x17b>

00005fc0 <block_fini>:
    5fc0:	55                   	push   %ebp
    5fc1:	89 e5                	mov    %esp,%ebp
    5fc3:	56                   	push   %esi
    5fc4:	53                   	push   %ebx
    5fc5:	83 ec 0c             	sub    $0xc,%esp
    5fc8:	8b 75 08             	mov    0x8(%ebp),%esi
    5fcb:	68 98 ad 00 00       	push   $0xad98
    5fd0:	e8 eb 30 00 00       	call   90c0 <fibril_mutex_lock@plt>
    5fd5:	8b 1d 94 ad 00 00    	mov    0xad94,%ebx
    5fdb:	83 c4 10             	add    $0x10,%esp
    5fde:	81 fb 90 ad 00 00    	cmp    $0xad90,%ebx
    5fe4:	75 19                	jne    5fff <block_fini+0x3f>
    5fe6:	e9 c5 00 00 00       	jmp    60b0 <block_fini+0xf0>
    5feb:	90                   	nop
    5fec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5ff0:	8b 5b 04             	mov    0x4(%ebx),%ebx
    5ff3:	81 fb 90 ad 00 00    	cmp    $0xad90,%ebx
    5ff9:	0f 84 b1 00 00 00    	je     60b0 <block_fini+0xf0>
    5fff:	3b 73 08             	cmp    0x8(%ebx),%esi
    6002:	75 ec                	jne    5ff0 <block_fini+0x30>
    6004:	83 ec 0c             	sub    $0xc,%esp
    6007:	68 98 ad 00 00       	push   $0xad98
    600c:	e8 cf 2e 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6011:	8b 43 2c             	mov    0x2c(%ebx),%eax
    6014:	83 c4 10             	add    $0x10,%esp
    6017:	85 c0                	test   %eax,%eax
    6019:	74 0c                	je     6027 <block_fini+0x67>
    601b:	83 ec 0c             	sub    $0xc,%esp
    601e:	56                   	push   %esi
    601f:	e8 ec fd ff ff       	call   5e10 <block_cache_fini>
    6024:	83 c4 10             	add    $0x10,%esp
    6027:	6a 00                	push   $0x0
    6029:	6a 00                	push   $0x0
    602b:	6a 00                	push   $0x0
    602d:	8b 73 10             	mov    0x10(%ebx),%esi
    6030:	56                   	push   %esi
    6031:	e8 9a 2f 00 00       	call   8fd0 <bd_sync_cache@plt>
    6036:	c7 04 24 98 ad 00 00 	movl   $0xad98,(%esp)
    603d:	e8 7e 30 00 00       	call   90c0 <fibril_mutex_lock@plt>
    6042:	8b 13                	mov    (%ebx),%edx
    6044:	83 c4 10             	add    $0x10,%esp
    6047:	85 d2                	test   %edx,%edx
    6049:	74 0e                	je     6059 <block_fini+0x99>
    604b:	8b 43 04             	mov    0x4(%ebx),%eax
    604e:	85 c0                	test   %eax,%eax
    6050:	74 07                	je     6059 <block_fini+0x99>
    6052:	89 10                	mov    %edx,(%eax)
    6054:	8b 13                	mov    (%ebx),%edx
    6056:	89 42 04             	mov    %eax,0x4(%edx)
    6059:	83 ec 0c             	sub    $0xc,%esp
    605c:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
    6062:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
    6069:	68 98 ad 00 00       	push   $0xad98
    606e:	e8 6d 2e 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6073:	8b 43 14             	mov    0x14(%ebx),%eax
    6076:	83 c4 10             	add    $0x10,%esp
    6079:	85 c0                	test   %eax,%eax
    607b:	74 0c                	je     6089 <block_fini+0xc9>
    607d:	83 ec 0c             	sub    $0xc,%esp
    6080:	50                   	push   %eax
    6081:	e8 2a 30 00 00       	call   90b0 <free@plt>
    6086:	83 c4 10             	add    $0x10,%esp
    6089:	83 ec 0c             	sub    $0xc,%esp
    608c:	8b 43 10             	mov    0x10(%ebx),%eax
    608f:	50                   	push   %eax
    6090:	e8 2b 2d 00 00       	call   8dc0 <bd_close@plt>
    6095:	8b 4b 0c             	mov    0xc(%ebx),%ecx
    6098:	5a                   	pop    %edx
    6099:	51                   	push   %ecx
    609a:	e8 51 2c 00 00       	call   8cf0 <async_hangup@plt>
    609f:	89 5d 08             	mov    %ebx,0x8(%ebp)
    60a2:	83 c4 10             	add    $0x10,%esp
    60a5:	8d 65 f8             	lea    -0x8(%ebp),%esp
    60a8:	5b                   	pop    %ebx
    60a9:	5e                   	pop    %esi
    60aa:	5d                   	pop    %ebp
    60ab:	e9 00 30 00 00       	jmp    90b0 <free@plt>
    60b0:	83 ec 0c             	sub    $0xc,%esp
    60b3:	68 98 ad 00 00       	push   $0xad98
    60b8:	e8 23 2e 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    60bd:	83 c4 0c             	add    $0xc,%esp
    60c0:	68 bf 00 00 00       	push   $0xbf
    60c5:	68 ef 88 00 00       	push   $0x88ef
    60ca:	68 f7 88 00 00       	push   $0x88f7
    60cf:	e8 dc 2d 00 00       	call   8eb0 <assert_abort@plt>
    60d4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    60da:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000060e0 <block_put>:
    60e0:	55                   	push   %ebp
    60e1:	89 e5                	mov    %esp,%ebp
    60e3:	57                   	push   %edi
    60e4:	56                   	push   %esi
    60e5:	53                   	push   %ebx
    60e6:	83 ec 28             	sub    $0x28,%esp
    60e9:	8b 7d 08             	mov    0x8(%ebp),%edi
    60ec:	8b 5f 2c             	mov    0x2c(%edi),%ebx
    60ef:	68 98 ad 00 00       	push   $0xad98
    60f4:	e8 c7 2f 00 00       	call   90c0 <fibril_mutex_lock@plt>
    60f9:	8b 35 94 ad 00 00    	mov    0xad94,%esi
    60ff:	83 c4 10             	add    $0x10,%esp
    6102:	81 fe 90 ad 00 00    	cmp    $0xad90,%esi
    6108:	75 15                	jne    611f <block_put+0x3f>
    610a:	e9 c1 01 00 00       	jmp    62d0 <block_put+0x1f0>
    610f:	90                   	nop
    6110:	8b 76 04             	mov    0x4(%esi),%esi
    6113:	81 fe 90 ad 00 00    	cmp    $0xad90,%esi
    6119:	0f 84 b1 01 00 00    	je     62d0 <block_put+0x1f0>
    611f:	3b 5e 08             	cmp    0x8(%esi),%ebx
    6122:	75 ec                	jne    6110 <block_put+0x30>
    6124:	83 ec 0c             	sub    $0xc,%esp
    6127:	68 98 ad 00 00       	push   $0xad98
    612c:	e8 af 2d 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6131:	8b 5e 2c             	mov    0x2c(%esi),%ebx
    6134:	83 c4 10             	add    $0x10,%esp
    6137:	85 db                	test   %ebx,%ebx
    6139:	0f 84 6b 02 00 00    	je     63aa <block_put+0x2ca>
    613f:	8b 47 10             	mov    0x10(%edi),%eax
    6142:	85 c0                	test   %eax,%eax
    6144:	0f 84 75 02 00 00    	je     63bf <block_put+0x2df>
    614a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    6151:	89 75 e0             	mov    %esi,-0x20(%ebp)
    6154:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6158:	83 ec 0c             	sub    $0xc,%esp
    615b:	53                   	push   %ebx
    615c:	e8 5f 2f 00 00       	call   90c0 <fibril_mutex_lock@plt>
    6161:	8b 43 44             	mov    0x44(%ebx),%eax
    6164:	8b 73 1c             	mov    0x1c(%ebx),%esi
    6167:	89 45 d8             	mov    %eax,-0x28(%ebp)
    616a:	89 1c 24             	mov    %ebx,(%esp)
    616d:	e8 6e 2d 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6172:	89 3c 24             	mov    %edi,(%esp)
    6175:	e8 46 2f 00 00       	call   90c0 <fibril_mutex_lock@plt>
    617a:	83 c4 10             	add    $0x10,%esp
    617d:	80 7f 15 00          	cmpb   $0x0,0x15(%edi)
    6181:	0f 85 39 01 00 00    	jne    62c0 <block_put+0x1e0>
    6187:	80 7f 14 00          	cmpb   $0x0,0x14(%edi)
    618b:	74 0a                	je     6197 <block_put+0xb7>
    618d:	83 7f 10 01          	cmpl   $0x1,0x10(%edi)
    6191:	0f 84 b9 00 00 00    	je     6250 <block_put+0x170>
    6197:	83 ec 0c             	sub    $0xc,%esp
    619a:	57                   	push   %edi
    619b:	e8 40 2d 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    61a0:	89 1c 24             	mov    %ebx,(%esp)
    61a3:	e8 18 2f 00 00       	call   90c0 <fibril_mutex_lock@plt>
    61a8:	89 3c 24             	mov    %edi,(%esp)
    61ab:	e8 10 2f 00 00       	call   90c0 <fibril_mutex_lock@plt>
    61b0:	8b 47 10             	mov    0x10(%edi),%eax
    61b3:	83 c4 10             	add    $0x10,%esp
    61b6:	48                   	dec    %eax
    61b7:	89 47 10             	mov    %eax,0x10(%edi)
    61ba:	85 c0                	test   %eax,%eax
    61bc:	0f 85 51 01 00 00    	jne    6313 <block_put+0x233>
    61c2:	83 7b 1c 14          	cmpl   $0x14,0x1c(%ebx)
    61c6:	77 48                	ja     6210 <block_put+0x130>
    61c8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    61cb:	85 c0                	test   %eax,%eax
    61cd:	75 41                	jne    6210 <block_put+0x130>
    61cf:	83 7b 44 01          	cmpl   $0x1,0x44(%ebx)
    61d3:	0f 84 1b 01 00 00    	je     62f4 <block_put+0x214>
    61d9:	80 7f 14 00          	cmpb   $0x0,0x14(%edi)
    61dd:	0f 84 11 01 00 00    	je     62f4 <block_put+0x214>
    61e3:	83 ec 0c             	sub    $0xc,%esp
    61e6:	c7 47 10 01 00 00 00 	movl   $0x1,0x10(%edi)
    61ed:	57                   	push   %edi
    61ee:	e8 ed 2c 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    61f3:	89 1c 24             	mov    %ebx,(%esp)
    61f6:	e8 e5 2c 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    61fb:	83 c4 10             	add    $0x10,%esp
    61fe:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    6205:	e9 4e ff ff ff       	jmp    6158 <block_put+0x78>
    620a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6210:	80 7f 14 00          	cmpb   $0x0,0x14(%edi)
    6214:	0f 84 4a 01 00 00    	je     6364 <block_put+0x284>
    621a:	8b 47 44             	mov    0x44(%edi),%eax
    621d:	c7 47 10 01 00 00 00 	movl   $0x1,0x10(%edi)
    6224:	83 f8 09             	cmp    $0x9,%eax
    6227:	0f 8f 1b 01 00 00    	jg     6348 <block_put+0x268>
    622d:	83 ec 0c             	sub    $0xc,%esp
    6230:	40                   	inc    %eax
    6231:	89 47 44             	mov    %eax,0x44(%edi)
    6234:	57                   	push   %edi
    6235:	e8 a6 2c 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    623a:	89 1c 24             	mov    %ebx,(%esp)
    623d:	e8 9e 2c 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6242:	83 c4 10             	add    $0x10,%esp
    6245:	e9 0e ff ff ff       	jmp    6158 <block_put+0x78>
    624a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6250:	83 fe 14             	cmp    $0x14,%esi
    6253:	77 0a                	ja     625f <block_put+0x17f>
    6255:	83 7d d8 01          	cmpl   $0x1,-0x28(%ebp)
    6259:	0f 84 38 ff ff ff    	je     6197 <block_put+0xb7>
    625f:	8b 47 38             	mov    0x38(%edi),%eax
    6262:	8b 57 3c             	mov    0x3c(%edi),%edx
    6265:	8b 73 14             	mov    0x14(%ebx),%esi
    6268:	51                   	push   %ecx
    6269:	51                   	push   %ecx
    626a:	89 45 d8             	mov    %eax,-0x28(%ebp)
    626d:	8b 4f 40             	mov    0x40(%edi),%ecx
    6270:	89 55 dc             	mov    %edx,-0x24(%ebp)
    6273:	51                   	push   %ecx
    6274:	8b 4f 58             	mov    0x58(%edi),%ecx
    6277:	51                   	push   %ecx
    6278:	56                   	push   %esi
    6279:	52                   	push   %edx
    627a:	50                   	push   %eax
    627b:	8b 45 e0             	mov    -0x20(%ebp),%eax
    627e:	8b 40 10             	mov    0x10(%eax),%eax
    6281:	50                   	push   %eax
    6282:	e8 e9 2a 00 00       	call   8d70 <bd_write_blocks@plt>
    6287:	83 c4 20             	add    $0x20,%esp
    628a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    628d:	85 c0                	test   %eax,%eax
    628f:	0f 84 a3 00 00 00    	je     6338 <block_put+0x258>
    6295:	50                   	push   %eax
    6296:	50                   	push   %eax
    6297:	8b 45 e0             	mov    -0x20(%ebp),%eax
    629a:	8b 55 dc             	mov    -0x24(%ebp),%edx
    629d:	8b 4d d8             	mov    -0x28(%ebp),%ecx
    62a0:	8b 40 08             	mov    0x8(%eax),%eax
    62a3:	50                   	push   %eax
    62a4:	52                   	push   %edx
    62a5:	51                   	push   %ecx
    62a6:	56                   	push   %esi
    62a7:	8b 75 e4             	mov    -0x1c(%ebp),%esi
    62aa:	56                   	push   %esi
    62ab:	68 8c 89 00 00       	push   $0x898c
    62b0:	e8 2b 2a 00 00       	call   8ce0 <printf@plt>
    62b5:	83 c4 20             	add    $0x20,%esp
    62b8:	e8 83 2b 00 00       	call   8e40 <stacktrace_print@plt>
    62bd:	8d 76 00             	lea    0x0(%esi),%esi
    62c0:	c6 47 14 00          	movb   $0x0,0x14(%edi)
    62c4:	e9 ce fe ff ff       	jmp    6197 <block_put+0xb7>
    62c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    62d0:	83 ec 0c             	sub    $0xc,%esp
    62d3:	68 98 ad 00 00       	push   $0xad98
    62d8:	e8 03 2c 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    62dd:	83 c4 0c             	add    $0xc,%esp
    62e0:	68 4c 02 00 00       	push   $0x24c
    62e5:	68 ef 88 00 00       	push   $0x88ef
    62ea:	68 f7 88 00 00       	push   $0x88f7
    62ef:	e8 bc 2b 00 00       	call   8eb0 <assert_abort@plt>
    62f4:	8d 4b 3c             	lea    0x3c(%ebx),%ecx
    62f7:	8d 47 48             	lea    0x48(%edi),%eax
    62fa:	89 4f 4c             	mov    %ecx,0x4c(%edi)
    62fd:	8b 4b 3c             	mov    0x3c(%ebx),%ecx
    6300:	89 4f 48             	mov    %ecx,0x48(%edi)
    6303:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    630a:	8b 4b 3c             	mov    0x3c(%ebx),%ecx
    630d:	89 41 04             	mov    %eax,0x4(%ecx)
    6310:	89 43 3c             	mov    %eax,0x3c(%ebx)
    6313:	83 ec 0c             	sub    $0xc,%esp
    6316:	57                   	push   %edi
    6317:	e8 c4 2b 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    631c:	89 1c 24             	mov    %ebx,(%esp)
    631f:	e8 bc 2b 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6324:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    6327:	83 c4 10             	add    $0x10,%esp
    632a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    632d:	5b                   	pop    %ebx
    632e:	5e                   	pop    %esi
    632f:	5f                   	pop    %edi
    6330:	5d                   	pop    %ebp
    6331:	c3                   	ret    
    6332:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6338:	c7 47 44 00 00 00 00 	movl   $0x0,0x44(%edi)
    633f:	c6 47 14 00          	movb   $0x0,0x14(%edi)
    6343:	e9 4f fe ff ff       	jmp    6197 <block_put+0xb7>
    6348:	8b 75 e0             	mov    -0x20(%ebp),%esi
    634b:	8b 46 08             	mov    0x8(%esi),%eax
    634e:	50                   	push   %eax
    634f:	8b 47 34             	mov    0x34(%edi),%eax
    6352:	50                   	push   %eax
    6353:	8b 47 30             	mov    0x30(%edi),%eax
    6356:	50                   	push   %eax
    6357:	68 d4 89 00 00       	push   $0x89d4
    635c:	e8 7f 29 00 00       	call   8ce0 <printf@plt>
    6361:	83 c4 10             	add    $0x10,%esp
    6364:	50                   	push   %eax
    6365:	50                   	push   %eax
    6366:	8d 47 50             	lea    0x50(%edi),%eax
    6369:	50                   	push   %eax
    636a:	8d 43 20             	lea    0x20(%ebx),%eax
    636d:	50                   	push   %eax
    636e:	e8 ed 2b 00 00       	call   8f60 <hash_table_remove_item@plt>
    6373:	89 3c 24             	mov    %edi,(%esp)
    6376:	e8 65 2b 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    637b:	8b 4f 58             	mov    0x58(%edi),%ecx
    637e:	5a                   	pop    %edx
    637f:	51                   	push   %ecx
    6380:	e8 2b 2d 00 00       	call   90b0 <free@plt>
    6385:	89 3c 24             	mov    %edi,(%esp)
    6388:	e8 23 2d 00 00       	call   90b0 <free@plt>
    638d:	8b 73 1c             	mov    0x1c(%ebx),%esi
    6390:	4e                   	dec    %esi
    6391:	89 73 1c             	mov    %esi,0x1c(%ebx)
    6394:	89 1c 24             	mov    %ebx,(%esp)
    6397:	e8 44 2b 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    639c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    639f:	83 c4 10             	add    $0x10,%esp
    63a2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    63a5:	5b                   	pop    %ebx
    63a6:	5e                   	pop    %esi
    63a7:	5f                   	pop    %edi
    63a8:	5d                   	pop    %ebp
    63a9:	c3                   	ret    
    63aa:	50                   	push   %eax
    63ab:	68 4d 02 00 00       	push   $0x24d
    63b0:	68 ef 88 00 00       	push   $0x88ef
    63b5:	68 fe 88 00 00       	push   $0x88fe
    63ba:	e8 f1 2a 00 00       	call   8eb0 <assert_abort@plt>
    63bf:	50                   	push   %eax
    63c0:	68 4e 02 00 00       	push   $0x24e
    63c5:	68 ef 88 00 00       	push   $0x88ef
    63ca:	68 0c 89 00 00       	push   $0x890c
    63cf:	e8 dc 2a 00 00       	call   8eb0 <assert_abort@plt>
    63d4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    63da:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000063e0 <block_get>:
    63e0:	55                   	push   %ebp
    63e1:	89 e5                	mov    %esp,%ebp
    63e3:	57                   	push   %edi
    63e4:	56                   	push   %esi
    63e5:	53                   	push   %ebx
    63e6:	83 ec 48             	sub    $0x48,%esp
    63e9:	8b 45 10             	mov    0x10(%ebp),%eax
    63ec:	89 45 e0             	mov    %eax,-0x20(%ebp)
    63ef:	8b 45 14             	mov    0x14(%ebp),%eax
    63f2:	68 98 ad 00 00       	push   $0xad98
    63f7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    63fa:	e8 c1 2c 00 00       	call   90c0 <fibril_mutex_lock@plt>
    63ff:	8b 35 94 ad 00 00    	mov    0xad94,%esi
    6405:	83 c4 10             	add    $0x10,%esp
    6408:	81 fe 90 ad 00 00    	cmp    $0xad90,%esi
    640e:	74 20                	je     6430 <block_get+0x50>
    6410:	8b 46 08             	mov    0x8(%esi),%eax
    6413:	39 45 0c             	cmp    %eax,0xc(%ebp)
    6416:	74 40                	je     6458 <block_get+0x78>
    6418:	8b 45 0c             	mov    0xc(%ebp),%eax
    641b:	eb 08                	jmp    6425 <block_get+0x45>
    641d:	8d 76 00             	lea    0x0(%esi),%esi
    6420:	3b 46 08             	cmp    0x8(%esi),%eax
    6423:	74 33                	je     6458 <block_get+0x78>
    6425:	8b 76 04             	mov    0x4(%esi),%esi
    6428:	81 fe 90 ad 00 00    	cmp    $0xad90,%esi
    642e:	75 f0                	jne    6420 <block_get+0x40>
    6430:	83 ec 0c             	sub    $0xc,%esp
    6433:	68 98 ad 00 00       	push   $0xad98
    6438:	e8 a3 2a 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    643d:	83 c4 0c             	add    $0xc,%esp
    6440:	68 8a 01 00 00       	push   $0x18a
    6445:	68 ef 88 00 00       	push   $0x88ef
    644a:	68 f7 88 00 00       	push   $0x88f7
    644f:	e8 5c 2a 00 00       	call   8eb0 <assert_abort@plt>
    6454:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6458:	83 ec 0c             	sub    $0xc,%esp
    645b:	68 98 ad 00 00       	push   $0xad98
    6460:	e8 7b 2a 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6465:	8b 5e 2c             	mov    0x2c(%esi),%ebx
    6468:	83 c4 10             	add    $0x10,%esp
    646b:	85 db                	test   %ebx,%ebx
    646d:	0f 84 a5 04 00 00    	je     6918 <block_get+0x538>
    6473:	8b 43 14             	mov    0x14(%ebx),%eax
    6476:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    6479:	89 45 d8             	mov    %eax,-0x28(%ebp)
    647c:	31 d2                	xor    %edx,%edx
    647e:	0f af c8             	imul   %eax,%ecx
    6481:	8b 45 d8             	mov    -0x28(%ebp),%eax
    6484:	89 55 dc             	mov    %edx,-0x24(%ebp)
    6487:	f7 65 e0             	mull   -0x20(%ebp)
    648a:	01 ca                	add    %ecx,%edx
    648c:	03 45 d8             	add    -0x28(%ebp),%eax
    648f:	13 55 dc             	adc    -0x24(%ebp),%edx
    6492:	3b 56 24             	cmp    0x24(%esi),%edx
    6495:	76 19                	jbe    64b0 <block_get+0xd0>
    6497:	c7 45 d8 f6 fe ff ff 	movl   $0xfffffef6,-0x28(%ebp)
    649e:	8b 45 d8             	mov    -0x28(%ebp),%eax
    64a1:	8d 65 f4             	lea    -0xc(%ebp),%esp
    64a4:	5b                   	pop    %ebx
    64a5:	5e                   	pop    %esi
    64a6:	5f                   	pop    %edi
    64a7:	5d                   	pop    %ebp
    64a8:	c3                   	ret    
    64a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    64b0:	0f 83 f2 01 00 00    	jae    66a8 <block_get+0x2c8>
    64b6:	8d 43 20             	lea    0x20(%ebx),%eax
    64b9:	89 75 c8             	mov    %esi,-0x38(%ebp)
    64bc:	89 45 d0             	mov    %eax,-0x30(%ebp)
    64bf:	8d 43 3c             	lea    0x3c(%ebx),%eax
    64c2:	89 45 d8             	mov    %eax,-0x28(%ebp)
    64c5:	8d 76 00             	lea    0x0(%esi),%esi
    64c8:	83 ec 0c             	sub    $0xc,%esp
    64cb:	53                   	push   %ebx
    64cc:	e8 ef 2b 00 00       	call   90c0 <fibril_mutex_lock@plt>
    64d1:	58                   	pop    %eax
    64d2:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    64d5:	8d 45 e0             	lea    -0x20(%ebp),%eax
    64d8:	5a                   	pop    %edx
    64d9:	50                   	push   %eax
    64da:	51                   	push   %ecx
    64db:	e8 30 2b 00 00       	call   9010 <hash_table_find@plt>
    64e0:	83 c4 10             	add    $0x10,%esp
    64e3:	85 c0                	test   %eax,%eax
    64e5:	0f 85 cd 01 00 00    	jne    66b8 <block_get+0x2d8>
    64eb:	83 7b 1c 09          	cmpl   $0x9,0x1c(%ebx)
    64ef:	0f 86 d3 00 00 00    	jbe    65c8 <block_get+0x1e8>
    64f5:	8b 73 40             	mov    0x40(%ebx),%esi
    64f8:	3b 75 d8             	cmp    -0x28(%ebp),%esi
    64fb:	0f 84 c7 00 00 00    	je     65c8 <block_get+0x1e8>
    6501:	83 ec 0c             	sub    $0xc,%esp
    6504:	8d 7e b8             	lea    -0x48(%esi),%edi
    6507:	57                   	push   %edi
    6508:	e8 b3 2b 00 00       	call   90c0 <fibril_mutex_lock@plt>
    650d:	83 c4 10             	add    $0x10,%esp
    6510:	80 7f 14 00          	cmpb   $0x0,0x14(%edi)
    6514:	0f 84 1e 02 00 00    	je     6738 <block_get+0x358>
    651a:	8b 4f 48             	mov    0x48(%edi),%ecx
    651d:	85 c9                	test   %ecx,%ecx
    651f:	74 0f                	je     6530 <block_get+0x150>
    6521:	8b 47 4c             	mov    0x4c(%edi),%eax
    6524:	85 c0                	test   %eax,%eax
    6526:	74 08                	je     6530 <block_get+0x150>
    6528:	89 08                	mov    %ecx,(%eax)
    652a:	8b 4f 48             	mov    0x48(%edi),%ecx
    652d:	89 41 04             	mov    %eax,0x4(%ecx)
    6530:	c7 47 48 00 00 00 00 	movl   $0x0,0x48(%edi)
    6537:	8b 45 d8             	mov    -0x28(%ebp),%eax
    653a:	89 47 4c             	mov    %eax,0x4c(%edi)
    653d:	8b 43 3c             	mov    0x3c(%ebx),%eax
    6540:	89 47 48             	mov    %eax,0x48(%edi)
    6543:	83 ec 0c             	sub    $0xc,%esp
    6546:	8b 43 3c             	mov    0x3c(%ebx),%eax
    6549:	89 70 04             	mov    %esi,0x4(%eax)
    654c:	89 73 3c             	mov    %esi,0x3c(%ebx)
    654f:	53                   	push   %ebx
    6550:	e8 8b 29 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6555:	83 c4 08             	add    $0x8,%esp
    6558:	8b 77 40             	mov    0x40(%edi),%esi
    655b:	8b 4b 14             	mov    0x14(%ebx),%ecx
    655e:	8b 47 38             	mov    0x38(%edi),%eax
    6561:	8b 57 3c             	mov    0x3c(%edi),%edx
    6564:	56                   	push   %esi
    6565:	8b 77 58             	mov    0x58(%edi),%esi
    6568:	89 45 c0             	mov    %eax,-0x40(%ebp)
    656b:	56                   	push   %esi
    656c:	51                   	push   %ecx
    656d:	52                   	push   %edx
    656e:	50                   	push   %eax
    656f:	8b 45 c8             	mov    -0x38(%ebp),%eax
    6572:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    6575:	89 55 c4             	mov    %edx,-0x3c(%ebp)
    6578:	8b 40 10             	mov    0x10(%eax),%eax
    657b:	50                   	push   %eax
    657c:	e8 ef 27 00 00       	call   8d70 <bd_write_blocks@plt>
    6581:	83 c4 20             	add    $0x20,%esp
    6584:	89 c6                	mov    %eax,%esi
    6586:	85 c0                	test   %eax,%eax
    6588:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    658b:	0f 85 a7 00 00 00    	jne    6638 <block_get+0x258>
    6591:	c7 47 44 00 00 00 00 	movl   $0x0,0x44(%edi)
    6598:	83 ec 0c             	sub    $0xc,%esp
    659b:	c6 47 14 00          	movb   $0x0,0x14(%edi)
    659f:	53                   	push   %ebx
    65a0:	e8 fb 28 00 00       	call   8ea0 <fibril_mutex_trylock@plt>
    65a5:	83 c4 10             	add    $0x10,%esp
    65a8:	84 c0                	test   %al,%al
    65aa:	0f 85 b7 02 00 00    	jne    6867 <block_get+0x487>
    65b0:	83 ec 0c             	sub    $0xc,%esp
    65b3:	57                   	push   %edi
    65b4:	e8 27 29 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    65b9:	83 c4 10             	add    $0x10,%esp
    65bc:	e9 07 ff ff ff       	jmp    64c8 <block_get+0xe8>
    65c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    65c8:	83 ec 0c             	sub    $0xc,%esp
    65cb:	6a 5c                	push   $0x5c
    65cd:	e8 1e 28 00 00       	call   8df0 <malloc@plt>
    65d2:	83 c4 10             	add    $0x10,%esp
    65d5:	89 c7                	mov    %eax,%edi
    65d7:	85 c0                	test   %eax,%eax
    65d9:	74 26                	je     6601 <block_get+0x221>
    65db:	83 ec 0c             	sub    $0xc,%esp
    65de:	8b 43 10             	mov    0x10(%ebx),%eax
    65e1:	50                   	push   %eax
    65e2:	e8 09 28 00 00       	call   8df0 <malloc@plt>
    65e7:	83 c4 10             	add    $0x10,%esp
    65ea:	89 47 58             	mov    %eax,0x58(%edi)
    65ed:	85 c0                	test   %eax,%eax
    65ef:	0f 85 14 03 00 00    	jne    6909 <block_get+0x529>
    65f5:	83 ec 0c             	sub    $0xc,%esp
    65f8:	57                   	push   %edi
    65f9:	e8 b2 2a 00 00       	call   90b0 <free@plt>
    65fe:	83 c4 10             	add    $0x10,%esp
    6601:	8b 73 40             	mov    0x40(%ebx),%esi
    6604:	3b 75 d8             	cmp    -0x28(%ebp),%esi
    6607:	0f 85 f4 fe ff ff    	jne    6501 <block_get+0x121>
    660d:	83 ec 0c             	sub    $0xc,%esp
    6610:	31 ff                	xor    %edi,%edi
    6612:	53                   	push   %ebx
    6613:	e8 c8 28 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6618:	83 c4 10             	add    $0x10,%esp
    661b:	c7 45 d8 fe ff ff ff 	movl   $0xfffffffe,-0x28(%ebp)
    6622:	8b 45 08             	mov    0x8(%ebp),%eax
    6625:	89 38                	mov    %edi,(%eax)
    6627:	8b 45 d8             	mov    -0x28(%ebp),%eax
    662a:	8d 65 f4             	lea    -0xc(%ebp),%esp
    662d:	5b                   	pop    %ebx
    662e:	5e                   	pop    %esi
    662f:	5f                   	pop    %edi
    6630:	5d                   	pop    %ebp
    6631:	c3                   	ret    
    6632:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6638:	50                   	push   %eax
    6639:	50                   	push   %eax
    663a:	8b 45 c8             	mov    -0x38(%ebp),%eax
    663d:	8b 55 c0             	mov    -0x40(%ebp),%edx
    6640:	8b 40 08             	mov    0x8(%eax),%eax
    6643:	50                   	push   %eax
    6644:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    6647:	50                   	push   %eax
    6648:	52                   	push   %edx
    6649:	51                   	push   %ecx
    664a:	56                   	push   %esi
    664b:	68 8c 89 00 00       	push   $0x898c
    6650:	e8 8b 26 00 00       	call   8ce0 <printf@plt>
    6655:	83 c4 20             	add    $0x20,%esp
    6658:	e8 e3 27 00 00       	call   8e40 <stacktrace_print@plt>
    665d:	8b 47 44             	mov    0x44(%edi),%eax
    6660:	83 f8 09             	cmp    $0x9,%eax
    6663:	7f 1b                	jg     6680 <block_get+0x2a0>
    6665:	83 ec 0c             	sub    $0xc,%esp
    6668:	40                   	inc    %eax
    6669:	89 47 44             	mov    %eax,0x44(%edi)
    666c:	57                   	push   %edi
    666d:	e8 6e 28 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6672:	83 c4 10             	add    $0x10,%esp
    6675:	e9 4e fe ff ff       	jmp    64c8 <block_get+0xe8>
    667a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6680:	8b 45 c8             	mov    -0x38(%ebp),%eax
    6683:	8b 40 08             	mov    0x8(%eax),%eax
    6686:	50                   	push   %eax
    6687:	8b 47 34             	mov    0x34(%edi),%eax
    668a:	50                   	push   %eax
    668b:	8b 47 30             	mov    0x30(%edi),%eax
    668e:	50                   	push   %eax
    668f:	68 d4 89 00 00       	push   $0x89d4
    6694:	e8 47 26 00 00       	call   8ce0 <printf@plt>
    6699:	83 c4 10             	add    $0x10,%esp
    669c:	e9 f7 fe ff ff       	jmp    6598 <block_get+0x1b8>
    66a1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    66a8:	3b 46 20             	cmp    0x20(%esi),%eax
    66ab:	0f 83 e6 fd ff ff    	jae    6497 <block_get+0xb7>
    66b1:	e9 00 fe ff ff       	jmp    64b6 <block_get+0xd6>
    66b6:	66 90                	xchg   %ax,%ax
    66b8:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
    66bf:	8d 78 b0             	lea    -0x50(%eax),%edi
    66c2:	83 ec 0c             	sub    $0xc,%esp
    66c5:	57                   	push   %edi
    66c6:	e8 f5 29 00 00       	call   90c0 <fibril_mutex_lock@plt>
    66cb:	8b 47 10             	mov    0x10(%edi),%eax
    66ce:	83 c4 10             	add    $0x10,%esp
    66d1:	85 c0                	test   %eax,%eax
    66d3:	8d 50 01             	lea    0x1(%eax),%edx
    66d6:	89 57 10             	mov    %edx,0x10(%edi)
    66d9:	75 24                	jne    66ff <block_get+0x31f>
    66db:	8b 57 48             	mov    0x48(%edi),%edx
    66de:	85 d2                	test   %edx,%edx
    66e0:	74 0f                	je     66f1 <block_get+0x311>
    66e2:	8b 47 4c             	mov    0x4c(%edi),%eax
    66e5:	85 c0                	test   %eax,%eax
    66e7:	74 08                	je     66f1 <block_get+0x311>
    66e9:	89 10                	mov    %edx,(%eax)
    66eb:	8b 57 48             	mov    0x48(%edi),%edx
    66ee:	89 42 04             	mov    %eax,0x4(%edx)
    66f1:	c7 47 48 00 00 00 00 	movl   $0x0,0x48(%edi)
    66f8:	c7 47 4c 00 00 00 00 	movl   $0x0,0x4c(%edi)
    66ff:	8a 47 15             	mov    0x15(%edi),%al
    6702:	84 c0                	test   %al,%al
    6704:	0f 85 51 01 00 00    	jne    685b <block_get+0x47b>
    670a:	8b 45 d8             	mov    -0x28(%ebp),%eax
    670d:	85 c0                	test   %eax,%eax
    670f:	0f 95 c0             	setne  %al
    6712:	83 ec 0c             	sub    $0xc,%esp
    6715:	88 45 d4             	mov    %al,-0x2c(%ebp)
    6718:	57                   	push   %edi
    6719:	e8 c2 27 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    671e:	89 1c 24             	mov    %ebx,(%esp)
    6721:	e8 ba 27 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6726:	83 c4 10             	add    $0x10,%esp
    6729:	8a 45 d4             	mov    -0x2c(%ebp),%al
    672c:	e9 05 01 00 00       	jmp    6836 <block_get+0x456>
    6731:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6738:	8b 75 c8             	mov    -0x38(%ebp),%esi
    673b:	83 ec 0c             	sub    $0xc,%esp
    673e:	57                   	push   %edi
    673f:	e8 9c 27 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6744:	8b 57 48             	mov    0x48(%edi),%edx
    6747:	83 c4 10             	add    $0x10,%esp
    674a:	85 d2                	test   %edx,%edx
    674c:	74 0f                	je     675d <block_get+0x37d>
    674e:	8b 47 4c             	mov    0x4c(%edi),%eax
    6751:	85 c0                	test   %eax,%eax
    6753:	74 08                	je     675d <block_get+0x37d>
    6755:	89 10                	mov    %edx,(%eax)
    6757:	8b 57 48             	mov    0x48(%edi),%edx
    675a:	89 42 04             	mov    %eax,0x4(%edx)
    675d:	c7 47 48 00 00 00 00 	movl   $0x0,0x48(%edi)
    6764:	c7 47 4c 00 00 00 00 	movl   $0x0,0x4c(%edi)
    676b:	50                   	push   %eax
    676c:	50                   	push   %eax
    676d:	8d 47 50             	lea    0x50(%edi),%eax
    6770:	50                   	push   %eax
    6771:	8b 45 d0             	mov    -0x30(%ebp),%eax
    6774:	50                   	push   %eax
    6775:	e8 e6 27 00 00       	call   8f60 <hash_table_remove_item@plt>
    677a:	83 c4 10             	add    $0x10,%esp
    677d:	83 ec 0c             	sub    $0xc,%esp
    6780:	57                   	push   %edi
    6781:	e8 6a 27 00 00       	call   8ef0 <fibril_mutex_initialize@plt>
    6786:	8d 47 18             	lea    0x18(%edi),%eax
    6789:	c7 47 10 01 00 00 00 	movl   $0x1,0x10(%edi)
    6790:	c7 47 44 00 00 00 00 	movl   $0x0,0x44(%edi)
    6797:	c6 47 14 00          	movb   $0x0,0x14(%edi)
    679b:	c6 47 15 00          	movb   $0x0,0x15(%edi)
    679f:	89 04 24             	mov    %eax,(%esp)
    67a2:	e8 99 28 00 00       	call   9040 <fibril_rwlock_initialize@plt>
    67a7:	8b 45 0c             	mov    0xc(%ebp),%eax
    67aa:	89 47 2c             	mov    %eax,0x2c(%edi)
    67ad:	8b 43 10             	mov    0x10(%ebx),%eax
    67b0:	89 47 40             	mov    %eax,0x40(%edi)
    67b3:	8b 45 e0             	mov    -0x20(%ebp),%eax
    67b6:	89 45 d8             	mov    %eax,-0x28(%ebp)
    67b9:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    67bc:	89 47 30             	mov    %eax,0x30(%edi)
    67bf:	8b 46 2c             	mov    0x2c(%esi),%eax
    67c2:	83 c4 10             	add    $0x10,%esp
    67c5:	c7 47 48 00 00 00 00 	movl   $0x0,0x48(%edi)
    67cc:	c7 47 4c 00 00 00 00 	movl   $0x0,0x4c(%edi)
    67d3:	89 4f 34             	mov    %ecx,0x34(%edi)
    67d6:	85 c0                	test   %eax,%eax
    67d8:	0f 84 4f 01 00 00    	je     692d <block_get+0x54d>
    67de:	8b 40 14             	mov    0x14(%eax),%eax
    67e1:	0f af c8             	imul   %eax,%ecx
    67e4:	f7 65 d8             	mull   -0x28(%ebp)
    67e7:	01 ca                	add    %ecx,%edx
    67e9:	89 47 38             	mov    %eax,0x38(%edi)
    67ec:	89 57 3c             	mov    %edx,0x3c(%edi)
    67ef:	50                   	push   %eax
    67f0:	50                   	push   %eax
    67f1:	8d 47 50             	lea    0x50(%edi),%eax
    67f4:	50                   	push   %eax
    67f5:	8b 45 d0             	mov    -0x30(%ebp),%eax
    67f8:	50                   	push   %eax
    67f9:	e8 52 25 00 00       	call   8d50 <hash_table_insert@plt>
    67fe:	89 3c 24             	mov    %edi,(%esp)
    6801:	e8 ba 28 00 00       	call   90c0 <fibril_mutex_lock@plt>
    6806:	89 1c 24             	mov    %ebx,(%esp)
    6809:	e8 d2 26 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    680e:	83 c4 10             	add    $0x10,%esp
    6811:	f6 45 18 01          	testb  $0x1,0x18(%ebp)
    6815:	0f 84 83 00 00 00    	je     689e <block_get+0x4be>
    681b:	31 c0                	xor    %eax,%eax
    681d:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
    6824:	83 ec 0c             	sub    $0xc,%esp
    6827:	88 45 d4             	mov    %al,-0x2c(%ebp)
    682a:	57                   	push   %edi
    682b:	e8 b0 26 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6830:	83 c4 10             	add    $0x10,%esp
    6833:	8a 45 d4             	mov    -0x2c(%ebp),%al
    6836:	84 c0                	test   %al,%al
    6838:	0f 84 e4 fd ff ff    	je     6622 <block_get+0x242>
    683e:	80 7f 15 00          	cmpb   $0x0,0x15(%edi)
    6842:	0f 84 fa 00 00 00    	je     6942 <block_get+0x562>
    6848:	83 ec 0c             	sub    $0xc,%esp
    684b:	57                   	push   %edi
    684c:	31 ff                	xor    %edi,%edi
    684e:	e8 8d f8 ff ff       	call   60e0 <block_put>
    6853:	83 c4 10             	add    $0x10,%esp
    6856:	e9 c7 fd ff ff       	jmp    6622 <block_get+0x242>
    685b:	c7 45 d8 f6 fe ff ff 	movl   $0xfffffef6,-0x28(%ebp)
    6862:	e9 ab fe ff ff       	jmp    6712 <block_get+0x332>
    6867:	8d 45 e0             	lea    -0x20(%ebp),%eax
    686a:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    686d:	89 75 d8             	mov    %esi,-0x28(%ebp)
    6870:	8b 75 c8             	mov    -0x38(%ebp),%esi
    6873:	52                   	push   %edx
    6874:	52                   	push   %edx
    6875:	50                   	push   %eax
    6876:	51                   	push   %ecx
    6877:	e8 94 27 00 00       	call   9010 <hash_table_find@plt>
    687c:	83 c4 10             	add    $0x10,%esp
    687f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    6882:	85 c0                	test   %eax,%eax
    6884:	0f 84 b1 fe ff ff    	je     673b <block_get+0x35b>
    688a:	83 ec 0c             	sub    $0xc,%esp
    688d:	57                   	push   %edi
    688e:	e8 4d 26 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6893:	83 c4 10             	add    $0x10,%esp
    6896:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    6899:	e9 21 fe ff ff       	jmp    66bf <block_get+0x2df>
    689e:	83 ec 08             	sub    $0x8,%esp
    68a1:	8b 4b 14             	mov    0x14(%ebx),%ecx
    68a4:	8b 5b 10             	mov    0x10(%ebx),%ebx
    68a7:	8b 47 38             	mov    0x38(%edi),%eax
    68aa:	8b 57 3c             	mov    0x3c(%edi),%edx
    68ad:	53                   	push   %ebx
    68ae:	8b 5f 58             	mov    0x58(%edi),%ebx
    68b1:	89 45 c8             	mov    %eax,-0x38(%ebp)
    68b4:	53                   	push   %ebx
    68b5:	51                   	push   %ecx
    68b6:	52                   	push   %edx
    68b7:	50                   	push   %eax
    68b8:	8b 46 10             	mov    0x10(%esi),%eax
    68bb:	89 55 cc             	mov    %edx,-0x34(%ebp)
    68be:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    68c1:	50                   	push   %eax
    68c2:	e8 a9 25 00 00       	call   8e70 <bd_read_blocks@plt>
    68c7:	83 c4 20             	add    $0x20,%esp
    68ca:	89 c2                	mov    %eax,%edx
    68cc:	89 45 d8             	mov    %eax,-0x28(%ebp)
    68cf:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    68d2:	31 c0                	xor    %eax,%eax
    68d4:	85 d2                	test   %edx,%edx
    68d6:	0f 84 48 ff ff ff    	je     6824 <block_get+0x444>
    68dc:	53                   	push   %ebx
    68dd:	53                   	push   %ebx
    68de:	8b 76 08             	mov    0x8(%esi),%esi
    68e1:	8b 45 cc             	mov    -0x34(%ebp),%eax
    68e4:	56                   	push   %esi
    68e5:	50                   	push   %eax
    68e6:	8b 45 c8             	mov    -0x38(%ebp),%eax
    68e9:	50                   	push   %eax
    68ea:	51                   	push   %ecx
    68eb:	52                   	push   %edx
    68ec:	68 40 89 00 00       	push   $0x8940
    68f1:	e8 ea 23 00 00       	call   8ce0 <printf@plt>
    68f6:	83 c4 20             	add    $0x20,%esp
    68f9:	e8 42 25 00 00       	call   8e40 <stacktrace_print@plt>
    68fe:	c6 47 15 01          	movb   $0x1,0x15(%edi)
    6902:	b0 01                	mov    $0x1,%al
    6904:	e9 1b ff ff ff       	jmp    6824 <block_get+0x444>
    6909:	8b 43 1c             	mov    0x1c(%ebx),%eax
    690c:	8b 75 c8             	mov    -0x38(%ebp),%esi
    690f:	40                   	inc    %eax
    6910:	89 43 1c             	mov    %eax,0x1c(%ebx)
    6913:	e9 65 fe ff ff       	jmp    677d <block_get+0x39d>
    6918:	53                   	push   %ebx
    6919:	68 8b 01 00 00       	push   $0x18b
    691e:	68 ef 88 00 00       	push   $0x88ef
    6923:	68 fe 88 00 00       	push   $0x88fe
    6928:	e8 83 25 00 00       	call   8eb0 <assert_abort@plt>
    692d:	50                   	push   %eax
    692e:	68 c6 03 00 00       	push   $0x3c6
    6933:	68 ef 88 00 00       	push   $0x88ef
    6938:	68 1f 89 00 00       	push   $0x891f
    693d:	e8 6e 25 00 00       	call   8eb0 <assert_abort@plt>
    6942:	50                   	push   %eax
    6943:	68 34 02 00 00       	push   $0x234
    6948:	68 ef 88 00 00       	push   $0x88ef
    694d:	68 35 89 00 00       	push   $0x8935
    6952:	e8 59 25 00 00       	call   8eb0 <assert_abort@plt>
    6957:	89 f6                	mov    %esi,%esi
    6959:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006960 <block_seqread>:
    6960:	55                   	push   %ebp
    6961:	89 e5                	mov    %esp,%ebp
    6963:	57                   	push   %edi
    6964:	56                   	push   %esi
    6965:	53                   	push   %ebx
    6966:	83 ec 38             	sub    $0x38,%esp
    6969:	8b 4d 20             	mov    0x20(%ebp),%ecx
    696c:	8b 75 08             	mov    0x8(%ebp),%esi
    696f:	68 98 ad 00 00       	push   $0xad98
    6974:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
    6977:	e8 44 27 00 00       	call   90c0 <fibril_mutex_lock@plt>
    697c:	8b 1d 94 ad 00 00    	mov    0xad94,%ebx
    6982:	83 c4 10             	add    $0x10,%esp
    6985:	81 fb 90 ad 00 00    	cmp    $0xad90,%ebx
    698b:	74 1b                	je     69a8 <block_seqread+0x48>
    698d:	3b 73 08             	cmp    0x8(%ebx),%esi
    6990:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    6993:	75 08                	jne    699d <block_seqread+0x3d>
    6995:	eb 39                	jmp    69d0 <block_seqread+0x70>
    6997:	90                   	nop
    6998:	3b 73 08             	cmp    0x8(%ebx),%esi
    699b:	74 33                	je     69d0 <block_seqread+0x70>
    699d:	8b 5b 04             	mov    0x4(%ebx),%ebx
    69a0:	81 fb 90 ad 00 00    	cmp    $0xad90,%ebx
    69a6:	75 f0                	jne    6998 <block_seqread+0x38>
    69a8:	83 ec 0c             	sub    $0xc,%esp
    69ab:	68 98 ad 00 00       	push   $0xad98
    69b0:	e8 2b 25 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    69b5:	83 c4 0c             	add    $0xc,%esp
    69b8:	68 c6 02 00 00       	push   $0x2c6
    69bd:	68 ef 88 00 00       	push   $0x88ef
    69c2:	68 f7 88 00 00       	push   $0x88f7
    69c7:	e8 e4 24 00 00       	call   8eb0 <assert_abort@plt>
    69cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    69d0:	83 ec 0c             	sub    $0xc,%esp
    69d3:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
    69d6:	68 98 ad 00 00       	push   $0xad98
    69db:	e8 00 25 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    69e0:	8b 43 28             	mov    0x28(%ebx),%eax
    69e3:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    69e6:	83 c4 10             	add    $0x10,%esp
    69e9:	89 45 d8             	mov    %eax,-0x28(%ebp)
    69ec:	85 c9                	test   %ecx,%ecx
    69ee:	0f 84 e0 00 00 00    	je     6ad4 <block_seqread+0x174>
    69f4:	89 c6                	mov    %eax,%esi
    69f6:	8b 45 14             	mov    0x14(%ebp),%eax
    69f9:	89 5d dc             	mov    %ebx,-0x24(%ebp)
    69fc:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    6a03:	8b 00                	mov    (%eax),%eax
    6a05:	89 75 d0             	mov    %esi,-0x30(%ebp)
    6a08:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
    6a0f:	8b 5d 10             	mov    0x10(%ebp),%ebx
    6a12:	eb 1a                	jmp    6a2e <block_seqread+0xce>
    6a14:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6a18:	89 c2                	mov    %eax,%edx
    6a1a:	29 fa                	sub    %edi,%edx
    6a1c:	0f 85 f0 00 00 00    	jne    6b12 <block_seqread+0x1b2>
    6a22:	39 c7                	cmp    %eax,%edi
    6a24:	74 56                	je     6a7c <block_seqread+0x11c>
    6a26:	85 c9                	test   %ecx,%ecx
    6a28:	0f 84 a6 00 00 00    	je     6ad4 <block_seqread+0x174>
    6a2e:	8b 3b                	mov    (%ebx),%edi
    6a30:	8d 14 0f             	lea    (%edi,%ecx,1),%edx
    6a33:	39 c2                	cmp    %eax,%edx
    6a35:	73 e1                	jae    6a18 <block_seqread+0xb8>
    6a37:	31 f6                	xor    %esi,%esi
    6a39:	50                   	push   %eax
    6a3a:	8b 45 0c             	mov    0xc(%ebp),%eax
    6a3d:	01 c7                	add    %eax,%edi
    6a3f:	51                   	push   %ecx
    6a40:	8b 45 1c             	mov    0x1c(%ebp),%eax
    6a43:	57                   	push   %edi
    6a44:	8b 7d e4             	mov    -0x1c(%ebp),%edi
    6a47:	89 4d e0             	mov    %ecx,-0x20(%ebp)
    6a4a:	01 f8                	add    %edi,%eax
    6a4c:	50                   	push   %eax
    6a4d:	e8 7e 23 00 00       	call   8dd0 <memcpy@plt>
    6a52:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    6a55:	89 f8                	mov    %edi,%eax
    6a57:	01 c8                	add    %ecx,%eax
    6a59:	8b 3b                	mov    (%ebx),%edi
    6a5b:	01 cf                	add    %ecx,%edi
    6a5d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    6a60:	89 c8                	mov    %ecx,%eax
    6a62:	8b 4d 18             	mov    0x18(%ebp),%ecx
    6a65:	89 3b                	mov    %edi,(%ebx)
    6a67:	31 d2                	xor    %edx,%edx
    6a69:	01 01                	add    %eax,(%ecx)
    6a6b:	8b 45 14             	mov    0x14(%ebp),%eax
    6a6e:	11 51 04             	adc    %edx,0x4(%ecx)
    6a71:	8b 00                	mov    (%eax),%eax
    6a73:	83 c4 10             	add    $0x10,%esp
    6a76:	89 f1                	mov    %esi,%ecx
    6a78:	39 c7                	cmp    %eax,%edi
    6a7a:	75 aa                	jne    6a26 <block_seqread+0xc6>
    6a7c:	8b 45 18             	mov    0x18(%ebp),%eax
    6a7f:	8b 75 d4             	mov    -0x2c(%ebp),%esi
    6a82:	8b 7d d0             	mov    -0x30(%ebp),%edi
    6a85:	56                   	push   %esi
    6a86:	57                   	push   %edi
    6a87:	89 4d e0             	mov    %ecx,-0x20(%ebp)
    6a8a:	8b 50 04             	mov    0x4(%eax),%edx
    6a8d:	52                   	push   %edx
    6a8e:	8b 08                	mov    (%eax),%ecx
    6a90:	51                   	push   %ecx
    6a91:	e8 ca 23 00 00       	call   8e60 <__udivdi3@plt>
    6a96:	5e                   	pop    %esi
    6a97:	89 c6                	mov    %eax,%esi
    6a99:	8b 45 dc             	mov    -0x24(%ebp),%eax
    6a9c:	5f                   	pop    %edi
    6a9d:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    6aa0:	89 d7                	mov    %edx,%edi
    6aa2:	8b 50 28             	mov    0x28(%eax),%edx
    6aa5:	52                   	push   %edx
    6aa6:	51                   	push   %ecx
    6aa7:	8b 40 10             	mov    0x10(%eax),%eax
    6aaa:	6a 01                	push   $0x1
    6aac:	57                   	push   %edi
    6aad:	56                   	push   %esi
    6aae:	50                   	push   %eax
    6aaf:	e8 bc 23 00 00       	call   8e70 <bd_read_blocks@plt>
    6ab4:	83 c4 20             	add    $0x20,%esp
    6ab7:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    6aba:	85 c0                	test   %eax,%eax
    6abc:	75 22                	jne    6ae0 <block_seqread+0x180>
    6abe:	8b 75 14             	mov    0x14(%ebp),%esi
    6ac1:	8b 45 d8             	mov    -0x28(%ebp),%eax
    6ac4:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
    6aca:	85 c9                	test   %ecx,%ecx
    6acc:	89 06                	mov    %eax,(%esi)
    6ace:	0f 85 5a ff ff ff    	jne    6a2e <block_seqread+0xce>
    6ad4:	8d 65 f4             	lea    -0xc(%ebp),%esp
    6ad7:	31 d2                	xor    %edx,%edx
    6ad9:	89 d0                	mov    %edx,%eax
    6adb:	5b                   	pop    %ebx
    6adc:	5e                   	pop    %esi
    6add:	5f                   	pop    %edi
    6ade:	5d                   	pop    %ebp
    6adf:	c3                   	ret    
    6ae0:	8b 5d dc             	mov    -0x24(%ebp),%ebx
    6ae3:	89 c2                	mov    %eax,%edx
    6ae5:	50                   	push   %eax
    6ae6:	50                   	push   %eax
    6ae7:	8b 4b 08             	mov    0x8(%ebx),%ecx
    6aea:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    6aed:	51                   	push   %ecx
    6aee:	57                   	push   %edi
    6aef:	56                   	push   %esi
    6af0:	6a 01                	push   $0x1
    6af2:	52                   	push   %edx
    6af3:	68 40 89 00 00       	push   $0x8940
    6af8:	e8 e3 21 00 00       	call   8ce0 <printf@plt>
    6afd:	83 c4 20             	add    $0x20,%esp
    6b00:	e8 3b 23 00 00       	call   8e40 <stacktrace_print@plt>
    6b05:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    6b08:	8d 65 f4             	lea    -0xc(%ebp),%esp
    6b0b:	89 d0                	mov    %edx,%eax
    6b0d:	5b                   	pop    %ebx
    6b0e:	5e                   	pop    %esi
    6b0f:	5f                   	pop    %edi
    6b10:	5d                   	pop    %ebp
    6b11:	c3                   	ret    
    6b12:	89 ce                	mov    %ecx,%esi
    6b14:	89 d1                	mov    %edx,%ecx
    6b16:	29 d6                	sub    %edx,%esi
    6b18:	e9 1c ff ff ff       	jmp    6a39 <block_seqread+0xd9>
    6b1d:	8d 76 00             	lea    0x0(%esi),%esi

00006b20 <block_read_direct>:
    6b20:	55                   	push   %ebp
    6b21:	89 e5                	mov    %esp,%ebp
    6b23:	57                   	push   %edi
    6b24:	56                   	push   %esi
    6b25:	53                   	push   %ebx
    6b26:	83 ec 28             	sub    $0x28,%esp
    6b29:	8b 45 08             	mov    0x8(%ebp),%eax
    6b2c:	8b 75 0c             	mov    0xc(%ebp),%esi
    6b2f:	68 98 ad 00 00       	push   $0xad98
    6b34:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    6b37:	8b 7d 10             	mov    0x10(%ebp),%edi
    6b3a:	e8 81 25 00 00       	call   90c0 <fibril_mutex_lock@plt>
    6b3f:	8b 1d 94 ad 00 00    	mov    0xad94,%ebx
    6b45:	83 c4 10             	add    $0x10,%esp
    6b48:	81 fb 90 ad 00 00    	cmp    $0xad90,%ebx
    6b4e:	74 20                	je     6b70 <block_read_direct+0x50>
    6b50:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    6b53:	3b 43 08             	cmp    0x8(%ebx),%eax
    6b56:	75 0d                	jne    6b65 <block_read_direct+0x45>
    6b58:	eb 3e                	jmp    6b98 <block_read_direct+0x78>
    6b5a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6b60:	3b 43 08             	cmp    0x8(%ebx),%eax
    6b63:	74 33                	je     6b98 <block_read_direct+0x78>
    6b65:	8b 5b 04             	mov    0x4(%ebx),%ebx
    6b68:	81 fb 90 ad 00 00    	cmp    $0xad90,%ebx
    6b6e:	75 f0                	jne    6b60 <block_read_direct+0x40>
    6b70:	83 ec 0c             	sub    $0xc,%esp
    6b73:	68 98 ad 00 00       	push   $0xad98
    6b78:	e8 63 23 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6b7d:	83 c4 0c             	add    $0xc,%esp
    6b80:	68 fd 02 00 00       	push   $0x2fd
    6b85:	68 ef 88 00 00       	push   $0x88ef
    6b8a:	68 f7 88 00 00       	push   $0x88f7
    6b8f:	e8 1c 23 00 00       	call   8eb0 <assert_abort@plt>
    6b94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6b98:	83 ec 0c             	sub    $0xc,%esp
    6b9b:	68 98 ad 00 00       	push   $0xad98
    6ba0:	e8 3b 23 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6ba5:	58                   	pop    %eax
    6ba6:	8b 4b 28             	mov    0x28(%ebx),%ecx
    6ba9:	8b 45 14             	mov    0x14(%ebp),%eax
    6bac:	5a                   	pop    %edx
    6bad:	0f af c1             	imul   %ecx,%eax
    6bb0:	50                   	push   %eax
    6bb1:	8b 45 18             	mov    0x18(%ebp),%eax
    6bb4:	50                   	push   %eax
    6bb5:	8b 45 14             	mov    0x14(%ebp),%eax
    6bb8:	50                   	push   %eax
    6bb9:	8b 43 10             	mov    0x10(%ebx),%eax
    6bbc:	57                   	push   %edi
    6bbd:	56                   	push   %esi
    6bbe:	50                   	push   %eax
    6bbf:	e8 ac 22 00 00       	call   8e70 <bd_read_blocks@plt>
    6bc4:	83 c4 20             	add    $0x20,%esp
    6bc7:	89 c1                	mov    %eax,%ecx
    6bc9:	85 c0                	test   %eax,%eax
    6bcb:	74 25                	je     6bf2 <block_read_direct+0xd2>
    6bcd:	50                   	push   %eax
    6bce:	50                   	push   %eax
    6bcf:	8b 53 08             	mov    0x8(%ebx),%edx
    6bd2:	8b 5d 14             	mov    0x14(%ebp),%ebx
    6bd5:	52                   	push   %edx
    6bd6:	57                   	push   %edi
    6bd7:	56                   	push   %esi
    6bd8:	53                   	push   %ebx
    6bd9:	51                   	push   %ecx
    6bda:	68 40 89 00 00       	push   $0x8940
    6bdf:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
    6be2:	e8 f9 20 00 00       	call   8ce0 <printf@plt>
    6be7:	83 c4 20             	add    $0x20,%esp
    6bea:	e8 51 22 00 00       	call   8e40 <stacktrace_print@plt>
    6bef:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    6bf2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    6bf5:	89 c8                	mov    %ecx,%eax
    6bf7:	5b                   	pop    %ebx
    6bf8:	5e                   	pop    %esi
    6bf9:	5f                   	pop    %edi
    6bfa:	5d                   	pop    %ebp
    6bfb:	c3                   	ret    
    6bfc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00006c00 <block_write_direct>:
    6c00:	55                   	push   %ebp
    6c01:	89 e5                	mov    %esp,%ebp
    6c03:	57                   	push   %edi
    6c04:	56                   	push   %esi
    6c05:	53                   	push   %ebx
    6c06:	83 ec 28             	sub    $0x28,%esp
    6c09:	8b 45 08             	mov    0x8(%ebp),%eax
    6c0c:	8b 75 0c             	mov    0xc(%ebp),%esi
    6c0f:	68 98 ad 00 00       	push   $0xad98
    6c14:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    6c17:	8b 7d 10             	mov    0x10(%ebp),%edi
    6c1a:	e8 a1 24 00 00       	call   90c0 <fibril_mutex_lock@plt>
    6c1f:	8b 1d 94 ad 00 00    	mov    0xad94,%ebx
    6c25:	83 c4 10             	add    $0x10,%esp
    6c28:	81 fb 90 ad 00 00    	cmp    $0xad90,%ebx
    6c2e:	74 20                	je     6c50 <block_write_direct+0x50>
    6c30:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    6c33:	3b 43 08             	cmp    0x8(%ebx),%eax
    6c36:	75 0d                	jne    6c45 <block_write_direct+0x45>
    6c38:	eb 3e                	jmp    6c78 <block_write_direct+0x78>
    6c3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6c40:	3b 43 08             	cmp    0x8(%ebx),%eax
    6c43:	74 33                	je     6c78 <block_write_direct+0x78>
    6c45:	8b 5b 04             	mov    0x4(%ebx),%ebx
    6c48:	81 fb 90 ad 00 00    	cmp    $0xad90,%ebx
    6c4e:	75 f0                	jne    6c40 <block_write_direct+0x40>
    6c50:	83 ec 0c             	sub    $0xc,%esp
    6c53:	68 98 ad 00 00       	push   $0xad98
    6c58:	e8 83 22 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6c5d:	83 c4 0c             	add    $0xc,%esp
    6c60:	68 11 03 00 00       	push   $0x311
    6c65:	68 ef 88 00 00       	push   $0x88ef
    6c6a:	68 f7 88 00 00       	push   $0x88f7
    6c6f:	e8 3c 22 00 00       	call   8eb0 <assert_abort@plt>
    6c74:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6c78:	83 ec 0c             	sub    $0xc,%esp
    6c7b:	68 98 ad 00 00       	push   $0xad98
    6c80:	e8 5b 22 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6c85:	58                   	pop    %eax
    6c86:	8b 4b 28             	mov    0x28(%ebx),%ecx
    6c89:	8b 45 14             	mov    0x14(%ebp),%eax
    6c8c:	5a                   	pop    %edx
    6c8d:	0f af c1             	imul   %ecx,%eax
    6c90:	50                   	push   %eax
    6c91:	8b 45 18             	mov    0x18(%ebp),%eax
    6c94:	50                   	push   %eax
    6c95:	8b 45 14             	mov    0x14(%ebp),%eax
    6c98:	50                   	push   %eax
    6c99:	8b 43 10             	mov    0x10(%ebx),%eax
    6c9c:	57                   	push   %edi
    6c9d:	56                   	push   %esi
    6c9e:	50                   	push   %eax
    6c9f:	e8 cc 20 00 00       	call   8d70 <bd_write_blocks@plt>
    6ca4:	83 c4 20             	add    $0x20,%esp
    6ca7:	89 c1                	mov    %eax,%ecx
    6ca9:	85 c0                	test   %eax,%eax
    6cab:	74 25                	je     6cd2 <block_write_direct+0xd2>
    6cad:	50                   	push   %eax
    6cae:	50                   	push   %eax
    6caf:	8b 53 08             	mov    0x8(%ebx),%edx
    6cb2:	8b 5d 14             	mov    0x14(%ebp),%ebx
    6cb5:	52                   	push   %edx
    6cb6:	57                   	push   %edi
    6cb7:	56                   	push   %esi
    6cb8:	53                   	push   %ebx
    6cb9:	51                   	push   %ecx
    6cba:	68 8c 89 00 00       	push   $0x898c
    6cbf:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
    6cc2:	e8 19 20 00 00       	call   8ce0 <printf@plt>
    6cc7:	83 c4 20             	add    $0x20,%esp
    6cca:	e8 71 21 00 00       	call   8e40 <stacktrace_print@plt>
    6ccf:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    6cd2:	8d 65 f4             	lea    -0xc(%ebp),%esp
    6cd5:	89 c8                	mov    %ecx,%eax
    6cd7:	5b                   	pop    %ebx
    6cd8:	5e                   	pop    %esi
    6cd9:	5f                   	pop    %edi
    6cda:	5d                   	pop    %ebp
    6cdb:	c3                   	ret    
    6cdc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00006ce0 <block_sync_cache>:
    6ce0:	55                   	push   %ebp
    6ce1:	89 e5                	mov    %esp,%ebp
    6ce3:	57                   	push   %edi
    6ce4:	56                   	push   %esi
    6ce5:	53                   	push   %ebx
    6ce6:	83 ec 28             	sub    $0x28,%esp
    6ce9:	8b 55 08             	mov    0x8(%ebp),%edx
    6cec:	8b 75 0c             	mov    0xc(%ebp),%esi
    6cef:	68 98 ad 00 00       	push   $0xad98
    6cf4:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    6cf7:	8b 7d 10             	mov    0x10(%ebp),%edi
    6cfa:	8b 5d 14             	mov    0x14(%ebp),%ebx
    6cfd:	e8 be 23 00 00       	call   90c0 <fibril_mutex_lock@plt>
    6d02:	a1 94 ad 00 00       	mov    0xad94,%eax
    6d07:	83 c4 10             	add    $0x10,%esp
    6d0a:	3d 90 ad 00 00       	cmp    $0xad90,%eax
    6d0f:	74 1e                	je     6d2f <block_sync_cache+0x4f>
    6d11:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    6d14:	3b 50 08             	cmp    0x8(%eax),%edx
    6d17:	75 0c                	jne    6d25 <block_sync_cache+0x45>
    6d19:	eb 3d                	jmp    6d58 <block_sync_cache+0x78>
    6d1b:	90                   	nop
    6d1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6d20:	3b 50 08             	cmp    0x8(%eax),%edx
    6d23:	74 33                	je     6d58 <block_sync_cache+0x78>
    6d25:	8b 40 04             	mov    0x4(%eax),%eax
    6d28:	3d 90 ad 00 00       	cmp    $0xad90,%eax
    6d2d:	75 f1                	jne    6d20 <block_sync_cache+0x40>
    6d2f:	83 ec 0c             	sub    $0xc,%esp
    6d32:	68 98 ad 00 00       	push   $0xad98
    6d37:	e8 a4 21 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6d3c:	83 c4 0c             	add    $0xc,%esp
    6d3f:	68 23 03 00 00       	push   $0x323
    6d44:	68 ef 88 00 00       	push   $0x88ef
    6d49:	68 f7 88 00 00       	push   $0x88f7
    6d4e:	e8 5d 21 00 00       	call   8eb0 <assert_abort@plt>
    6d53:	90                   	nop
    6d54:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6d58:	83 ec 0c             	sub    $0xc,%esp
    6d5b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    6d5e:	68 98 ad 00 00       	push   $0xad98
    6d63:	e8 78 21 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6d68:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    6d6b:	89 5d 14             	mov    %ebx,0x14(%ebp)
    6d6e:	89 75 0c             	mov    %esi,0xc(%ebp)
    6d71:	89 7d 10             	mov    %edi,0x10(%ebp)
    6d74:	8b 40 10             	mov    0x10(%eax),%eax
    6d77:	83 c4 10             	add    $0x10,%esp
    6d7a:	89 45 08             	mov    %eax,0x8(%ebp)
    6d7d:	8d 65 f4             	lea    -0xc(%ebp),%esp
    6d80:	5b                   	pop    %ebx
    6d81:	5e                   	pop    %esi
    6d82:	5f                   	pop    %edi
    6d83:	5d                   	pop    %ebp
    6d84:	e9 47 22 00 00       	jmp    8fd0 <bd_sync_cache@plt>
    6d89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00006d90 <block_get_bsize>:
    6d90:	55                   	push   %ebp
    6d91:	89 e5                	mov    %esp,%ebp
    6d93:	57                   	push   %edi
    6d94:	56                   	push   %esi
    6d95:	53                   	push   %ebx
    6d96:	83 ec 18             	sub    $0x18,%esp
    6d99:	8b 75 08             	mov    0x8(%ebp),%esi
    6d9c:	8b 7d 0c             	mov    0xc(%ebp),%edi
    6d9f:	68 98 ad 00 00       	push   $0xad98
    6da4:	e8 17 23 00 00       	call   90c0 <fibril_mutex_lock@plt>
    6da9:	8b 1d 94 ad 00 00    	mov    0xad94,%ebx
    6daf:	83 c4 10             	add    $0x10,%esp
    6db2:	81 fb 90 ad 00 00    	cmp    $0xad90,%ebx
    6db8:	75 11                	jne    6dcb <block_get_bsize+0x3b>
    6dba:	eb 3c                	jmp    6df8 <block_get_bsize+0x68>
    6dbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6dc0:	8b 5b 04             	mov    0x4(%ebx),%ebx
    6dc3:	81 fb 90 ad 00 00    	cmp    $0xad90,%ebx
    6dc9:	74 2d                	je     6df8 <block_get_bsize+0x68>
    6dcb:	3b 73 08             	cmp    0x8(%ebx),%esi
    6dce:	75 f0                	jne    6dc0 <block_get_bsize+0x30>
    6dd0:	83 ec 0c             	sub    $0xc,%esp
    6dd3:	68 98 ad 00 00       	push   $0xad98
    6dd8:	e8 03 21 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6ddd:	89 7d 0c             	mov    %edi,0xc(%ebp)
    6de0:	83 c4 10             	add    $0x10,%esp
    6de3:	8b 43 10             	mov    0x10(%ebx),%eax
    6de6:	89 45 08             	mov    %eax,0x8(%ebp)
    6de9:	8d 65 f4             	lea    -0xc(%ebp),%esp
    6dec:	5b                   	pop    %ebx
    6ded:	5e                   	pop    %esi
    6dee:	5f                   	pop    %edi
    6def:	5d                   	pop    %ebp
    6df0:	e9 9b 21 00 00       	jmp    8f90 <bd_get_block_size@plt>
    6df5:	8d 76 00             	lea    0x0(%esi),%esi
    6df8:	83 ec 0c             	sub    $0xc,%esp
    6dfb:	68 98 ad 00 00       	push   $0xad98
    6e00:	e8 db 20 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6e05:	83 c4 0c             	add    $0xc,%esp
    6e08:	68 34 03 00 00       	push   $0x334
    6e0d:	68 ef 88 00 00       	push   $0x88ef
    6e12:	68 f7 88 00 00       	push   $0x88f7
    6e17:	e8 94 20 00 00       	call   8eb0 <assert_abort@plt>
    6e1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00006e20 <block_get_nblocks>:
    6e20:	55                   	push   %ebp
    6e21:	89 e5                	mov    %esp,%ebp
    6e23:	57                   	push   %edi
    6e24:	56                   	push   %esi
    6e25:	53                   	push   %ebx
    6e26:	83 ec 18             	sub    $0x18,%esp
    6e29:	8b 75 08             	mov    0x8(%ebp),%esi
    6e2c:	8b 7d 0c             	mov    0xc(%ebp),%edi
    6e2f:	68 98 ad 00 00       	push   $0xad98
    6e34:	e8 87 22 00 00       	call   90c0 <fibril_mutex_lock@plt>
    6e39:	8b 1d 94 ad 00 00    	mov    0xad94,%ebx
    6e3f:	83 c4 10             	add    $0x10,%esp
    6e42:	81 fb 90 ad 00 00    	cmp    $0xad90,%ebx
    6e48:	75 11                	jne    6e5b <block_get_nblocks+0x3b>
    6e4a:	eb 3c                	jmp    6e88 <block_get_nblocks+0x68>
    6e4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6e50:	8b 5b 04             	mov    0x4(%ebx),%ebx
    6e53:	81 fb 90 ad 00 00    	cmp    $0xad90,%ebx
    6e59:	74 2d                	je     6e88 <block_get_nblocks+0x68>
    6e5b:	3b 73 08             	cmp    0x8(%ebx),%esi
    6e5e:	75 f0                	jne    6e50 <block_get_nblocks+0x30>
    6e60:	83 ec 0c             	sub    $0xc,%esp
    6e63:	68 98 ad 00 00       	push   $0xad98
    6e68:	e8 73 20 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6e6d:	89 7d 0c             	mov    %edi,0xc(%ebp)
    6e70:	83 c4 10             	add    $0x10,%esp
    6e73:	8b 43 10             	mov    0x10(%ebx),%eax
    6e76:	89 45 08             	mov    %eax,0x8(%ebp)
    6e79:	8d 65 f4             	lea    -0xc(%ebp),%esp
    6e7c:	5b                   	pop    %ebx
    6e7d:	5e                   	pop    %esi
    6e7e:	5f                   	pop    %edi
    6e7f:	5d                   	pop    %ebp
    6e80:	e9 fb 1e 00 00       	jmp    8d80 <bd_get_num_blocks@plt>
    6e85:	8d 76 00             	lea    0x0(%esi),%esi
    6e88:	83 ec 0c             	sub    $0xc,%esp
    6e8b:	68 98 ad 00 00       	push   $0xad98
    6e90:	e8 4b 20 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6e95:	83 c4 0c             	add    $0xc,%esp
    6e98:	68 43 03 00 00       	push   $0x343
    6e9d:	68 ef 88 00 00       	push   $0x88ef
    6ea2:	68 f7 88 00 00       	push   $0x88f7
    6ea7:	e8 04 20 00 00       	call   8eb0 <assert_abort@plt>
    6eac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00006eb0 <block_read_bytes_direct>:
    6eb0:	55                   	push   %ebp
    6eb1:	89 e5                	mov    %esp,%ebp
    6eb3:	57                   	push   %edi
    6eb4:	56                   	push   %esi
    6eb5:	53                   	push   %ebx
    6eb6:	83 ec 48             	sub    $0x48,%esp
    6eb9:	8b 45 0c             	mov    0xc(%ebp),%eax
    6ebc:	8b 55 10             	mov    0x10(%ebp),%edx
    6ebf:	68 98 ad 00 00       	push   $0xad98
    6ec4:	8b 5d 08             	mov    0x8(%ebp),%ebx
    6ec7:	89 45 d0             	mov    %eax,-0x30(%ebp)
    6eca:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    6ecd:	e8 ee 21 00 00       	call   90c0 <fibril_mutex_lock@plt>
    6ed2:	8b 35 94 ad 00 00    	mov    0xad94,%esi
    6ed8:	83 c4 10             	add    $0x10,%esp
    6edb:	81 fe 90 ad 00 00    	cmp    $0xad90,%esi
    6ee1:	75 10                	jne    6ef3 <block_read_bytes_direct+0x43>
    6ee3:	eb 43                	jmp    6f28 <block_read_bytes_direct+0x78>
    6ee5:	8d 76 00             	lea    0x0(%esi),%esi
    6ee8:	8b 76 04             	mov    0x4(%esi),%esi
    6eeb:	81 fe 90 ad 00 00    	cmp    $0xad90,%esi
    6ef1:	74 35                	je     6f28 <block_read_bytes_direct+0x78>
    6ef3:	3b 5e 08             	cmp    0x8(%esi),%ebx
    6ef6:	75 f0                	jne    6ee8 <block_read_bytes_direct+0x38>
    6ef8:	83 ec 0c             	sub    $0xc,%esp
    6efb:	68 98 ad 00 00       	push   $0xad98
    6f00:	e8 db 1f 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6f05:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    6f08:	59                   	pop    %ecx
    6f09:	5f                   	pop    %edi
    6f0a:	50                   	push   %eax
    6f0b:	8b 46 10             	mov    0x10(%esi),%eax
    6f0e:	50                   	push   %eax
    6f0f:	e8 7c 20 00 00       	call   8f90 <bd_get_block_size@plt>
    6f14:	83 c4 10             	add    $0x10,%esp
    6f17:	89 c1                	mov    %eax,%ecx
    6f19:	85 c0                	test   %eax,%eax
    6f1b:	74 33                	je     6f50 <block_read_bytes_direct+0xa0>
    6f1d:	8d 65 f4             	lea    -0xc(%ebp),%esp
    6f20:	89 c8                	mov    %ecx,%eax
    6f22:	5b                   	pop    %ebx
    6f23:	5e                   	pop    %esi
    6f24:	5f                   	pop    %edi
    6f25:	5d                   	pop    %ebp
    6f26:	c3                   	ret    
    6f27:	90                   	nop
    6f28:	83 ec 0c             	sub    $0xc,%esp
    6f2b:	68 98 ad 00 00       	push   $0xad98
    6f30:	e8 ab 1f 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6f35:	83 c4 0c             	add    $0xc,%esp
    6f38:	68 34 03 00 00       	push   $0x334
    6f3d:	68 ef 88 00 00       	push   $0x88ef
    6f42:	68 f7 88 00 00       	push   $0x88f7
    6f47:	e8 64 1f 00 00       	call   8eb0 <assert_abort@plt>
    6f4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6f50:	8b 75 e4             	mov    -0x1c(%ebp),%esi
    6f53:	31 d2                	xor    %edx,%edx
    6f55:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    6f58:	52                   	push   %edx
    6f59:	56                   	push   %esi
    6f5a:	50                   	push   %eax
    6f5b:	8b 45 d0             	mov    -0x30(%ebp),%eax
    6f5e:	89 75 c8             	mov    %esi,-0x38(%ebp)
    6f61:	50                   	push   %eax
    6f62:	89 55 cc             	mov    %edx,-0x34(%ebp)
    6f65:	e8 f6 1e 00 00       	call   8e60 <__udivdi3@plt>
    6f6a:	83 c4 10             	add    $0x10,%esp
    6f6d:	89 45 c0             	mov    %eax,-0x40(%ebp)
    6f70:	8b 45 14             	mov    0x14(%ebp),%eax
    6f73:	89 55 c4             	mov    %edx,-0x3c(%ebp)
    6f76:	31 d2                	xor    %edx,%edx
    6f78:	03 45 d0             	add    -0x30(%ebp),%eax
    6f7b:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    6f7e:	13 55 d4             	adc    -0x2c(%ebp),%edx
    6f81:	83 c0 ff             	add    $0xffffffff,%eax
    6f84:	83 d2 ff             	adc    $0xffffffff,%edx
    6f87:	8b 7d c8             	mov    -0x38(%ebp),%edi
    6f8a:	51                   	push   %ecx
    6f8b:	57                   	push   %edi
    6f8c:	52                   	push   %edx
    6f8d:	50                   	push   %eax
    6f8e:	e8 cd 1e 00 00       	call   8e60 <__udivdi3@plt>
    6f93:	8b 55 c0             	mov    -0x40(%ebp),%edx
    6f96:	29 d0                	sub    %edx,%eax
    6f98:	40                   	inc    %eax
    6f99:	0f af f0             	imul   %eax,%esi
    6f9c:	89 45 bc             	mov    %eax,-0x44(%ebp)
    6f9f:	89 34 24             	mov    %esi,(%esp)
    6fa2:	e8 49 1e 00 00       	call   8df0 <malloc@plt>
    6fa7:	83 c4 10             	add    $0x10,%esp
    6faa:	89 c6                	mov    %eax,%esi
    6fac:	85 c0                	test   %eax,%eax
    6fae:	0f 84 19 01 00 00    	je     70cd <block_read_bytes_direct+0x21d>
    6fb4:	83 ec 0c             	sub    $0xc,%esp
    6fb7:	68 98 ad 00 00       	push   $0xad98
    6fbc:	e8 ff 20 00 00       	call   90c0 <fibril_mutex_lock@plt>
    6fc1:	8b 3d 94 ad 00 00    	mov    0xad94,%edi
    6fc7:	83 c4 10             	add    $0x10,%esp
    6fca:	81 ff 90 ad 00 00    	cmp    $0xad90,%edi
    6fd0:	75 15                	jne    6fe7 <block_read_bytes_direct+0x137>
    6fd2:	e9 91 00 00 00       	jmp    7068 <block_read_bytes_direct+0x1b8>
    6fd7:	90                   	nop
    6fd8:	8b 7f 04             	mov    0x4(%edi),%edi
    6fdb:	81 ff 90 ad 00 00    	cmp    $0xad90,%edi
    6fe1:	0f 84 81 00 00 00    	je     7068 <block_read_bytes_direct+0x1b8>
    6fe7:	3b 5f 08             	cmp    0x8(%edi),%ebx
    6fea:	75 ec                	jne    6fd8 <block_read_bytes_direct+0x128>
    6fec:	83 ec 0c             	sub    $0xc,%esp
    6fef:	68 98 ad 00 00       	push   $0xad98
    6ff4:	e8 e7 1e 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    6ff9:	58                   	pop    %eax
    6ffa:	8b 47 28             	mov    0x28(%edi),%eax
    6ffd:	5a                   	pop    %edx
    6ffe:	8b 55 bc             	mov    -0x44(%ebp),%edx
    7001:	0f af c2             	imul   %edx,%eax
    7004:	50                   	push   %eax
    7005:	56                   	push   %esi
    7006:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
    7009:	8b 5d c0             	mov    -0x40(%ebp),%ebx
    700c:	8b 47 10             	mov    0x10(%edi),%eax
    700f:	52                   	push   %edx
    7010:	51                   	push   %ecx
    7011:	53                   	push   %ebx
    7012:	50                   	push   %eax
    7013:	e8 58 1e 00 00       	call   8e70 <bd_read_blocks@plt>
    7018:	83 c4 20             	add    $0x20,%esp
    701b:	89 c1                	mov    %eax,%ecx
    701d:	85 c0                	test   %eax,%eax
    701f:	75 6b                	jne    708c <block_read_bytes_direct+0x1dc>
    7021:	89 45 c0             	mov    %eax,-0x40(%ebp)
    7024:	8b 55 14             	mov    0x14(%ebp),%edx
    7027:	8b 5d cc             	mov    -0x34(%ebp),%ebx
    702a:	8b 7d c8             	mov    -0x38(%ebp),%edi
    702d:	50                   	push   %eax
    702e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    7031:	52                   	push   %edx
    7032:	51                   	push   %ecx
    7033:	51                   	push   %ecx
    7034:	53                   	push   %ebx
    7035:	57                   	push   %edi
    7036:	50                   	push   %eax
    7037:	8b 45 d0             	mov    -0x30(%ebp),%eax
    703a:	50                   	push   %eax
    703b:	e8 10 1e 00 00       	call   8e50 <__umoddi3@plt>
    7040:	83 c4 18             	add    $0x18,%esp
    7043:	01 f0                	add    %esi,%eax
    7045:	50                   	push   %eax
    7046:	8b 45 18             	mov    0x18(%ebp),%eax
    7049:	50                   	push   %eax
    704a:	e8 81 1d 00 00       	call   8dd0 <memcpy@plt>
    704f:	89 34 24             	mov    %esi,(%esp)
    7052:	e8 59 20 00 00       	call   90b0 <free@plt>
    7057:	8b 4d c0             	mov    -0x40(%ebp),%ecx
    705a:	83 c4 10             	add    $0x10,%esp
    705d:	8d 65 f4             	lea    -0xc(%ebp),%esp
    7060:	89 c8                	mov    %ecx,%eax
    7062:	5b                   	pop    %ebx
    7063:	5e                   	pop    %esi
    7064:	5f                   	pop    %edi
    7065:	5d                   	pop    %ebp
    7066:	c3                   	ret    
    7067:	90                   	nop
    7068:	83 ec 0c             	sub    $0xc,%esp
    706b:	68 98 ad 00 00       	push   $0xad98
    7070:	e8 6b 1e 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    7075:	83 c4 0c             	add    $0xc,%esp
    7078:	68 fd 02 00 00       	push   $0x2fd
    707d:	68 ef 88 00 00       	push   $0x88ef
    7082:	68 f7 88 00 00       	push   $0x88f7
    7087:	e8 24 1e 00 00       	call   8eb0 <assert_abort@plt>
    708c:	50                   	push   %eax
    708d:	50                   	push   %eax
    708e:	8b 47 08             	mov    0x8(%edi),%eax
    7091:	8b 55 c0             	mov    -0x40(%ebp),%edx
    7094:	50                   	push   %eax
    7095:	8b 5d bc             	mov    -0x44(%ebp),%ebx
    7098:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    709b:	89 4d d0             	mov    %ecx,-0x30(%ebp)
    709e:	50                   	push   %eax
    709f:	52                   	push   %edx
    70a0:	53                   	push   %ebx
    70a1:	51                   	push   %ecx
    70a2:	68 40 89 00 00       	push   $0x8940
    70a7:	e8 34 1c 00 00       	call   8ce0 <printf@plt>
    70ac:	83 c4 20             	add    $0x20,%esp
    70af:	e8 8c 1d 00 00       	call   8e40 <stacktrace_print@plt>
    70b4:	83 ec 0c             	sub    $0xc,%esp
    70b7:	56                   	push   %esi
    70b8:	e8 f3 1f 00 00       	call   90b0 <free@plt>
    70bd:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    70c0:	83 c4 10             	add    $0x10,%esp
    70c3:	8d 65 f4             	lea    -0xc(%ebp),%esp
    70c6:	89 c8                	mov    %ecx,%eax
    70c8:	5b                   	pop    %ebx
    70c9:	5e                   	pop    %esi
    70ca:	5f                   	pop    %edi
    70cb:	5d                   	pop    %ebp
    70cc:	c3                   	ret    
    70cd:	b9 fe ff ff ff       	mov    $0xfffffffe,%ecx
    70d2:	e9 46 fe ff ff       	jmp    6f1d <block_read_bytes_direct+0x6d>
    70d7:	89 f6                	mov    %esi,%esi
    70d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000070e0 <block_read_toc>:
    70e0:	55                   	push   %ebp
    70e1:	89 e5                	mov    %esp,%ebp
    70e3:	57                   	push   %edi
    70e4:	56                   	push   %esi
    70e5:	53                   	push   %ebx
    70e6:	83 ec 28             	sub    $0x28,%esp
    70e9:	8b 55 08             	mov    0x8(%ebp),%edx
    70ec:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    70ef:	68 98 ad 00 00       	push   $0xad98
    70f4:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    70f7:	8b 75 10             	mov    0x10(%ebp),%esi
    70fa:	8b 7d 14             	mov    0x14(%ebp),%edi
    70fd:	e8 be 1f 00 00       	call   90c0 <fibril_mutex_lock@plt>
    7102:	a1 94 ad 00 00       	mov    0xad94,%eax
    7107:	83 c4 10             	add    $0x10,%esp
    710a:	3d 90 ad 00 00       	cmp    $0xad90,%eax
    710f:	74 1e                	je     712f <block_read_toc+0x4f>
    7111:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    7114:	3b 50 08             	cmp    0x8(%eax),%edx
    7117:	75 0c                	jne    7125 <block_read_toc+0x45>
    7119:	eb 3d                	jmp    7158 <block_read_toc+0x78>
    711b:	90                   	nop
    711c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7120:	3b 50 08             	cmp    0x8(%eax),%edx
    7123:	74 33                	je     7158 <block_read_toc+0x78>
    7125:	8b 40 04             	mov    0x4(%eax),%eax
    7128:	3d 90 ad 00 00       	cmp    $0xad90,%eax
    712d:	75 f1                	jne    7120 <block_read_toc+0x40>
    712f:	83 ec 0c             	sub    $0xc,%esp
    7132:	68 98 ad 00 00       	push   $0xad98
    7137:	e8 a4 1d 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    713c:	83 c4 0c             	add    $0xc,%esp
    713f:	68 8a 03 00 00       	push   $0x38a
    7144:	68 ef 88 00 00       	push   $0x88ef
    7149:	68 f7 88 00 00       	push   $0x88f7
    714e:	e8 5d 1d 00 00       	call   8eb0 <assert_abort@plt>
    7153:	90                   	nop
    7154:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7158:	83 ec 0c             	sub    $0xc,%esp
    715b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    715e:	81 e3 ff 00 00 00    	and    $0xff,%ebx
    7164:	68 98 ad 00 00       	push   $0xad98
    7169:	e8 72 1d 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    716e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    7171:	89 7d 14             	mov    %edi,0x14(%ebp)
    7174:	89 75 10             	mov    %esi,0x10(%ebp)
    7177:	89 5d 0c             	mov    %ebx,0xc(%ebp)
    717a:	8b 40 10             	mov    0x10(%eax),%eax
    717d:	83 c4 10             	add    $0x10,%esp
    7180:	89 45 08             	mov    %eax,0x8(%ebp)
    7183:	8d 65 f4             	lea    -0xc(%ebp),%esp
    7186:	5b                   	pop    %ebx
    7187:	5e                   	pop    %esi
    7188:	5f                   	pop    %edi
    7189:	5d                   	pop    %ebp
    718a:	e9 41 1d 00 00       	jmp    8ed0 <bd_read_toc@plt>

0000718f <write_blocks.part.3>:
    718f:	55                   	push   %ebp
    7190:	89 e5                	mov    %esp,%ebp
    7192:	83 ec 0c             	sub    $0xc,%esp
    7195:	68 b5 03 00 00       	push   $0x3b5
    719a:	68 ef 88 00 00       	push   $0x88ef
    719f:	68 f7 88 00 00       	push   $0x88f7
    71a4:	e8 07 1d 00 00       	call   8eb0 <assert_abort@plt>
    71a9:	66 90                	xchg   %ax,%ax
    71ab:	66 90                	xchg   %ax,%ax
    71ad:	66 90                	xchg   %ax,%ax
    71af:	90                   	nop

000071b0 <vfs_connection>:
    71b0:	55                   	push   %ebp
    71b1:	89 e5                	mov    %esp,%ebp
    71b3:	57                   	push   %edi
    71b4:	56                   	push   %esi
    71b5:	53                   	push   %ebx
    71b6:	81 ec 7c 01 00 00    	sub    $0x17c,%esp
    71bc:	8b 45 08             	mov    0x8(%ebp),%eax
    71bf:	85 c0                	test   %eax,%eax
    71c1:	0f 85 39 0a 00 00    	jne    7c00 <vfs_connection+0xa50>
    71c7:	90                   	nop
    71c8:	50                   	push   %eax
    71c9:	50                   	push   %eax
    71ca:	8d 85 bc fe ff ff    	lea    -0x144(%ebp),%eax
    71d0:	6a 00                	push   $0x0
    71d2:	50                   	push   %eax
    71d3:	e8 d8 1d 00 00       	call   8fb0 <async_get_call_timeout@plt>
    71d8:	89 c7                	mov    %eax,%edi
    71da:	8b 85 bc fe ff ff    	mov    -0x144(%ebp),%eax
    71e0:	83 c4 10             	add    $0x10,%esp
    71e3:	85 c0                	test   %eax,%eax
    71e5:	0f 84 ad 09 00 00    	je     7b98 <vfs_connection+0x9e8>
    71eb:	2d 00 04 00 00       	sub    $0x400,%eax
    71f0:	83 f8 0d             	cmp    $0xd,%eax
    71f3:	0f 87 a7 09 00 00    	ja     7ba0 <vfs_connection+0x9f0>
    71f9:	ff 24 85 34 8a 00 00 	jmp    *0x8a34(,%eax,4)
    7200:	a1 04 af 00 00       	mov    0xaf04,%eax
    7205:	8b 8d c4 fe ff ff    	mov    -0x13c(%ebp),%ecx
    720b:	8b 9d c0 fe ff ff    	mov    -0x140(%ebp),%ebx
    7211:	52                   	push   %edx
    7212:	52                   	push   %edx
    7213:	51                   	push   %ecx
    7214:	53                   	push   %ebx
    7215:	ff 50 18             	call   *0x18(%eax)
    7218:	5a                   	pop    %edx
    7219:	59                   	pop    %ecx
    721a:	50                   	push   %eax
    721b:	57                   	push   %edi
    721c:	e8 ff 1b 00 00       	call   8e20 <async_answer_0@plt>
    7221:	83 c4 10             	add    $0x10,%esp
    7224:	eb a2                	jmp    71c8 <vfs_connection+0x18>
    7226:	66 90                	xchg   %ax,%ax
    7228:	a1 08 af 00 00       	mov    0xaf08,%eax
    722d:	8b 8d c8 fe ff ff    	mov    -0x138(%ebp),%ecx
    7233:	89 85 90 fe ff ff    	mov    %eax,-0x170(%ebp)
    7239:	89 8d 9c fe ff ff    	mov    %ecx,-0x164(%ebp)
    723f:	a1 00 af 00 00       	mov    0xaf00,%eax
    7244:	8b 8d cc fe ff ff    	mov    -0x134(%ebp),%ecx
    724a:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%ebp)
    7250:	8b 95 c4 fe ff ff    	mov    -0x13c(%ebp),%edx
    7256:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
    725c:	89 8d 98 fe ff ff    	mov    %ecx,-0x168(%ebp)
    7262:	8b 8d d0 fe ff ff    	mov    -0x130(%ebp),%ecx
    7268:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%ebp)
    726e:	89 8d 88 fe ff ff    	mov    %ecx,-0x178(%ebp)
    7274:	39 d0                	cmp    %edx,%eax
    7276:	76 06                	jbe    727e <vfs_connection+0xce>
    7278:	81 c2 00 00 02 00    	add    $0x20000,%edx
    727e:	89 95 a0 fe ff ff    	mov    %edx,-0x160(%ebp)
    7284:	50                   	push   %eax
    7285:	8b 95 9c fe ff ff    	mov    -0x164(%ebp),%edx
    728b:	50                   	push   %eax
    728c:	8d 85 b0 fe ff ff    	lea    -0x150(%ebp),%eax
    7292:	52                   	push   %edx
    7293:	50                   	push   %eax
    7294:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    729a:	c7 85 b0 fe ff ff 00 	movl   $0x0,-0x150(%ebp)
    72a1:	00 00 00 
    72a4:	c7 85 b4 fe ff ff 00 	movl   $0x0,-0x14c(%ebp)
    72ab:	00 00 00 
    72ae:	ff 10                	call   *(%eax)
    72b0:	83 c4 10             	add    $0x10,%esp
    72b3:	85 c0                	test   %eax,%eax
    72b5:	0f 85 ad 08 00 00    	jne    7b68 <vfs_connection+0x9b8>
    72bb:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    72c1:	8b 95 a0 fe ff ff    	mov    -0x160(%ebp),%edx
    72c7:	80 38 00             	cmpb   $0x0,(%eax)
    72ca:	0f 85 22 0a 00 00    	jne    7cf2 <vfs_connection+0xb42>
    72d0:	8b b5 94 fe ff ff    	mov    -0x16c(%ebp),%esi
    72d6:	8b 1d 0c af 00 00    	mov    0xaf0c,%ebx
    72dc:	89 f1                	mov    %esi,%ecx
    72de:	c7 85 a0 fe ff ff 00 	movl   $0x0,-0x160(%ebp)
    72e5:	00 00 00 
    72e8:	81 e1 ff ff 01 00    	and    $0x1ffff,%ecx
    72ee:	80 3c 0b 2f          	cmpb   $0x2f,(%ebx,%ecx,1)
    72f2:	0f 94 c1             	sete   %cl
    72f5:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    72fb:	8d 34 0e             	lea    (%esi,%ecx,1),%esi
    72fe:	39 d6                	cmp    %edx,%esi
    7300:	0f 87 31 01 00 00    	ja     7437 <vfs_connection+0x287>
    7306:	8b 8d 98 fe ff ff    	mov    -0x168(%ebp),%ecx
    730c:	89 bd 80 fe ff ff    	mov    %edi,-0x180(%ebp)
    7312:	c1 e9 03             	shr    $0x3,%ecx
    7315:	89 d7                	mov    %edx,%edi
    7317:	83 f1 01             	xor    $0x1,%ecx
    731a:	89 8d 84 fe ff ff    	mov    %ecx,-0x17c(%ebp)
    7320:	52                   	push   %edx
    7321:	52                   	push   %edx
    7322:	50                   	push   %eax
    7323:	8d 85 af fe ff ff    	lea    -0x151(%ebp),%eax
    7329:	50                   	push   %eax
    732a:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    7330:	ff 50 24             	call   *0x24(%eax)
    7333:	83 c4 10             	add    $0x10,%esp
    7336:	85 c0                	test   %eax,%eax
    7338:	0f 85 f6 0a 00 00    	jne    7e34 <vfs_connection+0xc84>
    733e:	80 bd af fe ff ff 00 	cmpb   $0x0,-0x151(%ebp)
    7345:	0f 84 47 0b 00 00    	je     7e92 <vfs_connection+0xce2>
    734b:	8b 1d 0c af 00 00    	mov    0xaf0c,%ebx
    7351:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7358:	89 f2                	mov    %esi,%edx
    735a:	81 e2 ff ff 01 00    	and    $0x1ffff,%edx
    7360:	8a 14 13             	mov    (%ebx,%edx,1),%dl
    7363:	80 fa 2f             	cmp    $0x2f,%dl
    7366:	0f 84 74 08 00 00    	je     7be0 <vfs_connection+0xa30>
    736c:	3d ff 00 00 00       	cmp    $0xff,%eax
    7371:	0f 84 3d 09 00 00    	je     7cb4 <vfs_connection+0xb04>
    7377:	40                   	inc    %eax
    7378:	46                   	inc    %esi
    7379:	39 f7                	cmp    %esi,%edi
    737b:	88 94 05 df fe ff ff 	mov    %dl,-0x121(%ebp,%eax,1)
    7382:	73 d4                	jae    7358 <vfs_connection+0x1a8>
    7384:	c6 84 05 e0 fe ff ff 	movb   $0x0,-0x120(%ebp,%eax,1)
    738b:	00 
    738c:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    7392:	53                   	push   %ebx
    7393:	8d 9d e0 fe ff ff    	lea    -0x120(%ebp),%ebx
    7399:	53                   	push   %ebx
    739a:	50                   	push   %eax
    739b:	8d 85 b4 fe ff ff    	lea    -0x14c(%ebp),%eax
    73a1:	89 b5 8c fe ff ff    	mov    %esi,-0x174(%ebp)
    73a7:	50                   	push   %eax
    73a8:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    73ae:	46                   	inc    %esi
    73af:	ff 50 04             	call   *0x4(%eax)
    73b2:	83 c4 10             	add    $0x10,%esp
    73b5:	85 c0                	test   %eax,%eax
    73b7:	0f 85 77 0a 00 00    	jne    7e34 <vfs_connection+0xc84>
    73bd:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
    73c3:	85 c0                	test   %eax,%eax
    73c5:	0f 84 7a 0b 00 00    	je     7f45 <vfs_connection+0xd95>
    73cb:	80 38 00             	cmpb   $0x0,(%eax)
    73ce:	74 15                	je     73e5 <vfs_connection+0x235>
    73d0:	f6 85 84 fe ff ff 01 	testb  $0x1,-0x17c(%ebp)
    73d7:	0f 85 33 0c 00 00    	jne    8010 <vfs_connection+0xe60>
    73dd:	39 f7                	cmp    %esi,%edi
    73df:	0f 83 2b 0c 00 00    	jae    8010 <vfs_connection+0xe60>
    73e5:	8b 8d a0 fe ff ff    	mov    -0x160(%ebp),%ecx
    73eb:	85 c9                	test   %ecx,%ecx
    73ed:	74 1e                	je     740d <vfs_connection+0x25d>
    73ef:	83 ec 0c             	sub    $0xc,%esp
    73f2:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    73f8:	51                   	push   %ecx
    73f9:	ff 50 10             	call   *0x10(%eax)
    73fc:	83 c4 10             	add    $0x10,%esp
    73ff:	85 c0                	test   %eax,%eax
    7401:	0f 85 2d 0a 00 00    	jne    7e34 <vfs_connection+0xc84>
    7407:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
    740d:	8b 8d b0 fe ff ff    	mov    -0x150(%ebp),%ecx
    7413:	c7 85 b4 fe ff ff 00 	movl   $0x0,-0x14c(%ebp)
    741a:	00 00 00 
    741d:	89 8d a0 fe ff ff    	mov    %ecx,-0x160(%ebp)
    7423:	89 85 b0 fe ff ff    	mov    %eax,-0x150(%ebp)
    7429:	39 f7                	cmp    %esi,%edi
    742b:	0f 83 ef fe ff ff    	jae    7320 <vfs_connection+0x170>
    7431:	8b bd 80 fe ff ff    	mov    -0x180(%ebp),%edi
    7437:	f6 85 98 fe ff ff 80 	testb  $0x80,-0x168(%ebp)
    743e:	0f 85 90 0c 00 00    	jne    80d4 <vfs_connection+0xf24>
    7444:	8b 8d 98 fe ff ff    	mov    -0x168(%ebp),%ecx
    744a:	89 c8                	mov    %ecx,%eax
    744c:	83 e0 30             	and    $0x30,%eax
    744f:	83 f8 30             	cmp    $0x30,%eax
    7452:	0f 84 6a 0c 00 00    	je     80c2 <vfs_connection+0xf12>
    7458:	89 c8                	mov    %ecx,%eax
    745a:	a8 40                	test   $0x40,%al
    745c:	0f 85 60 0c 00 00    	jne    80c2 <vfs_connection+0xf12>
    7462:	f6 85 98 fe ff ff 01 	testb  $0x1,-0x168(%ebp)
    7469:	0f 85 b7 0d 00 00    	jne    8226 <vfs_connection+0x1076>
    746f:	f6 85 98 fe ff ff 02 	testb  $0x2,-0x168(%ebp)
    7476:	0f 85 77 0d 00 00    	jne    81f3 <vfs_connection+0x1043>
    747c:	f6 85 98 fe ff ff 04 	testb  $0x4,-0x168(%ebp)
    7483:	0f 84 ee 0c 00 00    	je     8177 <vfs_connection+0xfc7>
    7489:	8b 8d a0 fe ff ff    	mov    -0x160(%ebp),%ecx
    748f:	85 c9                	test   %ecx,%ecx
    7491:	0f 84 e0 0c 00 00    	je     8177 <vfs_connection+0xfc7>
    7497:	52                   	push   %edx
    7498:	52                   	push   %edx
    7499:	6a f2                	push   $0xfffffff2
    749b:	57                   	push   %edi
    749c:	e8 7f 19 00 00       	call   8e20 <async_answer_0@plt>
    74a1:	83 c4 10             	add    $0x10,%esp
    74a4:	83 ec 0c             	sub    $0xc,%esp
    74a7:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    74ad:	8b 95 a0 fe ff ff    	mov    -0x160(%ebp),%edx
    74b3:	52                   	push   %edx
    74b4:	ff 50 10             	call   *0x10(%eax)
    74b7:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    74bd:	83 c4 10             	add    $0x10,%esp
    74c0:	85 c0                	test   %eax,%eax
    74c2:	74 10                	je     74d4 <vfs_connection+0x324>
    74c4:	83 ec 0c             	sub    $0xc,%esp
    74c7:	50                   	push   %eax
    74c8:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    74ce:	ff 50 10             	call   *0x10(%eax)
    74d1:	83 c4 10             	add    $0x10,%esp
    74d4:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
    74da:	85 c0                	test   %eax,%eax
    74dc:	0f 84 e6 fc ff ff    	je     71c8 <vfs_connection+0x18>
    74e2:	83 ec 0c             	sub    $0xc,%esp
    74e5:	50                   	push   %eax
    74e6:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    74ec:	ff 50 10             	call   *0x10(%eax)
    74ef:	83 c4 10             	add    $0x10,%esp
    74f2:	e9 d1 fc ff ff       	jmp    71c8 <vfs_connection+0x18>
    74f7:	90                   	nop
    74f8:	a1 08 af 00 00       	mov    0xaf08,%eax
    74fd:	8b b5 c4 fe ff ff    	mov    -0x13c(%ebp),%esi
    7503:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%ebp)
    7509:	8b 1d 00 af 00 00    	mov    0xaf00,%ebx
    750f:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
    7515:	52                   	push   %edx
    7516:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%ebp)
    751c:	56                   	push   %esi
    751d:	50                   	push   %eax
    751e:	8d 85 b0 fe ff ff    	lea    -0x150(%ebp),%eax
    7524:	50                   	push   %eax
    7525:	ff 53 08             	call   *0x8(%ebx)
    7528:	83 c4 10             	add    $0x10,%esp
    752b:	85 c0                	test   %eax,%eax
    752d:	0f 85 6d 04 00 00    	jne    79a0 <vfs_connection+0x7f0>
    7533:	50                   	push   %eax
    7534:	50                   	push   %eax
    7535:	8d 85 b8 fe ff ff    	lea    -0x148(%ebp),%eax
    753b:	50                   	push   %eax
    753c:	8d 85 b4 fe ff ff    	lea    -0x14c(%ebp),%eax
    7542:	50                   	push   %eax
    7543:	e8 38 1a 00 00       	call   8f80 <async_data_read_receive@plt>
    7548:	83 c4 10             	add    $0x10,%esp
    754b:	84 c0                	test   %al,%al
    754d:	0f 84 e0 05 00 00    	je     7b33 <vfs_connection+0x983>
    7553:	83 bd b8 fe ff ff 20 	cmpl   $0x20,-0x148(%ebp)
    755a:	0f 85 d3 05 00 00    	jne    7b33 <vfs_connection+0x983>
    7560:	8d 8d e0 fe ff ff    	lea    -0x120(%ebp),%ecx
    7566:	50                   	push   %eax
    7567:	89 8d 9c fe ff ff    	mov    %ecx,-0x164(%ebp)
    756d:	6a 20                	push   $0x20
    756f:	6a 00                	push   $0x0
    7571:	51                   	push   %ecx
    7572:	e8 f9 19 00 00       	call   8f70 <memset@plt>
    7577:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    757d:	66 89 85 e0 fe ff ff 	mov    %ax,-0x120(%ebp)
    7584:	8b 85 a0 fe ff ff    	mov    -0x160(%ebp),%eax
    758a:	8b 95 b0 fe ff ff    	mov    -0x150(%ebp),%edx
    7590:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%ebp)
    7596:	89 b5 e8 fe ff ff    	mov    %esi,-0x118(%ebp)
    759c:	58                   	pop    %eax
    759d:	52                   	push   %edx
    759e:	ff 53 30             	call   *0x30(%ebx)
    75a1:	8b b5 b0 fe ff ff    	mov    -0x150(%ebp),%esi
    75a7:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
    75ad:	59                   	pop    %ecx
    75ae:	56                   	push   %esi
    75af:	ff 53 38             	call   *0x38(%ebx)
    75b2:	88 85 f0 fe ff ff    	mov    %al,-0x110(%ebp)
    75b8:	58                   	pop    %eax
    75b9:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    75bf:	50                   	push   %eax
    75c0:	ff 53 34             	call   *0x34(%ebx)
    75c3:	88 85 f1 fe ff ff    	mov    %al,-0x10f(%ebp)
    75c9:	58                   	pop    %eax
    75ca:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    75d0:	50                   	push   %eax
    75d1:	ff 53 2c             	call   *0x2c(%ebx)
    75d4:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
    75da:	89 95 f8 fe ff ff    	mov    %edx,-0x108(%ebp)
    75e0:	58                   	pop    %eax
    75e1:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    75e7:	50                   	push   %eax
    75e8:	ff 53 3c             	call   *0x3c(%ebx)
    75eb:	8b 8d b0 fe ff ff    	mov    -0x150(%ebp),%ecx
    75f1:	5a                   	pop    %edx
    75f2:	89 85 fc fe ff ff    	mov    %eax,-0x104(%ebp)
    75f8:	51                   	push   %ecx
    75f9:	ff 53 10             	call   *0x10(%ebx)
    75fc:	83 c4 0c             	add    $0xc,%esp
    75ff:	8b 8d 9c fe ff ff    	mov    -0x164(%ebp),%ecx
    7605:	6a 20                	push   $0x20
    7607:	51                   	push   %ecx
    7608:	e9 01 08 00 00       	jmp    7e0e <vfs_connection+0xc5e>
    760d:	8d 76 00             	lea    0x0(%esi),%esi
    7610:	50                   	push   %eax
    7611:	50                   	push   %eax
    7612:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
    7618:	50                   	push   %eax
    7619:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
    761f:	50                   	push   %eax
    7620:	a1 04 af 00 00       	mov    0xaf04,%eax
    7625:	ff 50 1c             	call   *0x1c(%eax)
    7628:	e9 eb fb ff ff       	jmp    7218 <vfs_connection+0x68>
    762d:	8d 76 00             	lea    0x0(%esi),%esi
    7630:	83 ec 0c             	sub    $0xc,%esp
    7633:	a1 04 af 00 00       	mov    0xaf04,%eax
    7638:	8b 8d c0 fe ff ff    	mov    -0x140(%ebp),%ecx
    763e:	51                   	push   %ecx
    763f:	ff 50 04             	call   *0x4(%eax)
    7642:	e9 d1 fb ff ff       	jmp    7218 <vfs_connection+0x68>
    7647:	90                   	nop
    7648:	8b 1d 00 af 00 00    	mov    0xaf00,%ebx
    764e:	50                   	push   %eax
    764f:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
    7655:	8b 95 c0 fe ff ff    	mov    -0x140(%ebp),%edx
    765b:	50                   	push   %eax
    765c:	8d 85 e0 fe ff ff    	lea    -0x120(%ebp),%eax
    7662:	52                   	push   %edx
    7663:	50                   	push   %eax
    7664:	ff 53 08             	call   *0x8(%ebx)
    7667:	83 c4 10             	add    $0x10,%esp
    766a:	85 c0                	test   %eax,%eax
    766c:	0f 85 2e 03 00 00    	jne    79a0 <vfs_connection+0x7f0>
    7672:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
    7678:	85 c0                	test   %eax,%eax
    767a:	0f 84 ac 07 00 00    	je     7e2c <vfs_connection+0xc7c>
    7680:	80 38 00             	cmpb   $0x0,(%eax)
    7683:	0f 84 1f 06 00 00    	je     7ca8 <vfs_connection+0xaf8>
    7689:	83 ec 0c             	sub    $0xc,%esp
    768c:	8b 40 04             	mov    0x4(%eax),%eax
    768f:	50                   	push   %eax
    7690:	e8 5b 19 00 00       	call   8ff0 <async_exchange_begin@plt>
    7695:	83 c4 0c             	add    $0xc,%esp
    7698:	89 c2                	mov    %eax,%edx
    769a:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
    76a0:	89 95 a4 fe ff ff    	mov    %edx,-0x15c(%ebp)
    76a6:	6a 00                	push   $0x0
    76a8:	6a 00                	push   $0x0
    76aa:	6a 00                	push   $0x0
    76ac:	6a 00                	push   $0x0
    76ae:	6a 00                	push   $0x0
    76b0:	6a 00                	push   $0x0
    76b2:	6a 00                	push   $0x0
    76b4:	6a 00                	push   $0x0
    76b6:	8b 40 0c             	mov    0xc(%eax),%eax
    76b9:	50                   	push   %eax
    76ba:	68 08 04 00 00       	push   $0x408
    76bf:	52                   	push   %edx
    76c0:	e8 4b 17 00 00       	call   8e10 <async_req_fast@plt>
    76c5:	83 c4 24             	add    $0x24,%esp
    76c8:	8b 95 a4 fe ff ff    	mov    -0x15c(%ebp),%edx
    76ce:	89 c6                	mov    %eax,%esi
    76d0:	52                   	push   %edx
    76d1:	e8 ba 17 00 00       	call   8e90 <async_exchange_end@plt>
    76d6:	83 c4 10             	add    $0x10,%esp
    76d9:	85 f6                	test   %esi,%esi
    76db:	75 38                	jne    7715 <vfs_connection+0x565>
    76dd:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
    76e3:	83 ec 0c             	sub    $0xc,%esp
    76e6:	8b 40 04             	mov    0x4(%eax),%eax
    76e9:	50                   	push   %eax
    76ea:	e8 01 16 00 00       	call   8cf0 <async_hangup@plt>
    76ef:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
    76f5:	c6 00 00             	movb   $0x0,(%eax)
    76f8:	66 c7 40 08 00 00    	movw   $0x0,0x8(%eax)
    76fe:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
    7705:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
    770c:	89 04 24             	mov    %eax,(%esp)
    770f:	ff 53 10             	call   *0x10(%ebx)
    7712:	83 c4 10             	add    $0x10,%esp
    7715:	83 ec 0c             	sub    $0xc,%esp
    7718:	8b 8d e0 fe ff ff    	mov    -0x120(%ebp),%ecx
    771e:	51                   	push   %ecx
    771f:	ff 53 10             	call   *0x10(%ebx)
    7722:	5b                   	pop    %ebx
    7723:	58                   	pop    %eax
    7724:	56                   	push   %esi
    7725:	57                   	push   %edi
    7726:	e8 f5 16 00 00       	call   8e20 <async_answer_0@plt>
    772b:	83 c4 10             	add    $0x10,%esp
    772e:	e9 95 fa ff ff       	jmp    71c8 <vfs_connection+0x18>
    7733:	90                   	nop
    7734:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7738:	50                   	push   %eax
    7739:	50                   	push   %eax
    773a:	8d 85 b0 fe ff ff    	lea    -0x150(%ebp),%eax
    7740:	6a 00                	push   $0x0
    7742:	8b 9d c0 fe ff ff    	mov    -0x140(%ebp),%ebx
    7748:	6a 00                	push   $0x0
    774a:	6a 00                	push   $0x0
    774c:	6a 00                	push   $0x0
    774e:	6a 01                	push   $0x1
    7750:	50                   	push   %eax
    7751:	e8 da 18 00 00       	call   9030 <async_data_write_accept@plt>
    7756:	83 c4 20             	add    $0x20,%esp
    7759:	85 c0                	test   %eax,%eax
    775b:	0f 85 3f 02 00 00    	jne    79a0 <vfs_connection+0x7f0>
    7761:	83 ec 0c             	sub    $0xc,%esp
    7764:	8d 85 b8 fe ff ff    	lea    -0x148(%ebp),%eax
    776a:	50                   	push   %eax
    776b:	8d 85 e0 fe ff ff    	lea    -0x120(%ebp),%eax
    7771:	50                   	push   %eax
    7772:	8d 85 b4 fe ff ff    	lea    -0x14c(%ebp),%eax
    7778:	50                   	push   %eax
    7779:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    777f:	50                   	push   %eax
    7780:	a1 04 af 00 00       	mov    0xaf04,%eax
    7785:	53                   	push   %ebx
    7786:	ff 10                	call   *(%eax)
    7788:	83 c4 20             	add    $0x20,%esp
    778b:	85 c0                	test   %eax,%eax
    778d:	0f 85 85 04 00 00    	jne    7c18 <vfs_connection+0xa68>
    7793:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
    7799:	8b 9d b8 fe ff ff    	mov    -0x148(%ebp),%ebx
    779f:	8b b5 e4 fe ff ff    	mov    -0x11c(%ebp),%esi
    77a5:	51                   	push   %ecx
    77a6:	51                   	push   %ecx
    77a7:	53                   	push   %ebx
    77a8:	56                   	push   %esi
    77a9:	50                   	push   %eax
    77aa:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
    77b0:	50                   	push   %eax
    77b1:	6a 00                	push   $0x0
    77b3:	57                   	push   %edi
    77b4:	e8 47 17 00 00       	call   8f00 <async_answer_4@plt>
    77b9:	83 c4 20             	add    $0x20,%esp
    77bc:	83 ec 0c             	sub    $0xc,%esp
    77bf:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    77c5:	50                   	push   %eax
    77c6:	e8 e5 18 00 00       	call   90b0 <free@plt>
    77cb:	83 c4 10             	add    $0x10,%esp
    77ce:	e9 f5 f9 ff ff       	jmp    71c8 <vfs_connection+0x18>
    77d3:	90                   	nop
    77d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    77d8:	a1 00 af 00 00       	mov    0xaf00,%eax
    77dd:	83 ec 0c             	sub    $0xc,%esp
    77e0:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%ebp)
    77e6:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
    77ec:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%ebp)
    77f2:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
    77f8:	89 85 98 fe ff ff    	mov    %eax,-0x168(%ebp)
    77fe:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
    7804:	6a 02                	push   $0x2
    7806:	8b 9d c0 fe ff ff    	mov    -0x140(%ebp),%ebx
    780c:	89 85 9c fe ff ff    	mov    %eax,-0x164(%ebp)
    7812:	e8 f9 16 00 00       	call   8f10 <async_clone_receive@plt>
    7817:	83 c4 10             	add    $0x10,%esp
    781a:	89 c6                	mov    %eax,%esi
    781c:	85 c0                	test   %eax,%eax
    781e:	0f 84 bc 04 00 00    	je     7ce0 <vfs_connection+0xb30>
    7824:	8b 85 a0 fe ff ff    	mov    -0x160(%ebp),%eax
    782a:	51                   	push   %ecx
    782b:	50                   	push   %eax
    782c:	8d 85 b8 fe ff ff    	lea    -0x148(%ebp),%eax
    7832:	53                   	push   %ebx
    7833:	50                   	push   %eax
    7834:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    783a:	ff 50 08             	call   *0x8(%eax)
    783d:	83 c4 10             	add    $0x10,%esp
    7840:	89 c3                	mov    %eax,%ebx
    7842:	85 c0                	test   %eax,%eax
    7844:	0f 85 36 04 00 00    	jne    7c80 <vfs_connection+0xad0>
    784a:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
    7850:	85 c0                	test   %eax,%eax
    7852:	0f 84 15 05 00 00    	je     7d6d <vfs_connection+0xbbd>
    7858:	80 38 00             	cmpb   $0x0,(%eax)
    785b:	0f 85 e7 03 00 00    	jne    7c48 <vfs_connection+0xa98>
    7861:	83 ec 0c             	sub    $0xc,%esp
    7864:	56                   	push   %esi
    7865:	e8 86 17 00 00       	call   8ff0 <async_exchange_begin@plt>
    786a:	89 c3                	mov    %eax,%ebx
    786c:	58                   	pop    %eax
    786d:	5a                   	pop    %edx
    786e:	53                   	push   %ebx
    786f:	6a 02                	push   $0x2
    7871:	e8 6a 15 00 00       	call   8de0 <async_clone_establish@plt>
    7876:	83 c4 10             	add    $0x10,%esp
    7879:	85 c0                	test   %eax,%eax
    787b:	0f 84 cc 05 00 00    	je     7e4d <vfs_connection+0xc9d>
    7881:	50                   	push   %eax
    7882:	8d 85 e0 fe ff ff    	lea    -0x120(%ebp),%eax
    7888:	50                   	push   %eax
    7889:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
    788f:	6a 00                	push   $0x0
    7891:	6a 00                	push   $0x0
    7893:	6a 00                	push   $0x0
    7895:	50                   	push   %eax
    7896:	68 06 04 00 00       	push   $0x406
    789b:	53                   	push   %ebx
    789c:	e8 5f 14 00 00       	call   8d00 <async_data_write_forward_fast@plt>
    78a1:	83 c4 14             	add    $0x14,%esp
    78a4:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%ebp)
    78aa:	53                   	push   %ebx
    78ab:	e8 e0 15 00 00       	call   8e90 <async_exchange_end@plt>
    78b0:	8b 95 a4 fe ff ff    	mov    -0x15c(%ebp),%edx
    78b6:	83 c4 10             	add    $0x10,%esp
    78b9:	85 d2                	test   %edx,%edx
    78bb:	75 1f                	jne    78dc <vfs_connection+0x72c>
    78bd:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
    78c3:	8b 9d 98 fe ff ff    	mov    -0x168(%ebp),%ebx
    78c9:	8b 8d 9c fe ff ff    	mov    -0x164(%ebp),%ecx
    78cf:	c6 00 01             	movb   $0x1,(%eax)
    78d2:	66 89 58 08          	mov    %bx,0x8(%eax)
    78d6:	89 48 0c             	mov    %ecx,0xc(%eax)
    78d9:	89 70 04             	mov    %esi,0x4(%eax)
    78dc:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
    78e2:	8b b5 f0 fe ff ff    	mov    -0x110(%ebp),%esi
    78e8:	53                   	push   %ebx
    78e9:	53                   	push   %ebx
    78ea:	56                   	push   %esi
    78eb:	50                   	push   %eax
    78ec:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
    78f2:	50                   	push   %eax
    78f3:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
    78f9:	50                   	push   %eax
    78fa:	52                   	push   %edx
    78fb:	57                   	push   %edi
    78fc:	e8 ff 15 00 00       	call   8f00 <async_answer_4@plt>
    7901:	83 c4 20             	add    $0x20,%esp
    7904:	e9 bf f8 ff ff       	jmp    71c8 <vfs_connection+0x18>
    7909:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7910:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
    7916:	56                   	push   %esi
    7917:	56                   	push   %esi
    7918:	50                   	push   %eax
    7919:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
    791f:	50                   	push   %eax
    7920:	a1 04 af 00 00       	mov    0xaf04,%eax
    7925:	ff 50 14             	call   *0x14(%eax)
    7928:	e9 eb f8 ff ff       	jmp    7218 <vfs_connection+0x68>
    792d:	8d 76 00             	lea    0x0(%esi),%esi
    7930:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
    7936:	8b 9d cc fe ff ff    	mov    -0x134(%ebp),%ebx
    793c:	8b b5 c8 fe ff ff    	mov    -0x138(%ebp),%esi
    7942:	53                   	push   %ebx
    7943:	56                   	push   %esi
    7944:	50                   	push   %eax
    7945:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
    794b:	50                   	push   %eax
    794c:	a1 04 af 00 00       	mov    0xaf04,%eax
    7951:	ff 50 10             	call   *0x10(%eax)
    7954:	e9 bf f8 ff ff       	jmp    7218 <vfs_connection+0x68>
    7959:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7960:	50                   	push   %eax
    7961:	50                   	push   %eax
    7962:	8d 85 e0 fe ff ff    	lea    -0x120(%ebp),%eax
    7968:	8b 95 cc fe ff ff    	mov    -0x134(%ebp),%edx
    796e:	50                   	push   %eax
    796f:	8d 85 b8 fe ff ff    	lea    -0x148(%ebp),%eax
    7975:	50                   	push   %eax
    7976:	a1 04 af 00 00       	mov    0xaf04,%eax
    797b:	8b 8d c8 fe ff ff    	mov    -0x138(%ebp),%ecx
    7981:	8b 9d c4 fe ff ff    	mov    -0x13c(%ebp),%ebx
    7987:	8b b5 c0 fe ff ff    	mov    -0x140(%ebp),%esi
    798d:	52                   	push   %edx
    798e:	51                   	push   %ecx
    798f:	53                   	push   %ebx
    7990:	56                   	push   %esi
    7991:	ff 50 0c             	call   *0xc(%eax)
    7994:	83 c4 20             	add    $0x20,%esp
    7997:	85 c0                	test   %eax,%eax
    7999:	0f 84 19 02 00 00    	je     7bb8 <vfs_connection+0xa08>
    799f:	90                   	nop
    79a0:	52                   	push   %edx
    79a1:	52                   	push   %edx
    79a2:	50                   	push   %eax
    79a3:	57                   	push   %edi
    79a4:	e8 77 14 00 00       	call   8e20 <async_answer_0@plt>
    79a9:	83 c4 10             	add    $0x10,%esp
    79ac:	e9 17 f8 ff ff       	jmp    71c8 <vfs_connection+0x18>
    79b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    79b8:	83 ec 0c             	sub    $0xc,%esp
    79bb:	8d 85 e0 fe ff ff    	lea    -0x120(%ebp),%eax
    79c1:	50                   	push   %eax
    79c2:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
    79c8:	50                   	push   %eax
    79c9:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
    79cf:	50                   	push   %eax
    79d0:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
    79d6:	50                   	push   %eax
    79d7:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
    79dd:	50                   	push   %eax
    79de:	a1 04 af 00 00       	mov    0xaf04,%eax
    79e3:	ff 50 08             	call   *0x8(%eax)
    79e6:	83 c4 20             	add    $0x20,%esp
    79e9:	85 c0                	test   %eax,%eax
    79eb:	75 b3                	jne    79a0 <vfs_connection+0x7f0>
    79ed:	50                   	push   %eax
    79ee:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
    79f4:	50                   	push   %eax
    79f5:	6a 00                	push   $0x0
    79f7:	57                   	push   %edi
    79f8:	e8 e3 15 00 00       	call   8fe0 <async_answer_1@plt>
    79fd:	83 c4 10             	add    $0x10,%esp
    7a00:	e9 c3 f7 ff ff       	jmp    71c8 <vfs_connection+0x18>
    7a05:	8d 76 00             	lea    0x0(%esi),%esi
    7a08:	50                   	push   %eax
    7a09:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
    7a0f:	50                   	push   %eax
    7a10:	8b 1d 00 af 00 00    	mov    0xaf00,%ebx
    7a16:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
    7a1c:	50                   	push   %eax
    7a1d:	8d 85 e0 fe ff ff    	lea    -0x120(%ebp),%eax
    7a23:	50                   	push   %eax
    7a24:	ff 53 08             	call   *0x8(%ebx)
    7a27:	83 c4 10             	add    $0x10,%esp
    7a2a:	89 c6                	mov    %eax,%esi
    7a2c:	85 c0                	test   %eax,%eax
    7a2e:	0f 85 fc 01 00 00    	jne    7c30 <vfs_connection+0xa80>
    7a34:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
    7a3a:	85 c0                	test   %eax,%eax
    7a3c:	0f 84 19 03 00 00    	je     7d5b <vfs_connection+0xbab>
    7a42:	83 ec 0c             	sub    $0xc,%esp
    7a45:	50                   	push   %eax
    7a46:	ff 53 0c             	call   *0xc(%ebx)
    7a49:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%ebp)
    7a4f:	58                   	pop    %eax
    7a50:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
    7a56:	50                   	push   %eax
    7a57:	ff 53 2c             	call   *0x2c(%ebx)
    7a5a:	89 95 98 fe ff ff    	mov    %edx,-0x168(%ebp)
    7a60:	8b 95 e0 fe ff ff    	mov    -0x120(%ebp),%edx
    7a66:	89 85 9c fe ff ff    	mov    %eax,-0x164(%ebp)
    7a6c:	58                   	pop    %eax
    7a6d:	52                   	push   %edx
    7a6e:	ff 53 38             	call   *0x38(%ebx)
    7a71:	88 c1                	mov    %al,%cl
    7a73:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
    7a79:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7a7f:	89 8d a0 fe ff ff    	mov    %ecx,-0x160(%ebp)
    7a85:	59                   	pop    %ecx
    7a86:	50                   	push   %eax
    7a87:	ff 53 34             	call   *0x34(%ebx)
    7a8a:	83 c4 10             	add    $0x10,%esp
    7a8d:	84 c0                	test   %al,%al
    7a8f:	74 05                	je     7a96 <vfs_connection+0x8e6>
    7a91:	be 02 00 00 00       	mov    $0x2,%esi
    7a96:	83 ec 0c             	sub    $0xc,%esp
    7a99:	8b 8d e0 fe ff ff    	mov    -0x120(%ebp),%ecx
    7a9f:	51                   	push   %ecx
    7aa0:	ff 53 30             	call   *0x30(%ebx)
    7aa3:	5a                   	pop    %edx
    7aa4:	59                   	pop    %ecx
    7aa5:	8b 8d a0 fe ff ff    	mov    -0x160(%ebp),%ecx
    7aab:	09 f1                	or     %esi,%ecx
    7aad:	8b b5 98 fe ff ff    	mov    -0x168(%ebp),%esi
    7ab3:	51                   	push   %ecx
    7ab4:	50                   	push   %eax
    7ab5:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
    7abb:	56                   	push   %esi
    7abc:	50                   	push   %eax
    7abd:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    7ac3:	50                   	push   %eax
    7ac4:	57                   	push   %edi
    7ac5:	e8 36 14 00 00       	call   8f00 <async_answer_4@plt>
    7aca:	83 c4 14             	add    $0x14,%esp
    7acd:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
    7ad3:	50                   	push   %eax
    7ad4:	ff 53 10             	call   *0x10(%ebx)
    7ad7:	83 c4 10             	add    $0x10,%esp
    7ada:	e9 e9 f6 ff ff       	jmp    71c8 <vfs_connection+0x18>
    7adf:	90                   	nop
    7ae0:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
    7ae6:	8b 1d 00 af 00 00    	mov    0xaf00,%ebx
    7aec:	8b b5 c0 fe ff ff    	mov    -0x140(%ebp),%esi
    7af2:	51                   	push   %ecx
    7af3:	50                   	push   %eax
    7af4:	8d 85 b0 fe ff ff    	lea    -0x150(%ebp),%eax
    7afa:	56                   	push   %esi
    7afb:	50                   	push   %eax
    7afc:	ff 53 08             	call   *0x8(%ebx)
    7aff:	83 c4 10             	add    $0x10,%esp
    7b02:	85 c0                	test   %eax,%eax
    7b04:	0f 85 96 fe ff ff    	jne    79a0 <vfs_connection+0x7f0>
    7b0a:	50                   	push   %eax
    7b0b:	50                   	push   %eax
    7b0c:	8d 85 b8 fe ff ff    	lea    -0x148(%ebp),%eax
    7b12:	50                   	push   %eax
    7b13:	8d 85 b4 fe ff ff    	lea    -0x14c(%ebp),%eax
    7b19:	50                   	push   %eax
    7b1a:	e8 61 14 00 00       	call   8f80 <async_data_read_receive@plt>
    7b1f:	83 c4 10             	add    $0x10,%esp
    7b22:	84 c0                	test   %al,%al
    7b24:	74 0d                	je     7b33 <vfs_connection+0x983>
    7b26:	83 bd b8 fe ff ff 18 	cmpl   $0x18,-0x148(%ebp)
    7b2d:	0f 84 4e 02 00 00    	je     7d81 <vfs_connection+0xbd1>
    7b33:	83 ec 0c             	sub    $0xc,%esp
    7b36:	8b b5 b0 fe ff ff    	mov    -0x150(%ebp),%esi
    7b3c:	56                   	push   %esi
    7b3d:	ff 53 10             	call   *0x10(%ebx)
    7b40:	8b 8d b4 fe ff ff    	mov    -0x14c(%ebp),%ecx
    7b46:	58                   	pop    %eax
    7b47:	5a                   	pop    %edx
    7b48:	6a f2                	push   $0xfffffff2
    7b4a:	51                   	push   %ecx
    7b4b:	e8 d0 12 00 00       	call   8e20 <async_answer_0@plt>
    7b50:	5a                   	pop    %edx
    7b51:	59                   	pop    %ecx
    7b52:	6a f2                	push   $0xfffffff2
    7b54:	57                   	push   %edi
    7b55:	e8 c6 12 00 00       	call   8e20 <async_answer_0@plt>
    7b5a:	83 c4 10             	add    $0x10,%esp
    7b5d:	e9 66 f6 ff ff       	jmp    71c8 <vfs_connection+0x18>
    7b62:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7b68:	53                   	push   %ebx
    7b69:	53                   	push   %ebx
    7b6a:	50                   	push   %eax
    7b6b:	57                   	push   %edi
    7b6c:	e8 af 12 00 00       	call   8e20 <async_answer_0@plt>
    7b71:	83 c4 10             	add    $0x10,%esp
    7b74:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    7b7a:	85 c0                	test   %eax,%eax
    7b7c:	0f 84 52 f9 ff ff    	je     74d4 <vfs_connection+0x324>
    7b82:	83 ec 0c             	sub    $0xc,%esp
    7b85:	50                   	push   %eax
    7b86:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    7b8c:	ff 50 10             	call   *0x10(%eax)
    7b8f:	83 c4 10             	add    $0x10,%esp
    7b92:	e9 3d f9 ff ff       	jmp    74d4 <vfs_connection+0x324>
    7b97:	90                   	nop
    7b98:	8d 65 f4             	lea    -0xc(%ebp),%esp
    7b9b:	5b                   	pop    %ebx
    7b9c:	5e                   	pop    %esi
    7b9d:	5f                   	pop    %edi
    7b9e:	5d                   	pop    %ebp
    7b9f:	c3                   	ret    
    7ba0:	50                   	push   %eax
    7ba1:	50                   	push   %eax
    7ba2:	6a f5                	push   $0xfffffff5
    7ba4:	57                   	push   %edi
    7ba5:	e8 76 12 00 00       	call   8e20 <async_answer_0@plt>
    7baa:	83 c4 10             	add    $0x10,%esp
    7bad:	e9 16 f6 ff ff       	jmp    71c8 <vfs_connection+0x18>
    7bb2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7bb8:	83 ec 0c             	sub    $0xc,%esp
    7bbb:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
    7bc1:	50                   	push   %eax
    7bc2:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
    7bc8:	50                   	push   %eax
    7bc9:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
    7bcf:	50                   	push   %eax
    7bd0:	6a 00                	push   $0x0
    7bd2:	57                   	push   %edi
    7bd3:	e8 28 14 00 00       	call   9000 <async_answer_3@plt>
    7bd8:	83 c4 20             	add    $0x20,%esp
    7bdb:	e9 e8 f5 ff ff       	jmp    71c8 <vfs_connection+0x18>
    7be0:	85 c0                	test   %eax,%eax
    7be2:	0f 85 9c f7 ff ff    	jne    7384 <vfs_connection+0x1d4>
    7be8:	50                   	push   %eax
    7be9:	68 3b 02 00 00       	push   $0x23b
    7bee:	68 28 8a 00 00       	push   $0x8a28
    7bf3:	68 30 8a 00 00       	push   $0x8a30
    7bf8:	e8 b3 12 00 00       	call   8eb0 <assert_abort@plt>
    7bfd:	8d 76 00             	lea    0x0(%esi),%esi
    7c00:	52                   	push   %edx
    7c01:	52                   	push   %edx
    7c02:	6a 00                	push   $0x0
    7c04:	50                   	push   %eax
    7c05:	e8 16 12 00 00       	call   8e20 <async_answer_0@plt>
    7c0a:	83 c4 10             	add    $0x10,%esp
    7c0d:	e9 b6 f5 ff ff       	jmp    71c8 <vfs_connection+0x18>
    7c12:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7c18:	52                   	push   %edx
    7c19:	52                   	push   %edx
    7c1a:	50                   	push   %eax
    7c1b:	57                   	push   %edi
    7c1c:	e8 ff 11 00 00       	call   8e20 <async_answer_0@plt>
    7c21:	83 c4 10             	add    $0x10,%esp
    7c24:	e9 93 fb ff ff       	jmp    77bc <vfs_connection+0x60c>
    7c29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7c30:	50                   	push   %eax
    7c31:	50                   	push   %eax
    7c32:	56                   	push   %esi
    7c33:	57                   	push   %edi
    7c34:	e8 e7 11 00 00       	call   8e20 <async_answer_0@plt>
    7c39:	83 c4 10             	add    $0x10,%esp
    7c3c:	e9 87 f5 ff ff       	jmp    71c8 <vfs_connection+0x18>
    7c41:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7c48:	83 ec 0c             	sub    $0xc,%esp
    7c4b:	56                   	push   %esi
    7c4c:	e8 9f 10 00 00       	call   8cf0 <async_hangup@plt>
    7c51:	8b 9d b8 fe ff ff    	mov    -0x148(%ebp),%ebx
    7c57:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    7c5d:	59                   	pop    %ecx
    7c5e:	53                   	push   %ebx
    7c5f:	ff 50 10             	call   *0x10(%eax)
    7c62:	c7 04 24 f1 ff ff ff 	movl   $0xfffffff1,(%esp)
    7c69:	e8 32 13 00 00       	call   8fa0 <async_data_write_void@plt>
    7c6e:	5e                   	pop    %esi
    7c6f:	58                   	pop    %eax
    7c70:	6a f1                	push   $0xfffffff1
    7c72:	57                   	push   %edi
    7c73:	e8 a8 11 00 00       	call   8e20 <async_answer_0@plt>
    7c78:	83 c4 10             	add    $0x10,%esp
    7c7b:	e9 48 f5 ff ff       	jmp    71c8 <vfs_connection+0x18>
    7c80:	83 ec 0c             	sub    $0xc,%esp
    7c83:	56                   	push   %esi
    7c84:	e8 67 10 00 00       	call   8cf0 <async_hangup@plt>
    7c89:	83 c4 10             	add    $0x10,%esp
    7c8c:	83 ec 0c             	sub    $0xc,%esp
    7c8f:	53                   	push   %ebx
    7c90:	e8 0b 13 00 00       	call   8fa0 <async_data_write_void@plt>
    7c95:	58                   	pop    %eax
    7c96:	5a                   	pop    %edx
    7c97:	53                   	push   %ebx
    7c98:	57                   	push   %edi
    7c99:	e8 82 11 00 00       	call   8e20 <async_answer_0@plt>
    7c9e:	83 c4 10             	add    $0x10,%esp
    7ca1:	e9 22 f5 ff ff       	jmp    71c8 <vfs_connection+0x18>
    7ca6:	66 90                	xchg   %ax,%ax
    7ca8:	83 ec 0c             	sub    $0xc,%esp
    7cab:	50                   	push   %eax
    7cac:	ff 53 10             	call   *0x10(%ebx)
    7caf:	e9 9c fe ff ff       	jmp    7b50 <vfs_connection+0x9a0>
    7cb4:	8b bd 80 fe ff ff    	mov    -0x180(%ebp),%edi
    7cba:	53                   	push   %ebx
    7cbb:	53                   	push   %ebx
    7cbc:	68 00 ff ff ff       	push   $0xffffff00
    7cc1:	57                   	push   %edi
    7cc2:	e8 59 11 00 00       	call   8e20 <async_answer_0@plt>
    7cc7:	83 c4 10             	add    $0x10,%esp
    7cca:	8b 8d a0 fe ff ff    	mov    -0x160(%ebp),%ecx
    7cd0:	85 c9                	test   %ecx,%ecx
    7cd2:	0f 85 cc f7 ff ff    	jne    74a4 <vfs_connection+0x2f4>
    7cd8:	e9 97 fe ff ff       	jmp    7b74 <vfs_connection+0x9c4>
    7cdd:	8d 76 00             	lea    0x0(%esi),%esi
    7ce0:	50                   	push   %eax
    7ce1:	50                   	push   %eax
    7ce2:	6a f2                	push   $0xfffffff2
    7ce4:	57                   	push   %edi
    7ce5:	e8 36 11 00 00       	call   8e20 <async_answer_0@plt>
    7cea:	83 c4 10             	add    $0x10,%esp
    7ced:	e9 d6 f4 ff ff       	jmp    71c8 <vfs_connection+0x18>
    7cf2:	83 ec 0c             	sub    $0xc,%esp
    7cf5:	8b 48 04             	mov    0x4(%eax),%ecx
    7cf8:	51                   	push   %ecx
    7cf9:	e8 f2 12 00 00       	call   8ff0 <async_exchange_begin@plt>
    7cfe:	8b b5 88 fe ff ff    	mov    -0x178(%ebp),%esi
    7d04:	89 c3                	mov    %eax,%ebx
    7d06:	8b 85 98 fe ff ff    	mov    -0x168(%ebp),%eax
    7d0c:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
    7d13:	56                   	push   %esi
    7d14:	50                   	push   %eax
    7d15:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    7d1b:	8b 95 a0 fe ff ff    	mov    -0x160(%ebp),%edx
    7d21:	8b 40 0c             	mov    0xc(%eax),%eax
    7d24:	50                   	push   %eax
    7d25:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
    7d2b:	52                   	push   %edx
    7d2c:	50                   	push   %eax
    7d2d:	68 0b 04 00 00       	push   $0x40b
    7d32:	53                   	push   %ebx
    7d33:	57                   	push   %edi
    7d34:	e8 d7 0f 00 00       	call   8d10 <async_forward_slow@plt>
    7d39:	83 c4 24             	add    $0x24,%esp
    7d3c:	53                   	push   %ebx
    7d3d:	e8 4e 11 00 00       	call   8e90 <async_exchange_end@plt>
    7d42:	58                   	pop    %eax
    7d43:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    7d49:	50                   	push   %eax
    7d4a:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    7d50:	ff 50 10             	call   *0x10(%eax)
    7d53:	83 c4 10             	add    $0x10,%esp
    7d56:	e9 6d f4 ff ff       	jmp    71c8 <vfs_connection+0x18>
    7d5b:	50                   	push   %eax
    7d5c:	50                   	push   %eax
    7d5d:	6a ff                	push   $0xffffffff
    7d5f:	57                   	push   %edi
    7d60:	e8 bb 10 00 00       	call   8e20 <async_answer_0@plt>
    7d65:	83 c4 10             	add    $0x10,%esp
    7d68:	e9 5b f4 ff ff       	jmp    71c8 <vfs_connection+0x18>
    7d6d:	83 ec 0c             	sub    $0xc,%esp
    7d70:	83 cb ff             	or     $0xffffffff,%ebx
    7d73:	56                   	push   %esi
    7d74:	e8 77 0f 00 00       	call   8cf0 <async_hangup@plt>
    7d79:	83 c4 10             	add    $0x10,%esp
    7d7c:	e9 0b ff ff ff       	jmp    7c8c <vfs_connection+0xadc>
    7d81:	50                   	push   %eax
    7d82:	8d 85 e0 fe ff ff    	lea    -0x120(%ebp),%eax
    7d88:	6a 18                	push   $0x18
    7d8a:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%ebp)
    7d90:	6a 00                	push   $0x0
    7d92:	50                   	push   %eax
    7d93:	e8 d8 11 00 00       	call   8f70 <memset@plt>
    7d98:	8b 43 40             	mov    0x40(%ebx),%eax
    7d9b:	83 c4 10             	add    $0x10,%esp
    7d9e:	85 c0                	test   %eax,%eax
    7da0:	74 17                	je     7db9 <vfs_connection+0xc09>
    7da2:	8d 95 e4 fe ff ff    	lea    -0x11c(%ebp),%edx
    7da8:	51                   	push   %ecx
    7da9:	51                   	push   %ecx
    7daa:	52                   	push   %edx
    7dab:	56                   	push   %esi
    7dac:	ff d0                	call   *%eax
    7dae:	83 c4 10             	add    $0x10,%esp
    7db1:	85 c0                	test   %eax,%eax
    7db3:	0f 85 7a fd ff ff    	jne    7b33 <vfs_connection+0x983>
    7db9:	8b 43 44             	mov    0x44(%ebx),%eax
    7dbc:	85 c0                	test   %eax,%eax
    7dbe:	74 17                	je     7dd7 <vfs_connection+0xc27>
    7dc0:	52                   	push   %edx
    7dc1:	52                   	push   %edx
    7dc2:	8d 95 e8 fe ff ff    	lea    -0x118(%ebp),%edx
    7dc8:	52                   	push   %edx
    7dc9:	56                   	push   %esi
    7dca:	ff d0                	call   *%eax
    7dcc:	83 c4 10             	add    $0x10,%esp
    7dcf:	85 c0                	test   %eax,%eax
    7dd1:	0f 85 5c fd ff ff    	jne    7b33 <vfs_connection+0x983>
    7dd7:	8b 43 48             	mov    0x48(%ebx),%eax
    7dda:	85 c0                	test   %eax,%eax
    7ddc:	74 17                	je     7df5 <vfs_connection+0xc45>
    7dde:	52                   	push   %edx
    7ddf:	52                   	push   %edx
    7de0:	8d 95 f0 fe ff ff    	lea    -0x110(%ebp),%edx
    7de6:	52                   	push   %edx
    7de7:	56                   	push   %esi
    7de8:	ff d0                	call   *%eax
    7dea:	83 c4 10             	add    $0x10,%esp
    7ded:	85 c0                	test   %eax,%eax
    7def:	0f 85 3e fd ff ff    	jne    7b33 <vfs_connection+0x983>
    7df5:	83 ec 0c             	sub    $0xc,%esp
    7df8:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    7dfe:	50                   	push   %eax
    7dff:	ff 53 10             	call   *0x10(%ebx)
    7e02:	83 c4 0c             	add    $0xc,%esp
    7e05:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
    7e0b:	6a 18                	push   $0x18
    7e0d:	50                   	push   %eax
    7e0e:	8b 8d b4 fe ff ff    	mov    -0x14c(%ebp),%ecx
    7e14:	51                   	push   %ecx
    7e15:	e8 86 0f 00 00       	call   8da0 <async_data_read_finalize@plt>
    7e1a:	5b                   	pop    %ebx
    7e1b:	5e                   	pop    %esi
    7e1c:	6a 00                	push   $0x0
    7e1e:	57                   	push   %edi
    7e1f:	e8 fc 0f 00 00       	call   8e20 <async_answer_0@plt>
    7e24:	83 c4 10             	add    $0x10,%esp
    7e27:	e9 9c f3 ff ff       	jmp    71c8 <vfs_connection+0x18>
    7e2c:	83 c8 ff             	or     $0xffffffff,%eax
    7e2f:	e9 6c fb ff ff       	jmp    79a0 <vfs_connection+0x7f0>
    7e34:	8b bd 80 fe ff ff    	mov    -0x180(%ebp),%edi
    7e3a:	89 c3                	mov    %eax,%ebx
    7e3c:	50                   	push   %eax
    7e3d:	50                   	push   %eax
    7e3e:	53                   	push   %ebx
    7e3f:	57                   	push   %edi
    7e40:	e8 db 0f 00 00       	call   8e20 <async_answer_0@plt>
    7e45:	83 c4 10             	add    $0x10,%esp
    7e48:	e9 7d fe ff ff       	jmp    7cca <vfs_connection+0xb1a>
    7e4d:	83 ec 0c             	sub    $0xc,%esp
    7e50:	53                   	push   %ebx
    7e51:	e8 3a 10 00 00       	call   8e90 <async_exchange_end@plt>
    7e56:	89 34 24             	mov    %esi,(%esp)
    7e59:	e8 92 0e 00 00       	call   8cf0 <async_hangup@plt>
    7e5e:	58                   	pop    %eax
    7e5f:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    7e65:	8b 95 b8 fe ff ff    	mov    -0x148(%ebp),%edx
    7e6b:	52                   	push   %edx
    7e6c:	ff 50 10             	call   *0x10(%eax)
    7e6f:	e8 ec 0e 00 00       	call   8d60 <__errno@plt>
    7e74:	59                   	pop    %ecx
    7e75:	89 c3                	mov    %eax,%ebx
    7e77:	8b 30                	mov    (%eax),%esi
    7e79:	56                   	push   %esi
    7e7a:	e8 21 11 00 00       	call   8fa0 <async_data_write_void@plt>
    7e7f:	8b 0b                	mov    (%ebx),%ecx
    7e81:	58                   	pop    %eax
    7e82:	5a                   	pop    %edx
    7e83:	51                   	push   %ecx
    7e84:	57                   	push   %edi
    7e85:	e8 96 0f 00 00       	call   8e20 <async_answer_0@plt>
    7e8a:	83 c4 10             	add    $0x10,%esp
    7e8d:	e9 36 f3 ff ff       	jmp    71c8 <vfs_connection+0x18>
    7e92:	50                   	push   %eax
    7e93:	50                   	push   %eax
    7e94:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    7e9a:	89 bd 94 fe ff ff    	mov    %edi,-0x16c(%ebp)
    7ea0:	50                   	push   %eax
    7ea1:	8d 85 af fe ff ff    	lea    -0x151(%ebp),%eax
    7ea7:	50                   	push   %eax
    7ea8:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    7eae:	8b bd 80 fe ff ff    	mov    -0x180(%ebp),%edi
    7eb4:	ff 50 24             	call   *0x24(%eax)
    7eb7:	83 c4 10             	add    $0x10,%esp
    7eba:	89 c3                	mov    %eax,%ebx
    7ebc:	85 c0                	test   %eax,%eax
    7ebe:	0f 85 78 ff ff ff    	jne    7e3c <vfs_connection+0xc8c>
    7ec4:	80 bd af fe ff ff 00 	cmpb   $0x0,-0x151(%ebp)
    7ecb:	0f 85 66 f5 ff ff    	jne    7437 <vfs_connection+0x287>
    7ed1:	f6 85 98 fe ff ff 60 	testb  $0x60,-0x168(%ebp)
    7ed8:	74 59                	je     7f33 <vfs_connection+0xd83>
    7eda:	83 ec 0c             	sub    $0xc,%esp
    7edd:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    7ee3:	50                   	push   %eax
    7ee4:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    7eea:	ff 50 34             	call   *0x34(%eax)
    7eed:	83 c4 10             	add    $0x10,%esp
    7ef0:	8b 0d 0c af 00 00    	mov    0xaf0c,%ecx
    7ef6:	84 c0                	test   %al,%al
    7ef8:	8b 95 94 fe ff ff    	mov    -0x16c(%ebp),%edx
    7efe:	75 25                	jne    7f25 <vfs_connection+0xd75>
    7f00:	e9 0c 03 00 00       	jmp    8211 <vfs_connection+0x1061>
    7f05:	8d 76 00             	lea    0x0(%esi),%esi
    7f08:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    7f0e:	0f 84 a6 fd ff ff    	je     7cba <vfs_connection+0xb0a>
    7f14:	43                   	inc    %ebx
    7f15:	46                   	inc    %esi
    7f16:	39 f2                	cmp    %esi,%edx
    7f18:	88 84 1d df fe ff ff 	mov    %al,-0x121(%ebp,%ebx,1)
    7f1f:	0f 82 72 03 00 00    	jb     8297 <vfs_connection+0x10e7>
    7f25:	89 f0                	mov    %esi,%eax
    7f27:	25 ff ff 01 00       	and    $0x1ffff,%eax
    7f2c:	8a 04 01             	mov    (%ecx,%eax,1),%al
    7f2f:	3c 2f                	cmp    $0x2f,%al
    7f31:	75 d5                	jne    7f08 <vfs_connection+0xd58>
    7f33:	50                   	push   %eax
    7f34:	50                   	push   %eax
    7f35:	6a ff                	push   $0xffffffff
    7f37:	57                   	push   %edi
    7f38:	e8 e3 0e 00 00       	call   8e20 <async_answer_0@plt>
    7f3d:	83 c4 10             	add    $0x10,%esp
    7f40:	e9 85 fd ff ff       	jmp    7cca <vfs_connection+0xb1a>
    7f45:	89 fa                	mov    %edi,%edx
    7f47:	89 9d 94 fe ff ff    	mov    %ebx,-0x16c(%ebp)
    7f4d:	8b bd 80 fe ff ff    	mov    -0x180(%ebp),%edi
    7f53:	39 f2                	cmp    %esi,%edx
    7f55:	73 dc                	jae    7f33 <vfs_connection+0xd83>
    7f57:	f6 85 98 fe ff ff 60 	testb  $0x60,-0x168(%ebp)
    7f5e:	74 d3                	je     7f33 <vfs_connection+0xd83>
    7f60:	83 ec 0c             	sub    $0xc,%esp
    7f63:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    7f69:	8b 9d b0 fe ff ff    	mov    -0x150(%ebp),%ebx
    7f6f:	53                   	push   %ebx
    7f70:	ff 50 34             	call   *0x34(%eax)
    7f73:	83 c4 10             	add    $0x10,%esp
    7f76:	84 c0                	test   %al,%al
    7f78:	0f 84 93 02 00 00    	je     8211 <vfs_connection+0x1061>
    7f7e:	8b 85 98 fe ff ff    	mov    -0x168(%ebp),%eax
    7f84:	89 c6                	mov    %eax,%esi
    7f86:	83 e6 20             	and    $0x20,%esi
    7f89:	0f 84 ca 02 00 00    	je     8259 <vfs_connection+0x10a9>
    7f8f:	8b 8d 9c fe ff ff    	mov    -0x164(%ebp),%ecx
    7f95:	52                   	push   %edx
    7f96:	50                   	push   %eax
    7f97:	8d 85 b8 fe ff ff    	lea    -0x148(%ebp),%eax
    7f9d:	51                   	push   %ecx
    7f9e:	50                   	push   %eax
    7f9f:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    7fa5:	ff 50 14             	call   *0x14(%eax)
    7fa8:	83 c4 10             	add    $0x10,%esp
    7fab:	89 c3                	mov    %eax,%ebx
    7fad:	85 db                	test   %ebx,%ebx
    7faf:	0f 85 87 fe ff ff    	jne    7e3c <vfs_connection+0xc8c>
    7fb5:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
    7fbb:	85 c0                	test   %eax,%eax
    7fbd:	0f 84 bf 02 00 00    	je     8282 <vfs_connection+0x10d2>
    7fc3:	8b 8d 94 fe ff ff    	mov    -0x16c(%ebp),%ecx
    7fc9:	52                   	push   %edx
    7fca:	51                   	push   %ecx
    7fcb:	50                   	push   %eax
    7fcc:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    7fd2:	8b 95 b0 fe ff ff    	mov    -0x150(%ebp),%edx
    7fd8:	52                   	push   %edx
    7fd9:	ff 50 1c             	call   *0x1c(%eax)
    7fdc:	83 c4 10             	add    $0x10,%esp
    7fdf:	89 c3                	mov    %eax,%ebx
    7fe1:	85 c0                	test   %eax,%eax
    7fe3:	0f 84 1b 03 00 00    	je     8304 <vfs_connection+0x1154>
    7fe9:	85 f6                	test   %esi,%esi
    7feb:	0f 84 f8 02 00 00    	je     82e9 <vfs_connection+0x1139>
    7ff1:	83 ec 0c             	sub    $0xc,%esp
    7ff4:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
    7ffa:	50                   	push   %eax
    7ffb:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    8001:	ff 50 18             	call   *0x18(%eax)
    8004:	83 c4 10             	add    $0x10,%esp
    8007:	e9 30 fe ff ff       	jmp    7e3c <vfs_connection+0xc8c>
    800c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8010:	89 fa                	mov    %edi,%edx
    8012:	8b bd 80 fe ff ff    	mov    -0x180(%ebp),%edi
    8018:	39 f2                	cmp    %esi,%edx
    801a:	73 0e                	jae    802a <vfs_connection+0xe7a>
    801c:	8b 8d 94 fe ff ff    	mov    -0x16c(%ebp),%ecx
    8022:	89 8d 8c fe ff ff    	mov    %ecx,-0x174(%ebp)
    8028:	89 ca                	mov    %ecx,%edx
    802a:	83 ec 0c             	sub    $0xc,%esp
    802d:	8b 70 04             	mov    0x4(%eax),%esi
    8030:	89 95 9c fe ff ff    	mov    %edx,-0x164(%ebp)
    8036:	56                   	push   %esi
    8037:	e8 b4 0f 00 00       	call   8ff0 <async_exchange_begin@plt>
    803c:	89 c3                	mov    %eax,%ebx
    803e:	8b 85 88 fe ff ff    	mov    -0x178(%ebp),%eax
    8044:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
    804b:	50                   	push   %eax
    804c:	8b 85 98 fe ff ff    	mov    -0x168(%ebp),%eax
    8052:	8b 95 9c fe ff ff    	mov    -0x164(%ebp),%edx
    8058:	50                   	push   %eax
    8059:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
    805f:	8b 40 0c             	mov    0xc(%eax),%eax
    8062:	50                   	push   %eax
    8063:	8b 85 8c fe ff ff    	mov    -0x174(%ebp),%eax
    8069:	52                   	push   %edx
    806a:	50                   	push   %eax
    806b:	68 0b 04 00 00       	push   $0x40b
    8070:	53                   	push   %ebx
    8071:	57                   	push   %edi
    8072:	e8 99 0c 00 00       	call   8d10 <async_forward_slow@plt>
    8077:	83 c4 24             	add    $0x24,%esp
    807a:	53                   	push   %ebx
    807b:	e8 10 0e 00 00       	call   8e90 <async_exchange_end@plt>
    8080:	58                   	pop    %eax
    8081:	8b 9d a4 fe ff ff    	mov    -0x15c(%ebp),%ebx
    8087:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    808d:	50                   	push   %eax
    808e:	89 d8                	mov    %ebx,%eax
    8090:	ff 50 10             	call   *0x10(%eax)
    8093:	89 d8                	mov    %ebx,%eax
    8095:	8b 8d b4 fe ff ff    	mov    -0x14c(%ebp),%ecx
    809b:	5a                   	pop    %edx
    809c:	51                   	push   %ecx
    809d:	ff 50 10             	call   *0x10(%eax)
    80a0:	8b 85 a0 fe ff ff    	mov    -0x160(%ebp),%eax
    80a6:	83 c4 10             	add    $0x10,%esp
    80a9:	85 c0                	test   %eax,%eax
    80ab:	0f 84 17 f1 ff ff    	je     71c8 <vfs_connection+0x18>
    80b1:	83 ec 0c             	sub    $0xc,%esp
    80b4:	50                   	push   %eax
    80b5:	89 d8                	mov    %ebx,%eax
    80b7:	ff 50 10             	call   *0x10(%eax)
    80ba:	83 c4 10             	add    $0x10,%esp
    80bd:	e9 06 f1 ff ff       	jmp    71c8 <vfs_connection+0x18>
    80c2:	50                   	push   %eax
    80c3:	50                   	push   %eax
    80c4:	6a f7                	push   $0xfffffff7
    80c6:	57                   	push   %edi
    80c7:	e8 54 0d 00 00       	call   8e20 <async_answer_0@plt>
    80cc:	83 c4 10             	add    $0x10,%esp
    80cf:	e9 f6 fb ff ff       	jmp    7cca <vfs_connection+0xb1a>
    80d4:	83 ec 0c             	sub    $0xc,%esp
    80d7:	8b b5 a4 fe ff ff    	mov    -0x15c(%ebp),%esi
    80dd:	8b 95 b0 fe ff ff    	mov    -0x150(%ebp),%edx
    80e3:	52                   	push   %edx
    80e4:	ff 56 30             	call   *0x30(%esi)
    80e7:	83 c4 0c             	add    $0xc,%esp
    80ea:	89 c3                	mov    %eax,%ebx
    80ec:	8d 85 e0 fe ff ff    	lea    -0x120(%ebp),%eax
    80f2:	8b 8d b0 fe ff ff    	mov    -0x150(%ebp),%ecx
    80f8:	50                   	push   %eax
    80f9:	8b 85 a0 fe ff ff    	mov    -0x160(%ebp),%eax
    80ff:	51                   	push   %ecx
    8100:	50                   	push   %eax
    8101:	ff 56 20             	call   *0x20(%esi)
    8104:	83 c4 10             	add    $0x10,%esp
    8107:	85 c0                	test   %eax,%eax
    8109:	75 5b                	jne    8166 <vfs_connection+0xfb6>
    810b:	83 ec 0c             	sub    $0xc,%esp
    810e:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    8114:	89 b5 a4 fe ff ff    	mov    %esi,-0x15c(%ebp)
    811a:	50                   	push   %eax
    811b:	ff 56 2c             	call   *0x2c(%esi)
    811e:	89 c6                	mov    %eax,%esi
    8120:	58                   	pop    %eax
    8121:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    8127:	89 95 98 fe ff ff    	mov    %edx,-0x168(%ebp)
    812d:	50                   	push   %eax
    812e:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    8134:	ff 50 28             	call   *0x28(%eax)
    8137:	83 c4 0c             	add    $0xc,%esp
    813a:	8b 95 98 fe ff ff    	mov    -0x168(%ebp),%edx
    8140:	53                   	push   %ebx
    8141:	52                   	push   %edx
    8142:	56                   	push   %esi
    8143:	90                   	nop
    8144:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8148:	50                   	push   %eax
    8149:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
    814f:	50                   	push   %eax
    8150:	0f bf 85 90 fe ff ff 	movswl -0x170(%ebp),%eax
    8157:	50                   	push   %eax
    8158:	57                   	push   %edi
    8159:	e8 c2 0d 00 00       	call   8f20 <async_answer_5@plt>
    815e:	83 c4 20             	add    $0x20,%esp
    8161:	e9 64 fb ff ff       	jmp    7cca <vfs_connection+0xb1a>
    8166:	56                   	push   %esi
    8167:	56                   	push   %esi
    8168:	50                   	push   %eax
    8169:	57                   	push   %edi
    816a:	e8 b1 0c 00 00       	call   8e20 <async_answer_0@plt>
    816f:	83 c4 10             	add    $0x10,%esp
    8172:	e9 53 fb ff ff       	jmp    7cca <vfs_connection+0xb1a>
    8177:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    817d:	f7 85 98 fe ff ff 00 	testl  $0x100,-0x168(%ebp)
    8184:	01 00 00 
    8187:	75 4a                	jne    81d3 <vfs_connection+0x1023>
    8189:	83 ec 0c             	sub    $0xc,%esp
    818c:	50                   	push   %eax
    818d:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    8193:	ff 50 2c             	call   *0x2c(%eax)
    8196:	89 c3                	mov    %eax,%ebx
    8198:	58                   	pop    %eax
    8199:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    819f:	89 d6                	mov    %edx,%esi
    81a1:	50                   	push   %eax
    81a2:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    81a8:	ff 50 30             	call   *0x30(%eax)
    81ab:	89 85 98 fe ff ff    	mov    %eax,-0x168(%ebp)
    81b1:	58                   	pop    %eax
    81b2:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    81b8:	50                   	push   %eax
    81b9:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    81bf:	ff 50 28             	call   *0x28(%eax)
    81c2:	83 c4 0c             	add    $0xc,%esp
    81c5:	8b 95 98 fe ff ff    	mov    -0x168(%ebp),%edx
    81cb:	52                   	push   %edx
    81cc:	56                   	push   %esi
    81cd:	53                   	push   %ebx
    81ce:	e9 75 ff ff ff       	jmp    8148 <vfs_connection+0xf98>
    81d3:	83 ec 0c             	sub    $0xc,%esp
    81d6:	50                   	push   %eax
    81d7:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    81dd:	ff 50 0c             	call   *0xc(%eax)
    81e0:	83 c4 10             	add    $0x10,%esp
    81e3:	85 c0                	test   %eax,%eax
    81e5:	0f 85 7b ff ff ff    	jne    8166 <vfs_connection+0xfb6>
    81eb:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    81f1:	eb 96                	jmp    8189 <vfs_connection+0xfd9>
    81f3:	83 ec 0c             	sub    $0xc,%esp
    81f6:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    81fc:	8b b5 b0 fe ff ff    	mov    -0x150(%ebp),%esi
    8202:	56                   	push   %esi
    8203:	ff 50 38             	call   *0x38(%eax)
    8206:	83 c4 10             	add    $0x10,%esp
    8209:	84 c0                	test   %al,%al
    820b:	0f 84 6b f2 ff ff    	je     747c <vfs_connection+0x2cc>
    8211:	53                   	push   %ebx
    8212:	53                   	push   %ebx
    8213:	68 fe fe ff ff       	push   $0xfffffefe
    8218:	57                   	push   %edi
    8219:	e8 02 0c 00 00       	call   8e20 <async_answer_0@plt>
    821e:	83 c4 10             	add    $0x10,%esp
    8221:	e9 a4 fa ff ff       	jmp    7cca <vfs_connection+0xb1a>
    8226:	83 ec 0c             	sub    $0xc,%esp
    8229:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    822f:	50                   	push   %eax
    8230:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    8236:	ff 50 34             	call   *0x34(%eax)
    8239:	83 c4 10             	add    $0x10,%esp
    823c:	84 c0                	test   %al,%al
    823e:	0f 84 2b f2 ff ff    	je     746f <vfs_connection+0x2bf>
    8244:	50                   	push   %eax
    8245:	50                   	push   %eax
    8246:	68 ff fe ff ff       	push   $0xfffffeff
    824b:	57                   	push   %edi
    824c:	e8 cf 0b 00 00       	call   8e20 <async_answer_0@plt>
    8251:	83 c4 10             	add    $0x10,%esp
    8254:	e9 71 fa ff ff       	jmp    7cca <vfs_connection+0xb1a>
    8259:	8b 85 88 fe ff ff    	mov    -0x178(%ebp),%eax
    825f:	53                   	push   %ebx
    8260:	50                   	push   %eax
    8261:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
    8267:	50                   	push   %eax
    8268:	8d 85 b8 fe ff ff    	lea    -0x148(%ebp),%eax
    826e:	50                   	push   %eax
    826f:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    8275:	ff 50 08             	call   *0x8(%eax)
    8278:	83 c4 10             	add    $0x10,%esp
    827b:	89 c3                	mov    %eax,%ebx
    827d:	e9 2b fd ff ff       	jmp    7fad <vfs_connection+0xdfd>
    8282:	50                   	push   %eax
    8283:	50                   	push   %eax
    8284:	68 fd fe ff ff       	push   $0xfffffefd
    8289:	57                   	push   %edi
    828a:	e8 91 0b 00 00       	call   8e20 <async_answer_0@plt>
    828f:	83 c4 10             	add    $0x10,%esp
    8292:	e9 33 fa ff ff       	jmp    7cca <vfs_connection+0xb1a>
    8297:	8b 85 98 fe ff ff    	mov    -0x168(%ebp),%eax
    829d:	c6 84 1d e0 fe ff ff 	movb   $0x0,-0x120(%ebp,%ebx,1)
    82a4:	00 
    82a5:	89 c6                	mov    %eax,%esi
    82a7:	83 e6 20             	and    $0x20,%esi
    82aa:	74 7f                	je     832b <vfs_connection+0x117b>
    82ac:	8b 8d 9c fe ff ff    	mov    -0x164(%ebp),%ecx
    82b2:	52                   	push   %edx
    82b3:	50                   	push   %eax
    82b4:	8d 85 b8 fe ff ff    	lea    -0x148(%ebp),%eax
    82ba:	51                   	push   %ecx
    82bb:	50                   	push   %eax
    82bc:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    82c2:	ff 50 14             	call   *0x14(%eax)
    82c5:	83 c4 10             	add    $0x10,%esp
    82c8:	89 c3                	mov    %eax,%ebx
    82ca:	85 db                	test   %ebx,%ebx
    82cc:	0f 85 6a fb ff ff    	jne    7e3c <vfs_connection+0xc8c>
    82d2:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
    82d8:	85 c0                	test   %eax,%eax
    82da:	74 a6                	je     8282 <vfs_connection+0x10d2>
    82dc:	8d 95 e0 fe ff ff    	lea    -0x120(%ebp),%edx
    82e2:	51                   	push   %ecx
    82e3:	52                   	push   %edx
    82e4:	e9 e2 fc ff ff       	jmp    7fcb <vfs_connection+0xe1b>
    82e9:	83 ec 0c             	sub    $0xc,%esp
    82ec:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
    82f2:	50                   	push   %eax
    82f3:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    82f9:	ff 50 10             	call   *0x10(%eax)
    82fc:	83 c4 10             	add    $0x10,%esp
    82ff:	e9 38 fb ff ff       	jmp    7e3c <vfs_connection+0xc8c>
    8304:	83 ec 0c             	sub    $0xc,%esp
    8307:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
    830d:	50                   	push   %eax
    830e:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    8314:	ff 50 10             	call   *0x10(%eax)
    8317:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
    831d:	89 85 b0 fe ff ff    	mov    %eax,-0x150(%ebp)
    8323:	83 c4 10             	add    $0x10,%esp
    8326:	e9 52 fe ff ff       	jmp    817d <vfs_connection+0xfcd>
    832b:	8b 85 88 fe ff ff    	mov    -0x178(%ebp),%eax
    8331:	53                   	push   %ebx
    8332:	50                   	push   %eax
    8333:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
    8339:	50                   	push   %eax
    833a:	8d 85 b8 fe ff ff    	lea    -0x148(%ebp),%eax
    8340:	50                   	push   %eax
    8341:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
    8347:	ff 50 08             	call   *0x8(%eax)
    834a:	83 c4 10             	add    $0x10,%esp
    834d:	89 c3                	mov    %eax,%ebx
    834f:	e9 76 ff ff ff       	jmp    82ca <vfs_connection+0x111a>
    8354:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    835a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00008360 <fs_register>:
    8360:	55                   	push   %ebp
    8361:	89 e5                	mov    %esp,%ebp
    8363:	56                   	push   %esi
    8364:	53                   	push   %ebx
    8365:	83 ec 4c             	sub    $0x4c,%esp
    8368:	8b 45 08             	mov    0x8(%ebp),%eax
    836b:	50                   	push   %eax
    836c:	e8 7f 0c 00 00       	call   8ff0 <async_exchange_begin@plt>
    8371:	83 c4 0c             	add    $0xc,%esp
    8374:	89 c3                	mov    %eax,%ebx
    8376:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    8379:	50                   	push   %eax
    837a:	6a 00                	push   $0x0
    837c:	6a 00                	push   $0x0
    837e:	6a 00                	push   $0x0
    8380:	6a 00                	push   $0x0
    8382:	68 0b 04 00 00       	push   $0x40b
    8387:	53                   	push   %ebx
    8388:	e8 a3 0a 00 00       	call   8e30 <async_send_fast@plt>
    838d:	83 c4 1c             	add    $0x1c,%esp
    8390:	89 c6                	mov    %eax,%esi
    8392:	8b 45 0c             	mov    0xc(%ebp),%eax
    8395:	6a 20                	push   $0x20
    8397:	50                   	push   %eax
    8398:	53                   	push   %ebx
    8399:	e8 a2 09 00 00       	call   8d40 <async_data_write_start@plt>
    839e:	83 c4 10             	add    $0x10,%esp
    83a1:	85 c0                	test   %eax,%eax
    83a3:	0f 85 af 00 00 00    	jne    8458 <fs_register+0xf8>
    83a9:	8b 45 10             	mov    0x10(%ebp),%eax
    83ac:	a3 04 af 00 00       	mov    %eax,0xaf04
    83b1:	8b 45 14             	mov    0x14(%ebp),%eax
    83b4:	a3 00 af 00 00       	mov    %eax,0xaf00
    83b9:	50                   	push   %eax
    83ba:	8d 45 d0             	lea    -0x30(%ebp),%eax
    83bd:	50                   	push   %eax
    83be:	6a 00                	push   $0x0
    83c0:	68 b0 71 00 00       	push   $0x71b0
    83c5:	6a 00                	push   $0x0
    83c7:	6a 00                	push   $0x0
    83c9:	68 66 37 cf c9       	push   $0xc9cf3766
    83ce:	53                   	push   %ebx
    83cf:	e8 6c 0b 00 00       	call   8f40 <async_create_callback_port@plt>
    83d4:	83 c4 14             	add    $0x14,%esp
    83d7:	68 0c af 00 00       	push   $0xaf0c
    83dc:	6a 00                	push   $0x0
    83de:	6a 00                	push   $0x0
    83e0:	68 00 00 02 00       	push   $0x20000
    83e5:	53                   	push   %ebx
    83e6:	e8 c5 09 00 00       	call   8db0 <async_share_in_start@plt>
    83eb:	83 c4 20             	add    $0x20,%esp
    83ee:	83 3d 0c af 00 00 ff 	cmpl   $0xffffffff,0xaf0c
    83f5:	0f 84 7e 00 00 00    	je     8479 <fs_register+0x119>
    83fb:	83 ec 0c             	sub    $0xc,%esp
    83fe:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    8401:	53                   	push   %ebx
    8402:	e8 89 0a 00 00       	call   8e90 <async_exchange_end@plt>
    8407:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    840a:	83 c4 10             	add    $0x10,%esp
    840d:	85 c0                	test   %eax,%eax
    840f:	75 2f                	jne    8440 <fs_register+0xe0>
    8411:	50                   	push   %eax
    8412:	50                   	push   %eax
    8413:	6a 00                	push   $0x0
    8415:	56                   	push   %esi
    8416:	e8 05 09 00 00       	call   8d20 <async_wait_for@plt>
    841b:	5a                   	pop    %edx
    841c:	8b 45 d8             	mov    -0x28(%ebp),%eax
    841f:	59                   	pop    %ecx
    8420:	6a 00                	push   $0x0
    8422:	68 b0 71 00 00       	push   $0x71b0
    8427:	a3 08 af 00 00       	mov    %eax,0xaf08
    842c:	e8 4f 0c 00 00       	call   9080 <async_set_fallback_port_handler@plt>
    8431:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    8434:	83 c4 10             	add    $0x10,%esp
    8437:	8d 65 f8             	lea    -0x8(%ebp),%esp
    843a:	5b                   	pop    %ebx
    843b:	5e                   	pop    %esi
    843c:	5d                   	pop    %ebp
    843d:	c3                   	ret    
    843e:	66 90                	xchg   %ax,%ax
    8440:	83 ec 0c             	sub    $0xc,%esp
    8443:	56                   	push   %esi
    8444:	e8 07 0c 00 00       	call   9050 <async_forget@plt>
    8449:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    844c:	83 c4 10             	add    $0x10,%esp
    844f:	8d 65 f8             	lea    -0x8(%ebp),%esp
    8452:	5b                   	pop    %ebx
    8453:	5e                   	pop    %esi
    8454:	5d                   	pop    %ebp
    8455:	c3                   	ret    
    8456:	66 90                	xchg   %ax,%ax
    8458:	83 ec 0c             	sub    $0xc,%esp
    845b:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    845e:	53                   	push   %ebx
    845f:	e8 2c 0a 00 00       	call   8e90 <async_exchange_end@plt>
    8464:	89 34 24             	mov    %esi,(%esp)
    8467:	e8 e4 0b 00 00       	call   9050 <async_forget@plt>
    846c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    846f:	83 c4 10             	add    $0x10,%esp
    8472:	8d 65 f8             	lea    -0x8(%ebp),%esp
    8475:	5b                   	pop    %ebx
    8476:	5e                   	pop    %esi
    8477:	5d                   	pop    %ebp
    8478:	c3                   	ret    
    8479:	83 ec 0c             	sub    $0xc,%esp
    847c:	53                   	push   %ebx
    847d:	e8 0e 0a 00 00       	call   8e90 <async_exchange_end@plt>
    8482:	89 34 24             	mov    %esi,(%esp)
    8485:	e8 c6 0b 00 00       	call   9050 <async_forget@plt>
    848a:	83 c4 10             	add    $0x10,%esp
    848d:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    8492:	eb a3                	jmp    8437 <fs_register+0xd7>
    8494:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    849a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000084a0 <fs_node_initialize>:
    84a0:	55                   	push   %ebp
    84a1:	89 e5                	mov    %esp,%ebp
    84a3:	83 ec 0c             	sub    $0xc,%esp
    84a6:	8b 45 08             	mov    0x8(%ebp),%eax
    84a9:	6a 14                	push   $0x14
    84ab:	6a 00                	push   $0x0
    84ad:	50                   	push   %eax
    84ae:	e8 bd 0a 00 00       	call   8f70 <memset@plt>
    84b3:	83 c4 10             	add    $0x10,%esp
    84b6:	c9                   	leave  
    84b7:	c3                   	ret    
    84b8:	90                   	nop
    84b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000084c0 <fs_instance_create>:
    84c0:	55                   	push   %ebp
    84c1:	89 e5                	mov    %esp,%ebp
    84c3:	57                   	push   %edi
    84c4:	56                   	push   %esi
    84c5:	53                   	push   %ebx
    84c6:	83 ec 18             	sub    $0x18,%esp
    84c9:	8b 5d 08             	mov    0x8(%ebp),%ebx
    84cc:	6a 10                	push   $0x10
    84ce:	e8 1d 09 00 00       	call   8df0 <malloc@plt>
    84d3:	83 c4 10             	add    $0x10,%esp
    84d6:	85 c0                	test   %eax,%eax
    84d8:	0f 84 d1 00 00 00    	je     85af <fs_instance_create+0xef>
    84de:	89 c6                	mov    %eax,%esi
    84e0:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
    84e7:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
    84ee:	89 18                	mov    %ebx,(%eax)
    84f0:	83 ec 0c             	sub    $0xc,%esp
    84f3:	8d 78 04             	lea    0x4(%eax),%edi
    84f6:	8b 45 0c             	mov    0xc(%ebp),%eax
    84f9:	89 46 0c             	mov    %eax,0xc(%esi)
    84fc:	68 b0 ad 00 00       	push   $0xadb0
    8501:	e8 ba 0b 00 00       	call   90c0 <fibril_mutex_lock@plt>
    8506:	8b 15 ac ad 00 00    	mov    0xadac,%edx
    850c:	83 c4 10             	add    $0x10,%esp
    850f:	8d 4a fc             	lea    -0x4(%edx),%ecx
    8512:	81 fa a8 ad 00 00    	cmp    $0xada8,%edx
    8518:	74 23                	je     853d <fs_instance_create+0x7d>
    851a:	39 5a fc             	cmp    %ebx,-0x4(%edx)
    851d:	74 51                	je     8570 <fs_instance_create+0xb0>
    851f:	73 0e                	jae    852f <fs_instance_create+0x6f>
    8521:	eb 75                	jmp    8598 <fs_instance_create+0xd8>
    8523:	90                   	nop
    8524:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8528:	3b 5a fc             	cmp    -0x4(%edx),%ebx
    852b:	74 43                	je     8570 <fs_instance_create+0xb0>
    852d:	77 69                	ja     8598 <fs_instance_create+0xd8>
    852f:	8b 52 04             	mov    0x4(%edx),%edx
    8532:	81 fa a8 ad 00 00    	cmp    $0xada8,%edx
    8538:	8d 4a fc             	lea    -0x4(%edx),%ecx
    853b:	75 eb                	jne    8528 <fs_instance_create+0x68>
    853d:	a1 a8 ad 00 00       	mov    0xada8,%eax
    8542:	c7 46 08 a8 ad 00 00 	movl   $0xada8,0x8(%esi)
    8549:	89 46 04             	mov    %eax,0x4(%esi)
    854c:	89 3d a8 ad 00 00    	mov    %edi,0xada8
    8552:	89 78 04             	mov    %edi,0x4(%eax)
    8555:	83 ec 0c             	sub    $0xc,%esp
    8558:	68 b0 ad 00 00       	push   $0xadb0
    855d:	e8 7e 09 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    8562:	83 c4 10             	add    $0x10,%esp
    8565:	31 c0                	xor    %eax,%eax
    8567:	8d 65 f4             	lea    -0xc(%ebp),%esp
    856a:	5b                   	pop    %ebx
    856b:	5e                   	pop    %esi
    856c:	5f                   	pop    %edi
    856d:	5d                   	pop    %ebp
    856e:	c3                   	ret    
    856f:	90                   	nop
    8570:	83 ec 0c             	sub    $0xc,%esp
    8573:	68 b0 ad 00 00       	push   $0xadb0
    8578:	e8 63 09 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    857d:	89 34 24             	mov    %esi,(%esp)
    8580:	e8 2b 0b 00 00       	call   90b0 <free@plt>
    8585:	83 c4 10             	add    $0x10,%esp
    8588:	8d 65 f4             	lea    -0xc(%ebp),%esp
    858b:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax
    8590:	5b                   	pop    %ebx
    8591:	5e                   	pop    %esi
    8592:	5f                   	pop    %edi
    8593:	5d                   	pop    %ebp
    8594:	c3                   	ret    
    8595:	8d 76 00             	lea    0x0(%esi),%esi
    8598:	8d 41 04             	lea    0x4(%ecx),%eax
    859b:	89 46 08             	mov    %eax,0x8(%esi)
    859e:	8b 41 04             	mov    0x4(%ecx),%eax
    85a1:	89 46 04             	mov    %eax,0x4(%esi)
    85a4:	8b 41 04             	mov    0x4(%ecx),%eax
    85a7:	89 78 04             	mov    %edi,0x4(%eax)
    85aa:	89 79 04             	mov    %edi,0x4(%ecx)
    85ad:	eb a6                	jmp    8555 <fs_instance_create+0x95>
    85af:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    85b4:	eb b1                	jmp    8567 <fs_instance_create+0xa7>
    85b6:	8d 76 00             	lea    0x0(%esi),%esi
    85b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000085c0 <fs_instance_get>:
    85c0:	55                   	push   %ebp
    85c1:	89 e5                	mov    %esp,%ebp
    85c3:	53                   	push   %ebx
    85c4:	83 ec 10             	sub    $0x10,%esp
    85c7:	8b 5d 08             	mov    0x8(%ebp),%ebx
    85ca:	68 b0 ad 00 00       	push   $0xadb0
    85cf:	e8 ec 0a 00 00       	call   90c0 <fibril_mutex_lock@plt>
    85d4:	a1 ac ad 00 00       	mov    0xadac,%eax
    85d9:	83 c4 10             	add    $0x10,%esp
    85dc:	3d a8 ad 00 00       	cmp    $0xada8,%eax
    85e1:	74 1f                	je     8602 <fs_instance_get+0x42>
    85e3:	8d 50 fc             	lea    -0x4(%eax),%edx
    85e6:	39 58 fc             	cmp    %ebx,-0x4(%eax)
    85e9:	75 0a                	jne    85f5 <fs_instance_get+0x35>
    85eb:	eb 33                	jmp    8620 <fs_instance_get+0x60>
    85ed:	8d 76 00             	lea    0x0(%esi),%esi
    85f0:	39 58 fc             	cmp    %ebx,-0x4(%eax)
    85f3:	74 2b                	je     8620 <fs_instance_get+0x60>
    85f5:	8b 40 04             	mov    0x4(%eax),%eax
    85f8:	3d a8 ad 00 00       	cmp    $0xada8,%eax
    85fd:	8d 50 fc             	lea    -0x4(%eax),%edx
    8600:	75 ee                	jne    85f0 <fs_instance_get+0x30>
    8602:	83 ec 0c             	sub    $0xc,%esp
    8605:	68 b0 ad 00 00       	push   $0xadb0
    860a:	e8 d1 08 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    860f:	83 c4 10             	add    $0x10,%esp
    8612:	83 c8 ff             	or     $0xffffffff,%eax
    8615:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    8618:	c9                   	leave  
    8619:	c3                   	ret    
    861a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8620:	8b 45 0c             	mov    0xc(%ebp),%eax
    8623:	83 ec 0c             	sub    $0xc,%esp
    8626:	8b 52 0c             	mov    0xc(%edx),%edx
    8629:	89 10                	mov    %edx,(%eax)
    862b:	68 b0 ad 00 00       	push   $0xadb0
    8630:	e8 ab 08 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    8635:	83 c4 10             	add    $0x10,%esp
    8638:	31 c0                	xor    %eax,%eax
    863a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    863d:	c9                   	leave  
    863e:	c3                   	ret    
    863f:	90                   	nop

00008640 <fs_instance_destroy>:
    8640:	55                   	push   %ebp
    8641:	89 e5                	mov    %esp,%ebp
    8643:	56                   	push   %esi
    8644:	53                   	push   %ebx
    8645:	83 ec 0c             	sub    $0xc,%esp
    8648:	8b 75 08             	mov    0x8(%ebp),%esi
    864b:	68 b0 ad 00 00       	push   $0xadb0
    8650:	e8 6b 0a 00 00       	call   90c0 <fibril_mutex_lock@plt>
    8655:	a1 ac ad 00 00       	mov    0xadac,%eax
    865a:	83 c4 10             	add    $0x10,%esp
    865d:	3d a8 ad 00 00       	cmp    $0xada8,%eax
    8662:	74 1e                	je     8682 <fs_instance_destroy+0x42>
    8664:	8d 58 fc             	lea    -0x4(%eax),%ebx
    8667:	39 70 fc             	cmp    %esi,-0x4(%eax)
    866a:	75 09                	jne    8675 <fs_instance_destroy+0x35>
    866c:	eb 32                	jmp    86a0 <fs_instance_destroy+0x60>
    866e:	66 90                	xchg   %ax,%ax
    8670:	39 70 fc             	cmp    %esi,-0x4(%eax)
    8673:	74 2b                	je     86a0 <fs_instance_destroy+0x60>
    8675:	8b 40 04             	mov    0x4(%eax),%eax
    8678:	3d a8 ad 00 00       	cmp    $0xada8,%eax
    867d:	8d 58 fc             	lea    -0x4(%eax),%ebx
    8680:	75 ee                	jne    8670 <fs_instance_destroy+0x30>
    8682:	83 ec 0c             	sub    $0xc,%esp
    8685:	68 b0 ad 00 00       	push   $0xadb0
    868a:	e8 51 08 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    868f:	83 c4 10             	add    $0x10,%esp
    8692:	8d 65 f8             	lea    -0x8(%ebp),%esp
    8695:	83 c8 ff             	or     $0xffffffff,%eax
    8698:	5b                   	pop    %ebx
    8699:	5e                   	pop    %esi
    869a:	5d                   	pop    %ebp
    869b:	c3                   	ret    
    869c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    86a0:	8b 53 04             	mov    0x4(%ebx),%edx
    86a3:	85 d2                	test   %edx,%edx
    86a5:	74 0f                	je     86b6 <fs_instance_destroy+0x76>
    86a7:	8b 43 08             	mov    0x8(%ebx),%eax
    86aa:	85 c0                	test   %eax,%eax
    86ac:	74 08                	je     86b6 <fs_instance_destroy+0x76>
    86ae:	89 10                	mov    %edx,(%eax)
    86b0:	8b 53 04             	mov    0x4(%ebx),%edx
    86b3:	89 42 04             	mov    %eax,0x4(%edx)
    86b6:	83 ec 0c             	sub    $0xc,%esp
    86b9:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
    86c0:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
    86c7:	68 b0 ad 00 00       	push   $0xadb0
    86cc:	e8 0f 08 00 00       	call   8ee0 <fibril_mutex_unlock@plt>
    86d1:	89 1c 24             	mov    %ebx,(%esp)
    86d4:	e8 d7 09 00 00       	call   90b0 <free@plt>
    86d9:	83 c4 10             	add    $0x10,%esp
    86dc:	8d 65 f8             	lea    -0x8(%ebp),%esp
    86df:	31 c0                	xor    %eax,%eax
    86e1:	5b                   	pop    %ebx
    86e2:	5e                   	pop    %esi
    86e3:	5d                   	pop    %ebp
    86e4:	c3                   	ret    
    86e5:	66 90                	xchg   %ax,%ax
    86e7:	90                   	nop
    86e8:	6d                   	insl   (%dx),%es:(%edi)
    86e9:	66 73 3a             	data16 jae 8726 <fs_instance_destroy+0xe6>
    86ec:	20 48 65             	and    %cl,0x65(%eax)
    86ef:	6c                   	insb   (%dx),%es:(%edi)
    86f0:	65 6e                	outsb  %gs:(%esi),(%dx)
    86f2:	4f                   	dec    %edi
    86f3:	53                   	push   %ebx
    86f4:	20 4d 69             	and    %cl,0x69(%ebp)
    86f7:	6e                   	outsb  %ds:(%esi),(%dx)
    86f8:	69 78 20 66 69 6c 65 	imul   $0x656c6966,0x20(%eax),%edi
    86ff:	20 73 79             	and    %dh,0x79(%ebx)
    8702:	73 74                	jae    8778 <fs_instance_destroy+0x138>
    8704:	65 6d                	gs insl (%dx),%es:(%edi)
    8706:	20 73 65             	and    %dh,0x65(%ebx)
    8709:	72 76                	jb     8781 <fs_instance_destroy+0x141>
    870b:	65 72 0a             	gs jb  8718 <fs_instance_destroy+0xd8>
    870e:	00 00                	add    %al,(%eax)
    8710:	6d                   	insl   (%dx),%es:(%edi)
    8711:	66 73 3a             	data16 jae 874e <fs_instance_destroy+0x10e>
    8714:	20 66 61             	and    %ah,0x61(%esi)
    8717:	69 6c 65 64 20 74 6f 	imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
    871e:	20 
    871f:	63 6f 6e             	arpl   %bp,0x6e(%edi)
    8722:	6e                   	outsb  %ds:(%esi),(%dx)
    8723:	65 63 74 20 74       	arpl   %si,%gs:0x74(%eax,%eiz,1)
    8728:	6f                   	outsl  %ds:(%esi),(%dx)
    8729:	20 56 46             	and    %dl,0x46(%esi)
    872c:	53                   	push   %ebx
    872d:	0a 00                	or     (%eax),%al
    872f:	00 6d 66             	add    %ch,0x66(%ebp)
    8732:	73 3a                	jae    876e <fs_instance_destroy+0x12e>
    8734:	20 46 61             	and    %al,0x61(%esi)
    8737:	69 6c 65 64 20 67 6c 	imul   $0x6f6c6720,0x64(%ebp,%eiz,2),%ebp
    873e:	6f 
    873f:	62 61 6c             	bound  %esp,0x6c(%ecx)
    8742:	20 69 6e             	and    %ch,0x6e(%ecx)
    8745:	69 74 69 61 6c 69 7a 	imul   $0x617a696c,0x61(%ecx,%ebp,2),%esi
    874c:	61 
    874d:	74 69                	je     87b8 <fs_instance_destroy+0x178>
    874f:	6f                   	outsl  %ds:(%esi),(%dx)
    8750:	6e                   	outsb  %ds:(%esi),(%dx)
    8751:	0a 00                	or     (%eax),%al
    8753:	00 6d 66             	add    %ch,0x66(%ebp)
    8756:	73 3a                	jae    8792 <fs_instance_destroy+0x152>
    8758:	20 46 61             	and    %al,0x61(%esi)
    875b:	69 6c 65 64 20 74 6f 	imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
    8762:	20 
    8763:	72 65                	jb     87ca <fs_instance_destroy+0x18a>
    8765:	67 69 73 74 65 72 20 	imul   $0x66207265,0x74(%bp,%di),%esi
    876c:	66 
    876d:	69 6c 65 20 73 79 73 	imul   $0x74737973,0x20(%ebp,%eiz,2),%ebp
    8774:	74 
    8775:	65 6d                	gs insl (%dx),%es:(%edi)
    8777:	20 28                	and    %ch,(%eax)
    8779:	25 64 29 0a 00       	and    $0xa2964,%eax
    877e:	2d 2d 69 6e 73       	sub    $0x736e692d,%eax
    8783:	74 61                	je     87e6 <fs_instance_destroy+0x1a6>
    8785:	6e                   	outsb  %ds:(%esi),(%dx)
    8786:	63 65 00             	arpl   %sp,0x0(%ebp)
    8789:	6d                   	insl   (%dx),%es:(%edi)
    878a:	66 73 20             	data16 jae 87ad <fs_instance_destroy+0x16d>
    878d:	55                   	push   %ebp
    878e:	6e                   	outsb  %ds:(%esi),(%dx)
    878f:	72 65                	jb     87f6 <fs_instance_destroy+0x1b6>
    8791:	63 6f 67             	arpl   %bp,0x67(%edi)
    8794:	6e                   	outsb  %ds:(%esi),(%dx)
    8795:	69 7a 65 64 20 70 61 	imul   $0x61702064,0x65(%edx),%edi
    879c:	72 61                	jb     87ff <fs_instance_destroy+0x1bf>
    879e:	6d                   	insl   (%dx),%es:(%edi)
    879f:	65 74 65             	gs je  8807 <fs_instance_destroy+0x1c7>
    87a2:	72 73                	jb     8817 <fs_instance_destroy+0x1d7>
    87a4:	00 6d 66             	add    %ch,0x66(%ebp)
    87a7:	73 3a                	jae    87e3 <fs_instance_destroy+0x1a3>
    87a9:	20 41 63             	and    %al,0x63(%ecx)
    87ac:	63 65 70             	arpl   %sp,0x70(%ebp)
    87af:	74 69                	je     881a <fs_instance_destroy+0x1da>
    87b1:	6e                   	outsb  %ds:(%esi),(%dx)
    87b2:	67 20 63 6f          	and    %ah,0x6f(%bp,%di)
    87b6:	6e                   	outsb  %ds:(%esi),(%dx)
    87b7:	6e                   	outsb  %ds:(%esi),(%dx)
    87b8:	65 63 74 69 6f       	arpl   %si,%gs:0x6f(%ecx,%ebp,2)
    87bd:	6e                   	outsb  %ds:(%esi),(%dx)
    87be:	73 0a                	jae    87ca <fs_instance_destroy+0x18a>
    87c0:	00 2e                	add    %ch,(%esi)
    87c2:	2e 00 6d 66          	add    %ch,%cs:0x66(%ebp)
    87c6:	73 5f                	jae    8827 <fs_instance_destroy+0x1e7>
    87c8:	6f                   	outsl  %ds:(%esi),(%dx)
    87c9:	70 73                	jo     883e <fs_instance_destroy+0x1fe>
    87cb:	2e 63 00             	arpl   %ax,%cs:(%eax)
    87ce:	6d                   	insl   (%dx),%es:(%edi)
    87cf:	6e                   	outsb  %ds:(%esi),(%dx)
    87d0:	6f                   	outsl  %ds:(%esi),(%dx)
    87d1:	64 65 2d 3e 72 65 66 	fs gs sub $0x6665723e,%eax
    87d8:	63 6e 74             	arpl   %bp,0x74(%esi)
    87db:	20 3e                	and    %bh,(%esi)
    87dd:	20 30                	and    %dh,(%eax)
    87df:	00 63 68             	add    %ah,0x68(%ebx)
    87e2:	69 6e 6f 2d 3e 69 5f 	imul   $0x5f693e2d,0x6f(%esi),%ebp
    87e9:	6e                   	outsb  %ds:(%esi),(%dx)
    87ea:	6c                   	insb   (%dx),%es:(%edi)
    87eb:	69 6e 6b 73 20 3e 3d 	imul   $0x3d3e2073,0x6b(%esi),%ebp
    87f2:	20 31                	and    %dh,(%ecx)
    87f4:	00 77 74             	add    %dh,0x74(%edi)
    87f7:	63 61 63             	arpl   %sp,0x63(%ecx)
    87fa:	68 65 00 21 68       	push   $0x68210065
    87ff:	61                   	popa   
    8800:	73 5f                	jae    8861 <fs_instance_destroy+0x221>
    8802:	63 68 69             	arpl   %bp,0x69(%eax)
    8805:	6c                   	insb   (%dx),%es:(%edi)
    8806:	64 72 65             	fs jb  886e <fs_instance_destroy+0x22e>
    8809:	6e                   	outsb  %ds:(%esi),(%dx)
    880a:	00 90 6d 6e 6f 64    	add    %dl,0x646f6e6d(%eax)
    8810:	65 2d 3e 69 6e 73    	gs sub $0x736e693e,%eax
    8816:	74 61                	je     8879 <fs_instance_destroy+0x239>
    8818:	6e                   	outsb  %ds:(%esi),(%dx)
    8819:	63 65 2d             	arpl   %sp,0x2d(%ebp)
    881c:	3e 6f                	outsl  %ds:(%esi),(%dx)
    881e:	70 65                	jo     8885 <fs_instance_destroy+0x245>
    8820:	6e                   	outsb  %ds:(%esi),(%dx)
    8821:	5f                   	pop    %edi
    8822:	6e                   	outsb  %ds:(%esi),(%dx)
    8823:	6f                   	outsl  %ds:(%esi),(%dx)
    8824:	64 65 73 5f          	fs gs jae 8887 <fs_instance_destroy+0x247>
    8828:	63 6e 74             	arpl   %bp,0x74(%esi)
    882b:	20 3e                	and    %bh,(%esi)
    882d:	20 30                	and    %dh,(%eax)
    882f:	00 46 69             	add    %al,0x69(%esi)
    8832:	6c                   	insb   (%dx),%es:(%edi)
    8833:	65 73 79             	gs jae 88af <fs_instance_destroy+0x26f>
    8836:	73 74                	jae    88ac <fs_instance_destroy+0x26c>
    8838:	65 6d                	gs insl (%dx),%es:(%edi)
    883a:	20 63 6f             	and    %ah,0x6f(%ebx)
    883d:	72 72                	jb     88b1 <fs_instance_destroy+0x271>
    883f:	75 70                	jne    88b1 <fs_instance_destroy+0x271>
    8841:	74 65                	je     88a8 <fs_instance_destroy+0x268>
    8843:	64 2c 20             	fs sub $0x20,%al
    8846:	69 6e 76 61 6c 69 64 	imul   $0x64696c61,0x76(%esi),%ebp
    884d:	20 73 75             	and    %dh,0x75(%ebx)
    8850:	70 65                	jo     88b7 <fs_instance_destroy+0x277>
    8852:	72 62                	jb     88b6 <fs_instance_destroy+0x276>
    8854:	6c                   	insb   (%dx),%es:(%edi)
    8855:	6f                   	outsl  %ds:(%esi),(%dx)
    8856:	63 6b 00             	arpl   %bp,0x0(%ebx)
    8859:	6d                   	insl   (%dx),%es:(%edi)
    885a:	66 73 5f             	data16 jae 88bc <fs_instance_destroy+0x27c>
    885d:	69 6e 6f 64 65 2e 63 	imul   $0x632e6564,0x6f(%esi),%ebp
    8864:	00 73 69             	add    %dh,0x69(%ebx)
    8867:	7a 65                	jp     88ce <fs_instance_destroy+0x28e>
    8869:	5f                   	pop    %edi
    886a:	73 68                	jae    88d4 <fs_instance_destroy+0x294>
    886c:	72 69                	jb     88d7 <fs_instance_destroy+0x297>
    886e:	6e                   	outsb  %ds:(%esi),(%dx)
    886f:	6b 20 3c             	imul   $0x3c,(%eax),%esp
    8872:	3d 20 6f 6c 64       	cmp    $0x646c6f20,%eax
    8877:	5f                   	pop    %edi
    8878:	73 69                	jae    88e3 <fs_instance_destroy+0x2a3>
    887a:	7a 65                	jp     88e1 <fs_instance_destroy+0x2a1>
    887c:	00 6d 66             	add    %ch,0x66(%ebp)
    887f:	73 5f                	jae    88e0 <fs_instance_destroy+0x2a0>
    8881:	72 77                	jb     88fa <fs_instance_destroy+0x2ba>
    8883:	2e 63 00             	arpl   %ax,%cs:(%eax)
    8886:	6e                   	outsb  %ds:(%esi),(%dx)
    8887:	65 77 5f             	gs ja  88e9 <fs_instance_destroy+0x2a9>
    888a:	73 69                	jae    88f5 <fs_instance_destroy+0x2b5>
    888c:	7a 65                	jp     88f3 <fs_instance_destroy+0x2b3>
    888e:	20 3c 3d 20 69 6e 6f 	and    %bh,0x6f6e6920(,%edi,1)
    8895:	5f                   	pop    %edi
    8896:	69 2d 3e 69 5f 73 69 	imul   $0x657a69,0x735f693e,%ebp
    889d:	7a 65 00 
    88a0:	6d                   	insl   (%dx),%es:(%edi)
    88a1:	66 73 5f             	data16 jae 8903 <fs_instance_destroy+0x2c3>
    88a4:	62 61 6c             	bound  %esp,0x6c(%ecx)
    88a7:	6c                   	insb   (%dx),%es:(%edi)
    88a8:	6f                   	outsl  %ds:(%esi),(%dx)
    88a9:	63 2e                	arpl   %bp,(%esi)
    88ab:	63 00                	arpl   %ax,(%eax)
    88ad:	6e                   	outsb  %ds:(%esi),(%dx)
    88ae:	62 69 74             	bound  %ebp,0x74(%ecx)
    88b1:	73 20                	jae    88d3 <fs_instance_destroy+0x293>
    88b3:	3d 3d 20 30 00       	cmp    $0x30203d,%eax
    88b8:	6d                   	insl   (%dx),%es:(%edi)
    88b9:	66 73 3a             	data16 jae 88f6 <fs_instance_destroy+0x2b6>
    88bc:	20 45 72             	and    %al,0x72(%ebp)
    88bf:	72 6f                	jb     8930 <fs_instance_destroy+0x2f0>
    88c1:	72 21                	jb     88e4 <fs_instance_destroy+0x2a4>
    88c3:	20 54 72 79          	and    %dl,0x79(%edx,%esi,2)
    88c7:	69 6e 67 20 74 6f 20 	imul   $0x206f7420,0x67(%esi),%ebp
    88ce:	66 72 65             	data16 jb 8936 <fs_instance_destroy+0x2f6>
    88d1:	65 20 62 65          	and    %ah,%gs:0x65(%edx)
    88d5:	79 6f                	jns    8946 <fs_instance_destroy+0x306>
    88d7:	6e                   	outsb  %ds:(%esi),(%dx)
    88d8:	64 20 74 68 65       	and    %dh,%fs:0x65(%eax,%ebp,2)
    88dd:	20 62 69             	and    %ah,0x69(%edx)
    88e0:	74 6d                	je     894f <fs_instance_destroy+0x30f>
    88e2:	61                   	popa   
    88e3:	70 20                	jo     8905 <fs_instance_destroy+0x2c5>
    88e5:	6d                   	insl   (%dx),%es:(%edi)
    88e6:	61                   	popa   
    88e7:	78 20                	js     8909 <fs_instance_destroy+0x2c9>
    88e9:	73 69                	jae    8954 <fs_instance_destroy+0x314>
    88eb:	7a 65                	jp     8952 <fs_instance_destroy+0x312>
    88ed:	0a 00                	or     (%eax),%al
    88ef:	62 6c 6f 63          	bound  %ebp,0x63(%edi,%ebp,2)
    88f3:	6b 2e 63             	imul   $0x63,(%esi),%ebp
    88f6:	00 64 65 76          	add    %ah,0x76(%ebp,%eiz,2)
    88fa:	63 6f 6e             	arpl   %bp,0x6e(%edi)
    88fd:	00 64 65 76          	add    %ah,0x76(%ebp,%eiz,2)
    8901:	63 6f 6e             	arpl   %bp,0x6e(%edi)
    8904:	2d 3e 63 61 63       	sub    $0x6361633e,%eax
    8909:	68 65 00 62 6c       	push   $0x6c620065
    890e:	6f                   	outsl  %ds:(%esi),(%dx)
    890f:	63 6b 2d             	arpl   %bp,0x2d(%ebx)
    8912:	3e 72 65             	jb,pt  897a <fs_instance_destroy+0x33a>
    8915:	66 63 6e 74          	data16 arpl %bp,0x74(%esi)
    8919:	20 3e                	and    %bh,(%esi)
    891b:	3d 20 31 00 64       	cmp    $0x64003120,%eax
    8920:	65 76 63             	gs jbe 8986 <fs_instance_destroy+0x346>
    8923:	6f                   	outsl  %ds:(%esi),(%dx)
    8924:	6e                   	outsb  %ds:(%esi),(%dx)
    8925:	2d 3e 63 61 63       	sub    $0x6361633e,%eax
    892a:	68 65 20 21 3d       	push   $0x3d212065
    892f:	20 4e 55             	and    %cl,0x55(%esi)
    8932:	4c                   	dec    %esp
    8933:	4c                   	dec    %esp
    8934:	00 62 2d             	add    %ah,0x2d(%edx)
    8937:	3e 74 6f             	je,pt  89a9 <fs_instance_destroy+0x369>
    893a:	78 69                	js     89a5 <fs_instance_destroy+0x365>
    893c:	63 00                	arpl   %ax,(%eax)
    893e:	66 90                	xchg   %ax,%ax
    8940:	45                   	inc    %ebp
    8941:	72 72                	jb     89b5 <fs_instance_destroy+0x375>
    8943:	6f                   	outsl  %ds:(%esi),(%dx)
    8944:	72 20                	jb     8966 <fs_instance_destroy+0x326>
    8946:	25 64 20 72 65       	and    $0x65722064,%eax
    894b:	61                   	popa   
    894c:	64 69 6e 67 20 25 7a 	imul   $0x757a2520,%fs:0x67(%esi),%ebp
    8953:	75 
    8954:	20 62 6c             	and    %ah,0x6c(%edx)
    8957:	6f                   	outsl  %ds:(%esi),(%dx)
    8958:	63 6b 73             	arpl   %bp,0x73(%ebx)
    895b:	20 73 74             	and    %dh,0x74(%ebx)
    895e:	61                   	popa   
    895f:	72 74                	jb     89d5 <fs_instance_destroy+0x395>
    8961:	69 6e 67 20 61 74 20 	imul   $0x20746120,0x67(%esi),%ebp
    8968:	62 6c 6f 63          	bound  %ebp,0x63(%edi,%ebp,2)
    896c:	6b 20 25             	imul   $0x25,(%eax),%esp
    896f:	6c                   	insb   (%dx),%es:(%edi)
    8970:	6c                   	insb   (%dx),%es:(%edi)
    8971:	75 20                	jne    8993 <fs_instance_destroy+0x353>
    8973:	66 72 6f             	data16 jb 89e5 <fs_instance_destroy+0x3a5>
    8976:	6d                   	insl   (%dx),%es:(%edi)
    8977:	20 64 65 76          	and    %ah,0x76(%ebp,%eiz,2)
    897b:	69 63 65 20 68 61 6e 	imul   $0x6e616820,0x65(%ebx),%esp
    8982:	64 6c                	fs insb (%dx),%es:(%edi)
    8984:	65 20 25 75 0a 00 00 	and    %ah,%gs:0xa75
    898b:	00 45 72             	add    %al,0x72(%ebp)
    898e:	72 6f                	jb     89ff <fs_instance_destroy+0x3bf>
    8990:	72 20                	jb     89b2 <fs_instance_destroy+0x372>
    8992:	25 64 20 77 72       	and    $0x72772064,%eax
    8997:	69 74 69 6e 67 20 25 	imul   $0x7a252067,0x6e(%ecx,%ebp,2),%esi
    899e:	7a 
    899f:	75 20                	jne    89c1 <fs_instance_destroy+0x381>
    89a1:	62 6c 6f 63          	bound  %ebp,0x63(%edi,%ebp,2)
    89a5:	6b 73 20 73          	imul   $0x73,0x20(%ebx),%esi
    89a9:	74 61                	je     8a0c <fs_instance_destroy+0x3cc>
    89ab:	72 74                	jb     8a21 <fs_instance_destroy+0x3e1>
    89ad:	69 6e 67 20 61 74 20 	imul   $0x20746120,0x67(%esi),%ebp
    89b4:	62 6c 6f 63          	bound  %ebp,0x63(%edi,%ebp,2)
    89b8:	6b 20 25             	imul   $0x25,(%eax),%esp
    89bb:	6c                   	insb   (%dx),%es:(%edi)
    89bc:	6c                   	insb   (%dx),%es:(%edi)
    89bd:	75 20                	jne    89df <fs_instance_destroy+0x39f>
    89bf:	74 6f                	je     8a30 <fs_instance_destroy+0x3f0>
    89c1:	20 64 65 76          	and    %ah,0x76(%ebp,%eiz,2)
    89c5:	69 63 65 20 68 61 6e 	imul   $0x6e616820,0x65(%ebx),%esp
    89cc:	64 6c                	fs insb (%dx),%es:(%edi)
    89ce:	65 20 25 75 0a 00 54 	and    %ah,%gs:0x54000a75
    89d5:	6f                   	outsl  %ds:(%esi),(%dx)
    89d6:	6f                   	outsl  %ds:(%esi),(%dx)
    89d7:	20 6d 61             	and    %ch,0x61(%ebp)
    89da:	6e                   	outsb  %ds:(%esi),(%dx)
    89db:	79 20                	jns    89fd <fs_instance_destroy+0x3bd>
    89dd:	65 72 72             	gs jb  8a52 <fs_instance_destroy+0x412>
    89e0:	6f                   	outsl  %ds:(%esi),(%dx)
    89e1:	72 73                	jb     8a56 <fs_instance_destroy+0x416>
    89e3:	20 77 72             	and    %dh,0x72(%edi)
    89e6:	69 74 69 6e 67 20 62 	imul   $0x6c622067,0x6e(%ecx,%ebp,2),%esi
    89ed:	6c 
    89ee:	6f                   	outsl  %ds:(%esi),(%dx)
    89ef:	63 6b 20             	arpl   %bp,0x20(%ebx)
    89f2:	25 6c 6c 75 66       	and    $0x66756c6c,%eax
    89f7:	72 6f                	jb     8a68 <fs_instance_destroy+0x428>
    89f9:	6d                   	insl   (%dx),%es:(%edi)
    89fa:	20 64 65 76          	and    %ah,0x76(%ebp,%eiz,2)
    89fe:	69 63 65 20 68 61 6e 	imul   $0x6e616820,0x65(%ebx),%esp
    8a05:	64 6c                	fs insb (%dx),%es:(%edi)
    8a07:	65 20 25 75 0a 53 45 	and    %ah,%gs:0x45530a75
    8a0e:	56                   	push   %esi
    8a0f:	45                   	inc    %ebp
    8a10:	52                   	push   %edx
    8a11:	45                   	inc    %ebp
    8a12:	20 44 41 54          	and    %al,0x54(%ecx,%eax,2)
    8a16:	41                   	inc    %ecx
    8a17:	20 4c 4f 53          	and    %cl,0x53(%edi,%ecx,2)
    8a1b:	53                   	push   %ebx
    8a1c:	20 50 4f             	and    %dl,0x4f(%eax)
    8a1f:	53                   	push   %ebx
    8a20:	53                   	push   %ebx
    8a21:	49                   	dec    %ecx
    8a22:	42                   	inc    %edx
    8a23:	4c                   	dec    %esp
    8a24:	45                   	inc    %ebp
    8a25:	0a 00                	or     (%eax),%al
    8a27:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
    8a2b:	66 73 2e             	data16 jae 8a5c <fs_instance_destroy+0x41c>
    8a2e:	63 00                	arpl   %ax,(%eax)
    8a30:	6c                   	insb   (%dx),%es:(%edi)
    8a31:	65 6e                	outsb  %gs:(%esi),(%dx)
    8a33:	00 08                	add    %cl,(%eax)
    8a35:	7a 00                	jp     8a37 <fs_instance_destroy+0x3f7>
    8a37:	00 b8 79 00 00 60    	add    %bh,0x60000079(%eax)
    8a3d:	79 00                	jns    8a3f <fs_instance_destroy+0x3ff>
    8a3f:	00 30                	add    %dh,(%eax)
    8a41:	79 00                	jns    8a43 <fs_instance_destroy+0x403>
    8a43:	00 10                	add    %dl,(%eax)
    8a45:	79 00                	jns    8a47 <fs_instance_destroy+0x407>
    8a47:	00 d8                	add    %bl,%al
    8a49:	77 00                	ja     8a4b <fs_instance_destroy+0x40b>
    8a4b:	00 38                	add    %bh,(%eax)
    8a4d:	77 00                	ja     8a4f <fs_instance_destroy+0x40f>
    8a4f:	00 48 76             	add    %cl,0x76(%eax)
    8a52:	00 00                	add    %al,(%eax)
    8a54:	30 76 00             	xor    %dh,0x0(%esi)
    8a57:	00 10                	add    %dl,(%eax)
    8a59:	76 00                	jbe    8a5b <fs_instance_destroy+0x41b>
    8a5b:	00 f8                	add    %bh,%al
    8a5d:	74 00                	je     8a5f <fs_instance_destroy+0x41f>
    8a5f:	00 28                	add    %ch,(%eax)
    8a61:	72 00                	jb     8a63 <fs_instance_destroy+0x423>
    8a63:	00 00                	add    %al,(%eax)
    8a65:	72 00                	jb     8a67 <fs_instance_destroy+0x427>
    8a67:	00 e0                	add    %ah,%al
    8a69:	7a 00                	jp     8a6b <fs_instance_destroy+0x42b>
	...

Disassembly of section .plt:

00008ca0 <__main@plt-0x10>:
    8ca0:	ff 35 c4 ad 00 00    	pushl  0xadc4
    8ca6:	ff 25 c8 ad 00 00    	jmp    *0xadc8
    8cac:	00 00                	add    %al,(%eax)
	...

00008cb0 <__main@plt>:
    8cb0:	ff 25 cc ad 00 00    	jmp    *0xadcc
    8cb6:	68 00 00 00 00       	push   $0x0
    8cbb:	e9 e0 ff ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008cc0 <task_retval@plt>:
    8cc0:	ff 25 d0 ad 00 00    	jmp    *0xadd0
    8cc6:	68 08 00 00 00       	push   $0x8
    8ccb:	e9 d0 ff ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008cd0 <loc_service_connect@plt>:
    8cd0:	ff 25 d4 ad 00 00    	jmp    *0xadd4
    8cd6:	68 10 00 00 00       	push   $0x10
    8cdb:	e9 c0 ff ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008ce0 <printf@plt>:
    8ce0:	ff 25 d8 ad 00 00    	jmp    *0xadd8
    8ce6:	68 18 00 00 00       	push   $0x18
    8ceb:	e9 b0 ff ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008cf0 <async_hangup@plt>:
    8cf0:	ff 25 dc ad 00 00    	jmp    *0xaddc
    8cf6:	68 20 00 00 00       	push   $0x20
    8cfb:	e9 a0 ff ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008d00 <async_data_write_forward_fast@plt>:
    8d00:	ff 25 e0 ad 00 00    	jmp    *0xade0
    8d06:	68 28 00 00 00       	push   $0x28
    8d0b:	e9 90 ff ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008d10 <async_forward_slow@plt>:
    8d10:	ff 25 e4 ad 00 00    	jmp    *0xade4
    8d16:	68 30 00 00 00       	push   $0x30
    8d1b:	e9 80 ff ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008d20 <async_wait_for@plt>:
    8d20:	ff 25 e8 ad 00 00    	jmp    *0xade8
    8d26:	68 38 00 00 00       	push   $0x38
    8d2b:	e9 70 ff ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008d30 <hash_table_create@plt>:
    8d30:	ff 25 ec ad 00 00    	jmp    *0xadec
    8d36:	68 40 00 00 00       	push   $0x40
    8d3b:	e9 60 ff ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008d40 <async_data_write_start@plt>:
    8d40:	ff 25 f0 ad 00 00    	jmp    *0xadf0
    8d46:	68 48 00 00 00       	push   $0x48
    8d4b:	e9 50 ff ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008d50 <hash_table_insert@plt>:
    8d50:	ff 25 f4 ad 00 00    	jmp    *0xadf4
    8d56:	68 50 00 00 00       	push   $0x50
    8d5b:	e9 40 ff ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008d60 <__errno@plt>:
    8d60:	ff 25 f8 ad 00 00    	jmp    *0xadf8
    8d66:	68 58 00 00 00       	push   $0x58
    8d6b:	e9 30 ff ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008d70 <bd_write_blocks@plt>:
    8d70:	ff 25 fc ad 00 00    	jmp    *0xadfc
    8d76:	68 60 00 00 00       	push   $0x60
    8d7b:	e9 20 ff ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008d80 <bd_get_num_blocks@plt>:
    8d80:	ff 25 00 ae 00 00    	jmp    *0xae00
    8d86:	68 68 00 00 00       	push   $0x68
    8d8b:	e9 10 ff ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008d90 <service_connect_blocking@plt>:
    8d90:	ff 25 04 ae 00 00    	jmp    *0xae04
    8d96:	68 70 00 00 00       	push   $0x70
    8d9b:	e9 00 ff ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008da0 <async_data_read_finalize@plt>:
    8da0:	ff 25 08 ae 00 00    	jmp    *0xae08
    8da6:	68 78 00 00 00       	push   $0x78
    8dab:	e9 f0 fe ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008db0 <async_share_in_start@plt>:
    8db0:	ff 25 0c ae 00 00    	jmp    *0xae0c
    8db6:	68 80 00 00 00       	push   $0x80
    8dbb:	e9 e0 fe ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008dc0 <bd_close@plt>:
    8dc0:	ff 25 10 ae 00 00    	jmp    *0xae10
    8dc6:	68 88 00 00 00       	push   $0x88
    8dcb:	e9 d0 fe ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008dd0 <memcpy@plt>:
    8dd0:	ff 25 14 ae 00 00    	jmp    *0xae14
    8dd6:	68 90 00 00 00       	push   $0x90
    8ddb:	e9 c0 fe ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008de0 <async_clone_establish@plt>:
    8de0:	ff 25 18 ae 00 00    	jmp    *0xae18
    8de6:	68 98 00 00 00       	push   $0x98
    8deb:	e9 b0 fe ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008df0 <malloc@plt>:
    8df0:	ff 25 1c ae 00 00    	jmp    *0xae1c
    8df6:	68 a0 00 00 00       	push   $0xa0
    8dfb:	e9 a0 fe ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008e00 <bd_open@plt>:
    8e00:	ff 25 20 ae 00 00    	jmp    *0xae20
    8e06:	68 a8 00 00 00       	push   $0xa8
    8e0b:	e9 90 fe ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008e10 <async_req_fast@plt>:
    8e10:	ff 25 24 ae 00 00    	jmp    *0xae24
    8e16:	68 b0 00 00 00       	push   $0xb0
    8e1b:	e9 80 fe ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008e20 <async_answer_0@plt>:
    8e20:	ff 25 28 ae 00 00    	jmp    *0xae28
    8e26:	68 b8 00 00 00       	push   $0xb8
    8e2b:	e9 70 fe ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008e30 <async_send_fast@plt>:
    8e30:	ff 25 2c ae 00 00    	jmp    *0xae2c
    8e36:	68 c0 00 00 00       	push   $0xc0
    8e3b:	e9 60 fe ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008e40 <stacktrace_print@plt>:
    8e40:	ff 25 30 ae 00 00    	jmp    *0xae30
    8e46:	68 c8 00 00 00       	push   $0xc8
    8e4b:	e9 50 fe ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008e50 <__umoddi3@plt>:
    8e50:	ff 25 34 ae 00 00    	jmp    *0xae34
    8e56:	68 d0 00 00 00       	push   $0xd0
    8e5b:	e9 40 fe ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008e60 <__udivdi3@plt>:
    8e60:	ff 25 38 ae 00 00    	jmp    *0xae38
    8e66:	68 d8 00 00 00       	push   $0xd8
    8e6b:	e9 30 fe ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008e70 <bd_read_blocks@plt>:
    8e70:	ff 25 3c ae 00 00    	jmp    *0xae3c
    8e76:	68 e0 00 00 00       	push   $0xe0
    8e7b:	e9 20 fe ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008e80 <strtol@plt>:
    8e80:	ff 25 40 ae 00 00    	jmp    *0xae40
    8e86:	68 e8 00 00 00       	push   $0xe8
    8e8b:	e9 10 fe ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008e90 <async_exchange_end@plt>:
    8e90:	ff 25 44 ae 00 00    	jmp    *0xae44
    8e96:	68 f0 00 00 00       	push   $0xf0
    8e9b:	e9 00 fe ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008ea0 <fibril_mutex_trylock@plt>:
    8ea0:	ff 25 48 ae 00 00    	jmp    *0xae48
    8ea6:	68 f8 00 00 00       	push   $0xf8
    8eab:	e9 f0 fd ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008eb0 <assert_abort@plt>:
    8eb0:	ff 25 4c ae 00 00    	jmp    *0xae4c
    8eb6:	68 00 01 00 00       	push   $0x100
    8ebb:	e9 e0 fd ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008ec0 <fprintf@plt>:
    8ec0:	ff 25 50 ae 00 00    	jmp    *0xae50
    8ec6:	68 08 01 00 00       	push   $0x108
    8ecb:	e9 d0 fd ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008ed0 <bd_read_toc@plt>:
    8ed0:	ff 25 54 ae 00 00    	jmp    *0xae54
    8ed6:	68 10 01 00 00       	push   $0x110
    8edb:	e9 c0 fd ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008ee0 <fibril_mutex_unlock@plt>:
    8ee0:	ff 25 58 ae 00 00    	jmp    *0xae58
    8ee6:	68 18 01 00 00       	push   $0x118
    8eeb:	e9 b0 fd ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008ef0 <fibril_mutex_initialize@plt>:
    8ef0:	ff 25 5c ae 00 00    	jmp    *0xae5c
    8ef6:	68 20 01 00 00       	push   $0x120
    8efb:	e9 a0 fd ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008f00 <async_answer_4@plt>:
    8f00:	ff 25 60 ae 00 00    	jmp    *0xae60
    8f06:	68 28 01 00 00       	push   $0x128
    8f0b:	e9 90 fd ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008f10 <async_clone_receive@plt>:
    8f10:	ff 25 64 ae 00 00    	jmp    *0xae64
    8f16:	68 30 01 00 00       	push   $0x130
    8f1b:	e9 80 fd ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008f20 <async_answer_5@plt>:
    8f20:	ff 25 68 ae 00 00    	jmp    *0xae68
    8f26:	68 38 01 00 00       	push   $0x138
    8f2b:	e9 70 fd ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008f30 <memcmp@plt>:
    8f30:	ff 25 6c ae 00 00    	jmp    *0xae6c
    8f36:	68 40 01 00 00       	push   $0x140
    8f3b:	e9 60 fd ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008f40 <async_create_callback_port@plt>:
    8f40:	ff 25 70 ae 00 00    	jmp    *0xae70
    8f46:	68 48 01 00 00       	push   $0x148
    8f4b:	e9 50 fd ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008f50 <str_cmp@plt>:
    8f50:	ff 25 74 ae 00 00    	jmp    *0xae74
    8f56:	68 50 01 00 00       	push   $0x150
    8f5b:	e9 40 fd ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008f60 <hash_table_remove_item@plt>:
    8f60:	ff 25 78 ae 00 00    	jmp    *0xae78
    8f66:	68 58 01 00 00       	push   $0x158
    8f6b:	e9 30 fd ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008f70 <memset@plt>:
    8f70:	ff 25 7c ae 00 00    	jmp    *0xae7c
    8f76:	68 60 01 00 00       	push   $0x160
    8f7b:	e9 20 fd ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008f80 <async_data_read_receive@plt>:
    8f80:	ff 25 80 ae 00 00    	jmp    *0xae80
    8f86:	68 68 01 00 00       	push   $0x168
    8f8b:	e9 10 fd ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008f90 <bd_get_block_size@plt>:
    8f90:	ff 25 84 ae 00 00    	jmp    *0xae84
    8f96:	68 70 01 00 00       	push   $0x170
    8f9b:	e9 00 fd ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008fa0 <async_data_write_void@plt>:
    8fa0:	ff 25 88 ae 00 00    	jmp    *0xae88
    8fa6:	68 78 01 00 00       	push   $0x178
    8fab:	e9 f0 fc ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008fb0 <async_get_call_timeout@plt>:
    8fb0:	ff 25 8c ae 00 00    	jmp    *0xae8c
    8fb6:	68 80 01 00 00       	push   $0x180
    8fbb:	e9 e0 fc ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008fc0 <str_size@plt>:
    8fc0:	ff 25 90 ae 00 00    	jmp    *0xae90
    8fc6:	68 88 01 00 00       	push   $0x188
    8fcb:	e9 d0 fc ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008fd0 <bd_sync_cache@plt>:
    8fd0:	ff 25 94 ae 00 00    	jmp    *0xae94
    8fd6:	68 90 01 00 00       	push   $0x190
    8fdb:	e9 c0 fc ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008fe0 <async_answer_1@plt>:
    8fe0:	ff 25 98 ae 00 00    	jmp    *0xae98
    8fe6:	68 98 01 00 00       	push   $0x198
    8feb:	e9 b0 fc ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00008ff0 <async_exchange_begin@plt>:
    8ff0:	ff 25 9c ae 00 00    	jmp    *0xae9c
    8ff6:	68 a0 01 00 00       	push   $0x1a0
    8ffb:	e9 a0 fc ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00009000 <async_answer_3@plt>:
    9000:	ff 25 a0 ae 00 00    	jmp    *0xaea0
    9006:	68 a8 01 00 00       	push   $0x1a8
    900b:	e9 90 fc ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00009010 <hash_table_find@plt>:
    9010:	ff 25 a4 ae 00 00    	jmp    *0xaea4
    9016:	68 b0 01 00 00       	push   $0x1b0
    901b:	e9 80 fc ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00009020 <async_data_write_finalize@plt>:
    9020:	ff 25 a8 ae 00 00    	jmp    *0xaea8
    9026:	68 b8 01 00 00       	push   $0x1b8
    902b:	e9 70 fc ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00009030 <async_data_write_accept@plt>:
    9030:	ff 25 ac ae 00 00    	jmp    *0xaeac
    9036:	68 c0 01 00 00       	push   $0x1c0
    903b:	e9 60 fc ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00009040 <fibril_rwlock_initialize@plt>:
    9040:	ff 25 b0 ae 00 00    	jmp    *0xaeb0
    9046:	68 c8 01 00 00       	push   $0x1c8
    904b:	e9 50 fc ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00009050 <async_forget@plt>:
    9050:	ff 25 b4 ae 00 00    	jmp    *0xaeb4
    9056:	68 d0 01 00 00       	push   $0x1d0
    905b:	e9 40 fc ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00009060 <fibril_switch@plt>:
    9060:	ff 25 b8 ae 00 00    	jmp    *0xaeb8
    9066:	68 d8 01 00 00       	push   $0x1d8
    906b:	e9 30 fc ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00009070 <__syscall_fast@plt>:
    9070:	ff 25 bc ae 00 00    	jmp    *0xaebc
    9076:	68 e0 01 00 00       	push   $0x1e0
    907b:	e9 20 fc ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00009080 <async_set_fallback_port_handler@plt>:
    9080:	ff 25 c0 ae 00 00    	jmp    *0xaec0
    9086:	68 e8 01 00 00       	push   $0x1e8
    908b:	e9 10 fc ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

00009090 <hash_table_destroy@plt>:
    9090:	ff 25 c4 ae 00 00    	jmp    *0xaec4
    9096:	68 f0 01 00 00       	push   $0x1f0
    909b:	e9 00 fc ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

000090a0 <async_data_write_receive@plt>:
    90a0:	ff 25 c8 ae 00 00    	jmp    *0xaec8
    90a6:	68 f8 01 00 00       	push   $0x1f8
    90ab:	e9 f0 fb ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

000090b0 <free@plt>:
    90b0:	ff 25 cc ae 00 00    	jmp    *0xaecc
    90b6:	68 00 02 00 00       	push   $0x200
    90bb:	e9 e0 fb ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>

000090c0 <fibril_mutex_lock@plt>:
    90c0:	ff 25 d0 ae 00 00    	jmp    *0xaed0
    90c6:	68 08 02 00 00       	push   $0x208
    90cb:	e9 d0 fb ff ff       	jmp    8ca0 <fs_instance_destroy+0x660>
