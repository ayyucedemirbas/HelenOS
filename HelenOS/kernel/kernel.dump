
arch/ia32/src/context.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 g     F .text	00000028 context_save_arch
00000000         *UND*	00000000 vreg_ptr
00000028 g     F .text	00000000 context_restore_arch



arch/ia32/src/debug/stacktrace.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 stacktrace.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000000f kernel_stack_trace_context_validate
0000000f g     F .text	00000016 kernel_frame_pointer_prev
00000025 g     F .text	00000017 kernel_return_address_get
0000003c g     F .text	0000000f uspace_stack_trace_context_validate
0000004b g     F .text	00000029 uspace_frame_pointer_prev
00000000         *UND*	00000000 copy_from_uspace
00000074 g     F .text	0000002c uspace_return_address_get



arch/ia32/src/debug/stacktrace_asm.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 g     F .text	00000003 frame_pointer_get
00000003 g     F .text	00000004 program_counter_get



arch/ia32/src/delay.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 g     F .text	00000009 asm_delay_loop
00000009 g     F .text	00000009 asm_fake_loop



arch/ia32/src/asm.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
0000012c l       .text	00000000 interrupt_handlers
00000000 g     F .text	00000029 memcpy_from_uspace
00000000 g     F .text	00000029 memcpy_to_uspace
00000029 g       .text	00000000 memcpy_from_uspace_failover_address
00000029 g       .text	00000000 memcpy_to_uspace_failover_address
00000030 g     F .text	00000015 paging_on
00000045 g     F .text	0000000f enable_l_apic_in_msr
00000054 g       .text	00000000 sysenter_handler
00000000         *UND*	00000000 syscall_handler
000000ac g       .text	00000000 int_syscall
0000012c g       .text	00000000 int_0
00000000         *UND*	00000000 exc_dispatch
000001c3 g       .text	00000000 int_1
0000025a g       .text	00000000 int_2
000002f1 g       .text	00000000 int_3
00000388 g       .text	00000000 int_4
0000041f g       .text	00000000 int_5
000004b6 g       .text	00000000 int_6
0000054d g       .text	00000000 int_7
000005e4 g       .text	00000000 int_8
0000067b g       .text	00000000 int_9
00000712 g       .text	00000000 int_10
000007a9 g       .text	00000000 int_11
00000840 g       .text	00000000 int_12
000008d7 g       .text	00000000 int_13
0000096e g       .text	00000000 int_14
00000a05 g       .text	00000000 int_15
00000a9c g       .text	00000000 int_16
00000b33 g       .text	00000000 int_17
00000bca g       .text	00000000 int_18
00000c61 g       .text	00000000 int_19
00000cf8 g       .text	00000000 int_20
00000d8f g       .text	00000000 int_21
00000e26 g       .text	00000000 int_22
00000ebd g       .text	00000000 int_23
00000f54 g       .text	00000000 int_24
00000feb g       .text	00000000 int_25
00001082 g       .text	00000000 int_26
00001119 g       .text	00000000 int_27
000011b0 g       .text	00000000 int_28
00001247 g       .text	00000000 int_29
000012de g       .text	00000000 int_30
00001375 g       .text	00000000 int_31
0000140c g       .text	00000000 int_32
000014a3 g       .text	00000000 int_33
0000153a g       .text	00000000 int_34
000015d1 g       .text	00000000 int_35
00001668 g       .text	00000000 int_36
000016ff g       .text	00000000 int_37
00001796 g       .text	00000000 int_38
0000182d g       .text	00000000 int_39
000018c4 g       .text	00000000 int_40
0000195b g       .text	00000000 int_41
000019f2 g       .text	00000000 int_42
00001a89 g       .text	00000000 int_43
00001b20 g       .text	00000000 int_44
00001bb7 g       .text	00000000 int_45
00001c4e g       .text	00000000 int_46
00001ce5 g       .text	00000000 int_47
00001d7c g       .text	00000000 int_48
00001e13 g       .text	00000000 int_49
00001eaa g       .text	00000000 int_50
00001f41 g       .text	00000000 int_51
00001fd8 g       .text	00000000 int_52
0000206f g       .text	00000000 int_53
00002106 g       .text	00000000 int_54
0000219d g       .text	00000000 int_55
00002234 g       .text	00000000 int_56
000022cb g       .text	00000000 int_57
00002362 g       .text	00000000 int_58
000023f9 g       .text	00000000 int_59
00002490 g       .text	00000000 int_60
00002527 g       .text	00000000 int_61
000025be g       .text	00000000 int_62
00002655 g       .text	00000000 int_63
000026ec g     F .text	00000001 early_putchar



arch/ia32/src/proc/scheduler.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 scheduler.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000009 before_task_runs_arch
00000000         *UND*	00000000 io_perm_bitmap_install
00000009 g     F .text	00000061 before_thread_runs_arch
0000006a g     F .text	00000005 after_thread_ran_arch



arch/ia32/src/proc/task.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 task.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000032 task_create_arch
00000000         *UND*	00000000 bitmap_initialize
00000032 g     F .text	0000001b task_destroy_arch
00000000         *UND*	00000000 free



arch/ia32/src/proc/thread.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 thread.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000005 thread_create_arch



arch/ia32/src/bios/bios.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 bios.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000014 bios_init
00000000 g     O .bss	00000004 ebda



arch/ia32/src/smp/ap.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  K_TEXT_START	00000000 K_TEXT_START
00000008 l       *ABS*	00000000 KTEXT
00000010 l       *ABS*	00000000 KDATA
0000001d l       K_TEXT_START	00000000 jump_to_kernel
00000000 l    d  K_DATA_START	00000000 K_DATA_START
00000000 g       K_TEXT_START	00000000 unmapped_ap_boot
00000000         *UND*	00000000 ap_gdtr
00000000         *UND*	00000000 ctx
00000000         *UND*	00000000 map_kernel_pse
00000000         *UND*	00000000 main_ap
00000000 g       K_DATA_START	00000000 unmapped_ap_gdtr



arch/ia32/src/smp/apic.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 apic.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000a l_apic_timer_claim
000000fc l     F .text	00000038 l_apic_timer_irq_handler
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000134 l     F .text	00000038 apic_spurious
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
0000016c l     F .text	000000ec apic_poll_errors
00000000 l     O .rodata	0000000c __func__.3924
00000020 l     O .bss	00000070 l_apic_timer_irq
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
0000000a g     F .text	00000014 l_apic_eoi
00000004 g     O .data	00000004 l_apic
0000001e g     F .text	0000006f io_apic_disable_irqs
00000000         *UND*	00000000 smp_irq_to_pin
00000000 g     O .data	00000004 io_apic
0000008d g     F .text	0000006f io_apic_enable_irqs
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 clock
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 log
00000000         *UND*	00000000 log_begin
00000000         *UND*	00000000 log_printf
00000000         *UND*	00000000 log_end
00000258 g     F .text	00000063 l_apic_send_custom_ipi
000002bb g     F .text	00000034 l_apic_broadcast_custom_ipi
000002ef g     F .text	000000ed l_apic_send_init_ipi
00000000         *UND*	00000000 delay
00000000         *UND*	00000000 ap_boot
000003dc g     F .text	000001ae l_apic_init
00000000         *UND*	00000000 enable_l_apic_in_msr
00000000         *UND*	00000000 panic_common
0000058a g     F .text	000002b4 apic_init
00000000         *UND*	00000000 exc_register
00000000         *UND*	00000000 enable_irqs_function
00000000         *UND*	00000000 disable_irqs_function
00000000         *UND*	00000000 eoi_function
00000000         *UND*	00000000 irqs_info
00000000         *UND*	00000000 irq_initialize
00000000         *UND*	00000000 device_assign_devno
00000000         *UND*	00000000 irq_register
00000004 g     O .bss	00000004 apic_id_mask
00000000 g     O .bss	00000001 bsp_l_apic
0000083e g     F .text	00000005 l_apic_debug
00000843 g     F .text	00000015 io_apic_read
00000858 g     F .text	00000018 io_apic_write
00000870 g     F .text	00000088 io_apic_change_ioredtbl



arch/ia32/src/smp/mps.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 mps.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000044 mps_irq_to_pin
00000004 l     O .bss	00000004 io_intr_entry_cnt
0000001c l     O .bss	00000004 io_intr_entries
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000044 l     F .text	00000074 mps_cpu_apic_id
00000010 l     O .bss	00000004 processor_entry_cnt
00000028 l     O .bss	00000004 processor_entries
00000038 l     O .rodata	00000010 __func__.2384
000000b8 l     F .text	00000079 mps_cpu_bootstrap
00000024 l     O .rodata	00000012 __func__.2392
00000131 l     F .text	0000007e mps_cpu_enabled
00000014 l     O .rodata	00000010 __func__.2388
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000030 l     O .bss	00000004 fs
0000002c l     O .bss	00000004 ct
00000018 l     O .bss	00000004 l_intr_entries
00000000 l     O .bss	00000004 l_intr_entry_cnt
00000020 l     O .bss	00000004 io_apic_entries
00000008 l     O .bss	00000004 io_apic_entry_cnt
00000014 l     O .bss	00000004 io_apic_cnt
00000024 l     O .bss	00000004 bus_entries
0000000c l     O .bss	00000004 bus_entry_cnt
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 panic_common
000001af g     F .text	00000930 mps_init
00000000         *UND*	00000000 ebda
00000000         *UND*	00000000 log
00000000         *UND*	00000000 config
00000000         *UND*	00000000 l_apic
00000000         *UND*	00000000 apic_id_mask
00000000         *UND*	00000000 io_apic
00000000 g     O .data	00000010 mps_config_operations



arch/ia32/src/smp/smp.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 smp.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     O .bss	00000004 ops
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000024 l     O .rodata	00000004 __FUNCTION__.3667
00000028 l     O .rodata	00000004 __func__.3664
00000010 l     O .rodata	00000011 __func__.3655
00000000 l     O .rodata	0000000f __func__.3674
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000089 smp_init
00000000         *UND*	00000000 acpi_madt
00000000         *UND*	00000000 acpi_madt_parse
00000000         *UND*	00000000 madt_config_operations
00000000         *UND*	00000000 config
00000000         *UND*	00000000 l_apic
00000000         *UND*	00000000 km_map
00000000         *UND*	00000000 io_apic
00000000         *UND*	00000000 mps_init
00000000         *UND*	00000000 mps_config_operations
00000089 g     F .text	0000032c kmp
00000000         *UND*	00000000 cpus
00000000         *UND*	00000000 ap_boot
00000000         *UND*	00000000 pic_disable_irqs
00000000         *UND*	00000000 apic_init
00000000         *UND*	00000000 bsp_l_apic
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 gdt
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 protected_ap_gdtr
00000000         *UND*	00000000 gdtr
00000000         *UND*	00000000 l_apic_send_init_ipi
00000000         *UND*	00000000 ap_completion_wq
00000000         *UND*	00000000 waitq_sleep_timeout
00000000         *UND*	00000000 log
00000000         *UND*	00000000 panic_common
000003b5 g     F .text	00000067 smp_irq_to_pin



arch/ia32/src/smp/smp_call.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 smp_call.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000003c arch_smp_call_ipi
00000000         *UND*	00000000 cpus
00000000         *UND*	00000000 l_apic_send_custom_ipi



arch/ia32/src/atomic.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 g     F .text	00000018 spinlock_arch



arch/ia32/src/smp/ipi.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ipi.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000010 ipi_broadcast_arch
00000000         *UND*	00000000 l_apic_broadcast_custom_ipi



arch/ia32/src/ia32.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ia32.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	000000b6 ia32_post_smp_init
000000b6 l     F .text	00000015 ia32_pre_smp_init
000000cb l     F .text	0000001c ia32_post_cpu_init
000000e7 l     F .text	00000063 ia32_post_mm_init
0000014a l     F .text	00000027 ia32_pre_mm_init
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 str_size
00000000         *UND*	00000000 sysinfo_set_item_data
00000000         *UND*	00000000 i8042_init
00000000         *UND*	00000000 kbrd_init
00000000         *UND*	00000000 stdin_wire
00000000         *UND*	00000000 kbrd_wire
00000000         *UND*	00000000 i8042_wire
00000000         *UND*	00000000 trap_virtual_enable_irqs
00000000         *UND*	00000000 irqs_info
00000000         *UND*	00000000 sysinfo_set_item_val
00000000         *UND*	00000000 config
00000000         *UND*	00000000 acpi_init
00000000         *UND*	00000000 l_apic_init
00000000         *UND*	00000000 l_apic_debug
00000000         *UND*	00000000 vreg_init
00000000         *UND*	00000000 irq_init
00000000         *UND*	00000000 i8254_init
00000000         *UND*	00000000 bfb_init
00000000         *UND*	00000000 zone_merge_all
00000000         *UND*	00000000 ega_init
00000000         *UND*	00000000 stdout_wire
00000000         *UND*	00000000 pm_init
00000000         *UND*	00000000 interrupt_init
00000000         *UND*	00000000 bios_init
00000000         *UND*	00000000 i8259_init
00000171 g     F .text	00000053 ia32_pre_main
00000000         *UND*	00000000 multiboot_info_parse
00000000         *UND*	00000000 multiboot2_info_parse
00000000         *UND*	00000000 _hardcoded_unmapped_size
000001c4 g     F .text	0000001d calibrate_delay_loop
00000000         *UND*	00000000 i8254_calibrate_delay_loop
00000000         *UND*	00000000 i8254_normal_operation
000001e1 g     F .text	00000008 arch_construct_function
000001e9 g     F .text	00000014 arch_reboot
00000000         *UND*	00000000 i8042_cpu_reset
000001fd g     F .text	00000005 irq_initialize_arch
00000000 g     O .data	00000004 arch_ops
00000004 g     O .data	00000014 ia32_ops



arch/ia32/src/vreg.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 vreg.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .bss	00000004 vreg_tp_dummy
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000000c7 vreg_init
00000000         *UND*	00000000 gdtr
00000000         *UND*	00000000 frame_alloc
00000000         *UND*	00000000 km_map
00000000         *UND*	00000000 gdt_setbase
00000000         *UND*	00000000 gdt_setlimit
00000000 g     O .data	00000004 vreg_ptr
00000000         *UND*	00000000 panic_common



arch/ia32/src/interrupt.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 interrupt.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	0000004c simd_fp_exception
0000004c l     F .text	00000041 ss_fault
0000008d l     F .text	00000041 de_fault
000000ce l     F .text	0000004a null_interrupt
00000118 l     F .text	00000009 nm_fault
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	00000018 trap_virtual_eoi.part.1
00000121 l     F .text	0000001c arch_smp_call_ipi_recv
0000013d l     F .text	0000001c tlb_shootdown_ipi
00000159 l     F .text	00000134 irq_interrupt
00000000 l     O .rodata	0000000e __func__.3793
0000028d l     F .text	000000b3 gp_fault
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 fault_if_from_uspace
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 scheduler_fpu_lazy_request
00000004 g     O .bss	00000004 eoi_function
00000000         *UND*	00000000 smp_call_ipi_recv
00000000         *UND*	00000000 tlb_shootdown_ipi_recv
00000000         *UND*	00000000 irq_dispatch_and_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 io_perm_bitmap_install
00000340 g     F .text	000000df istate_decode
0000041f g     F .text	0000032b interrupt_init
00000000         *UND*	00000000 exc_register
0000074a g     F .text	00000048 trap_virtual_enable_irqs
00000008 g     O .bss	00000004 enable_irqs_function
00000792 g     F .text	00000048 trap_virtual_disable_irqs
0000000c g     O .bss	00000004 disable_irqs_function
00000000 g     O .bss	00000004 irqs_info



arch/ia32/src/pm.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 pm.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
000020a0 l     O .bss	00000200 idt
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000020 l     O .bss	00002069 tss0
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000022 gdt_setbase
00000022 g     F .text	00000025 gdt_setlimit
00000047 g     F .text	0000001f idt_setoffset
00000066 g     F .text	00000023 tss_initialize
00000000         *UND*	00000000 memsetb
00000089 g     F .text	00000548 idt_init
00000000         *UND*	00000000 int_0
00000000         *UND*	00000000 int_1
00000000         *UND*	00000000 int_2
00000000         *UND*	00000000 int_3
00000000         *UND*	00000000 int_4
00000000         *UND*	00000000 int_5
00000000         *UND*	00000000 int_6
00000000         *UND*	00000000 int_7
00000000         *UND*	00000000 int_8
00000000         *UND*	00000000 int_9
00000000         *UND*	00000000 int_10
00000000         *UND*	00000000 int_11
00000000         *UND*	00000000 int_12
00000000         *UND*	00000000 int_13
00000000         *UND*	00000000 int_14
00000000         *UND*	00000000 int_15
00000000         *UND*	00000000 int_16
00000000         *UND*	00000000 int_17
00000000         *UND*	00000000 int_18
00000000         *UND*	00000000 int_19
00000000         *UND*	00000000 int_20
00000000         *UND*	00000000 int_21
00000000         *UND*	00000000 int_22
00000000         *UND*	00000000 int_23
00000000         *UND*	00000000 int_24
00000000         *UND*	00000000 int_25
00000000         *UND*	00000000 int_26
00000000         *UND*	00000000 int_27
00000000         *UND*	00000000 int_28
00000000         *UND*	00000000 int_29
00000000         *UND*	00000000 int_30
00000000         *UND*	00000000 int_31
00000000         *UND*	00000000 int_32
00000000         *UND*	00000000 int_33
00000000         *UND*	00000000 int_34
00000000         *UND*	00000000 int_35
00000000         *UND*	00000000 int_36
00000000         *UND*	00000000 int_37
00000000         *UND*	00000000 int_38
00000000         *UND*	00000000 int_39
00000000         *UND*	00000000 int_40
00000000         *UND*	00000000 int_41
00000000         *UND*	00000000 int_42
00000000         *UND*	00000000 int_43
00000000         *UND*	00000000 int_44
00000000         *UND*	00000000 int_45
00000000         *UND*	00000000 int_46
00000000         *UND*	00000000 int_47
00000000         *UND*	00000000 int_49
00000000         *UND*	00000000 int_50
00000000         *UND*	00000000 int_51
00000000         *UND*	00000000 int_52
00000000         *UND*	00000000 int_53
00000000         *UND*	00000000 int_54
00000000         *UND*	00000000 int_55
00000000         *UND*	00000000 int_56
00000000         *UND*	00000000 int_57
00000000         *UND*	00000000 int_58
00000000         *UND*	00000000 int_59
00000000         *UND*	00000000 int_60
00000000         *UND*	00000000 int_61
00000000         *UND*	00000000 int_62
00000000         *UND*	00000000 int_63
00000000         *UND*	00000000 int_syscall
000005d1 g     F .text	00000106 pm_init
00000000 g     O .data	00000006 gdtr
00000000         *UND*	00000000 config
00000000         *UND*	00000000 malloc
00000000 g     O .bss	00000004 tss_p
00000000         *UND*	00000000 panic_common
00000020 g     O .data	00000048 gdt



arch/ia32/src/userspace.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 userspace.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000031 userspace



arch/ia32/src/cpu/cpu.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .rodata	0000000c vendor_str
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000000e fpu_disable
0000000e g     F .text	0000000e fpu_enable
0000001c g     F .text	000000db cpu_arch_init
00000000         *UND*	00000000 tss_p
00000000         *UND*	00000000 fpu_fxsr
00000000         *UND*	00000000 fpu_fsr
00000000         *UND*	00000000 syscall_setup_cpu
000000f7 g     F .text	000000de cpu_identify
000001d5 g     F .text	00000065 cpu_print_report
00000000         *UND*	00000000 printf



arch/ia32/src/mm/km.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 km.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000019 km_identity_arch_init
00000000         *UND*	00000000 config
00000019 g     F .text	0000001c km_non_identity_arch_init
00000000         *UND*	00000000 km_non_identity_span_add
00000035 g     F .text	0000000f km_is_non_identity_arch



arch/ia32/src/mm/as.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 as.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000000f as_arch_init
00000000         *UND*	00000000 as_pt_operations
00000000         *UND*	00000000 as_operations



arch/ia32/src/mm/frame.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 frame.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000274 init_e820_memory
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .rodata	00000018 e820names
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 e820counter
00000000         *UND*	00000000 e820table
00000000         *UND*	00000000 zone_create
00000000         *UND*	00000000 frame_adjust_zone_bounds
00000000         *UND*	00000000 zone_external_conf_alloc
00000274 g     F .text	0000007b physmem_print
00000000         *UND*	00000000 printf
000002ef g     F .text	00000061 frame_low_arch_init
00000000         *UND*	00000000 config
00000000 g     O .bss	00000004 hardcoded_unmapped_kdata_size
00000004 g     O .bss	00000004 hardcoded_unmapped_ktext_size
00000000         *UND*	00000000 frame_mark_unavailable
00000350 g     F .text	00000019 frame_high_arch_init



arch/ia32/src/mm/page.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 page.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000056 page_fault
00000000         *UND*	00000000 as_page_fault
00000000         *UND*	00000000 panic_common
00000056 g     F .text	0000013c page_arch_init
00000000         *UND*	00000000 config
00000000         *UND*	00000000 AS_KERNEL
00000000         *UND*	00000000 paging_on
00000000         *UND*	00000000 pt_mapping_operations
00000000         *UND*	00000000 page_mapping_operations
00000000         *UND*	00000000 page_table_lock
00000000         *UND*	00000000 page_mapping_insert
00000000         *UND*	00000000 page_table_unlock
00000000         *UND*	00000000 exc_register



arch/ia32/src/mm/tlb.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 tlb.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000000b tlb_invalidate_all
0000000b g     F .text	0000000b tlb_invalidate_asid
00000016 g     F .text	00000021 tlb_invalidate_pages
00000037 g     F .text	00000005 tlb_arch_init
0000003c g     F .text	00000005 tlb_print



arch/ia32/src/ddi/ddi.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ddi.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .rodata	00000017 __func__.3200
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000186 io_perm_bitmap_install
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 bitmap_initialize
00000000         *UND*	00000000 bitmap_copy
00000000         *UND*	00000000 bitmap_set_range
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 bitmap_size
00000000         *UND*	00000000 gdt_setlimit
00000000         *UND*	00000000 panic_common



arch/ia32/src/drivers/i8254.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 i8254.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000a i8254_claim
0000000a l     F .text	00000038 i8254_irq_handler
00000000 l     O .bss	00000070 i8254_irq
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 clock
00000000         *UND*	00000000 irq_spinlock_lock
00000042 g     F .text	00000083 i8254_init
00000000         *UND*	00000000 irq_initialize
00000000         *UND*	00000000 device_assign_devno
00000000         *UND*	00000000 irq_register
00000000         *UND*	00000000 pic_disable_irqs
00000000         *UND*	00000000 pic_enable_irqs
000000c5 g     F .text	0000003c i8254_normal_operation
00000101 g     F .text	00000117 i8254_calibrate_delay_loop
00000000         *UND*	00000000 asm_delay_loop
00000000         *UND*	00000000 asm_fake_loop
00000000         *UND*	00000000 delay



arch/ia32/src/drivers/i8259.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 i8259.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000066 l     F .text	00000038 pic_spurious
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000002c pic_enable_irqs
0000002c g     F .text	00000024 pic_disable_irqs
00000050 g     F .text	00000016 pic_eoi
00000000         *UND*	00000000 log
0000009e g     F .text	000000bc i8259_init
00000000         *UND*	00000000 exc_register
00000000         *UND*	00000000 enable_irqs_function
00000000         *UND*	00000000 disable_irqs_function
00000000         *UND*	00000000 eoi_function
00000000         *UND*	00000000 irqs_info



arch/ia32/src/boot/multiboot.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  K_TEXT_START	00000000 K_TEXT_START
00000000 l       K_TEXT_START	00000000 multiboot_header
0000004a l       K_TEXT_START	00000000 multiboot_meeting_point
00001020 l       K_DATA_START	00000000 status_prot
000003da l       K_TEXT_START	00000000 pm_early_puts
0000103a l       K_DATA_START	00000000 status_vesa_copy
00000471 l       K_TEXT_START	00000000 vesa_init
00000adc l       K_TEXT_START	00000000 e_vesa_init
00001047 l       K_DATA_START	00000000 status_multiboot_cmdline
000000da l       K_TEXT_START	00000000 no_cmdline
000000a7 l       K_TEXT_START	00000000 skip_loop
000000b2 l       K_TEXT_START	00000000 skip_loop_done
000000b2 l       K_TEXT_START	00000000 space_loop
000000bf l       K_TEXT_START	00000000 space_loop_done
00000a99 l       K_TEXT_START	00000000 default_mode
000000cf l       K_TEXT_START	00000000 cmd_loop
000000d7 l       K_TEXT_START	00000000 cmd_loop_done
0000105c l       K_DATA_START	00000000 status_vesa_real
000000ed l       K_TEXT_START	00000000 vesa_meeting_point
00001069 l       K_DATA_START	00000000 status_prot2
0000018f l       K_TEXT_START	00000000 pse_unsupported
00001028 l       K_DATA_START	00000000 status_pse
000001a0 l       K_TEXT_START	00000000 stack_init
0000102f l       K_DATA_START	00000000 status_non_pse
00001072 l       K_DATA_START	00000000 status_prot3
00000470 l       K_TEXT_START	00000000 early_puts
0000107b l       K_DATA_START	00000000 status_main
000001cf l       K_TEXT_START	00000000 hlt0
00000000 l       K_DATA_START	00000000 page_directory
000001ec l       K_TEXT_START	00000000 floop_pse
000002c0 l       K_TEXT_START	00000000 calc_kernel_end
000002ee l       K_TEXT_START	00000000 find_mem_for_pt
00001018 l       K_DATA_START	00000000 kernel_end
0000101c l       K_DATA_START	00000000 free_area
00000243 l       K_TEXT_START	00000000 use_kernel_end
00001014 l       K_DATA_START	00000000 pt_loc
00000269 l       K_TEXT_START	00000000 floop_pt
00000294 l       K_TEXT_START	00000000 floop
000002fb l       K_TEXT_START	00000000 check_multiboot_map
00000309 l       K_TEXT_START	00000000 use_multiboot_map
00000311 l       K_TEXT_START	00000000 check_memmap_loop
0000032c l       K_TEXT_START	00000000 next_region
00000338 l       K_TEXT_START	00000000 found_region
00000331 l       K_TEXT_START	00000000 next_region_do
0000034b l       K_TEXT_START	00000000 pm_error_halt
00000378 l       K_TEXT_START	00000000 err_cursor_ok
0000037f l       K_TEXT_START	00000000 err_ploop
000003ba l       K_TEXT_START	00000000 err_ploop_end
000003d7 l       K_TEXT_START	00000000 hlt1
0000040c l       K_TEXT_START	00000000 pm_puts_cursor_ok
00000413 l       K_TEXT_START	00000000 pm_puts_ploop
0000044e l       K_TEXT_START	00000000 pm_puts_ploop_end
0000048d l       K_TEXT_START	00000000 vesa_idtr
00000493 l       K_TEXT_START	00000000 vesa_init_real
000004a2 l       K_TEXT_START	00000000 vesa_init_real2
000004cf l       K_TEXT_START	00000000 parse_width
000004f0 l       K_TEXT_START	00000000 parse_width_done
00000a94 l       K_TEXT_START	00000000 default_width
0000054c l       K_TEXT_START	00000000 parse_done
000004fd l       K_TEXT_START	00000000 parse_height
0000051e l       K_TEXT_START	00000000 parse_height_done
00000a96 l       K_TEXT_START	00000000 default_height
0000052b l       K_TEXT_START	00000000 parse_bpp
0000054c l       K_TEXT_START	00000000 parse_bpp_done
00000a98 l       K_TEXT_START	00000000 default_bpp
0000066d l       K_TEXT_START	00000000 no_mode
0000056f l       K_TEXT_START	00000000 next_mode
000005bd l       K_TEXT_START	00000000 set_mode
0000061a l       K_TEXT_START	00000000 vga_not_set
00000694 l       K_TEXT_START	00000000 vga323
000005f7 l       K_TEXT_START	00000000 vga_compat
00000619 l       K_TEXT_START	00000000 vga_not_compat
00000606 l       K_TEXT_START	00000000 vga_loop
00000659 l       K_TEXT_START	00000000 vesa_leave_real
00000665 l       K_TEXT_START	00000000 vesa_leave_real2
00000abd l       K_TEXT_START	00000000 vesa_init_protected
00000681 l       K_TEXT_START	00000000 text_mode
00000000 l    d  K_DATA_START	00000000 K_DATA_START
00000000         *UND*	00000000 unmapped_ktext_start
00000020 g       K_TEXT_START	00000000 multiboot_image_start
00001006 g       K_DATA_START	00000000 bootstrap_gdtr
00001000 g       K_DATA_START	00000000 bootstrap_idtr
0000100c g       K_DATA_START	00000000 multiboot_eax
00001010 g       K_DATA_START	00000000 multiboot_ebx
00000000         *UND*	00000000 bfb_scanline
00000000         *UND*	00000000 bfb_bpp
00000000         *UND*	00000000 bfb_height
00000000         *UND*	00000000 bfb_width
00000000         *UND*	00000000 bfb_green_pos
00000000         *UND*	00000000 bfb_green_size
00000000         *UND*	00000000 bfb_red_pos
00000000         *UND*	00000000 bfb_red_size
00000000         *UND*	00000000 bfb_blue_pos
00000000         *UND*	00000000 bfb_blue_size
00000000         *UND*	00000000 bfb_addr
000001d2 g     F K_TEXT_START	00000046 map_kernel_pse
00000218 g     F K_TEXT_START	000000a8 map_kernel_non_pse
00000000         *UND*	00000000 ia32_pre_main
00000000         *UND*	00000000 main_bsp
00000000         *UND*	00000000 ballocs
00000000         *UND*	00000000 hardcoded_load_address
00000000         *UND*	00000000 hardcoded_ktext_size
00000000         *UND*	00000000 hardcoded_kdata_size
00000000         *UND*	00000000 gdt



arch/ia32/src/boot/multiboot2.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  K_TEXT_START	00000000 K_TEXT_START
00000000 l       K_TEXT_START	00000000 multiboot2_header_start
00000090 l       K_TEXT_START	00000000 multiboot2_header_end
00000010 l       K_TEXT_START	00000000 tag_info_req_start
00000024 l       K_TEXT_START	00000000 tag_info_req_end
00000028 l       K_TEXT_START	00000000 tag_address_start
00000040 l       K_TEXT_START	00000000 tag_address_end
00000040 l       K_TEXT_START	00000000 tag_entry_address_start
0000004c l       K_TEXT_START	00000000 tag_entry_address_end
00000050 l       K_TEXT_START	00000000 tag_flags_start
0000005c l       K_TEXT_START	00000000 tag_flags_end
00000060 l       K_TEXT_START	00000000 tag_framebuffer_start
00000074 l       K_TEXT_START	00000000 tag_framebuffer_end
00000078 l       K_TEXT_START	00000000 tag_module_align_start
00000084 l       K_TEXT_START	00000000 tag_module_align_end
00000088 l       K_TEXT_START	00000000 tag_terminator_start
00000090 l       K_TEXT_START	00000000 tag_terminator_end
000000ba l       K_TEXT_START	00000000 multiboot2_meeting_point
000000e5 l       K_TEXT_START	00000000 pse_unsupported
000000ea l       K_TEXT_START	00000000 stack_init
00000105 l       K_TEXT_START	00000000 hlt0
00000000         *UND*	00000000 unmapped_ktext_start
00000090 g       K_TEXT_START	00000000 multiboot2_image_start
00000000         *UND*	00000000 bootstrap_gdtr
00000000         *UND*	00000000 bootstrap_idtr
00000000         *UND*	00000000 multiboot_eax
00000000         *UND*	00000000 multiboot_ebx
00000000         *UND*	00000000 map_kernel_pse
00000000         *UND*	00000000 map_kernel_non_pse
00000000         *UND*	00000000 ia32_pre_main
00000000         *UND*	00000000 main_bsp



arch/ia32/src/boot/memmap.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memmap.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .comment	00000000 .comment
00000280       O *COM*	00000020 e820table
00000000 g     O .bss	00000001 e820counter



arch/ia32/src/fpu_context.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 fpu_context.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000a fpu_context_f_save
0000000a l     F .text	0000000a fpu_context_f_restore
00000014 l     F .text	0000000b fpu_context_fx_save
0000001f l     F .text	0000000b fpu_context_fx_restore
00000004 l     O .bss	00000004 fpu_save
00000000 l     O .bss	00000004 fpu_restore
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
0000002a g     F .text	00000019 fpu_fxsr
00000043 g     F .text	00000019 fpu_fsr
0000005c g     F .text	0000000a fpu_context_save
00000066 g     F .text	0000000a fpu_context_restore
00000070 g     F .text	00000026 fpu_init



arch/ia32/src/syscall.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 syscall.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000001f syscall_setup_cpu
00000000         *UND*	00000000 sysenter_handler



genarch/src/acpi/acpi.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 acpi.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000001cd acpi_sdt_check
000001cd g     F .text	00000d8d acpi_init
00000000         *UND*	00000000 ebda
00000008 g     O .bss	00000004 acpi_rsdp
00000000         *UND*	00000000 km_map
00000000 g     O .bss	00000004 acpi_xsdt
00000004 g     O .bss	00000004 acpi_rsdt
00000000 g     O .data	0000000c signature_map
00000000         *UND*	00000000 log
00000000         *UND*	00000000 acpi_madt



genarch/src/acpi/madt.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 madt.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000014 madt_irq_to_pin
00000060 l     O .data	00000040 isa_irq_map
00000014 l     F .text	00000023 madt_cmp
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000037 l     F .text	00000072 madt_cpu_apic_id
00000014 l     O .bss	00000004 madt_l_apic_entry_cnt
00000018 l     O .bss	00000004 madt_l_apic_entry_index
0000000c l     O .bss	00000004 madt_entries_index
00000068 l     O .rodata	00000011 __func__.2510
000000a9 l     F .text	0000007b madt_cpu_bootstrap
00000054 l     O .rodata	00000013 __func__.2518
00000124 l     F .text	0000007a madt_cpu_enabled
00000040 l     O .rodata	00000011 __func__.2514
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata	00000000 .rodata
00000010 l     O .bss	00000004 madt_io_apic_entry_cnt
00000024 l     O .rodata	00000019 __func__.2542
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 bsp_l_apic
0000019e g     F .text	00000259 acpi_madt_parse
00000008 g     O .bss	00000004 acpi_madt
00000000         *UND*	00000000 l_apic
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 gsort
00000000         *UND*	00000000 config
00000000         *UND*	00000000 io_apic
00000000         *UND*	00000000 apic_id_mask
00000020 g     O .data	00000024 entry
00000000         *UND*	00000000 log
00000000 g     O .data	00000010 madt_config_operations
00000000 g     O .bss	00000004 madt_io_apic_entries
00000004 g     O .bss	00000004 madt_l_apic_entries



genarch/src/mm/page_pt.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 page_pt.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     F .text	000001fa pt_mapping_make_global
00000058 l     O .rodata	00000017 __func__.3276
000001fa l     F .text	000001a0 pt_mapping_insert
00000000 l     O .rodata	00000012 __func__.3222
0000039a l     F .text	000001f4 pt_mapping_update
00000028 l     O .rodata	00000019 __func__.3248
00000044 l     O .rodata	00000012 __func__.3267
0000058e l     F .text	0000015b pt_mapping_remove
00000014 l     O .rodata	00000012 __func__.3233
000006e9 l     F .text	000000db pt_mapping_find
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 AS_KERNEL
00000000         *UND*	00000000 config
00000000         *UND*	00000000 frame_alloc
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 page_table_locked
00000000         *UND*	00000000 km_is_non_identity
00000000         *UND*	00000000 frame_free
00000000 g     O .data	00000014 pt_mapping_operations



genarch/src/mm/as_pt.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 as_pt.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000d pt_locked
0000000d l     F .text	0000001a pt_unlock
00000027 l     F .text	0000001b ptl0_destroy
00000042 l     F .text	00000129 ptl0_create
0000016b l     F .text	0000002e pt_lock
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 mutex_locked
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 frame_free
00000000         *UND*	00000000 frame_alloc
00000000         *UND*	00000000 AS_KERNEL
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 memsetb
00000000 g     O .data	00000014 as_pt_operations



genarch/src/softint/division.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 division.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000079 __divsi3
00000079 g     F .text	00000128 __divdi3
000001a1 g     F .text	0000004e __udivsi3
000001ef g     F .text	000000d2 __udivdi3
000002c1 g     F .text	00000056 __modsi3
00000317 g     F .text	000000d0 __moddi3
000003e7 g     F .text	0000003f __umodsi3
00000426 g     F .text	0000008b __umoddi3
000004b1 g     F .text	00000083 __divmodsi3
00000534 g     F .text	0000006f __udivmodsi3
000005a3 g     F .text	00000172 __divmoddi3
00000715 g     F .text	0000010f __udivmoddi3



genarch/src/softint/multiplication.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 multiplication.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000019c __muldi3



genarch/src/fb/font-8x16.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 font-8x16.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000008a9 fb_font_glyph
00000000 g     O .data	0000b530 fb_font



genarch/src/fb/fb.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 fb.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000002f rgb_0888
0000002f l     F .text	0000003e bgr_0888
0000006d l     F .text	0000003f rgb_8880
000000ac l     F .text	00000046 bgr_8880
000000f2 l     F .text	0000001d rgb_888
0000010f l     F .text	0000001b bgr_888
0000012a l     F .text	00000033 rgb_555_be
0000015d l     F .text	00000031 rgb_555_le
0000018e l     F .text	0000002f rgb_565_be
000001bd l     F .text	0000002c rgb_565_le
000001e9 l     F .text	0000002c bgr_323
00000215 l     F .text	000002c0 fb_redraw_internal
000004d5 l     F .text	00000029 fb_redraw
000004fe l     F .text	00000141 fb_scroll_up
0000063f l     F .text	0000013f fb_scroll_down
0000077e l     F .text	00000115 cursor_remove
00000893 l     F .text	0000065d fb_putchar
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata	00000000 .rodata
00000038 l     O .rodata	00000008 __func__.3777
00000000 l     O .data	00000010 fbdev_ops
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 fb_font_glyph
00000000         *UND*	00000000 console_override
00000000         *UND*	00000000 memsetw
00000ef0 g     F .text	0000062c fb_init
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 outdev_initialize
00000000         *UND*	00000000 spinlock_initialize
00000000         *UND*	00000000 km_map
00000000         *UND*	00000000 fb_font
00000000         *UND*	00000000 ddi_parea_register
00000000         *UND*	00000000 fb_exported
00000000         *UND*	00000000 free
00000000         *UND*	00000000 sysinfo_set_item_val



genarch/src/fb/bfb.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 bfb.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000010f bfb_init
00000018 g     O .bss	00000004 bfb_addr
00000014 g     O .bss	00000004 bfb_width
00000010 g     O .bss	00000004 bfb_height
0000000c g     O .bss	00000002 bfb_bpp
00000008 g     O .bss	00000004 bfb_scanline
00000000         *UND*	00000000 fb_init
00000000         *UND*	00000000 stdout_wire
00000005 g     O .bss	00000001 bfb_red_pos
00000004 g     O .bss	00000001 bfb_red_size
00000003 g     O .bss	00000001 bfb_green_pos
00000002 g     O .bss	00000001 bfb_green_size
00000001 g     O .bss	00000001 bfb_blue_pos
00000000 g     O .bss	00000001 bfb_blue_size



genarch/src/drivers/i8042/i8042.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 i8042.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000026 i8042_claim
00000026 l     F .text	0000004e i8042_irq_handler
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .rodata	0000000b __func__.3371
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 indev_push_character
00000074 g     F .text	0000005d i8042_init
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 irq_initialize
00000000         *UND*	00000000 device_assign_devno
000000d1 g     F .text	00000142 i8042_wire
00000000         *UND*	00000000 delay
00000000         *UND*	00000000 irq_register
00000000         *UND*	00000000 panic_common
00000213 g     F .text	00000117 i8042_cpu_reset



genarch/src/kbrd/kbrd.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 kbrd.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	000001b6 kkbrd
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .bss	00000008 kbrd_raw_ops
00000000 l     O .rodata	0000000a __func__.3530
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 indev_pop_character
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 sc_primary_map
00000000         *UND*	00000000 sc_secondary_map
00000000         *UND*	00000000 indev_signal
00000000         *UND*	00000000 indev_push_character
000001b6 g     F .text	000000b9 kbrd_init
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 indev_initialize
00000000         *UND*	00000000 spinlock_initialize
00000000         *UND*	00000000 free
0000026f g     F .text	00000089 kbrd_wire
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 panic_common



genarch/src/kbrd/scanc_pc.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 scanc_pc.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .comment	00000000 .comment
00000000 g     O .data	00000200 sc_secondary_map
00000200 g     O .data	00000200 sc_primary_map



genarch/src/multiboot/multiboot.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 multiboot.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000071 multiboot_extract_command
00000000         *UND*	00000000 str_chr
00000000         *UND*	00000000 str_ncpy
00000000         *UND*	00000000 str_size
00000071 g     F .text	0000008c multiboot_extract_argument
00000000         *UND*	00000000 str_cpy
000000fd g     F .text	000002f4 multiboot_info_parse
00000000         *UND*	00000000 e820counter
00000000         *UND*	00000000 e820table
00000000         *UND*	00000000 bargs
00000000         *UND*	00000000 init



genarch/src/multiboot/multiboot2.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 multiboot2.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000001e2 multiboot2_info_parse
00000000         *UND*	00000000 e820counter
00000000         *UND*	00000000 e820table
00000000         *UND*	00000000 init
00000000         *UND*	00000000 multiboot_extract_command
00000000         *UND*	00000000 multiboot_extract_argument
00000000         *UND*	00000000 bfb_addr
00000000         *UND*	00000000 bfb_width
00000000         *UND*	00000000 bfb_height
00000000         *UND*	00000000 bfb_bpp
00000000         *UND*	00000000 bfb_scanline
00000000         *UND*	00000000 bfb_red_pos
00000000         *UND*	00000000 bfb_red_size
00000000         *UND*	00000000 bfb_green_pos
00000000         *UND*	00000000 bfb_green_size
00000000         *UND*	00000000 bfb_blue_pos
00000000         *UND*	00000000 bfb_blue_size



genarch/src/drivers/ega/ega.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ega.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	000001bc ega_redraw
000001bc l     F .text	00000c62 ega_putchar
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .data	00000010 egadev_ops
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 console_override
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 memmove
00000000         *UND*	00000000 memsetw
00000e1e g     F .text	000005d8 ega_init
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 outdev_initialize
00000000         *UND*	00000000 irq_spinlock_initialize
00000000         *UND*	00000000 km_map
00000000         *UND*	00000000 ddi_parea_register
00000000         *UND*	00000000 fb_exported
00000000         *UND*	00000000 sysinfo_set_item_val
00000000         *UND*	00000000 free



genarch/src/ddi/ddi-bitmap.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ddi-bitmap.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000100 ddi_iospace_enable_arch
00000000         *UND*	00000000 bitmap_size
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 bitmap_initialize
00000000         *UND*	00000000 bitmap_set_range
00000000         *UND*	00000000 bitmap_copy
00000000         *UND*	00000000 free
00000000         *UND*	00000000 bitmap_clear_range
00000100 g     F .text	00000066 ddi_iospace_disable_arch



generic/src/adt/avl.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 avl.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	00000052 repair.isra.0.part.1
00000000 l     O .rodata	00000007 __func__.1117
00000052 l     F .text	000005b2 _avltree_walk
00000018 l     O .rodata	0000000f __func__.1102
00000008 l     O .rodata	0000000f __func__.1126
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 panic_common
00000604 g     F .text	0000003e avltree_search
00000642 g     F .text	00000018 avltree_find_min
0000065a g     F .text	00000321 avltree_insert
0000097b g     F .text	0000049c avltree_delete
00000e17 g     F .text	00000030 avltree_delete_min
00000e47 g     F .text	000006fa avltree_walk



generic/src/adt/bitmap.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 bitmap.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000020 l     O .rodata	00000011 __func__.1119
0000000c l     O .rodata	00000013 __func__.1134
00000000 l     O .rodata	0000000c __func__.1149
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000016 bitmap_size
00000016 g     F .text	0000001a bitmap_initialize
00000030 g     F .text	0000013a bitmap_set_range
00000000         *UND*	00000000 panic_common
0000016a g     F .text	00000142 bitmap_clear_range
000002ac g     F .text	000000e0 bitmap_copy
0000038c g     F .text	000001c2 bitmap_allocate_range



generic/src/adt/btree.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 btree.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     F .text	0000071d rotate_from_right
0000071d l     F .text	000002d3 btree_destroy_subtree
00000000 l     O .bss	00000004 btree_node_slab
000009f0 l     F .text	0000087c rotate_from_left
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
0000126c l     F .text	00000c93 _btree_insert
00000080 l     O .rodata	0000000b __func__.2125
0000008c l     O .rodata	0000000d __func__.2145
00000070 l     O .rodata	0000000e __func__.2178
00000060 l     O .rodata	0000000d __func__.2162
00000040 l     O .rodata	0000001f __func__.2206
00000020 l     O .rodata	00000020 __func__.2211
00000000 l     O .rodata	0000000c __func__.2220
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 slab_free
00000000         *UND*	00000000 slab_alloc
00001eff g     F .text	00000041 btree_init
00000000         *UND*	00000000 slab_cache_create
00001f40 g     F .text	000000f9 btree_create
00002039 g     F .text	0000004a btree_destroy
00002083 g     F .text	00000258 btree_insert
000022db g     F .text	00000d99 btree_remove
00003074 g     F .text	00000179 btree_search
000031ed g     F .text	00000072 btree_leaf_node_left_neighbour
0000325f g     F .text	00000072 btree_leaf_node_right_neighbour
000032d1 g     F .text	00000280 btree_print
00000000         *UND*	00000000 printf
00003551 g     F .text	0000002a btree_count



generic/src/adt/cht.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cht.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000005 dummy_remove_callback
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	0000002c make_link.part.0
0000022c l     O .rodata	0000000a __func__.4119
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
0000002c l     F .text.unlikely	0000002c calc_bucket_idx.part.1
00000204 l     O .rodata	00000010 __func__.4086
00000058 l     F .text.unlikely	0000002c calc_node_hash.part.2
000001c8 l     O .rodata	0000000f __func__.4109
00000084 l     F .text.unlikely	0000002c node_hash.part.3
000001d8 l     O .rodata	0000000a __func__.4104
000000b0 l     F .text.unlikely	0000002c calc_split_hash.part.5
00000140 l     O .rodata	00000010 __func__.4081
000000dc l     F .text.unlikely	0000002c next_wnd.part.6
0000006c l     O .rodata	00000009 __func__.4129
00000108 l     F .text.unlikely	0000002c _cas_link.part.8
00000174 l     O .rodata	0000000a __func__.4147
00000134 l     F .text.unlikely	0000002c help_head_move.part.9
00000164 l     O .rodata	0000000f __func__.3874
00000160 l     F .text.unlikely	0000002c unlink_from_pred.isra.11.part.12
000000e8 l     O .rodata	00000011 __func__.3800
0000018c l     F .text.unlikely	0000002c free_later.part.13
000000dc l     O .rodata	0000000b __func__.3951
00000005 l     F .text	00000040 mark_const
00000244 l     O .rodata	0000000c sentinel
00000045 l     F .text	00000042 mark_join_node
00000087 l     F .text	0000034d split_bucket.part.15
0000010c l     O .rodata	00000010 __func__.3833
0000142c l     F .text	00000774 resize_table
00000180 l     O .rodata	0000000d __func__.3901
000003d4 l     F .text	00000113 complete_head_move
00000150 l     O .rodata	00000013 __func__.3890
000004e7 l     F .text	0000039e find_wnd_and_gc
00000885 l     F .text	000003c9 cleanup_join_node
00000088 l     O .rodata	00000015 __func__.3819
000000a0 l     O .rodata	00000012 __func__.4049
00000c4e l     F .text	00000481 join_buckets.part.16
0000011c l     O .rodata	00000012 __func__.3943
00000130 l     O .rodata	0000000d __func__.3932
000010cf l     F .text	0000035d upd_resizing_head
00000190 l     O .rodata	00000012 __func__.3866
000000b4 l     O .rodata	00000015 __func__.4066
000000fc l     O .rodata	00000010 __func__.3843
00000078 l     O .rodata	0000000d __func__.4026
000000cc l     O .rodata	0000000d __func__.3972
00001ba0 l     F .text	000002d9 find_duplicate
000001a4 l     O .rodata	0000000f __func__.3735
00001e79 l     F .text	000001a3 join_completed.isra.7
0000001c l     O .rodata	0000000f __func__.3848
0000201c l     F .text	0000086f find_resizing
000001e4 l     O .rodata	0000000e __func__.3663
000001f4 l     O .rodata	0000000e __func__.3676
00000238 l     O .rodata	0000000b __func__.3595
00000220 l     O .rodata	0000000c __func__.3621
00000214 l     O .rodata	0000000a __func__.3640
000001b4 l     O .rodata	00000013 __func__.3653
00000050 l     O .rodata	0000000a __func__.3718
0000005c l     O .rodata	0000000e __func__.3728
0000003c l     O .rodata	00000012 __func__.3692
0000002c l     O .rodata	0000000f __func__.3746
00000010 l     O .rodata	0000000a __func__.3784
00000000 l     O .rodata	00000010 __func__.3756
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 rcu_call
00000000         *UND*	00000000 workq_global_enqueue_noblock
00000000         *UND*	00000000 _rcu_preempted_unlock
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 rcu_synchronize
00000000         *UND*	00000000 free
0000288b g     F .text	00000132 cht_create_simple
000029bd g     F .text	0000019a cht_create
00002b57 g     F .text	0000008d cht_destroy
00000000         *UND*	00000000 rcu_barrier
00002be4 g     F .text	0000003a cht_destroy_unsafe
00002c1e g     F .text	00000316 cht_find
00000000         *UND*	00000000 rcu_read_locked
00002f34 g     F .text	00000313 cht_find_lazy
00003247 g     F .text	00000108 cht_find_next
0000334f g     F .text	00000101 cht_find_next_lazy
00003450 g     F .text	000003a7 cht_insert
000037f7 g     F .text	00000690 cht_insert_unique
00003e87 g     F .text	000008e7 cht_remove_key
0000476e g     F .text	0000087f cht_remove_item



generic/src/adt/hash_table.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 hash_table.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000038 l     O .rodata	00000012 __func__.2005
00000024 l     O .rodata	00000012 __func__.2015
00000014 l     O .rodata	00000010 __func__.2021
00000000 l     O .rodata	00000012 __func__.2032
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000174 hash_table_create
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 panic_common
00000174 g     F .text	00000110 hash_table_insert
00000284 g     F .text	00000120 hash_table_find
000003a4 g     F .text	000001e5 hash_table_remove



generic/src/adt/list.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 list.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000002d list_member
0000002d g     F .text	0000002e list_splice
0000005b g     F .text	00000031 list_count



generic/src/console/chardev.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 chardev.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .rodata	00000015 __func__.2017
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000050 indev_initialize
00000000         *UND*	00000000 waitq_initialize
00000000         *UND*	00000000 irq_spinlock_initialize
00000050 g     F .text	000000c9 indev_push_character
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 waitq_wakeup
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 panic_common
00000119 g     F .text	000000e8 indev_pop_character
00000000         *UND*	00000000 haltstate
00000000         *UND*	00000000 waitq_sleep_timeout
00000000         *UND*	00000000 printf
00000201 g     F .text	00000020 indev_signal
00000221 g     F .text	00000045 outdev_initialize
00000000         *UND*	00000000 spinlock_initialize
00000266 g     F .text	00000021 check_poll



generic/src/console/console.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 console.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000044 stdout_write
00000044 l     F .text	0000003c stdout_redraw
00000080 l     F .text	0000003c stdout_scroll_up
000000bc l     F .text	0000003c stdout_scroll_down
000000f8 l     F .text	0000008a stdin_signal
000008c4 l     O .bss	00000004 kio_inited
000008b4 l     O .bss	00000004 kio_uspace
000008bc l     O .bss	00000004 kio_len
000008c0 l     O .bss	00000004 kio_start
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000010 l     O .data	00000008 stdin_ops
00000060 l     O .bss	00000840 stdin_sink
00000000 l     O .data	00000010 stdout_ops
00000020 l     O .bss	00000024 stdout_source
000008a0 l     O .bss	00000014 kio_parea
000008b8 l     O .bss	00000004 kio_stored
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     O .bss	00000004 stdout
00000182 g     F .text	0000007c kio_update
00000018 g     O .data	00000008 kio_lock
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 event_notify
000001fe g     F .text	0000003d stdin_wire
00000004 g     O .bss	00000004 stdin
00000000         *UND*	00000000 indev_initialize
0000023b g     F .text	0000005e stdout_wire
00000000         *UND*	00000000 outdev_initialize
00000299 g     F .text	0000008c kio_init
00008000       O *COM*	00001000 kio
00000000         *UND*	00000000 ddi_parea_register
00000000         *UND*	00000000 sysinfo_set_item_val
00000000         *UND*	00000000 event_set_unmask_callback
00000325 g     F .text	0000008c grab_console
00000008 g     O .bss	00000001 console_override
00000000         *UND*	00000000 indev_push_character
000003b1 g     F .text	0000004b release_console
000003fc g     F .text	00000091 sys_debug_console
0000048d g     F .text	00000083 kio_flush
00000510 g     F .text	0000006b kio_push_char
0000057b g     F .text	000001b8 putchar
00000000         *UND*	00000000 early_putchar
00000733 g     F .text	00000362 gets
00000000         *UND*	00000000 chr_encode
00000000         *UND*	00000000 indev_pop_character
00000000         *UND*	00000000 str_lsize
00000a95 g     F .text	00000021 getc
00000ab6 g     F .text	0000018e sys_kio
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 free
00000000         *UND*	00000000 printf



generic/src/console/prompt.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 prompt.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000020 l     O .rodata	00000021 __func__.1861
00000000 l     O .rodata	0000001a __func__.1868
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000000c9 console_prompt_display_all_hints
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 indev_pop_character
00000000         *UND*	00000000 panic_common
000000c9 g     F .text	000000dc console_prompt_more_hints



generic/src/cpu/cpu.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000254 cpu_init
00000000         *UND*	00000000 config
00000004       O *COM*	00000004 cpus
00000000         *UND*	00000000 cpu_identify
00000000         *UND*	00000000 cpu_arch_init
00000000         *UND*	00000000 rcu_cpu_init
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 frame_alloc
00000000         *UND*	00000000 irq_spinlock_initialize
00000000         *UND*	00000000 panic_common
00000254 g     F .text	0000006e cpu_list
00000000         *UND*	00000000 cpu_print_report
00000000         *UND*	00000000 printf



generic/src/cpu/cpu_mask.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cpu_mask.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	00000029 cpu_mask_count.part.0
00000010 l     O .rodata	0000000f __func__.1987
00000029 l     F .text.unlikely	00000029 cpu_mask_none.part.1
00000000 l     O .rodata	0000000e __func__.2002
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 panic_common
00000000 g     F .text	00000015 cpu_mask_size
00000000         *UND*	00000000 config
00000015 g     F .text	000000c6 cpu_mask_active
000000db g     F .text	00000052 cpu_mask_all
0000012d g     F .text	00000031 cpu_mask_none
0000015e g     F .text	0000001e cpu_mask_set
0000017c g     F .text	00000020 cpu_mask_reset
0000019c g     F .text	00000018 cpu_mask_is_set
000001b4 g     F .text	00000035 cpu_mask_is_none



generic/src/ddi/ddi.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ddi.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	0000002c physmem_unmap.part.1
00000024 l     O .rodata	0000000e __func__.3240
00000000 l     O .bss	0000000c parea_btree
00000020 l     O .bss	00000020 parea_lock
00000034 l     O .rodata	0000000c __func__.3230
00000018 l     O .rodata	0000000b __func__.3286
00000000 l     O .rodata	00000015 __func__.3296
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 panic_common
00000000 g     F .text	00000028 ddi_init
00000000         *UND*	00000000 btree_create
00000000         *UND*	00000000 mutex_initialize
00000028 g     F .text	0000005e ddi_parea_register
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 btree_insert
00000000         *UND*	00000000 mutex_unlock
00000086 g     F .text	000002b5 sys_physmem_map
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 cap_get
00000000         *UND*	00000000 btree_search
00000000         *UND*	00000000 zones
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 find_zone
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 phys_backend
00000000         *UND*	00000000 as_area_create
00000000         *UND*	00000000 copy_to_uspace
00000000         *UND*	00000000 as_area_destroy
0000033b g     F .text	00000034 sys_physmem_unmap
0000036f g     F .text	0000010c sys_iospace_enable
00000000         *UND*	00000000 tasks_lock
00000000         *UND*	00000000 task_find_by_id
00000000         *UND*	00000000 irq_spinlock_exchange
00000000         *UND*	00000000 ddi_iospace_enable_arch
0000047b g     F .text	0000010c sys_iospace_disable
00000000         *UND*	00000000 ddi_iospace_disable_arch
00000587 g     F .text	00000256 sys_dmamem_map
00000000         *UND*	00000000 page_find_mapping
00000000         *UND*	00000000 frame_alloc
00000000         *UND*	00000000 frame_free
000007dd g     F .text	00000029 sys_dmamem_unmap



generic/src/ddi/irq.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 irq.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000014 irq_ht_hash
00000004 l     O .bss	00000004 buckets
00000014 l     F .text	0000000a irq_lin_hash
0000001e l     F .text	0000001e irq_lin_remove
0000003c l     F .text	00000076 irq_ht_compare
000000b2 l     F .text	00000061 irq_lin_compare
00000113 l     F .text	0000001e irq_ht_remove
0000000c l     O .data	0000000c irq_ht_ops
00000008 l     O .bss	00000010 irq_kernel_hash_table
00000000 l     O .data	0000000c irq_lin_ops
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000028 l     O .data	00000010 irq_kernel_hash_table_lock
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 irq_spinlock_lock
00000131 g     F .text	000000ac irq_init
00000000 g     O .bss	00000004 last_inr
00000010       O *COM*	00000004 irq_uspace_hash_table
00000000         *UND*	00000000 hash_table_create
000001dd g     F .text	0000006b irq_initialize
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 irq_spinlock_initialize
00000000         *UND*	00000000 irq_initialize_arch
00000248 g     F .text	00000080 irq_register
00000000         *UND*	00000000 hash_table_insert
000002c8 g     F .text	0000014c irq_dispatch_and_lock
00000000         *UND*	00000000 console_override
00000000         *UND*	00000000 hash_table_find
00000018 g     O .data	00000010 irq_uspace_hash_table_lock



generic/src/ddi/device.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 device.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	00000029 device_assign_devno.part.0
00000000 l     O .rodata	00000014 __func__.1629
00000000 l     O .bss	00000004 last
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 panic_common
00000000 g     F .text	0000001d device_assign_devno
0000001d g     F .text	0000001d sys_device_assign_devno



generic/src/debug/symtab.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 symtab.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000000fc symtab_name_lookup
00000000         *UND*	00000000 symbol_table
000000fc g     F .text	000000c7 symtab_fmt_name_lookup
000001c3 g     F .text	000000f2 symtab_addr_lookup
00000000         *UND*	00000000 str_length
00000000         *UND*	00000000 str_chr
00000000         *UND*	00000000 str_lcmp
00000000         *UND*	00000000 str_lsize
000002b5 g     F .text	000000ca symtab_print_search
00000000         *UND*	00000000 printf
0000037f g     F .text	000000b8 symtab_hints_enum



generic/src/debug/stacktrace.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 stacktrace.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000026 kernel_symbol_resolve
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 symtab_name_lookup
00000026 g     F .text	000000e3 stack_trace_ctx
00000000         *UND*	00000000 printf
00000109 g     F .text	00000037 stack_trace
00000000         *UND*	00000000 frame_pointer_get
00000000         *UND*	00000000 program_counter_get
00000010 g     O .data	00000010 kst_ops
00000140 g     F .text	00000046 stack_trace_istate
00000000 g     O .data	00000010 ust_ops
00000000         *UND*	00000000 uspace_stack_trace_context_validate
00000000         *UND*	00000000 uspace_frame_pointer_prev
00000000         *UND*	00000000 uspace_return_address_get
00000000         *UND*	00000000 kernel_stack_trace_context_validate
00000000         *UND*	00000000 kernel_frame_pointer_prev
00000000         *UND*	00000000 kernel_return_address_get



generic/src/debug/panic.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 panic.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000027f panic_common
00000000         *UND*	00000000 console_override
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 vprintf
00000000         *UND*	00000000 istate_decode
00000000         *UND*	00000000 stack_trace
00000000         *UND*	00000000 halt



generic/src/debug/debug.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 debug.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .comment	00000000 .comment



generic/src/interrupt/interrupt.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 interrupt.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	00000088 fault_from_uspace_core
00000088 l     F .text	000001e3 cmd_exc_print
00000000 l     O .bss	00000101 flag_buf
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	00000029 exc_register.part.2
00000010 l     O .rodata	0000000d __func__.3769
00000000 l     O .rodata	0000000d __func__.3775
00000629 l     F .text	0000004a exc_undef
00000000 l     O .data	0000002c exc_info
00000000 l    d  .rodata	00000000 .rodata
0000002c l     O .data	00000014 exc_argv
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 istate_decode
00000000         *UND*	00000000 stack_trace_istate
00000000         *UND*	00000000 vprintf
00000000         *UND*	00000000 task_kill_self
00000000         *UND*	00000000 str_cmp
00000040 g     O .data	00000010 exctbl_lock
00000000         *UND*	00000000 irq_spinlock_lock
00000700       O *COM*	00000020 exc_table
00000000         *UND*	00000000 order_suffix
00000000         *UND*	00000000 symtab_fmt_name_lookup
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 stdin
00000000         *UND*	00000000 indev_pop_character
00000000         *UND*	00000000 panic_common
0000026b g     F .text	000000a0 exc_register
0000030b g     F .text	000002e9 exc_dispatch
00000000         *UND*	00000000 thread_update_accounting
00000000         *UND*	00000000 thread_exit
000005f4 g     F .text	00000014 fault_from_uspace
00000608 g     F .text	00000021 fault_if_from_uspace
00000673 g     F .text	00000013 istate_get
00000686 g     F .text	000000a3 exc_init
00000000         *UND*	00000000 cmd_initialize
00000000         *UND*	00000000 cmd_register



generic/src/log/log.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 log.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000010d log_append
0000000c l     O .bss	00000004 log_current_len
00000008 l     O .bss	00000004 next_for_uspace
00000010 l     O .bss	00000004 log_current_start
0000010d l     F .text	00000082 log_printf_wstr_write
0000018f l     F .text	00000053 log_printf_str_write
000001e2 l     F .text	0000007f log_update
00000018 l     O .bss	00000004 log_inited
00000000 l     O .data	00000008 log_lock
00000014 l     O .bss	00000004 log_counter
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     O .bss	00000004 log_used
00000004 g     O .bss	00000004 log_start
00008000       O *COM*	00001000 log_buffer
00000000         *UND*	00000000 kio_push_char
00000000         *UND*	00000000 chr_encode
00000000         *UND*	00000000 str_decode
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 event_notify
00000261 g     F .text	00000026 log_init
00000000         *UND*	00000000 event_set_unmask_callback
00000287 g     F .text	0000008a log_begin
00000000         *UND*	00000000 kio_lock
00000311 g     F .text	00000107 log_end
00000000         *UND*	00000000 kio_flush
00000000         *UND*	00000000 kio_update
00000418 g     F .text	00000036 log_vprintf
00000000         *UND*	00000000 printf_core
0000044e g     F .text	00000036 log_printf
00000484 g     F .text	000000c7 log
0000054b g     F .text	00000285 sys_klog
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 free
00000000         *UND*	00000000 copy_to_uspace



generic/src/main/main.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	00000222 main_bsp_separated_stack
00000222 l     F .text	0000002a main_ap_separated_stack
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 the_initialize
00000000         *UND*	00000000 version_print
00000000         *UND*	00000000 kconsole_init
00000000         *UND*	00000000 exc_init
00000000         *UND*	00000000 arch_ops
00000000         *UND*	00000000 km_identity_init
00000000         *UND*	00000000 frame_init
00000000         *UND*	00000000 slab_cache_init
00000000         *UND*	00000000 ra_init
00000000         *UND*	00000000 sysinfo_init
00000000         *UND*	00000000 btree_init
00000000         *UND*	00000000 as_init
00000000         *UND*	00000000 page_init
00000000         *UND*	00000000 tlb_init
00000000         *UND*	00000000 km_non_identity_init
00000000         *UND*	00000000 ddi_init
00000000         *UND*	00000000 reserve_init
00000000         *UND*	00000000 smp_init
00000000         *UND*	00000000 slab_enable_cpucache
00000000         *UND*	00000000 zones_total_size
00000000         *UND*	00000000 bin_order_suffix
00000e40 g     O .bss	00000030 config
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 cpu_init
00000000         *UND*	00000000 calibrate_delay_loop
00000000         *UND*	00000000 smp_call_init
00000000         *UND*	00000000 workq_global_init
00000000         *UND*	00000000 clock_counter_init
00000000         *UND*	00000000 timeout_init
00000000         *UND*	00000000 scheduler_init
00000000         *UND*	00000000 task_init
00000000         *UND*	00000000 thread_init
00000000         *UND*	00000000 futex_init
00000d40 g     O .bss	00000100 bargs
00000000         *UND*	00000000 str_size
00000000         *UND*	00000000 sysinfo_set_item_data
00000020 g     O .bss	00000d04 init
00000000         *UND*	00000000 ipc_init
00000000         *UND*	00000000 event_init
00000000         *UND*	00000000 kio_init
00000000         *UND*	00000000 log_init
00000000         *UND*	00000000 stats_init
00000000         *UND*	00000000 AS_KERNEL
00000000         *UND*	00000000 task_create
00000000         *UND*	00000000 kinit
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 scheduler
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 ap_completion_wq
00000000         *UND*	00000000 waitq_wakeup
0000024c g     F .text	000002c3 main_bsp
00000000         *UND*	00000000 hardcoded_load_address
00000000         *UND*	00000000 hardcoded_kdata_size
00000000         *UND*	00000000 hardcoded_ktext_size
00000004 g     O .bss	00000008 ballocs
00000000 g     O .bss	00000004 stack_safe
00000020       O *COM*	00000020 ctx
00000000         *UND*	00000000 context_save_arch
00000000         *UND*	00000000 context_restore_arch
0000050f g     F .text	000000f4 main_ap
00000000         *UND*	00000000 the_copy



generic/src/main/kinit.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 kinit.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000008 l     O .rodata	00000004 alive
00000000 l     O .rodata	00000006 __func__.4074
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000065e kinit
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 rcu_kinit_init
00000000         *UND*	00000000 workq_global_worker_init
00000000         *UND*	00000000 config
00000000         *UND*	00000000 ap_completion_wq
00000000         *UND*	00000000 waitq_initialize
00000000         *UND*	00000000 kmp
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 cpus
00000000         *UND*	00000000 thread_wire
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 thread_join_timeout
00000000         *UND*	00000000 kcpulb
00000000         *UND*	00000000 arch_ops
00000000         *UND*	00000000 kload
00000000         *UND*	00000000 stdin
00000000         *UND*	00000000 kconsole_thread
00000000         *UND*	00000000 sysinfo_set_item_val
00000000         *UND*	00000000 init
00000000         *UND*	00000000 str_length
00000000         *UND*	00000000 str_size
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 snprintf
00000000         *UND*	00000000 sysinfo_set_item_data
00000000         *UND*	00000000 program_ready
00000000         *UND*	00000000 cap_set
00000000         *UND*	00000000 ipc_phone_0
00000000         *UND*	00000000 str_cpy
00000000         *UND*	00000000 km_map
00000000         *UND*	00000000 program_create_from_image
00000000         *UND*	00000000 log
00000000         *UND*	00000000 init_rd
00000000         *UND*	00000000 task_hold
00000000         *UND*	00000000 thread_sleep
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 panic_common



generic/src/main/uinit.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 uinit.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000059 uinit
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 udebug_stoppable_end
00000000         *UND*	00000000 free
00000000         *UND*	00000000 userspace



generic/src/main/version.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 version.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000004c version_print
00000000         *UND*	00000000 printf



generic/src/main/shutdown.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000031 reboot
00000000         *UND*	00000000 task_done
00000000         *UND*	00000000 log
00000000         *UND*	00000000 arch_reboot
00000000         *UND*	00000000 halt



generic/src/proc/program.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 program.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000139 program_create
00000000         *UND*	00000000 task_create
00000000         *UND*	00000000 anon_backend
00000000         *UND*	00000000 as_area_create
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 uinit
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 task_destroy
00000000         *UND*	00000000 free
00000000         *UND*	00000000 as_area_destroy
00000139 g     F .text	000001e3 program_create_from_image
00000000         *UND*	00000000 as_create
00000000         *UND*	00000000 elf_load
00000000         *UND*	00000000 as_destroy
00000000 g     O .bss	00000004 program_loader
00000000         *UND*	00000000 log
0000031c g     F .text	000001f6 program_create_loader
00000000         *UND*	00000000 elf_error
00000512 g     F .text	00000012 program_ready
00000000         *UND*	00000000 thread_ready
00000524 g     F .text	00000147 sys_program_spawn_loader
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 cap_get
00000000         *UND*	00000000 cap_set



generic/src/proc/scheduler.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 scheduler.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	000008af scheduler_separated_stack
00000014 l     O .rodata	0000001a __func__.3530
00000000 l     O .rodata	00000011 __func__.3502
00000030 l     O .rodata	0000000a __func__.3523
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 irq_spinlock_locked
00000000         *UND*	00000000 task_hold
00000000         *UND*	00000000 as_hold
00000000         *UND*	00000000 workq_after_thread_ran
00000000         *UND*	00000000 rcu_after_thread_ran
00000000         *UND*	00000000 after_thread_ran_arch
00000000         *UND*	00000000 thread_states
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 irq_spinlock_lock
00000004       O *COM*	00000004 nrdy
00000000         *UND*	00000000 irq_spinlock_pass
00000000         *UND*	00000000 list_splice
00000000         *UND*	00000000 as_switch
00000000         *UND*	00000000 before_task_runs_arch
00000000         *UND*	00000000 task_release
00000000         *UND*	00000000 as_release
00000000         *UND*	00000000 before_thread_runs_arch
00000000         *UND*	00000000 rcu_before_thread_runs
00000000         *UND*	00000000 fpu_disable
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 stack_trace_istate
00000000         *UND*	00000000 the_copy
00000000         *UND*	00000000 context_restore_arch
00000000         *UND*	00000000 rcu_thread_exiting
00000000         *UND*	00000000 irq_spinlock_trylock
00000000         *UND*	00000000 delay
00000000         *UND*	00000000 thread_destroy
00000000         *UND*	00000000 fpu_enable
00000000         *UND*	00000000 _waitq_wakeup_unsafe
00000000         *UND*	00000000 log
000008af g     F .text	000001d9 scheduler_fpu_lazy_request
00000000         *UND*	00000000 fpu_context_slab
00000000         *UND*	00000000 slab_alloc
00000000         *UND*	00000000 fpu_context_save
00000000         *UND*	00000000 fpu_context_restore
00000000         *UND*	00000000 fpu_init
00000a88 g     F .text	00000005 scheduler_init
00000a8d g     F .text	000001d5 scheduler
00000000         *UND*	00000000 haltstate
00000000         *UND*	00000000 context_save_arch
00000000         *UND*	00000000 halt
00000c62 g     F .text	000002ad kcpulb
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 thread_sleep
00000000         *UND*	00000000 config
00000000         *UND*	00000000 cpus
00000f0f g     F .text	000001da sched_print_list



generic/src/proc/thread.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 thread.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000035 thread_search_walker
00000035 l     F .text	0000004b thr_destructor
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000080 l     F .text	000000d1 thr_constructor
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000151 l     F .text	000001a7 thread_walker
00000000 l     O .bss	00000004 thread_slab
000000e8 l     O .rodata	0000000d __func__.3581
000000d0 l     O .rodata	00000017 __func__.3577
00000000 l     O .data	00000010 tidlock
00000008 l     O .bss	00000008 last_tid
00001225 l     F .text	00000178 cushion
000000c0 l     O .rodata	0000000f __func__.3598
000000ac l     O .rodata	00000011 __func__.3611
00000098 l     O .rodata	00000013 __func__.3616
0000007c l     O .rodata	00000019 __func__.3621
00000064 l     O .rodata	00000018 __func__.3625
00000050 l     O .rodata	00000014 __func__.3638
00000040 l     O .rodata	0000000e __func__.3642
00000030 l     O .rodata	0000000e __func__.3664
00000014 l     O .rodata	00000019 __func__.3670
00000000 l     O .rodata	00000012 __func__.3680
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 frame_free
00000004       O *COM*	00000004 fpu_context_slab
00000000         *UND*	00000000 slab_free
00000000         *UND*	00000000 irq_spinlock_initialize
00000000         *UND*	00000000 frame_alloc
00000000         *UND*	00000000 mutex_initialize
00000000         *UND*	00000000 order_suffix
00000000         *UND*	00000000 str_cmp
00000000         *UND*	00000000 printf
00000020 g     O .data	0000001c thread_states
000002f8 g     F .text	000000b0 thread_init
00000000         *UND*	00000000 nrdy
00000000         *UND*	00000000 slab_cache_create
0000000c       O *COM*	00000004 threads_tree
000003a8 g     F .text	00000045 thread_wire
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
000003ed g     F .text	000001c3 thread_ready
00000000         *UND*	00000000 irq_spinlock_locked
00000000         *UND*	00000000 workq_before_thread_is_ready
00000000         *UND*	00000000 irq_spinlock_pass
00000000         *UND*	00000000 panic_common
000005b0 g     F .text	000002f1 thread_create
00000000         *UND*	00000000 slab_alloc
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 context_save_arch
00000000         *UND*	00000000 the_initialize
00000000         *UND*	00000000 str_cpy
00000000         *UND*	00000000 timeout_initialize
00000000         *UND*	00000000 waitq_initialize
00000000         *UND*	00000000 udebug_thread_initialize
00000000         *UND*	00000000 thread_create_arch
00000000         *UND*	00000000 rcu_thread_init
00000000         *UND*	00000000 task_hold
00000010 g     O .data	00000010 threads_lock
00000000         *UND*	00000000 avltree_insert
000008a1 g     F .text	000001b2 thread_destroy
00000000         *UND*	00000000 avltree_delete
00000000         *UND*	00000000 task_release
00000a53 g     F .text	0000008c thread_attach
00000adf g     F .text	000000cf thread_exit
00000000         *UND*	00000000 scheduler
00000000         *UND*	00000000 udebug_thread_e_event
00000000         *UND*	00000000 udebug_stoppable_begin
00000000         *UND*	00000000 ipc_cleanup
00000000         *UND*	00000000 futex_task_cleanup
00000bae g     F .text	000000a8 thread_interrupt
00000000         *UND*	00000000 waitq_interrupt_sleep
00000c56 g     F .text	0000008e thread_interrupted
00000ce4 g     F .text	0000006f thread_migration_disable
00000d53 g     F .text	000000a4 thread_migration_enable
00000df7 g     F .text	0000004f thread_sleep
00000000         *UND*	00000000 waitq_sleep_timeout
00000e46 g     F .text	000000c4 thread_join_timeout
00000f0a g     F .text	000000b1 thread_detach
00000fbb g     F .text	0000002f thread_usleep
00000fea g     F .text	00000072 thread_print_list
00000000         *UND*	00000000 avltree_walk
0000105c g     F .text	0000009d thread_exists
00000000         *UND*	00000000 avltree_search
000010f9 g     F .text	0000012c thread_update_accounting
0000139d g     F .text	000000b5 thread_find_by_id
00001452 g     F .text	00000188 thread_stack_trace
000015da g     F .text	00000140 sys_thread_create
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 uinit
00000000         *UND*	00000000 copy_to_uspace
00000000         *UND*	00000000 udebug_thread_b_event_attach
00000000         *UND*	00000000 free
0000171a g     F .text	0000000b sys_thread_exit
00001725 g     F .text	0000002e sys_thread_get_id
00001753 g     F .text	00000031 sys_thread_usleep
00001784 g     F .text	00000015 sys_thread_udelay
00000000         *UND*	00000000 delay



generic/src/proc/task.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 task.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	000000c2 tsk_constructor
000000c2 l     F .text	00000106 task_done_walker
00000000 l     O .bss	00000004 task_slab
00000008 l     O .bss	00000008 task_counter
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000014 l     O .rodata	00000010 __func__.3489
00000000 l     O .rodata	00000014 __func__.3496
00000b50 l     F .text	00000160 task_print_walker
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 irq_spinlock_initialize
00000000         *UND*	00000000 ipc_answerbox_init
00000000         *UND*	00000000 ipc_phone_init
00000000         *UND*	00000000 spinlock_initialize
00000000         *UND*	00000000 mutex_initialize
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 threads_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 waitq_interrupt_sleep
000001c8 g     F .text	0000006d task_init
0000000c       O *COM*	00000004 tasks_tree
00000000         *UND*	00000000 slab_cache_create
00000235 g     F .text	00000110 task_done
00000000         *UND*	00000000 ipc_phone_0
00000000 g     O .data	00000010 tasks_lock
00000000         *UND*	00000000 avltree_walk
00000000         *UND*	00000000 thread_sleep
00000000         *UND*	00000000 avltree_delete
00000000         *UND*	00000000 task_destroy_arch
00000000         *UND*	00000000 futex_task_deinit
00000000         *UND*	00000000 as_release
00000000         *UND*	00000000 slab_free
00000345 g     F .text	000001fd task_create
00000000         *UND*	00000000 slab_alloc
00000000         *UND*	00000000 task_create_arch
00000000         *UND*	00000000 str_cpy
00000000         *UND*	00000000 event_task_init
00000000         *UND*	00000000 udebug_task_init
00000000         *UND*	00000000 futex_task_init
00000000         *UND*	00000000 as_hold
00000000         *UND*	00000000 avltree_insert
00000000         *UND*	00000000 ipc_phone_connect
00000542 g     F .text	00000074 task_destroy
000005b6 g     F .text	0000000c task_hold
000005c2 g     F .text	00000089 task_release
0000064b g     F .text	0000002c sys_task_get_id
00000000         *UND*	00000000 copy_to_uspace
00000677 g     F .text	000000e7 sys_task_set_name
00000000         *UND*	00000000 copy_from_uspace
0000075e g     F .text	000001ff sys_task_kill
00000000         *UND*	00000000 irq_spinlock_locked
00000000         *UND*	00000000 avltree_search
00000000         *UND*	00000000 panic_common
0000095d g     F .text	0000009e task_find_by_id
000009fb g     F .text	00000155 task_get_accounting
00000000         *UND*	00000000 thread_update_accounting
00000000         *UND*	00000000 order_suffix
00000cb0 g     F .text	000001d3 task_kill
00000e83 g     F .text	00000167 task_kill_self
00000000         *UND*	00000000 thread_exit
00000000         *UND*	00000000 event_notify
00000000         *UND*	00000000 udebug_thread_fault
00000fea g     F .text	00000018 sys_task_exit
00001002 g     F .text	00000072 task_print_list



generic/src/proc/the.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 the.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .rodata	00000009 __func__.1595
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000038 the_initialize
00000038 g     F .text	00000071 the_copy
00000000         *UND*	00000000 panic_common



generic/src/syscall/syscall.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 syscall.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000219 syscall_handler
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 thread_update_accounting
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 istate_get
00000000 g     O .data	000000d0 syscall_table
00000000         *UND*	00000000 udebug_syscall_event
00000000         *UND*	00000000 udebug_stoppable_begin
00000000         *UND*	00000000 udebug_stoppable_end
00000000         *UND*	00000000 thread_exit
00000000         *UND*	00000000 log
00000000         *UND*	00000000 task_kill_self
00000000         *UND*	00000000 sys_kio
00000000         *UND*	00000000 sys_thread_create
00000000         *UND*	00000000 sys_thread_exit
00000000         *UND*	00000000 sys_thread_get_id
00000000         *UND*	00000000 sys_thread_usleep
00000000         *UND*	00000000 sys_thread_udelay
00000000         *UND*	00000000 sys_task_get_id
00000000         *UND*	00000000 sys_task_set_name
00000000         *UND*	00000000 sys_task_kill
00000000         *UND*	00000000 sys_task_exit
00000000         *UND*	00000000 sys_program_spawn_loader
00000000         *UND*	00000000 sys_futex_sleep
00000000         *UND*	00000000 sys_futex_wakeup
00000000         *UND*	00000000 sys_smc_coherence
00000000         *UND*	00000000 sys_smp_memory_barrier
00000000         *UND*	00000000 sys_as_area_create
00000000         *UND*	00000000 sys_as_area_resize
00000000         *UND*	00000000 sys_as_area_change_flags
00000000         *UND*	00000000 sys_as_area_destroy
00000000         *UND*	00000000 sys_page_find_mapping
00000000         *UND*	00000000 sys_ipc_call_async_fast
00000000         *UND*	00000000 sys_ipc_call_async_slow
00000000         *UND*	00000000 sys_ipc_answer_fast
00000000         *UND*	00000000 sys_ipc_answer_slow
00000000         *UND*	00000000 sys_ipc_forward_fast
00000000         *UND*	00000000 sys_ipc_forward_slow
00000000         *UND*	00000000 sys_ipc_wait_for_call
00000000         *UND*	00000000 sys_ipc_poke
00000000         *UND*	00000000 sys_ipc_hangup
00000000         *UND*	00000000 sys_ipc_connect_kbox
00000000         *UND*	00000000 sys_ipc_event_subscribe
00000000         *UND*	00000000 sys_ipc_event_unsubscribe
00000000         *UND*	00000000 sys_ipc_event_unmask
00000000         *UND*	00000000 sys_cap_grant
00000000         *UND*	00000000 sys_cap_revoke
00000000         *UND*	00000000 sys_device_assign_devno
00000000         *UND*	00000000 sys_physmem_map
00000000         *UND*	00000000 sys_physmem_unmap
00000000         *UND*	00000000 sys_dmamem_map
00000000         *UND*	00000000 sys_dmamem_unmap
00000000         *UND*	00000000 sys_iospace_enable
00000000         *UND*	00000000 sys_iospace_disable
00000000         *UND*	00000000 sys_ipc_irq_subscribe
00000000         *UND*	00000000 sys_ipc_irq_unsubscribe
00000000         *UND*	00000000 sys_sysinfo_get_keys_size
00000000         *UND*	00000000 sys_sysinfo_get_keys
00000000         *UND*	00000000 sys_sysinfo_get_val_type
00000000         *UND*	00000000 sys_sysinfo_get_value
00000000         *UND*	00000000 sys_sysinfo_get_data_size
00000000         *UND*	00000000 sys_sysinfo_get_data
00000000         *UND*	00000000 sys_debug_console
00000000         *UND*	00000000 sys_klog



generic/src/syscall/copy.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 copy.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000010 l     O .rodata	00000011 __func__.3320
00000000 l     O .rodata	0000000f __func__.3328
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000013a copy_from_uspace
00000000         *UND*	00000000 memcpy_from_uspace
00000000         *UND*	00000000 panic_common
0000013a g     F .text	0000013a copy_to_uspace
00000000         *UND*	00000000 memcpy_to_uspace



generic/src/mm/km.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 km.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	000001c6 km_map_aligned
00001004 l     O .bss	00000004 km_ni_arena
00000044 l     O .rodata	0000000f __func__.3519
00000070 l     O .rodata	00000015 __func__.3493
00000054 l     O .rodata	00000019 __func__.3502
00000018 l     O .rodata	00000016 __func__.3552
00001000 l     O .bss	00000004 deferred_pages
00000000 l     O .bss	00001000 deferred_page
00000000 l     O .rodata	00000016 __func__.3559
00000000 l    d  .rodata	00000000 .rodata
00000030 l     O .rodata	00000011 __func__.3529
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 ra_alloc
00000000         *UND*	00000000 AS_KERNEL
00000000         *UND*	00000000 page_table_lock
00000000         *UND*	00000000 page_mapping_insert
00000000         *UND*	00000000 page_table_unlock
00000000         *UND*	00000000 panic_common
000001c6 g     F .text	00000014 km_identity_init
00000000         *UND*	00000000 km_identity_arch_init
00000000         *UND*	00000000 config
000001da g     F .text	0000006e km_non_identity_init
00000000         *UND*	00000000 ra_arena_create
00000000         *UND*	00000000 km_non_identity_arch_init
00000248 g     F .text	00000009 km_is_non_identity
00000000         *UND*	00000000 km_is_non_identity_arch
00000251 g     F .text	00000086 km_non_identity_span_add
00000000         *UND*	00000000 page_mapping_make_global
00000000         *UND*	00000000 ra_span_add
000002d7 g     F .text	00000023 km_page_alloc
000002fa g     F .text	00000023 km_page_free
00000000         *UND*	00000000 ra_free
0000031d g     F .text	00000038 km_map
00000355 g     F .text	000000d2 km_unmap
00000000         *UND*	00000000 tlb_shootdown_start
00000000         *UND*	00000000 page_mapping_remove
00000000         *UND*	00000000 tlb_invalidate_asid
00000000         *UND*	00000000 tlb_shootdown_finalize
00000427 g     F .text	00000137 km_temporary_page_get
00000000         *UND*	00000000 frame_alloc
00000000         *UND*	00000000 frame_free
0000055e g     F .text	00000169 km_temporary_page_put



generic/src/mm/reserve.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 reserve.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     O .bss	00000004 reserve
00000004 l     O .bss	00000001 reserve_initialized
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .data	00000010 reserve_lock
00000000 l     O .rodata	00000012 __func__.1972
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000019 reserve_init
00000000         *UND*	00000000 frame_total_free_get
00000019 g     F .text	00000135 reserve_try_alloc
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 slab_reclaim
00000000         *UND*	00000000 panic_common
0000014e g     F .text	00000043 reserve_force_alloc
00000191 g     F .text	00000043 reserve_free



generic/src/mm/frame.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 frame.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     F .text	0000047a zones_insert_zone
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
0000047a l     F .text	00000052 zone_get_frame.isra.3.part.4
000000d0 l     O .rodata	0000000f __func__.3480
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	0000002c zone_mark_unavailable.part.6
00000070 l     O .rodata	00000016 __func__.3504
000004cc l     F .text	000001f6 return_config_frames
00000094 l     O .rodata	00000010 __func__.3498
000000a4 l     O .rodata	00000015 __func__.3527
000006c2 l     F .text	000001a3 find_free_zone
00000865 l     F .text	0000016b zone_frame_alloc
000000e0 l     O .rodata	00000011 __func__.3486
000000bc l     O .rodata	00000014 __func__.3512
00000034 l     O .rodata	00000014 __func__.3616
00000088 l     O .rodata	0000000c __func__.3577
0000005c l     O .rodata	00000011 __func__.3602
00000048 l     O .rodata	00000011 __func__.3608
00000040 l     O .bss	00000020 mem_avail_mtx
00000004 l     O .bss	00000004 mem_avail_req
00000000 l     O .bss	00000004 mem_avail_gen
00000008 l     O .bss	0000001c mem_avail_cv
00000020 l     O .rodata	00000013 __func__.3643
0000000c l     O .rodata	00000014 __func__.3660
00000000 l     O .rodata	0000000c __func__.3698
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000494       O *COM*	00000020 zones
00000000         *UND*	00000000 log
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 bitmap_size
00000000         *UND*	00000000 bitmap_allocate_range
000009d0 g     F .text	00000060 frame_total_free_get
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000a30 g     F .text	00000068 find_zone
00000a98 g     F .text	0000071e zone_merge
00000000         *UND*	00000000 bitmap_initialize
00000000         *UND*	00000000 bitmap_clear_range
000011b6 g     F .text	00000800 zone_merge_all
000019b6 g     F .text	00000020 zone_conf_size
000019d6 g     F .text	00000591 zone_external_conf_alloc
00000000         *UND*	00000000 reserve_force_alloc
00000000         *UND*	00000000 slab_reclaim
00000000         *UND*	00000000 reserve_free
00001f67 g     F .text	000008da zone_create
00000000         *UND*	00000000 config
00000000         *UND*	00000000 init
00000000         *UND*	00000000 bitmap_set_range
00002841 g     F .text	00000103 frame_set_parent
00002944 g     F .text	000000ff frame_get_parent
00002a43 g     F .text	000005ca frame_alloc_generic
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 _condvar_wait_timeout
00000000         *UND*	00000000 mutex_unlock
0000300d g     F .text	0000002a frame_alloc
00003037 g     F .text	00000245 frame_free_generic
00000000         *UND*	00000000 condvar_broadcast
0000327c g     F .text	00000022 frame_free
0000329e g     F .text	00000022 frame_free_noreserve
000032c0 g     F .text	000000d0 frame_reference_add
00003390 g     F .text	000000fe frame_mark_unavailable
0000348e g     F .text	00000217 frame_init
00000000         *UND*	00000000 frame_low_arch_init
00000000         *UND*	00000000 frame_high_arch_init
00000000         *UND*	00000000 ballocs
00000000         *UND*	00000000 irq_spinlock_initialize
00000000         *UND*	00000000 mutex_initialize
00000000         *UND*	00000000 condvar_initialize
000036a5 g     F .text	0000006c frame_adjust_zone_bounds
00003711 g     F .text	0000007e zones_total_size
0000378f g     F .text	00000193 zones_stats
00003922 g     F .text	00000336 zones_print_list
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 bin_order_suffix
00003c58 g     F .text	0000046c zone_print_one



generic/src/mm/page.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 page.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000058 l     O .rodata	00000014 __func__.3186
00000044 l     O .rodata	00000014 __func__.3191
00000030 l     O .rodata	00000012 __func__.3198
0000001c l     O .rodata	00000014 __func__.3205
00000000 l     O .rodata	00000019 __func__.3210
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000009 page_init
00000000         *UND*	00000000 page_arch_init
00000009 g     F .text	000000c6 page_mapping_insert
00000000         *UND*	00000000 page_table_locked
00000000 g     O .bss	00000004 page_mapping_operations
00000000         *UND*	00000000 panic_common
000000cf g     F .text	000000b0 page_mapping_remove
0000017f g     F .text	000000cd page_mapping_find
0000024c g     F .text	000000d0 page_mapping_update
0000031c g     F .text	00000083 page_mapping_make_global
0000039f g     F .text	00000152 page_find_mapping
00000000         *UND*	00000000 page_table_lock
00000000         *UND*	00000000 page_table_unlock
000004f1 g     F .text	00000168 sys_page_find_mapping
00000000         *UND*	00000000 copy_to_uspace



generic/src/mm/tlb.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 tlb.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     O .data	00000010 tlblock
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .rodata	00000017 __func__.2359
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000009 tlb_init
00000000         *UND*	00000000 tlb_arch_init
00000009 g     F .text	00000142 tlb_shootdown_start
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 config
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 cpus
00000000         *UND*	00000000 ipi_broadcast
0000014b g     F .text	00000032 tlb_shootdown_finalize
0000017d g     F .text	00000014 tlb_shootdown_ipi_send
00000191 g     F .text	00000207 tlb_shootdown_ipi_recv
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 tlb_invalidate_asid
00000000         *UND*	00000000 tlb_invalidate_all
00000000         *UND*	00000000 tlb_invalidate_pages



generic/src/mm/as.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 as.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000007 as_destructor
00000007 l     F .text	0000002d as_constructor
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000034 l     F .text	00000193 find_area_and_lock
000000fc l     O .rodata	00000013 __func__.3730
000001c7 l     F .text	0000065a check_area_conflicts
0000013c l     O .rodata	00000015 __func__.3659
00000821 l     F .text	0000014e sh_info_remove_reference
00000120 l     O .rodata	00000019 __func__.3699
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	0000002c page_table_lock.part.3
00000064 l     O .rodata	00000010 __func__.3911
0000002c l     F .text.unlikely	0000002c page_table_unlock.part.4
00000050 l     O .rodata	00000012 __func__.3916
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
0000096f l     F .text	00000077 page_table_unlock.constprop.6
00000008 l     O .bss	00000004 as_slab
00000088 l     O .rodata	00000012 __func__.3902
00000154 l     O .rodata	00000015 __func__.3678
000000ec l     O .rodata	00000010 __func__.3777
0000016c l     O .rodata	0000000b __func__.3638
00000074 l     O .rodata	00000013 __func__.3906
000000d4 l     O .rodata	00000015 __func__.3811
000000bc l     O .rodata	00000015 __func__.3847
000000b0 l     O .rodata	0000000a __func__.3894
0000009c l     O .rodata	00000012 __func__.3898
0000003c l     O .rodata	00000012 __func__.3920
00000028 l     O .rodata	00000012 __func__.3931
00000014 l     O .rodata	00000012 __func__.3961
00000110 l     O .rodata	0000000f __func__.3748
00000000 l     O .rodata	00000011 __func__.4028
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 mutex_initialize
00000000         *UND*	00000000 mutex_locked
00000000         *UND*	00000000 btree_search
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 btree_leaf_node_left_neighbour
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 btree_leaf_node_right_neighbour
00000000         *UND*	00000000 frame_free
00000000         *UND*	00000000 btree_destroy
00000000         *UND*	00000000 free
00000004 g     O .bss	00000004 as_operations
000009e6 g     F .text	00000100 as_init
00000000         *UND*	00000000 as_arch_init
00000000         *UND*	00000000 slab_cache_create
00000000         *UND*	00000000 slab_alloc
00000000         *UND*	00000000 btree_create
00000000 g     O .bss	00000004 AS_KERNEL
00000ae6 g     F .text	000000c3 as_create
00000ba9 g     F .text	0000000c as_hold
00000bb5 g     F .text	00000542 as_area_create
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 btree_insert
00000000         *UND*	00000000 memsetb
000010f7 g     F .text	00000303 as_area_destroy
00000000         *UND*	00000000 tlb_shootdown_start
00000000         *UND*	00000000 page_mapping_find
00000000         *UND*	00000000 page_mapping_remove
00000000         *UND*	00000000 tlb_invalidate_pages
00000000         *UND*	00000000 tlb_shootdown_finalize
00000000         *UND*	00000000 btree_remove
000013fa g     F .text	00000245 as_destroy
00000008 g     O .data	00000008 asidlock
00000000         *UND*	00000000 spinlock_trylock
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 slab_free
00000000         *UND*	00000000 log
0000163f g     F .text	0000001d as_release
0000165c g     F .text	000001ef as_area_share
0000184b g     F .text	0000008a as_area_check_access
000018d5 g     F .text	00000567 as_area_change_flags
00000000         *UND*	00000000 anon_backend
00000000         *UND*	00000000 page_mapping_insert
00001e3c g     F .text	000003c5 as_page_fault
00000000         *UND*	00000000 fault_if_from_uspace
00000000         *UND*	00000000 memcpy_from_uspace_failover_address
00000000         *UND*	00000000 memcpy_to_uspace_failover_address
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 task_kill_self
00002201 g     F .text	000001d3 as_switch
00000000 g     O .data	00000008 inactive_as_with_asid_list
000023d4 g     F .text	000000a2 as_area_get_flags
00002476 g     F .text	0000007c page_table_create
000024f2 g     F .text	0000007d page_table_destroy
0000256f g     F .text	0000007a page_table_lock
000025e9 g     F .text	0000007a page_table_unlock
00002663 g     F .text	0000007d page_table_locked
000026e0 g     F .text	00000104 as_area_get_size
000027e4 g     F .text	00000faa used_space_insert
0000378e g     F .text	000008b1 used_space_remove
0000403f g     F .text	0000061c as_area_resize
0000465b g     F .text	000004db sys_as_area_create
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 user_backend
00004b36 g     F .text	00000030 sys_as_area_resize
00004b66 g     F .text	00000028 sys_as_area_change_flags
00004b8e g     F .text	00000021 sys_as_area_destroy
00004baf g     F .text	000001ea as_get_area_info
00004d99 g     F .text	000000fe as_print



generic/src/mm/backend_anon.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 backend_anon.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000a anon_is_resizable
0000000a l     F .text	00000014 anon_is_shareable
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
0000001e l     F .text	000002fa anon_page_fault
0000000c l     O .rodata	00000010 __func__.3332
00000318 l     F .text	0000001a anon_destroy
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000332 l     F .text	0000023e anon_share
00000000 l     O .rodata	0000000b __func__.3294
00000570 l     F .text	000000ad anon_frame_free
0000001c l     O .rodata	00000010 __func__.3344
0000061d l     F .text	0000001f anon_create
0000063c l     F .text	0000003e anon_resize
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 page_table_locked
00000000         *UND*	00000000 mutex_locked
00000000         *UND*	00000000 as_area_check_access
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 reserve_try_alloc
00000000         *UND*	00000000 km_temporary_page_get
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 km_temporary_page_put
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 as_area_get_flags
00000000         *UND*	00000000 page_mapping_insert
00000000         *UND*	00000000 used_space_insert
00000000         *UND*	00000000 btree_search
00000000         *UND*	00000000 btree_insert
00000000         *UND*	00000000 frame_reference_add
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 reserve_free
00000000         *UND*	00000000 page_table_lock
00000000         *UND*	00000000 page_mapping_find
00000000         *UND*	00000000 page_table_unlock
00000000         *UND*	00000000 frame_free_noreserve
00000000         *UND*	00000000 frame_free
00000000 g     O .data	00000028 anon_backend



generic/src/mm/backend_elf.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 backend_elf.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000a elf_is_shareable
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
0000000a l     F .text	00000111 elf_frame_free
0000001c l     O .rodata	0000000f __func__.3367
0000011b l     F .text	000005c7 elf_page_fault
0000000c l     O .rodata	0000000f __func__.3350
000006e2 l     F .text	0000004c elf_destroy
0000072e l     F .text	000002e4 elf_share
00000000 l     O .rodata	0000000a __func__.3307
00000a12 l     F .text	000000b7 elf_resize
00000ac9 l     F .text	00000051 elf_create
00000b1a l     F .text	0000000a elf_is_resizable
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 page_table_locked
00000000         *UND*	00000000 mutex_locked
00000000         *UND*	00000000 frame_free_noreserve
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 as_area_check_access
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 km_temporary_page_get
00000000         *UND*	00000000 km_temporary_page_put
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 as_area_get_flags
00000000         *UND*	00000000 page_mapping_insert
00000000         *UND*	00000000 used_space_insert
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 btree_search
00000000         *UND*	00000000 frame_reference_add
00000000         *UND*	00000000 btree_insert
00000000         *UND*	00000000 AS_KERNEL
00000000         *UND*	00000000 page_mapping_find
00000000         *UND*	00000000 reserve_free
00000000         *UND*	00000000 page_table_lock
00000000         *UND*	00000000 page_table_unlock
00000000         *UND*	00000000 btree_leaf_node_left_neighbour
00000000         *UND*	00000000 reserve_try_alloc
00000000 g     O .data	00000028 elf_backend



generic/src/mm/backend_phys.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 backend_phys.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000005 phys_destroy
00000005 l     F .text	00000007 phys_is_resizable
0000000c l     F .text	0000000a phys_is_shareable
00000016 l     F .text	00000032 phys_destroy_shared_data
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000048 l     F .text	00000188 phys_page_fault
0000000c l     O .rodata	00000010 __func__.3261
000001d0 l     F .text	00000040 phys_create_shared_data
00000210 l     F .text	0000008c phys_share
00000000 l     O .rodata	0000000b __func__.3245
0000029c l     F .text	0000000a phys_create
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 frame_free
00000000         *UND*	00000000 free
00000000         *UND*	00000000 page_table_locked
00000000         *UND*	00000000 mutex_locked
00000000         *UND*	00000000 as_area_check_access
00000000         *UND*	00000000 as_area_get_flags
00000000         *UND*	00000000 page_mapping_insert
00000000         *UND*	00000000 used_space_insert
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 malloc
00000000 g     O .data	00000028 phys_backend



generic/src/mm/backend_user.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 backend_user.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000a user_create
0000000a l     F .text	00000005 user_destroy
0000000f l     F .text	00000007 user_is_shareable
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000016 l     F .text	000001eb user_page_fault
00000000 l     O .rodata	00000010 __func__.3374
00000201 l     F .text	000000c9 user_frame_free
00000010 l     O .rodata	00000010 __func__.3384
000002ca l     F .text	00000007 user_is_resizable
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 page_table_locked
00000000         *UND*	00000000 mutex_locked
00000000         *UND*	00000000 as_area_check_access
00000000         *UND*	00000000 ipc_req_internal
00000000         *UND*	00000000 as_area_get_flags
00000000         *UND*	00000000 page_mapping_insert
00000000         *UND*	00000000 used_space_insert
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 log
00000000         *UND*	00000000 find_zone
00000000         *UND*	00000000 frame_free
00000000 g     O .data	00000028 user_backend



generic/src/mm/slab.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 slab.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	0000002c make_magcache.part.2
00000054 l     O .rodata	0000000e __func__.2273
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
000009df l     F .text	000001db slab_obj_destroy
0000006c l     O .bss	00000004 slab_extern_cache
00000681 l     F .text	0000035e _slab_free
00000100 l     O .bss	00000070 mag_cache
00000040 l     O .rodata	00000011 __func__.2211
00000028 l     O .rodata	00000015 __func__.2243
00000010 l     O .rodata	00000017 __func__.2255
00000bba l     F .text	0000041a _slab_reclaim.part.1
00000008 l     O .data	00000010 slab_cache_lock
00000080 l     O .bss	00000070 slab_cache_cache
00000000 l     O .data	00000008 slab_cache_list
00000000 l     O .bss	00000004 _slab_initialized
00000020 l     O .bss	0000004c malloc_caches
00000008 l     O .rodata	00000007 __func__.2395
00001bd8 l     F .text	00000271 _slab_cache_create
00000064 l     O .rodata	00000013 __func__.2290
00000080 l     O .rodata	0000004c malloc_names
00000000 l     O .rodata	00000008 __func__.2402
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 panic_common
00000000 g     F .text	00000681 slab_alloc
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 irq_spinlock_locked
00000000         *UND*	00000000 frame_get_parent
00000000         *UND*	00000000 frame_free
00000000         *UND*	00000000 frame_alloc_generic
00000000         *UND*	00000000 frame_set_parent
00000000         *UND*	00000000 config
00000fd4 g     F .text	0000047d slab_cache_destroy
00001451 g     F .text	000004b9 slab_free
0000190a g     F .text	00000088 slab_reclaim
00001992 g     F .text	0000012a slab_print_list
00000000         *UND*	00000000 printf
00001abc g     F .text	0000011c malloc
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 irq_spinlock_initialize
00001e49 g     F .text	00000129 slab_enable_cpucache
00001f72 g     F .text	00000537 slab_cache_init
000024a9 g     F .text	00000275 slab_cache_create
0000271e g     F .text	00000211 realloc
0000292f g     F .text	00000366 free



generic/src/lib/func.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 func.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000000ae halt
00000000 g     O .bss	00000004 haltstate
00000000         *UND*	00000000 log
00000000         *UND*	00000000 kconsole_check_poll
00000000         *UND*	00000000 kconsole



generic/src/lib/memstr.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memstr.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000018 memsetb
00000000         *UND*	00000000 memset
00000018 g     F .text	00000155 memsetw
0000016d g     F .text	00000167 memmove



generic/src/lib/memfnc.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memfnc.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000013a memset
0000013a g     F .text	000000ce memcpy



generic/src/lib/sort.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 sort.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000444 _qsort
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000444 g     F .text	0000024a gsort
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 free
0000068e g     F .text	000000cb qsort



generic/src/lib/str.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 str.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000118 l     O .rodata	00000008 __func__.2348
0000010c l     O .rodata	00000009 __func__.2361
00000104 l     O .rodata	00000008 __func__.2373
000000f8 l     O .rodata	00000009 __func__.2380
000000ec l     O .rodata	0000000c __func__.2389
00000000 l    d  .rodata	00000000 .rodata
000000dc l     O .rodata	0000000d __func__.2460
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000000d7 str_decode
000000d7 g     F .text	000000e3 chr_encode
000001ba g     F .text	00000018 str_size
000001d2 g     F .text	0000001e wstr_size
000001f0 g     F .text	000000cd str_lsize
000002bd g     F .text	00000037 wstr_lsize
000002f4 g     F .text	000000c4 str_length
000003b8 g     F .text	0000001a wstr_length
000003d2 g     F .text	000000dc str_nlength
000004ae g     F .text	00000032 wstr_nlength
000004e0 g     F .text	0000000c ascii_check
000004ec g     F .text	0000000f chr_check
000004fb g     F .text	0000020d str_cmp
00000708 g     F .text	00000237 str_lcmp
0000093f g     F .text	00000229 str_cpy
00000000         *UND*	00000000 panic_common
00000b68 g     F .text	0000022f str_ncpy
00000d97 g     F .text	000000a7 str_dup
00000000         *UND*	00000000 malloc
00000e3e g     F .text	000000b2 str_ndup
00000ef0 g     F .text	00000143 wstr_to_str
00001033 g     F .text	000000c1 str_chr
000010f4 g     F .text	00000052 wstr_linsert
00001146 g     F .text	0000003d wstr_remove
00001183 g     F .text	0000026b str_uint64_t
00000000         *UND*	00000000 __udivdi3
000013ee g     F .text	000001a6 order_suffix
00001594 g     F .text	000000f5 bin_order_suffix



generic/src/lib/elf.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 elf.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
0000002c l     O .rodata	00000018 error_codes
00000020 l     O .rodata	0000000a __func__.2429
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000186 elf_load
00000000         *UND*	00000000 elf_backend
00000000         *UND*	00000000 as_area_create
00000186 g     F .text	00000063 elf_error
00000000         *UND*	00000000 panic_common



generic/src/lib/ra.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ra.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000012 used_hash
00000012 l     F .text	00000013 used_compare
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .bss	00000004 ra_segment_cache
00000000 l     O .data	0000000c used_ops
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000010 l     O .rodata	0000000e __func__.2084
00000020 l     O .rodata	00000009 __func__.2109
00000000 l     O .rodata	0000000d __func__.2102
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000025 g     F .text	0000003f ra_arena_create
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 irq_spinlock_initialize
00000064 g     F .text	0000023c ra_span_add
00000000         *UND*	00000000 slab_alloc
00000000         *UND*	00000000 hash_table_create
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 slab_free
00000000         *UND*	00000000 free
000002a0 g     F .text	00000521 ra_alloc
00000000         *UND*	00000000 hash_table_insert
00000000         *UND*	00000000 panic_common
000007c1 g     F .text	00000413 ra_free
00000000         *UND*	00000000 hash_table_find
00000000         *UND*	00000000 hash_table_remove
00000bd4 g     F .text	00000041 ra_init
00000000         *UND*	00000000 slab_cache_create



generic/src/lib/rd.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 rd.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .bss	00000014 rd_parea
00000000 l     O .rodata	00000008 __func__.3334
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000111 init_rd
00000000         *UND*	00000000 ddi_parea_register
00000000         *UND*	00000000 sysinfo_set_item_val
00000000         *UND*	00000000 log
00000000         *UND*	00000000 panic_common



generic/src/printf/printf_core.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 printf_core.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata	00000000 .rodata
00000840 l     O .rodata	00000001 invalch
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 __umoddi3
00000000         *UND*	00000000 __udivdi3
00000000 g     F .text	0000126d printf_core
00000000         *UND*	00000000 str_decode
00000000         *UND*	00000000 ascii_check
00000000         *UND*	00000000 str_length
00000000         *UND*	00000000 str_size
00000000         *UND*	00000000 wstr_length
00000000         *UND*	00000000 str_lsize
00000000         *UND*	00000000 chr_check
00000000         *UND*	00000000 wstr_lsize



generic/src/printf/printf.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 printf.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000001a printf
00000000         *UND*	00000000 vprintf



generic/src/printf/snprintf.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 snprintf.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000028 snprintf
00000000         *UND*	00000000 vsnprintf



generic/src/printf/vprintf.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 vprintf.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000003b vprintf_wstr_write
0000003b l     F .text	0000004d vprintf_str_write
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 putchar
00000000         *UND*	00000000 str_decode
00000088 g     F .text	00000047 puts
000000cf g     F .text	00000036 vprintf
00000000         *UND*	00000000 printf_core



generic/src/printf/vsnprintf.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000009e vsnprintf_wstr_write
0000009e l     F .text	00000108 vsnprintf_str_write
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 chr_encode
00000000         *UND*	00000000 str_decode
000001a6 g     F .text	0000004f vsnprintf
00000000         *UND*	00000000 printf_core



generic/src/time/clock.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 clock.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000004 l     O .bss	00000014 clock_parea
00000000 l     O .bss	00000004 secfrag
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000000c6 clock_counter_init
00000000         *UND*	00000000 frame_alloc
00000004       O *COM*	00000004 uptime
00000000         *UND*	00000000 ddi_parea_register
00000000         *UND*	00000000 sysinfo_set_item_val
00000000         *UND*	00000000 panic_common
000000c6 g     F .text	00000419 clock
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 timeout_reinitialize
00000000         *UND*	00000000 scheduler
00000000         *UND*	00000000 udebug_before_thread_runs



generic/src/time/timeout.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 timeout.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .rodata	00000013 __func__.2000
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000047 timeout_init
00000000         *UND*	00000000 irq_spinlock_initialize
00000047 g     F .text	00000039 timeout_reinitialize
00000080 g     F .text	00000051 timeout_initialize
000000d1 g     F .text	00000218 timeout_register
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 panic_common
000002e9 g     F .text	0000018e timeout_unregister
00000000         *UND*	00000000 irq_spinlock_trylock
00000000         *UND*	00000000 log



generic/src/time/delay.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 delay.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000056 delay
00000000         *UND*	00000000 thread_migration_disable
00000000         *UND*	00000000 asm_delay_loop
00000000         *UND*	00000000 thread_migration_enable



generic/src/preempt/preemption.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 preemption.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .comment	00000000 .comment



generic/src/synch/spinlock.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 spinlock.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	0000002f spinlock_unlock_debug.part.1
00000080 l     O .rodata	00000016 __func__.2074
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
0000006c l     O .rodata	00000011 __func__.2079
00000058 l     O .rodata	00000012 __func__.2092
00000044 l     O .rodata	00000014 __func__.2097
0000002c l     O .rodata	00000015 __func__.2102
00000018 l     O .rodata	00000012 __func__.2108
00000000 l     O .rodata	00000016 __func__.2115
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 panic_common
00000000 g     F .text	00000014 spinlock_initialize
00000014 g     F .text	000000b9 spinlock_lock_debug
00000000         *UND*	00000000 symtab_fmt_name_lookup
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 stack_trace
000000cd g     F .text	0000007c spinlock_unlock_debug
00000149 g     F .text	00000089 spinlock_trylock
000001d2 g     F .text	0000000f spinlock_locked
000001e1 g     F .text	0000001f irq_spinlock_initialize
00000200 g     F .text	00000208 irq_spinlock_lock
00000408 g     F .text	00000152 irq_spinlock_unlock
0000055a g     F .text	00000106 irq_spinlock_trylock
00000660 g     F .text	000001d0 irq_spinlock_pass
00000830 g     F .text	000001c9 irq_spinlock_exchange
000009f9 g     F .text	0000000f irq_spinlock_locked



generic/src/synch/condvar.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 condvar.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000009 condvar_initialize
00000000         *UND*	00000000 waitq_initialize
00000009 g     F .text	0000001b condvar_signal
00000000         *UND*	00000000 waitq_wakeup
00000024 g     F .text	0000001b condvar_broadcast
0000003f g     F .text	00000075 _condvar_wait_timeout
00000000         *UND*	00000000 waitq_sleep_prepare
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 waitq_sleep_timeout_unsafe
00000000         *UND*	00000000 waitq_sleep_finish
00000000         *UND*	00000000 _mutex_lock_timeout
000000b4 g     F .text	00000064 _condvar_wait_timeout_spinlock_impl
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 spinlock_lock_debug
00000118 g     F .text	00000080 _condvar_wait_timeout_irq_spinlock



generic/src/synch/mutex.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 mutex.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .rodata	00000014 __func__.3356
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000001e mutex_initialize
00000000         *UND*	00000000 semaphore_initialize
0000001e g     F .text	0000001b mutex_locked
00000000         *UND*	00000000 semaphore_count_get
00000039 g     F .text	000001b0 _mutex_lock_timeout
00000000         *UND*	00000000 _semaphore_down_timeout
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 stack_trace
00000000         *UND*	00000000 panic_common
000001e9 g     F .text	0000000d mutex_unlock
00000000         *UND*	00000000 semaphore_up



generic/src/synch/semaphore.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 semaphore.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000027 semaphore_initialize
00000000         *UND*	00000000 waitq_initialize
00000000         *UND*	00000000 waitq_count_set
00000027 g     F .text	00000009 _semaphore_down_timeout
00000000         *UND*	00000000 waitq_sleep_timeout
00000030 g     F .text	0000001b semaphore_up
00000000         *UND*	00000000 waitq_wakeup
0000004b g     F .text	00000009 semaphore_count_get
00000000         *UND*	00000000 waitq_count_get



generic/src/synch/smc.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 smc.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000007f sys_smc_coherence



generic/src/synch/smp_memory_barrier.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 smp_memory_barrier.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000005 issue_mem_bar
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000005 g     F .text	00000041 sys_smp_memory_barrier
00000000         *UND*	00000000 config
00000000         *UND*	00000000 smp_call



generic/src/synch/waitq.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 waitq.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     F .text	00000192 waitq_sleep_timed_out
00000018 l     O .rodata	00000016 __func__.3322
0000006c l     O .rodata	00000016 __func__.3330
0000005c l     O .rodata	0000000e __func__.3335
00000030 l     O .rodata	00000016 __func__.3370
00000048 l     O .rodata	00000014 __func__.3341
00000000 l     O .rodata	00000015 __func__.3376
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 threads_lock
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 thread_exists
00000000         *UND*	00000000 irq_spinlock_trylock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 log
00000192 g     F .text	00000030 waitq_initialize
00000000         *UND*	00000000 irq_spinlock_initialize
000001c2 g     F .text	0000018f waitq_interrupt_sleep
00000000         *UND*	00000000 timeout_unregister
00000351 g     F .text	00000146 waitq_unsleep
00000000         *UND*	00000000 panic_common
00000497 g     F .text	000000aa waitq_sleep_prepare
00000541 g     F .text	00000095 waitq_sleep_finish
000005d6 g     F .text	00000235 waitq_sleep_timeout_unsafe
00000000         *UND*	00000000 context_save_arch
00000000         *UND*	00000000 timeout_register
00000000         *UND*	00000000 scheduler
0000080b g     F .text	000001a7 waitq_sleep_timeout
000009b2 g     F .text	000001eb _waitq_wakeup_unsafe
00000000         *UND*	00000000 irq_spinlock_locked
00000b9d g     F .text	0000003f waitq_wakeup
00000bdc g     F .text	00000037 waitq_count_get
00000c13 g     F .text	00000036 waitq_count_set



generic/src/synch/futex.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 futex.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000f futex_ht_hash
0000000f l     F .text	0000000b task_fut_ht_hash
0000001a l     F .text	0000000a task_fut_ht_key_hash
00000024 l     F .text	00000014 task_fut_ht_equal
00000038 l     F .text	00000013 task_fut_ht_key_equal
0000004b l     F .text	0000000d futex_ht_remove_callback
00000058 l     F .text	00000073 destroy_task_cache
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
000000cb l     F .text	000002b9 get_and_cache_futex
00000020 l     O .data	00000008 futex_ht_lock
00000000 l     O .bss	00000010 futex_ht
00000000 l     O .rodata	0000000e __func__.3533
00000010 l     O .rodata	00000012 __func__.3537
00000384 l     F .text	00000068 futex_ht_compare
00000024 l     O .rodata	00000011 __func__.3586
00000014 l     O .data	0000000c futex_ht_ops
00000000 l     O .data	00000014 task_futex_ht_ops
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 free
00000000         *UND*	00000000 cht_destroy_unsafe
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 hash_table_find
00000000         *UND*	00000000 spinlock_locked
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 cht_insert_unique
00000000         *UND*	00000000 hash_table_remove
00000000         *UND*	00000000 _rcu_preempted_unlock
00000000         *UND*	00000000 waitq_initialize
00000000         *UND*	00000000 hash_table_insert
00000000         *UND*	00000000 panic_common
000003ec g     F .text	0000002c futex_init
00000000         *UND*	00000000 hash_table_create
00000418 g     F .text	0000007c futex_task_init
00000000         *UND*	00000000 cht_create
00000000         *UND*	00000000 spinlock_initialize
00000494 g     F .text	0000009e futex_task_deinit
00000000         *UND*	00000000 workq_global_enqueue_noblock
00000532 g     F .text	0000010a futex_task_cleanup
0000063c g     F .text	00000165 sys_futex_sleep
00000000         *UND*	00000000 cht_find_lazy
00000000         *UND*	00000000 udebug_stoppable_begin
00000000         *UND*	00000000 waitq_sleep_timeout
00000000         *UND*	00000000 udebug_stoppable_end
00000000         *UND*	00000000 page_table_lock
00000000         *UND*	00000000 page_mapping_find
00000000         *UND*	00000000 page_table_unlock
000007a1 g     F .text	00000151 sys_futex_wakeup
00000000         *UND*	00000000 waitq_wakeup



generic/src/synch/workqueue.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 workqueue.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	00000244 add_worker
00000130 l     O .rodata	0000000b __func__.3390
0000050a l     F .text	00000363 worker_thread
00000244 l     F .text	00000125 thr_nonblock_add_worker
0000013c l     O .rodata	00000010 __func__.3537
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000369 l     F .text	000000d8 active_workers_now
000000e8 l     O .rodata	00000013 __func__.3449
00000441 l     F .text	00000010 add_worker_noblock_op
00000000 l     O .bss	00000038 nonblock_adder
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	0000002c worker_unnecessary.part.0
000000fc l     O .rodata	00000013 __func__.3498
0000002c l     F .text.unlikely	0000002c active_workers.part.2
00000044 l     O .rodata	0000000f __func__.3454
00000451 l     F .text	000000b9 signal_worker_op
00000054 l     O .rodata	00000011 __func__.3464
00000110 l     O .rodata	0000000d __func__.3489
000000e0 l     O .rodata	00000008 __func__.3503
000000a8 l     O .bss	00000004 max_concurrent_workers
000000b0 l     O .bss	00000004 min_worker_cnt
00000120 l     O .rodata	0000000e __func__.3478
0000086d l     F .text	0000029c signal_worker_logic
00000068 l     O .rodata	00000014 __func__.3469
000000ac l     O .bss	00000004 max_worker_cnt
00000b09 l     F .text	00000241 add_worker_op
00000038 l     O .rodata	0000000a __func__.1129
00000000 l     O .data	00000004 booting
00000040 l     O .bss	00000068 g_work_queue
000000d0 l     O .rodata	0000000d __func__.3372
000000b4 l     O .rodata	0000000b __func__.3397
0000008c l     O .rodata	00000011 __func__.3405
000000a0 l     O .rodata	00000012 __func__.3401
000000c0 l     O .rodata	0000000e __func__.3376
0000007c l     O .rodata	0000000f __func__.3439
00000018 l     O .rodata	0000001d __func__.3507
00000000 l     O .rodata	00000017 __func__.3511
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 thread_interrupt
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 config
00000000         *UND*	00000000 cpus
00000000         *UND*	00000000 _condvar_wait_timeout_irq_spinlock
00000000         *UND*	00000000 irq_spinlock_locked
00000000         *UND*	00000000 condvar_signal
00000000         *UND*	00000000 thread_interrupted
00000000         *UND*	00000000 thread_detach
00000d4a g     F .text	00000319 workq_global_worker_init
00000000         *UND*	00000000 irq_spinlock_initialize
00000000         *UND*	00000000 condvar_initialize
00000000         *UND*	00000000 printf
00001063 g     F .text	000000fd workq_global_init
00001160 g     F .text	0000010e workq_create
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 free
0000126e g     F .text	000002b9 workq_init
00001527 g     F .text	000001f9 workq_stop
00000000         *UND*	00000000 condvar_broadcast
00000000         *UND*	00000000 thread_join_timeout
00000000         *UND*	00000000 scheduler
00001720 g     F .text	00000014 workq_global_stop
00001734 g     F .text	000000d1 workq_destroy
00001805 g     F .text	00000120 workq_global_enqueue_noblock
00001925 g     F .text	00000123 workq_global_enqueue
00001a48 g     F .text	00000106 workq_enqueue_noblock
00001b4e g     F .text	00000109 workq_enqueue
00001c57 g     F .text	00000168 workq_before_thread_is_ready
00001dbf g     F .text	000001e0 workq_after_thread_ran
00001f9f g     F .text	000001f8 workq_print_info
00002197 g     F .text	00000228 workq_global_print_info



generic/src/synch/rcu.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 rcu.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	0000014b rm_preempted_reader
00000000 l     O .bss	000000dc rcu
00000018 l     O .rodata	0000000a __func__.1129
00000024 l     O .rodata	00000014 __func__.3736
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	0000002c next_cbs_empty.part.0
00000144 l     O .rodata	0000000f __func__.3578
0000002c l     F .text.unlikely	0000002c cur_cbs_empty.part.1
00000134 l     O .rodata	0000000e __func__.3574
00000058 l     F .text.unlikely	0000002c arriving_cbs_empty.part.2
000000cc l     O .rodata	00000013 __func__.3582
0000014b l     F .text	000000d8 sample_local_cpu
000000f8 l     O .rodata	00000011 __func__.3651
00000223 l     F .text	0000006c synch_complete
0000009c l     O .rodata	0000000f __func__.3523
0000028f l     F .text	0000002f barrier_complete
00000084 l     F .text.unlikely	0000002c rcu_call_impl.part.7
0000007c l     O .rodata	0000000e __func__.3553
000002be l     F .text	00000147 add_barrier_cb
0000008c l     O .rodata	0000000f __func__.3535
000000b0 l     F .text.unlikely	0000002c _rcu_synchronize.part.9
000000ac l     O .rodata	00000011 __func__.3517
00000405 l     F .text	00000298 wait_for_readers
0000069d l     F .text	00000ad9 reclaimer
00000160 l     O .rodata	00000013 __func__.3609
00000154 l     O .rodata	0000000c __func__.3627
0000011c l     O .rodata	00000018 __func__.3632
000000e0 l     O .rodata	00000016 __func__.3728
0000010c l     O .rodata	0000000d __func__.3707
00000174 l     O .rodata	0000000a __func__.3589
000000c0 l     O .rodata	00000009 __func__.3488
00000064 l     O .rodata	00000015 __func__.3658
0000004c l     O .rodata	00000017 __func__.3677
00000038 l     O .rodata	00000013 __func__.3681
00000000 l     O .rodata	00000016 __func__.3688
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 semaphore_up
00000000         *UND*	00000000 panic_common
00000008       O *COM*	00000008 _rcu_cur_gp
00000000         *UND*	00000000 cpu_mask_reset
00000000         *UND*	00000000 waitq_wakeup
00000000         *UND*	00000000 semaphore_count_get
00000000         *UND*	00000000 cpu_mask_size
00000000         *UND*	00000000 cpu_mask_active
00000000         *UND*	00000000 config
00000000         *UND*	00000000 cpu_mask_is_set
00000000         *UND*	00000000 cpus
00000000         *UND*	00000000 cpu_mask_is_none
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 _condvar_wait_timeout_spinlock_impl
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 smp_call
00000000         *UND*	00000000 scheduler
00000000         *UND*	00000000 _semaphore_down_timeout
00000000         *UND*	00000000 spinlock_locked
00000000         *UND*	00000000 list_splice
00000000         *UND*	00000000 condvar_broadcast
00000000         *UND*	00000000 condvar_signal
00001176 g     F .text	0000010f rcu_init
00000000         *UND*	00000000 condvar_initialize
00000000         *UND*	00000000 spinlock_initialize
00000000         *UND*	00000000 irq_spinlock_initialize
00000000         *UND*	00000000 mutex_initialize
00000000         *UND*	00000000 waitq_initialize
00000000         *UND*	00000000 semaphore_initialize
00001285 g     F .text	0000029a rcu_cpu_init
0000151f g     F .text	0000011d rcu_kinit_init
00000000         *UND*	00000000 snprintf
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 thread_wire
00000000         *UND*	00000000 thread_ready
0000163c g     F .text	00000026 rcu_thread_init
00001662 g     F .text	000000eb rcu_stop
00000000         *UND*	00000000 thread_interrupt
00000000         *UND*	00000000 thread_join_timeout
00000000         *UND*	00000000 thread_detach
0000174d g     F .text	00000037 rcu_completed_gps
00001784 g     F .text	0000011f rcu_synchronize
00000000         *UND*	00000000 waitq_sleep_timeout
000018a3 g     F .text	00000123 rcu_synchronize_expedite
000019c6 g     F .text	0000012f _rcu_synchronize
00001af5 g     F .text	000000d6 rcu_barrier
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 mutex_unlock
00001bcb g     F .text	000000ef rcu_call
00001cba g     F .text	00000107 _rcu_call
00001dc1 g     F .text	000001fe rcu_after_thread_ran
00001fbf g     F .text	00000074 rcu_before_thread_runs
00002033 g     F .text	000000c1 rcu_thread_exiting
00000000         *UND*	00000000 printf
000020f4 g     F .text	00000013 rcu_read_locked
00002107 g     F .text	0000009f _rcu_preempted_unlock
000021a6 g     F .text	0000021a rcu_print_stat



generic/src/smp/ipi.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ipi.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000014 ipi_broadcast
00000000         *UND*	00000000 config
00000000         *UND*	00000000 ipi_broadcast_arch



generic/src/smp/smp.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 smp.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .comment	00000000 .comment
0000001c       O *COM*	00000004 ap_completion_wq



generic/src/smp/smp_call.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 smp_call.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000024 l     O .rodata	0000000e __func__.1983
00000014 l     O .rodata	0000000f __func__.1996
00000000 l     O .rodata	00000012 __func__.2004
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000000c8 smp_call_init
00000000         *UND*	00000000 spinlock_initialize
00000000         *UND*	00000000 panic_common
000000c8 g     F .text	000001a2 smp_call
00000000         *UND*	00000000 config
00000000         *UND*	00000000 cpus
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 arch_smp_call_ipi
0000026a g     F .text	000001c2 smp_call_async
0000042c g     F .text	00000012 smp_call_wait
0000043e g     F .text	00000125 smp_call_ipi_recv
00000000         *UND*	00000000 list_splice



generic/src/ipc/ipc.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ipc.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000121 _ipc_call
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000121 l     F .text	000000d1 ipc_print_call_list
000001f2 l     F .text	00000144 ipc_forget_call
00000008 l     O .bss	00000004 ipc_call_slab
0000003c l     O .rodata	00000010 __func__.3715
00000004 l     O .bss	00000004 ipc_answerbox_slab
0000004c l     O .rodata	0000000e __func__.3631
00000020 l     O .rodata	0000001a __func__.3707
00000000 l     O .rodata	00000020 __func__.3734
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 waitq_wakeup
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 spinlock_locked
00000000         *UND*	00000000 sysipc_ops_get
00000000         *UND*	00000000 free
00000000         *UND*	00000000 slab_free
00000000         *UND*	00000000 panic_common
00000336 g     F .text	0000000c ipc_call_hold
00000342 g     F .text	00000045 ipc_call_release
00000387 g     F .text	00000075 ipc_call_alloc
00000000         *UND*	00000000 slab_alloc
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 spinlock_initialize
000003fc g     F .text	00000045 ipc_call_free
00000441 g     F .text	0000007a ipc_answerbox_init
00000000         *UND*	00000000 irq_spinlock_initialize
00000000         *UND*	00000000 waitq_initialize
000004bb g     F .text	00000086 ipc_phone_connect
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 mutex_unlock
00000541 g     F .text	0000003b ipc_phone_init
00000000         *UND*	00000000 mutex_initialize
0000057c g     F .text	000001e2 _ipc_answer_free_call
0000075e g     F .text	000001de ipc_answer
0000093c g     F .text	00000206 ipc_backsend_err
00000b42 g     F .text	00000176 ipc_call
00000cb8 g     F .text	0000013c ipc_phone_hangup
00000df4 g     F .text	0000021a ipc_forward
00000000         *UND*	00000000 irq_spinlock_pass
0000100e g     F .text	00000265 ipc_wait_for_call
00000000         *UND*	00000000 waitq_sleep_timeout
00001273 g     F .text	000001cc ipc_call_sync
0000143f g     F .text	000002d7 ipc_cleanup_call_list
00000000         *UND*	00000000 answer_preprocess
00001716 g     F .text	000002aa ipc_answerbox_slam_phones
00000000         *UND*	00000000 task_hold
00000000         *UND*	00000000 task_release
00000000         *UND*	00000000 log
000019c0 g     F .text	000004e5 ipc_cleanup
00000000         *UND*	00000000 event_cleanup_answerbox
00000000         *UND*	00000000 ipc_irq_cleanup
00000000         *UND*	00000000 ipc_kbox_cleanup
00000000         *UND*	00000000 spinlock_trylock
00001ea5 g     F .text	0000007a ipc_init
00000000         *UND*	00000000 slab_cache_create
00001f1f g     F .text	00000217 ipc_print_task
00000000         *UND*	00000000 tasks_lock
00000000         *UND*	00000000 task_find_by_id
00000000         *UND*	00000000 irq_spinlock_exchange
00000000 g     O .bss	00000004 ipc_phone_0



generic/src/ipc/sysipc.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 sysipc.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000014 l     O .rodata	00000012 __func__.3402
00000000 l     O .rodata	00000011 __func__.3436
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000019d answer_preprocess
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 sysipc_ops_get
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 panic_common
0000019d g     F .text	00000272 ipc_req_internal
00000000         *UND*	00000000 phone_get
00000000         *UND*	00000000 ipc_call_alloc
00000000         *UND*	00000000 ipc_call_free
00000000         *UND*	00000000 udebug_stoppable_begin
00000000         *UND*	00000000 ipc_call_hold
00000000         *UND*	00000000 ipc_call_sync
00000000         *UND*	00000000 ipc_call_release
00000000         *UND*	00000000 udebug_stoppable_end
0000040f g     F .text	000000bf sys_ipc_call_async_fast
00000000         *UND*	00000000 ipc_backsend_err
00000000         *UND*	00000000 ipc_call
000004ce g     F .text	000000ca sys_ipc_call_async_slow
00000000         *UND*	00000000 copy_from_uspace
00000598 g     F .text	00000381 sys_ipc_forward_fast
00000000         *UND*	00000000 get_call
00000000         *UND*	00000000 _ipc_answer_free_call
00000000         *UND*	00000000 ipc_forward
00000000         *UND*	00000000 ipc_answer
00000000         *UND*	00000000 phone_dealloc
00000919 g     F .text	00000262 sys_ipc_forward_slow
00000b7b g     F .text	00000272 sys_ipc_answer_fast
00000ded g     F .text	000000c8 sys_ipc_answer_slow
00000eb5 g     F .text	0000003d sys_ipc_hangup
00000000         *UND*	00000000 ipc_phone_hangup
00000ef2 g     F .text	000001bd sys_ipc_wait_for_call
00000000         *UND*	00000000 ipc_wait_for_call
00000000         *UND*	00000000 copy_to_uspace
000010af g     F .text	0000001f sys_ipc_poke
00000000         *UND*	00000000 waitq_unsleep
000010ce g     F .text	00000062 sys_ipc_irq_subscribe
00000000         *UND*	00000000 cap_get
00000000         *UND*	00000000 ipc_irq_subscribe
00001130 g     F .text	00000054 sys_ipc_irq_unsubscribe
00000000         *UND*	00000000 ipc_irq_unsubscribe
00001184 g     F .text	0000003a sys_ipc_connect_kbox
00000000         *UND*	00000000 ipc_connect_kbox



generic/src/ipc/sysipc_ops.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 sysipc_ops.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     O .data	00000018 null_ops
00000000 l     O .rodata	00000030 sysipc_ops
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000007 null_answer_preprocess
00000007 g     F .text	00000007 null_answer_process
0000000e g     F .text	00000007 null_request_forget
00000015 g     F .text	00000007 null_request_process
0000001c g     F .text	00000007 null_answer_cleanup
00000023 g     F .text	00000007 null_request_preprocess
0000002a g     F .text	00000023 sysipc_ops_get
00000018       O *COM*	00000004 ipc_m_connection_clone_ops
00000018       O *COM*	00000004 ipc_m_clone_establish_ops
00000018       O *COM*	00000004 ipc_m_connect_to_me_ops
00000018       O *COM*	00000004 ipc_m_connect_me_to_ops
00000018       O *COM*	00000004 ipc_m_page_in_ops
00000018       O *COM*	00000004 ipc_m_share_in_ops
00000018       O *COM*	00000004 ipc_m_share_out_ops
00000018       O *COM*	00000004 ipc_m_data_read_ops
00000018       O *COM*	00000004 ipc_m_data_write_ops
00000018       O *COM*	00000004 ipc_m_state_change_authorize_ops
00000018       O *COM*	00000004 ipc_m_debug_ops



generic/src/ipc/ops/clnestab.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 clnestab.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000010 request_preprocess
00000010 l     F .text	0000009c answer_cleanup
000000ac l     F .text	000000a0 answer_preprocess
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000 g     O .data	00000018 ipc_m_clone_establish_ops
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_request_process
00000000         *UND*	00000000 null_answer_process



generic/src/ipc/ops/conctmeto.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 conctmeto.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000002a answer_process
0000002a l     F .text	00000018 request_forget
00000042 l     F .text	00000033 answer_preprocess
00000075 l     F .text	00000059 request_preprocess
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 phone_dealloc
00000000         *UND*	00000000 ipc_phone_connect
00000000         *UND*	00000000 phone_alloc
00000000 g     O .data	00000018 ipc_m_connect_me_to_ops
00000000         *UND*	00000000 null_request_process
00000000         *UND*	00000000 null_answer_cleanup



generic/src/ipc/ops/concttome.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 concttome.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000001c answer_cleanup
0000001c l     F .text	00000022 request_process
0000003e l     F .text	0000009d answer_preprocess
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 phone_dealloc
00000000         *UND*	00000000 phone_alloc
00000000         *UND*	00000000 phone_connect
00000000 g     O .data	00000018 ipc_m_connect_to_me_ops
00000000         *UND*	00000000 null_request_preprocess
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_answer_process



generic/src/ipc/ops/connclone.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 connclone.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	000000ee answer_cleanup
000000ee l     F .text	0000017e request_preprocess
0000026c l     F .text	00000102 answer_preprocess
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 phone_get
00000000         *UND*	00000000 phone_alloc
00000000         *UND*	00000000 ipc_phone_connect
00000000 g     O .data	00000018 ipc_m_connection_clone_ops
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_request_process
00000000         *UND*	00000000 null_answer_process



generic/src/ipc/ops/dataread.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 dataread.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000036 answer_process
00000036 l     F .text	00000027 request_preprocess
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
0000005d l     F .text	000000bf answer_preprocess
00000000 l     O .rodata	00000012 __func__.2198
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 copy_to_uspace
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 panic_common
00000000 g     O .data	00000018 ipc_m_data_read_ops
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_request_process
00000000         *UND*	00000000 null_answer_cleanup



generic/src/ipc/ops/datawrite.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 datawrite.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000005e request_preprocess
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
0000005e l     F .text	0000009a answer_preprocess
00000000 l     O .rodata	00000012 __func__.2200
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 copy_to_uspace
00000000         *UND*	00000000 panic_common
00000000 g     O .data	00000018 ipc_m_data_write_ops
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_request_process
00000000         *UND*	00000000 null_answer_cleanup
00000000         *UND*	00000000 null_answer_process



generic/src/ipc/ops/debug.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 debug.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000a request_process
0000000a l     F .text	00000036 answer_process
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 copy_to_uspace
00000000 g     O .data	00000018 ipc_m_debug_ops
00000000         *UND*	00000000 udebug_request_preprocess
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_answer_cleanup
00000000         *UND*	00000000 null_answer_preprocess



generic/src/ipc/ops/pagein.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 pagein.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000037 pagein_request_process
00000037 l     F .text	000000d2 pagein_answer_preprocess
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 page_table_lock
00000000         *UND*	00000000 page_mapping_find
00000000         *UND*	00000000 page_table_unlock
00000000         *UND*	00000000 find_zone
00000000         *UND*	00000000 frame_reference_add
00000000 g     O .data	00000018 ipc_m_page_in_ops
00000000         *UND*	00000000 null_request_preprocess
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_answer_cleanup
00000000         *UND*	00000000 null_answer_process



generic/src/ipc/ops/sharein.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 sharein.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000096 answer_preprocess
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 as_area_share
00000000 g     O .data	00000018 ipc_m_share_in_ops
00000000         *UND*	00000000 null_request_preprocess
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_request_process
00000000         *UND*	00000000 null_answer_cleanup
00000000         *UND*	00000000 null_answer_process



generic/src/ipc/ops/shareout.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 shareout.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000002b request_preprocess
0000002b l     F .text	000000bd answer_preprocess
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 as_area_get_size
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 as_area_share
00000000         *UND*	00000000 copy_to_uspace
00000000 g     O .data	00000018 ipc_m_share_out_ops
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_request_process
00000000         *UND*	00000000 null_answer_cleanup
00000000         *UND*	00000000 null_answer_process



generic/src/ipc/ops/stchngath.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 stchngath.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000079 request_preprocess
00000079 l     F .text	000000ee answer_preprocess
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 phone_get
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 event_task_notify
00000000 g     O .data	00000018 ipc_m_state_change_authorize_ops
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_request_process
00000000         *UND*	00000000 null_answer_cleanup
00000000         *UND*	00000000 null_answer_process



generic/src/ipc/ipcrsc.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ipcrsc.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000010 l     O .rodata	0000000f __func__.3020
00000000 l     O .rodata	0000000e __func__.3029
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000009c get_call
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
0000009c g     F .text	00000039 phone_get
000000d5 g     F .text	000000a8 phone_alloc
0000017d g     F .text	00000083 phone_dealloc
00000000         *UND*	00000000 panic_common
00000200 g     F .text	00000095 phone_connect
00000000         *UND*	00000000 ipc_phone_connect



generic/src/ipc/irq.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 irq.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000060 l     O .rodata	00000019 __func__.3615
0000008c l     O .rodata	00000014 __func__.3569
0000007c l     O .rodata	00000010 __func__.3576
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000001a9 ipc_irq_top_half_claim
000001a9 g     F .text	00000157 ipc_irq_top_half_handler
00000000         *UND*	00000000 irq_spinlock_locked
00000000         *UND*	00000000 ipc_call_alloc
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 waitq_wakeup
00000000         *UND*	00000000 panic_common
00000300 g     F .text	000005e6 ipc_irq_subscribe
00000000         *UND*	00000000 last_inr
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 km_map
00000000         *UND*	00000000 km_unmap
00000000         *UND*	00000000 free
00000000         *UND*	00000000 irq_initialize
00000000         *UND*	00000000 irq_uspace_hash_table_lock
00000000         *UND*	00000000 irq_uspace_hash_table
00000000         *UND*	00000000 hash_table_find
00000000         *UND*	00000000 hash_table_insert
000008e6 g     F .text	000001f4 ipc_irq_unsubscribe
00000000         *UND*	00000000 hash_table_remove
00000ada g     F .text	0000021c ipc_irq_cleanup
00000000         *UND*	00000000 irq_spinlock_trylock
00000cf6 g     F .text	00000100 ipc_irq_send_msg



generic/src/ipc/event.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 event.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	00000052 evno2event.part.0
00000060 l     O .rodata	0000000b __func__.3252
00000000 l     O .bss	00000070 events
00000044 l     O .rodata	0000001a __func__.3283
00000024 l     O .rodata	0000001f __func__.3289
00000014 l     O .rodata	0000000d __func__.3310
00000000 l     O .rodata	00000012 __func__.3321
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 panic_common
00000052 g     F .text	0000004d event_init
00000000         *UND*	00000000 spinlock_initialize
0000009f g     F .text	00000055 event_task_init
000000f4 g     F .text	00000052 event_cleanup_answerbox
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 spinlock_unlock_debug
00000146 g     F .text	0000008b event_set_unmask_callback
000001d1 g     F .text	0000009d event_task_set_unmask_callback
0000026e g     F .text	000001ba event_notify
00000000         *UND*	00000000 ipc_call_alloc
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 waitq_wakeup
00000428 g     F .text	000001c8 event_task_notify
000005f0 g     F .text	00000091 sys_ipc_event_subscribe
00000681 g     F .text	00000094 sys_ipc_event_unsubscribe
00000715 g     F .text	00000073 sys_ipc_event_unmask



generic/src/security/cap.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cap.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000003b cap_set
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
0000003b g     F .text	0000003a cap_get
00000075 g     F .text	00000129 sys_cap_grant
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 tasks_lock
00000000         *UND*	00000000 task_find_by_id
0000019e g     F .text	00000149 sys_cap_revoke



generic/src/sysinfo/sysinfo.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 sysinfo.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000002c sysinfo_item_constructor
0000002c l     F .text	0000001b sysinfo_item_destructor
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000047 l     F .text	00000123 sysinfo_find_item
00000040 l     O .rodata	00000012 __func__.2335
0000016a l     F .text	00000296 sysinfo_create_path
00000040 l     O .bss	00000004 sysinfo_item_slab
0000006c l     O .rodata	00000014 __func__.2351
00000400 l     F .text	000001d7 sysinfo_dump_internal
00000000 l    d  .rodata	00000000 .rodata
000005d7 l     F .text	00000178 sysinfo_dump_internal.constprop.2
00000020 l     O .bss	00000020 sysinfo_lock
00000044 l     O .bss	00000004 global_root
00000054 l     O .rodata	00000018 __func__.2491
00000028 l     O .rodata	00000018 __func__.2464
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 free
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 slab_alloc
00000000         *UND*	00000000 str_ndup
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 str_length
0000074f g     F .text	00000055 sysinfo_init
00000000         *UND*	00000000 slab_cache_create
00000000         *UND*	00000000 mutex_initialize
000007a4 g     F .text	00000062 sysinfo_set_item_val
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 mutex_unlock
00000806 g     F .text	0000006c sysinfo_set_item_data
00000872 g     F .text	0000006c sysinfo_set_item_gen_val
000008de g     F .text	0000006c sysinfo_set_item_gen_data
0000094a g     F .text	0000005a sysinfo_set_item_undefined
000009a4 g     F .text	00000072 sysinfo_set_subtree_fn
00000a16 g     F .text	0000004e sysinfo_dump
00000a64 g     F .text	00000175 sys_sysinfo_get_keys_size
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 str_size
00000000         *UND*	00000000 copy_to_uspace
00000bd9 g     F .text	00000203 sys_sysinfo_get_keys
00000000         *UND*	00000000 str_cpy
00000ddc g     F .text	0000017e sys_sysinfo_get_val_type
00000f5a g     F .text	000001ec sys_sysinfo_get_value
00001146 g     F .text	000001ef sys_sysinfo_get_data_size
00001335 g     F .text	0000026c sys_sysinfo_get_data
00000000 g     O .bss	00000001 fb_exported



generic/src/sysinfo/stats.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 stats.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000010 avl_count_walker
00000010 l     F .text	00000095 get_stats_load
00000000 l     O .bss	00000020 load_lock
00000020 l     O .bss	0000000c avenrdy
000000a5 l     F .text	00000140 get_stats_exception
000001e5 l     F .text	000000d3 get_stats_exceptions
000002b8 l     F .text	000000fe get_stats_cpus
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
000003b6 l     F .text	00000212 get_stats_thread
00000014 l     O .rodata	00000015 __func__.3776
000005c8 l     F .text	0000025f produce_stats_task
00000000 l     O .rodata	00000013 __func__.3756
00000827 l     F .text	00000120 get_stats_task
00000947 l     F .text	0000004b task_serialize_walker
00000992 l     F .text	000000da get_stats_threads
00000bb9 l     F .text	00000136 thread_serialize_walker
00000a6c l     F .text	000000e3 get_stats_tasks
00000b4f l     F .text	0000006a get_stats_physmem
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 str_uint64_t
00000000         *UND*	00000000 exctbl_lock
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 exc_table
00000000         *UND*	00000000 str_cpy
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 config
00000000         *UND*	00000000 cpus
00000000         *UND*	00000000 threads_lock
00000000         *UND*	00000000 thread_find_by_id
00000000         *UND*	00000000 irq_spinlock_exchange
00000000         *UND*	00000000 irq_spinlock_locked
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 task_get_accounting
00000000         *UND*	00000000 tasks_lock
00000000         *UND*	00000000 task_find_by_id
00000000         *UND*	00000000 threads_tree
00000000         *UND*	00000000 avltree_walk
00000000         *UND*	00000000 tasks_tree
00000000         *UND*	00000000 zones_stats
00000cef g     F .text	000000ec kload
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 nrdy
00000000         *UND*	00000000 thread_sleep
00000ddb g     F .text	00000160 stats_init
00000000         *UND*	00000000 mutex_initialize
00000000         *UND*	00000000 sysinfo_set_item_gen_data
00000000         *UND*	00000000 sysinfo_set_subtree_fn



generic/src/console/kconsole.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 kconsole.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     F .text	000001d6 parse_int_arg
000001d6 l     F .text	00000141 parse_argument.constprop.1
00000000 l     O .rodata	0000000f __func__.3801
00000020 l     O .bss	00002800 history
00000000 l     O .bss	00000004 history_pos
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 str_ncpy
00000000         *UND*	00000000 symtab_addr_lookup
00000000         *UND*	00000000 str_uint64_t
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 symtab_print_search
00000000         *UND*	00000000 str_decode
00000000         *UND*	00000000 panic_common
00000317 g     F .text	00000071 kconsole_init
00000000         *UND*	00000000 cmd_init
00000388 g     F .text	000000fb cmd_register
00000008 g     O .data	00000008 cmd_lock
00000000         *UND*	00000000 spinlock_lock_debug
00000000 g     O .data	00000008 cmd_list
00000000         *UND*	00000000 str_cmp
00000000         *UND*	00000000 spinlock_unlock_debug
00000483 g     F .text	000000d1 cmdtab_enum
00000000         *UND*	00000000 str_length
00000000         *UND*	00000000 str_lcmp
00000000         *UND*	00000000 str_lsize
00000554 g     F .text	00000015 kconsole_check_poll
00000000         *UND*	00000000 stdin
00000000         *UND*	00000000 check_poll
00000569 g     F .text	0000121f kconsole
00000000         *UND*	00000000 indev_pop_character
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 putchar
00000000         *UND*	00000000 wstr_length
00000000         *UND*	00000000 wstr_remove
00000000         *UND*	00000000 wstr_linsert
00000000         *UND*	00000000 str_cpy
00000000         *UND*	00000000 free
00000000         *UND*	00000000 wstr_to_str
00000000         *UND*	00000000 str_nlength
00000000         *UND*	00000000 console_prompt_display_all_hints
00000000         *UND*	00000000 console_prompt_more_hints
00001788 g     F .text	00000024 kconsole_thread



generic/src/console/cmd.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cmd.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000012 cmd_physmem
00000012 l     F .text	00000012 cmd_tlb
00000024 l     F .text	00000012 cmd_cpus
00000036 l     F .text	00000012 cmd_version
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000048 l     F .text	00000014 desc_help
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
0000005c l     F .text	0000009b cmd_pio_write_32
000000f7 l     F .text	000000a2 cmd_pio_write_16
00000199 l     F .text	000000a0 cmd_pio_write_8
00000239 l     F .text	00000081 cmd_pio_read_32
000002ba l     F .text	00000086 cmd_pio_read_16
00000340 l     F .text	00000085 cmd_pio_read_8
000003c5 l     F .text	00000023 cmd_btrace
000003e8 l     F .text	0000018d run_test
00000575 l     F .text	0000001b cmd_zone
00000590 l     F .text	00000012 cmd_zones
000005a2 l     F .text	00000012 cmd_workq
000005b4 l     F .text	00000019 cmd_sysinfo
000005cd l     F .text	0000001b cmd_symaddr
000005e8 l     F .text	00000012 cmd_slabs
000005fa l     F .text	00000135 cmd_set4
0000072f l     F .text	00000012 cmd_sched
00000741 l     F .text	00000012 cmd_rcu
00000753 l     F .text	00000012 cmd_reboot
00000765 l     F .text	00000026 cmd_kill
0000078b l     F .text	00000023 cmd_ipc
000007ae l     F .text	000000f7 cmd_help
000008a5 l     F .text	0000000b cmd_halt
000008b0 l     F .text	000000af cmd_desc
0000095f l     F .text	0000002b cmd_continue
0000098a l     F .text	00000102 cmd_call3
00000a8c l     F .text	000000f1 cmd_call2
00000b7d l     F .text	000000e0 cmd_call1
00000c5d l     F .text	000000cb cmd_call0
00000d28 l     F .text	000000fa cmd_mcall0
00000e22 l     F .text	000002b7 run_bench.isra.0.part.1
000010d9 l     F .text	000000e2 cmd_bench
000011bb l     F .text	00000180 cmd_test
0000133b l     F .text	000000ee cmd_uptime
00000000 l     O .rodata	0000000b __func__.4143
00001429 l     F .text	00000077 cmd_threads
00000000 l     O .bss	00000101 flag_buf
000014a0 l     F .text	00000077 cmd_tasks
00000020 l     O .rodata	00000098 basic_commands
00000620 l     O .data	0000002c call0_info
00000000 l    d  .rodata	00000000 .rodata
000005e0 l     O .data	0000002c mcall0_info
00000560 l     O .data	0000002c call1_info
000004e0 l     O .data	0000002c call2_info
00000440 l     O .data	0000002c call3_info
00000820 l     O .data	0000002c continue_info
00000720 l     O .data	0000002c desc_info
00000400 l     O .data	0000002c halt_info
00000b20 l     O .data	0000002c help_info
000000c0 l     O .data	0000002c ipc_info
00000080 l     O .data	0000002c kill_info
000008a0 l     O .data	0000002c reboot_info
00000100 l     O .data	0000002c rcu_info
00000280 l     O .data	0000002c sched_info
00000660 l     O .data	0000002c set4_info
00000240 l     O .data	0000002c slabs_info
000006e0 l     O .data	0000002c symaddr_info
00000200 l     O .data	0000002c sysinfo_info
00000300 l     O .data	0000002c tasks_info
00000340 l     O .data	0000002c threads_info
00000860 l     O .data	0000002c uptime_info
00000140 l     O .data	0000002c workq_info
000001c0 l     O .data	0000002c zones_info
00000180 l     O .data	0000002c zone_info
000007e0 l     O .data	0000002c test_info
00000760 l     O .data	0000002c bench_info
000002c0 l     O .data	0000002c btrace_info
00000ae0 l     O .data	0000002c pio_read_8_info
00000aa0 l     O .data	0000002c pio_read_16_info
00000a60 l     O .data	0000002c pio_read_32_info
000009e0 l     O .data	0000002c pio_write_8_info
00000960 l     O .data	0000002c pio_write_16_info
000008e0 l     O .data	0000002c pio_write_32_info
000000ac l     O .data	00000014 kill_argv
000000ec l     O .data	00000014 ipc_argv
000001ac l     O .data	00000014 zone_argv
000002ec l     O .data	00000014 btrace_argv
0000032c l     O .data	00000014 tasks_argv
0000036c l     O .data	00000014 threads_argv
00000480 l     O .data	00000050 call3_argv
00000480 l     O .bss	00000101 call0_buf
00000360 l     O .bss	00000101 carg1_buf
00000240 l     O .bss	00000101 carg2_buf
00000120 l     O .bss	00000101 carg3_buf
00000520 l     O .data	0000003c call2_argv
000005a0 l     O .data	00000028 call1_argv
0000060c l     O .data	00000014 mcall0_argv
0000064c l     O .data	00000014 call0_argv
000006a0 l     O .data	00000028 set4_argv
000005a0 l     O .bss	00000101 set_buf
0000070c l     O .data	00000014 symaddr_argv
000006c0 l     O .bss	00000101 symaddr_buf
0000074c l     O .data	00000014 desc_argv
000007e0 l     O .bss	00000101 desc_buf
000007a0 l     O .data	00000028 bench_argv
00000900 l     O .bss	00000101 test_buf
0000080c l     O .data	00000014 test_argv
00000920 l     O .data	00000028 pio_write_32_argv
000009a0 l     O .data	00000028 pio_write_16_argv
00000a20 l     O .data	00000028 pio_write_8_argv
00000a8c l     O .data	00000014 pio_read_32_argv
00000acc l     O .data	00000014 pio_read_16_argv
00000b0c l     O .data	00000014 pio_read_8_argv
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 physmem_print
00000000         *UND*	00000000 tlb_print
00000000         *UND*	00000000 cpu_list
00000000         *UND*	00000000 version_print
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 km_unmap
00000000         *UND*	00000000 km_map
00000000         *UND*	00000000 thread_stack_trace
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 task_get_accounting
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 order_suffix
00000000         *UND*	00000000 zone_print_one
00000000         *UND*	00000000 zones_print_list
00000000         *UND*	00000000 workq_global_print_info
00000000         *UND*	00000000 sysinfo_dump
00000000         *UND*	00000000 symtab_print_search
00000000         *UND*	00000000 slab_print_list
00000000         *UND*	00000000 str_uint64_t
00000000         *UND*	00000000 symtab_addr_lookup
00000000         *UND*	00000000 sched_print_list
00000000         *UND*	00000000 rcu_print_stat
00000000         *UND*	00000000 reboot
00000000         *UND*	00000000 task_kill
00000000         *UND*	00000000 ipc_print_task
00000000         *UND*	00000000 cmd_lock
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 cmd_list
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 str_length
00000000         *UND*	00000000 log
00000000         *UND*	00000000 halt
00000000         *UND*	00000000 str_lcmp
00000000         *UND*	00000000 release_console
00000000         *UND*	00000000 stdin
00000000         *UND*	00000000 indev_pop_character
00000000         *UND*	00000000 arch_construct_function
00000000         *UND*	00000000 config
00000000         *UND*	00000000 cpus
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 thread_wire
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 thread_join_timeout
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 __udivdi3
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 free
00000000         *UND*	00000000 str_cmp
00000000         *UND*	00000000 tests
00000000         *UND*	00000000 uptime
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 thread_print_list
00000000         *UND*	00000000 task_print_list
00001517 g     F .text	00000030 cmd_initialize
00000000         *UND*	00000000 spinlock_initialize
00001547 g     F .text	00000091 cmd_init
00000000         *UND*	00000000 cmd_register
00000040 g     O .data	0000002c cpus_info
000003c0 g     O .data	0000002c physmem_info
00000380 g     O .data	0000002c tlb_info
00000000 g     O .data	0000002c version_info
00000000         *UND*	00000000 symtab_hints_enum
00000000         *UND*	00000000 cmdtab_enum
00000000         *UND*	00000000 tests_hints_enum



generic/src/ipc/kbox.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 kbox.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	000001de kbox_thread_proc
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 ipc_wait_for_call
00000000         *UND*	00000000 udebug_call_receive
00000000         *UND*	00000000 ipc_answer
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 udebug_task_cleanup
000001de g     F .text	000001ac ipc_kbox_cleanup
00000000         *UND*	00000000 ipc_answerbox_slam_phones
00000000         *UND*	00000000 thread_join_timeout
00000000         *UND*	00000000 ipc_cleanup_call_list
0000038a g     F .text	0000019b ipc_connect_kbox
00000000         *UND*	00000000 tasks_lock
00000000         *UND*	00000000 task_find_by_id
00000000         *UND*	00000000 phone_alloc
00000000         *UND*	00000000 ipc_phone_connect
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 task_destroy



generic/src/udebug/udebug.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 udebug.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
0000002c l     O .rodata	00000017 __func__.3309
00000014 l     O .rodata	00000015 __func__.3317
00000000 l     O .rodata	00000014 __func__.3346
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000003c udebug_task_init
00000000         *UND*	00000000 mutex_initialize
0000003c g     F .text	00000057 udebug_thread_initialize
00000000         *UND*	00000000 waitq_initialize
00000000         *UND*	00000000 condvar_initialize
00000093 g     F .text	00000271 udebug_stoppable_begin
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 ipc_answer
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 panic_common
00000304 g     F .text	000001a3 udebug_stoppable_end
00000000         *UND*	00000000 waitq_sleep_prepare
00000000         *UND*	00000000 waitq_sleep_timeout_unsafe
00000000         *UND*	00000000 waitq_sleep_finish
000004a7 g     F .text	00000011 udebug_before_thread_runs
000004b8 g     F .text	00000237 udebug_syscall_event
000006ef g     F .text	00000182 udebug_thread_b_event_attach
00000000         *UND*	00000000 thread_attach
00000871 g     F .text	000000ff udebug_thread_e_event
00000970 g     F .text	00000199 udebug_task_cleanup
00000000         *UND*	00000000 mutex_locked
00000000         *UND*	00000000 condvar_broadcast
00000000         *UND*	00000000 waitq_wakeup
00000b09 g     F .text	00000132 udebug_thread_fault
00000000         *UND*	00000000 _condvar_wait_timeout



generic/src/udebug/udebug_ops.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 udebug_ops.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000178 udebug_begin
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 condvar_broadcast
00000178 g     F .text	0000005e udebug_end
00000000         *UND*	00000000 udebug_task_cleanup
000001d6 g     F .text	00000083 udebug_set_evmask
00000259 g     F .text	00000188 udebug_go
00000000         *UND*	00000000 threads_lock
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 thread_exists
00000000         *UND*	00000000 irq_spinlock_exchange
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 waitq_wakeup
000003e1 g     F .text	000001f0 udebug_stop
00000000         *UND*	00000000 ipc_answer
000005d1 g     F .text	000001a9 udebug_thread_read
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 free
0000077a g     F .text	0000009f udebug_name_read
00000000         *UND*	00000000 str_size
00000819 g     F .text	000001ee udebug_args_read
00000a07 g     F .text	000001ee udebug_regs_read
00000bf5 g     F .text	000000ad udebug_mem_read
00000000         *UND*	00000000 copy_from_uspace



generic/src/udebug/udebug_ipc.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 udebug_ipc.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata	00000000 .rodata
00000034 l     O .rodata	00000018 __func__.3426
0000004c l     O .rodata	00000019 __func__.3417
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000007 udebug_request_preprocess
00000007 g     F .text	000002d1 udebug_call_receive
00000000         *UND*	00000000 ipc_answer
00000000         *UND*	00000000 as_get_area_info
00000000         *UND*	00000000 udebug_mem_read
00000000         *UND*	00000000 udebug_end
00000000         *UND*	00000000 udebug_set_evmask
00000000         *UND*	00000000 udebug_args_read
00000000         *UND*	00000000 udebug_regs_read
00000000         *UND*	00000000 udebug_thread_read
00000000         *UND*	00000000 udebug_name_read
00000000         *UND*	00000000 udebug_go
00000000         *UND*	00000000 udebug_stop
00000000         *UND*	00000000 udebug_begin
00000000         *UND*	00000000 panic_common



test/test.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 test.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000009b tests_hints_enum
00000000         *UND*	00000000 str_length
00000000         *UND*	00000000 str_lcmp
00000000         *UND*	00000000 str_lsize
00000000 g     O .data	00000180 tests
00000000         *UND*	00000000 test_atomic1
00000000         *UND*	00000000 test_avltree1
00000000         *UND*	00000000 test_btree1
00000000         *UND*	00000000 test_cht1
00000000         *UND*	00000000 test_mips1
00000000         *UND*	00000000 test_fault1
00000000         *UND*	00000000 test_falloc1
00000000         *UND*	00000000 test_falloc2
00000000         *UND*	00000000 test_mapping1
00000000         *UND*	00000000 test_slab1
00000000         *UND*	00000000 test_slab2
00000000         *UND*	00000000 test_semaphore1
00000000         *UND*	00000000 test_semaphore2
00000000         *UND*	00000000 test_rcu1
00000000         *UND*	00000000 test_workqueue_all
00000000         *UND*	00000000 test_workqueue3quit
00000000         *UND*	00000000 test_print1
00000000         *UND*	00000000 test_print2
00000000         *UND*	00000000 test_print3
00000000         *UND*	00000000 test_print4
00000000         *UND*	00000000 test_print5
00000000         *UND*	00000000 test_thread1
00000000         *UND*	00000000 test_smpcall1
00000001       O *COM*	00000001 test_quiet



test/atomic/atomic1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 atomic1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000000aa test_atomic1



test/btree/btree1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 btree1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000e40 test_btree1
00000000         *UND*	00000000 btree_create
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 btree_insert
00000000         *UND*	00000000 btree_remove
00000000         *UND*	00000000 btree_print
00000000         *UND*	00000000 printf



test/cht/cht1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cht1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000023 val_key_hash
00000023 l     F .text	00000014 val_equal
00000037 l     F .text	00000011 val_key_equal
00000048 l     F .text	0000000e stress_hash
00000056 l     F .text	0000000b stress_key_hash
00000061 l     F .text	00000014 stress_equal
00000075 l     F .text	00000011 stress_key_equal
00000086 l     F .text	00000018 stress_rm_callback
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
0000009e l     F .text	000001b1 resize_stresser
0000024f l     F .text	00000068 val_rm_callback
00000024 l     O .rodata	00000010 __func__.3434
000002b7 l     F .text	0000007f val_hash
00000018 l     O .rodata	00000009 __func__.3415
00000336 l     F .text	000003b1 op_stresser
00000000 l     O .rodata	0000000c __func__.3548
00000014 l     O .data	00000014 val_ops
0000000c l     O .rodata	0000000a __func__.3600
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 free
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 cht_insert
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 cht_remove_key
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 thread_sleep
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 cht_remove_item
00000000         *UND*	00000000 cht_insert_unique
00000000         *UND*	00000000 cht_find
00000000         *UND*	00000000 _rcu_preempted_unlock
000006e7 g     F .text	00000c0d test_cht1
00000000         *UND*	00000000 cht_create_simple
00000000         *UND*	00000000 cht_find_lazy
00000000         *UND*	00000000 cht_destroy
00000000 g     O .data	00000014 stress_ops
00000000         *UND*	00000000 config
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 cpus
00000000         *UND*	00000000 thread_wire
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 thread_join_timeout
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 cht_find_next



test/avltree/avltree1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 avltree1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	000001f2 alloc_avltree_node_prepare
00000020 l     O .bss	00000960 avltree_nodes
00000000 l     O .bss	00000004 first_free_node
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
000001f2 l     F .text	000008da test_tree_balance
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000acc l     F .text	00000674 test_tree_parents
00001140 l     F .text	000008cf print_tree_structure_flat
00000980 l     O .bss	0000000c avltree
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 printf
00001a0f g     F .text	00003818 test_avltree1
00000000         *UND*	00000000 avltree_insert
00000000         *UND*	00000000 avltree_delete
00000000         *UND*	00000000 avltree_delete_min



test/fault/fault1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 fault1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000014 test_fault1



test/mm/falloc1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 falloc1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000021b test_falloc1
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 frame_alloc
00000000         *UND*	00000000 frame_free
00000000         *UND*	00000000 free
00000000         *UND*	00000000 printf



test/mm/falloc2.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 falloc2.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     F .text	00000388 falloc
00000000 l     O .bss	00000004 thread_fail
00000004 l     O .bss	00000004 thread_count
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 frame_alloc
00000000         *UND*	00000000 frame_free
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 free
00000388 g     F .text	000000d3 test_falloc2
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 thread_sleep



test/mm/mapping1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 mapping1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000263 test_mapping1
00000000         *UND*	00000000 frame_alloc
00000000         *UND*	00000000 km_map
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 km_unmap
00000000         *UND*	00000000 frame_free
00000000         *UND*	00000000 printf



test/mm/slab1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 slab1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	00000148 slabtest
00000020 l     O .bss	00006000 thr_data
0000001c l     O .bss	00000004 thr_cache
00000000 l     O .bss	0000001c thr_sem
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000148 l     F .text	0000030e testit.constprop.0
00006020 l     O .bss	00001000 data
00000456 l     F .text	0000030e testit.constprop.2
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 slab_alloc
00000000         *UND*	00000000 slab_free
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 semaphore_up
00000000         *UND*	00000000 slab_cache_create
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 slab_cache_destroy
00000764 g     F .text	00000460 test_slab1
00000000         *UND*	00000000 semaphore_initialize
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 _semaphore_down_timeout



test/mm/slab2.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 slab2.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     F .text	000002de totalmemtest
000002de l     F .text	00000164 multitest
00000020 l     O .bss	0000001c thread_starter
00000000 l     O .bss	00000020 starter_mutex
00000058 l     O .bss	00000004 thr_cache
0000003c l     O .bss	0000001c thr_sem
00000442 l     F .text	00000278 slabtest
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 slab_cache_create
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 slab_alloc
00000000         *UND*	00000000 slab_free
00000000         *UND*	00000000 slab_cache_destroy
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 slab_print_list
00000000         *UND*	00000000 condvar_initialize
00000000         *UND*	00000000 mutex_initialize
00000000         *UND*	00000000 semaphore_initialize
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 thread_sleep
00000000         *UND*	00000000 condvar_broadcast
00000000         *UND*	00000000 _semaphore_down_timeout
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 _condvar_wait_timeout
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 semaphore_up
000006ba g     F .text	00000075 test_slab2



test/synch/semaphore1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 semaphore1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000070 producer
00000008 l     O .bss	0000001c can_start
00000024 l     O .bss	0000001c sem
00000004 l     O .bss	00000004 items_produced
00000070 l     F .text	00000070 consumer
00000000 l     O .bss	00000004 items_consumed
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 waitq_sleep_timeout
00000000         *UND*	00000000 _semaphore_down_timeout
00000000         *UND*	00000000 thread_usleep
00000000         *UND*	00000000 semaphore_up
000000e0 g     F .text	00000226 test_semaphore1
00000000         *UND*	00000000 waitq_initialize
00000000         *UND*	00000000 semaphore_initialize
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 thread_sleep
00000000         *UND*	00000000 waitq_wakeup



test/synch/semaphore2.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 semaphore2.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	00000278 consumer
00000000 l     O .bss	0000001c can_start
00000000 l     O .data	00000004 seed
0000001c l     O .bss	0000001c sem
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 waitq_sleep_timeout
00000004 g     O .data	00000008 sem_lock
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 _semaphore_down_timeout
00000000         *UND*	00000000 thread_usleep
00000000         *UND*	00000000 semaphore_up
00000000         *UND*	00000000 printf
00000278 g     F .text	0000014d test_semaphore2
00000000         *UND*	00000000 waitq_initialize
00000000         *UND*	00000000 semaphore_initialize
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 waitq_wakeup



test/synch/workqueue2.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 workqueue2.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	00000024 basic_test_work
00000004 l     O .bss	00000004 basic_done
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000024 l     F .text	000007a7 test_custom_workq_impl
00000020 l     O .bss	00000028 call_cnt
000007cb l     F .text	00000252 reproduce
00000000 l     O .rodata	0000000d __func__.3392
00000008 l     O .bss	00000010 basic_work
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 workq_create
00000000 g     O .bss	00000004 workq
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 workq_enqueue
00000000         *UND*	00000000 thread_usleep
00000000         *UND*	00000000 workq_stop
00000000         *UND*	00000000 workq_destroy
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 free
00000000         *UND*	00000000 panic_common
00000a1d g     F .text	00000140 test_workqueue_all
00000000         *UND*	00000000 workq_global_enqueue
00000000         *UND*	00000000 thread_sleep
00000000         *UND*	00000000 test_workqueue3



test/synch/workqueue3.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 workqueue3.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	00000631 run_workq_core
00000000 l     O .bss	00000028 call_cnt
00000631 l     F .text	0000022f reproduce
00000000 l     O .rodata	0000000d __func__.3392
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 workq_global_enqueue
00000000         *UND*	00000000 thread_usleep
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 free
00000000         *UND*	00000000 panic_common
00000860 g     F .text	0000008a test_workqueue3
000008ea g     F .text	00000093 test_workqueue3quit



test/synch/rcu1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 rcu1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000c reader_unlocked
0000000c l     F .text	0000000f barrier_callback
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
0000001b l     F .text	00000022 preempted_unlocked
0000003d l     F .text	00000023 stress_cb
00000060 l     F .text	0000009f nop_updater
000000ff l     F .text	00000010 count_cb
0000000c l     O .bss	00000004 nop_callbacks_cnt
0000010f l     F .text	00000023 seq_cb
00000000 l     O .bss	00000004 max_upd_done_time
00000132 l     F .text	000000b5 one_cb_reader
00000357 l     F .text	0000008b one_cb_done
000001e7 l     F .text	00000079 expedite_cb
00000260 l     F .text	000000a5 stress_updater
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000305 l     F .text	00000052 get_seq.part.1
00000118 l     O .rodata	00000008 __func__.3562
00000008 l     O .bss	00000004 one_cb_is_done
00000090 l     O .rodata	0000000c __func__.3631
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	00000029 run_thread.part.4
0000012c l     O .rodata	0000000b __func__.3516
00000029 l     F .text.unlikely	0000002c run_one.part.5
00000138 l     O .rodata	00000008 __func__.3543
00000055 l     F .text.unlikely	0000002c join_one.part.6
00000120 l     O .rodata	00000009 __func__.3547
000003e2 l     F .text	000001f7 do_synch
000000a0 l     O .bss	00000004 one_idx
00000020 l     O .bss	00000080 thread
00000aca l     F .text	00000068 synch_reader
000005d9 l     F .text	000000b4 do_barrier
0000068d l     F .text	00000107 do_expedite
00000794 l     F .text	00000050 stress_reader
000007e4 l     F .text	00000085 nop_reader
00000869 l     F .text	000000a6 long_reader
0000090f l     F .text	000001bb seq_func
00000000 l     O .data	00000004 cur_time
00000004 l     O .bss	00000004 seq_test_result
00000b32 l     F .text	000000d1 preempted_reader_prev
0000009c l     O .rodata	00000016 __func__.3726
00000c03 l     F .text	000000eb preempted_reader_inside_cur
000000b4 l     O .rodata	0000001c __func__.3731
00000cee l     F .text	000000e2 preempted_reader_next1
000000e8 l     O .rodata	00000017 __func__.3741
00000dd0 l     F .text	00000062 reader_exit
00000e32 l     F .text	000000ec preempted_reader_cur
000000d0 l     O .rodata	00000015 __func__.3736
00000f1e l     F .text	00000100 preempted_reader_next2
00000100 l     O .rodata	00000017 __func__.3746
0000101e l     F .text	00000407 do_seq_check
00001425 l     F .text	00000195 do_one_cb
000015ba l     F .text	000001f0 do_one_reader_preempt
000017aa l     F .text	00000077 do_reader_preempt
00001821 l     F .text	000001fa do_reader_exit
00001a1b l     F .text	000002f1 do_nop_callbacks
00001d0c l     F .text	000002a9 do_long_readers
00001fb5 l     F .text	000002a9 do_nop_readers
0000225e l     F .text	00000441 do_stress
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 delay
00000000         *UND*	00000000 free
00000000         *UND*	00000000 rcu_call
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 thread_sleep
00000000         *UND*	00000000 _rcu_preempted_unlock
00000000         *UND*	00000000 _rcu_call
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 config
00000000         *UND*	00000000 cpus
00000000         *UND*	00000000 thread_wire
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 scheduler
00000000         *UND*	00000000 thread_usleep
00000000         *UND*	00000000 rcu_synchronize
00000000         *UND*	00000000 thread_join_timeout
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 rcu_barrier
00000000         *UND*	00000000 bin_order_suffix
0000269f g     F .text	000001b7 test_rcu1
00000000         *UND*	00000000 rcu_completed_gps
00000140 g     O .rodata	00000004 magic_cookie



test/print/print1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 print1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000001a4 test_print1
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 printf



test/print/print2.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 print2.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000002c7 test_print2
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 printf



test/print/print3.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 print3.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000001da test_print3
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 snprintf
00000000         *UND*	00000000 printf



test/print/print4.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 print4.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str4.4	00000000 .rodata.str4.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000003fd test_print4
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 printf



test/print/print5.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 print5.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000000bb test_print5
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 printf



test/thread/thread1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 thread1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	0000007d threadtest
00000004 l     O .bss	00000004 finish
00000000 l     O .bss	00000004 threads_finished
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 thread_usleep
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 printf
0000007d g     F .text	00000100 test_thread1
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 thread_sleep



test/smpcall/smpcall1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 smpcall1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000131 test_thread
00000131 l     F .text	00000061 inc
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .rodata	00000004 __func__.3387
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 config
00000000         *UND*	00000000 smp_call
00000000         *UND*	00000000 smp_call_async
00000000         *UND*	00000000 smp_call_wait
00000000         *UND*	00000000 thread_usleep
00000000         *UND*	00000000 panic_common
00000192 g     F .text	000005cf test_smpcall1
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 cpus
00000000         *UND*	00000000 thread_wire
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 thread_join_timeout
00000000         *UND*	00000000 thread_detach



test/debug/mips1_skip.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 mips1_skip.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000007 test_mips1



test/mm/purge1_skip.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 purge1_skip.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000007 test_purge1


